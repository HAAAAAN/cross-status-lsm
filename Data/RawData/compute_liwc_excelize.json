[{"repo": "excelize", "type": "elite", "title": "", "number of text": 461, "text": "  Hi @m3ng9i, thanks for your feedback,  please try to upgrade the library with the master branch code. Git tag for v2 will be updated on the next release.  LGTM, thanks @mqy.  Hi @iwinstar1980, thanks for your issue. I will adding support for this feature later. I'll certainly accept that patch if somebody did that. I close this and merge it into issue #41 is still discussing this issue.  LGTM, thanks @zaddok.  Please check your network connection status.  The new version can no longer support Go 1.9. This change will be included in the next version 2.0.2. I suggest simply break compatibility and update README notes.  Hi, @mlh758, we need to ensure the consistency of worksheet index, worksheet name with the function `GetSheetMap`'s return. LGTM, thanks @mlh758.  LGTM, thanks @WuXu1995!  LGTM, thank you.  Excellent!  Hi @exfly, this issue has been fixed. Please try to upgrade the library with the master branch code.  Hi @PengWuLin, please follow by issue template provide code and steps to reproduce the issue.  Hi @AngangGuo, please follow by issue template provide code and steps to reproduce the issue.  LGTM, thanks @Sustainedhhh.   LGTM, thanks @dongkai16z.  Hi @GZLHZ, thanks for your feedback. This issue has been fixed. Please try to upgrade the library with the master branch code, but I don't recommend calling the `Save()` method in the iteration, which will cause more heap memory allocated.  Hi @AngangGuo, thanks for your feedback. This issue has been fixed. Please try to upgrade the library with the master branch code.  Hi @artsb,  thanks for your feedback. Please provide code and testing file attachment if you can.  Hi @artsb, thanks for your issue. I have fixed it. Please try to upgrade the library with the master branch code.  Hi @HarryWang29, thanks for your feedback. Please provide code and file attachment if you can. Hi @HarryWang29, the [build-in number format](https://xuri.me/excelize/en/style.html#number_format) index used by the `A1` cell in the worksheet is `14`. The result obtained by your code is consistent with what the Office Excel&trade; application opens to display this spreadsheet file. You can use `NewStyle` and `SetCellStyle` to [modify the number format of the cell](https://xuri.me/excelize/en/cell.html#SetCellStyle) as needed, but this will also affect the display of the spreadsheet in the Office Excel&trade; application.   Hi @gitarte, thanks for your issue. I have fixed it. Please try to upgrade the library with the master branch code.   Hi @veliev, thanks for your issue. You can set zoom scale by [`SetSheetViewOptions`](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#File.SetSheetViewOptions) currently, and I will add FitToPagesWide/Tall support for it later.  Hi @dolmen, [GoDoc](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize) generates the document based on the code of the current master branch, and I created the [documentation website](https://xuri.me/excelize) to describe different versions of the API.  Hi @OFAH, thanks for your feedback, I have tested by your code and it works well on Microsoft Excel&trade;, which application are you using?  Hi @yclients-smart-box-reader, the excelize library doesn't support this feature currently, you can read the file and write content in CSV format on your own.   Hi @mickel917, thanks for your feedback, I have tested and it works well at master version code, please provides code and file attachment if you can.   Hi @RajatBanerjee, thanks for your feedback, could you upload the .xlsx attachment?   Hi @GinSanaduki, thanks for your issue. I have fixed it. Please try to upgrade the library with the master branch code.   HI @tianhai82, thanks for your issue. I have fixed it. Please try to upgrade the library with the master branch code.  I have tested on `Apache OpenOffice 4.1.6 Build: 9790 Rev. 1844436`. this issue also occurred when using Apache OpenOffice open that file created by Microsoft Office Excel&trade; application. Apache OpenOffice will not hide worksheet when the first sheet element in the sheets of the `workbook.xml` in a hidden state. We need to adjust workbook view settings and worksheets orders in the `workbook.xml` to ensure compatibility with other spreadsheet software, such as Apache OpenOffice&trade;. When the first `sheet` in the `sheets` in a `hidden` state, swap it with the first unhidden sheet, and the `activeTab` in `workbookView` should be recalculated at the same time, for example:\r\n\r\n```xml\r\n   <bookViews>\r\n       <workbookView activeTab=\"2\"></workbookView>\r\n   </bookViews>\r\n   <sheets>\r\n       <sheet name=\"Sheet1\" sheetId=\"1\" r:id=\"rId1\" state=\"hidden\"></sheet>\r\n       <sheet name=\"Sheet2\" sheetId=\"2\" r:id=\"rId4\" state=\"hidden\"></sheet>\r\n       <sheet name=\"Sheet3\" sheetId=\"3\" r:id=\"rId5\"></sheet>\r\n   </sheets>\r\n```\r\n\r\nto\r\n\r\n```xml\r\n   <bookViews>\r\n       <workbookView activeTab=\"0\"></workbookView>\r\n   </bookViews>\r\n   <sheets>\r\n       <sheet name=\"Sheet3\" sheetId=\"3\" r:id=\"rId5\"></sheet>\r\n       <sheet name=\"Sheet1\" sheetId=\"1\" r:id=\"rId1\" state=\"hidden\"></sheet>\r\n       <sheet name=\"Sheet2\" sheetId=\"2\" r:id=\"rId4\" state=\"hidden\"></sheet>\r\n   </sheets>\r\n```\r\nBut this modification will break the original sheet order. When you use the SetSheetVisible method to set the worksheet to be visible back again, the worksheet order will be inconsistent. So I decide don't to fix this issue. User should be avoided to set the first worksheet to a hidden state.  Hi @GinSanaduki, thanks for your issue. I have fixed it. Please try to upgrade the library with the master branch code.   HI @dmp73, thanks for your issue. Use this method with caution, which will affect changes in references such as formulas, charts, and so on. If there is any referenced value of the worksheet, it will cause a file error when you open it. The excelize only partially updates these references currently. I will add formula adjust support for this function later.  Hi @dmp73, I have fixed it. Please try to upgrade the library with the master branch code.  Hi @dmp73, thanks for your feedback. I have fixed it. Please try to upgrade the library with the master branch code.  Hi @OFAH, thanks for your feedback, please provides test code, file attachment and environment information if you can.  Hi @OFAH, thanks for your issue. I have fixed it. Please try to upgrade the library with the master branch code.  Hi @Abin01, please follow by issue template provide code and steps to reproduce the issue.  Hi @Augl, thanks for your issue. I have to init set and get doc properties support.  Hi @miliardt , I have tested and it works well at master version code, please provides code and file attachment if you can.  Hi @valasek , thanks for your issue. I have fixed it. Please try to upgrade the library with the master branch code. @029vaibhav I'm not sure the problem you're having is caused by the same cause, please provides code and file attachment if you can.  Hi @bettersun, if you doesn't specify the `fill` field in `color` settings, the shape will be displayed transparently. For example:\r\n\r\n```go\r\nf.AddShape(\"Sheet1\", \"A1\", `{\"type\":\"rect\",\"paragraph\":[{\"text\":\"Rectangle\",\"font\":{\"color\":\"CD5C5C\"}},{\"text\":\"Shape\",\"font\":{\"bold\":true,\"color\":\"2980B9\"}}]}`)\r\n```   Hi @dictor66, I have tested and it works well at rev. eca66180f191ba1209e5d50859be51eec7954281, have you tried using the latest code on the master branch? or provide a .xlsx file attachment. \u00a0 Hi @dictor66, I have also tested on version 623375780586cbd323dc899e17d7235ac610505f and it works well, could you upload the attachment that causes panic to reads? Hi @csg2008, please send desensitized document attachments to `xuri.me _at_ gmail.com`. Hi @csg2008, thanks for your feedback. I have fixed it. Please try to upgrade the library with the master branch code.  Hi @eurosoll, this lib doesn't support change page margins currently, and I'll add new API later.  Hi @robinsoon, thanks for your issue. Also reference #20, #29. We can continue to optimize and improve performance, I will consider adding a stream R/W or flush windows to decrease memory usages, and any suggestion is welcome  Hi @vmpartner, thanks for your issue. I have fixed it. Please try to upgrade the library with the master branch code.  Hi @toplinuxsir, please reference #395, manually active module mode.  Hi @thnt, I have tested and it works well on the latest version, please provides the version of excelize and Go you are using. Hi @lyl-lucas, the `v2` branch is synced with master now.  Hi @byteman, thanks for your issue. if the worksheet name referenced by the creation chart contains the character \"-\", declare the worksheet name in single quotation marks in the parameter. For example:\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\r\n\t\"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\tcategories := map[string]string{\"A2\": \"Small\", \"A3\": \"Normal\", \"A4\": \"Large\", \"B1\": \"Apple\", \"C1\": \"Orange\", \"D1\": \"Pear\"}\r\n\tvalues := map[string]int{\"B2\": 2, \"C2\": 3, \"D2\": 3, \"B3\": 5, \"C3\": 2, \"D3\": 4, \"B4\": 6, \"C4\": 7, \"D4\": 8}\r\n\tf := excelize.NewFile()\r\n\tf.NewSheet(\"Sheet-1\")\r\n\tfor k, v := range categories {\r\n\t\tf.SetCellValue(\"Sheet-1\", k, v)\r\n\t}\r\n\tfor k, v := range values {\r\n\t\tf.SetCellValue(\"Sheet-1\", k, v)\r\n\t}\r\n\terr := f.AddChart(\"Sheet-1\", \"E1\", `{\"type\":\"col3DClustered\",\"series\":[{\"name\":\"'Sheet-1'!$A$2\",\"categories\":\"'Sheet-1'!$B$1:$D$1\",\"values\":\"'Sheet-1'!$B$2:$D$2\"},{\"name\":\"'Sheet-1'!$A$3\",\"categories\":\"'Sheet-1'!$B$1:$D$1\",\"values\":\"'Sheet-1'!$B$3:$D$3\"},{\"name\":\"'Sheet-1'!$A$4\",\"categories\":\"'Sheet-1'!$B$1:$D$1\",\"values\":\"'Sheet-1'!$B$4:$D$4\"}],\"title\":{\"name\":\"Fruit 3D Clustered Column Chart\"}}`)\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\treturn\r\n\t}\r\n\t// Save xlsx file by the given path.\r\n\terr = f.SaveAs(\"./Book1.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t}\r\n}\r\n```  Hi @RafaelGomides, please manually active module mode in the `.zshrc`:  `export GO111MODULE=on` and try again.  Hi @gendseo, thanks for your issue. I have added new function `SetHeaderFooter()` ,  please reference [godoc](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#File.SetHeaderFooter) to use this.   Hi @NMFR, please delete go mod cache `$GOPATH/pkg/mod/cache` and try again.  Hi @let-s-go, thanks for your issue. I have fixed that and tested on `Android 8.0.0, WPS Office 11.5.5.4267f970f0-cn00571`. But note that the excelize library doesn't guarantee compatibility with WPS Office currently.   Hi @mlh758, sorry for my late reply, the struct `font` has been removed for uniform, replace with `xlsxFont`. Could you update this patch? thank you.  LGTM, thanks @mlh758.   Hi @ballyang, thanks for your issue. We can get the version by `git log`.   Hi @ballyang, please provides the version of excelize and Go you are using, and the xlsx file attachment if you can.  Also reference #372. Hi @ballyang, thanks for your issue, I have fixed it.  LGTM, thanks @yoshhiide.   LGTM, thanks @aplulu.   Hi @Ranxiu, thanks for your issue. Please provides the version of excelize and Go you are using, and the xlsx file attachment if you can.  Hi @yoshhiide, thanks for you PR. I tested the size of the inserted image base on the version [eca6618](https://github.com/360EntSecGroup-Skylar/excelize/tree/eca66180f191ba1209e5d50859be51eec7954281) and it seems works well. Could you provide the code to reproduce the problem?  LGTM, thanks @yoshhiide.   Thanks for your issue. I close this and merge it into the issue #229 is still discussing this feature.  Hi @alexaung, thanks for your issue. [PR #356](https://github.com/360EntSecGroup-Skylar/excelize/pull/356) removes the two functions `ToAlphaString` and `TitleToNumber`, adding 4 functions [ColumnNumberToName](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#ColumnNumberToName), [CellNameToCoordinates](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#CellNameToCoordinates), [ColumnNameToNumber](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#ColumnNameToNumber) and [CoordinatesToCellName](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#CoordinatesToCellName) to replace them. All incompatible API changes will be included in next release `v2.0.0` and prompting upgrade API compatibility for the existing users.  Hi @itPiligrim, thanks for your issue. I have added tiff image support for AddPicture function on master code, this feature will be added on next release, the xlsx file doesn't support BMP image, please convert image by your own.   Hi @GinSanaduki, thanks for your issue. I have tested based on your code and it works well. Which version of Excelize and Go are you using?    Hi @nateglims @GinSanaduki,  I have fixed it, but the issues of duplicate images haven't been confirmed yet.  Hi @billytoe, thanks for your issue. Please provides the version of excelize and Go you are using, and the xlsx file attachment if you can. Note that [in the godoc](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#File.RemoveRow): use `RemoveRow` with caution, which will affect changes in references such as formulas, charts, and so on. If there is any referenced value of the worksheet, it will cause a file error when you open it. The excelize only partially updates these references currently. HI @billytoe, please follow by issue template provide code and steps to reproduce the issue.  LGTM, thanks @mlh758.   Hi @exfly, thanks for your issue. I have tested based on the following code and it works well. Could you provide the code to reproduce the issue?\r\n\r\nCreate a new file\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\r\n\t\"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\tf := excelize.NewFile()\r\n\tf.SetCellValue(\"Sheet2\", \"A2\", 1)\r\n\tf.NewSheet(\"Sheet2\")\r\n\terr := f.SaveAs(\"issue_370.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t}\r\n}\r\n```\r\n\r\nOpen exists file\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\r\n\t\"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\tf,  err := excelize.OpenFile(\"issue_370.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t}\r\n\tf.SetCellValue(\"Sheet3\", \"A2\", 1)\r\n\tf.NewSheet(\"Sheet3\")\r\n\terr = f.SaveAs(\"issue_370_2.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t}\r\n}\r\n```  This PR will cause an additional worksheet to be created when the read API is called on a worksheet that does not exist. I have added a check to the API for the existence of the worksheet.  Thanks for your issue. I close this and merge it into issue #44 is still discussing this feature.  Hi @suryateja619, thanks for your PR. But I don't think this is a very necessary method. In the design principle of the class library, there is only one way to implement a feature. So let the user handle this with simple functions.    > **Description**\r\n> \r\n> #366 Removed ToAlphaString, which is a breaking change, and replaced it with ColumnNumberToName. The [documentation](https://github.com/360EntSecGroup-Skylar/excelize/blob/master/lib.go#L159) however, still has the original name in it. It also changed the signature from a string return value to a `(string, error)` return value to guard against indexes less than one. This doesn't seem necessary.\r\n> \r\n> It also appears to have changed the zero based index to a one based index. What was the motivation for these changes?\r\n> \r\n> Will there be a changelog that lays out other things that are now broken from that PR? It would be helpful to know what the upgrade path looks like.\r\n\r\nThe `ToAlphaString` in the document has been updated to `ColumnNumberToName`\r\nThe motivation for consistent col/row index, refer to issues #349, #350 and #356\r\nAll API change will be included in the next version 1.5.0 and prompting upgrade API compatibility for the existing users in release notes > `AddPicture` is doing some weird things now. Prior to this change I was merging cells `A1` to `B4` then placed an image in cell `A1` with some x and y scaling. It sat nicely in the merged cell. After this change, it no longer sits in the cell but looks like the top left corner is centered now instead. Also, there appear to be infinite copies of the image.\r\n> \r\n> ![image](https://user-images.githubusercontent.com/4331955/54642637-1bcabd00-4a63-11e9-8e85-45d10357ce38.png)\r\n> \r\n> If I click and drag the image from where it sits originally, more appear and they just keep appearing!\r\n\r\nConfirm that this is a problem caused by PR #356 and I have fixed it. > I pulled down your changes and tested them. Images are indeed going to the right place again. However, I'm still seeing the infinite image duplication issue. If I switch back to the previous version of excelize and drag an image around the workbook it simply moves the image. Now a copy is created and moved instead.\r\n\r\nI didn't reproduce this situation. Could you provide file attachments and codes? > Since you're introducing several breaking changes you might want to consider bumping the library to v2. Most consumers probably assume you're following semantic versioning and would be surprised to have their code not compile after taking a minor version upgrade.\r\n> \r\n> Thank you for Fixing the picture thing!\r\n\r\nAfter consideration, I think all incompatible  API changes will be included in `v2.0.0`. If so we can modify function signature to using return error instead of panic. Kind notice @albenik  Thanks for the insight @mlh758. That's a useful feature. I'll certainly accept that patch if somebody did that. we can store the hash of the image in the `File` object for reducing the impact on performance.  Thanks for your issue. Please provide the code that call the NewStyle function in your app. If you are adding style to an existing file, please provide a xlsx file attachment.   Thanks for your issue. I close this and merge it into the issue #320 is still discussing this feature.  LGTM, thanks @Kimxu.   Hi @albenik, thanks for your PR. I recommend changing the existing functions instead of add new series functions, then releasing the new version prompting upgrade API compatibility  for the existing user, eliminating two different line number indexes.  This change will be included in the next version 1.5.0. I suggest simply break compatibility and place a README notes.  Hi @daichirata, thanks for your issue. This library not support remove Data Validation currently and I have added this feature request to the [Roadmap](https://github.com/360EntSecGroup-Skylar/excelize/wiki).   Hi @ArmandoZepeda, thanks for your issue. I have fixed the issue corrupted xlsx after deleting formula of cell.\r\n\r\nHowever, when using `DuplicateRow` and `DuplicateRowTo`, it is still possible to cause file corruption. I have noted this potential problem in the documentation for these two functions.\r\n\r\nSince that which will affect changes in references such as formulas, charts, and so on. If there is any referenced value of the worksheet, it will cause a file error when you open it. The excelize only partially updates these references currently.\r\n\r\nI think that solving this problem requires the completion of the function [adjustHelper](https://github.com/360EntSecGroup-Skylar/excelize/blob/0072bb731043f89ce978778b9d7fdc6160e29de0/excelize.go#L196-L217). I'll certainly accept that patch if somebody did that.  Hi @tobiassoppa, thanks for your issue. I have fixed it.   Hi @miguelpragier, thanks for your issue. Excelize provides a set of functions [`TitleToNumber`](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#TitleToNumber) and [`ToAlphaString`](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#ToAlphaString), which can be used to convert integer and Excel table columns or to get columns based on the offset. The function `NextColumn` and their functions are duplicated, so I don't recommend adding this feature.  Hi @dolmen, great work. I'll merge this is as is.  Hi @tianhai82, since cell `A2` has a number format set, `GetRows` will return formatted value.  Thanks for your issue. I close this and merge it into issue #44 is still discussing this feature.  LGTM, thanks @rentiansheng   Thanks for your issue. Please provide file attachments If you can.  LGTM, thanks @kkxkkxkkgh.   I suggest that to keep the Travis-CI checks for old version Go.  A nice addition. Thanks, @albenik.  LGTM, thanks.  LGTM, thanks.  Hi @tealeg, thanks for your proposal, I have added tealeg/xlsx copyright statement in [README](https://github.com/360EntSecGroup-Skylar/excelize#licenses) and [LICENSE](https://github.com/360EntSecGroup-Skylar/excelize/blob/master/LICENSE) file.   Yes, in order to solve this problem we need to check and update all references (such as `xl/charts/chart*.xml`) that to the workbook when we rename the workbook.  A nice addition. Thank you.  Hi @rafaelmiti, thanks for your pull request. I have made some change base on yours commit. The function `GetRows()` will return the number of valid rows now.   Hi @greymanking, this library doesn't support to set page orientation currently. I will add this feature later. Hi @greymanking, excelize support set page orientation now, you can set that like this:\r\n\r\n```go\r\nxlsx := excelize.NewFile()\r\nerr := xlsx.SetPageLayout(\r\n\t\"Sheet1\",\r\n\texcelize.PageLayoutOrientation(excelize.OrientationLandscape),\r\n)\r\n```  Hi @albenik, thanks for your PR. Could you squash the commits and refine the commit message, you can copy the description of the PR to the squashed commit in this case.  Hi @r-uchino, thanks for your PR. Please read [CONTRIBUTING.md](../blob/master/CONTRIBUTING.md) and add unit tests for your changes. I've left some comments.  A nice addition. Thanks, Sai.  Hi @sairoutine, thanks for your issue. This library doesn't support getting all merged cells from a worksheet currently. Welcome to open a pull request for that. I suggest that also return coordinate of merged cells in the function `GetMergeCells()`  Yes, the return value of the function may like this `[][]string{\"D4:E10\", \"cell value\"}`.  Hi @dmp73, thanks for your issue. I have fixed it. Please try to upgrade the library to the last version.   Hi @K4N0, this library has been tested on go1.11.4 and works well. You can create a new file by `excelize.NewFile()`, the latest version no longer supports the `CreateFile()` method.  Hi @ogimenezb, thanks for your issue. I have fixed it. Please try to upgrade the library to the last version.  Hi @mlh758, great work. I'll merge this is as is.   LGTM, Thanks.  Hi @wcsiu, thanks for your PR. I have merged it.  Hi @zaddok, did you say that the header row means auto filter? You can add a [auto filter](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#File.AutoFilter) on the first row.   Thanks for your issue. The excelize library doesn't support change the radio button by set cell value currently, `x:ClientData` element in the `xl/drawings/vmlDrawing%d.vml` hasn't been maintained yet completely.  LGTM, thanks  Thanks for your issue. Please provides file attachments if you can. Hi, @dream10201, the style index created by the `NewStyle()` function exceeds the maximum number allowed by Excel 65535, combine style indexes in the same format like this:\r\n\r\n```go\r\nfunc ImgToExcel(path string) {\r\n\tvar styles = map[string]int{}\r\n\txlsx := excelize.NewFile()\r\n\tsheet := xlsx.NewSheet(\"lovely\")\r\n\r\n\tfile, err := os.Open(path)\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t}\r\n\tdefer file.Close()\r\n\tconfig, err := jpeg.DecodeConfig(file)\r\n\tfile.Seek(0, 0)\r\n\timg, err := jpeg.Decode(file)\r\n\r\n\t//\u5217\u5bbd\r\n\txlsx.SetColWidth(\"lovely\", \"A\", excelize.ToAlphaString(config.Width), 1.61)\r\n\r\n\tfor i := 0; i < config.Width; i++ {\r\n\t\tfor j := 0; j < config.Height; j++ {\r\n\t\t\t//\u884c\u9ad8\r\n\t\t\txlsx.SetRowHeight(\"lovely\", j+1, 10)\r\n\t\t\t//\u83b7\u53d6\u56fe\u7247rgba\r\n\t\t\tr, g, b, _ := img.At(i, j).RGBA()\r\n\t\t\tformat := `{\"fill\":{\"type\":\"gradient\",\"color\":[\"#` + RgbToHex(r, g, b) + `\",\"#` + RgbToHex(r, g, b) + `\"],\"shading\":1}}`\r\n\t\t\tstyle, ok := styles[format]\r\n\t\t\tif !ok {\r\n\t\t\t\tstyle, err = xlsx.NewStyle(format)\r\n\t\t\t\tif err != nil {\r\n\t\t\t\t\tfmt.Println(err)\r\n\t\t\t\t}\r\n\t\t\t\tstyles[format] = style\r\n\t\t\t}\r\n\t\t\talpha := excelize.ToAlphaString(i) + strconv.Itoa(j+1)\r\n\t\t\txlsx.SetCellStyle(\"lovely\", alpha, alpha, style)\r\n\t\t}\r\n\t}\r\n\r\n\txlsx.SetActiveSheet(sheet)\r\n\terr = xlsx.SaveAs(\"./Book1.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t}\r\n}\r\n``` @dream10201 Unfortunately, there is no way, the number of styles cannot exceed the maximum limit. Maybe you need to consider compressing the image color space.  Hi @jouyouyun, the excelize library doesn't guarantee compatibility with Yozo Office currently.  Hi @1114619217, you can create pie chart just like this:\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\r\n\t\"github.com/xuri/excelize/v2\"\r\n)\r\n\r\nfunc main() {\r\n\tcategories := map[string]string{\"A2\": \"Small\", \"A3\": \"Normal\", \"A4\": \"Large\", \"B1\": \"Apple\", \"C1\": \"Orange\", \"D1\": \"Pear\"}\r\n\tvalues := map[string]int{\"B2\": 2, \"C2\": 3, \"D2\": 3, \"B3\": 5, \"C3\": 2, \"D3\": 4, \"B4\": 6, \"C4\": 7, \"D4\": 8}\r\n\txlsx := excelize.NewFile()\r\n\tfor k, v := range categories {\r\n\t\txlsx.SetCellValue(\"Sheet1\", k, v)\r\n\t}\r\n\tfor k, v := range values {\r\n\t\txlsx.SetCellValue(\"Sheet1\", k, v)\r\n\t}\r\n\r\n\txlsx.AddChart(\"Sheet1\", \"E1\", `{\"type\":\"pie\",\"series\":[{\"name\":\"Sheet1!$A$2\",\"categories\":\"Sheet1!$B$1:$D$1\",\"values\":\"Sheet1!$B$2:$D$2\"}],\"format\":{\"x_scale\":1.0,\"y_scale\":1.0,\"x_offset\":15,\"y_offset\":10,\"print_obj\":true,\"lock_aspect_ratio\":false,\"locked\":false},\"legend\":{\"position\":\"bottom\",\"show_legend_key\":false},\"title\":{\"name\":\"Fruit Pie Chart\"},\"plotarea\":{\"show_bubble_size\":true,\"show_cat_name\":false,\"show_leader_lines\":false,\"show_percent\":true,\"show_series_name\":false,\"show_val\":false},\"show_blanks_as\":\"gap\"}`)\r\n\t// Save xlsx file by the given path.\r\n\terr := xlsx.SaveAs(\"./Book1.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t}\r\n}\r\n```\r\n\r\n![pie_chart](https://user-images.githubusercontent.com/2809468/48625206-8999a600-e9e9-11e8-8a4c-aeabc6abc770.png)\r\n  Hi @vincenciusgeraldo, these rows are generated by the internal functions `completeRow()` and `completeCol()`, it will preprocess to completely fill all the cells may be used before set cell value.  Hi @jorgeb12, sorry for my late reply. I have optimized the performance of add hyperlink, please upgrade the library to the last version.  Hi @yuedefeng, thanks for you issue. Please use the last version of the excelize and provide file attachments if you can. Note that the excelize library doesn't guarantee compatibility with OnlyOffice currently.  Hi @yuedefeng, Please refer to the issue template to fill in the information, provide the code to reproduce the problem, file attachments generated by versions 1.1.0 and 1.1.0+, that will help we analyze the problem.   What's your date of struct? Please provide more information and refer to the instructions in Godoc for [cell style settings](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#File.NewStyle).  Hi @HcySunYang, great work. I'll merge this is as is.  Hi @conquer66666, I don't understand what you mean, please describe it in detail.  Hi @crosslogic, thanks for your issue. Please reference issue #140 & #177.   Hi @murata2makoto, thanks for your issue. I have submitted [feedback](https://github.com/sc34wg4/opcRevision/issues/14) about ISO/IEC 29500, ECMA-376 4th \u00a718.3.1.63  @peng great work. I'll merge this is as is.  @lab37 Thanks for your issue. I have fixed it. @lab37 The issue caused by missing tradition to strict conversion for `sharedStringsReader()` has been fixed. In addition, I have tested open xlsx file in attachment by Excel application, it can be open correctly by Excel for Mac version 16.17 (180909), but can't open by Office 2007 Excel 12.0.4518.1014 on the Windows (got error: file format is not valid). I checked the internal structure of the file in the attachment. By analytics the internal structure of the files in the attachment, a huge number of redundant XML tags cause much more memory needed to be parsed by Sheet1, also caused a worksheet with only 59 rows to take up about 72.4MB of disk space. Which version of Excel generated this file? The excelize doesn't implement streaming read currently, so the memory usage of parsing XML temporarily depends on the file content.  @Zheaoli Could you squash the commits and refine the commit message, you can copy the description of the PR to the squashed commit in this case.  Hi @lianzhao, thanks for your issue. I have optimized the performance of add images, charts, and shapes.   Hi @akbarstd, thanks for your issue. I have tested with attachment and it works well. The cell `Sheet1!B5` already locked, We can validate that by right-click on `Sheet1!B5`, select Format Cells, and click on the Protection tab. \"Locked\" checkbox has been already checked. The cell style of `Sheet1!B5` will not be changed if users to adjust other cells in a worksheet. Reference issue #191. I have added this feature request to the [Roadmap](https://github.com/360EntSecGroup-Skylar/excelize/wiki).  Thanks for your issue. Please provide file attachments and source code If you can. Temporarily comment out this line [sheet.go#L472](https://github.com/360EntSecGroup-Skylar/excelize/blob/3e004d900b103379c2d62657a3070de4a2e8585a/sheet.go#L472), it will work well. To avoid association modifications caused by incomplete copies, `CopySheet()` just implemented the copy of the cell value, not support copy the external associated elements and related content (such as pictures, tables, page orientation, etc.,) currently, and there is still a lot of work to be done.  Thanks for your issue, reference issue #69 (set multiline texts to cells support), #100 and #172. I have added this feature request to the Roadmap.  I close this and merge it into issue #172 is still discussing this problem.  Awesome, I think using `SetDropList` will be more simple.  Thanks for your PR. I have added `godoc` comments for the function, adjust `DataValidation` struct and fix `golint` errors based on your commits.  Thanks for your issue. I have added Object Linking and Embedding (OLE) format support to the Roadmap. Reference issue #44 and #158.  Thanks for your issue. We can use the `GetSheetMap()` function to get all sheets index and name map and use `GetCellValue()` to set the cell value.  Thanks for your issue. Add the scale set in the format parameter like this: \r\n\r\n```json\r\n{\"type\":\"line\", \"color\":{\"line\":\"#4286F4\",\"fill\":\"#8eb9ff\"},\"width\":10,\"height\": 10, \"format\":{\"x_scale\":5, \"y_scale\":5}}\r\n```\r\n\r\nThe excelize library doesn't support set line weight currently.  Thanks for your issue. Please provide file attachments and source code If you can. I have tested that and it works well. Please try upgrade library to the last version and provides Go version you are using. I have tested on Windows 7 with Go 1.8 and it works well. It seems that the file loss style contains `Sheet1` and `Sheet2`, but `Test.xlsx` in your attachment only contains one sheet. Can you provide the original file as an attachment? I have tested with `Test.xlsx` and it still works well. Note that the `gooxml` is not associated with this project.  Thanks for your issue. The units of functions SetRowHeight and SetColWidth is the point, not pixels, so you couldn't get 100x100 pixels square cell. \r\n\r\nCalculate points based on pixels. The conversion from points to pixels depends on your DPI setting. There are 72 points to an inch, so if you have 96 points that's 4/3 of an inch. If your DPI (in Display Properties) is 120 then that works out to 160 pixels. In other words, `pixels = points * DPI / 72`.  Thanks for your issue. This library support to set print properties of images and charts, but no plans to support exporting with PDF format currently.  Thanks for your issue. Reference [go.dev](https://pkg.go.dev/github.com/xuri/excelize/v2#File.NewStyle) or [docs reference](https://xuri.me/excelize/en/cell.html#SetCellStyle):\r\n\r\nset a solid fill for the D7 cell named Sheet1\r\n```go\r\nstyle, err := xlsx.NewStyle(`{\"fill\":{\"type\":\"pattern\",\"color\":[\"#E0EBF5\"],\"pattern\":1}}`)\r\nif err != nil {\r\n    fmt.Println(err)\r\n}\r\nxlsx.SetCellStyle(\"Sheet1\", \"D7\", \"D7\", style)\r\n```  Great! Thanks for your patch!  Hi @hlalibe, @tomcharter365, sorry for my late reply. Also reference #20, #29 and #406. I'll continue to optimize and improve performance, I will consider adding a stream R/W or flush windows to decrease memory usages, and any suggestion is welcome.  Thanks for your issue. Please provide file attachments If you can. I have fixed this issue. Please upgrade lib to the last version.  Thanks for your issue. I think this issue can be related with #212.  Thanks for your PR, could you squash the commits and refine the commit message, you can copy the description of the PR to the squashed commit in this case.  Thanks for your issue, reference issue #69, #100 and #172.  I close this and merge it into issue #172 is still discussing this problem.  Thanks for your issue. Because this lib not support set data validation currently, so this field hasn't been completely defined yet. I think that unless we define the structure of this field completely, we should continue to use inner string instead.  Thanks for your pull request, could you add test cases for these changes? Could you squash the commits and refine the commit message, you can copy the description of the PR to the squashed commit in this case.  Thanks for your PR. But the index number `176` is currently occupied by this lib's [built-in number format code](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#File.NewStyle): `$ English (U.S. Virgin Islands)`. Are you sure this number is a definite code in the [ECMA-376 specification](http://www.ecma-international.org/publications/standards/Ecma-376.htm)?  Excelize support set number format for the cell like this:\r\n\r\n```go\r\nstyle, _ := xlsx.NewStyle(`{\"number_format\": 1}`)\r\nxlsx.SetCellStyle(\"Sheet1\", \"B2\", \"B2\", style)\r\nxlsx.SetCellValue(\"Sheet1\", \"B2\", 9991345678)\r\n```\r\n  Thanks for your pull request. I suggest that use [Godoc examples](https://blog.golang.org/examples) instead of the single sample file, that can be displayed as package documentation and that are verified by running them as tests. They can also be run by a user visiting the godoc web page for the package and clicking the associated \"Run\" button.  You're welcome, thanks for your using excelize library.  Thanks for your issue, I have updated tags versioning for the consistent format.  Thanks for your suggestion, I will follow best practices in the future code commit.  Thanks for your issue. Please provides file attachments and code if you can. Could you provide the xlsx file that not add the comment, and tell me to add the comment to which cell will missing. I will try to reproduce this case and find fix it.  Thanks for your issue. I have initialized shared formula types support. Note that: currently, this function not validate ref tag to check the cell if or not in allow area, and always return origin shared formula.  Sorry for late reply. The function `SetSheetRow()` unable to know the character type element in the slice be set for character or a formula.  Thanks for your issue. Excel application will autosave computed value of formula, and we can't get the computed value by the Excelize currently, because this library doesn't implement the formula calculation engine. Reference issue #65, #157 and #198. Try call the function `UpdateLinkedValue()` before save the file.  Thanks for your issue. Use number format code 31 need to specify the lang, use `{\"number_format\": 31, \"lang\": \"zh-cn\"}` instead of `{\"number_format\": 31}`.  Thanks for your pull request. I have already added the documentation about [chart dimension](https://github.com/360EntSecGroup-Skylar/excelize/blob/eb62256d165607c6877ce88efbba10c119137b3d/chart.go#L358).   Thanks for your issue, I have fixed it. I plan to release version 1.3.0 on next week, some features are still testing. You can pin to this revision temporarily.  Thanks for your job. I think the size parameter should be in the style string, it is not recommended to add parameters for the `AddChart()` function. Size attributes are part of the style, the chart also contains many other attributes. If strip out the size parameters from the style parameters will bring a sense of split. Thank you. Actually, I am considering to make style structs public, reference issue #203.  Thanks for your issue. I have added the set name of table support for `AddTable()`. We can set the name of the table by `table_name` parameter.  How many comments did you add? Excelize needs to do some checks to ensure file compatibility, that will impact on performance. Hi @Obbi89, @PRwill, I have optimized the performance of add hyperlink, please upgrade the library to the last version. Reference issue #106 and #294.  Thanks for your issue, I have added support for setting the positioning of a picture.  Thanks for your issue. This library not support set bar's color currently, I will consider adding support for it later.  Thanks for your issue. I will consider adding and using `oneCellAnchor` support when no offset, no link and scaling set. Excel use EMUs (English Metric Units) to measure image offset and used to determine the location of the picture, this value is affected by different screen resolutions and can\u2018t be accurately calculated, so if the generated image size doesn't meet expectations, you need to set the offset manually. Reference [English Metric Units and Open XML](http://polymathprogrammer.com/2009/10/22/english-metric-units-and-open-xml/).  Thanks for your PR. Could you squash the commits and refine the commit message, you can copy the description of the PR to the squashed commit in this case.  Thanks for your issue. The function `SetCellHyperLink()` doesn't support set display attribute of hyperlinks currently. We need to set cell value by function `SetCellValue()`.  Thanks for your issue, I have added read `inlineStr` type cell value support. I also saw your pull request after I fixed it, thanks for you do that. I will close the PR.  What's the version of the Go and Excelize you are using? Please provides environment details (OS, WPS version) and file attachments if you can and provide detailed information according to the issue template when creating an issue. @vinceyoumans Thanks for your issue. Please make sure your attachment `EPlan_AP_LastSixMonths.xlsx` can be open by Microsoft Excel\u2122 application.  Thanks for your issue. Please provides file attachments if you can. I have fixed this issue, please upgrade library to the last version.  Thanks for your issue, I have fixed it by make row index consistent in function `SetRowHeight()` and `GetRowHeight()`.  Thanks for your issue. Autofit height is not supported currently, but we can use `SetRowHeight()` to set the height of a single row. Reference issue #92.  Thanks for your advice. I will make changes to assessment the APIs effect.  Thanks for your issue. I have added setting the orientation of the chart and set auto or fixed maximum, minimum of the axis support. Please set the primary horizontal and vertical axis options by `x_axis` and `y_axis`.  Thanks for your issue. I have tested and it works well, please provide the file attachment if you can. I have tested and it still works well, please try upgrade library to the last version by `go get -u github.com/360EntSecGroup-Skylar/excelize`. Reference issue #164   Thanks for your issue.  I have added this feature request to the [Roadmap](https://github.com/360EntSecGroup-Skylar/excelize/wiki). In order to support encryption, we need to implement these [encryption standards](https://msdn.microsoft.com/en-us/library/dd910529(v=office.12).aspx) and many more. It would require a very large number of test cases would be several weeks of work involved. That's an interesting job and I will consider adding support for this feature later. I'll certainly accept that patch if somebody did that an also welcome to contribute to this project. Welcome to contribution! I think `xlsxWorkbookProtection` needn't be an exportable struct. We can add a new function such as `SetPassword()` to manipulate it internally.  Thanks for your issue. Excel application will autosave computed value of formula, `file_ok.xlsx` contains that computed value but `file_nok.xlsx` doesn't. We can get the same result by calling` xlsxOk.UpdateLinkedValue()` after open file. Relate issue #65.  Thanks for your PR.  I can't accept this patch, because the user may have changed the default worksheet name by the function [`SetSheetName()`](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#File.SetSheetName).\r\n\r\n I will add an exception return value such as `0` for `NewSheet()` when already exists a worksheet of the same name.  Thanks for your issue. Could you tell me which version of Excel that created this file? and please provides file attachments if you can. This lib will check the last XML element of worksheet inner the xlsx file when you call the function `GetRows()`, then   \r\n autofill the entire cell of the worksheet with the empty value.  Thanks for your issue. Same as the issue #96,  I have added this feature request to the [Roadmap](https://github.com/360EntSecGroup-Skylar/excelize/wiki). I closed this issue and continue the discussion on issue #96.  Thanks for your issue. Same as the issue #63, we can use the [`TitleToNumber()`](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#TitleToNumber) and [`ToAlphaString()`](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#ToAlphaString) functions to convert between worksheet column title and index.  Thanks for your issue. The function `InsertRow()` and `InsertCol()` just insert a new blank row / column. Why should return a reference to the row?  What's the \"be protected\" means? I have tested and it works well. Please provide the file attachment if you can. I have added set protection properties support for the function `NewStyle()`. You can add `\"protection\":{\"locked\":false}` in the style format set param.\r\n  Thanks for your issue, I have added clustered, stacked and 100% stacked bar and column charts support for this library. You can create bar clustered chart by add `bar` type chart.  Thanks for your issue. This library not support set Accounting number format currently. I will consider to add this feature later and also welcome to contribute to this project.  Thanks for your issue. Please provides file attachments if you can. I have found that the file name of shared string table in your attachment is special: `xl/SharedStrings.xml` (standard filename is `xl/sharedStrings.xml`) and I have fixed it now, Could you tell me which version of Excel that created this file?  Yeah, the library doesn't guarantee compatibility with WPS currently. I will try to evaluate compatibility with WPS later. Just remove `=` in the formula of format string, for example, use `Sheet1!$A$30` instead of `=Sheet1!$A$30`. But WPS doesn't support all styles of charts in Microsoft Excel\u2122. For example, the `bar3D` chart in the Microsoft Excel\u2122 will be displayed as `bar` chart in the WPS.  Thanks for your issue. When calling the `NewFile()` function will automatically create a worksheet named `Sheet1`, so we needn't call the function `NewSheet()` when only one worksheet in the workbook. Reference issue #185.  Thanks for your issue. I have to init add a hyperlink to an image support for the function [`AddPicture()`](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#File.AddPicture). Please provide the file attachment if you can. Could you provide the origin file and code? Oh, when calling the `NewFile()` function will automatically create a worksheet named `Sheet1`, so we needn't call the function `NewSheet()` when only one worksheet in the workbook.  Thanks for your PR. Could you squash the commits and refine the commit message, you can copy the description of the PR to the squashed commit in this case.  Thanks for your work.  Please provides Excelize version or commit ID, Golang version you are using, and .xlsx file if you can. I suggest that fill in the complete necessary information in the issue template when you create a new issue, that's will be saving our time. Hi @jhinrichsen, thanks for your issue. There is no worksheet with index `0`. The newly created worksheet contains a worksheet named `Sheet1` by default. You can use this name directly or get it according to the `GetSheetMap` function.  Thanks for your issue, I have checked metadata of the image by [exif.regex.info/exif.cgi](http://exif.regex.info/exif.cgi), although the file extension is `.png`, but the encoding type actually is `jpeg`, so you need to import `_ \"image/jpeg\"`.\r\n\r\n Please provides Excelize version or commit ID, Golang version you are using. I suggest that fill in the complete necessary information in the issue template when you create a new issue, that's will be saving our time.  Thanks for your issue. The function `RemoveRow()` only support remove the single row and just auto handle existing hyperlinks, merged cells and auto filters currently, it may not work correctly if cells contain more complicated styles. Please provides file attachments if you can. The function `RemoveRow()` may not work on a workbook that contains pictures. If you can, please attach the .xlsx file, and provides the line number of the specific deletion. I have tested with the file you upload and it works well, which row do you want to remove in your case, please provide the key code if you can.  Thanks for your issue. The cell style set by function `SetCellStyle()` can be read by Excel application, but the function `GetCellValue()` only supports parsing a limited number format of the cell, if it is possible to apply a format to the cell value, it will do so, if not then the raw value of the cell will return. Variable [builtInNumFmtFunc](https://github.com/360EntSecGroup-Skylar/excelize/blob/6dc135a992f1155c581a98fca6460dad54766532/styles.go#L740-L775) defined the format conversion functions map. Partial format code doesn't support currently and will return original string. Also, reference the related issue #140.  Thanks for your issue. Please try to convert time duration to the seconds, and set time format for the cell. For example: \r\n\r\n```\r\nxlsx.SetCellValue(\"Sheet1\", \"B2\", time.Duration(1e13).Seconds()/86400)\r\nstyle, _ := xlsx.NewStyle(`{\"number_format\": 21}`)\r\nxlsx.SetCellStyle(\"Sheet1\", \"B2\", \"B2\", style)\r\n```\r\n\r\nYou will see `02:46:40` when you open the file in Excel. Because `SetCellValue ` can't determine the number format each developer's need, so I think let developers come from the definition of better. Thanks for your advice, I've added `time.Duration` support for the function `SetCellValue()`. note that the default number format only takes effect if no other styles are applied to the cell being set.  Thanks for your issue. In order to ensure compatibility, excelize will auto-fill all cells according to the largest row and column, and verify the cell contents before reading or writing to the worksheet, the cell contains the empty string will be included in the completion of the range. I have tested and it works well, please provides file attachments if you can. I have fixed it. Please try upgrade library to the last version.  Check the Go version you are using. This library needs Go version 1.8 or later. Relate issue #35, #39, #42, #84, #97 and #121.  Thanks for your issue. Could you provide file attachments? You tried to create a form in range `A2:C4`. But there an AutoFilters exists in the same range column. So this operation is attempting to change a filtered range on your worksheet and cannot be completed. To complete this operation, AutoFilters in the sheet need to be removed.  Thanks for your issue, reference issue #69 (set multiline texts to cells support) and #100.  I have added this feature request to the [Roadmap](https://github.com/360EntSecGroup-Skylar/excelize/wiki). Welcome! The cell's text style (include font, size, color, bold, underline, etc.) is stored in the file: `xl/sharedStrings.xml` and the data structure of this file is defined in  `xmlSharedStrings.go`. In order to implement this feature, we need to refactor functions: `GetCellValue()` and `SetCellValue()`, change the interface to make them get/set the value and style from the `xl/sharedStrings.xml`, and add new function `SetCellValueWithStyle()`.  Could you provide more details or file attachments?  Thanks for your issue. Excelize not support to get formatted value of the cell with `custom_number_format` properties currently.  I have tested on macOS 10.13.1 LibreOffice Version: 5.4.3.2 and Microsoft Excel Version 15.40 (171108) and uppercase formula string works well, it doesn't appear lowercase. The lowercase formula will cause any problems? Try to get formula by [`GetCellFormula()`](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#File.GetCellFormula) convert to uppercase and set cell formula again by [`SetCellFormula()`](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#File.SetCellFormula).  @hwf452 Thanks for your issue. I have fixed this issue by changing the `activeTab` tag calculation method of the workbook. Please try upgrade library to the last version by `go get -u github.com/360EntSecGroup-Skylar/excelize`.  I have tested that and it works well. Please try upgrade library to the last version by `go get -u github.com/xuri/excelize`  @PineTreeWild Thanks for your issue. I have fixed it.  Thanks for your PR. \r\n- Could you squash the commits and refine the commit message, you can copy the description of the PR to the squashed commit in this case\r\n- Remove the `.gitignore` file\r\n- Use `gofmt -s` formats  on your code  Thanks for your issue, I have added the 3D column and 3D 100% stacked column chart support.  Thanks for your issue. The binary data generated each time are different. That's inevitable. Try specifies a pattern in the `.gitignore` file if possible. Even using Excel application to generate the same content file binary data each time is still different. I think that's not a bug, so won't fix.  Thanks for your issue. I have added Object Linking and Embedding (OLE) format support to the [Roadmap](https://github.com/360EntSecGroup-Skylar/excelize/wiki). Also reference issue #44.  Thanks for your issue. The function `UpdateLinkedValue` actually removes the `<v>` tags from the XML. It be used to store  the \"cached results\" generated by the Excel application when it is saved. After removes the `<v>` tags, it will be recalculated when the file is open again in Excel application. Recalculation requires Excel application. Excelize library doesn't implement the formula calculation engine currently (reference #65). So we will get a blank value using the function `GetCellValue` after call `UpdateLinkedValue`.  Sorry for my late reply, gob is based on reflect mechanism, I think it'is not necessary to introduce this third-party package to instead of gob. Thanks for your pull request. As you said, I tested the deepcopy is 10x faster than gob.  @valasek Thanks for your issue. I have fixed it by add missing XML attribute and namespaces. Please attach broken and input file if you can.  Hi @kccleoc, sorry for my late reply. [`GetComments`](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#File.GetComments) retrieves all comments and returns a map of worksheet name to the worksheet comments.   This is a late reply, this issue resolved by #322.   @dolmen Could you squash the commits and refine the commit message, you can copy the description of the PR to the squashed commit in this case.  Thanks for your issue. [http.ResponseWriter](https://golang.org/pkg/net/http/#ResponseWriter) implements `Write([]byte) (int, error)`, and the function [Write](https://github.com/360EntSecGroup-Skylar/excelize/blob/a4ffb4fbfc9048998345e979577dab2a81bf57ff/file.go#L61-L90) provides function to write to an io.Writer.\r\n\r\n```\r\nfunc GenerateExcel(w http.ResponseWriter, r *http.Request) {\r\n    xlsx := excelize.NewFile()\r\n    xlsx.NewSheet(\"Sheet2\")\r\n    xlsx.SetCellValue(\"Sheet2\", \"A2\", \"Hello world.\")\r\n    xlsx.SetCellValue(\"Sheet1\", \"B2\", 100)\r\n    xlsx.SetActiveSheet(2)\r\n    err := xlsx.SaveAs(\"./Workbook.xlsx\")\r\n    if err != nil {\r\n        fmt.Println(err)\r\n        return\r\n    }\r\n    w.Header().Set(\"Content-Type\", \"application/octet-stream\")\r\n    w.Header().Set(\"Content-Disposition\", \"attachment; filename=\"+\"Workbook.xlsx\")\r\n    w.Header().Set(\"Content-Transfer-Encoding\", \"binary\")\r\n    w.Header().Set(\"Expires\", \"0\")\r\n    xlsx.Write(w)\r\n}\r\n``` @cescoferraro, @pulpfree, @zsspj12, @khawerrind The execlize now support to get bytes.Buffer from the saved file by [`WriteToBuffer()`](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#File.WriteToBuffer), and we can get `io.Reader` like this:\r\n\r\n```go\r\nbuf, _ := xlsx.WriteToBuffer()\r\nstrings.NewReader(buf.String())\r\n```\r\nReference issue #127.  Thanks for your issue. Because function `getTotalRowsCols()` required parameter `name` is internal XML file path, and this path may be difficult to construct, if public this method, maybe not friendly to use.  This library doesn't implement the formula calculation engine. Reference #65. I'll certainly accept that patch if somebody did that. You can sort cell values by your self and rewrite the result to a worksheet.   The parameter type of `xlsx` in the function `checkSheetName` should be `*excelize.File`, and you can also import a custom wrapped package.  The execlize now support to get bytes.Buffer from the saved file by [`WriteToBuffer()`](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#File.WriteToBuffer), and we can get `io.Reader` like this:\r\n\r\n```go\r\nbuf, _ := xlsx.WriteToBuffer()\r\nstrings.NewReader(buf.String())\r\n```\r\n\r\nanother example for using with `http.ServeContent` support:\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"net/http\"\r\n\t\"strings\"\r\n\t\"time\"\r\n\r\n\t\"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\thttp.HandleFunc(\"/\", handler)\r\n\thttp.ListenAndServe(\":3000\", nil)\r\n}\r\n\r\nfunc handler(w http.ResponseWriter, r *http.Request) {\r\n\txlsx := excelize.NewFile()\r\n\t// Create a new sheet.\r\n\tindex := xlsx.NewSheet(\"Sheet2\")\r\n\t// Set value of a cell.\r\n\txlsx.SetCellValue(\"Sheet2\", \"A2\", \"Hello world.\")\r\n\txlsx.SetCellValue(\"Sheet1\", \"B2\", 100)\r\n\t// Set active sheet of the workbook.\r\n\txlsx.SetActiveSheet(index)\r\n\tbuf, _ := xlsx.WriteToBuffer()\r\n\thttp.ServeContent(w, r, \"test.xlsx\", time.Time{}, strings.NewReader(buf.String()))\r\n}\r\n```  The benchmark report of the current version of this library is shown on the [wiki page](https://github.com/360EntSecGroup-Skylar/excelize/wiki).  Thanks for your issue, the results consistent with the Excel application. If you wanna to read it as is, please set value as string data type.\r\n\r\n![demo](https://user-images.githubusercontent.com/2809468/30686415-c9810308-9eea-11e7-9a37-2bc188d296fe.gif)\r\n  Thanks for your issue. Use the correct coordinates in the `SetCellValue()` function, `excelize.ToAlphaString(i)` just defined column but the row number is missing in the above code.  Thanks for your issue. This library needs Go version 1.8 or later after fixed issue #32 for collecting XML all attributes. Relate issue #35, #39 and #42.\r\n\r\n\u8bf7\u5347\u7ea7\u5230 Go 1.8 \u6216\u66f4\u65b0\u7248\u672c\uff0c\u76f8\u5173 issue \u53c2\u8003 #35, #39 and #42.  Thanks for your issue. I have fixed this issue by use worksheet name instead of \"sheet\" + index, related issue #25, #43, #47, #51, #89, #101 and #116. Note that the params of function `NewSheet()` also has been changed, please adjust your code like this:\r\n\r\n```\r\nfunc ExportarExcel(path string) error {\r\n    file := excelize.NewFile()\r\n    detalle := \"Detalle\"\r\n    index := file.NewSheet(detalle)\r\n    file.SetCellValue(detalle, \"A1\", \"ID\")\r\n    file.SetActiveSheet(index)\r\n    err := file.SaveAs(path)\r\n    if err != nil {\r\n        log.Fatal(err)\r\n    }\r\n    return nil\r\n}\r\n```  Thanks for your issue. I have tested on xlsx and it works well. This lib not been tested with xlsm file currently.  Thanks for your issue. You can get number of rows like this:\r\n```\r\nrows := len(xlsx.GetRows(\"Sheet1\"))\r\n```  Thanks for your issue. Please provide file attachments If you can.  We can use the `GetSheetMap()` function to get all sheets index and name map and use \"Sheet\" + index to set the cell value currently. Please reference issue #25, #43, #47, #51, #89, #101 and [godoc](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#File.GetCellValue).  @avelino Thanks for your issue. I have fixed it. I have tested on `go1.9 darwin/amd64` and it work well, could you provide more details?  Thanks for your issue. I have tested this lib on go1.9 darwin/amd64 and it works well. Could you provide more details? @recallhyx Please provide file attachments if you can. @Delveshal, @recallhyx I have fixed this issue, please upgrade lib to the last version.  Thanks for you issue. If the column name is fixed, just the order is not the same as in the database, you can specify the column coordinates. This library doesn't provide the function to change the result set currently. I don't quite understand why cant use the alphabet to determine the column coordinates? Do you mean's that insert rows into database? If so, this lib can help you read from Excel only, the other work is your biz logic and that doesn't fall within the scope of this lib. You can prepare generate a SQL from cell value like this: \r\n\r\n```\r\nvar values string \r\nfor idx, row := range rows {\r\n    // Skip table header\r\n    if idx == 0 {\r\n        continue \r\n    }\r\n    // For example if the column order of database tabe is\r\n    // profile_refid, profile_salutation, profile_extid, profile_name: \r\n    values += fmt.Sprintf(\"(%s, %s, %s, %s), \", row[0], row[2], row[1], row[3])\r\n}\r\nsql := fmt.Sprintf(\"INSERT INTO your_tabe VALUES %s ;\", strings.TrimSuffix(values, \",\"))\r\n// ...\r\n```\r\n Adjust the order of the binding parameters like this:\r\n```\r\nvalues += fmt.Sprintf(\"(%s, %s, %s, %s), \", row[2], row[3], row[0], row[1])\r\n```\r\nor specify the order of the fields to be consistent with the table:\r\n```\r\nINSERT INTO your_tabe (profile_refid, profile_extid, profile_salutation, profile_name) VALUES ...\r\n```  No, you need to handle it by yourself. I have already described methods in the above, of course, you can handle it in another way by your own requirement.  Could you provide more details or file attachments and what's your golang version? I have tasted it works well. Sorry, you couldn't save the chart as picture by this library.  Thanks for your pull request.  I have fix this issue and updated go test in another commit. New version has been released now.  @plandem great work. I might to evaluate and fix failing test, and then consider whether to merge eventually.  Thanks for your issue. Reference #60 and #105,  if the number of cells is large and all styles of the cell are same, we can set style with range in a batch instead of set the cell style one by one. Relationship XML files that storage hyperlink can be optimized by reducing serialization and deserialization times to improve performance. I have optimized the performance of add hyperlink, adding 10000 comments takes less than 1 second now.  Thanks for your suggestion. File compatibility takes precedence over performance, for this reason, I don't recommend users to operate the exposed file structure directly, so it's necessary to operate the file through the API. In addition, if the number of cells is large and all styles of the cell are same, we can set style with range in a batch instead of set the cell style one by one. I'll continue to focus on performance and continue to do optimization. Thanks for your great work. Different from the design of tealeg/xlsx, this lib needsn't the user to handle the ranks of loops and positioning when dealing with discrete cell operations. For example: if we only need to set the value for the cell `C6`, tealeg/xlsx need to loop 6 times to create 6 rows, and then set the cell, but this library only need to specify the coordinates. That's also the reason for can't be merged with tealeg/xlsx (reference issue #2 and #24). In addition, file compatibility is to avoid generating corrupted file and I'll consider whether to refactor the interface to object-oriented style.  Thanks for your issue. Reference issue #106,  vector markup language drawing files that storage comments, performance can be improve by reducing serialization and deserialization times.  Please reference issue #25, #51, #101 and [godoc](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#File.GetCellValue). Use `sheet`+index instead of sheet name (`Config`).  Reference issue #25. Thank you for your suggestion, I will consider refactoring the API to make it consistent.   I close this and merge it into issue #172 is still discussing this problem.  Reference related issue #41.  Thanks for your issue. I have added a function `GetCellHyperLink()`. The function `GetCellHyperLink()` just support get two types of hyperlink `External` for web site or `Location`. Please provide file attachments If you can.  Check the Go version you are using. This library needs Go version 1.8 or later after fixed issue #32 for collecting XML all attributes. Relate issue #35, #39, #42 and  #84.  @pztrn @cemremengu Thank you for your issue. I have added function [`SetSheetRow()`](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#File.SetSheetRow) to support write the whole line at once.  Thanks for you issue. The memory usage figures in the wiki are result that test by set cell value case. I will update it and indicate the test method. Memory usage figures in the [wiki](https://github.com/360EntSecGroup-Skylar/excelize/wiki) has been updated.  As you said, in order to ensure the compatibility of some complex patterns currently(charts, table, formula, pivot and etc.), Excelize do a lot of checks, that will be impacted on performance, generates large files will be very slow. Reference performance figures on the [wiki](https://github.com/360EntSecGroup-Skylar/excelize/wiki).  Thanks for your issue, I have fixed it. The element `pattern.FgColor.RGB` will be set when create style with pattern fill.  Thanks for your issue. To auto fit columns width, we need to calculate the column width based on the calculated value of the column (so on the result of any formulae, we need to implement formula calculation engine first), and any additional characters added by format masks such as thousand separators, and set the `width`, `bestFit`(this property is an information property, we still need to provide the width for the column) and `customWidth` properties of the columns. That's an interesting job and I will consider adding support for this feature later. But now there is no way to set that. I'll certainly accept that patch if somebody did that. @unkls I'm sorry, this feature has not yet been developed. There's a lot of things it could do with, but I'm not really able to commit more time to this project right now.  Thanks for your contribution, I have just simplified the code and added unit tests.  I have tested with your attached file with following code and it works well:\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n\t\"strconv\"\r\n\r\n\t\"github.com/xuri/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\txlsx, err := excelize.OpenFile(\"./errorin360EntSecGroup-Skylar.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\tos.Exit(1)\r\n\t}\r\n\t// Get sheet index.\r\n\tindex := xlsx.GetSheetIndex(\"cannot\")\r\n\t// Get all the rows in a sheet.\r\n\trows := xlsx.GetRows(\"sheet\" + strconv.Itoa(index))\r\n\tfor _, row := range rows {\r\n\t\tfor _, colCell := range row {\r\n\t\t\tfmt.Print(colCell, \"\\t\")\r\n\t\t}\r\n\t\tfmt.Println()\r\n\t}\r\n}\r\n``` Use `rows := xlsx.GetRows(fmt.Sprintf(\"Sheet%d\", i))` instead of `rows := xlsx.GetRows(sheets[i])`, relate issue #25, #43, #47 and #51.  I have tested with your code and it works well, the value of `Sheet1!D1` is `7`, try call the function [`UpdateLinkedValue()`](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#File.UpdateLinkedValue) before save the file.  Thanks for your issue, I have fixed it.  Thanks for your issue, I have added the number format code table in [godoc](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#File.NewStyle), you can create a date format like this:\r\n```\r\nxlsx.NewStyle(`{\"number_format\": 28, \"lang\": \"zh-tw\"}`)\r\n``` @dlintw I have added set custom number format support. - I have added a custom number format example in the [godoc](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#File.NewStyle).\r\n- Some number format code can be interpreted differently, depending on the UI language of the implementing application. The formatCode 14 is Excel's built-in number format specified by the formatCode attribute. Reference [part 1 of the 5th edition of the ECMA-376 Standard for Office Open XML](http://www.ecma-international.org/publications/standards/Ecma-376.htm). Try using custom number format if you can't find what you need for the built-in general and national language  of number format code.   I have tested on `Ubuntu 17.04 with Libre Office Version: 5.3.1.2 Build ID: 1:5.3.1-0ubuntu2`, `macOS Sierra 10.12.6 with Libre Office Version: 5.1.0.3 Build ID: 5e3e00a007d9b3b6efb6797a8b8e57b51ab1f737` and it works well. Please provide file attachments If you can. Do you hide the column `N`? I found that column `L` was hidden, and it was working properly with Libre Office both Ubuntu and macOS.  I found that the reason of can't be hidden is missing `customWidth` attribute of `col` element in the worksheet, and I have tested `SetColVisible()` in the last version of the excelize lib, it works well both Libre Office and Google Sheets. Have you ever tried to update the lib to the latest version? Repo URL has been changed, but you can still use Luxurioust package, the code for the different name packages is the same. Just check the commit log before update the library to ensure compatibility with existing applications.  Check the Go version you are using. This library needs Go version 1.8 or later after fixed issue #32 for collecting XML all attributes. Relate issue #35, #39 & #42.  Welcome, please read [contributing guidelines](https://github.com/360EntSecGroup-Skylar/excelize/blob/master/CONTRIBUTING.md) and contact me via `xuri.me[at]gmail.com`.  Thanks for your issue. I have initialized insert/remove column/row support by adding new functions `InsertCol()`, `InsertRow()`, `RemoveCol()` and `RemoveRow()`, please reference [godoc](https://godoc.org/github.com/xuri/excelize). This is just an initialization of this feature, only support insert single blank row and just auto handle existing hyperlinks, merged cells and auto filters currently. Function name that contains insert will insert before given index, that will make the API more concise. Welcome to contribute to this project.  Hi Andrey, please provide file attachments If you can. The lib is based on the ECMA-376 5th edition. Thanks for your issue, I have fixed it by adding missing element `showWhiteSpace` in the worksheet. Please upgrade lib to the last version. The cells that look different (no border style) are generated by the internal function `completeCol()`, it will preprocess to complete fill all the cells maybe used before set cell value, and these cell doesn't inherit the style of the surrounding cells, so it causing a display difference. I have fixed it by trim blank cells before save the file (this fix will have some impact on performance). I think the file size changes are caused by the compression algorithm, the content hasn't been affected. Yes, the function `completeCol()` will auto complete in prepare range to fill cells. Could you provide file attachments and more details?  Thanks for your issue. I have added set currency format support and  I'll improve support for other languages later. For example, you can set cell `Sheet1!B4` in `$ English (United States)` currency format by `number_format` index `177`:\r\n```\r\nstyle, _ := xlsx.NewStyle(`{\"number_format\": 177}`)\r\nxlsx.SetCellStyle(\"Sheet1\", \"B4\", \"B4\", style)\r\n```  @snailQH Thanks for your issue. I have fixed this bug. You can get value of a merged cell by function `GetCellValue()`.  Hi, Maksim. I have initialized insert/remove column/row support by adding new functions (related issue #82) `InsertCol()`, `InsertRow()`, `RemoveCol()` and `RemoveRow()`, please reference [godoc](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize). This is just an initialization of this feature, only support remove single row and just auto handle existing hyperlinks, merged cells and auto filters currently.  Thank you very much. Welcome to donate this project via the paypal donation badge on the project's homepage.  Sorry, this feature has not yet been implemented. I will working on it as soon as possible. Hi, I have initialized conditional formatting filter support. We can create conditional formatting by  [`NewConditionalStyle()`](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#File.NewConditionalStyle) and [`SetConditionalFormat()`](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#File.SetConditionalFormat) now. The third parameter of function `SetConditionalFormat()` can be parse array JSON object, and you can create different conditional format order by priority. But this library not support create conditional format with formula currently, I will add support for it as soon as possible. Use use the standard JSON format, like this: \r\n\r\n``xlFile.SetConditionalFormat(\"Sheet1\", fmt.Sprintf(`G%d:G%d`, start_position, rows), fmt.Sprintf(`[{\"type\":\"cell\",\"criteria\":\"<\", \"format\":%d,\"value\":\"$H$%d\"},{\"type\":\"cell\",\"criteria\":\">\",\"format\":%d,\"value\":\"$H$%d\"}]`, format_green, start_position, format_red, start_position))``  On commit [66e5d1f](https://github.com/360EntSecGroup-Skylar/excelize/commit/66e5d1fa801680f87a647a968fd4965ef9668b9a) I have to rename the function `CreateFile()` to `NewFile()` for making more concise name and rename `WriteTo()` to `SaveAs()` because it collides with the `WriterTo` interface in [`io`](https://golang.org/pkg/io/#WriterTo) package. Please check the commit log before update the library to ensure compatibility with existing applications.  Do you mean `Sheet1!E7` is string type value `29.06.2017 9:28:48`? If so, string type value can't be formatted as a date format. Please provide file attachments If you can. This library just support Excel's [built-in formats](https://github.com/360EntSecGroup-Skylar/excelize/blob/1cbb05d4977fc1c03fa37d704118fd9c722e487d/styles.go#L28-L64) currently. The built-in formats \r\n index (`numFmtId = 164`) in the attachment is out of this range. Same as the issue #50. Try to set new number format for `Sheet1!E7` before get value:\r\n```\r\nstyle, _ = xlsx.NewStyle(`{\"number_format\":15}`)\r\nxlsx.SetCellStyle(\"Sheet1\", \"E7\", \"E7\", style)\r\ne7 := xlsx.GetCellValue(\"Sheet1\", \"E7\")\r\nprintln(e7) // 29-Jun-17\r\n```  I plan to reflect the style method by adding a new function `NewStyle()` to get style ID, and pass this ID to function `SetCellStyle()`. I will export this function after completion. The function `GetCellStyle()` has been exported (the function name typo in commit log).  Thanks for your issue, I have do some optimization to improve performance by avoid repeating deserialization style XML file.   I close this and merge it into issue #172 is still discussing this problem.  Okay, function `GetColWidth()` and `GetRowHeight()` has been exported. Thanks for your issue. I have unified the index row number index and the return value data type of them.  Please reference [the full API docs](https://pkg.go.dev/github.com/xuri/excelize/v2). You can use the function [`GetSheetMap()`](https://pkg.go.dev/github.com/xuri/excelize/v2#File.GetSheetMap) to get the number of sheets and use the function [`GetRows()`](https://pkg.go.dev/github.com/xuri/excelize/v2#File.GetRows) to get the number of rows and columns in a sheet.  Function `ToAlphaString()` has been exported, please upgrade library to the last version by `go get -u github.com/xuri/excelize`. Relate issue #63.  No you can't, this library doesn't implement the formula calculation engine. Implementing a formula engine, we need to create parser and calculation engine to come with over hundreds of formula, named references, volatile functions, dynamic references and many more. It would require a very large number of test cases would be several months of work involved. That's an interesting job and I will consider adding support for this feature later. I'll certainly accept that patch if somebody did that. The library tealeg/xlsx doesn't implement it currently. Excel will storage last computed value with tag `<v>` in `xl/worksheets/sheet%d.xml` if the originally consumed cells contain formulas, reference [part 1 of the 4th edition of the ECMA-376 Standard for Office Open XML](https://www.ecma-international.org/publications-and-standards/standards/ecma-376/). So you can get same computed value by excelize function `GetCellValue()` (without calling function [`UpdateLinkedValue()`](https://pkg.go.dev/github.com/xuri/excelize/v2#File.UpdateLinkedValue)) or use the library tealeg/xlsx to open a xlsx file that created by Excel application. Call function `UpdateLinkedValue()` before save file and open `2.xlsx` with Excel application, `A3` will be recalculate and you will see `102`, then close and save it, use excelize reopen the file, call function `GetCellValue`, you'll get recalculated value `102`. In other words, let Excel application do the recalculation jobs.  @shuimu98 Thanks for your issue, I have do some optimization to improve performance by avoid repeating deserialization style XML file.  Unexported function [`toAlphaString()`](https://github.com/Luxurioust/excelize/blob/db4aff04fdfdd0459f1dcf5b0540a820dd8ea34e/lib.go#L53-L66) uses a similar implementation in the library. Function `ToAlphaString()` has been exported. Sure, function `TitleToNumber()` has been exported now.  Thanks for your issue, I have update the library with handle pre-defined number format set of cell when set cell value with `time.Time` data type. Try to adjust the width of the column to make it display normally. The new style will overwrite the old style, because function `SetCellStyle()` doesn't support append styles currently, so please set the style at once or set the style in batches for different area if you can.  Thanks for you issue, I have added new functions: `GetSheetVisible()` and `GetRowVisible()`, you can get visible state of sheet or row by these APIs.\r\n\r\nNote that API changed:\r\n\r\nFunction `HideSheet()` and `UnhideSheet()` has been deprecated with `SetSheetVisible()` instead, function `HideRow()` and `UnhideRow()` has been deprecated with `SetRowVisible()` instead. New functions `GetColVisible()` and `SetColVisible()` has been added.  Thanks for your issue. I have fix it. If the number of cells is large and all styles of the cell are same, we can set style with range in a batch instead of set the cell style one by one. In addition, how about use conditional formatting to mark a cell with bad value?  @pjmuller Thanks for your issue. I have initialized auto filter support. Yes, production ready and I will add support for setting a column list filter later.  Thanks for your issue, I have fixed it by adding relationships in drawing content type shall.  Function `SetCellValue()` need to handle, parse and convert julian date and gregorian time formats in Excel when set the time type value, that will impact library performance and I will optimize it appropriate.  Hi dematron, thanks for your issue. I have to add conditional formatting support for worksheet to fix this issue.  I have tested that and it works well. Please provide file attachments If you can. I found that all cell linked value is string type, they don't apply as expect conditional formatting. Such as: H8 on Sheet 7 in the [result.xlsx](https://github.com/Luxurioust/excelize/files/1028744/result.xlsx), linked value is H8 on Sheet 3, but `'3'!H8` is string type, use `SetCellValue(\"Sheet3\", \"H8\", 0.12)` to make it works well. What format is missing after fix issue #54? I have try to run `temp.go` to write `result.xlsx`(renamed by `template.xlsx`). I suggest that replace `value, _ := strconv.ParseInt(strconv.FormatFloat(data, 'f', 0, 64), 10, 64)` with `value := data / 100`, and format cell for the percentage that needs to retain two decimal precision (`0.00%` build index is `10`) such as `'3'!H5:H11` by function `SetCellStyle()`. I have changed to using cell style priority when the cell and the column at the same time with the style attribute.  Thanks for your suggestion. I will consider enhancement. This issue has been resolved, relate issue #420 and #425.  Thanks for your issue. I have tested that function `SetCellValue()`, `SetCellStr()`, `SetCellInt()`, and they won't affect the style (font family, color, underline, bold, and align) of cell, but may lose part of date formatting, currency settings of the cell. Please provide file attachments If you can. @gitdlam  I have fix it by adding column style predefined detection set cell functions.  The `token` is `nil` when `error != nil`, so it can be ignore and function `GetRows` won't throw an exception.  @coolboy0002001 I tested it works well under commit [66349f8](https://github.com/xuri/excelize/tree/66349f8ec039351770536b83b87c455543c0cf8a) and go1.8.1 darwin/amd64. Try upgrade library to the last version by `go get -u github.com/xuri/excelize` and attach broken file `Workbook1.xlsx` if you can.  @rpokupec \r\n- You can use the `GetSheetMap()` function to get all sheets index and name map and use \"Sheet\" + index to set the cell value;\r\n- You should be set cell value by `SetCellValue(\"Sheet2\", ..., ...)` after doing `xlsx.NewSheet(2, \"Test_1\")`;\r\nIn other words, function `SetCellValue()` and some other functions are doesn't support set cell value or get rows by sheet name currently, it needs to take the form of \"Sheet\"+index as a parameter. Relate issue #25, #43, and #47.  @dlintw Thanks for your issue. This library just supports Excel's [built-in formats](https://github.com/360EntSecGroup-Skylar/excelize/blob/1cbb05d4977fc1c03fa37d704118fd9c722e487d/styles.go#L28-L64) currently. The built-in number formats index (`numFmtId`) in the attachment is out of this range. I will handle this exception by returning the raw value. You can use function `SetCellStyle()` with built-in number format index by `number_format` property before `GetRows()`.  @dlintw Thanks for you issue.  Function `SetCellValue()` support `time.Time` data type parameter now.  @dlintw Thanks for your issue. I have fixed this issue.  @dohq Function `SetCellValue()` and `SetCellFormula()`doesn't support get rows by sheet name currently, it need to name \"Sheet\" + index. Relate issue #25 and #43  @dlintw Using both \"Sheet\" + index and \"sheet\" + index are working.  @a57571735 Please provide file attachments If you can. Note that you will need to use Go 1.8+ to support for collecting all attributes by fix issue #32.  @lishali12345 I have tested that and it works well. Please try upgrade library to the last version by `go get -u github.com/xuri/excelize`. I have checkout your project excel-piper and test on environment (os and golang version) same with you, but still unable to reproduce this issue. Could you help debug by stepping to provide more information? Please try to handle error of `decoder.Token()` in [rows.go line 79](https://github.com/Luxurioust/excelize/blob/master/rows.go#L79) and check the number of times of the code was executed in the loop. Did you catch exception of `decoder.Token()` ? I noticed that you are using zsh, could you provide `go env` output and check environment variable `GOROOT` is set correctly in `~/.zshrc`or `~/.bash_profile`. In the [line 29](https://github.com/Luxurioust/excelize/blob/d372bb977f57b244faf635e21af458bf2e8a98ef/rows.go#L29) of `rows.go`, `xml.Marshal()` will be throws an exception about `xml.Attr` if using the `xml` package in golang with version before 1.8. That's the reason cause function `GetRows` doesn't work. Have you installed a version before 1.8 and then upgraded it to current version and what way do you install it? I suggest that try install by [homebrew](https://brew.sh). I just talk about the cause of the issue and notice that make sure using correct version of [xml package](https://golang.org/pkg/encoding/xml/) in golang 1.8 version. Of course, you can try to reinstall Golang runtime.  @mewben Thanks for your issue. I have add font bold, italic and underline style support for function `SetCellStyle()` to use this please reference [godoc](https://godoc.org/github.com/Luxurioust/excelize).   @CodyGuo Thanks for your issue. The legacy XLS use Object Linking and Embedding (OLE) format, it's completely different with OOXML and can't be supported by the same code. To support this feature maybe needs to evaluate.  @pztrn Thanks for your issue. Function `GetRows()` doesn't support get rows by sheet name currently,  it need to name \"Sheet\" + index. Relate issue #25. Sorry. I'll fix the ambiguity of the doc.  @refflex Check the Go version you are using. This library needs Go version 1.8 or later after fixed issue #32 for collecting XML all attributes. Relate issue #35 & #39.  Hi @tvc-dps, thanks for your issue. Sorry for my late reply, In order to implement copy worksheets between xlsx files, we need to handle and processing all the data in the source worksheet, such as formulas, names, charts, pictures, tables, pivot, etc., that's an interesting job and I will consider adding support for this feature later. I'll certainly accept that patch if somebody did that.   Thanks for your issue. I have made an assessment of that. I got a similar conclusion with a [Python library](https://github.com/jmcnamara/XlsxWriter/issues/50) author, that's a difficult task to do Pivot support.  @bubenkoff Thanks for your issue. This library needs Go version 1.8 or later after fixed issue #32 for collecting XML all attributes. Relate issue #35.  @coolboy0002001 Hi, I have add a new function `AddShape()` to support create preset geometry in XLSX. You can add text box by create a `rect` (rectangle) type shape. I have added support for set font style of shape text. Now `AddShape()` has been supported to insert a new line, note that the format set parameter has been changed.  @coolboy0002001 Thanks for your issue. Please reference [the full API docs](https://pkg.go.dev/github.com/xuri/excelize/v2?tab=doc).\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n\r\n    \"github.com/xuri/excelize/v2\"\r\n)\r\n\r\nfunc main() {\r\n    styles := [][]string{\r\n        []string{\"C7\", \"F15\", \"7\", \"7\", \"7\", \"7\"},\r\n        []string{\"B6\", \"B6\", \"2\", \"2\", \"7\", \"7\"},\r\n        []string{\"C6\", \"F6\", \"7\", \"2\", \"7\", \"7\"},\r\n        []string{\"G6\", \"G6\", \"7\", \"2\", \"7\", \"2\"},\r\n        []string{\"B7\", \"B15\", \"2\", \"7\", \"7\", \"7\"},\r\n        []string{\"G7\", \"G15\", \"7\", \"7\", \"7\", \"2\"},\r\n        []string{\"B16\", \"B16\", \"2\", \"7\", \"2\", \"7\"},\r\n        []string{\"C16\", \"F16\", \"7\", \"7\", \"2\", \"7\"},\r\n        []string{\"G16\", \"G16\", \"7\", \"7\", \"2\", \"2\"},\r\n    }\r\n    f := excelize.NewFile()\r\n    for _, style := range styles {\r\n        s, err := f.NewStyle(fmt.Sprintf(`{\"border\":[{\"type\":\"left\",\"color\":\"#000000\",\"style\":%s},{\"type\":\"top\",\"color\":\"#000000\",\"style\":%s},{\"type\":\"bottom\",\"color\":\"#000000\",\"style\":%s},{\"type\":\"right\",\"color\":\"#000000\",\"style\":%s}]}`, style[2], style[3], style[4], style[5]))\r\n        if err != nil {\r\n            fmt.Println(err)\r\n        }\r\n        f.SetCellStyle(\"Sheet1\", style[0], style[1], s)\r\n    }\r\n    // Save xlsx file by the given path.\r\n    if err := f.SaveAs(\"Book1.xlsx\"); err != nil {\r\n        fmt.Println(err)\r\n    }\r\n}\r\n```\r\n\r\nPlease let me know if my answer is helpful to you.  @JermineHu No change, please provide file attachments If you can. Note that you will need to use Go 1.8+ to support for collecting all attributes by fix issue #32.  @JermineHu @bonly Thanks for your issue. This library needs Go version 1.8 or later after fixed issue #32 for collecting XML all attributes, see [Go 1.8 Release Notes](https://golang.org/doc/go1.8) and [encoding/xml: support for collecting all attributes #3633](https://github.com/golang/go/issues/3633). Please let me know if my answer is helpful to you.  @JermineHu Thanks for your issue. I'll consider adding the function `GetPicture()` to get the file handle. @JermineHu Hi, I have added new function `GetPicture()` to use this please reference [godoc](https://godoc.org/github.com/Luxurioust/excelize). It is worth mentioning that I haven't yet found a good way to collect all attributes use `encoding/xml` package, so I defined two structures `encodeWsDr`, `decodeWsDr` and swapping them, this will cause performance problems. I will continue to optimize this.  @rpokupec Thanks for your issue, I have fixed this issue. However, in order to use this feature, you will need to use Go 1.8+ to support for collecting all attributes.  @dlion Thanks for your issue, this library doesn't support to create or update charts in xlsx. I intend to add this function next. Try to open a pre-designed document that includes the chart, modify the value referenced by the chart if you can in current. The xlsx file follows the OOXML specification. XML is compliant with [part 1 of the 4th edition of the ECMA-376 Standard for Office Open XML](http://www.ecma-international.org/publications/standards/Ecma-376.htm). Use DrawingML to generate charts. @dlion Hi, I have added new function `AddChart()` to use this please reference [godoc](https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2). This is just an initialization of the chart support and I'll continue to optimize this.  @rpokupec Thanks for your issue. I think deleting a sheet from workbook will be affected references to charts or formulas in other sheet. To support this feature maybe needs to evaluated. @rpokupec I have added function `DeleteSheet()` to support delete sheet from a workbook.  @Ryouku Thanks for your issue. As a performance problem, I think this problem can be linked with issue #20 and #26. Next I would like to design a streaming interface to solve this problem. @beezir Thanks for your comments. I have made some optimize, remove redundant XML element checking logic. The benchmark report of the current version of this library is shown on the [wiki page](https://github.com/Luxurioust/excelize/wiki). @Ryouku Yes, I have optimized the memory usage when parsing large file. Please upgrade the library to the last version.  @cehuff Thanks for your issue. I have fix it.  Thank you for your issue. I have add printing settings support for the library. Note that function `AddPicture()` parameters has been changed.  @coolboy0002001 Thanks for your issue. I've done some optimization on this issue. The benchmark report of the current version of this library is shown on the [wiki page](https://github.com/360EntSecGroup-Skylar/excelize/wiki). I will continue to focus on performance issues and optimize it. In addition, as a performance-related problem, I close this and merge it into the issue #29 is still discussing this problem.  @JWo1F Thank you very much for your comments. I will commit for this issue as soon as possible. @JWo1F I have add new function `GetSheetIndex()` to provides a method to get worksheet index by name. You can also use the `GetSheetMap()` function to get all sheets index and name map. Why not add set cell value by sheet name support for function `SetCellValue()` directly or add an new export function? I think that to find the index by worksheet name will use a lot of types of inference internally it will affect performance. Please tell me if there is a better idea. @luca-moser Sorry, I don't understand what you mean, could you provide file attachments or some codes?  @boxpear Thanks for your issue, [tealeg/xlsx](https://github.com/tealeg/xlsx) provided much more function. I'm glad to contribute code to it. It is object-oriented style, and the implementation of these two libraries is not the same. At first I created this lib in order to support the modification of Excel with charts.  Thanks for your issue, I have fix it.  Thanks for your pull request. Please make sure pass the go test. I found that the test file was broken.  @coolboy0002001 Thanks for your issue. I have add function ```SetBorder()``` support to set border .  @pztrn Thanks for your issue. Yes, this library will be having performance problems on handling with large files, I also recorded this problem on the [Wiki](https://github.com/Luxurioust/excelize/wiki). Improving the performance will be part of the plan, but I can't guarantee an accurate time to submit code. @pztrn Hi Stanislav, I have done some optimization on this issue. I call Token to read tokens one by one instead Unmarshal. In my test, parsing 24MB file (40000 rows, 220 columns) occupies memory about 1.04GB now, the values of the cells are all strings.  @dlintw Thanks for your issue, I have fix it.  A nice addition. Thanks Nikolas.  @jof4002 Thanks for your issue, I have fixed this bug.  @jordyvandomselaar Thanks for your issue. You can use [`GetRows`](https://pkg.go.dev/github.com/xuri/excelize/v2#File.GetRows) to get all the rows in a sheet like this:\r\n\r\n```go\r\nrows, err := f.GetRows(\"Sheet1\")\r\nif err != nil {\r\n    fmt.Println(err)\r\n    return\r\n}\r\nfor _, row := range rows {\r\n    for _, colCell := range row {\r\n        fmt.Print(colCell, \"\\t\")\r\n    }\r\n    fmt.Println()\r\n}\r\n```\r\n\r\nThe full API docs can be seen on [go.dev](https://pkg.go.dev/github.com/xuri/excelize/v2). If you have any questions or concerns, please let me know by replying to this issue. @jordyvandomselaar Verify that the given sheet index is valid or attach your code and .xlsx file if possible.  A nice addition. Thanks Sharsie.   @chengziqing Thanks for your issue. I have add function `AddPicture()` support to add picture into excel.  @harg Thanks for you issue, I have created a [roadmap](https://github.com/Luxurioust/excelize/wiki) on Wiki, welcome to discuss a new feature or change.  Thanks for your PR. I found that some code will cause `golint` tips. I will update them later. I also found u have push some `.xlsx` files after tested, these excel file is useless and will decrease coverage. I will delete them.\n  @aldidana Thanks for u pull request!\n  Sorry, I'm not sure this is a problem. Please make sure the path of the XLSX file is correct in your code.\n  @NaySoftware Nice, thanks for your PR.\n", "text_all_count": 10898, "text_word_token": ["Hi", "m", "NUMBER", "ng", "NUMBER", "i", "thanks", "for", "your", "feedback", "please", "try", "to", "upgrade", "the", "library", "with", "the", "master", "branch", "code", "NUMBER", "Git", "tag", "for", "v", "NUMBER", "will", "be", "update", "on", "the", "next", "release", "NUMBER", "LGTM", "thanks", "mqy", "NUMBER", "Hi", "iwinstar", "NUMBER", "thanks", "for", "your", "issue", "NUMBER", "I", "will", "add", "support", "for", "this", "feature", "later", "NUMBER", "I", "ll", "certainly", "accept", "that", "patch", "if", "somebody", "did", "that", "NUMBER", "I", "close", "this", "and", "merge", "it", "into", "issue", "NUMBER", "be", "still", "discussing", "this", "issue", "NUMBER", "LGTM", "thanks", "zaddok", "NUMBER", "Please", "check", "your", "network", "connection", "status", "NUMBER", "The", "new", "version", "can", "no", "longer", "support", "Go", "NUMBER", "This", "change", "will", "be", "include", "in", "the", "next", "version", "NUMBER", "I", "suggest", "simply", "break", "compatibility", "and", "update", "README", "note", "NUMBER", "Hi", "mlh", "NUMBER", "we", "need", "to", "ensure", "the", "consistency", "of", "worksheet", "index", "worksheet", "name", "with", "the", "function", "GetSheetMap", "s", "return", "NUMBER", "LGTM", "thanks", "mlh", "NUMBER", "LGTM", "thanks", "WuXu", "NUMBER", "LGTM", "thank", "you", "NUMBER", "Excellent", "Hi", "exfly", "this", "issue", "has", "be", "fix", "NUMBER", "Please", "try", "to", "upgrade", "the", "library", "with", "the", "master", "branch", "code", "NUMBER", "Hi", "PengWuLin", "please", "follow", "by", "issue", "template", "provide", "code", "and", "steps", "to", "reproduce", "the", "issue", "NUMBER", "Hi", "AngangGuo", "please", "follow", "by", "issue", "template", "provide", "code", "and", "steps", "to", "reproduce", "the", "issue", "NUMBER", "LGTM", "thanks", "Sustainedhhh", "NUMBER", "LGTM", "thanks", "dongkai", "NUMBER", "z", "NUMBER", "Hi", "GZLHZ", "thanks", "for", "your", "feedback", "NUMBER", "This", "issue", "has", "be", "fix", "NUMBER", "Please", "try", "to", "upgrade", "the", "library", "with", "the", "master", "branch", "code", "but", "I", "don", "t", "recommend", "calling", "the", "Save", "method", "in", "the", "iteration", "which", "will", "cause", "more", "heap", "memory", "allocated", "NUMBER", "Hi", "AngangGuo", "thanks", "for", "your", "feedback", "NUMBER", "This", "issue", "has", "be", "fix", "NUMBER", "Please", "try", "to", "upgrade", "the", "library", "with", "the", "master", "branch", "code", "NUMBER", "Hi", "artsb", "thanks", "for", "your", "feedback", "NUMBER", "Please", "provide", "code", "and", "test", "file", "attachment", "if", "you", "can", "NUMBER", "Hi", "artsb", "thanks", "for", "your", "issue", "NUMBER", "I", "have", "fix", "it", "NUMBER", "Please", "try", "to", "upgrade", "the", "library", "with", "the", "master", "branch", "code", "NUMBER", "Hi", "HarryWang", "NUMBER", "thanks", "for", "your", "feedback", "NUMBER", "Please", "provide", "code", "and", "file", "attachment", "if", "you", "can", "NUMBER", "Hi", "HarryWang", "NUMBER", "the", "build", "in", "number", "format", "LINK", "number_format", "index", "use", "by", "the", "A", "NUMBER", "cell", "in", "the", "worksheet", "be", "NUMBER", "NUMBER", "The", "result", "obtained", "by", "your", "code", "be", "consistent", "with", "what", "the", "Office", "Excel", "trade", "application", "opens", "to", "display", "this", "spreadsheet", "file", "NUMBER", "You", "can", "use", "NewStyle", "and", "SetCellStyle", "to", "modify", "the", "number", "format", "of", "the", "cell", "LINK", "SetCellStyle", "as", "needed", "but", "this", "will", "also", "affect", "the", "display", "of", "the", "spreadsheet", "in", "the", "Office", "Excel", "trade", "application", "NUMBER", "Hi", "gitarte", "thanks", "for", "your", "issue", "NUMBER", "I", "have", "fix", "it", "NUMBER", "Please", "try", "to", "upgrade", "the", "library", "with", "the", "master", "branch", "code", "NUMBER", "Hi", "veliev", "thanks", "for", "your", "issue", "NUMBER", "You", "can", "set", "zoom", "scale", "by", "SetSheetViewOptions", "LINK", "Skylar", "excelize", "File", "NUMBER", "SetSheetViewOptions", "currently", "and", "I", "will", "add", "FitToPagesWide", "Tall", "support", "for", "it", "later", "NUMBER", "Hi", "dolmen", "GoDoc", "LINK", "Skylar", "excelize", "generates", "the", "document", "based", "on", "the", "code", "of", "the", "current", "master", "branch", "and", "I", "created", "the", "documentation", "website", "LINK", "to", "describe", "different", "version", "of", "the", "API", "NUMBER", "Hi", "OFAH", "thanks", "for", "your", "feedback", "I", "have", "test", "by", "your", "code", "and", "it", "works", "well", "on", "Microsoft", "Excel", "trade", "which", "application", "be", "you", "use", "Hi", "yclients", "smart", "box", "reader", "the", "excelize", "library", "doesn", "t", "support", "this", "feature", "currently", "you", "can", "read", "the", "file", "and", "write", "content", "in", "CSV", "format", "on", "your", "own", "NUMBER", "Hi", "mickel", "NUMBER", "thanks", "for", "your", "feedback", "I", "have", "test", "and", "it", "works", "well", "at", "master", "version", "code", "please", "provides", "code", "and", "file", "attachment", "if", "you", "can", "NUMBER", "Hi", "RajatBanerjee", "thanks", "for", "your", "feedback", "could", "you", "upload", "the", "NUMBER", "xlsx", "attachment", "Hi", "GinSanaduki", "thanks", "for", "your", "issue", "NUMBER", "I", "have", "fix", "it", "NUMBER", "Please", "try", "to", "upgrade", "the", "library", "with", "the", "master", "branch", "code", "NUMBER", "HI", "tianhai", "NUMBER", "thanks", "for", "your", "issue", "NUMBER", "I", "have", "fix", "it", "NUMBER", "Please", "try", "to", "upgrade", "the", "library", "with", "the", "master", "branch", "code", "NUMBER", "I", "have", "test", "on", "Apache", "OpenOffice", "NUMBER", "Build", "NUMBER", "Rev", "NUMBER", "NUMBER", "NUMBER", "this", "issue", "also", "occur", "when", "use", "Apache", "OpenOffice", "open", "that", "file", "created", "by", "Microsoft", "Office", "Excel", "trade", "application", "NUMBER", "Apache", "OpenOffice", "will", "not", "hide", "worksheet", "when", "the", "first", "sheet", "element", "in", "the", "sheets", "of", "the", "workbook", "NUMBER", "xml", "in", "a", "hidden", "state", "NUMBER", "We", "need", "to", "adjust", "workbook", "view", "settings", "and", "worksheets", "orders", "in", "the", "workbook", "NUMBER", "xml", "to", "ensure", "compatibility", "with", "other", "spreadsheet", "software", "such", "as", "Apache", "OpenOffice", "trade", "NUMBER", "When", "the", "first", "sheet", "in", "the", "sheets", "in", "a", "hidden", "state", "swap", "it", "with", "the", "first", "unhidden", "sheet", "and", "the", "activeTab", "in", "workbookView", "should", "be", "recalculated", "at", "the", "same", "time", "for", "example", "xml", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "to", "xml", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "But", "this", "modification", "will", "break", "the", "original", "sheet", "order", "NUMBER", "When", "you", "use", "the", "SetSheetVisible", "method", "to", "set", "the", "worksheet", "to", "be", "visible", "back", "again", "the", "worksheet", "order", "will", "be", "inconsistent", "NUMBER", "So", "I", "decide", "don", "t", "to", "fix", "this", "issue", "NUMBER", "User", "should", "be", "avoided", "to", "set", "the", "first", "worksheet", "to", "a", "hidden", "state", "NUMBER", "Hi", "GinSanaduki", "thanks", "for", "your", "issue", "NUMBER", "I", "have", "fix", "it", "NUMBER", "Please", "try", "to", "upgrade", "the", "library", "with", "the", "master", "branch", "code", "NUMBER", "HI", "dmp", "NUMBER", "thanks", "for", "your", "issue", "NUMBER", "Use", "this", "method", "with", "caution", "which", "will", "affect", "change", "in", "references", "such", "as", "formulas", "charts", "and", "so", "on", "NUMBER", "If", "there", "be", "any", "referenced", "value", "of", "the", "worksheet", "it", "will", "cause", "a", "file", "error", "when", "you", "open", "it", "NUMBER", "The", "excelize", "only", "partially", "update", "these", "references", "currently", "NUMBER", "I", "will", "add", "formula", "adjust", "support", "for", "this", "function", "later", "NUMBER", "Hi", "dmp", "NUMBER", "I", "have", "fix", "it", "NUMBER", "Please", "try", "to", "upgrade", "the", "library", "with", "the", "master", "branch", "code", "NUMBER", "Hi", "dmp", "NUMBER", "thanks", "for", "your", "feedback", "NUMBER", "I", "have", "fix", "it", "NUMBER", "Please", "try", "to", "upgrade", "the", "library", "with", "the", "master", "branch", "code", "NUMBER", "Hi", "OFAH", "thanks", "for", "your", "feedback", "please", "provides", "test", "code", "file", "attachment", "and", "environment", "information", "if", "you", "can", "NUMBER", "Hi", "OFAH", "thanks", "for", "your", "issue", "NUMBER", "I", "have", "fix", "it", "NUMBER", "Please", "try", "to", "upgrade", "the", "library", "with", "the", "master", "branch", "code", "NUMBER", "Hi", "Abin", "NUMBER", "please", "follow", "by", "issue", "template", "provide", "code", "and", "steps", "to", "reproduce", "the", "issue", "NUMBER", "Hi", "Augl", "thanks", "for", "your", "issue", "NUMBER", "I", "have", "to", "init", "set", "and", "get", "doc", "properties", "support", "NUMBER", "Hi", "miliardt", "I", "have", "test", "and", "it", "works", "well", "at", "master", "version", "code", "please", "provides", "code", "and", "file", "attachment", "if", "you", "can", "NUMBER", "Hi", "valasek", "thanks", "for", "your", "issue", "NUMBER", "I", "have", "fix", "it", "NUMBER", "Please", "try", "to", "upgrade", "the", "library", "with", "the", "master", "branch", "code", "NUMBER", "NUMBER", "vaibhav", "I", "m", "not", "sure", "the", "problem", "you", "re", "having", "be", "cause", "by", "the", "same", "cause", "please", "provides", "code", "and", "file", "attachment", "if", "you", "can", "NUMBER", "Hi", "bettersun", "if", "you", "doesn", "t", "specify", "the", "fill", "field", "in", "color", "settings", "the", "shape", "will", "be", "display", "transparently", "NUMBER", "For", "example", "go", "f", "NUMBER", "AddShape", "Sheet", "NUMBER", "A", "NUMBER", "type", "rect", "paragraph", "text", "Rectangle", "font", "color", "CD", "NUMBER", "C", "NUMBER", "C", "text", "Shape", "font", "bold", "true", "color", "NUMBER", "B", "NUMBER", "Hi", "dictor", "NUMBER", "I", "have", "test", "and", "it", "works", "well", "at", "rev", "NUMBER", "eca", "NUMBER", "f", "NUMBER", "ba", "NUMBER", "e", "NUMBER", "d", "NUMBER", "be", "NUMBER", "eec", "NUMBER", "have", "you", "tried", "use", "the", "latest", "code", "on", "the", "master", "branch", "or", "provide", "a", "NUMBER", "xlsx", "file", "attachment", "NUMBER", "Hi", "dictor", "NUMBER", "I", "have", "also", "test", "on", "version", "NUMBER", "cbd", "NUMBER", "dc", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ac", "NUMBER", "f", "and", "it", "works", "well", "could", "you", "upload", "the", "attachment", "that", "causes", "panic", "to", "reads", "Hi", "csg", "NUMBER", "please", "send", "desensitized", "document", "attachments", "to", "xuri", "NUMBER", "me", "_at_", "gmail", "NUMBER", "com", "NUMBER", "Hi", "csg", "NUMBER", "thanks", "for", "your", "feedback", "NUMBER", "I", "have", "fix", "it", "NUMBER", "Please", "try", "to", "upgrade", "the", "library", "with", "the", "master", "branch", "code", "NUMBER", "Hi", "eurosoll", "this", "lib", "doesn", "t", "support", "change", "page", "margins", "currently", "and", "I", "ll", "add", "new", "API", "later", "NUMBER", "Hi", "robinsoon", "thanks", "for", "your", "issue", "NUMBER", "Also", "reference", "NUMBER", "NUMBER", "We", "can", "continue", "to", "optimize", "and", "improve", "performance", "I", "will", "consider", "add", "a", "stream", "R", "W", "or", "flush", "windows", "to", "decrease", "memory", "usages", "and", "any", "suggestion", "be", "welcome", "Hi", "vmpartner", "thanks", "for", "your", "issue", "NUMBER", "I", "have", "fix", "it", "NUMBER", "Please", "try", "to", "upgrade", "the", "library", "with", "the", "master", "branch", "code", "NUMBER", "Hi", "toplinuxsir", "please", "reference", "NUMBER", "manually", "active", "module", "mode", "NUMBER", "Hi", "thnt", "I", "have", "test", "and", "it", "works", "well", "on", "the", "latest", "version", "please", "provides", "the", "version", "of", "excelize", "and", "Go", "you", "be", "use", "NUMBER", "Hi", "lyl", "lucas", "the", "v", "NUMBER", "branch", "be", "synced", "with", "master", "now", "NUMBER", "Hi", "byteman", "thanks", "for", "your", "issue", "NUMBER", "if", "the", "worksheet", "name", "referenced", "by", "the", "creation", "chart", "contains", "the", "character", "declare", "the", "worksheet", "name", "in", "single", "quotation", "marks", "in", "the", "parameter", "NUMBER", "For", "example", "go", "package", "main", "import", "fmt", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "categories", "map", "string", "string", "A", "NUMBER", "Small", "A", "NUMBER", "Normal", "A", "NUMBER", "Large", "B", "NUMBER", "Apple", "C", "NUMBER", "Orange", "D", "NUMBER", "Pear", "values", "map", "string", "int", "B", "NUMBER", "NUMBER", "C", "NUMBER", "NUMBER", "D", "NUMBER", "NUMBER", "B", "NUMBER", "NUMBER", "C", "NUMBER", "NUMBER", "D", "NUMBER", "NUMBER", "B", "NUMBER", "NUMBER", "C", "NUMBER", "NUMBER", "D", "NUMBER", "NUMBER", "f", "excelize", "NUMBER", "NewFile", "f", "NUMBER", "NewSheet", "Sheet", "NUMBER", "for", "k", "v", "range", "categories", "f", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "k", "v", "for", "k", "v", "range", "values", "f", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "k", "v", "err", "f", "NUMBER", "AddChart", "Sheet", "NUMBER", "E", "NUMBER", "type", "col", "NUMBER", "DClustered", "series", "name", "Sheet", "NUMBER", "A", "NUMBER", "categories", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "values", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "name", "Sheet", "NUMBER", "A", "NUMBER", "categories", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "values", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "name", "Sheet", "NUMBER", "A", "NUMBER", "categories", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "values", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "title", "name", "Fruit", "NUMBER", "D", "Clustered", "Column", "Chart", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "return", "Save", "xlsx", "file", "by", "the", "given", "path", "NUMBER", "err", "f", "NUMBER", "SaveAs", "NUMBER", "Book", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "Hi", "RafaelGomides", "please", "manually", "active", "module", "mode", "in", "the", "NUMBER", "zshrc", "export", "GO", "NUMBER", "MODULE", "on", "and", "try", "again", "NUMBER", "Hi", "gendseo", "thanks", "for", "your", "issue", "NUMBER", "I", "have", "add", "new", "function", "SetHeaderFooter", "please", "reference", "godoc", "LINK", "Skylar", "excelize", "File", "NUMBER", "SetHeaderFooter", "to", "use", "this", "NUMBER", "Hi", "NMFR", "please", "delete", "go", "mod", "cache", "GOPATH", "pkg", "mod", "cache", "and", "try", "again", "NUMBER", "Hi", "let", "s", "go", "thanks", "for", "your", "issue", "NUMBER", "I", "have", "fix", "that", "and", "test", "on", "Android", "NUMBER", "WPS", "Office", "NUMBER", "f", "NUMBER", "f", "NUMBER", "cn", "NUMBER", "NUMBER", "But", "note", "that", "the", "excelize", "library", "doesn", "t", "guarantee", "compatibility", "with", "WPS", "Office", "currently", "NUMBER", "Hi", "mlh", "NUMBER", "sorry", "for", "my", "late", "reply", "the", "struct", "font", "has", "be", "remove", "for", "uniform", "replace", "with", "xlsxFont", "NUMBER", "Could", "you", "update", "this", "patch", "thank", "you", "NUMBER", "LGTM", "thanks", "mlh", "NUMBER", "Hi", "ballyang", "thanks", "for", "your", "issue", "NUMBER", "We", "can", "get", "the", "version", "by", "git", "log", "NUMBER", "Hi", "ballyang", "please", "provides", "the", "version", "of", "excelize", "and", "Go", "you", "be", "use", "and", "the", "xlsx", "file", "attachment", "if", "you", "can", "NUMBER", "Also", "reference", "NUMBER", "Hi", "ballyang", "thanks", "for", "your", "issue", "I", "have", "fix", "it", "NUMBER", "LGTM", "thanks", "yoshhiide", "NUMBER", "LGTM", "thanks", "aplulu", "NUMBER", "Hi", "Ranxiu", "thanks", "for", "your", "issue", "NUMBER", "Please", "provides", "the", "version", "of", "excelize", "and", "Go", "you", "be", "use", "and", "the", "xlsx", "file", "attachment", "if", "you", "can", "NUMBER", "Hi", "yoshhiide", "thanks", "for", "you", "PR", "NUMBER", "I", "test", "the", "size", "of", "the", "inserted", "image", "base", "on", "the", "version", "eca", "NUMBER", "LINK", "Skylar", "excelize", "tree", "eca", "NUMBER", "f", "NUMBER", "ba", "NUMBER", "e", "NUMBER", "d", "NUMBER", "be", "NUMBER", "eec", "NUMBER", "and", "it", "seems", "works", "well", "NUMBER", "Could", "you", "provide", "the", "code", "to", "reproduce", "the", "problem", "LGTM", "thanks", "yoshhiide", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "I", "close", "this", "and", "merge", "it", "into", "the", "issue", "NUMBER", "be", "still", "discussing", "this", "feature", "NUMBER", "Hi", "alexaung", "thanks", "for", "your", "issue", "NUMBER", "PR", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "remove", "the", "two", "function", "ToAlphaString", "and", "TitleToNumber", "add", "NUMBER", "function", "ColumnNumberToName", "LINK", "Skylar", "excelize", "ColumnNumberToName", "CellNameToCoordinates", "LINK", "Skylar", "excelize", "CellNameToCoordinates", "ColumnNameToNumber", "LINK", "Skylar", "excelize", "ColumnNameToNumber", "and", "CoordinatesToCellName", "LINK", "Skylar", "excelize", "CoordinatesToCellName", "to", "replace", "them", "NUMBER", "All", "incompatible", "API", "change", "will", "be", "include", "in", "next", "release", "v", "NUMBER", "and", "prompting", "upgrade", "API", "compatibility", "for", "the", "exist", "users", "NUMBER", "Hi", "itPiligrim", "thanks", "for", "your", "issue", "NUMBER", "I", "have", "add", "tiff", "image", "support", "for", "AddPicture", "function", "on", "master", "code", "this", "feature", "will", "be", "add", "on", "next", "release", "the", "xlsx", "file", "doesn", "t", "support", "BMP", "image", "please", "convert", "image", "by", "your", "own", "NUMBER", "Hi", "GinSanaduki", "thanks", "for", "your", "issue", "NUMBER", "I", "have", "test", "based", "on", "your", "code", "and", "it", "works", "well", "NUMBER", "Which", "version", "of", "Excelize", "and", "Go", "be", "you", "use", "Hi", "nateglims", "GinSanaduki", "I", "have", "fix", "it", "but", "the", "issue", "of", "duplicate", "images", "haven", "t", "be", "confirmed", "yet", "NUMBER", "Hi", "billytoe", "thanks", "for", "your", "issue", "NUMBER", "Please", "provides", "the", "version", "of", "excelize", "and", "Go", "you", "be", "use", "and", "the", "xlsx", "file", "attachment", "if", "you", "can", "NUMBER", "Note", "that", "in", "the", "godoc", "LINK", "Skylar", "excelize", "File", "NUMBER", "RemoveRow", "use", "RemoveRow", "with", "caution", "which", "will", "affect", "change", "in", "references", "such", "as", "formulas", "charts", "and", "so", "on", "NUMBER", "If", "there", "be", "any", "referenced", "value", "of", "the", "worksheet", "it", "will", "cause", "a", "file", "error", "when", "you", "open", "it", "NUMBER", "The", "excelize", "only", "partially", "update", "these", "references", "currently", "NUMBER", "HI", "billytoe", "please", "follow", "by", "issue", "template", "provide", "code", "and", "steps", "to", "reproduce", "the", "issue", "NUMBER", "LGTM", "thanks", "mlh", "NUMBER", "Hi", "exfly", "thanks", "for", "your", "issue", "NUMBER", "I", "have", "test", "based", "on", "the", "following", "code", "and", "it", "works", "well", "NUMBER", "Could", "you", "provide", "the", "code", "to", "reproduce", "the", "issue", "Create", "a", "new", "file", "go", "package", "main", "import", "fmt", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "f", "excelize", "NUMBER", "NewFile", "f", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "A", "NUMBER", "NUMBER", "f", "NUMBER", "NewSheet", "Sheet", "NUMBER", "err", "f", "NUMBER", "SaveAs", "issue_", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "Open", "exists", "file", "go", "package", "main", "import", "fmt", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "f", "err", "excelize", "NUMBER", "OpenFile", "issue_", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "f", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "A", "NUMBER", "NUMBER", "f", "NUMBER", "NewSheet", "Sheet", "NUMBER", "err", "f", "NUMBER", "SaveAs", "issue_", "NUMBER", "_", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "This", "PR", "will", "cause", "an", "additional", "worksheet", "to", "be", "created", "when", "the", "read", "API", "be", "call", "on", "a", "worksheet", "that", "do", "not", "exist", "NUMBER", "I", "have", "add", "a", "check", "to", "the", "API", "for", "the", "existence", "of", "the", "worksheet", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "I", "close", "this", "and", "merge", "it", "into", "issue", "NUMBER", "be", "still", "discussing", "this", "feature", "NUMBER", "Hi", "suryateja", "NUMBER", "thanks", "for", "your", "PR", "NUMBER", "But", "I", "don", "t", "think", "this", "be", "a", "very", "necessary", "method", "NUMBER", "In", "the", "design", "principle", "of", "the", "class", "library", "there", "be", "only", "one", "way", "to", "implement", "a", "feature", "NUMBER", "So", "let", "the", "user", "handle", "this", "with", "simple", "function", "NUMBER", "Description", "NUMBER", "Removed", "ToAlphaString", "which", "be", "a", "breaking", "change", "and", "replaced", "it", "with", "ColumnNumberToName", "NUMBER", "The", "documentation", "LINK", "Skylar", "excelize", "blob", "master", "lib", "NUMBER", "go", "L", "NUMBER", "however", "still", "has", "the", "original", "name", "in", "it", "NUMBER", "It", "also", "change", "the", "signature", "from", "a", "string", "return", "value", "to", "a", "string", "error", "return", "value", "to", "guard", "against", "indexes", "less", "than", "one", "NUMBER", "This", "doesn", "t", "seem", "necessary", "NUMBER", "It", "also", "appears", "to", "have", "change", "the", "zero", "based", "index", "to", "a", "one", "based", "index", "NUMBER", "What", "was", "the", "motivation", "for", "these", "change", "Will", "there", "be", "a", "changelog", "that", "lays", "out", "other", "things", "that", "be", "now", "broken", "from", "that", "PR", "It", "would", "be", "helpful", "to", "know", "what", "the", "upgrade", "path", "looks", "like", "NUMBER", "The", "ToAlphaString", "in", "the", "document", "has", "be", "update", "to", "ColumnNumberToName", "The", "motivation", "for", "consistent", "col", "row", "index", "refer", "to", "issue", "NUMBER", "NUMBER", "and", "NUMBER", "All", "API", "change", "will", "be", "include", "in", "the", "next", "version", "NUMBER", "and", "prompting", "upgrade", "API", "compatibility", "for", "the", "exist", "users", "in", "release", "note", "AddPicture", "be", "doing", "some", "weird", "things", "now", "NUMBER", "Prior", "to", "this", "change", "I", "was", "merge", "cells", "A", "NUMBER", "to", "B", "NUMBER", "then", "placed", "an", "image", "in", "cell", "A", "NUMBER", "with", "some", "x", "and", "y", "scaling", "NUMBER", "It", "sat", "nicely", "in", "the", "merge", "cell", "NUMBER", "After", "this", "change", "it", "no", "longer", "sits", "in", "the", "cell", "but", "looks", "like", "the", "top", "left", "corner", "be", "centered", "now", "instead", "NUMBER", "Also", "there", "appear", "to", "be", "infinite", "copies", "of", "the", "image", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "bcabd", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "ce", "NUMBER", "png", "If", "I", "click", "and", "drag", "the", "image", "from", "where", "it", "sits", "originally", "more", "appear", "and", "they", "just", "keep", "appearing", "Confirm", "that", "this", "be", "a", "problem", "cause", "by", "PR", "NUMBER", "and", "I", "have", "fix", "it", "NUMBER", "I", "pull", "down", "your", "change", "and", "test", "them", "NUMBER", "Images", "be", "indeed", "going", "to", "the", "right", "place", "again", "NUMBER", "However", "I", "m", "still", "seeing", "the", "infinite", "image", "duplication", "issue", "NUMBER", "If", "I", "switch", "back", "to", "the", "previous", "version", "of", "excelize", "and", "drag", "an", "image", "around", "the", "workbook", "it", "simply", "moves", "the", "image", "NUMBER", "Now", "a", "copy", "be", "created", "and", "moved", "instead", "NUMBER", "I", "didn", "t", "reproduce", "this", "situation", "NUMBER", "Could", "you", "provide", "file", "attachments", "and", "code", "Since", "you", "re", "introduce", "several", "breaking", "change", "you", "might", "want", "to", "consider", "bumping", "the", "library", "to", "v", "NUMBER", "Most", "consumers", "probably", "assume", "you", "re", "following", "semantic", "version", "and", "would", "be", "surprised", "to", "have", "their", "code", "not", "compile", "after", "taking", "a", "minor", "version", "upgrade", "NUMBER", "Thank", "you", "for", "Fixing", "the", "picture", "thing", "After", "consideration", "I", "think", "all", "incompatible", "API", "change", "will", "be", "include", "in", "v", "NUMBER", "NUMBER", "If", "so", "we", "can", "modify", "function", "signature", "to", "use", "return", "error", "instead", "of", "panic", "NUMBER", "Kind", "notice", "albenik", "Thanks", "for", "the", "insight", "mlh", "NUMBER", "That", "s", "a", "useful", "feature", "NUMBER", "I", "ll", "certainly", "accept", "that", "patch", "if", "somebody", "did", "that", "NUMBER", "we", "can", "store", "the", "hash", "of", "the", "image", "in", "the", "File", "object", "for", "reducing", "the", "impact", "on", "performance", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "Please", "provide", "the", "code", "that", "call", "the", "NewStyle", "function", "in", "your", "app", "NUMBER", "If", "you", "be", "add", "style", "to", "an", "exist", "file", "please", "provide", "a", "xlsx", "file", "attachment", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "I", "close", "this", "and", "merge", "it", "into", "the", "issue", "NUMBER", "be", "still", "discussing", "this", "feature", "NUMBER", "LGTM", "thanks", "Kimxu", "NUMBER", "Hi", "albenik", "thanks", "for", "your", "PR", "NUMBER", "I", "recommend", "change", "the", "exist", "function", "instead", "of", "add", "new", "series", "function", "then", "release", "the", "new", "version", "prompting", "upgrade", "API", "compatibility", "for", "the", "exist", "user", "eliminating", "two", "different", "line", "number", "indexes", "NUMBER", "This", "change", "will", "be", "include", "in", "the", "next", "version", "NUMBER", "I", "suggest", "simply", "break", "compatibility", "and", "place", "a", "README", "note", "NUMBER", "Hi", "daichirata", "thanks", "for", "your", "issue", "NUMBER", "This", "library", "not", "support", "remove", "Data", "Validation", "currently", "and", "I", "have", "add", "this", "feature", "request", "to", "the", "Roadmap", "LINK", "Skylar", "excelize", "wiki", "NUMBER", "Hi", "ArmandoZepeda", "thanks", "for", "your", "issue", "NUMBER", "I", "have", "fix", "the", "issue", "corrupted", "xlsx", "after", "deleting", "formula", "of", "cell", "NUMBER", "However", "when", "use", "DuplicateRow", "and", "DuplicateRowTo", "it", "be", "still", "possible", "to", "cause", "file", "corruption", "NUMBER", "I", "have", "noted", "this", "potential", "problem", "in", "the", "documentation", "for", "these", "two", "function", "NUMBER", "Since", "that", "which", "will", "affect", "change", "in", "references", "such", "as", "formulas", "charts", "and", "so", "on", "NUMBER", "If", "there", "be", "any", "referenced", "value", "of", "the", "worksheet", "it", "will", "cause", "a", "file", "error", "when", "you", "open", "it", "NUMBER", "The", "excelize", "only", "partially", "update", "these", "references", "currently", "NUMBER", "I", "think", "that", "solving", "this", "problem", "requires", "the", "completion", "of", "the", "function", "adjustHelper", "LINK", "Skylar", "excelize", "blob", "NUMBER", "bb", "NUMBER", "f", "NUMBER", "ce", "NUMBER", "b", "NUMBER", "d", "NUMBER", "fdc", "NUMBER", "e", "NUMBER", "de", "NUMBER", "excelize", "NUMBER", "go", "L", "NUMBER", "L", "NUMBER", "NUMBER", "I", "ll", "certainly", "accept", "that", "patch", "if", "somebody", "did", "that", "NUMBER", "Hi", "tobiassoppa", "thanks", "for", "your", "issue", "NUMBER", "I", "have", "fix", "it", "NUMBER", "Hi", "miguelpragier", "thanks", "for", "your", "issue", "NUMBER", "Excelize", "provides", "a", "set", "of", "function", "TitleToNumber", "LINK", "Skylar", "excelize", "TitleToNumber", "and", "ToAlphaString", "LINK", "Skylar", "excelize", "ToAlphaString", "which", "can", "be", "use", "to", "convert", "integer", "and", "Excel", "table", "columns", "or", "to", "get", "columns", "based", "on", "the", "offset", "NUMBER", "The", "function", "NextColumn", "and", "their", "function", "be", "duplicate", "so", "I", "don", "t", "recommend", "add", "this", "feature", "NUMBER", "Hi", "dolmen", "great", "work", "NUMBER", "I", "ll", "merge", "this", "be", "as", "be", "NUMBER", "Hi", "tianhai", "NUMBER", "since", "cell", "A", "NUMBER", "has", "a", "number", "format", "set", "GetRows", "will", "return", "formatted", "value", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "I", "close", "this", "and", "merge", "it", "into", "issue", "NUMBER", "be", "still", "discussing", "this", "feature", "NUMBER", "LGTM", "thanks", "rentiansheng", "Thanks", "for", "your", "issue", "NUMBER", "Please", "provide", "file", "attachments", "If", "you", "can", "NUMBER", "LGTM", "thanks", "kkxkkxkkgh", "NUMBER", "I", "suggest", "that", "to", "keep", "the", "Travis", "CI", "checks", "for", "old", "version", "Go", "NUMBER", "A", "nice", "addition", "NUMBER", "Thanks", "albenik", "NUMBER", "LGTM", "thanks", "NUMBER", "LGTM", "thanks", "NUMBER", "Hi", "tealeg", "thanks", "for", "your", "proposal", "I", "have", "add", "tealeg", "xlsx", "copyright", "statement", "in", "README", "LINK", "Skylar", "excelize", "licenses", "and", "LICENSE", "LINK", "Skylar", "excelize", "blob", "master", "LICENSE", "file", "NUMBER", "Yes", "in", "order", "to", "solve", "this", "problem", "we", "need", "to", "check", "and", "update", "all", "references", "such", "as", "xl", "charts", "chart", "NUMBER", "xml", "that", "to", "the", "workbook", "when", "we", "rename", "the", "workbook", "NUMBER", "A", "nice", "addition", "NUMBER", "Thank", "you", "NUMBER", "Hi", "rafaelmiti", "thanks", "for", "your", "pull", "request", "NUMBER", "I", "have", "made", "some", "change", "base", "on", "yours", "commit", "NUMBER", "The", "function", "GetRows", "will", "return", "the", "number", "of", "valid", "rows", "now", "NUMBER", "Hi", "greymanking", "this", "library", "doesn", "t", "support", "to", "set", "page", "orientation", "currently", "NUMBER", "I", "will", "add", "this", "feature", "later", "NUMBER", "Hi", "greymanking", "excelize", "support", "set", "page", "orientation", "now", "you", "can", "set", "that", "like", "this", "go", "xlsx", "excelize", "NUMBER", "NewFile", "err", "xlsx", "NUMBER", "SetPageLayout", "Sheet", "NUMBER", "excelize", "NUMBER", "PageLayoutOrientation", "excelize", "NUMBER", "OrientationLandscape", "Hi", "albenik", "thanks", "for", "your", "PR", "NUMBER", "Could", "you", "squash", "the", "commit", "and", "refine", "the", "commit", "message", "you", "can", "copy", "the", "description", "of", "the", "PR", "to", "the", "squashed", "commit", "in", "this", "case", "NUMBER", "Hi", "r", "uchino", "thanks", "for", "your", "PR", "NUMBER", "Please", "read", "CONTRIBUTING", "NUMBER", "md", "NUMBER", "blob", "master", "CONTRIBUTING", "NUMBER", "md", "and", "add", "unit", "test", "for", "your", "change", "NUMBER", "I", "ve", "left", "some", "comments", "NUMBER", "A", "nice", "addition", "NUMBER", "Thanks", "Sai", "NUMBER", "Hi", "sairoutine", "thanks", "for", "your", "issue", "NUMBER", "This", "library", "doesn", "t", "support", "get", "all", "merge", "cells", "from", "a", "worksheet", "currently", "NUMBER", "Welcome", "to", "open", "a", "pull", "request", "for", "that", "NUMBER", "I", "suggest", "that", "also", "return", "coordinate", "of", "merge", "cells", "in", "the", "function", "GetMergeCells", "Yes", "the", "return", "value", "of", "the", "function", "may", "like", "this", "string", "D", "NUMBER", "E", "NUMBER", "cell", "value", "NUMBER", "Hi", "dmp", "NUMBER", "thanks", "for", "your", "issue", "NUMBER", "I", "have", "fix", "it", "NUMBER", "Please", "try", "to", "upgrade", "the", "library", "to", "the", "last", "version", "NUMBER", "Hi", "K", "NUMBER", "N", "NUMBER", "this", "library", "has", "be", "test", "on", "go", "NUMBER", "and", "works", "well", "NUMBER", "You", "can", "create", "a", "new", "file", "by", "excelize", "NUMBER", "NewFile", "the", "latest", "version", "no", "longer", "support", "the", "CreateFile", "method", "NUMBER", "Hi", "ogimenezb", "thanks", "for", "your", "issue", "NUMBER", "I", "have", "fix", "it", "NUMBER", "Please", "try", "to", "upgrade", "the", "library", "to", "the", "last", "version", "NUMBER", "Hi", "mlh", "NUMBER", "great", "work", "NUMBER", "I", "ll", "merge", "this", "be", "as", "be", "NUMBER", "LGTM", "Thanks", "NUMBER", "Hi", "wcsiu", "thanks", "for", "your", "PR", "NUMBER", "I", "have", "merge", "it", "NUMBER", "Hi", "zaddok", "did", "you", "say", "that", "the", "header", "row", "means", "auto", "filter", "You", "can", "add", "a", "auto", "filter", "LINK", "Skylar", "excelize", "File", "NUMBER", "AutoFilter", "on", "the", "first", "row", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "The", "excelize", "library", "doesn", "t", "support", "change", "the", "radio", "button", "by", "set", "cell", "value", "currently", "x", "ClientData", "element", "in", "the", "xl", "drawings", "vmlDrawing", "d", "NUMBER", "vml", "hasn", "t", "be", "maintained", "yet", "completely", "NUMBER", "LGTM", "thanks", "Thanks", "for", "your", "issue", "NUMBER", "Please", "provides", "file", "attachments", "if", "you", "can", "NUMBER", "Hi", "dream", "NUMBER", "the", "style", "index", "created", "by", "the", "NewStyle", "function", "exceeds", "the", "maximum", "number", "allow", "by", "Excel", "NUMBER", "combine", "style", "indexes", "in", "the", "same", "format", "like", "this", "go", "func", "ImgToExcel", "path", "string", "var", "styles", "map", "string", "int", "xlsx", "excelize", "NUMBER", "NewFile", "sheet", "xlsx", "NUMBER", "NewSheet", "lovely", "file", "err", "os", "NUMBER", "Open", "path", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "defer", "file", "NUMBER", "Close", "config", "err", "jpeg", "NUMBER", "DecodeConfig", "file", "file", "NUMBER", "Seek", "NUMBER", "NUMBER", "img", "err", "jpeg", "NUMBER", "Decode", "file", "\u5217\u5bbd", "xlsx", "NUMBER", "SetColWidth", "lovely", "A", "excelize", "NUMBER", "ToAlphaString", "config", "NUMBER", "Width", "NUMBER", "for", "i", "NUMBER", "i", "TAG", "tags", "from", "the", "XML", "NUMBER", "It", "be", "use", "to", "store", "the", "cached", "results", "generate", "by", "the", "Excel", "application", "when", "it", "be", "saved", "NUMBER", "After", "remove", "the", "TAG", "tags", "it", "will", "be", "recalculated", "when", "the", "file", "be", "open", "again", "in", "Excel", "application", "NUMBER", "Recalculation", "requires", "Excel", "application", "NUMBER", "Excelize", "library", "doesn", "t", "implement", "the", "formula", "calculation", "engine", "currently", "reference", "NUMBER", "NUMBER", "So", "we", "will", "get", "a", "blank", "value", "use", "the", "function", "GetCellValue", "after", "call", "UpdateLinkedValue", "NUMBER", "Sorry", "for", "my", "late", "reply", "gob", "be", "based", "on", "reflect", "mechanism", "I", "think", "it", "be", "not", "necessary", "to", "introduce", "this", "third", "party", "package", "to", "instead", "of", "gob", "NUMBER", "Thanks", "for", "your", "pull", "request", "NUMBER", "As", "you", "said", "I", "test", "the", "deepcopy", "be", "NUMBER", "x", "faster", "than", "gob", "NUMBER", "valasek", "Thanks", "for", "your", "issue", "NUMBER", "I", "have", "fix", "it", "by", "add", "miss", "XML", "attribute", "and", "namespaces", "NUMBER", "Please", "attach", "broken", "and", "input", "file", "if", "you", "can", "NUMBER", "Hi", "kccleoc", "sorry", "for", "my", "late", "reply", "NUMBER", "GetComments", "LINK", "Skylar", "excelize", "File", "NUMBER", "GetComments", "retrieves", "all", "comments", "and", "returns", "a", "map", "of", "worksheet", "name", "to", "the", "worksheet", "comments", "NUMBER", "This", "be", "a", "late", "reply", "this", "issue", "resolve", "by", "NUMBER", "dolmen", "Could", "you", "squash", "the", "commit", "and", "refine", "the", "commit", "message", "you", "can", "copy", "the", "description", "of", "the", "PR", "to", "the", "squashed", "commit", "in", "this", "case", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "http", "NUMBER", "ResponseWriter", "LINK", "ResponseWriter", "implement", "Write", "byte", "int", "error", "and", "the", "function", "Write", "LINK", "Skylar", "excelize", "blob", "a", "NUMBER", "ffb", "NUMBER", "fbfc", "NUMBER", "e", "NUMBER", "dab", "NUMBER", "a", "NUMBER", "bf", "NUMBER", "ff", "file", "NUMBER", "go", "L", "NUMBER", "L", "NUMBER", "provides", "function", "to", "write", "to", "an", "io", "NUMBER", "Writer", "NUMBER", "func", "GenerateExcel", "w", "http", "NUMBER", "ResponseWriter", "r", "http", "NUMBER", "Request", "xlsx", "excelize", "NUMBER", "NewFile", "xlsx", "NUMBER", "NewSheet", "Sheet", "NUMBER", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "A", "NUMBER", "Hello", "world", "NUMBER", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "B", "NUMBER", "NUMBER", "xlsx", "NUMBER", "SetActiveSheet", "NUMBER", "err", "xlsx", "NUMBER", "SaveAs", "NUMBER", "Workbook", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "return", "w", "NUMBER", "Header", "NUMBER", "Set", "Content", "Type", "application", "octet", "stream", "w", "NUMBER", "Header", "NUMBER", "Set", "Content", "Disposition", "attachment", "filename", "Workbook", "NUMBER", "xlsx", "w", "NUMBER", "Header", "NUMBER", "Set", "Content", "Transfer", "Encoding", "binary", "w", "NUMBER", "Header", "NUMBER", "Set", "Expires", "NUMBER", "xlsx", "NUMBER", "Write", "w", "cescoferraro", "pulpfree", "zsspj", "NUMBER", "khawerrind", "The", "execlize", "now", "support", "to", "get", "bytes", "NUMBER", "Buffer", "from", "the", "saved", "file", "by", "WriteToBuffer", "LINK", "Skylar", "excelize", "File", "NUMBER", "WriteToBuffer", "and", "we", "can", "get", "io", "NUMBER", "Reader", "like", "this", "go", "buf", "_", "xlsx", "NUMBER", "WriteToBuffer", "strings", "NUMBER", "NewReader", "buf", "NUMBER", "String", "Reference", "issue", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "Because", "function", "getTotalRowsCols", "required", "parameter", "name", "be", "internal", "XML", "file", "path", "and", "this", "path", "may", "be", "difficult", "to", "construct", "if", "public", "this", "method", "maybe", "not", "friendly", "to", "use", "NUMBER", "This", "library", "doesn", "t", "implement", "the", "formula", "calculation", "engine", "NUMBER", "Reference", "NUMBER", "I", "ll", "certainly", "accept", "that", "patch", "if", "somebody", "did", "that", "NUMBER", "You", "can", "sort", "cell", "values", "by", "your", "self", "and", "rewrite", "the", "result", "to", "a", "worksheet", "NUMBER", "The", "parameter", "type", "of", "xlsx", "in", "the", "function", "checkSheetName", "should", "be", "excelize", "NUMBER", "File", "and", "you", "can", "also", "import", "a", "custom", "wrapped", "package", "NUMBER", "The", "execlize", "now", "support", "to", "get", "bytes", "NUMBER", "Buffer", "from", "the", "saved", "file", "by", "WriteToBuffer", "LINK", "Skylar", "excelize", "File", "NUMBER", "WriteToBuffer", "and", "we", "can", "get", "io", "NUMBER", "Reader", "like", "this", "go", "buf", "_", "xlsx", "NUMBER", "WriteToBuffer", "strings", "NUMBER", "NewReader", "buf", "NUMBER", "String", "another", "example", "for", "use", "with", "http", "NUMBER", "ServeContent", "support", "go", "package", "main", "import", "net", "http", "strings", "time", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "http", "NUMBER", "HandleFunc", "handler", "http", "NUMBER", "ListenAndServe", "NUMBER", "nil", "func", "handler", "w", "http", "NUMBER", "ResponseWriter", "r", "http", "NUMBER", "Request", "xlsx", "excelize", "NUMBER", "NewFile", "Create", "a", "new", "sheet", "NUMBER", "index", "xlsx", "NUMBER", "NewSheet", "Sheet", "NUMBER", "Set", "value", "of", "a", "cell", "NUMBER", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "A", "NUMBER", "Hello", "world", "NUMBER", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "B", "NUMBER", "NUMBER", "Set", "active", "sheet", "of", "the", "workbook", "NUMBER", "xlsx", "NUMBER", "SetActiveSheet", "index", "buf", "_", "xlsx", "NUMBER", "WriteToBuffer", "http", "NUMBER", "ServeContent", "w", "r", "test", "NUMBER", "xlsx", "time", "NUMBER", "Time", "strings", "NUMBER", "NewReader", "buf", "NUMBER", "String", "The", "benchmark", "report", "of", "the", "current", "version", "of", "this", "library", "be", "shown", "on", "the", "wiki", "page", "LINK", "Skylar", "excelize", "wiki", "NUMBER", "Thanks", "for", "your", "issue", "the", "results", "consistent", "with", "the", "Excel", "application", "NUMBER", "If", "you", "wanna", "to", "read", "it", "as", "be", "please", "set", "value", "as", "string", "data", "type", "NUMBER", "demo", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "eea", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "bc", "NUMBER", "d", "NUMBER", "fe", "NUMBER", "gif", "Thanks", "for", "your", "issue", "NUMBER", "Use", "the", "correct", "coordinates", "in", "the", "SetCellValue", "function", "excelize", "NUMBER", "ToAlphaString", "i", "just", "defined", "column", "but", "the", "row", "number", "be", "miss", "in", "the", "above", "code", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "This", "library", "needs", "Go", "version", "NUMBER", "or", "later", "after", "fix", "issue", "NUMBER", "for", "collecting", "XML", "all", "attributes", "NUMBER", "Relate", "issue", "NUMBER", "NUMBER", "and", "NUMBER", "\u8bf7\u5347\u7ea7\u5230", "Go", "NUMBER", "\u6216\u66f4\u65b0\u7248\u672c", "\u76f8\u5173", "issue", "\u53c2\u8003", "NUMBER", "NUMBER", "and", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "I", "have", "fix", "this", "issue", "by", "use", "worksheet", "name", "instead", "of", "sheet", "index", "relate", "issue", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "and", "NUMBER", "Note", "that", "the", "params", "of", "function", "NewSheet", "also", "has", "be", "change", "please", "adjust", "your", "code", "like", "this", "func", "ExportarExcel", "path", "string", "error", "file", "excelize", "NUMBER", "NewFile", "detalle", "Detalle", "index", "file", "NUMBER", "NewSheet", "detalle", "file", "NUMBER", "SetCellValue", "detalle", "A", "NUMBER", "ID", "file", "NUMBER", "SetActiveSheet", "index", "err", "file", "NUMBER", "SaveAs", "path", "if", "err", "nil", "log", "NUMBER", "Fatal", "err", "return", "nil", "Thanks", "for", "your", "issue", "NUMBER", "I", "have", "test", "on", "xlsx", "and", "it", "works", "well", "NUMBER", "This", "lib", "not", "be", "test", "with", "xlsm", "file", "currently", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "You", "can", "get", "number", "of", "rows", "like", "this", "rows", "len", "xlsx", "NUMBER", "GetRows", "Sheet", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "Please", "provide", "file", "attachments", "If", "you", "can", "NUMBER", "We", "can", "use", "the", "GetSheetMap", "function", "to", "get", "all", "sheets", "index", "and", "name", "map", "and", "use", "Sheet", "index", "to", "set", "the", "cell", "value", "currently", "NUMBER", "Please", "reference", "issue", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "and", "godoc", "LINK", "Skylar", "excelize", "File", "NUMBER", "GetCellValue", "NUMBER", "avelino", "Thanks", "for", "your", "issue", "NUMBER", "I", "have", "fix", "it", "NUMBER", "I", "have", "test", "on", "go", "NUMBER", "darwin", "amd", "NUMBER", "and", "it", "work", "well", "could", "you", "provide", "more", "details", "Thanks", "for", "your", "issue", "NUMBER", "I", "have", "test", "this", "lib", "on", "go", "NUMBER", "darwin", "amd", "NUMBER", "and", "it", "works", "well", "NUMBER", "Could", "you", "provide", "more", "details", "recallhyx", "Please", "provide", "file", "attachments", "if", "you", "can", "NUMBER", "Delveshal", "recallhyx", "I", "have", "fix", "this", "issue", "please", "upgrade", "lib", "to", "the", "last", "version", "NUMBER", "Thanks", "for", "you", "issue", "NUMBER", "If", "the", "column", "name", "be", "fix", "just", "the", "order", "be", "not", "the", "same", "as", "in", "the", "database", "you", "can", "specify", "the", "column", "coordinates", "NUMBER", "This", "library", "doesn", "t", "provide", "the", "function", "to", "change", "the", "result", "set", "currently", "NUMBER", "I", "don", "t", "quite", "understand", "why", "cant", "use", "the", "alphabet", "to", "determine", "the", "column", "coordinates", "Do", "you", "mean", "s", "that", "insert", "rows", "into", "database", "If", "so", "this", "lib", "can", "help", "you", "read", "from", "Excel", "only", "the", "other", "work", "be", "your", "biz", "logic", "and", "that", "doesn", "t", "fall", "within", "the", "scope", "of", "this", "lib", "NUMBER", "You", "can", "prepare", "generate", "a", "SQL", "from", "cell", "value", "like", "this", "var", "values", "string", "for", "idx", "row", "range", "rows", "Skip", "table", "header", "if", "idx", "NUMBER", "continue", "For", "example", "if", "the", "column", "order", "of", "database", "tabe", "be", "profile_refid", "profile_salutation", "profile_extid", "profile_name", "values", "fmt", "NUMBER", "Sprintf", "s", "s", "s", "s", "row", "NUMBER", "row", "NUMBER", "row", "NUMBER", "row", "NUMBER", "sql", "fmt", "NUMBER", "Sprintf", "INSERT", "INTO", "your_tabe", "VALUES", "s", "strings", "NUMBER", "TrimSuffix", "values", "NUMBER", "Adjust", "the", "order", "of", "the", "binding", "parameters", "like", "this", "values", "fmt", "NUMBER", "Sprintf", "s", "s", "s", "s", "row", "NUMBER", "row", "NUMBER", "row", "NUMBER", "row", "NUMBER", "or", "specify", "the", "order", "of", "the", "field", "to", "be", "consistent", "with", "the", "table", "INSERT", "INTO", "your_tabe", "profile_refid", "profile_extid", "profile_salutation", "profile_name", "VALUES", "NUMBER", "No", "you", "need", "to", "handle", "it", "by", "yourself", "NUMBER", "I", "have", "already", "describe", "methods", "in", "the", "above", "of", "course", "you", "can", "handle", "it", "in", "another", "way", "by", "your", "own", "requirement", "NUMBER", "Could", "you", "provide", "more", "details", "or", "file", "attachments", "and", "what", "s", "your", "golang", "version", "I", "have", "tasted", "it", "works", "well", "NUMBER", "Sorry", "you", "couldn", "t", "save", "the", "chart", "as", "picture", "by", "this", "library", "NUMBER", "Thanks", "for", "your", "pull", "request", "NUMBER", "I", "have", "fix", "this", "issue", "and", "update", "go", "test", "in", "another", "commit", "NUMBER", "New", "version", "has", "be", "release", "now", "NUMBER", "plandem", "great", "work", "NUMBER", "I", "might", "to", "evaluate", "and", "fix", "fail", "test", "and", "then", "consider", "whether", "to", "merge", "eventually", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "Reference", "NUMBER", "and", "NUMBER", "if", "the", "number", "of", "cells", "be", "large", "and", "all", "styles", "of", "the", "cell", "be", "same", "we", "can", "set", "style", "with", "range", "in", "a", "batch", "instead", "of", "set", "the", "cell", "style", "one", "by", "one", "NUMBER", "Relationship", "XML", "file", "that", "storage", "hyperlink", "can", "be", "optimized", "by", "reducing", "serialization", "and", "deserialization", "times", "to", "improve", "performance", "NUMBER", "I", "have", "optimized", "the", "performance", "of", "add", "hyperlink", "add", "NUMBER", "comments", "takes", "less", "than", "NUMBER", "second", "now", "NUMBER", "Thanks", "for", "your", "suggestion", "NUMBER", "File", "compatibility", "takes", "precedence", "over", "performance", "for", "this", "reason", "I", "don", "t", "recommend", "users", "to", "operate", "the", "expose", "file", "structure", "directly", "so", "it", "s", "necessary", "to", "operate", "the", "file", "through", "the", "API", "NUMBER", "In", "addition", "if", "the", "number", "of", "cells", "be", "large", "and", "all", "styles", "of", "the", "cell", "be", "same", "we", "can", "set", "style", "with", "range", "in", "a", "batch", "instead", "of", "set", "the", "cell", "style", "one", "by", "one", "NUMBER", "I", "ll", "continue", "to", "focus", "on", "performance", "and", "continue", "to", "do", "optimization", "NUMBER", "Thanks", "for", "your", "great", "work", "NUMBER", "Different", "from", "the", "design", "of", "tealeg", "xlsx", "this", "lib", "needsn", "t", "the", "user", "to", "handle", "the", "ranks", "of", "loops", "and", "positioning", "when", "dealing", "with", "discrete", "cell", "operations", "NUMBER", "For", "example", "if", "we", "only", "need", "to", "set", "the", "value", "for", "the", "cell", "C", "NUMBER", "tealeg", "xlsx", "need", "to", "loop", "NUMBER", "times", "to", "create", "NUMBER", "rows", "and", "then", "set", "the", "cell", "but", "this", "library", "only", "need", "to", "specify", "the", "coordinates", "NUMBER", "That", "s", "also", "the", "reason", "for", "can", "t", "be", "merge", "with", "tealeg", "xlsx", "reference", "issue", "NUMBER", "and", "NUMBER", "NUMBER", "In", "addition", "file", "compatibility", "be", "to", "avoid", "generating", "corrupted", "file", "and", "I", "ll", "consider", "whether", "to", "refactor", "the", "interface", "to", "object", "oriented", "style", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "Reference", "issue", "NUMBER", "vector", "markup", "language", "drawing", "file", "that", "storage", "comments", "performance", "can", "be", "improve", "by", "reducing", "serialization", "and", "deserialization", "times", "NUMBER", "Please", "reference", "issue", "NUMBER", "NUMBER", "NUMBER", "and", "godoc", "LINK", "Skylar", "excelize", "File", "NUMBER", "GetCellValue", "NUMBER", "Use", "sheet", "index", "instead", "of", "sheet", "name", "Config", "NUMBER", "Reference", "issue", "NUMBER", "Thank", "you", "for", "your", "suggestion", "I", "will", "consider", "refactoring", "the", "API", "to", "make", "it", "consistent", "NUMBER", "I", "close", "this", "and", "merge", "it", "into", "issue", "NUMBER", "be", "still", "discussing", "this", "problem", "NUMBER", "Reference", "relate", "issue", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "I", "have", "add", "a", "function", "GetCellHyperLink", "NUMBER", "The", "function", "GetCellHyperLink", "just", "support", "get", "two", "types", "of", "hyperlink", "External", "for", "web", "site", "or", "Location", "NUMBER", "Please", "provide", "file", "attachments", "If", "you", "can", "NUMBER", "Check", "the", "Go", "version", "you", "be", "use", "NUMBER", "This", "library", "needs", "Go", "version", "NUMBER", "or", "later", "after", "fix", "issue", "NUMBER", "for", "collecting", "XML", "all", "attributes", "NUMBER", "Relate", "issue", "NUMBER", "NUMBER", "NUMBER", "and", "NUMBER", "pztrn", "cemremengu", "Thank", "you", "for", "your", "issue", "NUMBER", "I", "have", "add", "function", "SetSheetRow", "LINK", "Skylar", "excelize", "File", "NUMBER", "SetSheetRow", "to", "support", "write", "the", "whole", "line", "at", "once", "NUMBER", "Thanks", "for", "you", "issue", "NUMBER", "The", "memory", "usage", "figures", "in", "the", "wiki", "be", "result", "that", "test", "by", "set", "cell", "value", "case", "NUMBER", "I", "will", "update", "it", "and", "indicate", "the", "test", "method", "NUMBER", "Memory", "usage", "figures", "in", "the", "wiki", "LINK", "Skylar", "excelize", "wiki", "has", "be", "update", "NUMBER", "As", "you", "said", "in", "order", "to", "ensure", "the", "compatibility", "of", "some", "complex", "patterns", "currently", "charts", "table", "formula", "pivot", "and", "etc", "NUMBER", "Excelize", "do", "a", "lot", "of", "checks", "that", "will", "be", "impacted", "on", "performance", "generates", "large", "file", "will", "be", "very", "slow", "NUMBER", "Reference", "performance", "figures", "on", "the", "wiki", "LINK", "Skylar", "excelize", "wiki", "NUMBER", "Thanks", "for", "your", "issue", "I", "have", "fix", "it", "NUMBER", "The", "element", "pattern", "NUMBER", "FgColor", "NUMBER", "RGB", "will", "be", "set", "when", "create", "style", "with", "pattern", "fill", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "To", "auto", "fit", "columns", "width", "we", "need", "to", "calculate", "the", "column", "width", "based", "on", "the", "calculated", "value", "of", "the", "column", "so", "on", "the", "result", "of", "any", "formulae", "we", "need", "to", "implement", "formula", "calculation", "engine", "first", "and", "any", "additional", "characters", "add", "by", "format", "masks", "such", "as", "thousand", "separators", "and", "set", "the", "width", "bestFit", "this", "property", "be", "an", "information", "property", "we", "still", "need", "to", "provide", "the", "width", "for", "the", "column", "and", "customWidth", "properties", "of", "the", "columns", "NUMBER", "That", "s", "an", "interesting", "job", "and", "I", "will", "consider", "add", "support", "for", "this", "feature", "later", "NUMBER", "But", "now", "there", "be", "no", "way", "to", "set", "that", "NUMBER", "I", "ll", "certainly", "accept", "that", "patch", "if", "somebody", "did", "that", "NUMBER", "unkls", "I", "m", "sorry", "this", "feature", "has", "not", "yet", "be", "developed", "NUMBER", "There", "s", "a", "lot", "of", "things", "it", "could", "do", "with", "but", "I", "m", "not", "really", "able", "to", "commit", "more", "time", "to", "this", "project", "right", "now", "NUMBER", "Thanks", "for", "your", "contribution", "I", "have", "just", "simplified", "the", "code", "and", "add", "unit", "test", "NUMBER", "I", "have", "test", "with", "your", "attached", "file", "with", "following", "code", "and", "it", "works", "well", "package", "main", "import", "fmt", "os", "strconv", "github", "NUMBER", "com", "xuri", "excelize", "func", "main", "xlsx", "err", "excelize", "NUMBER", "OpenFile", "NUMBER", "errorin", "NUMBER", "EntSecGroup", "Skylar", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "os", "NUMBER", "Exit", "NUMBER", "Get", "sheet", "index", "NUMBER", "index", "xlsx", "NUMBER", "GetSheetIndex", "cannot", "Get", "all", "the", "rows", "in", "a", "sheet", "NUMBER", "rows", "xlsx", "NUMBER", "GetRows", "sheet", "strconv", "NUMBER", "Itoa", "index", "for", "_", "row", "range", "rows", "for", "_", "colCell", "range", "row", "fmt", "NUMBER", "Print", "colCell", "t", "fmt", "NUMBER", "Println", "Use", "rows", "xlsx", "NUMBER", "GetRows", "fmt", "NUMBER", "Sprintf", "Sheet", "d", "i", "instead", "of", "rows", "xlsx", "NUMBER", "GetRows", "sheets", "i", "relate", "issue", "NUMBER", "NUMBER", "NUMBER", "and", "NUMBER", "I", "have", "test", "with", "your", "code", "and", "it", "works", "well", "the", "value", "of", "Sheet", "NUMBER", "D", "NUMBER", "be", "NUMBER", "try", "call", "the", "function", "UpdateLinkedValue", "LINK", "Skylar", "excelize", "File", "NUMBER", "UpdateLinkedValue", "before", "save", "the", "file", "NUMBER", "Thanks", "for", "your", "issue", "I", "have", "fix", "it", "NUMBER", "Thanks", "for", "your", "issue", "I", "have", "add", "the", "number", "format", "code", "table", "in", "godoc", "LINK", "Skylar", "excelize", "File", "NUMBER", "NewStyle", "you", "can", "create", "a", "date", "format", "like", "this", "xlsx", "NUMBER", "NewStyle", "number_format", "NUMBER", "lang", "zh", "tw", "dlintw", "I", "have", "add", "set", "custom", "number", "format", "support", "NUMBER", "I", "have", "add", "a", "custom", "number", "format", "example", "in", "the", "godoc", "LINK", "Skylar", "excelize", "File", "NUMBER", "NewStyle", "NUMBER", "Some", "number", "format", "code", "can", "be", "interpreted", "differently", "depending", "on", "the", "UI", "language", "of", "the", "implement", "application", "NUMBER", "The", "formatCode", "NUMBER", "be", "Excel", "s", "build", "in", "number", "format", "specified", "by", "the", "formatCode", "attribute", "NUMBER", "Reference", "part", "NUMBER", "of", "the", "NUMBER", "edition", "of", "the", "ECMA", "NUMBER", "Standard", "for", "Office", "Open", "XML", "LINK", "international", "NUMBER", "org", "publications", "standards", "Ecma", "NUMBER", "htm", "NUMBER", "Try", "use", "custom", "number", "format", "if", "you", "can", "t", "find", "what", "you", "need", "for", "the", "build", "in", "general", "and", "national", "language", "of", "number", "format", "code", "NUMBER", "I", "have", "test", "on", "Ubuntu", "NUMBER", "with", "Libre", "Office", "Version", "NUMBER", "Build", "ID", "NUMBER", "NUMBER", "NUMBER", "ubuntu", "NUMBER", "macOS", "Sierra", "NUMBER", "with", "Libre", "Office", "Version", "NUMBER", "Build", "ID", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "b", "NUMBER", "efb", "NUMBER", "a", "NUMBER", "b", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ab", "NUMBER", "f", "NUMBER", "and", "it", "works", "well", "NUMBER", "Please", "provide", "file", "attachments", "If", "you", "can", "NUMBER", "Do", "you", "hide", "the", "column", "N", "I", "find", "that", "column", "L", "was", "hidden", "and", "it", "was", "work", "properly", "with", "Libre", "Office", "both", "Ubuntu", "and", "macOS", "NUMBER", "I", "find", "that", "the", "reason", "of", "can", "t", "be", "hidden", "be", "miss", "customWidth", "attribute", "of", "col", "element", "in", "the", "worksheet", "and", "I", "have", "test", "SetColVisible", "in", "the", "last", "version", "of", "the", "excelize", "lib", "it", "works", "well", "both", "Libre", "Office", "and", "Google", "Sheets", "NUMBER", "Have", "you", "ever", "tried", "to", "update", "the", "lib", "to", "the", "latest", "version", "Repo", "URL", "has", "be", "change", "but", "you", "can", "still", "use", "Luxurioust", "package", "the", "code", "for", "the", "different", "name", "package", "be", "the", "same", "NUMBER", "Just", "check", "the", "commit", "log", "before", "update", "the", "library", "to", "ensure", "compatibility", "with", "exist", "applications", "NUMBER", "Check", "the", "Go", "version", "you", "be", "use", "NUMBER", "This", "library", "needs", "Go", "version", "NUMBER", "or", "later", "after", "fix", "issue", "NUMBER", "for", "collecting", "XML", "all", "attributes", "NUMBER", "Relate", "issue", "NUMBER", "NUMBER", "NUMBER", "Welcome", "please", "read", "contribute", "guidelines", "LINK", "Skylar", "excelize", "blob", "master", "CONTRIBUTING", "NUMBER", "md", "and", "contact", "me", "via", "xuri", "NUMBER", "me", "at", "gmail", "NUMBER", "com", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "I", "have", "initialized", "insert", "remove", "column", "row", "support", "by", "add", "new", "function", "InsertCol", "InsertRow", "RemoveCol", "and", "RemoveRow", "please", "reference", "godoc", "LINK", "NUMBER", "This", "be", "just", "an", "initialization", "of", "this", "feature", "only", "support", "insert", "single", "blank", "row", "and", "just", "auto", "handle", "exist", "hyperlinks", "merge", "cells", "and", "auto", "filters", "currently", "NUMBER", "Function", "name", "that", "contains", "insert", "will", "insert", "before", "given", "index", "that", "will", "make", "the", "API", "more", "concise", "NUMBER", "Welcome", "to", "contribute", "to", "this", "project", "NUMBER", "Hi", "Andrey", "please", "provide", "file", "attachments", "If", "you", "can", "NUMBER", "The", "lib", "be", "based", "on", "the", "ECMA", "NUMBER", "NUMBER", "edition", "NUMBER", "Thanks", "for", "your", "issue", "I", "have", "fix", "it", "by", "add", "miss", "element", "showWhiteSpace", "in", "the", "worksheet", "NUMBER", "Please", "upgrade", "lib", "to", "the", "last", "version", "NUMBER", "The", "cells", "that", "look", "different", "no", "border", "style", "be", "generate", "by", "the", "internal", "function", "completeCol", "it", "will", "preprocess", "to", "complete", "fill", "all", "the", "cells", "maybe", "use", "before", "set", "cell", "value", "and", "these", "cell", "doesn", "t", "inherit", "the", "style", "of", "the", "surrounding", "cells", "so", "it", "cause", "a", "display", "difference", "NUMBER", "I", "have", "fix", "it", "by", "trim", "blank", "cells", "before", "save", "the", "file", "this", "fix", "will", "have", "some", "impact", "on", "performance", "NUMBER", "I", "think", "the", "file", "size", "change", "be", "cause", "by", "the", "compression", "algorithm", "the", "content", "hasn", "t", "be", "affected", "NUMBER", "Yes", "the", "function", "completeCol", "will", "auto", "complete", "in", "prepare", "range", "to", "fill", "cells", "NUMBER", "Could", "you", "provide", "file", "attachments", "and", "more", "details", "Thanks", "for", "your", "issue", "NUMBER", "I", "have", "add", "set", "currency", "format", "support", "and", "I", "ll", "improve", "support", "for", "other", "languages", "later", "NUMBER", "For", "example", "you", "can", "set", "cell", "Sheet", "NUMBER", "B", "NUMBER", "in", "English", "United", "States", "currency", "format", "by", "number_format", "index", "NUMBER", "style", "_", "xlsx", "NUMBER", "NewStyle", "number_format", "NUMBER", "xlsx", "NUMBER", "SetCellStyle", "Sheet", "NUMBER", "B", "NUMBER", "B", "NUMBER", "style", "snailQH", "Thanks", "for", "your", "issue", "NUMBER", "I", "have", "fix", "this", "bug", "NUMBER", "You", "can", "get", "value", "of", "a", "merge", "cell", "by", "function", "GetCellValue", "NUMBER", "Hi", "Maksim", "NUMBER", "I", "have", "initialized", "insert", "remove", "column", "row", "support", "by", "add", "new", "function", "relate", "issue", "NUMBER", "InsertCol", "InsertRow", "RemoveCol", "and", "RemoveRow", "please", "reference", "godoc", "LINK", "Skylar", "excelize", "NUMBER", "This", "be", "just", "an", "initialization", "of", "this", "feature", "only", "support", "remove", "single", "row", "and", "just", "auto", "handle", "exist", "hyperlinks", "merge", "cells", "and", "auto", "filters", "currently", "NUMBER", "Thank", "you", "very", "much", "NUMBER", "Welcome", "to", "donate", "this", "project", "via", "the", "paypal", "donation", "badge", "on", "the", "project", "s", "homepage", "NUMBER", "Sorry", "this", "feature", "has", "not", "yet", "be", "implement", "NUMBER", "I", "will", "work", "on", "it", "as", "soon", "as", "possible", "NUMBER", "Hi", "I", "have", "initialized", "conditional", "format", "filter", "support", "NUMBER", "We", "can", "create", "conditional", "format", "by", "NewConditionalStyle", "LINK", "Skylar", "excelize", "File", "NUMBER", "NewConditionalStyle", "and", "SetConditionalFormat", "LINK", "Skylar", "excelize", "File", "NUMBER", "SetConditionalFormat", "now", "NUMBER", "The", "third", "parameter", "of", "function", "SetConditionalFormat", "can", "be", "parse", "array", "JSON", "object", "and", "you", "can", "create", "different", "conditional", "format", "order", "by", "priority", "NUMBER", "But", "this", "library", "not", "support", "create", "conditional", "format", "with", "formula", "currently", "I", "will", "add", "support", "for", "it", "as", "soon", "as", "possible", "NUMBER", "Use", "use", "the", "standard", "JSON", "format", "like", "this", "xlFile", "NUMBER", "SetConditionalFormat", "Sheet", "NUMBER", "fmt", "NUMBER", "Sprintf", "G", "d", "G", "d", "start_position", "rows", "fmt", "NUMBER", "Sprintf", "type", "cell", "criteria", "TAG", "format", "d", "value", "H", "d", "format_green", "start_position", "format_red", "start_position", "On", "commit", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "LINK", "Skylar", "excelize", "commit", "NUMBER", "e", "NUMBER", "d", "NUMBER", "fa", "NUMBER", "f", "NUMBER", "a", "NUMBER", "a", "NUMBER", "fd", "NUMBER", "ef", "NUMBER", "b", "NUMBER", "a", "I", "have", "to", "rename", "the", "function", "CreateFile", "to", "NewFile", "for", "make", "more", "concise", "name", "and", "rename", "WriteTo", "to", "SaveAs", "because", "it", "collides", "with", "the", "WriterTo", "interface", "in", "io", "LINK", "WriterTo", "package", "NUMBER", "Please", "check", "the", "commit", "log", "before", "update", "the", "library", "to", "ensure", "compatibility", "with", "exist", "applications", "NUMBER", "Do", "you", "mean", "Sheet", "NUMBER", "E", "NUMBER", "be", "string", "type", "value", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "If", "so", "string", "type", "value", "can", "t", "be", "formatted", "as", "a", "date", "format", "NUMBER", "Please", "provide", "file", "attachments", "If", "you", "can", "NUMBER", "This", "library", "just", "support", "Excel", "s", "build", "in", "formats", "LINK", "Skylar", "excelize", "blob", "NUMBER", "cbb", "NUMBER", "d", "NUMBER", "fc", "NUMBER", "c", "NUMBER", "fa", "NUMBER", "d", "NUMBER", "fd", "NUMBER", "c", "NUMBER", "e", "NUMBER", "d", "styles", "NUMBER", "go", "L", "NUMBER", "L", "NUMBER", "currently", "NUMBER", "The", "build", "in", "formats", "index", "numFmtId", "NUMBER", "in", "the", "attachment", "be", "out", "of", "this", "range", "NUMBER", "Same", "as", "the", "issue", "NUMBER", "Try", "to", "set", "new", "number", "format", "for", "Sheet", "NUMBER", "E", "NUMBER", "before", "get", "value", "style", "_", "xlsx", "NUMBER", "NewStyle", "number_format", "NUMBER", "xlsx", "NUMBER", "SetCellStyle", "Sheet", "NUMBER", "E", "NUMBER", "E", "NUMBER", "style", "e", "NUMBER", "xlsx", "NUMBER", "GetCellValue", "Sheet", "NUMBER", "E", "NUMBER", "println", "e", "NUMBER", "NUMBER", "Jun", "NUMBER", "I", "plan", "to", "reflect", "the", "style", "method", "by", "add", "a", "new", "function", "NewStyle", "to", "get", "style", "ID", "and", "pass", "this", "ID", "to", "function", "SetCellStyle", "NUMBER", "I", "will", "export", "this", "function", "after", "completion", "NUMBER", "The", "function", "GetCellStyle", "has", "be", "export", "the", "function", "name", "typo", "in", "commit", "log", "NUMBER", "Thanks", "for", "your", "issue", "I", "have", "do", "some", "optimization", "to", "improve", "performance", "by", "avoid", "repeating", "deserialization", "style", "XML", "file", "NUMBER", "I", "close", "this", "and", "merge", "it", "into", "issue", "NUMBER", "be", "still", "discussing", "this", "problem", "NUMBER", "Okay", "function", "GetColWidth", "and", "GetRowHeight", "has", "be", "export", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "I", "have", "unified", "the", "index", "row", "number", "index", "and", "the", "return", "value", "data", "type", "of", "them", "NUMBER", "Please", "reference", "the", "full", "API", "docs", "LINK", "NUMBER", "You", "can", "use", "the", "function", "GetSheetMap", "LINK", "File", "NUMBER", "GetSheetMap", "to", "get", "the", "number", "of", "sheets", "and", "use", "the", "function", "GetRows", "LINK", "File", "NUMBER", "GetRows", "to", "get", "the", "number", "of", "rows", "and", "columns", "in", "a", "sheet", "NUMBER", "Function", "ToAlphaString", "has", "be", "export", "please", "upgrade", "library", "to", "the", "last", "version", "by", "go", "get", "u", "github", "NUMBER", "com", "xuri", "excelize", "NUMBER", "Relate", "issue", "NUMBER", "No", "you", "can", "t", "this", "library", "doesn", "t", "implement", "the", "formula", "calculation", "engine", "NUMBER", "Implementing", "a", "formula", "engine", "we", "need", "to", "create", "parser", "and", "calculation", "engine", "to", "come", "with", "over", "hundreds", "of", "formula", "named", "references", "volatile", "function", "dynamic", "references", "and", "many", "more", "NUMBER", "It", "would", "require", "a", "very", "large", "number", "of", "test", "cases", "would", "be", "several", "months", "of", "work", "involved", "NUMBER", "That", "s", "an", "interesting", "job", "and", "I", "will", "consider", "add", "support", "for", "this", "feature", "later", "NUMBER", "I", "ll", "certainly", "accept", "that", "patch", "if", "somebody", "did", "that", "NUMBER", "The", "library", "tealeg", "xlsx", "doesn", "t", "implement", "it", "currently", "NUMBER", "Excel", "will", "storage", "last", "computed", "value", "with", "tag", "TAG", "in", "xl", "worksheets", "sheet", "d", "NUMBER", "xml", "if", "the", "originally", "consumed", "cells", "contain", "formulas", "reference", "part", "NUMBER", "of", "the", "NUMBER", "edition", "of", "the", "ECMA", "NUMBER", "Standard", "for", "Office", "Open", "XML", "LINK", "international", "NUMBER", "org", "publications", "and", "standards", "standards", "ecma", "NUMBER", "NUMBER", "So", "you", "can", "get", "same", "computed", "value", "by", "excelize", "function", "GetCellValue", "without", "calling", "function", "UpdateLinkedValue", "LINK", "File", "NUMBER", "UpdateLinkedValue", "or", "use", "the", "library", "tealeg", "xlsx", "to", "open", "a", "xlsx", "file", "that", "created", "by", "Excel", "application", "NUMBER", "Call", "function", "UpdateLinkedValue", "before", "save", "file", "and", "open", "NUMBER", "xlsx", "with", "Excel", "application", "A", "NUMBER", "will", "be", "recalculate", "and", "you", "will", "see", "NUMBER", "then", "close", "and", "save", "it", "use", "excelize", "reopen", "the", "file", "call", "function", "GetCellValue", "you", "ll", "get", "recalculated", "value", "NUMBER", "NUMBER", "In", "other", "words", "let", "Excel", "application", "do", "the", "recalculation", "jobs", "NUMBER", "shuimu", "NUMBER", "Thanks", "for", "your", "issue", "I", "have", "do", "some", "optimization", "to", "improve", "performance", "by", "avoid", "repeating", "deserialization", "style", "XML", "file", "NUMBER", "Unexported", "function", "toAlphaString", "LINK", "L", "NUMBER", "L", "NUMBER", "uses", "a", "similar", "implementation", "in", "the", "library", "NUMBER", "Function", "ToAlphaString", "has", "be", "export", "NUMBER", "Sure", "function", "TitleToNumber", "has", "be", "export", "now", "NUMBER", "Thanks", "for", "your", "issue", "I", "have", "update", "the", "library", "with", "handle", "pre", "defined", "number", "format", "set", "of", "cell", "when", "set", "cell", "value", "with", "time", "NUMBER", "Time", "data", "type", "NUMBER", "Try", "to", "adjust", "the", "width", "of", "the", "column", "to", "make", "it", "display", "normally", "NUMBER", "The", "new", "style", "will", "overwrite", "the", "old", "style", "because", "function", "SetCellStyle", "doesn", "t", "support", "append", "styles", "currently", "so", "please", "set", "the", "style", "at", "once", "or", "set", "the", "style", "in", "batches", "for", "different", "area", "if", "you", "can", "NUMBER", "Thanks", "for", "you", "issue", "I", "have", "add", "new", "function", "GetSheetVisible", "and", "GetRowVisible", "you", "can", "get", "visible", "state", "of", "sheet", "or", "row", "by", "these", "APIs", "NUMBER", "Note", "that", "API", "change", "Function", "HideSheet", "and", "UnhideSheet", "has", "be", "deprecate", "with", "SetSheetVisible", "instead", "function", "HideRow", "and", "UnhideRow", "has", "be", "deprecate", "with", "SetRowVisible", "instead", "NUMBER", "New", "function", "GetColVisible", "and", "SetColVisible", "has", "be", "add", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "I", "have", "fix", "it", "NUMBER", "If", "the", "number", "of", "cells", "be", "large", "and", "all", "styles", "of", "the", "cell", "be", "same", "we", "can", "set", "style", "with", "range", "in", "a", "batch", "instead", "of", "set", "the", "cell", "style", "one", "by", "one", "NUMBER", "In", "addition", "how", "about", "use", "conditional", "format", "to", "mark", "a", "cell", "with", "bad", "value", "pjmuller", "Thanks", "for", "your", "issue", "NUMBER", "I", "have", "initialized", "auto", "filter", "support", "NUMBER", "Yes", "production", "ready", "and", "I", "will", "add", "support", "for", "setting", "a", "column", "list", "filter", "later", "NUMBER", "Thanks", "for", "your", "issue", "I", "have", "fix", "it", "by", "add", "relationships", "in", "drawing", "content", "type", "shall", "NUMBER", "Function", "SetCellValue", "need", "to", "handle", "parse", "and", "convert", "julian", "date", "and", "gregorian", "time", "formats", "in", "Excel", "when", "set", "the", "time", "type", "value", "that", "will", "impact", "library", "performance", "and", "I", "will", "optimize", "it", "appropriate", "NUMBER", "Hi", "dematron", "thanks", "for", "your", "issue", "NUMBER", "I", "have", "to", "add", "conditional", "format", "support", "for", "worksheet", "to", "fix", "this", "issue", "NUMBER", "I", "have", "test", "that", "and", "it", "works", "well", "NUMBER", "Please", "provide", "file", "attachments", "If", "you", "can", "NUMBER", "I", "find", "that", "all", "cell", "linked", "value", "be", "string", "type", "they", "don", "t", "apply", "as", "expect", "conditional", "format", "NUMBER", "Such", "as", "H", "NUMBER", "on", "Sheet", "NUMBER", "in", "the", "result", "NUMBER", "xlsx", "LINK", "linked", "value", "be", "H", "NUMBER", "on", "Sheet", "NUMBER", "but", "NUMBER", "H", "NUMBER", "be", "string", "type", "use", "SetCellValue", "Sheet", "NUMBER", "H", "NUMBER", "NUMBER", "to", "make", "it", "works", "well", "NUMBER", "What", "format", "be", "miss", "after", "fix", "issue", "NUMBER", "I", "have", "try", "to", "run", "temp", "NUMBER", "go", "to", "write", "result", "NUMBER", "xlsx", "renamed", "by", "template", "NUMBER", "xlsx", "NUMBER", "I", "suggest", "that", "replace", "value", "_", "strconv", "NUMBER", "ParseInt", "strconv", "NUMBER", "FormatFloat", "data", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "with", "value", "data", "NUMBER", "and", "format", "cell", "for", "the", "percentage", "that", "needs", "to", "retain", "two", "decimal", "precision", "NUMBER", "build", "index", "be", "NUMBER", "such", "as", "NUMBER", "H", "NUMBER", "H", "NUMBER", "by", "function", "SetCellStyle", "NUMBER", "I", "have", "change", "to", "use", "cell", "style", "priority", "when", "the", "cell", "and", "the", "column", "at", "the", "same", "time", "with", "the", "style", "attribute", "NUMBER", "Thanks", "for", "your", "suggestion", "NUMBER", "I", "will", "consider", "enhancement", "NUMBER", "This", "issue", "has", "be", "resolve", "relate", "issue", "NUMBER", "and", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "I", "have", "test", "that", "function", "SetCellValue", "SetCellStr", "SetCellInt", "and", "they", "won", "t", "affect", "the", "style", "font", "family", "color", "underline", "bold", "and", "align", "of", "cell", "but", "may", "lose", "part", "of", "date", "format", "currency", "settings", "of", "the", "cell", "NUMBER", "Please", "provide", "file", "attachments", "If", "you", "can", "NUMBER", "gitdlam", "I", "have", "fix", "it", "by", "add", "column", "style", "predefined", "detection", "set", "cell", "function", "NUMBER", "The", "token", "be", "nil", "when", "error", "nil", "so", "it", "can", "be", "ignore", "and", "function", "GetRows", "won", "t", "throw", "an", "exception", "NUMBER", "coolboy", "NUMBER", "I", "test", "it", "works", "well", "under", "commit", "NUMBER", "f", "NUMBER", "LINK", "and", "go", "NUMBER", "darwin", "amd", "NUMBER", "Try", "upgrade", "library", "to", "the", "last", "version", "by", "go", "get", "u", "github", "NUMBER", "com", "xuri", "excelize", "and", "attach", "broken", "file", "Workbook", "NUMBER", "xlsx", "if", "you", "can", "NUMBER", "rpokupec", "You", "can", "use", "the", "GetSheetMap", "function", "to", "get", "all", "sheets", "index", "and", "name", "map", "and", "use", "Sheet", "index", "to", "set", "the", "cell", "value", "You", "should", "be", "set", "cell", "value", "by", "SetCellValue", "Sheet", "NUMBER", "NUMBER", "NUMBER", "after", "doing", "xlsx", "NUMBER", "NewSheet", "NUMBER", "Test_", "NUMBER", "In", "other", "words", "function", "SetCellValue", "and", "some", "other", "function", "be", "doesn", "t", "support", "set", "cell", "value", "or", "get", "rows", "by", "sheet", "name", "currently", "it", "needs", "to", "take", "the", "form", "of", "Sheet", "index", "as", "a", "parameter", "NUMBER", "Relate", "issue", "NUMBER", "NUMBER", "and", "NUMBER", "dlintw", "Thanks", "for", "your", "issue", "NUMBER", "This", "library", "just", "support", "Excel", "s", "build", "in", "formats", "LINK", "Skylar", "excelize", "blob", "NUMBER", "cbb", "NUMBER", "d", "NUMBER", "fc", "NUMBER", "c", "NUMBER", "fa", "NUMBER", "d", "NUMBER", "fd", "NUMBER", "c", "NUMBER", "e", "NUMBER", "d", "styles", "NUMBER", "go", "L", "NUMBER", "L", "NUMBER", "currently", "NUMBER", "The", "build", "in", "number", "formats", "index", "numFmtId", "in", "the", "attachment", "be", "out", "of", "this", "range", "NUMBER", "I", "will", "handle", "this", "exception", "by", "returning", "the", "raw", "value", "NUMBER", "You", "can", "use", "function", "SetCellStyle", "with", "build", "in", "number", "format", "index", "by", "number_format", "property", "before", "GetRows", "NUMBER", "dlintw", "Thanks", "for", "you", "issue", "NUMBER", "Function", "SetCellValue", "support", "time", "NUMBER", "Time", "data", "type", "parameter", "now", "NUMBER", "dlintw", "Thanks", "for", "your", "issue", "NUMBER", "I", "have", "fix", "this", "issue", "NUMBER", "dohq", "Function", "SetCellValue", "and", "SetCellFormula", "doesn", "t", "support", "get", "rows", "by", "sheet", "name", "currently", "it", "need", "to", "name", "Sheet", "index", "NUMBER", "Relate", "issue", "NUMBER", "and", "NUMBER", "dlintw", "Using", "both", "Sheet", "index", "and", "sheet", "index", "be", "work", "NUMBER", "a", "NUMBER", "Please", "provide", "file", "attachments", "If", "you", "can", "NUMBER", "Note", "that", "you", "will", "need", "to", "use", "Go", "NUMBER", "to", "support", "for", "collecting", "all", "attributes", "by", "fix", "issue", "NUMBER", "lishali", "NUMBER", "I", "have", "test", "that", "and", "it", "works", "well", "NUMBER", "Please", "try", "upgrade", "library", "to", "the", "last", "version", "by", "go", "get", "u", "github", "NUMBER", "com", "xuri", "excelize", "NUMBER", "I", "have", "checkout", "your", "project", "excel", "piper", "and", "test", "on", "environment", "os", "and", "golang", "version", "same", "with", "you", "but", "still", "unable", "to", "reproduce", "this", "issue", "NUMBER", "Could", "you", "help", "debug", "by", "stepping", "to", "provide", "more", "information", "Please", "try", "to", "handle", "error", "of", "decoder", "NUMBER", "Token", "in", "rows", "NUMBER", "go", "line", "NUMBER", "LINK", "L", "NUMBER", "and", "check", "the", "number", "of", "times", "of", "the", "code", "was", "executed", "in", "the", "loop", "NUMBER", "Did", "you", "catch", "exception", "of", "decoder", "NUMBER", "Token", "I", "notice", "that", "you", "be", "use", "zsh", "could", "you", "provide", "go", "env", "output", "and", "check", "environment", "variable", "GOROOT", "be", "set", "correctly", "in", "NUMBER", "zshrc", "or", "NUMBER", "bash_profile", "NUMBER", "In", "the", "line", "NUMBER", "LINK", "L", "NUMBER", "of", "rows", "NUMBER", "go", "xml", "NUMBER", "Marshal", "will", "be", "throw", "an", "exception", "about", "xml", "NUMBER", "Attr", "if", "use", "the", "xml", "package", "in", "golang", "with", "version", "before", "NUMBER", "That", "s", "the", "reason", "cause", "function", "GetRows", "doesn", "t", "work", "NUMBER", "Have", "you", "install", "a", "version", "before", "NUMBER", "and", "then", "upgrade", "it", "to", "current", "version", "and", "what", "way", "do", "you", "install", "it", "I", "suggest", "that", "try", "install", "by", "homebrew", "LINK", "NUMBER", "I", "just", "talk", "about", "the", "cause", "of", "the", "issue", "and", "notice", "that", "make", "sure", "use", "correct", "version", "of", "xml", "package", "LINK", "in", "golang", "NUMBER", "version", "NUMBER", "Of", "course", "you", "can", "try", "to", "reinstall", "Golang", "runtime", "NUMBER", "mewben", "Thanks", "for", "your", "issue", "NUMBER", "I", "have", "add", "font", "bold", "italic", "and", "underline", "style", "support", "for", "function", "SetCellStyle", "to", "use", "this", "please", "reference", "godoc", "LINK", "NUMBER", "CodyGuo", "Thanks", "for", "your", "issue", "NUMBER", "The", "legacy", "XLS", "use", "Object", "Linking", "and", "Embedding", "OLE", "format", "it", "s", "completely", "different", "with", "OOXML", "and", "can", "t", "be", "support", "by", "the", "same", "code", "NUMBER", "To", "support", "this", "feature", "maybe", "needs", "to", "evaluate", "NUMBER", "pztrn", "Thanks", "for", "your", "issue", "NUMBER", "Function", "GetRows", "doesn", "t", "support", "get", "rows", "by", "sheet", "name", "currently", "it", "need", "to", "name", "Sheet", "index", "NUMBER", "Relate", "issue", "NUMBER", "Sorry", "NUMBER", "I", "ll", "fix", "the", "ambiguity", "of", "the", "doc", "NUMBER", "refflex", "Check", "the", "Go", "version", "you", "be", "use", "NUMBER", "This", "library", "needs", "Go", "version", "NUMBER", "or", "later", "after", "fix", "issue", "NUMBER", "for", "collecting", "XML", "all", "attributes", "NUMBER", "Relate", "issue", "NUMBER", "NUMBER", "Hi", "tvc", "dps", "thanks", "for", "your", "issue", "NUMBER", "Sorry", "for", "my", "late", "reply", "In", "order", "to", "implement", "copy", "worksheets", "between", "xlsx", "file", "we", "need", "to", "handle", "and", "processing", "all", "the", "data", "in", "the", "source", "worksheet", "such", "as", "formulas", "names", "charts", "pictures", "tables", "pivot", "etc", "NUMBER", "that", "s", "an", "interesting", "job", "and", "I", "will", "consider", "add", "support", "for", "this", "feature", "later", "NUMBER", "I", "ll", "certainly", "accept", "that", "patch", "if", "somebody", "did", "that", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "I", "have", "made", "an", "assessment", "of", "that", "NUMBER", "I", "get", "a", "similar", "conclusion", "with", "a", "Python", "library", "LINK", "author", "that", "s", "a", "difficult", "task", "to", "do", "Pivot", "support", "NUMBER", "bubenkoff", "Thanks", "for", "your", "issue", "NUMBER", "This", "library", "needs", "Go", "version", "NUMBER", "or", "later", "after", "fix", "issue", "NUMBER", "for", "collecting", "XML", "all", "attributes", "NUMBER", "Relate", "issue", "NUMBER", "coolboy", "NUMBER", "Hi", "I", "have", "add", "a", "new", "function", "AddShape", "to", "support", "create", "preset", "geometry", "in", "XLSX", "NUMBER", "You", "can", "add", "text", "box", "by", "create", "a", "rect", "rectangle", "type", "shape", "NUMBER", "I", "have", "add", "support", "for", "set", "font", "style", "of", "shape", "text", "NUMBER", "Now", "AddShape", "has", "be", "support", "to", "insert", "a", "new", "line", "note", "that", "the", "format", "set", "parameter", "has", "be", "change", "NUMBER", "coolboy", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "Please", "reference", "the", "full", "API", "docs", "LINK", "doc", "NUMBER", "go", "package", "main", "import", "fmt", "github", "NUMBER", "com", "xuri", "excelize", "v", "NUMBER", "func", "main", "styles", "string", "string", "C", "NUMBER", "F", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "string", "B", "NUMBER", "B", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "string", "C", "NUMBER", "F", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "string", "G", "NUMBER", "G", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "string", "B", "NUMBER", "B", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "string", "G", "NUMBER", "G", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "string", "B", "NUMBER", "B", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "string", "C", "NUMBER", "F", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "string", "G", "NUMBER", "G", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "excelize", "NUMBER", "NewFile", "for", "_", "style", "range", "styles", "s", "err", "f", "NUMBER", "NewStyle", "fmt", "NUMBER", "Sprintf", "border", "type", "left", "color", "NUMBER", "style", "s", "type", "top", "color", "NUMBER", "style", "s", "type", "bottom", "color", "NUMBER", "style", "s", "type", "right", "color", "NUMBER", "style", "s", "style", "NUMBER", "style", "NUMBER", "style", "NUMBER", "style", "NUMBER", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "f", "NUMBER", "SetCellStyle", "Sheet", "NUMBER", "style", "NUMBER", "style", "NUMBER", "s", "Save", "xlsx", "file", "by", "the", "given", "path", "NUMBER", "if", "err", "f", "NUMBER", "SaveAs", "Book", "NUMBER", "xlsx", "err", "nil", "fmt", "NUMBER", "Println", "err", "Please", "let", "me", "know", "if", "my", "answer", "be", "helpful", "to", "you", "NUMBER", "JermineHu", "No", "change", "please", "provide", "file", "attachments", "If", "you", "can", "NUMBER", "Note", "that", "you", "will", "need", "to", "use", "Go", "NUMBER", "to", "support", "for", "collecting", "all", "attributes", "by", "fix", "issue", "NUMBER", "JermineHu", "bonly", "Thanks", "for", "your", "issue", "NUMBER", "This", "library", "needs", "Go", "version", "NUMBER", "or", "later", "after", "fix", "issue", "NUMBER", "for", "collecting", "XML", "all", "attributes", "see", "Go", "NUMBER", "Release", "Notes", "LINK", "and", "encoding", "xml", "support", "for", "collecting", "all", "attributes", "NUMBER", "LINK", "NUMBER", "Please", "let", "me", "know", "if", "my", "answer", "be", "helpful", "to", "you", "NUMBER", "JermineHu", "Thanks", "for", "your", "issue", "NUMBER", "I", "ll", "consider", "add", "the", "function", "GetPicture", "to", "get", "the", "file", "handle", "NUMBER", "JermineHu", "Hi", "I", "have", "add", "new", "function", "GetPicture", "to", "use", "this", "please", "reference", "godoc", "LINK", "NUMBER", "It", "be", "worth", "mentioning", "that", "I", "haven", "t", "yet", "find", "a", "good", "way", "to", "collect", "all", "attributes", "use", "encoding", "xml", "package", "so", "I", "defined", "two", "structures", "encodeWsDr", "decodeWsDr", "and", "swapping", "them", "this", "will", "cause", "performance", "problem", "NUMBER", "I", "will", "continue", "to", "optimize", "this", "NUMBER", "rpokupec", "Thanks", "for", "your", "issue", "I", "have", "fix", "this", "issue", "NUMBER", "However", "in", "order", "to", "use", "this", "feature", "you", "will", "need", "to", "use", "Go", "NUMBER", "to", "support", "for", "collecting", "all", "attributes", "NUMBER", "dlion", "Thanks", "for", "your", "issue", "this", "library", "doesn", "t", "support", "to", "create", "or", "update", "charts", "in", "xlsx", "NUMBER", "I", "intend", "to", "add", "this", "function", "next", "NUMBER", "Try", "to", "open", "a", "pre", "designed", "document", "that", "include", "the", "chart", "modify", "the", "value", "referenced", "by", "the", "chart", "if", "you", "can", "in", "current", "NUMBER", "The", "xlsx", "file", "follows", "the", "OOXML", "specification", "NUMBER", "XML", "be", "compliant", "with", "part", "NUMBER", "of", "the", "NUMBER", "edition", "of", "the", "ECMA", "NUMBER", "Standard", "for", "Office", "Open", "XML", "LINK", "international", "NUMBER", "org", "publications", "standards", "Ecma", "NUMBER", "htm", "NUMBER", "Use", "DrawingML", "to", "generate", "charts", "NUMBER", "dlion", "Hi", "I", "have", "add", "new", "function", "AddChart", "to", "use", "this", "please", "reference", "godoc", "LINK", "Skylar", "excelize", "v", "NUMBER", "NUMBER", "This", "be", "just", "an", "initialization", "of", "the", "chart", "support", "and", "I", "ll", "continue", "to", "optimize", "this", "NUMBER", "rpokupec", "Thanks", "for", "your", "issue", "NUMBER", "I", "think", "deleting", "a", "sheet", "from", "workbook", "will", "be", "affected", "references", "to", "charts", "or", "formulas", "in", "other", "sheet", "NUMBER", "To", "support", "this", "feature", "maybe", "needs", "to", "evaluated", "NUMBER", "rpokupec", "I", "have", "add", "function", "DeleteSheet", "to", "support", "delete", "sheet", "from", "a", "workbook", "NUMBER", "Ryouku", "Thanks", "for", "your", "issue", "NUMBER", "As", "a", "performance", "problem", "I", "think", "this", "problem", "can", "be", "linked", "with", "issue", "NUMBER", "and", "NUMBER", "Next", "I", "would", "like", "to", "design", "a", "streaming", "interface", "to", "solve", "this", "problem", "NUMBER", "beezir", "Thanks", "for", "your", "comments", "NUMBER", "I", "have", "made", "some", "optimize", "remove", "redundant", "XML", "element", "checking", "logic", "NUMBER", "The", "benchmark", "report", "of", "the", "current", "version", "of", "this", "library", "be", "shown", "on", "the", "wiki", "page", "LINK", "NUMBER", "Ryouku", "Yes", "I", "have", "optimized", "the", "memory", "usage", "when", "parsing", "large", "file", "NUMBER", "Please", "upgrade", "the", "library", "to", "the", "last", "version", "NUMBER", "cehuff", "Thanks", "for", "your", "issue", "NUMBER", "I", "have", "fix", "it", "NUMBER", "Thank", "you", "for", "your", "issue", "NUMBER", "I", "have", "add", "printing", "settings", "support", "for", "the", "library", "NUMBER", "Note", "that", "function", "AddPicture", "parameters", "has", "be", "change", "NUMBER", "coolboy", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "I", "ve", "do", "some", "optimization", "on", "this", "issue", "NUMBER", "The", "benchmark", "report", "of", "the", "current", "version", "of", "this", "library", "be", "shown", "on", "the", "wiki", "page", "LINK", "Skylar", "excelize", "wiki", "NUMBER", "I", "will", "continue", "to", "focus", "on", "performance", "issue", "and", "optimize", "it", "NUMBER", "In", "addition", "as", "a", "performance", "relate", "problem", "I", "close", "this", "and", "merge", "it", "into", "the", "issue", "NUMBER", "be", "still", "discussing", "this", "problem", "NUMBER", "JWo", "NUMBER", "F", "Thank", "you", "very", "much", "for", "your", "comments", "NUMBER", "I", "will", "commit", "for", "this", "issue", "as", "soon", "as", "possible", "NUMBER", "JWo", "NUMBER", "F", "I", "have", "add", "new", "function", "GetSheetIndex", "to", "provides", "a", "method", "to", "get", "worksheet", "index", "by", "name", "NUMBER", "You", "can", "also", "use", "the", "GetSheetMap", "function", "to", "get", "all", "sheets", "index", "and", "name", "map", "NUMBER", "Why", "not", "add", "set", "cell", "value", "by", "sheet", "name", "support", "for", "function", "SetCellValue", "directly", "or", "add", "an", "new", "export", "function", "I", "think", "that", "to", "find", "the", "index", "by", "worksheet", "name", "will", "use", "a", "lot", "of", "types", "of", "inference", "internally", "it", "will", "affect", "performance", "NUMBER", "Please", "tell", "me", "if", "there", "be", "a", "better", "idea", "NUMBER", "luca", "moser", "Sorry", "I", "don", "t", "understand", "what", "you", "mean", "could", "you", "provide", "file", "attachments", "or", "some", "code", "boxpear", "Thanks", "for", "your", "issue", "tealeg", "xlsx", "LINK", "provide", "much", "more", "function", "NUMBER", "I", "m", "glad", "to", "contribute", "code", "to", "it", "NUMBER", "It", "be", "object", "oriented", "style", "and", "the", "implementation", "of", "these", "two", "libraries", "be", "not", "the", "same", "NUMBER", "At", "first", "I", "created", "this", "lib", "in", "order", "to", "support", "the", "modification", "of", "Excel", "with", "charts", "NUMBER", "Thanks", "for", "your", "issue", "I", "have", "fix", "it", "NUMBER", "Thanks", "for", "your", "pull", "request", "NUMBER", "Please", "make", "sure", "pass", "the", "go", "test", "NUMBER", "I", "find", "that", "the", "test", "file", "was", "broken", "NUMBER", "coolboy", "NUMBER", "Thanks", "for", "your", "issue", "NUMBER", "I", "have", "add", "function", "SetBorder", "support", "to", "set", "border", "NUMBER", "pztrn", "Thanks", "for", "your", "issue", "NUMBER", "Yes", "this", "library", "will", "be", "having", "performance", "problem", "on", "handle", "with", "large", "file", "I", "also", "recorded", "this", "problem", "on", "the", "Wiki", "LINK", "NUMBER", "Improving", "the", "performance", "will", "be", "part", "of", "the", "plan", "but", "I", "can", "t", "guarantee", "an", "accurate", "time", "to", "submit", "code", "NUMBER", "pztrn", "Hi", "Stanislav", "I", "have", "do", "some", "optimization", "on", "this", "issue", "NUMBER", "I", "call", "Token", "to", "read", "tokens", "one", "by", "one", "instead", "Unmarshal", "NUMBER", "In", "my", "test", "parsing", "NUMBER", "MB", "file", "NUMBER", "rows", "NUMBER", "columns", "occupies", "memory", "about", "NUMBER", "GB", "now", "the", "values", "of", "the", "cells", "be", "all", "strings", "NUMBER", "dlintw", "Thanks", "for", "your", "issue", "I", "have", "fix", "it", "NUMBER", "A", "nice", "addition", "NUMBER", "Thanks", "Nikolas", "NUMBER", "jof", "NUMBER", "Thanks", "for", "your", "issue", "I", "have", "fix", "this", "bug", "NUMBER", "jordyvandomselaar", "Thanks", "for", "your", "issue", "NUMBER", "You", "can", "use", "GetRows", "LINK", "File", "NUMBER", "GetRows", "to", "get", "all", "the", "rows", "in", "a", "sheet", "like", "this", "go", "rows", "err", "f", "NUMBER", "GetRows", "Sheet", "NUMBER", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "return", "for", "_", "row", "range", "rows", "for", "_", "colCell", "range", "row", "fmt", "NUMBER", "Print", "colCell", "t", "fmt", "NUMBER", "Println", "The", "full", "API", "docs", "can", "be", "seen", "on", "go", "NUMBER", "dev", "LINK", "NUMBER", "If", "you", "have", "any", "question", "or", "concerns", "please", "let", "me", "know", "by", "replying", "to", "this", "issue", "NUMBER", "jordyvandomselaar", "Verify", "that", "the", "given", "sheet", "index", "be", "valid", "or", "attach", "your", "code", "and", "NUMBER", "xlsx", "file", "if", "possible", "NUMBER", "A", "nice", "addition", "NUMBER", "Thanks", "Sharsie", "NUMBER", "chengziqing", "Thanks", "for", "your", "issue", "NUMBER", "I", "have", "add", "function", "AddPicture", "support", "to", "add", "picture", "into", "excel", "NUMBER", "harg", "Thanks", "for", "you", "issue", "I", "have", "created", "a", "roadmap", "LINK", "on", "Wiki", "welcome", "to", "discuss", "a", "new", "feature", "or", "change", "NUMBER", "Thanks", "for", "your", "PR", "NUMBER", "I", "find", "that", "some", "code", "will", "cause", "golint", "tips", "NUMBER", "I", "will", "update", "them", "later", "NUMBER", "I", "also", "find", "u", "have", "push", "some", "NUMBER", "xlsx", "file", "after", "test", "these", "excel", "file", "be", "useless", "and", "will", "decrease", "coverage", "NUMBER", "I", "will", "delete", "them", "NUMBER", "aldidana", "Thanks", "for", "u", "pull", "request", "Sorry", "I", "m", "not", "sure", "this", "be", "a", "problem", "NUMBER", "Please", "make", "sure", "the", "path", "of", "the", "XLSX", "file", "be", "correct", "in", "your", "code", "NUMBER", "NaySoftware", "Nice", "thanks", "for", "your", "PR", "NUMBER"], "text_count": [0, 5315, 1415, 932, 464, 30, 852, 0, 13, 483, 777, 1362, 749, 402, 582, 172, 0, 0, 0, 0, 1520, 446, 196, 85, 316, 216, 0, 0, 0, 0, 3871, 2597, 1331, 32, 902, 194, 0, 0, 0, 0, 4368, 17, 1377, 1295, 1242, 0, 0, 0, 0, 0, 798, 381, 472, 174, 247, 233, 312, 0, 0, 0, 2772, 181, 2222, 226, 0, 0, 0, 0, 0, 0, 2149, 396, 1321, 688, 243, 0, 0, 0, 0, 0, 3882, 1478, 457, 1859, 217, 131, 0, 0, 0, 0, 221, 1360, 140, 0, 0, 0, 0, 0, 0, 0, 2645, 467, 1757, 561, 0, 0, 0, 0, 0, 0, 6465, 12057, 345, 587, 125, 448, 0, 0, 0, 0, 16711, 39, 12305, 149, 3063, 3722]}, {"repo": "excelize", "type": "nonelite", "title": "", "number of text": 833, "text": "  I use the sample python code at `https://openpyxl.readthedocs.io/en/stable/` to create an xlsx file `sample.xlsx`, this file can be opened by MS Office and Libreoffice.\r\n\r\nThen I write a go program with excelize to read `sample.xlsx`, but I cannot read the data of the file. `GetActiveSheetIndex()` returns 0, `GetSheetName(1)` returns empty string.\r\n\r\nThe python code:\r\n\r\n```python\r\nfrom openpyxl import Workbook\r\nwb = Workbook()\r\n\r\n# grab the active worksheet\r\nws = wb.active\r\n\r\n# Data can be assigned directly to cells\r\nws['A1'] = 42\r\n\r\n# Rows can also be appended\r\nws.append([1, 2, 3])\r\n\r\n# Python types will automatically be converted\r\nimport datetime\r\nws['A2'] = datetime.datetime.now()\r\n\r\n# Save the file\r\nwb.save(\"sample.xlsx\")\r\n```\r\n\r\nThe go code:\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"github.com/360EntSecGroup-Skylar/excelize/v2\"\r\n\r\n)\r\n\r\nfunc main() {\r\n    xlsx, err := excelize.OpenFile(\"sample.xlsx\")\r\n    if err != nil {\r\n        fmt.Println(err)\r\n        return\r\n    }\r\n\r\n    fmt.Printf(\"GetActiveSheetIndex: %d\\n\", xlsx.GetActiveSheetIndex()) // 0\r\n\r\n    fmt.Printf(\"GetSheetName: %s\\n\", xlsx.GetSheetName(1)) // empty string\r\n\r\n    rows, err := xlsx.GetRows(xlsx.GetSheetName(1))\r\n    if err != nil {\r\n        fmt.Println(err)\r\n        return\r\n    } else {\r\n        // nothing printed\r\n        for _, row := range rows {\r\n            fmt.Println(row)\r\n        }\r\n    }\r\n}\r\n```\r\nSample xlsx file generated by python: [sample.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/3548958/sample.xlsx)\r\n\r\n \r\n- go version: go1.12.9 linux/amd64\r\n- Excelize version: v2.0.1 > Hi @m3ng9i, thanks for your feedback, please try to upgrade the library with the master branch code. Git tag for v2 will be updated on the next release.\r\n\r\nThe master branch is ok, thanks.  # PR Details\r\n\r\nadd missing error check in SetSheetRow() when call SetCellValue().\r\n\r\n## Description\r\n\r\nFix typos in comments;\r\nCheck return error when call SetCellValue().\r\n\r\n## Related Issue\r\n\r\nNone.\r\n\r\n## Motivation and Context\r\n\r\nWhen set  cell value of type time.Time with timezone other than UTC,  the result is empty string.\r\nAfter go through excelize code, I found the bug.\r\n\r\n## How Has This Been Tested\r\n\r\nNo existing suitable tests to add this case, and this fix is pretty straight forward.\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [ x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [x ] My code follows the code style of this project.\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n- [x ] I have read the **CONTRIBUTING** document.\r\n- [ ] I have added tests to cover my changes.\r\n- [ ] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/475?src=pr&el=h1) Report\n> Merging [#475](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/475?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/3092ce6e542bec39135844c4bf45fe22f9e30b7a?src=pr&el=desc) will **decrease** coverage by `0.03%`.\n> The diff coverage is `0%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/475/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/475?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #475      +/-   ##\n==========================================\n- Coverage   96.34%   96.31%   -0.04%     \n==========================================\n  Files          25       25              \n  Lines        5257     5258       +1     \n==========================================\n- Hits         5065     5064       -1     \n- Misses        108      109       +1     \n- Partials       84       85       +1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/475?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [cell.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/475/diff?src=pr&el=tree#diff-Y2VsbC5nbw==) | `88.78% <0%> (-0.58%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/475?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/475?src=pr&el=footer). Last update [3092ce6...64809db](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/475?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  \u5728\u5b98\u65b9\u6587\u6863\u4e2d\u6709\u8bf4 func (f *File) CopySheet(from, to int) error\r\n\u4e0d\u652f\u6301\u5305\u542b\u8868\u683c\u3001\u56fe\u7247\u3001\u56fe\u8868\u548c\u900f\u89c6\u8868\u7b49\u5143\u7d20\u7684\u5de5\u4f5c\u8868\u4e4b\u95f4\u7684\u590d\u5236\u3002\r\n\r\n\u8bf7\u95ee\u672a\u6765\u6709\u8ba1\u5212\u5bf9\u5e94\u542b\u6709 \u8868\u683c \u56fe\u7247 \u56fe\u6807\u7684\u5de5\u4f5c\u8868\u4e4b\u95f4\u7684\u590d\u5236\u5417?  Fix potential memory leak where zw is not Close() when an error occurs.\r\n\r\n# PR Details\r\n\r\n<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\n\r\n<!--- Describe your changes in detail -->\r\n\r\n## Related Issue\r\n\r\n<!--- This project only accepts pull requests related to open issues -->\r\n<!--- If suggesting a new feature or change, please discuss it in an issue first -->\r\n<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->\r\n<!--- Please link to the issue here: -->\r\n\r\n## Motivation and Context\r\n\r\n<!--- Why is this change required? What problem does it solve? -->\r\n\r\n## How Has This Been Tested\r\n\r\n<!--- Please describe in detail how you tested your changes. -->\r\n<!--- Include details of your testing environment, and the tests you ran to -->\r\n<!--- see how your change affects other areas of the code, etc. -->\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [ ] My code follows the code style of this project.\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n- [ ] I have read the **CONTRIBUTING** document.\r\n- [ ] I have added tests to cover my changes.\r\n- [ ] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/469?src=pr&el=h1) Report\n> Merging [#469](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/469?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/448f5524a8ea621fd40978dcc518ff6d9bbcdf83?src=pr&el=desc) will **decrease** coverage by `0.03%`.\n> The diff coverage is `0%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/469/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/469?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #469      +/-   ##\n==========================================\n- Coverage   96.38%   96.34%   -0.04%     \n==========================================\n  Files          24       24              \n  Lines        5255     5257       +2     \n==========================================\n  Hits         5065     5065              \n- Misses        106      108       +2     \n  Partials       84       84\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/469?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [file.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/469/diff?src=pr&el=tree#diff-ZmlsZS5nbw==) | `89.04% <0%> (-2.51%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/469?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/469?src=pr&el=footer). Last update [448f552...5107928](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/469?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  \u6211\u4f7f\u7528go get \u7ed3\u679c\u5f97\u5230killed 9 \r\n``` bash \r\ngo get github.com/360EntSecGroup-Skylar/excelize/v2\r\n```\r\n![image](https://user-images.githubusercontent.com/17996638/62672296-c28d0700-b9cc-11e9-916b-d4317a5ac92d.png)\r\n\r\ngo version 1.12.5 \r\n\r\n\u6211\u5c1d\u8bd5\u4f7f\u7528git clone \r\nWhen I tried git clone\r\n```bash \r\ngit clone https://github.com/360EntSecGroup-Skylar/excelize.git\r\n```\r\n![image](https://user-images.githubusercontent.com/17996638/62672373-fff19480-b9cc-11e9-8c02-878911ab27c1.png)\r\n\r\nWhat should I do  This is based on #461 because I added to that unit test so either merge that one first and then this one, or just merge this one and close the other.\r\n\r\n## Description\r\n\r\nHandle multi row inline strings, simplify the row combination logic and use a\r\nstring builder.\r\n\r\n## Related Issue\r\n\r\n#462 \r\n\r\n## Motivation and Context\r\n\r\nInline strings, not just shared strings, can have the `r` fields. Since the structs matched I went ahead and consolidated them.\r\n\r\n## How Has This Been Tested\r\n\r\nAdded unit test and verified against the sample file provided in the issue.\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [x] My code follows the code style of this project.\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [x] I have added tests to cover my changes.\r\n- [x] All new and existing tests passed.\r\n It looks like the tests go back to Go 1.9 and strings.Builder is unavailable. Do we still support Go 1.9? If so I can change that back to string concatenation. # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/464?src=pr&el=h1) Report\n> Merging [#464](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/464?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/e6b7ac9a03556fcf3b9c59abb93bfa9e3dd2dbcb?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/464/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/464?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #464      +/-   ##\n==========================================\n+ Coverage   96.38%   96.38%   +<.01%     \n==========================================\n  Files          24       25       +1     \n  Lines        5254     5257       +3     \n==========================================\n+ Hits         5064     5067       +3     \n  Misses        106      106              \n  Partials       84       84\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/464?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [xmlSharedStrings.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/464/diff?src=pr&el=tree#diff-eG1sU2hhcmVkU3RyaW5ncy5nbw==) | `100% <100%> (\u00f8)` | |\n| [rows.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/464/diff?src=pr&el=tree#diff-cm93cy5nbw==) | `83.79% <100%> (-0.37%)` | :arrow_down: |\n| [sheet.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/464/diff?src=pr&el=tree#diff-c2hlZXQuZ28=) | `96.51% <0%> (\u00f8)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/464?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/464?src=pr&el=footer). Last update [e6b7ac9...acd7642](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/464?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n Okay I updated the readme to note that Go 1.10 or higher is required.  ## Description\r\n\r\nSheetID only seems to indicate the file name for the sheet.\r\nCheck the sheets list based on index instead. Reordering sheets in Excel changes the order they appear in that list.\r\n\r\n## Related Issue\r\n\r\nFixes #457\r\n\r\n## Motivation and Context\r\n\r\nUsing SheetID is not a reliable way to get a sheet's name based on index.\r\n\r\n## How Has This Been Tested\r\n\r\nVerified with the test file given in #457, and against the existing files in the test directory of this project. I added unit tests to ensure the expected matches.\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [x] My code follows the code style of this project.\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [x] I have added tests to cover my changes.\r\n- [x] All new and existing tests passed.\r\n I see, I'll verify `GetSheetMap` today then. # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/463?src=pr&el=h1) Report\n> Merging [#463](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/463?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/448f5524a8ea621fd40978dcc518ff6d9bbcdf83?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/463/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/463?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #463      +/-   ##\n==========================================\n- Coverage   96.38%   96.38%   -0.01%     \n==========================================\n  Files          24       24              \n  Lines        5255     5254       -1     \n==========================================\n- Hits         5065     5064       -1     \n  Misses        106      106              \n  Partials       84       84\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/463?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [sheet.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/463/diff?src=pr&el=tree#diff-c2hlZXQuZ28=) | `96.5% <100%> (-0.01%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/463?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/463?src=pr&el=footer). Last update [448f552...faaaa52](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/463?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n @xuri I updated `GetSheetMap` to also use the index based approach and added tests that validate the sheet map that gets created. \ud83d\udc4d   # PR Details\r\n\r\n<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\n\r\n<!--- Describe your changes in detail -->\r\n\r\n## Related Issue\r\n\r\n<!--- This project only accepts pull requests related to open issues -->\r\n<!--- If suggesting a new feature or change, please discuss it in an issue first -->\r\n<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->\r\n<!--- Please link to the issue here: -->\r\n\r\n## Motivation and Context\r\n\r\n<!--- Why is this change required? What problem does it solve? -->\r\n\r\n## How Has This Been Tested\r\n\r\n<!--- Please describe in detail how you tested your changes. -->\r\n<!--- Include details of your testing environment, and the tests you ran to -->\r\n<!--- see how your change affects other areas of the code, etc. -->\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [ ] My code follows the code style of this project.\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n- [ ] I have read the **CONTRIBUTING** document.\r\n- [ ] I have added tests to cover my changes.\r\n- [ ] All new and existing tests passed.\r\n  # PR Details\r\n\r\n<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\n\r\n<!--- Describe your changes in detail -->\r\n\r\n## Related Issue\r\n\r\n<!--- This project only accepts pull requests related to open issues -->\r\n<!--- If suggesting a new feature or change, please discuss it in an issue first -->\r\n<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->\r\n<!--- Please link to the issue here: -->\r\n\r\n## Motivation and Context\r\n\r\n<!--- Why is this change required? What problem does it solve? -->\r\n\r\n## How Has This Been Tested\r\n\r\n<!--- Please describe in detail how you tested your changes. -->\r\n<!--- Include details of your testing environment, and the tests you ran to -->\r\n<!--- see how your change affects other areas of the code, etc. -->\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [x] My code follows the code style of this project.\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [ ] I have added tests to cover my changes.\r\n- [ ] All new and existing tests passed.\r\n  ## Description\r\n\r\nWe were parsing the entire sheet twice which was leading to extra memory consumption and parsing time when reading an excel sheet with `Rows()` and `GetRows()`\r\n\r\n## Related Issue\r\n\r\n#439 \r\n\r\n## Motivation and Context\r\n\r\nThis effectively halves the read time for spreadsheets.\r\n\r\n## How Has This Been Tested\r\n\r\nAll tests continue to pass, and I added a benchmark to validate the performance improvement.\r\nBefore:\r\nBenchmarkRows-8   \t     500\t   2434130 ns/op\t  888380 B/op\t    8612 allocs/op\r\nOnlyOnce:\r\nBenchmarkRows-8   \t    1000\t   2123277 ns/op\t  811150 B/op\t    7173 allocs/op\r\n\r\nWhen run against the data sheet used in #439 the read time went from ~6.4 seconds on my machine to ~3.8 seconds.\r\n\r\n## Important!\r\n\r\nThe one thing I did change is that if you declare a blank Rows struct and immediately call Columns on it you will get an index out of bounds error since you'll be trying to access nothing. However, this didn't seem realistic since users should be getting the rows struct by calling `file.Rows(\"someSheet\")` and it works correctly under those conditions. I deleted the part of the test that looked for this behavior. I can add a bounds check to `Columns()` if you prefer but it seems unnecessary to me.\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [x] My code follows the code style of this project.\r\n- [x] My change requires a change to the documentation.\r\n- [x] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [x] I have added tests to cover my changes.\r\n- [x] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/456?src=pr&el=h1) Report\n> Merging [#456](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/456?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/cbe919fdf6c00733513494680b89171b8b1b41a1?src=pr&el=desc) will **increase** coverage by `0.02%`.\n> The diff coverage is `81.25%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/456/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/456?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #456      +/-   ##\n==========================================\n+ Coverage   96.35%   96.38%   +0.02%     \n==========================================\n  Files          24       24              \n  Lines        5324     5255      -69     \n==========================================\n- Hits         5130     5065      -65     \n+ Misses        108      106       -2     \n+ Partials       86       84       -2\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/456?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [rows.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/456/diff?src=pr&el=tree#diff-cm93cy5nbw==) | `84.16% <81.25%> (-2.39%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/456?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/456?src=pr&el=footer). Last update [cbe919f...ac91ca0](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/456?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n Squashed and re-signed. Failing for code coverage on the patch, but this is mostly deleting code.\r\n\r\nAlso, is [this](https://github.com/360EntSecGroup-Skylar/excelize/blob/master/rows.go#L179) block necessary? It's replacing a namespace header for compatibility with Office 2007, but this is only a read operation within the library so Office 2007 isn't a concern at this step.\r\n\r\nIf I remove it, the tests all still pass, the test files I have still read properly, and it shaves another 30% off the read time of a file.\r\n\r\nIf other code in the library is relying on this side effect then I'll hold off on removing it for a later PR and spend some time investigating how to do it. If I can just delete it without any side effects then let me know and I'll remove it in this PR.  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nI want to revent a sheet from being modified.\r\n\r\n**Steps to reproduce the issue:**\r\n1. open protect worksheet\r\n2. select `Set column format` `Set row format` `Select locked cells` `Select unlocked cells`\r\n3. Want to `can modify Modify cell width\uff0cbut can not modify cell value`\r\n4. I fork the this lib. the add API GetProtectSheet, read the FormatSheetProtection, then set the save field which is true. but it not works.\r\n\r\n**Describe the results you received:**\r\n\r\nprotect all, I can not modify modify cell width\r\n\r\n**Describe the results you expected:**\r\n\r\ncan modify Modify cell width\uff0cbut can not modify cell value\r\n\r\n**Output of `go version`:**\r\n\r\n```text\r\ngo version go1.12.6 darwin/amd64\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```text\r\n9279c86d85ab0077f3696b8ec4cfb49ad8222530\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\n\r\nmac:\r\nDarwin localhost 18.6.0 Darwin Kernel Version 18.6.0: Thu Apr 25 23:16:27 PDT 2019; root:xnu-4903.261.4~2/RELEASE_X86_64 x86_64\r\n\r\nexcel:\r\nv16.16.12(190715)\r\n\r\n\r\n\r\n```go\r\nfunc (f *File) GetProtect(sheet string) (*FormatSheetProtection, error) {\r\n\txlsx, err := f.workSheetReader(sheet)\r\n\tif err != nil {\r\n\t\treturn nil, err\r\n\t}\r\n\tvar ret FormatSheetProtection\r\n\tret.AutoFilter = xlsx.SheetProtection.AutoFilter\r\n\tret.DeleteColumns = xlsx.SheetProtection.DeleteColumns\r\n\tret.DeleteRows = xlsx.SheetProtection.DeleteRows\r\n\tret.FormatCells = xlsx.SheetProtection.FormatCells\r\n\tret.FormatColumns = xlsx.SheetProtection.FormatColumns\r\n\tret.FormatRows = xlsx.SheetProtection.FormatRows\r\n\tret.InsertColumns = xlsx.SheetProtection.InsertColumns\r\n\tret.InsertHyperlinks = xlsx.SheetProtection.InsertHyperlinks\r\n\tret.InsertRows = xlsx.SheetProtection.InsertRows\r\n\tret.EditObjects = xlsx.SheetProtection.Objects\r\n\tret.PivotTables = xlsx.SheetProtection.PivotTables\r\n\tret.EditScenarios = xlsx.SheetProtection.Scenarios\r\n\tret.SelectLockedCells = xlsx.SheetProtection.SelectLockedCells\r\n\tret.SelectUnlockedCells = xlsx.SheetProtection.SelectUnlockedCells\r\n\tret.Sort = xlsx.SheetProtection.Sort\r\n\treturn &ret, err\r\n}\r\n```  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1.\r\n2.\r\n3.\r\n\r\n**Describe the results you received:**\r\n\r\n**Describe the results you expected:**\r\n\r\n**Output of `go version`:**\r\n\r\n```text\r\n(paste your output here)\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```text\r\n(paste here)\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\n A translation in english would be welcome too.  Can I open the file in read only mode?\r\n\r\nThe file is opened by another process(Office), but I only need to read some data from it using program.\r\n\r\n```\r\nopen C:\\Users\\andrew\\OneDrive\\REPORT.xlsx: The process cannot access the file because it is being used by another process.\r\n```\r\n\r\nThanks. the minimum program is as the following:\r\n```\r\nfunc main() {\r\n\tf, err := excelize.OpenFile(`C:\\Users\\andrew\\OneDrive\\Work\\Label.xlsx`)\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\treturn\r\n\t}\r\n\ts:=f.GetSheetMap()\r\n\tfmt.Println(s)\r\n}\r\n```\r\nThe Excel file is on my company OneDrive folder. It can be opened and processed using this program without any problem.\r\n\r\nBut If I open the file using Microsoft Excel first. Then this program will fail and the message is:\r\n```\r\nopen C:\\Users\\andrew\\OneDrive\\Work\\Label.xlsx: The process cannot access the file because it is being used by another process.\r\n```  # PR Details\r\n\r\n<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\n\r\n<!--- Describe your changes in detail -->\r\n\r\n## Related Issue\r\n\r\n<!--- This project only accepts pull requests related to open issues -->\r\n<!--- If suggesting a new feature or change, please discuss it in an issue first -->\r\n<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->\r\n<!--- Please link to the issue here: -->\r\n\r\n## Motivation and Context\r\n\r\n<!--- Why is this change required? What problem does it solve? -->\r\n\r\n## How Has This Been Tested\r\n\r\n<!--- Please describe in detail how you tested your changes. -->\r\n<!--- Include details of your testing environment, and the tests you ran to -->\r\n<!--- see how your change affects other areas of the code, etc. -->\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [ ] My code follows the code style of this project.\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n- [ ] I have read the **CONTRIBUTING** document.\r\n- [ ] I have added tests to cover my changes.\r\n- [ ] All new and existing tests passed.\r\n  # PR Details\r\n\r\n<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\n\r\n<!--- Describe your changes in detail -->\r\n\r\n## Related Issue\r\n\r\n<!--- This project only accepts pull requests related to open issues -->\r\n<!--- If suggesting a new feature or change, please discuss it in an issue first -->\r\n<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->\r\n<!--- Please link to the issue here: -->\r\n\r\n## Motivation and Context\r\n\r\n<!--- Why is this change required? What problem does it solve? -->\r\n\r\n## How Has This Been Tested\r\n\r\n<!--- Please describe in detail how you tested your changes. -->\r\n<!--- Include details of your testing environment, and the tests you ran to -->\r\n<!--- see how your change affects other areas of the code, etc. -->\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [ ] My code follows the code style of this project.\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [ ] I have added tests to cover my changes.\r\n- [ ] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/447?src=pr&el=h1) Report\n> Merging [#447](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/447?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/c1357ee58fb7478645fa22adc7a5905e86c1f7c1?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/447/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/447?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #447      +/-   ##\n==========================================\n+ Coverage   96.02%   96.02%   +<.01%     \n==========================================\n  Files          23       23              \n  Lines        4930     4931       +1     \n==========================================\n+ Hits         4734     4735       +1     \n  Misses        109      109              \n  Partials       87       87\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/447?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [sheet.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/447/diff?src=pr&el=tree#diff-c2hlZXQuZ28=) | `96.49% <100%> (\u00f8)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/447?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/447?src=pr&el=footer). Last update [c1357ee...53e653f](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/447?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  **Description**\r\n\r\nfunc SetValueTest() {\r\n    // Open Book1 Excel\r\n    f, err := excelize.OpenFile(\"./Book1.xlsx\")\r\n    if err != nil {\r\n        Println(err)\r\n        return\r\n    }\r\n\r\n    for i := 0; i < 10; i++ {\r\n        f.SetCellValue(\"Sheet1\", fmt.Sprint(\"A\", i + 1), i)\r\n        f.Save()\r\n    }\r\n}\r\n\r\nExcute SetValueTest can reappeare the bug.\r\n\r\n**Steps to reproduce the issue:**\r\n1.Create Book1 excel and write a num on D3\r\n2.Excute SetValueTest\r\n3.You can see A3 is empty\r\n![QQ\u56fe\u724720190724175838](https://user-images.githubusercontent.com/45257277/61784673-b3d71980-ae3c-11e9-805f-020f004d7bfc.png)\r\n\r\nif I save after loop, the problem does not exit\r\n\r\nfor i := 0; i < 10; i++ {\r\n        f.SetCellValue(\"Sheet1\", fmt.Sprint(\"A\", i + 1), i)\r\n    }\r\n\r\nf.Save()\r\n\r\n**Output of `go version`:**\r\ngo1.12.7.windows-amd64\r\n\r\n**Excelize version or commit ID:**\r\n2.0.1 & update to (2019.07.22)\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\nwin10 1903\r\noffice 2019 1906 > Hi @GZLHZ, thanks for your feedback. This issue has been fixed. Please try to upgrade the library with the master branch code, but I don't recommend calling the Save() method in the iteration, which will cause more heap memory allocated.\r\n\r\nOk, Thank you. I know that is not a good save way ,I just try it when I learning how to use and report to you.\ud83d\ude01  Excelize is a very good project, thank you for create this  When I download Excel file from Internet, the content of the Excel file can't be read out from exclize program.\r\nIf I open the Excel file and click on the Enable Edit button and save it, the content can be read out from exclize program.\r\n\r\nHow can I Enable Edit or remove the Protected View using exclize?\r\n```\r\nWindows 10;\r\nC:\\Temp\\a>type go.mod\r\nmodule a\r\n\r\ngo 1.12\r\n\r\nrequire github.com/360EntSecGroup-Skylar/excelize/v2 v2.0.1\r\n```\r\n[User Metrics.zip](https://github.com/360EntSecGroup-Skylar/excelize/files/3424448/User.Metrics.zip)\r\n It works well. Thanks for the quick fix.  **Description**\r\n\r\nI have complicated accounting document with many rows. I was update package Excelize.\r\nAnd now, if i calling RemoveRow() in cycle, i receive an error - out of range.\r\nError location:\r\n> RemoveRow() -> adjustHelper() -> adjustMergeCells() -> deleteMergeCell()\r\n\r\nRow:\r\n\r\n> sheet.MergeCells.Cells = append(sheet.MergeCells.Cells[:idx], sheet.MergeCells.Cells[idx+1:]...)\r\n\r\nI think you need to replace row:\r\n`for i, areaData := range xlsx.MergeCells.Cells {`\r\nwith:\r\n`for i := 0; i < len(xlsx.MergeCells.Cells); i++ {`\r\nin method adjustMergeCells(). And decrement index after each calling method deleteMergeCell().\r\n\r\nLike this:\r\n```\r\nfunc (f *File) adjustMergeCells(xlsx *xlsxWorksheet, dir adjustDirection, num, offset int) error {\r\n\tif xlsx.MergeCells == nil {\r\n\t\treturn nil\r\n\t}\r\n\r\n\t// for i, areaData := range xlsx.MergeCells.Cells { // ---\r\n\tfor i := 0; i < len(xlsx.MergeCells.Cells); i++ { // +++\r\n\t\tareaData := xlsx.MergeCells.Cells[i] // +++\r\n\t\tcoordinates, err := f.areaRefToCoordinates(areaData.Ref)\r\n\t\tif err != nil {\r\n\t\t\treturn err\r\n\t\t}\r\n\t\tx1, y1, x2, y2 := coordinates[0], coordinates[1], coordinates[2], coordinates[3]\r\n\t\tif dir == rows {\r\n\t\t\tif y1 == num && y2 == num && offset < 0 {\r\n\t\t\t\tf.deleteMergeCell(xlsx, i)\r\n\t\t\t\ti-- // +++\r\n\t\t\t}\r\n\t\t\ty1 = f.adjustMergeCellsHelper(y1, num, offset)\r\n\t\t\ty2 = f.adjustMergeCellsHelper(y2, num, offset)\r\n\t\t} else {\r\n\t\t\tif x1 == num && x2 == num && offset < 0 {\r\n\t\t\t\tf.deleteMergeCell(xlsx, i)\r\n\t\t\t\ti-- // +++\r\n\t\t\t}\r\n\t\t\tx1 = f.adjustMergeCellsHelper(x1, num, offset)\r\n\t\t\tx2 = f.adjustMergeCellsHelper(x2, num, offset)\r\n\t\t}\r\n\t\tif x1 == x2 && y1 == y2 {\r\n\t\t\tf.deleteMergeCell(xlsx, i)\r\n\t\t\ti-- // +++\r\n\t\t}\r\n\t\tif areaData.Ref, err = f.coordinatesToAreaRef([]int{x1, y1, x2, y2}); err != nil {\r\n\t\t\treturn err\r\n\t\t}\r\n\t}\r\n\treturn nil\r\n}\r\n```\r\n\r\nThis was solve problem for me. But i did not go deep into solving this problem.\r\n\r\n**Excelize version or commit ID:**\r\nlast update\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\nUbuntu 16.04 [upd.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/3408199/upd.xlsx)\r\n\r\nTemplate code:\r\ndealElems - slice with data.\r\n```\r\ndealElemIndex := -1\r\n\r\nrows, err := xlsx.Rows(sheetName)\r\nif err != nil {\r\n\treturn err\r\n}\r\n\r\nfor rows.Next() {\r\n\tstartCell, err := xlsx.GetCellValue(sheetName, cursor.getAxis())\r\n\tif err != nil {\r\n\t\treturn err\r\n\t}\r\n\r\n\tif startCell == \"{{#EOS}}\" {\r\n\t\txlsx.SetCellValue(sheetName, cursor.getAxis(), \"\")\r\n\t\tbreak\r\n\t}\r\n\r\n\tif strings.Contains(startCell, \"{{#rowsDE}}\") {\r\n\t\tdealElemIndex++\r\n\t\tif dealElemIndex >= len(dealElems) {\r\n\t\t\terr = xlsx.RemoveRow(sheetName, cursor.row+1) // <-- ERROR\r\n\t\t\tif err != nil {\r\n\t\t\t\treturn err\r\n\t\t\t}\r\n\t\t\tcontinue\r\n\t\t}\r\n\t}\r\n\r\n\t// Do Work...\r\n}\r\n``` I'm glad to help you ;) Thanks for your work!  Excel\u4e2d\u8bbe\u7f6e\u7684\u683c\u5f0f\u4e3a\u65e5\u671f\u683c\u5f0f\uff0c\u65f6\u95f4\u4e3a\uff1a`1976/9/24`\uff0cformat\u5982\u4e0b\u56fe\uff1a\r\n![image](https://user-images.githubusercontent.com/22442121/61030317-b6bf1c80-a3ef-11e9-8535-757799daa439.png)\r\n\r\n\u4ee3\u7801\u4e2d\uff0c\u4f7f\u7528`GetRows`\u83b7\u53d6\u8868\u5185\u5bb9\uff0c\u67e5\u770b\u83b7\u53d6\u5230\u7684\u503c\u4e3a`09-24-76`\uff0c\u5176\u5b9e\u5df2\u7ecf\u83b7\u53d6\u5230\u4e86\u65e5\u671f\u683c\u5f0f\uff0c\u6211\u901a\u8fc7time\u5305\u53ef\u4ee5\u8fdb\u884c\u89e3\u6790\u7136\u540e\u518d\u6267\u884c\u91cd\u7ec4\uff0c\u4f46\u662f\u8fd9\u4e2a76\uff0c\u901a\u8fc7time\u5305\u91cd\u7ec4\u540e\uff0c\u4f1a\u81ea\u52a8\u53d8\u62102076\u5e74\r\n\r\n\u5982\u4f55\u83b7\u5f97yyyy\u683c\u5f0f\u7684\u5e74\u4efd\uff1f code is simple, like this:\r\n```\r\n        fp, err := excelize.OpenFile(\"./Book1.xlsx\")\r\n\tif err != nil {\r\n\t\treturn\r\n\t}\r\n\t//\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u83b7\u5f9702-03-76\r\n\tcell, err := fp.GetCellValue(\"Sheet1\", \"A1\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\treturn\r\n\t}\r\n\tfmt.Println(cell)\r\n\t//\u8fd9\u4e2a\u65b9\u6cd5\u540c\u6837\u4f1a\u83b7\u5f9702-03-76\r\n\trows, err := fp.GetRows(fp.GetSheetName(1))\r\n\tif err != nil {\r\n\t\treturn\r\n\t}\r\n\tfmt.Println(rows[0][0])\r\n```\r\n\r\nfile like this:\r\n[Book1.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/3395615/Book1.xlsx)\r\n allright\r\nAt last, I use the way of #336 . I copy `timeFromExcelTime` to my code in order to get `Time.time`  **Description**\r\nMethod `GetComments()` does not return text value of the comments. It returns only addresses of the cells that have comments\r\n\r\n**Steps to reproduce the issue:**\r\n```\r\n// load spreadsheet from file\r\nwb, err := excelize.OpenFile(filePath)\r\nif err != nil {\r\n    return result, errors.Wrapf(err, \"cannot open spreadsheet %s\", filePath)\r\n}\r\n\r\n// just printf available comments\r\nfmt.Printf(\"%+v \\n\", wb.GetComments())\r\n\r\n```\r\n**Example results:**\r\n```\r\nmap[\r\n    Sheet1:[\r\n        {Author: AuthorID:0 Ref:I3 Text:} \r\n        {Author: AuthorID:0 Ref:K3 Text:} \r\n        {Author: AuthorID:0 Ref:M3 Text:} \r\n    ]\r\n]\r\n```\r\n\r\n**Example of results I expected:**\r\n```\r\nmap[\r\n    Sheet1:[\r\n        {Author: AuthorID:0 Ref:I3 Text: some comment text 1} \r\n        {Author: AuthorID:0 Ref:K3 Text: some comment text 2} \r\n        {Author: AuthorID:0 Ref:M3 Text: some comment text 3} \r\n    ]\r\n]\r\n```\r\n\r\n**Output of `go version`:**\r\n```text\r\ngo version go1.12 darwin/amd64\r\n```\r\n\r\n**Excelize version or commit ID:**\r\nBehaves the same in\r\n```text\r\n\"github.com/360EntSecGroup-Skylar/excelize\"\r\n```\r\nas in\r\n```text\r\n\"github.com/360EntSecGroup-Skylar/excelize/v2\"\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\nMac OSX\r\n[issue-example.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/3372804/issue-example.xlsx)\r\n  \r\nTell me, is it possible to change the parameters of the sheet? Such as Zoom, FitToPagesWide, FitToPagesTall?  How can I view API documentation for v2.0.0?\r\n\r\nBoth godoc.org and go 1.12's godoc don't support Go modules. They only show v1.x. The document (https://xuri.me/excelize/en/) says `Last version: v2.0.1`. Does that mean it's for new version > v2.0.0. \r\nShould we use `github.com/360EntSecGroup-Skylar/excelize/v2` instead of `github.com/360EntSecGroup-Skylar/excelize` on the following page? https://xuri.me/excelize/en/base/installation.html#install @AngangGuo That doc is outdated: it is for `v1`.\r\n\r\nUse `github.com/360EntSecGroup-Skylar/excelize/v2` in your `import`.\r\nBuild your project as a Go module (`go mod init`) and set `GO11MODULE=on` for all `go` tasks for this project. With Go modules you don't have to explicitely `go get`: it will be automatic on `go build`.  Hello all,\r\nI have pulled latest Excelize code, but now this error appeared in some of latest updates. \r\n\r\nWhen I create new style, and I tell NewStyle function that I do not want my font to be italic, I still get style with italic font and my cells get italic. \r\n\r\nHere is code for test: \r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\r\n\tf := excelize.NewFile() // create new file option\r\n\r\n\tcategories := map[string]string{\"A2\": \"Small\", \"A3\": \"Normal\", \"A4\": \"Large\", \"B1\": \"Apple\", \"C1\": \"Orange\", \"D1\": \"Pear\"}\r\n    values := map[string]int{\"B2\": 2, \"C2\": 3, \"D2\": 3, \"B3\": 5, \"C3\": 2, \"D3\": 4, \"B4\": 6, \"C4\": 7, \"D4\": 8}\r\n\r\n\tfor k, v := range categories {\r\n        f.SetCellValue(\"Sheet1\", k, v)\r\n\t}\r\n\r\n    for k, v := range values {\r\n        f.SetCellValue(\"Sheet1\", k, v)\r\n\t}\r\n\t// CREATING STYLE WITH ITALIC: FALSE\r\n\tstyle, err := f.NewStyle(`{\"alignment\":{\"horizontal\":\"center\", \"vertical\":\"center\", \"wrap_text\":false, \"indent\":0, \"justify_last_line\":false, \"shrink_to_fit\":false, \"text_rotation\":0}, \"font\":{\"size\":11, \"name\":\"Calibri\", \"bold\":true, \"underline\":\"\", \"italic\":false, \"family\":\"\", \"color\":\"#ffffff\"}, \"fill\":{\"type\":\"pattern\", \"color\":[\"#00c5ff\"], \"pattern\":1}}\r\n\t`)\r\n\terr = f.SetCellStyle(\"Sheet1\", \"A1\", \"D1\", style)\r\n\r\n    err = f.SaveAs(\"./Book1.xlsx\")\r\n    if err != nil {\r\n        fmt.Println(err)\r\n    }\r\n}\r\n\r\nResult:\r\n\r\n<a href='https://postimg.cc/LqXGCCbM' target='_blank'><img src='https://i.postimg.cc/LqXGCCbM/Screen-Shot-2019-06-19-at-11-18-34.png' border='0' alt='Screen-Shot-2019-06-19-at-11-18-34'/></a>\r\n\r\nThank you all :) \r\n\r\n @xuri I am getting this issue both on MS office (I will ask for version) and on Open office. \r\nHere is Open office info:\r\n<a href='https://postimg.cc/JyRXcfDX' target='_blank'><img src='https://i.postimg.cc/JyRXcfDX/Screen-Shot-2019-06-21-at-21-52-54.png' border='0' alt='Screen-Shot-2019-06-21-at-21-52-54'/></a>  Is it possible to convert xlsx file to csv, using excelize? Can't find manual about this feature  \u4e00\u4e2acell\u5185\u7684\u5982\u679c\u5b58\u5728\u591a\u884c\u6570\u636e\u65f6\uff0c\u8bfb\u53d6cell\u6570\u636e\u65f6\u53ea\u4f1a\u8fd4\u56de\u7b2c\u4e00\u884c\u7684\u6570\u636e\uff0c\u6362\u884c\u540e\u7684\u6570\u636e\u90fd\u4f1a\u4e22\u5931\r\n\r\n\u672c\u5730\u5f00\u53d1\u73af\u5883\u662f\r\nmac 10.14  \r\ngo 1.11\r\n\u5f15\u7528\u7684\u5e93\u662f\r\ngithub.com/360EntSecGroup-Skylar/excelize @xuri \u62b1\u6b49\uff0c\u662f\u6211\u4f7f\u7528\u6709\u95ee\u9898  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\nIf you try to open and save an excel file, which has formatterd\\colored\\cell borders, it corrupts the file\r\n`xlsx, err := excelize.OpenFile(\"./Book1.xlsx\")`\r\n`\tif err != nil {`\r\n\t\t`fmt.Println(err)`\r\n\t\t`return`\r\n\t`}`\r\n`err = xlsx.Save()`\r\n\t`if err != nil {`\r\n\t\t`fmt.Println(\"unable to save Internal timesheet, error: \", err)`\r\n\t\t`os.Exit(1)`\r\n\t`}`\r\n**Steps to reproduce the issue:**\r\n1.\r\n2.\r\n3.\r\n\r\n**Describe the results you received:**\r\n\r\n**Describe the results you expected:**\r\n\r\n**Output of `go version`:**\r\n\r\n```text\r\ngo version go1.12.5 darwin/amd64\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```text\r\ngithub.com/360EntSecGroup-Skylar/excelize/v2 v2.0.1-0.20190601073747-d038ca2e9c75\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\nMac OS\r\nExcel for mac 16.13 I can't upload the actual attachment since it has some confidential data, but it happens for any excel file, so let me recreate the scenario with a regular file and upload that.  Case 1:\r\nYou should only change the font to \"Yu Gothic\", but bold and italic are valid.\r\nThe same event occurs regardless of the font setting.\r\n```\r\n// Case01.go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\tf := excelize.NewFile();\r\n\tstyle, err := f.NewStyle(`{\"font\":{\"family\":\"Yu Gothic\"}}`);\r\n\tif err != nil {\r\n\t\tfmt.Println(err);\r\n\t}\r\n\tf.SetCellStyle(\"Sheet1\", \"A2\", \"A2\", style);\r\n\tf.SetCellValue(\"Sheet1\", \"A2\", \"Hello world.\");\r\n\tf.SaveAs(\"./Book_Case01.xlsx\");\r\n}\r\n```\r\n\r\n![case01](https://user-images.githubusercontent.com/48995370/59281062-9c373d80-8ca1-11e9-83be-4571c532f34c.png)\r\n\r\n[Book_Case01.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/3277007/Book_Case01.xlsx)\r\n\r\n\r\n\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\r\n\r\nCase 2:\r\nYou change the font to \"Yu Gothic\" and set the bool values of \"bold\" and \"italic\" to false, but bold and italic are valid.\r\n```\r\n// Case02.go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\tf := excelize.NewFile();\r\n\tstyle, err := f.NewStyle(`{\"font\":{\"bold\":false,\"italic\":false,\"family\":\"Yu Gothic\"}}`);\r\n\tif err != nil {\r\n\t\tfmt.Println(err);\r\n\t}\r\n\tf.SetCellStyle(\"Sheet1\", \"B3\", \"B3\", style);\r\n\tf.SetCellValue(\"Sheet1\", \"B3\", \"Hello world.\");\r\n\tf.SaveAs(\"./Book_Case02.xlsx\");\r\n}\r\n```\r\n\r\n![case02](https://user-images.githubusercontent.com/48995370/59281049-95a8c600-8ca1-11e9-8db7-a420c583ecf8.png)\r\n\r\n\r\n[Book_Case02.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/3277006/Book_Case02.xlsx)\r\n\r\n\r\n\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\r\n\r\nI checked the test code and found that the values set for bold and italic were tested with only \"true\", so I'm concerned that I can't confirm what happens in the case of \"false\".\r\n\r\nOutput of go version:\r\ngo version go1.12.1 windows/amd64\r\n\r\nExcelize version or commit ID:\r\n2.0.1\r\n\r\nEnvironment details (OS, Microsoft Excel\u2122 version, physical, etc.):\r\nWindows 10, Excel 2016, Excel 2013.\r\n\r\n Hi @xuri, thanks for reply.\r\nI'm done checking the fix. It's working properly.\r\n![case02](https://user-images.githubusercontent.com/48995370/59434280-31fbd580-8e26-11e9-8186-66afa3fcfbcd.png)\r\n![case01](https://user-images.githubusercontent.com/48995370/59434281-31fbd580-8e26-11e9-8cae-26c57c3459a4.png)\r\n  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\nI have a spreadsheet with merged cells on row 1 (F1:H1). \r\nAfter I call `file.RemoveRow(\"Sheet1\",1)`, the new row 1 which originally does not contain any merged cells will have F1:H1 merged.\r\n[test.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/3271500/test.xlsx)\r\n```\r\n\tfile, err := excelize.OpenFile(\"test.xlsx\")\r\n\tfile.RemoveRow(\"Sheet1\", 1)\r\n\tfile.SaveAs(\"out.xlsx\")\r\n```\r\n\r\n**Output of `go version`:**\r\ngo version go1.12.1 windows/amd64\r\n\r\n**Excelize version or commit ID:**\r\n2.0\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\nWindows 10, Excel 2016\r\n  Hello, I have reported bug with f.SetSheetVisible function. Fix 418 is working for Microsoft office, but issue remains in Open Office.\r\n\r\nTest code: \r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n\r\n    \"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\nfunc main() {\r\n    f := excelize.NewFile()\r\n    // Create a new sheet.\r\n    index := f.NewSheet(\"Sheet2\")\r\n    // Set value of a cell.\r\n    f.SetCellValue(\"Sheet2\", \"A2\", \"Hello world.\")\r\n    f.SetCellValue(\"Sheet1\", \"B2\", 100)\r\n    // Set active sheet of the workbook.\r\n    f.SetActiveSheet(index)\r\n\t// Save xlsx file by the given path.\r\n\terr := f.SetSheetVisible(\"Sheet1\", false)\r\n    err = f.SaveAs(\"./Book1.xlsx\")\r\n    if err != nil {\r\n        fmt.Println(err)\r\n    }\r\n}  [Book_06.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/3268240/Book_06.xlsx)\r\n[Book_07.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/3268241/Book_07.xlsx)\r\n\r\nWhen there are six types of comparison targets...\r\n```\r\n// test01.go\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n\r\n    \"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\nfunc main() {\r\n    categories := map[string]string{\"A2\": \"SS\", \"A3\": \"S\", \"A4\": \"M\", \"A5\": \"L\", \"A6\": \"LL\", \"A7\": \"XL\", \"B1\": \"Apple\", \"C1\": \"Orange\", \"D1\": \"Pear\"}\r\n    values := map[string]int{\"B2\": 2, \"C2\": 3, \"D2\": 3, \"B3\": 5, \"C3\": 2, \"D3\": 4, \"B4\": 6, \"C4\": 7, \"D4\": 8, \"B5\": 6, \"C5\": 7, \"D5\": 8, \"B6\": 6, \"C6\": 7, \"D6\": 8, \"B7\": 6, \"C7\": 7, \"D7\": 8}\r\n    f := excelize.NewFile()\r\n    for k, v := range categories {\r\n        f.SetCellValue(\"Sheet1\", k, v)\r\n    }\r\n    for k, v := range values {\r\n        f.SetCellValue(\"Sheet1\", k, v)\r\n    }\r\n\r\n    f.AddChart(\"Sheet1\", \"E1\", `{\"type\":\"line\",\"series\":[{\"name\":\"Sheet1!$A$2\",\"categories\":\"\",\"values\":\"Sheet1!$B$2:$D$2\"},{\"name\":\"Sheet1!$A$3\",\"categories\":\"Sheet1!$B$1:$D$1\",\"values\":\"Sheet1!$B$3:$D$3\"},{\"name\":\"Sheet1!$A$4\",\"categories\":\"Sheet1!$B$1:$D$1\",\"values\":\"Sheet1!$B$4:$D$4\"},{\"name\":\"Sheet1!$A$5\",\"categories\":\"Sheet1!$B$1:$D$1\",\"values\":\"Sheet1!$B$4:$D$4\"},{\"name\":\"Sheet1!$A$6\",\"categories\":\"Sheet1!$B$1:$D$1\",\"values\":\"Sheet1!$B$4:$D$4\"},{\"name\":\"Sheet1!$A$7\",\"categories\":\"Sheet1!$B$1:$D$1\",\"values\":\"Sheet1!$B$4:$D$4\"}],\"format\":{\"x_scale\":1.0,\"y_scale\":1.0,\"x_offset\":15,\"y_offset\":10,\"print_obj\":true,\"lock_aspect_ratio\":false,\"locked\":false},\"legend\":{\"position\":\"top\",\"show_legend_key\":false},\"title\":{\"name\":\"Fruit Line Chart\"},\"plotarea\":{\"show_bubble_size\":true,\"show_cat_name\":false,\"show_leader_lines\":false,\"show_percent\":true,\"show_series_name\":true,\"show_val\":true},\"show_blanks_as\":\"zero\"}`)\r\n    err := f.SaveAs(\"./Book_06.xlsx\")\r\n    if err != nil {\r\n        fmt.Println(err)\r\n    }\r\n\r\n}\r\n```\r\n\r\n![test01](https://user-images.githubusercontent.com/48995370/59142712-09767480-89fd-11e9-87cb-464bb9cf7e97.png)\r\n\r\nWhen there are seven types of comparison targets...\r\nOf course, also in the case of eight or more, with the same result.\r\n\r\n```\r\n// test02.go\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n\r\n    \"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\nfunc main() {\r\n    categories := map[string]string{\"A2\": \"SS\", \"A3\": \"S\", \"A4\": \"M\", \"A5\": \"L\", \"A6\": \"LL\", \"A7\": \"XL\",  \"A8\": \"XLL\", \"B1\": \"Apple\", \"C1\": \"Orange\", \"D1\": \"Pear\"}\r\n    values := map[string]int{\"B2\": 2, \"C2\": 3, \"D2\": 3, \"B3\": 5, \"C3\": 2, \"D3\": 4, \"B4\": 6, \"C4\": 7, \"D4\": 8, \"B5\": 6, \"C5\": 7, \"D5\": 8, \"B6\": 6, \"C6\": 7, \"D6\": 8, \"B7\": 6, \"C7\": 7, \"D7\": 8, \"B8\": 6, \"C8\": 7, \"D8\": 8}\r\n    f := excelize.NewFile()\r\n    for k, v := range categories {\r\n        f.SetCellValue(\"Sheet1\", k, v)\r\n    }\r\n    for k, v := range values {\r\n        f.SetCellValue(\"Sheet1\", k, v)\r\n    }\r\n\r\n    f.AddChart(\"Sheet1\", \"E1\", `{\"type\":\"line\",\"series\":[{\"name\":\"Sheet1!$A$2\",\"categories\":\"\",\"values\":\"Sheet1!$B$2:$D$2\"},{\"name\":\"Sheet1!$A$3\",\"categories\":\"Sheet1!$B$1:$D$1\",\"values\":\"Sheet1!$B$3:$D$3\"},{\"name\":\"Sheet1!$A$4\",\"categories\":\"Sheet1!$B$1:$D$1\",\"values\":\"Sheet1!$B$4:$D$4\"},{\"name\":\"Sheet1!$A$5\",\"categories\":\"Sheet1!$B$1:$D$1\",\"values\":\"Sheet1!$B$4:$D$4\"},{\"name\":\"Sheet1!$A$6\",\"categories\":\"Sheet1!$B$1:$D$1\",\"values\":\"Sheet1!$B$4:$D$4\"},{\"name\":\"Sheet1!$A$7\",\"categories\":\"Sheet1!$B$1:$D$1\",\"values\":\"Sheet1!$B$4:$D$4\"},{\"name\":\"Sheet1!$A$8\",\"categories\":\"Sheet1!$B$1:$D$1\",\"values\":\"Sheet1!$B$4:$D$4\"}],\"format\":{\"x_scale\":1.0,\"y_scale\":1.0,\"x_offset\":15,\"y_offset\":10,\"print_obj\":true,\"lock_aspect_ratio\":false,\"locked\":false},\"legend\":{\"position\":\"top\",\"show_legend_key\":false},\"title\":{\"name\":\"Fruit Line Chart\"},\"plotarea\":{\"show_bubble_size\":true,\"show_cat_name\":false,\"show_leader_lines\":false,\"show_percent\":true,\"show_series_name\":true,\"show_val\":true},\"show_blanks_as\":\"zero\"}`)\r\n    err := f.SaveAs(\"./Book_07.xlsx\")\r\n    if err != nil {\r\n        fmt.Println(err)\r\n    }\r\n}\r\n\r\n```\r\n\r\n![test02](https://user-images.githubusercontent.com/48995370/59142723-26ab4300-89fd-11e9-85a1-19172f1222da.png)\r\n\r\nWhen the drawing1.xml of Book_06.xlsx and the drawing1.xml of Book_07.xlsx were compared, there was no difference in the file contents.\r\nEven when there were five types of comparison targets, there were no differences in drawing1.xml.\r\nBasically, drawing1.xml does not change with the number of comparison target, so it seems that a problem will occur in the part that refers to drawing1.xml.\r\n\r\n![test03](https://user-images.githubusercontent.com/48995370/59142727-332f9b80-89fd-11e9-8570-546afe07bca5.png)\r\n\r\n\r\nWhen the chart1.xml of Book_06.xlsx and the chart1.xml of Book_07.xlsx were compared, chart1.xml of Book_07.xlsx caught the following part...\r\n\r\n</c:strRef></c:cat><c:val><c:numRef><c:f>Sheet1!$B$4:$D$4</c:f></c:numRef></c:val></c:ser><c:ser><c:idx val=\"6\"></c:idx><c:order val=\"6\"></c:order><c:tx><c:strRef><c:f>Sheet1!$A$8</c:f></c:strRef></c:tx><c:spPr><a:ln cap=\"rnd\" w=\"25400\"><a:solidFill><a:schemeClr val=\"accent7\"></a:schemeClr></a:solidFill></a:ln></c:spPr><c:dLbls><c:showLegendKey val=\"false\"></c:showLegendKey><c:showVal val=\"true\"></c:showVal><c:showCatName val=\"false\"></c:showCatName><c:showSerName val=\"true\"></c:showSerName><c:showPercent val=\"true\"></c:showPercent><c:showBubbleSize val=\"true\"></c:showBubbleSize><c:showLeaderLines val=\"false\"></c:showLeaderLines></c:dLbls><c:cat><c:strRef><c:f>Sheet1!$B$1:$D$1</c:f></c:strRef></c:cat><c:val><c:numRef><c:f>Sheet1!$B$4:$D$4</c:f></c:numRef></c:val></c:ser><c:dLbls><c:showLegendKey val=\"false\"></c:showLegendKey><c:showVal val=\"true\"></c:showVal><c:showCatName val=\"false\"></c:showCatName><c:showSerName val=\"true\"></c:showSerName><c:showPercent val=\"true\"></c:showPercent><c:showBubbleSize val=\"true\"></c:showBubbleSize><c:showLeaderLines val=\"false\"></c:showLeaderLines></c:dLbls>\r\n\r\n\r\n\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\r\n\r\n\r\nIn the argument contents of line 470 of chart.go \"f.addChart (formatSet)\", the component \"cap\" of Series changes from \"len: 6, cap: 6\" to \"len: 7, cap: 9\" to being caught.\r\n\r\ntest01.go\r\nWhen there are six types of comparison targets...\r\n\r\n> github.com/360EntSecGroup-Skylar/excelize.(*File).AddChart() C:/Go/src/github.com/360EntSecGroup-Skylar/excelize/chart.go:470 (PC: 0x5544a5)\r\n   465:         drawingRID := f.addDrawingRelationships(drawingID, SourceRelationshipChart, \"../charts/chart\"+strconv.Itoa(chartID)+\".xml\", \"\")\r\n   466:         err = f.addDrawingChart(sheet, drawingXML, cell, formatSet.Dimension.Width, formatSet.Dimension.Height, drawingRID, &formatSet.Format)\r\n   467:         if err != nil {\r\n   468:                 return err\r\n   469:         }\r\n=> 470:         f.addChart(formatSet)\r\n   471:         f.addContentTypePart(chartID, \"chart\")\r\n   472:         f.addContentTypePart(drawingID, \"drawings\")\r\n   473:         return err\r\n   474: }\r\n   475:\r\n(dlv) p formatSet\r\n*github.com/360EntSecGroup-Skylar/excelize.formatChart {\r\n        Type: \"line\",\r\n        **Series: []github.com/360EntSecGroup-Skylar/excelize.formatChartSeries len: 6, cap: 6, [**\r\n                (*\"github.com/360EntSecGroup-Skylar/excelize.formatChartSeries\")(0xc000114800),\r\n                (*\"github.com/360EntSecGroup-Skylar/excelize.formatChartSeries\")(0xc000114898),\r\n                (*\"github.com/360EntSecGroup-Skylar/excelize.formatChartSeries\")(0xc000114930),\r\n                (*\"github.com/360EntSecGroup-Skylar/excelize.formatChartSeries\")(0xc0001149c8),\r\n                (*\"github.com/360EntSecGroup-Skylar/excelize.formatChartSeries\")(0xc000114a60),\r\n                (*\"github.com/360EntSecGroup-Skylar/excelize.formatChartSeries\")(0xc000114af8),\r\n        ],\r\n        Format: github.com/360EntSecGroup-Skylar/excelize.formatPicture {FPrintsWithSheet: true, FLocksWithSheet: false, NoChangeAspect: false, OffsetX: 15, OffsetY: 10, XScale: 1, YScale: 1, Hyperlink: \"\", HyperlinkType: \"\", Positioning: \"\"},\r\n        Dimension: github.com/360EntSecGroup-Skylar/excelize.formatChartDimension {Width: 480, Height: 290},\r\n        Legend: github.com/360EntSecGroup-Skylar/excelize.formatChartLegend {\r\n                None: false,\r\n                DeleteSeries: []int len: 0, cap: 0, nil,\r\n                Font: (*\"github.com/360EntSecGroup-Skylar/excelize.formatFont\")(0xc0001144b0),\r\n                Layout: (*\"github.com/360EntSecGroup-Skylar/excelize.formatLayout\")(0xc0001144f0),\r\n                Position: \"top\",\r\n                ShowLegendEntry: false,\r\n                ShowLegendKey: false,},\r\n        Title: github.com/360EntSecGroup-Skylar/excelize.formatChartTitle {\r\n                None: false,\r\n                Name: \"Fruit Line Chart\",\r\n                Overlay: false,\r\n                Layout: (*\"github.com/360EntSecGroup-Skylar/excelize.formatLayout\")(0xc000114548),},\r\n        XAxis: github.com/360EntSecGroup-Skylar/excelize.formatChartAxis {\r\n                Crossing: \"\",\r\n                MajorTickMark: \"\",\r\n                MinorTickMark: \"\",\r\n                MinorUnitType: \"\",\r\n                MajorUnit: 0,\r\n                MajorUnitType: \"\",\r\n                DisplayUnits: \"\",\r\n                DisplayUnitsVisible: false,\r\n                DateAxis: false,\r\n                ReverseOrder: false,\r\n                Maximum: 0,\r\n                Minimum: 0,\r\n                NumFormat: \"\",\r\n                NumFont: (*struct { Color string \"json:\\\"color\\\"\"; Bold bool \"json:\\\"bold\\\"\"; Italic bool \"json:\\\"italic\\\"\"; Underline bool \"json:\\\"underline\\\"\" })(0xc0001145f8),\r\n                NameLayout: (*\"github.com/360EntSecGroup-Skylar/excelize.formatLayout\")(0xc000114610),},\r\n        YAxis: github.com/360EntSecGroup-Skylar/excelize.formatChartAxis {\r\n                Crossing: \"\",\r\n                MajorTickMark: \"\",\r\n                MinorTickMark: \"\",\r\n                MinorUnitType: \"\",\r\n                MajorUnit: 0,\r\n                MajorUnitType: \"\",\r\n                DisplayUnits: \"\",\r\n                DisplayUnitsVisible: false,\r\n                DateAxis: false,\r\n                ReverseOrder: false,\r\n                Maximum: 0,\r\n                Minimum: 0,\r\n                NumFormat: \"\",\r\n                NumFont: (*struct { Color string \"json:\\\"color\\\"\"; Bold bool \"json:\\\"bold\\\"\"; Italic bool \"json:\\\"italic\\\"\"; Underline bool \"json:\\\"underline\\\"\" })(0xc0001146c0),\r\n                NameLayout: (*\"github.com/360EntSecGroup-Skylar/excelize.formatLayout\")(0xc0001146d8),},\r\n        Chartarea: struct { Border struct { None bool \"json:\\\"none\\\"\" } \"json:\\\"border\\\"\"; Fill struct { Color string \"json:\\\"color\\\"\" } \"json:\\\"fill\\\"\"; Pattern struct { Pattern string \"json:\\\"pattern\\\"\"; FgColor string \"json:\\\"fg_color\\\"\"; BgColor string \"json:\\\"bg_color\\\"\" } \"json:\\\"pattern\\\"\" } {\r\n                Border: (*struct { None bool \"json:\\\"none\\\"\" })(0xc0001146f8),\r\n                Fill: (*struct { Color string \"json:\\\"color\\\"\" })(0xc000114700),\r\n                Pattern: (*struct { Pattern string \"json:\\\"pattern\\\"\"; FgColor string \"json:\\\"fg_color\\\"\"; BgColor string \"json:\\\"bg_color\\\"\" })(0xc000114710),},\r\n        Plotarea: struct { ShowBubbleSize bool \"json:\\\"show_bubble_size\\\"\"; ShowCatName bool \"json:\\\"show_cat_name\\\"\"; ShowLeaderLines bool \"json:\\\"show_leader_lines\\\"\"; ShowPercent bool \"json:\\\"show_percent\\\"\"; ShowSerName bool \"json:\\\"show_series_name\\\"\"; ShowVal bool \"json:\\\"show_val\\\"\"; Gradient struct { Colors []string \"json:\\\"colors\\\"\" } \"json:\\\"gradient\\\"\"; Border struct { Color string \"json:\\\"color\\\"\"; Width int \"json:\\\"width\\\"\"; DashType string \"json:\\\"dash_type\\\"\" } \"json:\\\"border\\\"\"; Fill struct { Color string \"json:\\\"color\\\"\" } \"json:\\\"fill\\\"\"; Layout github.com/360EntSecGroup-Skylar/excelize.formatLayout \"json:\\\"layout\\\"\" } {\r\n                ShowBubbleSize: true,\r\n                ShowCatName: false,\r\n                ShowLeaderLines: false,\r\n                ShowPercent: true,\r\n                ShowSerName: true,\r\n                ShowVal: true,\r\n                Gradient: (*struct { Colors []string \"json:\\\"colors\\\"\" })(0xc000114748),\r\n                Border: (*struct { Color string \"json:\\\"color\\\"\"; Width int \"json:\\\"width\\\"\"; DashType string \"json:\\\"dash_type\\\"\" })(0xc000114760),\r\n                Fill: (*struct { Color string \"json:\\\"color\\\"\" })(0xc000114788),\r\n                Layout: (*\"github.com/360EntSecGroup-Skylar/excelize.formatLayout\")(0xc000114798),},\r\n        ShowBlanksAs: \"zero\",\r\n        ShowHiddenData: false,\r\n        SetRotation: 0,\r\n        SetHoleSize: 0,}\r\n(dlv)\r\n\r\n\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\r\n\r\ntest02.go\r\nWhen there are seven types of comparison targets...\r\n\r\n(dlv)\r\n> github.com/360EntSecGroup-Skylar/excelize.(*File).AddChart() C:/Go/src/github.com/360EntSecGroup-Skylar/excelize/chart.go:470 (PC: 0x5544a5)\r\n   465:         drawingRID := f.addDrawingRelationships(drawingID, SourceRelationshipChart, \"../charts/chart\"+strconv.Itoa(chartID)+\".xml\", \"\")\r\n   466:         err = f.addDrawingChart(sheet, drawingXML, cell, formatSet.Dimension.Width, formatSet.Dimension.Height, drawingRID, &formatSet.Format)\r\n   467:         if err != nil {\r\n   468:                 return err\r\n   469:         }\r\n=> 470:         f.addChart(formatSet)\r\n   471:         f.addContentTypePart(chartID, \"chart\")\r\n   472:         f.addContentTypePart(drawingID, \"drawings\")\r\n   473:         return err\r\n   474: }\r\n   475:\r\n(dlv) p formatSet\r\n*github.com/360EntSecGroup-Skylar/excelize.formatChart {\r\n        Type: \"line\",\r\n        **Series: []github.com/360EntSecGroup-Skylar/excelize.formatChartSeries len: 7, cap: 9, [**\r\n                (*\"github.com/360EntSecGroup-Skylar/excelize.formatChartSeries\")(0xc0000fd180),\r\n                (*\"github.com/360EntSecGroup-Skylar/excelize.formatChartSeries\")(0xc0000fd218),\r\n                (*\"github.com/360EntSecGroup-Skylar/excelize.formatChartSeries\")(0xc0000fd2b0),\r\n                (*\"github.com/360EntSecGroup-Skylar/excelize.formatChartSeries\")(0xc0000fd348),\r\n                (*\"github.com/360EntSecGroup-Skylar/excelize.formatChartSeries\")(0xc0000fd3e0),\r\n                (*\"github.com/360EntSecGroup-Skylar/excelize.formatChartSeries\")(0xc0000fd478),\r\n                (*\"github.com/360EntSecGroup-Skylar/excelize.formatChartSeries\")(0xc0000fd510),\r\n        ],\r\n        Format: github.com/360EntSecGroup-Skylar/excelize.formatPicture {FPrintsWithSheet: true, FLocksWithSheet: false, NoChangeAspect: false, OffsetX: 15, OffsetY: 10, XScale: 1, YScale: 1, Hyperlink: \"\", HyperlinkType: \"\", Positioning: \"\"},\r\n        Dimension: github.com/360EntSecGroup-Skylar/excelize.formatChartDimension {Width: 480, Height: 290},\r\n        Legend: github.com/360EntSecGroup-Skylar/excelize.formatChartLegend {\r\n                None: false,\r\n                DeleteSeries: []int len: 0, cap: 0, nil,\r\n                Font: (*\"github.com/360EntSecGroup-Skylar/excelize.formatFont\")(0xc0001124b0),\r\n                Layout: (*\"github.com/360EntSecGroup-Skylar/excelize.formatLayout\")(0xc0001124f0),\r\n                Position: \"top\",\r\n                ShowLegendEntry: false,\r\n                ShowLegendKey: false,},\r\n        Title: github.com/360EntSecGroup-Skylar/excelize.formatChartTitle {\r\n                None: false,\r\n                Name: \"Fruit Line Chart\",\r\n                Overlay: false,\r\n                Layout: (*\"github.com/360EntSecGroup-Skylar/excelize.formatLayout\")(0xc000112548),},\r\n        XAxis: github.com/360EntSecGroup-Skylar/excelize.formatChartAxis {\r\n                Crossing: \"\",\r\n                MajorTickMark: \"\",\r\n                MinorTickMark: \"\",\r\n                MinorUnitType: \"\",\r\n                MajorUnit: 0,\r\n                MajorUnitType: \"\",\r\n                DisplayUnits: \"\",\r\n                DisplayUnitsVisible: false,\r\n                DateAxis: false,\r\n                ReverseOrder: false,\r\n                Maximum: 0,\r\n                Minimum: 0,\r\n                NumFormat: \"\",\r\n                NumFont: (*struct { Color string \"json:\\\"color\\\"\"; Bold bool \"json:\\\"bold\\\"\"; Italic bool \"json:\\\"italic\\\"\"; Underline bool \"json:\\\"underline\\\"\" })(0xc0001125f8),\r\n                NameLayout: (*\"github.com/360EntSecGroup-Skylar/excelize.formatLayout\")(0xc000112610),},\r\n        YAxis: github.com/360EntSecGroup-Skylar/excelize.formatChartAxis {\r\n                Crossing: \"\",\r\n                MajorTickMark: \"\",\r\n                MinorTickMark: \"\",\r\n                MinorUnitType: \"\",\r\n                MajorUnit: 0,\r\n                MajorUnitType: \"\",\r\n                DisplayUnits: \"\",\r\n                DisplayUnitsVisible: false,\r\n                DateAxis: false,\r\n                ReverseOrder: false,\r\n                Maximum: 0,\r\n                Minimum: 0,\r\n                NumFormat: \"\",\r\n                NumFont: (*struct { Color string \"json:\\\"color\\\"\"; Bold bool \"json:\\\"bold\\\"\"; Italic bool \"json:\\\"italic\\\"\"; Underline bool \"json:\\\"underline\\\"\" })(0xc0001126c0),\r\n                NameLayout: (*\"github.com/360EntSecGroup-Skylar/excelize.formatLayout\")(0xc0001126d8),},\r\n        Chartarea: struct { Border struct { None bool \"json:\\\"none\\\"\" } \"json:\\\"border\\\"\"; Fill struct { Color string \"json:\\\"color\\\"\" } \"json:\\\"fill\\\"\"; Pattern struct { Pattern string \"json:\\\"pattern\\\"\"; FgColor string \"json:\\\"fg_color\\\"\"; BgColor string \"json:\\\"bg_color\\\"\" } \"json:\\\"pattern\\\"\" } {\r\n                Border: (*struct { None bool \"json:\\\"none\\\"\" })(0xc0001126f8),\r\n                Fill: (*struct { Color string \"json:\\\"color\\\"\" })(0xc000112700),\r\n                Pattern: (*struct { Pattern string \"json:\\\"pattern\\\"\"; FgColor string \"json:\\\"fg_color\\\"\"; BgColor string \"json:\\\"bg_color\\\"\" })(0xc000112710),},\r\n        Plotarea: struct { ShowBubbleSize bool \"json:\\\"show_bubble_size\\\"\"; ShowCatName bool \"json:\\\"show_cat_name\\\"\"; ShowLeaderLines bool \"json:\\\"show_leader_lines\\\"\"; ShowPercent bool \"json:\\\"show_percent\\\"\"; ShowSerName bool \"json:\\\"show_series_name\\\"\"; ShowVal bool \"json:\\\"show_val\\\"\"; Gradient struct { Colors []string \"json:\\\"colors\\\"\" } \"json:\\\"gradient\\\"\"; Border struct { Color string \"json:\\\"color\\\"\"; Width int \"json:\\\"width\\\"\"; DashType string \"json:\\\"dash_type\\\"\" } \"json:\\\"border\\\"\"; Fill struct { Color string \"json:\\\"color\\\"\" } \"json:\\\"fill\\\"\"; Layout github.com/360EntSecGroup-Skylar/excelize.formatLayout \"json:\\\"layout\\\"\" } {\r\n                ShowBubbleSize: true,\r\n                ShowCatName: false,\r\n                ShowLeaderLines: false,\r\n                ShowPercent: true,\r\n                ShowSerName: true,\r\n                ShowVal: true,\r\n                Gradient: (*struct { Colors []string \"json:\\\"colors\\\"\" })(0xc000112748),\r\n                Border: (*struct { Color string \"json:\\\"color\\\"\"; Width int \"json:\\\"width\\\"\"; DashType string \"json:\\\"dash_type\\\"\" })(0xc000112760),\r\n                Fill: (*struct { Color string \"json:\\\"color\\\"\" })(0xc000112788),\r\n                Layout: (*\"github.com/360EntSecGroup-Skylar/excelize.formatLayout\")(0xc000112798),},\r\n        ShowBlanksAs: \"zero\",\r\n        ShowHiddenData: false,\r\n        SetRotation: 0,\r\n        SetHoleSize: 0,}\r\n(dlv)\r\n\r\n\r\n\r\n[delve_test01.txt](https://github.com/360EntSecGroup-Skylar/excelize/files/3268290/delve_test01.txt)\r\n[delve_test02.txt](https://github.com/360EntSecGroup-Skylar/excelize/files/3268291/delve_test02.txt)\r\n Hi @xuri, thanks for reply.\r\nI'm done checking the fix. It's working properly.\r\nThanks for your prompt response.\r\n\r\n![fix](https://user-images.githubusercontent.com/48995370/59155478-502fa180-8ac5-11e9-8e3d-625e487585d8.png)\r\n  Excelize broke xlsx file when InsertRow and sheet contain some summarized cells.\r\nFor example\r\n\r\n     A\r\n1   1\r\n2   2\r\n3   3\r\n4   4\r\n5   5\r\n6   15\r\n\r\nSum in cell A6.\r\nxlsx.InsertRow(\"Sheet1\", 2) and as result file is broken.  Today I have updated excelize (previous update was 2 or 3 month ago).\r\nAfter that appeared problem with lost **bold** formatting on text in cells.\r\n\r\nOpen file in Excel, make some cells **bold**, save file.\r\nThan, open and save file by Excelize, open again in Excel and all cells is not bold.\r\n  Hello all, I am using excelize for a long time, and I have noticed that I am getting blank sheet (blank file). \r\nIt is happening on all OS platforms. \r\nIssue happens randomly, if i start same export of data once it can be filled, once I get empty sheet. \r\nIt can happen that I have blank once in 1000 or so. \r\nAfter hard testing I have spotted that part which is causing this issue is in f.DeleteSheet(\"Sheet1\")\r\nI am calling this function before I use SaveAs. Before that I have tracked data, and xlsx file should be populated, but excelize saves empty file.   Hi @xuri, I can not provide you with my code because of ISO. \r\nBut I will try to create same test code as I use. I build go file on Ubuntu 16.04.5 LTS, and GO version is is: go1.10.4 linux/amd64.  Hello all. Thank you for your work.\r\nI have noticed that err := f.SetSheetVisible(\"Sheet1\", false) does not work. Here is code:\r\n\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n\r\n    \"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\nfunc main() {\r\n    f := excelize.NewFile()\r\n    // Create a new sheet.\r\n    index := f.NewSheet(\"Sheet2\")\r\n    // Set value of a cell.\r\n    f.SetCellValue(\"Sheet2\", \"A2\", \"Hello world.\")\r\n    f.SetCellValue(\"Sheet1\", \"B2\", 100)\r\n    // Set active sheet of the workbook.\r\n    f.SetActiveSheet(index)\r\n\t// Save xlsx file by the given path.\r\n\terr := f.SetSheetVisible(\"Sheet1\", false)\r\n    err = f.SaveAs(\"./Book1.xlsx\")\r\n    if err != nil {\r\n        fmt.Println(err)\r\n    }\r\n}  \u8bf7\u95ee\u6211\u751f\u6210\u7684execl\u5728\u67d0\u4e9b\u8f6f\u4ef6\u4e2d\u4f7f\u7528\u65f6\u4f1a\u62a5 File is not a valid ZIP file \uff0c\u7136\u540e\u6211\u6253\u5f00\u6587\u4ef6\u4fdd\u5b58\u4e00\u4e0b\u5728\u7528\u8f6f\u4ef6\u4f7f\u7528\u5c31\u6ca1\u95ee\u9898\u4e86\uff08\u4fdd\u5b58\u540e\u7684execl\u4f1a\u53d8\u5927\uff09\u3002 \u8bf7\u95ee\u6709\u529e\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f  Hi, thank you very much for this great library.\r\nI would like to edit the file properties as for example the author, title, subject and so on.\r\nThe files created by the program have the following properties as shown in this Windows detail view screenshot:\r\n![Unbenannt](https://user-images.githubusercontent.com/26324160/58724984-44b1eb80-83de-11e9-997c-635d25c254ef.PNG)\r\nIt would be great if I could change those properties. Works like a charm! Thanks  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\nHi, Thanks a million for excelize!\r\n\r\nBut unfortunately, I think I've found a bug connected with formulas feature of .xlsx files.\r\n\r\nIn the excelize it's file property: CalcChain.\r\n\r\nWhen my problem occurs:\r\nIf there was any formula added to .xlsx file and then was removed, the excelize treating it as not nil but like an empty object of '*excelize.xlsxCalcChain' and saves with incorrect structure.\r\n\r\nIf try to open .xlsx file with Excel, got this error:\r\n'Removed Records: Formula from /xl/calcChain.xml part (Calculation properties)'\r\n\r\nHope not made it too unclear\r\n\r\nThanks  Thank you for your great work on excelize. Reading works like a charm. But I have an issue with writing.\r\n\r\nWhen I update a Cell or Add a new Sheet, excel file is corrupted.\r\n\r\n![image](https://user-images.githubusercontent.com/1046787/58537250-d1985180-81f2-11e9-9deb-ffef3128a0df.png)\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<recoveryLog xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"><logFileName>error179160_01.xml</logFileName><summary>Errors were detected in file 'C:\\Projects\\Programming\\go\\src\\github.com\\valasek\\excel\\excel.xlsx'</summary><repairedParts><repairedPart>Repaired Part: /xl/workbook.xml part with XML error.  (Workbook) Load error. Line 2, column 0.</repairedPart></repairedParts></recoveryLog>\r\n\r\n```\r\n\r\nUsed code:\r\n```\r\n// Package excel reads and checks internal timesheets\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n\t\"strconv\"\r\n\r\n\t\"github.com/360EntSecGroup-Skylar/excelize/v2\"\r\n)\r\n\r\nfunc main() {\r\n\r\n\t// open file\r\n\txlsx, err := excelize.OpenFile(\"./excel.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\tos.Exit(1)\r\n\t}\r\n\r\n\t// jump to last row\r\n\tlastRow := 1\r\n\tfor {\r\n\t\tcell, _ := xlsx.GetCellValue(\"Timesheet\", \"A\"+strconv.Itoa(lastRow))\r\n\t\tif cell != \"\" {\r\n\t\t\tlastRow = lastRow + 1\r\n\t\t} else {\r\n\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\r\n\t// mock the data\r\n\t// data := [][]string{\r\n\t// \t[]string{\"Stanislav Valasek\", \"5/17/2019\", \"Microsoft\", \"8\", \"Customer Improving dba name\", \"Standard\"},\r\n\t// \t[]string{\"Stanislav Valasek1\", \"5/17/2019\", \"Microsoft\", \"10\", \"Parsing legal name\", \"Standard\"},\r\n\t// }\r\n\r\n\txlsx.NewSheet(\"NewSheet1\")\r\n\t// index := xlsx.GetSheetIndex(\"Timesheet\")\r\n\t// xlsx.SetActiveSheet(index)\r\n\r\n\t// // write the data\r\n\t// for i, row := range data {\r\n\t// \tfor j, value := range row {\r\n\t// \t\terr := xlsx.SetCellStr(\"Timesheet\", string('A'+j)+strconv.Itoa(lastRow+i), value)\r\n\t// \t\tif err != nil {\r\n\t// \t\t\tfmt.Println(\"unable to write row to excel during update, error: \", err)\r\n\t// \t\t\tos.Exit(1)\r\n\t// \t\t}\r\n\t// \t\tfmt.Printf(\"written [%s, %s] = %s\\n\", string('A'+j), strconv.Itoa(lastRow+i), value)\r\n\t// \t}\r\n\t// }\r\n\r\n\t// save the changes\r\n\terr = xlsx.Save()\r\n\tif err != nil {\r\n\t\tfmt.Println(\"unable to save Internal timesheet, error: \", err)\r\n\t\tos.Exit(1)\r\n\t}\r\n\r\n}\r\n```\r\n\r\nI shared a source excel directly with xuri.\r\n\r\ngo env\r\n\r\n> set GOARCH=amd64\r\n> set GOBIN=\r\n> set GOCACHE=C:\\Users\\stanislav.valasek\\AppData\\Local\\go-build\r\n> set GOEXE=.exe\r\n> set GOFLAGS=\r\n> set GOHOSTARCH=amd64\r\n> set GOHOSTOS=windows\r\n> set GOOS=windows\r\n> set GOPATH=C:\\Users\\stanislav.valasek\\go\r\n> set GOPROXY=\r\n> set GORACE=\r\n> set GOROOT=C:\\SW\\Go\r\n> set GOTMPDIR=\r\n> set GOTOOLDIR=C:\\SW\\Go\\pkg\\tool\\windows_amd64\r\n> set GCCGO=gccgo\r\n> set CC=gcc\r\n> set CXX=g++\r\n> set CGO_ENABLED=1\r\n> set GOMOD=C:\\Projects\\Programming\\go\\src\\github.com\\valasek\\excel\\go.mod\r\n> set CGO_CFLAGS=-g -O2\r\n> set CGO_CPPFLAGS=\r\n> set CGO_CXXFLAGS=-g -O2\r\n> set CGO_FFLAGS=-g -O2\r\n> set CGO_LDFLAGS=-g -O2\r\n> set PKG_CONFIG=pkg-config\r\n> set GOGCCFLAGS=-m64 -mthreads -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fdebug-prefix-map=C:\\Users\\stanislav.valasek\\AppData\\Local\\Temp\\go-build252113706=/tmp/go-build -gno-record-gcc-switches facing same problem\r\n Hi @xuri I confirm that create new Sheet and writing new cells using the code above is fixed now. Tested using v2 branch. \r\n\r\n`require github.com/360EntSecGroup-Skylar/excelize/v2 v2.0.1-0.20190601073747-d038ca2e9c75`\r\n\r\nThenk you for fix and your time!  \u5982\u4f55\u8bbe\u7f6e\u5f62\u72b6\u4e3a\u900f\u660e\uff1f  I got panic when processing an Excel file at the following command:\r\n\trows, _        := xlsx.GetRows(sheetName)\r\nThe same file was processed successfully before the updating of the package.\r\nPrevious version hash I used: eca66180f191ba1209e5d50859be51eec7954281 \r\n\r\n**Steps to reproduce the issue:**\r\n1. Try to process a simple Excel file with no fromatting\r\n2.\r\n3.\r\n\r\n**Describe the results you received:**\r\n\r\npanic error\r\n\r\n**Describe the results you expected:**\r\n\r\nNo error\r\n\r\n**Output of `go version`:**\r\npanic: runtime error: invalid memory address or nil pointer dereference\r\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x8 pc=0x873876]\r\n\r\ngoroutine 1 [running]:\r\ngithub.com/xuri/excelize.(*File).formattedValue(0xc0001ca8c0, 0x1b, 0x0, 0x0, 0x4, 0xc0004a40c0)\r\n\t/go/src/github.com/xuri/excelize/cell.go:561 +0x46\r\ngithub.com/xuri/excelize.(*xlsxC).getValueFrom(0xc0001334c8, 0xc0001ca8c0, 0xc000151770, 0x1, 0x0, 0x0, 0x0)\r\n\t/go/src/github.com/xuri/excelize/rows.go:322 +0x1c9\r\ngithub.com/xuri/excelize.(*File).GetRows(0xc0001ca8c0, 0xc000258220, 0xb, 0xe4a652, 0x1, 0xc000027740, 0x29, 0x0)\r\n\r\n**Excelize version or commit ID:**\r\n623375780586cbd323dc899e17d7235ac610505f\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\n\r\nWindows 7\r\ngo version go1.12.4 windows/amd64\r\n Hi,\r\n\r\nI have the problem using version: https://github.com/360EntSecGroup-Skylar/excelize/commit/623375780586cbd323dc899e17d7235ac610505f\r\nI think this is the latest version.\r\n Hi,\n\nplease use the attached Excel and version: https://github.com/360EntSecGroup-Skylar/excelize/commit/623375780586cbd323dc899e17d7235ac610505f.\n\n\n\n\n--------------------------------------------\nOn Tue, 5/28/19, xuri <notifications@github.com> wrote:\n\n Subject: Re: [360EntSecGroup-Skylar/excelize] GetRows() panics (#411)\n To: \"360EntSecGroup-Skylar/excelize\" <excelize@noreply.github.com>\n Cc: \"dictor66\" <bakterpater@yahoo.com>, \"Mention\" <mention@noreply.github.com>\n Date: Tuesday, May 28, 2019, 8:43 AM\n \n Hi @dictor66, I have\n tested and it works well at rev. eca6618,\n have you tried using the latest code on the master branch?\n or provide a .xlsx file attachment. \u00a0\n \n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view\n it on GitHub, or mute\n the thread. \u4e4b\u524d\u597d\u597d\u7684\uff0c27\u53f7\u66f4\u65b0\u4ee3\u7801\u540e\u4e5f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u9519\u8bef\u6808\u8ddf\u4e0a\u9762\u4e00\u6837\uff0c\u73af\u5883\u4e3a\uff1aWIN7 + GO 1.12.5\u3002\u7b80\u5355\u8c03\u8bd5\u4e00\u4e0b\uff0c\u51fa\u73b0\u95ee\u9898\u65f6 styleSheet.CellXfs\u4e3anil, \u800c s \u4e3a 4.\u5e94\u8be5\u662f\u683c\u5f0f\u6570\u636e\u6ca1\u6709\u8bfb\u53d6\u51fa\u6765\u3002\u4e34\u65f6\u52a0\u4e86\u4e2a\u5224\u65ad\u5148\u7528\u8d77\u6765\u4e86\u3002\u56e0\u4e3a\u662f\u4e1a\u52a1\u6570\u636e\uff0c\u4e0d\u65b9\u4fbf\u516c\u5f00\u4e0a\u4f20\u9644\u4ef6\uff0c\u53ef\u4ee5\u7ed9\u4e2a\u8054\u7cfb\u65b9\u5f0f\u79c1\u4f20\u3002  Hi\r\n\r\nI was wondering if you have an example of how to setup page margins.\r\n\r\nI can see that the options are available but I am unsure how to access them.\r\n\r\nThanks for any help\r\n\r\nDov Thank you.  ### Large amount of data export memory occupies a huge amount, which is far larger than the actual Excel size and can not recover memory.\r\n\r\n### The more the number of exported columns, the more memory is consumed and the memory cannot be reclaimed\r\n\r\n\r\n**The invocation method is:**\r\n\r\n```\r\n                        scol, _ = excelize.ColumnNumberToName(colid)\r\n\t\t\tscolindex = fmt.Sprintf(\"%s%d\", scol, rowcount+2)\r\n\t\t\txlsx.SetCellValue(sheetname, scolindex, rowdata[colid])\r\n```\r\n\r\nThe following is the result of my test:\r\n\r\n```\r\n\r\n1. When exporting only CSV file RAM takes 5.5MB, ( using encoding/csv )\r\n2. Using Excel to export a row, 647 columns ,  RAM  23.7MB, and the actual Excel file size is 11KB.\r\n3. Use Excel to export 10000 rows, 26 columns, RAM 127MB , 0.5 seconds, actual Excel file size is 916KB \r\n4. Using Excel to export large file row: 8000 column:647 RAM 1.9GB , 9 seconds. The actual size of Excel file is 14.3MB.\r\n5. Using Excel to export large file row:10000 column:647 RAM 2.5GB ,12 seconds. The actual size of Excel file is 17.9MB.\r\n\r\n```\r\n**After the file is saved, the memory is not released, only after the program exits.**\r\n\r\n\u5bfc\u51fa\u5217\u6570\u8d8a\u591a\u5360\u7528\u5185\u5b58\u5267\u589e,\u4e0d\u80fd\u56de\u6536\u5185\u5b58\u7684\u95ee\u9898\r\n\r\n\u4ee5\u4e0b\u662f\u6211\u6d4b\u8bd5\u7684\u7ed3\u679c\uff1a\r\n```\r\n\r\n1. \u5f53\u53ea\u5bfc\u51facsv\u6587\u4ef6 RAM\u5360\u75285.5MB, (  encoding/csv )\r\n2. \u4f7f\u7528Excel\u5bfc\u51fa1\u884c,647\u5217 RAM\u5360\u7528 23.7MB ,\u5b9e\u9645Excel\u6587\u4ef6\u5927\u5c0f 11KB\r\n3. \u4f7f\u7528Excel\u5bfc\u51fa10000\u884c,26\u5217, RAM\u5360\u7528 127MB, 0.5\u79d2,\u5b9e\u9645Excel\u6587\u4ef6\u5927\u5c0f 916KB\r\n4. \u4f7f\u7528Excel\u5bfc\u51fa\u5927\u6587\u4ef6 row: 8000 column:647 RAM\u5360\u7528 1.9GB \u8017\u65f6 9\u79d2 ,\u5b9e\u9645Excel\u6587\u4ef6\u5927\u5c0f 14.3MB\r\n5. \u4f7f\u7528Excel\u5bfc\u51fa\u5927\u6587\u4ef6 row:10000 column:647 RAM\u5360\u7528 2.5GB \u8017\u65f6 12\u79d2,\u5b9e\u9645Excel\u6587\u4ef6\u5927\u5c0f 17.9MB\r\n```\r\n_\u6587\u4ef6\u4fdd\u5b58\u540e,\u5185\u5b58\u5e76\u4e0d\u91ca\u653e, \u53ea\u6709\u5728\u9000\u51fa\u7a0b\u5e8f\u540e\u624d\u91ca\u653e\u3002_\r\n\u5bf9\u8c61\u6570\u7ec4\u5206\u914d\u4e86\u592a\u591a\u5185\u5b58\u7ed9\u5355\u5143\u683c\uff0c\u5927\u6570\u636e\u91cf\u65f6\u751a\u81f3\u4e0d\u9700\u8981\u6837\u5f0f\uff0c\u5e76\u4e0d\u4e00\u5b9a\u6307\u5b9a\u6240\u6709\u5168\u90e8\u6807\u7b7e\u3002\r\n\r\n```\r\nprepareSheetXML(xlsx, col, row)\r\n\r\ntype xlsxRow struct {\r\n\tCollapsed    bool    `xml:\"collapsed,attr,omitempty\"`\r\n\tCustomFormat bool    `xml:\"customFormat,attr,omitempty\"`\r\n\tCustomHeight bool    `xml:\"customHeight,attr,omitempty\"`\r\n\tHidden       bool    `xml:\"hidden,attr,omitempty\"`\r\n\tHt           float64 `xml:\"ht,attr,omitempty\"`\r\n\tOutlineLevel uint8   `xml:\"outlineLevel,attr,omitempty\"`\r\n\tPh           bool    `xml:\"ph,attr,omitempty\"`\r\n\tR            int     `xml:\"r,attr,omitempty\"`\r\n\tS            int     `xml:\"s,attr,omitempty\"`\r\n\tSpans        string  `xml:\"spans,attr,omitempty\"`\r\n\tThickBot     bool    `xml:\"thickBot,attr,omitempty\"`\r\n\tThickTop     bool    `xml:\"thickTop,attr,omitempty\"`\r\n\tC            []xlsxC `xml:\"c\"`\r\n}\r\n```\r\nObject arrays allocate too much memory to cells, and do not even need styles for large amounts of data, and do not necessarily specify all tags.\r\n\r\nProcessing Excel requires about **140 times** memory usage per MB. The client uses small memory consumption and uses disk caching, which results in a dramatic performance degradation.\r\n\r\n**For example, writing a 50MB Excel file requires more than 7GB of memory, which is hard to imagine. Please give me back the memory.**  Please try read this file, expected 83K rows, got 0 rows\r\n[price.zip](https://github.com/360EntSecGroup-Skylar/excelize/files/3186850/price.zip)\r\n Check file by tealeg/xlsx and it works  Can not install v2!\r\n go get -u  github.com/360EntSecGroup-Skylar/excelize/v2\r\npackage github.com/360EntSecGroup-Skylar/excelize/v2: cannot find package \"github.com/360EntSecGroup-Skylar/excelize/v2\" in any of:\r\n\t/home/user/soft/go/go/src/github.com/360EntSecGroup-Skylar/excelize/v2 (from $GOROOT)\r\n\t/home/user/soft/go/gopath/src/github.com/360EntSecGroup-Skylar/excelize/v2 (from $GOPATH\r\n  simple test:\r\n\r\n```go\r\nfunc TestCopySheet(t *testing.T) {\r\n\tf := excelize.NewFile()\r\n\ti := f.NewSheet(\"s1\")\r\n\tif err := f.CopySheet(1, i); err != nil {\r\n\t\tt.Error(err)\r\n\t}\r\n}\r\n```\r\n\r\nError: `sheet sheet1 is not exist`\r\n go version: `go version go1.12 linux/amd64`\r\nI use **dep** to manage packages, this is output of `dep status`:\r\n```\r\nPROJECT                                    CONSTRAINT     VERSION        REVISION  LATEST   PKGS USED\r\ngithub.com/360EntSecGroup-Skylar/excelize  ^2.0.0         v2.0.0         b1f632d   v2.0.0   1 \r\n``` > simple test:\r\n> \r\n> ```go\r\n> func TestCopySheet(t *testing.T) {\r\n> \tf := excelize.NewFile()\r\n> \ti := f.NewSheet(\"s1\")\r\n> \tif err := f.CopySheet(1, i); err != nil {\r\n> \t\tt.Error(err)\r\n> \t}\r\n> }\r\n> ```\r\n> \r\n> Error: `sheet sheet1 is not exist`\r\n\r\nThe first sheet must be named \"sheet1\", otherwise it fails. ```golang\r\n// copySheet provides a function to duplicate a worksheet by gave source and\r\n// target worksheet name.\r\nfunc (f *File) copySheet(from, to int) {\r\n\tsheet := f.workSheetReader(\"sheet\" + strconv.Itoa(from))\r\n\tworksheet := deepcopy.Copy(sheet).(*xlsxWorksheet)\r\n\tpath := \"xl/worksheets/sheet\" + strconv.Itoa(to) + \".xml\"\r\n\tif len(worksheet.SheetViews.SheetView) > 0 {\r\n\t\tworksheet.SheetViews.SheetView[0].TabSelected = false\r\n\t}\r\n\tworksheet.Drawing = nil\r\n\tworksheet.TableParts = nil\r\n\tworksheet.PageSetUp = nil\r\n\tf.Sheet[path] = worksheet\r\n\ttoRels := \"xl/worksheets/_rels/sheet\" + strconv.Itoa(to) + \".xml.rels\"\r\n\tfromRels := \"xl/worksheets/_rels/sheet\" + strconv.Itoa(from) + \".xml.rels\"\r\n\t_, ok := f.XLSX[fromRels]\r\n\tif ok {\r\n\t\tf.XLSX[toRels] = f.XLSX[fromRels]\r\n\t}\r\n}\r\n```\r\n\r\nit gets sheet name as \"sheet1\", I found you have fix it on master branch, can you merge to v2?  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1.\r\n2.\r\n3.\r\n\r\n**Describe the results you received:**\r\n\r\n**Describe the results you expected:**\r\n\r\n**Output of `go version`:**\r\n\r\n```text\r\n(paste your output here)\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```text\r\n(paste here)\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\n  **Description**\r\nI'm trying to install this lib. But the return is strange.\r\nWhen I try to install with `go get -v github.com/360EntSecGroup-Skylar/excelize/`, everything works well.\r\n\r\n**Steps to reproduce the issue:**\r\n1. Install using `go get -v github.com/360EntSecGroup-Skylar/excelize/v2`\r\n\r\n**Describe the results you received:**\r\n```shell\r\ngithub.com/360EntSecGroup-Skylar/excelize (download)\r\npackage github.com/360EntSecGroup-Skylar/excelize/v2: cannot find package \"github.com/360EntSecGroup-Skylar/excelize/v2\" in any of:\r\n        /usr/local/go/src/github.com/360EntSecGroup-Skylar/excelize/v2 (from $GOROOT)\r\n        /home/rafael/go/src/github.com/360EntSecGroup-Skylar/excelize/v2 (from $GOPATH)\r\n```\r\nWhen i search in `~/go/src/github.com/`, I found folder `360EntSecGroup-Skylar/excelize`, but not this `v2`\r\n\r\n**Describe the results you expected:**\r\nNo output. \r\n\r\n**Output of `go version`:**\r\n```text\r\ngo version go1.12.4 linux/amd64\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\nOS Setup:\r\n```text\r\n            .-/+oossssoo+/-.               rafael@leviathan \r\n        `:+ssssssssssssssssss+:`           ---------------- \r\n      -+ssssssssssssssssssyyssss+-         OS: Ubuntu 19.04 x86_64 \r\n    .ossssssssssssssssssdMMMNysssso.       Kernel: 5.0.0-13-generic \r\n   /ssssssssssshdmmNNmmyNMMMMhssssss/      Uptime: 50 mins \r\n  +ssssssssshmydMMMMMMMNddddyssssssss+     Packages: 1821 (dpkg), 9 (snap) \r\n /sssssssshNMMMyhhyyyyhmNMMMNhssssssss/    Shell: zsh 5.5.1 \r\n.ssssssssdMMMNhsssssssssshNMMMdssssssss.   Resolution: 1600x900 \r\n+sssshhhyNMMNyssssssssssssyNMMMysssssss+   DE: GNOME 3.32.0 \r\nossyNMMMNyMMhsssssssssssssshmmmhssssssso   WM: GNOME Shell \r\nossyNMMMNyMMhsssssssssssssshmmmhssssssso   WM Theme: Adwaita \r\n+sssshhhyNMMNyssssssssssssyNMMMysssssss+   Theme: Sweet-mars [GTK2/3] \r\n.ssssssssdMMMNhsssssssssshNMMMdssssssss.   Icons: Yaru [GTK2/3] \r\n /sssssssshNMMMyhhyyyyhdNMMMNhssssssss/    Terminal: gnome-terminal \r\n  +sssssssssdmydMMMMMMMMddddyssssssss+     CPU: AMD FX-8350 (8) @ 4.000GHz \r\n   /ssssssssssshdmNNNNmyNMMMMhssssss/      GPU: NVIDIA GeForce GTX 970 \r\n    .ossssssssssssssssssdMMMNysssso.       Memory: 3582MiB / 16068MiB \r\n      -+sssssssssssssssssyyyssss+-\r\n        `:+ssssssssssssssssss+:`                                   \r\n            .-/+oossssoo+/-.\r\n\r\n```\r\nEnviroment Var:\r\n```text\r\n\u279c  ~ cat .zshrc\r\n# If you come from bash you might have to change your $PATH.\r\n# export PATH=$HOME/bin:/usr/local/bin:$PATH\r\n\r\n# Path to your oh-my-zsh installation.\r\n  export ZSH=\"/home/rafael/.oh-my-zsh\"\r\n\r\n# Set name of the theme to load --- if set to \"random\", it will\r\n# load a random theme each time oh-my-zsh is loaded, in which case,\r\n# to know which specific one was loaded, run: echo $RANDOM_THEME\r\n# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes\r\nZSH_THEME=\"robbyrussell\"\r\n\r\n# Set list of themes to pick from when loading at random\r\n# Setting this variable when ZSH_THEME=random will cause zsh to load\r\n# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/\r\n# If set to an empty array, this variable will have no effect.\r\n# ZSH_THEME_RANDOM_CANDIDATES=( \"robbyrussell\" \"agnoster\" )\r\n\r\n# Uncomment the following line to use case-sensitive completion.\r\n# CASE_SENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to use hyphen-insensitive completion.\r\n# Case-sensitive completion must be off. _ and - will be interchangeable.\r\n# HYPHEN_INSENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to disable bi-weekly auto-update checks.\r\n# DISABLE_AUTO_UPDATE=\"true\"\r\n\r\n# Uncomment the following line to change how often to auto-update (in days).\r\n# export UPDATE_ZSH_DAYS=13\r\n\r\n# Uncomment the following line to disable colors in ls.\r\n# DISABLE_LS_COLORS=\"true\"\r\n\r\n# Uncomment the following line to disable auto-setting terminal title.\r\n# DISABLE_AUTO_TITLE=\"true\"\r\n\r\n# Uncomment the following line to enable command auto-correction.\r\n# ENABLE_CORRECTION=\"true\"\r\n\r\n# Uncomment the following line to display red dots whilst waiting for completion.\r\n# COMPLETION_WAITING_DOTS=\"true\"\r\n\r\n# Uncomment the following line if you want to disable marking untracked files\r\n# under VCS as dirty. This makes repository status check for large repositories\r\n# much, much faster.\r\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\r\n\r\n# Uncomment the following line if you want to change the command execution time\r\n# stamp shown in the history command output.\r\n# You can set one of the optional three formats:\r\n# \"mm/dd/yyyy\"|\"dd.mm.yyyy\"|\"yyyy-mm-dd\"\r\n# or set a custom format using the strftime function format specifications,\r\n# see 'man strftime' for details.\r\n# HIST_STAMPS=\"mm/dd/yyyy\"\r\n\r\n# Would you like to use another custom folder than $ZSH/custom?\r\n# ZSH_CUSTOM=/path/to/new-custom-folder\r\n\r\n# Which plugins would you like to load?\r\n# Standard plugins can be found in ~/.oh-my-zsh/plugins/*\r\n# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\r\n# Example format: plugins=(rails git textmate ruby lighthouse)\r\n# Add wisely, as too many plugins slow down shell startup.\r\nplugins=(git)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n\r\n# User configuration\r\n\r\n# export MANPATH=\"/usr/local/man:$MANPATH\"\r\n\r\n# You may need to manually set your language environment\r\n# export LANG=en_US.UTF-8\r\n\r\n# Preferred editor for local and remote sessions\r\n# if [[ -n $SSH_CONNECTION ]]; then\r\n#   export EDITOR='vim'\r\n# else\r\n#   export EDITOR='mvim'\r\n# fi\r\n\r\n# Compilation flags\r\n# export ARCHFLAGS=\"-arch x86_64\"\r\n\r\n# Set personal aliases, overriding those provided by oh-my-zsh libs,\r\n# plugins, and themes. Aliases can be placed here, though oh-my-zsh\r\n# users are encouraged to define aliases within the ZSH_CUSTOM folder.\r\n# For a full list of active aliases, run `alias`.\r\n#\r\n# Example aliases\r\n# alias zshconfig=\"mate ~/.zshrc\"\r\n# alias ohmyzsh=\"mate ~/.oh-my-zsh\"\r\n\r\nexport PATH=$PATH:/usr/local/go/bin\r\nexport GOPATH=\"$HOME/go\"\r\nexport PATH=\"$GOPATH/bin:$PATH\"\r\n\r\n```\r\n\r\n Success!!!\r\n\r\nThank u man! @xuri  I have met the same issue when installing this lib.\r\nMaybe you should find other way to make it easily out of box but not to find solution.\r\n\u8fd9\u4e2a\u4f53\u9a8c\u5e76\u4e0d\u53cb\u597d  How to add header and footer for .xlsx  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nAccording with the [go Modules spec](https://github.com/golang/go/wiki/Modules#user-content-releasing-modules-v2-or-higher) a module with the version v2+ (`excelize v2.0.0`) should be imported as follows:\r\n\r\n``` go\r\nimport (\r\n  \"github.com/360EntSecGroup-Skylar/excelize/v2\"\r\n)\r\n```\r\n\r\nBut this causes the error:\r\n\r\n```\r\nunknown import path \"github.com/360EntSecGroup-Skylar/excelize/v2\": cannot find module providing package github.com/360EntSecGroup-Skylar/excelize/v2\r\n```\r\n\r\n**Steps to reproduce the issue:**\r\n1. Import the dependency `\"github.com/360EntSecGroup-Skylar/excelize/v2\"` in a go Module enabled project.\r\n2. Run `go build`.\r\n\r\n**Describe the results you received:**\r\n\r\nError:\r\n```\r\nunknown import path \"github.com/360EntSecGroup-Skylar/excelize/v2\": cannot find module providing package github.com/360EntSecGroup-Skylar/excelize/v2\r\n```\r\n\r\n**Describe the results you expected:**\r\n\r\nBuild should be successful.\r\n\r\n**Output of `go version`:**\r\n\r\n```text\r\ngo version go1.12.2 linux/amd64\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```text\r\nv2.0.0\r\n```\r\n Still not fixed, i request the issue is reopened.\r\n\r\nI believe that in order to fix this the code needs to be moved to the package `v2` and that package needs to have a `go.mod` file.\r\n\r\nAlso the current package should serve has a proxy to the classes and functions of the `v2` package.\r\n\r\nFull description @ [go Modules spec](https://github.com/golang/go/wiki/Modules#user-content-releasing-modules-v2-or-higher).\r\n\r\n**Steps to reproduce the issue:**\r\n1. In a go Module enabled project run:\r\n``` sh\r\ngo get github.com/360EntSecGroup-Skylar/excelize/v2 \r\n```\r\n**Describe the results you received:**\r\n\r\nGot the following error:\r\n``` sh\r\ngo: github.com/360EntSecGroup-Skylar/excelize/v2@v2.0.0: go.mod has non-.../v2 module path \"github.com/360EntSecGroup-Skylar/excelize\" (and .../v2/go.mod does not exist) at revision v2.0.0\r\ngo: error loading module requirements\r\n```\r\n\r\n**Describe the results you expected:**\r\n\r\n`go get` should be successful.\r\n\r\n\r\n That fixed it, i didn't realized there wasn't a new version with the fix.\r\n\r\nMany thxs sir @xuri :) It's working but i suspect there is still a problem: `go.mod` references `v1.4.1` indirectly:\r\n\r\n``` go\r\n...\r\ngo 1.12\r\n\r\nrequire (\r\n\tgithub.com/360EntSecGroup-Skylar/excelize v1.4.1 // indirect\r\n\tgithub.com/360EntSecGroup-Skylar/excelize/v2 v2.0.0\r\n\tgithub.com/stretchr/testify v1.3.0\r\n)\r\n```\r\n\r\nI suspect this is because the `package excelize` declaration on excelize .go files doesn't include the `v2`, but i might be wrong. @xuri \r\nThe bug still exists , Can not install v2 \r\ngo get install  github.com/360EntSecGroup-Skylar/excelize/v2\r\nError can not find package ! I created a new project to benchmark some changes, my main.go looks like this:\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"time\"\r\n\r\n\t\"github.com/360EntSecGroup-Skylar/excelize/v2\"\r\n)\r\n\r\n// some code for testing stuff...\r\n```\r\n\r\nmy go.mod looks like this:\r\n\r\n```go\r\nmodule github.com/mlh758/benchmarker\r\n\r\ngo 1.12\r\n\r\nrequire (\r\n\tgithub.com/360EntSecGroup-Skylar/excelize/v2 v2.0.1\r\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\r\n\tgolang.org/x/image v0.0.0-20190802002840-cff245a6509b // indirect\r\n)\r\n```\r\n\r\nand everything is building fine. Could anyone still having issues share similar information so we can try to figure out what is wrong?  Create a .xlsx file by using the example code, i can open it with wps on windows, but can't open it with wps on android.\r\nI use the lastest version. thanks very much, it's all right now.  ## Description\r\n\r\nThis allows users to change the default font of the workbook. I also removed the `scheme` stuff since the library doesn't have an API for themes in it yet and without that they don't appear to impact anything.\r\n\r\nIn the template I removed the theme reference from the default font and changed the default style name to `Normal` although I don't think that name change was necessary if you preferred the old name.\r\n\r\n## Related Issue\r\n\r\nCloses #390 \r\n\r\n<!--- This project only accepts pull requests related to open issues -->\r\n<!--- If suggesting a new feature or change, please discuss it in an issue first -->\r\n<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->\r\n<!--- Please link to the issue here: -->\r\n\r\n## Motivation and Context\r\n\r\nMy users want something other than Calibri so I figured I would add the change back to the main repo.\r\n\r\n## How Has This Been Tested\r\n\r\nI added some unit tests and generated some documents with this branch.\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [x] Docs change / refactoring / dependency upgrade\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [x] My code follows the code style of this project.\r\n- [x] My change requires a change to the documentation.\r\n- [x] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [x] I have added tests to cover my changes.\r\n- [x] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/391?src=pr&el=h1) Report\n> Merging [#391](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/391?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/f91f548614a7182ce66d55d10ed311e9b7e08a2a?src=pr&el=desc) will **increase** coverage by `0.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/391/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/391?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #391      +/-   ##\n==========================================\n+ Coverage   95.51%   95.53%   +0.01%     \n==========================================\n  Files          22       22              \n  Lines        4418     4431      +13     \n==========================================\n+ Hits         4220     4233      +13     \n  Misses        113      113              \n  Partials       85       85\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/391?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [styles.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/391/diff?src=pr&el=tree#diff-c3R5bGVzLmdv) | `99.27% <100%> (+0.01%)` | :arrow_up: |\n| [shape.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/391/diff?src=pr&el=tree#diff-c2hhcGUuZ28=) | `93.33% <100%> (\u00f8)` | :arrow_up: |\n| [comment.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/391/diff?src=pr&el=tree#diff-Y29tbWVudC5nbw==) | `98.26% <100%> (\u00f8)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/391?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/391?src=pr&el=footer). Last update [f91f548...b1c9884](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/391?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n The new line I added that I'm not hitting in the tests is the panic after the `xml.Unmarshal` in the new `readDefaultFont` function. That should never happen, but the panic is there to make it clear where this went wrong. I used panic instead of an error value because this is a truly exceptional case that should never be encountered. Even if you set invalid xml as the font like `<invalid>font<sjas` that will just end up being an invalid font in the workbook but it will save just fine. Any feedback on this PR? Yes I will update that. I rebased and cleaned it up. A lot of my change was no longer necessary since you refactored the xml. I verified it worked still with a new default font and all the tests are passing. There were a fair amount of merge conflicts though so it might be good to try it out yourself as well.  \u5728goget\u4e0b\u6765\u7684\u5e93\u4e2d\uff0c\u6211\u600e\u6837\u624d\u77e5\u9053\u8be5\u5e93\u662f\u5565\u7248\u672c\uff1f\u80fd\u52a0\u4e2aversion.go\u5417\uff1f\u6216\u8005\u52a0\u4e2a\u5e38\u91cf\u4e4b\u7c7b\u7684  \u7f16\u8f91\u539f\u6709excel.xlsx\uff0c\u67d0\u4e00\u4e9b\u884c\u6709merge\u683c\u65f6\uff0c\u7136\u540e \u628a\u8fd9\u884cremove\u540e\uff0csave\uff0c\u5728win\u4e0b\u62a5\u5f00\uff0c\u4f1a\u62a5\u9519\u3002linux\u4e0b\u6ca1\u62a5\u9519\uff08libre\uff0c ubuntu18\uff09\u3002\u5e94\u8be5\u662fremove rows\u65f6\u6ca1\u628astyle\u4e4b\u7c7b\u4fe1\u606f\u5220\u9664\u3002\r\n\r\n\u53e6\uff1a\u80fd\u5426\u52a0\u4e00\u4e2a\u529f\u80fd\uff0c\u4ece\u67d0\u4e2asheet\u91cc\u590d\u5236\u67d0\u4e00\u884c\u5230\u53e6\u4e00\u4e2asheet\u91cc\uff1f > Hi @ballyang, please provides the version of excelize and Go you are using, and the xlsx file attachment if you can. Also reference #372.\r\n\r\n- env:\r\n - go: go version go1.11.9 linux/amd64\r\n - ubuntu18\r\n - excelize: latest\uff0c\u5df2\u7ecfgoget\u6700\u65b0\u7684\u4e0b\u6765\u4e86\r\n\r\n- go demo\r\n`\t\r\ntmp := \"./test1.xlsx\"\r\n\r\n\tt1, err := excelize.OpenFile(tmp)\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\r\n\tfor x := 10; x >= 5; x-- {\r\n\t\tt1.RemoveRow(\"Sheet1\", x)\r\n\t}\r\n\tt1.SaveAs(\"./test1.save.xlsx\")\r\n`\r\n\r\n- excel file:\r\n - [test1.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/3102569/test1.xlsx)\r\n\r\n- \u6211\u53ea\u662f\u628a\u540e\u9762\u90a3\u51e0\u884cremove\u6389\uff0c\u4f46\u5728win\u4e0b\u6253\u5f00\uff0c\u5c31\u4f1a\u62a5\u2018Excel \u5df2\u5b8c\u6210\u6587\u4ef6\u7ea7\u9a8c\u8bc1\u548c\u4fee\u590d\u3002\u6b64\u5de5\u4f5c\u7c3f\u7684\u67d0\u4e9b\u90e8\u5206\u53ef\u80fd\u5df2\u88ab\u4fee\u590d\u6216\u4e22\u5f03\u2019\u7c7b\u4f3c\u9519\u8bef\r\n  # PR Details\r\n\r\nRefactoring for merge cells functions.\r\n\r\n## Description\r\n\r\nMove mergedcell related functions coded in `excelize.go` to `cellmerged.go`.\r\n\r\n## Related Issue\r\n\r\nNone\r\n\r\n## Motivation and Context\r\n\r\nIf add some functions related to merge cell, it causes enlargement of excelize.go.\r\nAlso, I want to extend the function, but at that time I need to add the function related to the merged cell.\r\n\r\n## How Has This Been Tested\r\n\r\nruns unit test.\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [x] Docs change / refactoring / dependency upgrade\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [x] My code follows the code style of this project.\r\n- [x] My change requires a change to the documentation.\r\n- [x] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [x] I have added tests to cover my changes.\r\n- [x] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/385?src=pr&el=h1) Report\n> Merging [#385](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/385?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/29b2854e53560beb3c238786929097421fa9a942?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/385/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/385?src=pr&el=tree)\n\n```diff\n@@           Coverage Diff           @@\n##           master     #385   +/-   ##\n=======================================\n  Coverage   95.03%   95.03%           \n=======================================\n  Files          21       22    +1     \n  Lines        4350     4350           \n=======================================\n  Hits         4134     4134           \n  Misses        129      129           \n  Partials       87       87\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/385?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [excelize.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/385/diff?src=pr&el=tree#diff-ZXhjZWxpemUuZ28=) | `89.47% <\u00f8> (-1.91%)` | :arrow_down: |\n| [cellmerged.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/385/diff?src=pr&el=tree#diff-Y2VsbG1lcmdlZC5nbw==) | `100% <100%> (\u00f8)` | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/385?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/385?src=pr&el=footer). Last update [29b2854...225a37a](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/385?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  # PR Details\r\n\r\n\r\n\r\n## Description\r\n\r\n### Bug 1\r\n\r\nOut of range panic when removing formula.\r\n\r\n#### Reproduction Steps\r\n\r\n1. Download [input.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/3059522/input.xlsx)\r\n2. run following code.\r\n```go\r\npackage main\r\n\r\nimport \"github.com/360EntSecGroup-Skylar/excelize\"\r\n\r\nfunc main() {\r\n\tf, err := excelize.OpenFile(\"input.xlsx\")\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\tf.SetCellFormula(\"Sheet1\", \"A1\", \"\")\r\n\tif err := f.SaveAs(\"panic.xlsx\"); err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n}\r\n```\r\n\r\n#### Actual Behavior\r\n```\r\npanic: runtime error: slice bounds out of range\r\n\r\ngoroutine 1 [running]:\r\ngithub.com/360EntSecGroup-Skylar/excelize.(*File).deleteCalcChain(0xc0000c61e0, 0x115c7d1, 0x2)\r\n\t/Users/aplulu/go/pkg/mod/github.com/360!ent!sec!group-!skylar/excelize@v1.4.2-0.20190407060441-4e7d93a77796/calcchain.go:41 +0x574\r\ngithub.com/360EntSecGroup-Skylar/excelize.(*File).SetCellFormula(0xc0000c61e0, 0x115d631, 0x7, 0x115c7d1, 0x2, 0x0, 0x0, 0x10f5c9c, 0xc0000aff88)\r\n\t/Users/aplulu/go/pkg/mod/github.com/360!ent!sec!group-!skylar/excelize@v1.4.2-0.20190407060441-4e7d93a77796/cell.go:238 +0x108\r\nmain.main()\r\n\t/Users/aplulu/projects/excelize/test/bug/bug1.go:10 +0xa0\r\nexit status 2\r\n```\r\n\r\n### Bug 2\r\n\r\nIf the deleted sheet contains Formula, file will be corrupted.\r\n\r\n#### Reproduction Steps\r\n1. Download [input.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/3059522/input.xlsx)\r\n2. Run following code.\r\n3. Open the generated corrupt.xlsx in Excel.\r\n\r\n```go\r\npackage main\r\n\r\nimport \"github.com/360EntSecGroup-Skylar/excelize\"\r\n\r\nfunc main() {\r\n\tf, err := excelize.OpenFile(\"input.xlsx\")\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\tf.DeleteSheet(\"Sheet2\")\r\n\tif err := f.SaveAs(\"corrupt.xlsx\"); err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n}\r\n```\r\n\r\n#### Actual Behavior\r\n![Screen Shot 2019-04-09 at 23 58 12](https://user-images.githubusercontent.com/20220680/55810997-651ea180-5b23-11e9-9437-0a10a2b8c302.png)\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<recoveryLog xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"><logFileName>Repair Result to corrupt0.xml</logFileName><summary>Errors were detected in file '/Users/aplulu/projects/excelize/test/bug/corrupt.xlsx'</summary><removedRecords summary=\"Following is a list of removed records:\"><removedRecord>Removed Records: Formula from /xl/calcChain.xml part (Calculation properties)</removedRecord></removedRecords></recoveryLog>\r\n```\r\n\r\n### Environement\r\n\r\n* Excelize master branch\r\n* go version go1.12.3 darwin/amd64\r\n* Microsoft Excel for Mac version 16.23\r\n\r\n## Related Issue\r\n\r\n<!--- This project only accepts pull requests related to open issues -->\r\n<!--- If suggesting a new feature or change, please discuss it in an issue first -->\r\n<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->\r\n<!--- Please link to the issue here: -->\r\n\r\n## Motivation and Context\r\n\r\n<!--- Why is this change required? What problem does it solve? -->\r\n\r\n## How Has This Been Tested\r\n\r\n<!--- Please describe in detail how you tested your changes. -->\r\n<!--- Include details of your testing environment, and the tests you ran to -->\r\n<!--- see how your change affects other areas of the code, etc. -->\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [x] My code follows the code style of this project.\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [ ] I have added tests to cover my changes.\r\n- [x] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/381?src=pr&el=h1) Report\n> Merging [#381](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/381?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/4e7d93a77796aa6814339d377a94d4b66226f1ce?src=pr&el=desc) will **decrease** coverage by `0.04%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/381/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/381?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #381      +/-   ##\n==========================================\n- Coverage   97.29%   97.25%   -0.05%     \n==========================================\n  Files          21       21              \n  Lines        4212     4219       +7     \n==========================================\n+ Hits         4098     4103       +5     \n- Misses         62       63       +1     \n- Partials       52       53       +1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/381?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [cell.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/381/diff?src=pr&el=tree#diff-Y2VsbC5nbw==) | `91.43% <100%> (\u00f8)` | :arrow_up: |\n| [calcchain.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/381/diff?src=pr&el=tree#diff-Y2FsY2NoYWluLmdv) | `93.1% <100%> (-6.9%)` | :arrow_down: |\n| [sheet.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/381/diff?src=pr&el=tree#diff-c2hlZXQuZ28=) | `97.09% <100%> (\u00f8)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/381?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/381?src=pr&el=footer). Last update [4e7d93a...841ff4a](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/381?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. open a xlsx cy file (cy.xlsx)\r\n2. saveAs(cy.xlsx)\r\n3.but the file modification time does not change\r\n\r\n**Describe the results you received:**\r\nSo I can't tell if the current file has changed by using the PHP filemtime function\r\n**Describe the results you expected:**\r\n\r\n**Output of `go version`:**\r\n\r\n```text\r\n(paste your output here)\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```text\r\n(paste here)\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\n  # PR Details\r\n\r\nFix calc object position for addPicture.\r\n\r\n## Description\r\n\r\nThe target cell for calclator the width and height \r\n\r\n## Related Issue\r\n\r\n<!--- This project only accepts pull requests related to open issues -->\r\n<!--- If suggesting a new feature or change, please discuss it in an issue first -->\r\n<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->\r\n<!--- Please link to the issue here: -->\r\n\r\n## Motivation and Context\r\n\r\nI wanted to fix one of the factors that caused the size of the inserted image to be incorrect.\r\n<!--- Why is this change required? What problem does it solve? -->\r\n\r\n## How Has This Been Tested\r\n\r\nVerified by local excel()\r\n<!--- Please describe in detail how you tested your changes. -->\r\n<!--- Include details of your testing environment, and the tests you ran to -->\r\n<!--- see how your change affects other areas of the code, etc. -->\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [x] My code follows the code style of this project.\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [ ] I have added tests to cover my changes.\r\n- [x] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/379?src=pr&el=h1) Report\n> Merging [#379](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/379?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/eca66180f191ba1209e5d50859be51eec7954281?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/379/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/379?src=pr&el=tree)\n\n```diff\n@@           Coverage Diff           @@\n##           master     #379   +/-   ##\n=======================================\n  Coverage   97.29%   97.29%           \n=======================================\n  Files          21       21           \n  Lines        4212     4212           \n=======================================\n  Hits         4098     4098           \n  Misses         62       62           \n  Partials       52       52\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/379?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [col.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/379/diff?src=pr&el=tree#diff-Y29sLmdv) | `100% <100%> (\u00f8)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/379?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/379?src=pr&el=footer). Last update [eca6618...8134197](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/379?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n It is an image before this PR\r\n<img width=\"300\" alt=\"logic_image\" src=\"https://user-images.githubusercontent.com/8830451/55546970-44151580-570b-11e9-948a-112535e3101b.png\">\r\n You can try it with this code and files.\r\nhttps://gist.github.com/yoshhiide/d1bf0ed27b33629552d52b82a284b464\r\n\r\n![image1](https://user-images.githubusercontent.com/8830451/55699281-10850480-5a05-11e9-826f-2fee572b8e17.png)\r\n[input_change_x.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/3052645/input_change_x.xlsx)\r\n[input_change_y.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/3052646/input_change_y.xlsx)\r\n[input_def.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/3052647/input_def.xlsx)\r\n\r\n\r\n\r\n\r\n\r\n\r\n There is no problem if the width and height of the cell before and after the inserted cell are the same, but it will be a problem if they are different.  xmlCharte.go  \r\n1192:  \r\nLumMod: &attrValInt{Val: 15000},  \r\nLumOff: &attrValInt{Val: 85000},  \r\n\r\n\u8fd9\u91cc\u900f\u660e\u5ea6\u5b9a\u4e49  \u53c2\u8003https://stackoverflow.com/questions/19886180/whats-the-difference-between-lummod-lumoff-and-tint-shade-in-drawingml-colors   \r\n\r\nluminance = (luminance/100)*(lumMod/100_000) + (lumOff/100_000) \r\n\u6839\u636e\u516c\u5f0f\u4fee\u653985000->15000\u51cf\u5c0f  undefined: excelize.ToAlphaString in v1.4.1\r\n\r\n[https://github.com/360EntSecGroup-Skylar/excelize/issues/66](url)  Please add suport for tiff, bmp and may be other image type. It is simple and useful. Thanks.  Create a new Excel file, insert an image into one cell of one sheet, create another sheet, insert another image into one cell of another sheet, as the result, causes a event that pasted two images on both cells of both sheets.\r\nIt doesn't occur when you finish inserted an image into one cell of a sheet, or inserted images into two or more cells of the same sheet.\r\n```golang\r\nfunc main () {\r\n    xlsx: = excelize.NewFile ()\r\n    // Create a worksheet\r\n    index: = xlsx.NewSheet (\"Sheet2\")\r\n    // Insert image1.jpg into A2 cell of sheet 1\r\n    // Still okay at this point\r\n    err: = xlsx.AddPicture (\"Sheet1\", \"A2\", \"./image1.jpg\", \"\")\r\n    if err! = nil {\r\n        fmt.Println (err)\r\n        return err\r\n    }\r\n    // Insert image2.jpg into A20 cell of sheet 2\r\n    // If this is executed, image1.jpg is pasted A2 cells of Sheet 1 and Sheet 2 \r\n    // and image2.jpg is pasted A20 cells of Sheet 1 and Sheet 2.\r\n    err: = xlsx.AddPicture (\"Sheet2\", \"A20\", \"./image2.jpg\", \"\")\r\n    if err! = nil {\r\n        fmt.Println (err)\r\n        return err\r\n    }\r\n   // Save Excel\r\n   err: = xlsx.SaveAs (\"./Book1.xlsx\")\r\n   if err! = nil {\r\n        fmt.Println (err)\r\n        return err\r\n    }\r\n    return nil\r\n}\r\n```\r\n\r\nWhen I extracted the Excel file and saw it, the value of the name held inside of drawing1.xml was the same (Picture 1), so it is considered to be due to that.\r\nIf SaveAS is executed first and then reopened and the image is executed only after Save is executed, the stored information will disappear or it will operate normally.\r\nOf course, there is no problem if you insert image1.jpg into one cell of one sheet, execute SaveAS, reopen it, and insert image2.jpg into another cell of another sheet.\r\n\r\n```golang\r\nfunc main () {\r\n    xlsx: = excelize.NewFile ()\r\n    // Create a worksheet\r\n    index: = xlsx.NewSheet (\"Sheet2\")\r\n    // Save Excel\r\n    err: = xlsx.SaveAs (\"./Book1.xlsx\")\r\n    if err! = nil {\r\n        fmt.Println (err)\r\n        return err\r\n    }\r\n    // Reopen\r\n    xlsx, err: = excelize.OpenFile (\"./Book1.xlsx\")\r\n    if err! = nil {\r\n         fmt.Println (err)\r\n         return err\r\n    }\r\n    // Insert image1.jpg into A2 cell of sheet 1\r\n    err: = xlsx.AddPicture (\"Sheet1\", \"A2\", \"./image1.jpg\", \"\")\r\n    if err! = nil {\r\n        fmt.Println (err)\r\n        return err\r\n    }\r\n    // Save Excel\r\n    err: = xlsx.Save ()\r\n    if err! = nil {\r\n        fmt.Println (err)\r\n        return err\r\n    }\r\n    // Insert image2.jpg into A20 cell of sheet 2\r\n    err: = xlsx.AddPicture (\"Sheet2\", \"A20\", \"./image2.jpg\", \"\")\r\n    if err! = nil {\r\n        fmt.Println (err)\r\n        return err\r\n    }\r\n    // Save Excel\r\n    err: = xlsx.Save ()\r\n    if err! = nil {\r\n        fmt.Println (err)\r\n        return err\r\n    }\r\n    return nil\r\n}\r\n```\r\n\r\nWhen this is executed, Book1.xlsx is generated in which image1.jpg is inserted into only A2 cell of sheet 1 and image2.jpg is inserted into only A20 cell of sheet 2.\r\n\r\n > Hi @GinSanaduki, thanks for your issue. I have tested based on your code and it works well. Which version of Excelize and Go are you using?\r\n\r\nHi @xuri , thanks for the reply.\r\nThe excelize library, which I downloaded March 21, 2019, is one version before the latest commit.\r\nWhen I tried with 2 windows 10, the same phenomenon occurred.\r\ngo version go1.12.1 windows/amd64\r\nI know what to do here for the time being, so if you don't reproduce it, let me wait and see please.\r\nThank you for confirmation. I see something similar with comments on `69b38ddcd6`:\r\n\r\n```go\r\npackage main\r\n\r\nimport \"github.com/360EntSecGroup-Skylar/excelize\"\r\n\r\nfunc main() {\r\n\txlsx := excelize.NewFile()\r\n\txlsx.NewSheet(\"Sheet2\")\r\n\r\n\terr := xlsx.AddComment(\"Sheet1\", \"A1\", `{\"author\":\"Me:\",\"text\":\"Comment\"}`)\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\terr = xlsx.AddComment(\"Sheet2\", \"A2\", `{\"author\":\"Me:\",\"text\":\"Comment\"}`)\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\terr = xlsx.SaveAs(\"./Test.xlsx\")\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n}\r\n\r\n```\r\n\r\nSheet1: \r\n![image](https://user-images.githubusercontent.com/3642427/57541034-bdf47c00-7313-11e9-9149-3df72cef3b85.png)\r\n\r\nSheet2:\r\n![image](https://user-images.githubusercontent.com/3642427/57541043-c351c680-7313-11e9-8c82-6c94e4ecb635.png)\r\n I did not know that the same event would occur even with the addition of comments...thank you for providing the information. Just in case, I put the reproduction file of those days.\r\n[Book1.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/3168525/Book1.xlsx)\r\n\r\n![evi01](https://user-images.githubusercontent.com/48995370/57563871-48a1ad80-73de-11e9-8813-96c5ec136091.png)\r\n\r\n![evi02](https://user-images.githubusercontent.com/48995370/57563872-493a4400-73de-11e9-9660-aa2c3a3b5ef7.png)\r\n It did not occur with modified sources.\r\nThis problem does not occur with current sources.\r\nThank you very much.\r\n\r\n[Book1.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/3168533/Book1.xlsx)\r\n![evi04](https://user-images.githubusercontent.com/48995370/57563939-3ffda700-73df-11e9-9bd4-31160a6b957f.png)\r\n![evi03](https://user-images.githubusercontent.com/48995370/57563940-3ffda700-73df-11e9-8e6e-02bd1dfb42ba.png)\r\n  xlsx.RemoveRow(\u201csheet1\u201d, 1) \r\nxlsx.RemoveRow(\u201csheet1\u201d, 3) \r\nxlsx.RemoveRow(\u201csheet1\u201d, 9) \r\nxlsx.Save()\r\n\r\n\u5e94\u8be5\u600e\u4e48\u5220\u9664 \u624d\u80fd \u6b63\u786e\u5e76\u4e0d\u635f\u574f\u6587\u4ef6 \u5220\u9664\u5462\uff1f [TEST01 - \u526f\u672c (1).xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/3022364/TEST01.-.1.xlsx)\r\n[TEST01 - \u526f\u672c (3) \u5220\u9664\u540e\u635f\u574f.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/3022365/TEST01.-.3.xlsx)\r\n[TEST01 - \u526f\u672c (2) AC\u5217\u52a0\u5220\u9664\u5b57\u6837.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/3022366/TEST01.-.2.AC.xlsx)\r\n\r\ngo 1.11\r\n360EntSecGroup-Skylar/excelize \u7248\u672c \u662f 20190328 \u66f4\u65b0\u7684\r\n\r\nTEST01 - \u526f\u672c (3) \u5220\u9664\u540e\u635f\u574f.xlsx \u662f\u635f\u574f\u7684\u6587\u4ef6  #### Description\r\nHallo, i found the same issue. ```RemoveRow``` seems to be corrupting spreadsheets. \r\n\r\n#### Steps to reproduce the issue:\r\nIn my case,  i have an excel file with the following merged cells:\r\n- ```mergeCell ref=\"D25:F25\"```\r\n- ```mergeCell ref=\"D26:F26\"```\r\n- ```mergeCell ref=\"D27:F27\"```\r\n- ```mergeCell ref=\"D28:F28\"```\r\n- ```mergeCell ref=\"D24:F24\"```\r\n\r\nLet say, the row 26 would like to be removed,  and execute the following pseudocode below:\r\n\r\n```go\r\nfunc main() {\r\n\tvar (\r\n\t\tfile *excelize.File\r\n\t\terr  error\r\n\t)\r\n\t// open the file\r\n\tfile, err = excelize.OpenFile(\"testlocal.xlsx\")\r\n\tpanic(err)\r\n\r\n\tfile.RemoveRow(\"sheet1\",  26)\r\n\tfile.Save()\r\n}\r\n```\r\n\r\n#### Describe the results you received\r\nWhen i open the file, i receive the message \"We found a problem with some content in \"testlocal.xlsx\" Do you want us to try to recover as much as we can?\" after clicking yes, it will go to a dialog box that it has been repair/recovered. \r\n\r\nRepair Log:\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"true\"?>\r\n\r\n-<recoveryLog xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">\r\n\r\n<logFileName>error009680_03.xml</logFileName>\r\n\r\n<summary>Errors were detected in file 'D:\\Documents\\test.xlsx'</summary>\r\n\r\n\r\n-<removedRecords>\r\n\r\n<removedRecord>Removed Records: Merge cells from /xl/worksheets/sheet1.xml part</removedRecord>\r\n\r\n</removedRecords>\r\n\r\n</recoveryLog>\r\n```\r\n\r\nI try to check deeper to examining  the ```/xl/worksheets/sheet1.xml``` file, showed the merged cell node was added twice:\r\n```\r\n<mergeCells>\r\n   <mergeCell ref=\"D26:F26\"/>\r\n   <mergeCell ref=\"D26:F26\"/>\r\n</mergeCells>\r\n```\r\n\r\nAfter \"repairing\" the file, the duplicate node was removed:\r\n```\r\n<mergeCells>\r\n   <mergeCell ref=\"D26:F26\"/>\r\n</mergeCells>\r\n```\r\n\r\n#### Describe the results you expected:\r\nI expect the row to be removed without error\r\n\r\n#### Output of ```go version```:\r\ngo version go1.12.1 darwin/amd64\r\n\r\n#### Excelize version or commit ID:\r\nVersion: v1.4.0\r\nCommit ID: https://github.com/360EntSecGroup-Skylar/excelize/commit/3e004d900b103379c2d62657a3070de4a2e8585a\r\n\r\n#### Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):\r\nWindows 10, MS Excel 2016  # PR Details\r\n\r\n<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\n\r\nAdding the same image should create a drawing referencing the\r\nalready stored copy of the image.\r\n\r\n## Related Issue\r\n\r\n#359 \r\n\r\n## Motivation and Context\r\n\r\nThis reduces the overall file size if an image is reused. For example, a header might be used frequently in a number of sheets and if the same logo is used this change will make it so only one copy of that logo is saved.\r\n\r\n## How Has This Been Tested\r\n\r\nAdded a unit test, verified there was no performance regression in the benchmark, and generated\r\nsome documents with several repeated images.\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [x] My code follows the code style of this project.\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [x] I have added tests to cover my changes.\r\n- [x] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/371?src=pr&el=h1) Report\n> Merging [#371](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/371?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/f0244c00161ad6372ceb1ec951f3a82c741cd46a?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/371/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/371?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #371      +/-   ##\n==========================================\n+ Coverage   97.29%   97.29%   +<.01%     \n==========================================\n  Files          21       21              \n  Lines        4207     4212       +5     \n==========================================\n+ Hits         4093     4098       +5     \n  Misses         62       62              \n  Partials       52       52\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/371?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [picture.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/371/diff?src=pr&el=tree#diff-cGljdHVyZS5nbw==) | `100% <100%> (\u00f8)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/371?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/371?src=pr&el=footer). Last update [f0244c0...a94dcb9](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/371?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nSetCellVal before using NewSheet will destroy the excel file\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. SetCellValue to a not exist sheet before NewSheet\r\n\r\n**Describe the results you received:**\r\n\r\nSetCellVal before using NewSheet will destroy the excel file\r\n\r\n**Describe the results you expected:**\r\n\r\nCreate one sheet and set some value\r\n\r\n**Output of `go version`:**\r\n\r\n\r\n```text\r\ngo version go1.12 darwin/amd64\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```text\r\nf0244c00161ad6372ceb1ec951f3a82c741cd46a\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\n\r\nlatest version fo mac\r\n\r\nmicrosoft excel ver: 16.9(180116)\r\n\r\n mac lastest version\r\ngo version: go version go1.12 darwin/amd64\r\nexcel : microsoft excel 16.9(180116)\r\n\r\nfirst code destroy the file:\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\r\n\t\"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\tf := excelize.NewFile()\r\n\tf.SetCellValue(\"\u6b63\", \"A2\", \"aa\")\r\n\terr := f.SaveAs(\"issue_370.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t}\r\n}\r\n```\r\n\r\n\r\nsecond code is ok:\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\r\n\t\"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\tf := excelize.NewFile()\r\n\tf.NewSheet(\"\u6b63\")\r\n\tf.SetCellValue(\"\u6b63\", \"A2\", \"aa\")\r\n\terr := f.SaveAs(\"issue_370.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t}\r\n}\r\n```\r\n\r\nit seams that, setCellvalue has some bugs  # PR Details\r\n\r\nSetCellVal before using NewSheet will destroy the excel file\r\n\r\n## Description\r\n\r\nlike below\r\n\r\n## Motivation and Context\r\n\r\n## How Has This Been Tested\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [x] My code follows the code style of this project.\r\n- [x] My change requires a change to the documentation.\r\n- [x] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [x] I have added tests to cover my changes.\r\n- [x] All new and existing tests passed.\r\n\r\nclose #370 ci ~ NEED HELP! It looks like some tests are failing. Are you up to date with master?  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1.\r\n2.\r\n3.\r\n\r\n**Describe the results you received:**\r\n\r\n**Describe the results you expected:**\r\n\r\n**Output of `go version`:**\r\n\r\n```text\r\n(paste your output here)\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```text\r\n(paste here)\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\n This does not support the older binary xls format.\r\n\r\nIf you only need read support you could try [this library](https://github.com/extrame/xls)  # PR Details\r\n\r\n<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\n\r\n<!--- Describe your changes in detail -->\r\n\r\nHaving an option for specifying the range of row numbers to be grouped in the same outline level.\r\n\r\n## Related Issue\r\n\r\n#362 \r\n<!--- This project only accepts pull requests related to open issues -->\r\n<!--- If suggesting a new feature or change, please discuss it in an issue first -->\r\n<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->\r\n<!--- Please link to the issue here: -->\r\n\r\n## Motivation and Context\r\n\r\n<!--- Why is this change required? What problem does it solve? -->\r\n\r\nIt would allow users to specify the range of row numbers for the outline level to be applied instead of specifying it for every row.\r\n\r\n## How Has This Been Tested\r\n\r\nTested it out locally.\r\n\r\n<!--- Please describe in detail how you tested your changes. -->\r\n<!--- Include details of your testing environment, and the tests you ran to -->\r\n<!--- see how your change affects other areas of the code, etc. -->\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [x] My code follows the code style of this project.\r\n- [ ] My change requires a change to the documentation.\r\n- [x] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [ ] I have added tests to cover my changes.\r\n- [x] All new and existing tests passed.\r\n  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n#366 Removed ToAlphaString, which is a breaking change, and replaced it with ColumnNumberToName. The [documentation](https://github.com/360EntSecGroup-Skylar/excelize/blob/master/lib.go#L159) however, still has the original name in it. It also changed the signature from a string return value to a `(string, error)` return value to guard against indexes less than one. This doesn't seem necessary.\r\n\r\nIt also appears to have changed the zero based index to a one based index. What was the motivation for these changes?\r\n\r\nWill there be a changelog that lays out other things that are now broken from that PR? It would be helpful to know what the upgrade path looks like.\r\n For an example of why a zero based index and a single return value was nice:\r\n```\r\nfor colNum, str := range headers {\r\n    s.workbook.SetCellStr(sheetName, fmt.Sprintf(\"%s%d\", excelize.ToAlphaString(colNum), rowNum), str)\r\n}\r\n```\r\n\r\nCode now has to be more verbose to introduce an offset and ignore the error. `setRowOutlineLevel` now panics instead of returning, or returning an error like `ColumnNumberToName` does. It would be nice if the behavior was consistent.\r\n\r\nGiven that setting the outline level now panics, I think it would be reasonable to have `ColumnNumberToName` also panic. Sending a valid column number seems like a reasonable requirement and returning an error value seems unnecessary just to ensure the parameter is a positive number. It's also not checking that the column number is less than the maximum of (I think) 16,384.\r\n\r\n`setRowOutlineLevel` is also now 1 based index instead of 0 based. This is less surprising to a newcomer, but breaks a lot of code and could have been mitigated by just updating the docs instead of a code change. `AddPicture` is doing some weird things now. Prior to this change I was merging cells `A1` to `B4` then placed an image in cell `A1` with some x and y scaling. It sat nicely in the merged cell. After this change, it no longer sits in the cell but looks like the top left corner is centered now instead. Also, there appear to be infinite copies of the image.\r\n\r\n![image](https://user-images.githubusercontent.com/4331955/54642637-1bcabd00-4a63-11e9-8e85-45d10357ce38.png)\r\n\r\nIf I click and drag the image from where it sits originally, more appear and they just keep appearing! Since you're introducing several breaking changes you might want to consider bumping the library to v2. Most consumers probably assume you're following semantic versioning and would be surprised to have their code not compile after taking a minor version upgrade.\r\n\r\nThank you for Fixing the picture thing! I pulled down your changes and tested them. Images are indeed going to the right place again. However, I'm still seeing the infinite image duplication issue. If I switch back to the previous version of excelize and drag an image around the workbook it simply moves the image. Now a copy is created and moved instead. @mlh758 Thank you for you feedback.\r\nThe primary motivation of col/row addressing changes was fact that different public methods used different addressing some-time zero-based, some-time one-based.\r\n\r\nWhat about row starting number: Then I working with row number 5 which has label \"5\" in excel app and which addressed ad \"A5\" (for example) in this library, I am expecting that in all other places it will be \u00ab5\u00bb not \u00ab4\u00bb. Also about column name to number conversions: Excel has numeric column mode, and columns also starting from \"1\" in this case. @mlh758 \r\n\r\n> `setRowOutlineLevel` now panics instead of returning, or returning an error like `ColumnNumberToName` does. It would be nice if the behavior was consistent.\r\n> \r\n> Given that setting the outline level now panics, I think it would be reasonable to have `ColumnNumberToName` also panic. Sending a valid column number seems like a reasonable requirement and returning an error value seems unnecessary just to ensure the parameter is a positive number. It's also not checking that the column number is less than the maximum of (I think) 16,384.\r\n> \r\n> `setRowOutlineLevel` is also now 1 based index instead of 0 based. This is less surprising to a newcomer, but breaks a lot of code and could have been mitigated by just updating the docs instead of a code change.\r\n\r\nPlease look at https://golang.org/pkg/regexp where used complex approach: Functions returns errors and it `Must*` wrappers panics on error.\r\n\r\nI used same approach here, but unfortunately I miss some wrappers for `ColumnNameToNubmer` for example.\r\n\r\nI will be very pleasure I you made a PR with fix.   > > Since you're introducing several breaking changes you might want to consider bumping the library to v2. Most consumers probably assume you're following semantic versioning and would be surprised to have their code not compile after taking a minor version upgrade.\r\n> > Thank you for Fixing the picture thing!\r\n> \r\n> After consideration, I think all incompatible API changes will be included in `v2.0.0`. If so we can modify function signature to using return error instead of panic. Kind notice @albenik\r\n\r\n@xuri As I already proposed v2 earlier, agreed of course!\r\nBut we need to take care with https://github.com/golang/go/wiki/Modules#semantic-import-versioning to keep support for earler versions fo go. (Simply add `/v2`  suffix to package name not enough, `v2` branch also needed. @xuri And go away from panics and use error will be good solution i think. I'll open a new issue for the image duplication thing once I have\neverything together to reproduce it in a smaller test case.\n\nOn Thu, Mar 21, 2019 at 2:34 AM Veniamin Albaev <notifications@github.com>\nwrote:\n\n> @xuri <https://github.com/xuri> And go away from panics and use error\n> will be good solution i think.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/360EntSecGroup-Skylar/excelize/issues/360#issuecomment-475134743>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AEIZs08VNo83Q9Ni1hG898-zz8UB8bHgks5vYzXsgaJpZM4b81Ss>\n> .\n>\n > The primary motivation of col/row addressing changes was fact that different public methods used different addressing some-time zero-based, some-time one-based.\r\n\r\nI certainly understand the benefit of making the numbering consistent, it was just alarming to see the change suddenly appear without any discussion when having better documentation on the functions could have resolved most issues with using the library. I prefer the new names you've introduced - `ColumnNumberToName` is more descriptive than `ToAlphaString`.\r\n\r\nThe difference between what this library is doing and the regexp library though is that `ColumnNumberToName` is more of an array access by index while regexp is dynamically building a state machine from a string for a regular grammar. If you access an invalid array index Go panics, I think that would be reasonable to expect here as well.\r\n\r\nTo elaborate more, returning error values from things that you would expect to fail - system calls, HTTP requests, parsing operations - makes a lot of sense and his helpful. When you're only checking that the number is within some fixed range I'm not sure it's providing much value here and we should probably add a check for the upper bound as well. > I  certainly understand the benefit of making the numbering consistent, it was just alarming to see the change suddenly appear without any discussion\r\n\r\n@mlh758 Your absolutely right here!\r\n\r\nBut I have to improve library for real project with very hard deadline.\r\n\r\nFor me the only two way where possible: \r\n1. Made a fork for my own needs, use it, and not maintain it later.\r\n2. Made a PR to give an opportunity to improve base library. And I am very grateful to @xuri that he was accepted my PRs.\r\n\r\nAlso I was not planed deep refactoring, but unfortunately `excelize` code is very linked together (IMHO). All minor changes what I done only gave me an errors in very unexpected places.\r\n\r\n**SOME TEXT REMOVED, SEE NEW COMMENT BELOW**\r\n\r\n@xuri That do you this about all of it?\r\nThere is balance for you and your library between speed (and risks) of library growing and stability? > The difference between what this library is doing and the regexp library though is that ColumnNumberToName is more of an array access by index while regexp is dynamically building a state machine from a string for a regular grammar. If you access an invalid array index Go panics, I think that would be reasonable to expect here as well.\r\n\r\n@mlh758 I have another description: The common part of this library and **regexp** is a syntax check of provided string.\r\nAnd more than one use-case possible for `ColumnNumberToName` and depended functions.\r\n\r\n* First \u2014 internal use with basic confidence that all the cell names are correct. So panics is a good way to shorten a code but give a chance to detect typo or another code error.\r\n* Second \u2014 accepting external input (cell name) from user. And in this case error return is preferred.\r\n\r\nSo I think that use of the combined approach (basic functions returns error plus `Must*` wrappers) is justified.\r\nOr at least we need a separate public functions for column name, row number and cell name validations. I still don't quite agree with you here:\r\n\r\n> The common part of this library and regexp is a syntax check of provided string.\r\n\r\nThere isn't a syntax check in this library, it's performing an array boundary check for valid columns within a fixed range of 1 to ~16,000. I would expect the consuming library to sanity check input from the user before passing it on to library code.\r\n\r\nColumnNameToNumber, where the input can be an arbitrary string, makes sense to do this pattern on, and it looks like you already did that in your PR. I'm perfectly happy with the implementation as it is in that direction. > I still don't quite agree with you here\r\n\r\n@mlh758 Ok, do you accept logic like this one?\r\n\r\n1. `IsCollumnNameCorrect(string) bool`, `IsRowNumberCorrect(int) bool`, `IsCellNameCorect(string) bool` added.\r\n2. All other sheet manipulation functions and, and coordinate conversion functions returns only result (if no other errors no related with cell naming needed), and panics with incorrect cell/\u0441ol/row input.\r\n3. Cell addressing should be checked in (1) not only for syntax and lower bound but also for hight bounds (like ~16,000) I hadn't thought of adding validation functions, but I do prefer that.\r\n\r\nCould the names be `IsValidColumnName` and similar, since they're doing validation?\r\n\r\nAlso, this is my preference, but if I'm alone here it's not like I'm going to stop using the library or contributing if you stick with the error strategy. I'll just open a PR with the `Must*` style functions you suggested earlier. > Could the names be IsValidColumnName and similar, since they're doing validation?\r\n\r\nYes of course, I think.\r\nAnd I will be glad to hear @xuri opinion.\r\n\r\n> Also, this is my preference, but if I'm alone here it's not like I'm going to stop using the library or contributing if you stick with the error strategy. I'll just open a PR with the Must* style functions you suggested earlier.\r\n\r\nAnd again @xuri opinion will be most important, I think.\r\n\r\nFor me, both ways (with errors and `Must` wrappers and with panics) are acceptable. @mlh758 As of commit https://github.com/360EntSecGroup-Skylar/excelize/commit/40ff5dc1a7d7aa42f5db9cf9dfe858cc3820b44e I think @xuri decided to use an error returning way.... Yup, I'll get a PR up in the near future with some Must methods.  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nWhen adding an image, it would be useful to detect if the image is a duplicate and instead of adding the image again, return a reference to the existing media.\r\n\r\nWe have a header that gets added in some large workbooks to each sheet, and this substantially increases the file size. If we open the file in Excel and save it again, Excel detects the duplicate images and consolidates them on save, reducing the file size.\r\n\r\nI think it would be possible to change `addMedia` in `picture.go` to handle this behavior. `AddPictureFromBytes` would change slightly as well:\r\n\r\n1. `addMedia` steps through all the saved media and looks for byte slices that have the same length as the file we are trying to save. Compute the hash for both (we can obviously re-use the hash of the file being saved for future comparisons)\r\n2. If the hash matches, return the media path for the existing image. If no matches are found, save the new media and return its path\r\n3. `AddPictureFromBytes` calls `addMedia` before calling `addDrawingRelationships` and uses the media path provided by `addMedia` in the call to `addDrawingRelationships`.\r\n\r\nSince checking the length of a slice is a constant time operation, and very few slices should have the _exact_ same length without actually being the same media there shouldn't be much of a performance impact from the hashing. However, it would be worth adding a benchmark to ensure this doesn't cause a regression for #274. It would also be useful to incorporate a benchmark for actually saving the xlsx file since it's likely that the performance impact of this check would be offset by not having to write as many files.\r\n\r\nI will wait for feedback on this one since while I think it may be useful but I understand not wanting to risk the performance impact. A hash may actually be overkill, the bytes package has has an [Equal](https://godoc.org/bytes#Equal) function that already handles equality and would probably be more efficient.   <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nI've tried to recreate this issue and wasn't able to create a minimal reproduction. \r\n\r\nI have an app that is having a nil pointer dereference panic when calling NewStyle. The same exact code does not have the issue on a colleague's computer (we're definitely using the same 1.4.1 code). Any help is much appreciated. I've spent a few days trying various approaches (clearing my modcache, reinstalling Go, updating my Mac OS).\r\n\r\n\r\nThe error occurs in the following block (all of the below code is from styles.go):\r\n\r\n```go\r\nif fs.Font != nil {\r\n\tfont, _ := xml.Marshal(setFont(fs))\r\n\ts.Fonts.Count++\r\n\ts.Fonts.Font = append(s.Fonts.Font, &xlsxFont{\r\n\t\tFont: string(font[6 : len(font)-7]),\r\n\t})\r\n\tfontID = s.Fonts.Count - 1\r\n}\r\n```\r\n\r\nAt the time `s.Fonts.Count++` is called, `s.Fonts` is nil, for some reason.\r\n\r\n`s` is initialized with the following line `s := f.stylesReader()`, and I can't quite figure out why this constructor is initializing `s.Fonts` as nil for me (but not my colleagues).\r\n\r\nI really have no idea what is causing this issue, and when I tried to create a minimal reproduction that shows NewStyle having this memory panic, I was unable to cause the panic.\r\n\r\n**Output of `go version`:**\r\n\r\n```text\r\ngo version go1.12 darwin/amd64\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```text\r\n1.4.1 and have also tried later commits\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\nMac OSX, Gin web app, creating xlsx file\r\n\r\n```\r\nruntime error: invalid memory address or nil pointer dereference\r\n/usr/local/Cellar/go/1.12/libexec/src/runtime/panic.go:82 (0x1041c70)\r\n\tpanicmem: panic(memoryError)\r\n/usr/local/Cellar/go/1.12/libexec/src/runtime/signal_unix.go:390 (0x1041a9f)\r\n\tsigpanic: panicmem()\r\n/Users/ndubelman/Desktop/Dev/Go/pkg/mod/github.com/360!ent!sec!group-!skylar/excelize@v1.4.2-0.20190307082615-092f16c744c4/styles.go:1898 (0x165402e)\r\n\t(*File).NewStyle: font, _ := xml.Marshal(setFont(fs))\r\nbuildAllocationSheet.go:111 (0x16e8234)\r\n\taddBuildAllocationHeaders: style1, err := excelFile.NewStyle(`{\"alignment\":{\"horizontal\":\"center\"},\r\n``` Sorry, it is company code and when I tried to recreate it with a smaller example, I was unable to get the same issue. Feel free to close this. \r\n\r\nI was just curious if someone might know of an obvious reason why `s.Fonts` would be initialized as nil for me but not a coworker running the same code.  \u9ed8\u8ba4\u7684\u5750\u6807\u53ca\u5206\u7c7b\u7684\u989c\u8272\u592a\u6d45\u4e86\uff0c\u6b64\u5916\u8fd8\u60f3\u52a0\u4e2a\u5750\u6807\u6c34\u5e73\u7ebf\u793a\u610f\u7ebf\u3002 #320 \r\n  # PR Details\r\n\r\n<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\n\r\n<!--- Describe your changes in detail -->\r\n\r\n## Related Issue\r\n\r\n<!--- This project only accepts pull requests related to open issues -->\r\n<!--- If suggesting a new feature or change, please discuss it in an issue first -->\r\n<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->\r\n<!--- Please link to the issue here: -->\r\n\r\n## Motivation and Context\r\n\r\n<!--- Why is this change required? What problem does it solve? -->\r\n\r\n## How Has This Been Tested\r\n\r\n<!--- Please describe in detail how you tested your changes. -->\r\n<!--- Include details of your testing environment, and the tests you ran to -->\r\n<!--- see how your change affects other areas of the code, etc. -->\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [ ] My code follows the code style of this project.\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n- [ ] I have read the **CONTRIBUTING** document.\r\n- [ ] I have added tests to cover my changes.\r\n- [ ] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/351?src=pr&el=h1) Report\n> Merging [#351](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/351?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/12c1e2481e3f9f3c3c12a938484f04b12d5dede8?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/351/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/351?src=pr&el=tree)\n\n```diff\n@@           Coverage Diff           @@\n##           master     #351   +/-   ##\n=======================================\n  Coverage   98.59%   98.59%           \n=======================================\n  Files          19       19           \n  Lines        4128     4128           \n=======================================\n  Hits         4070     4070           \n  Misses         34       34           \n  Partials       24       24\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/351?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [rows.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/351/diff?src=pr&el=tree#diff-cm93cy5nbw==) | `94.48% <\u00f8> (\u00f8)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/351?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/351?src=pr&el=footer). Last update [12c1e24...b75b6d8](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/351?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  # PR Details\r\n\r\nImplement consistent row addressing by Excel row number starting with 1\r\n\r\n## Description\r\n\r\n1. Added second versions for all row manipulation methods with zero-based row addressing.\r\n2. Fixed methods documentation to explicitly describe which row addressing used in method.\r\n3. Added WARNING to README.md.\r\n4. Cosmetic change: All row test moved to file `rows_test.go`.\r\n\r\n## Related Issue\r\n\r\nhttps://github.com/360EntSecGroup-Skylar/excelize/issues/349\r\n\r\n## Motivation and Context\r\n\r\nYet another entropy fix :)\r\nI spent a much time to find bugs is my program related to different row numbering logic with different methods.\r\n\r\n## How Has This Been Tested\r\n\r\nUnit tests has been updated and succeed.\r\n\r\n## Types of changes\r\n\r\n- [x] Docs change / refactoring / dependency upgrade\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n- [x] My code follows the code style of this project.\r\n- [x] My change requires a change to the documentation.\r\n- [x] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [x] I have added tests to cover my changes.\r\n- [x] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/350?src=pr&el=h1) Report\n> Merging [#350](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/350?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/f66212da9bab1c39ab791d41881c70ae7ba00c20?src=pr&el=desc) will **decrease** coverage by `0.26%`.\n> The diff coverage is `75%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/350/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/350?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #350      +/-   ##\n==========================================\n- Coverage   98.85%   98.59%   -0.27%     \n==========================================\n  Files          19       19              \n  Lines        4122     4128       +6     \n==========================================\n- Hits         4075     4070       -5     \n- Misses         28       34       +6     \n- Partials       19       24       +5\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/350?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [rows.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/350/diff?src=pr&el=tree#diff-cm93cy5nbw==) | `94.48% <75%> (-4.02%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/350?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/350?src=pr&el=footer). Last update [f66212d...54cace3](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/350?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n Hi @xuri.\r\n\r\nBy guidelines (https://semver.org/ & https://github.com/golang/go/wiki/Modules#semantic-import-versioning), after incompatible API changes, it's necessary to update version to `v2.0.0` and module import path to `github.com/360EntSecGroup-Skylar/excelize/v2`.\r\n\r\nAnd also remove TravisCI tests from older go versions which not supports go modules.\r\n\r\nDo you plan to follow guidelines? Or I should simply break compatibility and place a README note? @xuri done  Is there a way to remove all the Data Validation from the sheet?  Thank you for your work on excelize. This is a really helpful and flexible tool. \r\n\r\nI found an issue when an existing formula on the input file is deleted from the cell or moved down when new rows are added.\r\nThe error messages are the same to #152\r\n\r\n\r\n### Scenario description\r\n**Input file structure**\r\n- Rows at beginning acting as sheet header.\r\n- Data section that I need to populate with new rows.\r\n- Cells at bottom with formulas that I need to \"rebuild\"(update vertical range) after previous step is done.\r\n   It would be so helpful if some day this rebuild could be automatic(like Microsoft Excel editor does)\r\n\r\n**Excelize steps**\r\nTo apply final formulas result, I need to perform the following:\r\n\r\n1. Scan the whole sheet and find cells with formulas.\r\n2. Backup sheet formulas info.\r\n3. Populate sheet with new rows.\r\n4. Put back the formulas, with the new range calculation.\r\n\r\n### Issue\r\n**Input file info:**\r\n- Name: HistoryTemplate.xlsx\r\n- Number values from \"E9\" to \"E12\" \r\n- Formula at \"E14\": SUM(E9:E12)\r\n\r\n1.  Formula deletion:\r\n`xlsx, _ := excelize.OpenFile(\"./HistoryTemplate.xlsx\")`\r\n`sheetName := \"Paros\"`\r\n`xlsx.SetCellFormula(sheetName, \"E14\", \"\")`\r\n`xlsx.SaveAs(\"./output1.xlsx\")`\r\n\r\n2. Formula moved down:\r\n`xlsx, _ := excelize.OpenFile(\"./HistoryTemplate.xlsx\")`\r\n`sheetName := \"Paros\"`\r\n`xlsx.DuplicateRowTo(sheetName, 10, 11)`\r\n`xlsx.SaveAs(\"./output2.xlsx\")`\r\n\r\n**Error message to open output file:**\r\n\"_Removed Records: Formula from /xl/calcChain.xml part (Calculation properties)_\"\r\n\r\n### Files:\r\n[HistoryTemplate.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/2890939/HistoryTemplate.xlsx)\r\n[output1.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/2890940/output1.xlsx)\r\n[output2.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/2890941/output2.xlsx)\r\n\r\n\r\n\r\n**go env:**\r\n`set GOARCH=amd64\r\nset GOBIN=\r\nset GOCACHE=C:\\Users\\Mind\\AppData\\Local\\go-build\r\nset GOEXE=.exe\r\nset GOHOSTARCH=amd64\r\nset GOHOSTOS=windows\r\nset GOOS=windows\r\nset GOPATH=C:\\GO_Projects\r\nset GORACE=\r\nset GOROOT=C:\\Go\r\nset GOTMPDIR=\r\nset GOTOOLDIR=C:\\Go\\pkg\\tool\\windows_amd64\r\nset GCCGO=gccgo\r\nset CC=gcc\r\nset CXX=g++\r\nset CGO_ENABLED=1\r\nset CGO_CFLAGS=-g -O2\r\nset CGO_CPPFLAGS=\r\nset CGO_CXXFLAGS=-g -O2\r\nset CGO_FFLAGS=-g -O2\r\nset CGO_LDFLAGS=-g -O2\r\nset PKG_CONFIG=pkg-config\r\nset GOGCCFLAGS=-m64 -mthreads -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fdebug-prefix-map=C:\\Users\\Mind\\AppData\\Local\\Temp\\go-build976948498=/tmp/go-build -gno-record-gcc-switches` Thanks for your fixing.\r\nI know that `DuplicateRow` and `DuplicateRowTo` implies hard work.\r\n\r\nNow the output file has no errors when formula is removed from cell.\r\nRight now, this is enough for me.  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n`func (f *File) GetComments() (comments map[string][]Comment)` returns wrong mapping between worksheets and comments. \r\n\r\nThis problem only occurs if a workbook contains multiple worksheets and at least one of them (except the last one) doesn't contain comments.\r\n\r\nExample:\r\nAssuming a workbook has 3 worksheets, there will be 3 files in `\\xl\\worksheets`. \r\n`sheet1.xml` (sheet without comments), `sheet2.xml` and `sheet3.xml`.\r\nSince the first sheet doesn't contain any comments, there will only be two comment files in `\\xl\\`.\r\n`comments1.xml`, `comments2.xml`.\r\n\r\nCurrently the relation between `sheet<number>.xml` and `comments<number>.xml` seems to be index based, according to [Comment.go](https://github.com/360EntSecGroup-Skylar/excelize/blob/master/comment.go#L33). \r\n\r\nCode snippet from link above:\r\n`commentID := f.GetSheetIndex(n)`\r\n`commentsXML := \"xl/comments\" + strconv.Itoa(commentID) + \".xml\"`\r\n\r\nSolution:\r\nMatching `sheet<number>.xml` and `comments<number>.xml` based on a common index returns wrong matchings, if any worksheet (except the last one) has no comments. \r\nIt seems that the proper relationship between worksheets and comments can be found in `\\xl\\worksheets\\_rels`. \r\n\r\nThis folder contains XML files for each worksheet that has any relationships. A plain worksheet will have no file in `\\xl\\worksheets\\_rels`.\r\n\r\nAccording to the example I mentioned above, \r\n`sheet1.xml.rels` contains the lines\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\r\n                <Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/table\" Target=\"../tables/table1.xml\"/>\r\n</Relationships>\r\n```\r\n\r\nNote that there is no reference to `\\xl\\comments1.xml`.\r\n\r\n`sheet2.xml.rels` contains the lines\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\r\n                <Relationship Id=\"rId2\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments\" Target=\"../comments1.xml\"/>\r\n                <Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/vmlDrawing\" Target=\"../drawings/vmlDrawing1.vml\"/>\r\n</Relationships>\r\n```\r\n\r\nNote that there is a reference to `\\xl\\comments1.xml` in line\r\n\r\n```\r\n<Relationship Id=\"rId2\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments\" Target=\"../comments1.xml\"/>\r\n``` \r\n\r\nTo avoid the issue, I would propose to match worksheets and comments based on their relationship in\r\n`\\xl\\worksheets\\_rels`. Please note that a plain worksheet will not have a corresponding file in `\\xl\\worksheets\\_rels`. Thus it may happen that you will only see `sheet2.xml.rels` and `sheet3.xml.rels`, assuming that worksheet one is plain, but worksheet two and three contain comments.\r\n\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. Create a new Excel file\r\n2. In case you don't have three worksheets by default, create two additional sheets.\r\n3. Set a comment in any cell on worksheet 2 and worksheet 3. Don't set any comment on worksheet 1!\r\n4. Call `GetComments()`\r\n\r\n**Describe the results you received:**\r\nOutput with some additional formatting:\r\n```\r\nSheet1 [{xxx, xxx 0 A1 This} {xxx, xxx 0 B1 Is} {xxx, xxx 0 C1 A test comment}]\r\nSheet2 [{xxx, xxx 0 A1 Another} {xxx, xxx 0 B1 Test} {xxx, xxx 0 C1 Comment}]\r\nSheet3 []\r\n```\r\n\r\n**Describe the results you expected:**\r\nSince the first sheet had no comments, but only sheet two and three, I would expect:\r\n```\r\nSheet1 []\r\nSheet2 [{xxx, xxx 0 A1 This} {xxx, xxx 0 B1 Is} {xxx, xxx 0 C1 A test comment}]\r\nSheet3 [{xxx, xxx 0 A1 Another} {xxx, xxx 0 B1 Test} {xxx, xxx 0 C1 Comment}]\r\n```\r\n\r\n**Output of `go version`:**\r\n\r\n```text\r\ngo version go1.11.5 darwin/amd64\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```text\r\nv1.4.1\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\nOSX Mojave 10.14.3\r\nMicrosoft Excel 2010\r\n  I made some routines to get spreadsheet columns as follows:\r\n\r\n```golang\r\nfmt.Println(h.NextColumn(\"A\",0))      // Prints \"B\"\r\n\tfmt.Println(h.NextColumn(\"A\",5))      // Prints \"G\"\r\n\tfmt.Println(h.NextColumn(\"Z\",0))      // Prints \"AA\"\r\n\tfmt.Println(h.NextColumn(\"A\",3))      // Prints \"E\"\r\n\tfmt.Println(h.NextColumn(\"AA\",0))     // Prints \"AB\"\r\n\tfmt.Println(h.NextColumn(\"AA\",3))     // Prints \"AE\"\r\n\tfmt.Println(h.NextColumn(\"AZ\",0))     // Prints \"BA\"\r\n\tfmt.Println(h.NextColumn(\"ZZ\",0))     // Prints \"AAA\"\r\n\tfmt.Println(h.NextColumn(\"XFD\",0))    // Prints \"\"\r\n\tfmt.Println(h.NextColumn(\"XFD\",2))    // Prints \"\"\r\n\tfmt.Println(h.NextColumn(\"XFB\",0))    // Prints \"XFC\"\r\n\tfmt.Println(h.NextColumn(\"XFB\",1))    // Prints \"XFD\"\r\n\tfmt.Println(h.NextColumn(\"XFB\",2))    // Prints \"\"\r\n\tfmt.Println(h.NextColumn(\"XFB\",3))    // Prints \"\"\r\n\tfmt.Println(h.NextColumn(\"323\",0))    // Prints \"\"\r\n\tfmt.Println(h.NextColumn(\"fsdfsd\",0)) // Prints \"\"\r\n\tfmt.Println(h.NextColumn(\"fsdfsd\",0)) // Prints \"\"\r\n\tfmt.Println(h.Columns(\"A\",5))         // Prints \"[A B C D E]\"\r\n\tfmt.Println(h.Columns(\"XFA\",6))       // Prints \"[XFA XFB XFC XFD]\"```\r\n```\r\n\r\nSo, I'm offering the code for the project, if the maintainer(s) understands it as useful/handy.\r\nPlease, feel free to use and adapt.\r\nThe code is available under _the unlicense_ .\r\n\r\nHere's the code: https://github.com/miguelpragier/SpreadsheetColumnHandler/blob/master/main.go\r\n\r\nIf the maintainers do preffer, I can PR.\r\n\r\nMy only doubt is about the quantity of columns. Is it universal among spreadsheet engines/versions?  ## Description\r\n\r\nSimplify TitleToNumber implementation:\r\n- add a few more test cases in `TestTitleToNumber`\r\n- use pure integer computation (drop use of `math.Pow`)\r\n- remove unnecessary casts to `int` \r\n\r\n## Motivation and Context\r\n\r\nFaster TitleToNumber.\r\n\r\n## How Has This Been Tested\r\n\r\nIncreased code coverage thanks to more test cases.\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [x] Docs change / refactoring / dependency upgrade\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [x] My code follows the code style of this project.\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [x] I have added tests to cover my changes.\r\n- [x] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/343?src=pr&el=h1) Report\n> Merging [#343](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/343?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/b7b925c03fa611b0157214357cc7f7b949b32992?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/343/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/343?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master    #343   +/-   ##\n======================================\n  Coverage    98.8%   98.8%           \n======================================\n  Files          18      18           \n  Lines        4027    4027           \n======================================\n  Hits         3979    3979           \n  Misses         28      28           \n  Partials       20      20\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/343?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [lib.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/343/diff?src=pr&el=tree#diff-bGliLmdv) | `97.97% <100%> (\u00f8)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/343?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/343?src=pr&el=footer). Last update [b7b925c...48c9511](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/343?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. Open file \"test.xlsx\"\r\n2. Run GetRows(\"Sheet1\")\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\r\n\t\"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\tfile, err := excelize.OpenFile(\"test.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\treturn\r\n\t}\r\n\trows := file.GetRows(\"Sheet1\")\r\n\tfor _, row := range rows {\r\n\t\tfmt.Println(row)\r\n\t}\r\n}\r\n```\r\n[test.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/2806252/test.xlsx)\r\n\r\n\r\n**Describe the results you received:**\r\n\r\n```\r\n[Salary Name Age Department]\r\n[2200220 Peter 40 Finance]\r\n```\r\n\r\n**Describe the results you expected:**\r\n```\r\n[Salary Name Age Department]\r\n[2200220.12 Peter 40 Finance]\r\n```\r\n\r\n**Output of `go version`:**\r\n```text\r\n11.1.1\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n```text\r\n1.4.1\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\n  Roadmap:\r\nObject Linking and Embedding (OLE) format support (#44)\r\n\r\nOur company has lots of system that export the old format .xls Excel file. The ole support is the last item on the roadmap list. It's difficult for the team to implement the legacy file format support.\r\n\r\nIs it possible to just add a command to convert the xls file to xlsx file so that we can process the file using excelize?\r\n\r\nThanks,\r\nAndrew\r\n\r\n\r\n\r\n  # PR Details\r\n\r\nclose #339 \r\n\r\n## Description\r\ndatavalidation list error, formula > 255, not set formula value \r\n\r\n## Related Issue\r\n\r\n<!--- This project only accepts pull requests related to open issues -->\r\n<!--- If suggesting a new feature or change, please discuss it in an issue first -->\r\n<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->\r\n<!--- Please link to the issue here: -->\r\n\r\n## Motivation and Context\r\n\r\n<!--- Why is this change required? What problem does it solve? -->\r\n\r\n## How Has This Been Tested\r\n\r\n<!--- Please describe in detail how you tested your changes. -->\r\n<!--- Include details of your testing environment, and the tests you ran to -->\r\n<!--- see how your change affects other areas of the code, etc. -->\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [-] My code follows the code style of this project.\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n- [ ] I have read the **CONTRIBUTING** document.\r\n- [-] I have added tests to cover my changes.\r\n- [ ] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/340?src=pr&el=h1) Report\n> Merging [#340](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/340?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/0c5c99e2ad1478499e634d3cc42c9c261e89bba0?src=pr&el=desc) will **decrease** coverage by `0.04%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/340/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/340?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##           master    #340      +/-   ##\n=========================================\n- Coverage   98.85%   98.8%   -0.05%     \n=========================================\n  Files          18      18              \n  Lines        4024    4027       +3     \n=========================================\n+ Hits         3978    3979       +1     \n- Misses         27      28       +1     \n- Partials       19      20       +1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/340?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [datavalidation.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/340/diff?src=pr&el=tree#diff-ZGF0YXZhbGlkYXRpb24uZ28=) | `97.43% <100%> (-2.57%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/340?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/340?src=pr&el=footer). Last update [0c5c99e...daf32a3](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/340?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\nSet the list validation error. When the content of the list value is too long, the format of the excel file will be incorrect. After the repair, the unit list data validation in the excel sheet disappears. \r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n  # PR Details\r\n\r\n<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\n\r\n<!--- Describe your changes in detail -->\r\n\r\n## Related Issue\r\n\r\n<!--- This project only accepts pull requests related to open issues -->\r\n<!--- If suggesting a new feature or change, please discuss it in an issue first -->\r\n<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->\r\n<!--- Please link to the issue here: -->\r\n\r\n## Motivation and Context\r\n\r\n<!--- Why is this change required? What problem does it solve? -->\r\n\r\n## How Has This Been Tested\r\n\r\n<!--- Please describe in detail how you tested your changes. -->\r\n<!--- Include details of your testing environment, and the tests you ran to -->\r\n<!--- see how your change affects other areas of the code, etc. -->\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [ ] My code follows the code style of this project.\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n- [ ] I have read the **CONTRIBUTING** document.\r\n- [ ] I have added tests to cover my changes.\r\n- [ ] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/337?src=pr&el=h1) Report\n> Merging [#337](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/337?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/7f1323f7ac7037670848fb8ab103ace59748c28e?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/337/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/337?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #337      +/-   ##\n==========================================\n+ Coverage   98.85%   98.85%   +<.01%     \n==========================================\n  Files          18       18              \n  Lines        4017     4024       +7     \n==========================================\n+ Hits         3971     3978       +7     \n  Misses         27       27              \n  Partials       19       19\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/337?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [sheet.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/337/diff?src=pr&el=tree#diff-c2hlZXQuZ28=) | `97.81% <100%> (+0.03%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/337?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/337?src=pr&el=footer). Last update [7f1323f...81948d9](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/337?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  According [Go Release Policy](https://golang.org/doc/devel/release.html#policy) (\"Each major Go release is supported until there are two newer major releases\") go1.8 is obsolete and should been removed from TravicCI config (IMHO).\r\n\r\nIf you agree, I ready to do a PR. Why remove checks on Travis-CI as all the checks currently pass even on those old versions of Go? @dolmen Do you really using unsupported versions of Go in your work?\r\nWhat if in future PR will break on unsupported version? Fix PR? Or change project config without asking authors? Or spend time to communicate with authors instead of simply made a PR?\r\nI think it will be better to avoid this now with very low cost.\r\nThis issue is about consistency of project with ecosystem.\r\nOf course it can be untouched until it breaks, or TravisCI will remove support of older version. This is also a way.\r\n  # PR Details\r\n\r\nNew feature: File.DuplicateRowTo() duplicate row to specified row position\r\n\r\n## Description\r\n\r\nDuplicateRowTo() is similar to DuplicateRow() but copies specified row not just after specified source row\r\nbut to any other specified position below or above source row.\r\n\r\nAlso I made minor modifications of tests: using filepath.Join() instead of direct unix-way paths strings\r\nto avoid possible tests fails on other OS.\r\n\r\n## Related Issue\r\n\r\nhttps://github.com/360EntSecGroup-Skylar/excelize/issues/333\r\n\r\n## Motivation and Context\r\n\r\nDescribed in https://github.com/360EntSecGroup-Skylar/excelize/issues/333\r\n\r\n## How Has This Been Tested\r\n\r\n`go test ./...`\r\n\r\n## Types of changes\r\n\r\n- [x] Docs change / refactoring / dependency upgrade\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n- [x] My code follows the code style of this project.\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [x] I have added tests to cover my changes.\r\n- [x] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/334?src=pr&el=h1) Report\n> Merging [#334](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/334?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/b0ed4c12d2cced29d82e8a4af47f7b42f555ca8c?src=pr&el=desc) will **decrease** coverage by `0.04%`.\n> The diff coverage is `96.29%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/334/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/334?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #334      +/-   ##\n==========================================\n- Coverage    98.9%   98.85%   -0.05%     \n==========================================\n  Files          18       18              \n  Lines        4014     4017       +3     \n==========================================\n+ Hits         3970     3971       +1     \n- Misses         26       27       +1     \n- Partials       18       19       +1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/334?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [excelize.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/334/diff?src=pr&el=tree#diff-ZXhjZWxpemUuZ28=) | `95.49% <100%> (-0.03%)` | :arrow_down: |\n| [rows.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/334/diff?src=pr&el=tree#diff-cm93cy5nbw==) | `98.49% <95.65%> (-0.75%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/334?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/334?src=pr&el=footer). Last update [b0ed4c1...725c1a0](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/334?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  # PR Details\r\n\r\nDo not create a blank fill if no fill is specified in the style format\r\n\r\n## Description\r\n\r\nsetFills returns nil if type is not gradient or pattern.  NewStyle checks for nil and only adds fill / sets fillID if not nil.\r\n\r\n## Related Issue\r\n\r\nhttps://github.com/360EntSecGroup-Skylar/excelize/issues/331\r\n\r\n## Motivation and Context\r\n\r\nSetting a cell style on a cell that is part of a table overrides the table fill format regardless if there is a fill specified in the style format or not.  This only sets a fill on the style if provided a fill format in the call to NewStyle.\r\n\r\n## How Has This Been Tested\r\n\r\nUnit test added to styles_test.go for both a fill specified and fill not specified.\r\n\r\n## Types of changes\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [X] My code follows the code style of this project.\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n- [X] I have read the **CONTRIBUTING** document.\r\n- [X] I have added tests to cover my changes.\r\n- [X] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/332?src=pr&el=h1) Report\n> Merging [#332](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/332?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/055d3fadf289f98a1f3cae3fe5177ccc5ea3509d?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/332/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/332?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##           master    #332      +/-   ##\n=========================================\n+ Coverage    98.9%   98.9%   +<.01%     \n=========================================\n  Files          18      18              \n  Lines        4011    4014       +3     \n=========================================\n+ Hits         3967    3970       +3     \n  Misses         26      26              \n  Partials       18      18\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/332?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [styles.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/332/diff?src=pr&el=tree#diff-c3R5bGVzLmdv) | `100% <100%> (\u00f8)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/332?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/332?src=pr&el=footer). Last update [055d3fa...5dd00b9](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/332?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  # PR Details\r\n\r\n<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\n\r\n<!--- Describe your changes in detail -->\r\n\r\n## Related Issue\r\n\r\n<!--- This project only accepts pull requests related to open issues -->\r\n<!--- If suggesting a new feature or change, please discuss it in an issue first -->\r\n<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->\r\n<!--- Please link to the issue here: -->\r\n\r\n## Motivation and Context\r\n\r\n<!--- Why is this change required? What problem does it solve? -->\r\n\r\n## How Has This Been Tested\r\n\r\n<!--- Please describe in detail how you tested your changes. -->\r\n<!--- Include details of your testing environment, and the tests you ran to -->\r\n<!--- see how your change affects other areas of the code, etc. -->\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [x] Docs change / refactoring / dependency upgrade\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [x] My code follows the code style of this project.\r\n- [x] My change requires a change to the documentation.\r\n- [x] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [x] I have added tests to cover my changes.\r\n- [x] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/330?src=pr&el=h1) Report\n> Merging [#330](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/330?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/969f4e2399d17386c1beda389096a737873110ff?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/330/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/330?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##           master    #330      +/-   ##\n=========================================\n+ Coverage   98.89%   98.9%   +<.01%     \n=========================================\n  Files          18      18              \n  Lines        3989    4011      +22     \n=========================================\n+ Hits         3945    3967      +22     \n  Misses         26      26              \n  Partials       18      18\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/330?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [excelize.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/330/diff?src=pr&el=tree#diff-ZXhjZWxpemUuZ28=) | `95.51% <\u00f8> (\u00f8)` | :arrow_up: |\n| [sheetpr.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/330/diff?src=pr&el=tree#diff-c2hlZXRwci5nbw==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n| [sheet.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/330/diff?src=pr&el=tree#diff-c2hlZXQuZ28=) | `97.77% <100%> (+0.12%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/330?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/330?src=pr&el=footer). Last update [969f4e2...034de7a](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/330?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  Hi, I'm t he original author of tealeg/xlsx.  The BSD 3 clause license is pretty lenient, but it does require you to reproduce my copyright statement when using my code.  I know you openly state that you use some of my code, so there's no ill intent (and really I think what you've done it awesome!), but you're actually required to include my copyright statement alongside yours in the license.  Thanks @xuri.  **Description**\r\nI am trying to create a chart on excel sheet using AddChart() function. I executed the code successfully and It returned me the file as I am expecting it to be. But when before saving the file I want to rename the sheet name using xlsx.SetSheetName(\"Sheet1\",\"New Name\") It creates a file with empty chart.\r\n\r\n<!--\r\nIf before saving the excel file we use xlsx.SetSheetName(\"Sheet1\",\"driver 6 dagen\") function to rename the sheet it returns the empty chart. -->\r\n\r\n**Steps to reproduce the issue:**\r\n1.  Write following code and check the output it will return the correct chart with Graph.\r\n\r\n```\r\npackage main\r\nimport (\r\n    \"fmt\"\r\n    \"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\nfunc main() {\r\n    categories := map[string]string{\"A1\": \"datum\", \"A2\": \"19-Nov-2018\", \"A3\": \"20-Nov-2018\", \"A4\": \"21-Nov-2018\", \"A5\": \"22-Nov-2018\", \"A6\": \"23-Nov-2018\", \"A7\":\"24-Nov-2018\", \"D1\":\"score totaal/h\"}\r\n    values := map[string]float64{\"D2\": 3.0047, \"D3\": 3.3697, \"D4\": 2.7776, \"D5\": 1.5615, \"D6\": 2.5649, \"D7\": 4.3659}\r\n\r\n    xlsx := excelize.NewFile()\r\n    for k, v := range categories {\r\n        xlsx.SetCellValue(\"Sheet1\", k, v)\r\n    }\r\n    for k, v := range values {\r\n        xlsx.SetCellValue(\"Sheet1\", k, v)\r\n    }\r\n\r\n xlsx.AddChart(\"Sheet1\", \"B13\", `{\"type\":\"line\",\"dimension\":{\"width\":480,\"height\":600},\"series\":[{\"name\":\"Sheet1!$D$1\",\"categories\":\"Sheet1!$A$2:$A$7\",\"values\":\"Sheet1!$D$2:$D$7\"}],\"format\":{\"x_scale\":1.0,\"y_scale\":1.0,\"x_offset\":15,\"y_offset\":10,\"print_obj\":true,\"lock_aspect_ratio\":false,\"locked\":false},\"legend\":{\"position\":\"bottom\",\"show_legend_key\":false},\"title\":{\"name\":\"Fruit 3D Clustered Column Chart\"},\"plotarea\":{\"show_bubble_size\":true,\"show_cat_name\":false,\"show_leader_lines\":true,\"show_percent\":true,\"show_series_name\":true,\"show_val\":true},\"show_blanks_as\":\"zero\",\"x_axis\":{\"reverse_order\":false},\"y_axis\":{\"maximum\":50,\"minimum\":0}}`)\r\n\r\n    // Save xlsx file by the given path.\r\n    err := xlsx.SaveAs(\"./Book1.xlsx\")\r\n    if err != nil {\r\n        fmt.Println(err)\r\n    }\r\n}\r\n```\r\n\r\n2. Add the following line before saving the file\r\n`    xlsx.SetSheetName(\"Sheet1\",\"customsheetname\")`\r\n   and it will save the file with empty chart.\r\n\r\n**Output of `go version`:**\r\ngo version go1.9.4 linux/amd64\r\n\r\n**Excelize version or commit ID:**\r\n9a6f66a996eb83f16da13416c5fca361afe575b0\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 16.04.5 LTS\r\nRelease:\t16.04\r\nCodename:\txenial\r\n @bharatsewani1993 @xuri \r\nI investigated this issue and found mistake in code for add chart.\r\nWhen you adding chart you set values with sheet name:\r\n```\r\n xlsx.AddChart(\"Sheet1\", \"B13\", \r\n  `{\"type\":\"line\",\"dimension\":{...},\r\n     \"series\":[{\r\n        \"name\":\"Sheet1!$D$1\",                      <---- here \r\n        \"categories\":\"Sheet1!$A$2:$A$7\",     <---- here\r\n        \"values\":\"Sheet1!$D$2:$D$7\"}],         <---- and here\r\n     \"format\":...`)\r\n```\r\nIf you remove Sheet1 from there chart fills properly:\r\n```\r\n xlsx.AddChart(\"Sheet1\", \"B13\", \r\n  `{\"type\":\"line\",\"dimension\":{...},\r\n     \"series\":[{\r\n        \"name\":\"$D$1\",                      <---- here \r\n        \"categories\":\"$A$2:$A$7\",     <---- here\r\n        \"values\":\"$D$2:$D$7\"}],         <---- and here\r\n     \"format\":...`)\r\n``` @xuri If you drop \"Sheet1!\" from source definition everything will still work even after renaming the sheet. hi,\r\nchart data is not appearing also if you place a different string than 'Sheet1' in SetCellStyle or SetCellValue calls.  # PR Details\r\n\r\nTests refactored.\r\nAll custom check replaced  with `github.com/stretchr/testify/assert`.\r\nTemporary maped dependency to `github.com/stretchr/testify@master` as of error fixed.\r\n\r\n## Description\r\n\r\nThis commit is not ideal but necessary (IMHO)\r\n\r\n## Related Issue\r\n\r\nhttps://github.com/360EntSecGroup-Skylar/excelize/issues/322\r\n\r\n## Motivation and Context\r\n\r\nPrimary motivation: Avoid statefull tests with not ignorable git file tree changes.\r\nMultiple tests reads and overwrites single file for own needs.\r\nMultiple tests reads and overwrites file `Book1.xlsx` under version control.\r\n\r\nSecondary motivation: Minimal tests logic aligment, separate error expectation\r\nand not error expectation tests. Introduce sub-test over test data sets and so far.\r\n\r\n## How Has This Been Tested\r\n\r\nSimple run `go test ./...` and checks `git status`\r\n\r\n## Types of changes\r\n\r\n- [x] Docs change / refactoring / dependency upgrade\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n- [x] My code follows the code style of this project.\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n- [ ] I have read the **CONTRIBUTING** document.\r\n- [x] I have added tests to cover my changes.\r\n- [x] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/323?src=pr&el=h1) Report\n> Merging [#323](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/323?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/9a6f66a996eb83f16da13416c5fca361afe575b0?src=pr&el=desc) will **decrease** coverage by `0.1%`.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/323/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/323?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #323      +/-   ##\n==========================================\n- Coverage   98.84%   98.74%   -0.11%     \n==========================================\n  Files          18       18              \n  Lines        3990     3990              \n==========================================\n- Hits         3944     3940       -4     \n- Misses         27       31       +4     \n  Partials       19       19\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/323?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [file.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/323/diff?src=pr&el=tree#diff-ZmlsZS5nbw==) | `87.93% <0%> (-1.73%)` | :arrow_down: |\n| [cell.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/323/diff?src=pr&el=tree#diff-Y2VsbC5nbw==) | `96.68% <0%> (-1.51%)` | :arrow_down: |\n| [rows.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/323/diff?src=pr&el=tree#diff-cm93cy5nbw==) | `99.23% <0%> (+0.76%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/323?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/323?src=pr&el=footer). Last update [9a6f66a...35426ed](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/323?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  # PR Details\r\n\r\nThis PR fix the issue #195.\r\n\r\n## Description\r\n\r\nIt checks if there's N (defined by the user) empty lines in sequence in the sheet, and if so, it stops the GetRows function. I also had a more than 1 million empty lines sheet.\r\n\r\n## How Has This Been Tested\r\n\r\nIt was created a unit test that covers all code created. The overall coverage of the project still roughly the same, and it's all passing.\r\n\r\nIt was also made many api tests in an in house project, with different files. A simple file created by hand with few rows, and with a large file (~40k rows) from a real client.\r\n\r\n## Types of changes\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n- [X] My code follows the code style of this project.\r\n- [ ] My change requires a change to the documentation.\r\n- [X] I have updated the documentation accordingly.\r\n- [X] I have read the **CONTRIBUTING** document.\r\n- [X] I have added tests to cover my changes.\r\n- [X] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/319?src=pr&el=h1) Report\n> Merging [#319](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/319?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/9a6f66a996eb83f16da13416c5fca361afe575b0?src=pr&el=desc) will **increase** coverage by `0.04%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/319/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/319?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #319      +/-   ##\n==========================================\n+ Coverage   98.84%   98.89%   +0.04%     \n==========================================\n  Files          18       18              \n  Lines        3990     3989       -1     \n==========================================\n+ Hits         3944     3945       +1     \n+ Misses         27       26       -1     \n+ Partials       19       18       -1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/319?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [excelize.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/319/diff?src=pr&el=tree#diff-ZXhjZWxpemUuZ28=) | `95.51% <\u00f8> (\u00f8)` | :arrow_up: |\n| [lib.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/319/diff?src=pr&el=tree#diff-bGliLmdv) | `97.97% <\u00f8> (\u00f8)` | :arrow_up: |\n| [picture.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/319/diff?src=pr&el=tree#diff-cGljdHVyZS5nbw==) | `99.28% <\u00f8> (\u00f8)` | :arrow_up: |\n| [styles.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/319/diff?src=pr&el=tree#diff-c3R5bGVzLmdv) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n| [file.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/319/diff?src=pr&el=tree#diff-ZmlsZS5nbw==) | `89.65% <\u00f8> (\u00f8)` | :arrow_up: |\n| [chart.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/319/diff?src=pr&el=tree#diff-Y2hhcnQuZ28=) | `99.3% <\u00f8> (\u00f8)` | :arrow_up: |\n| [table.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/319/diff?src=pr&el=tree#diff-dGFibGUuZ28=) | `99.14% <\u00f8> (\u00f8)` | :arrow_up: |\n| [sheet.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/319/diff?src=pr&el=tree#diff-c2hlZXQuZ28=) | `97.65% <\u00f8> (\u00f8)` | :arrow_up: |\n| [cell.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/319/diff?src=pr&el=tree#diff-Y2VsbC5nbw==) | `98.19% <\u00f8> (\u00f8)` | :arrow_up: |\n| [datavalidation.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/319/diff?src=pr&el=tree#diff-ZGF0YXZhbGlkYXRpb24uZ28=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n| ... and [8 more](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/319/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/319?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/319?src=pr&el=footer). Last update [9a6f66a...509dc47](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/319?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  I must generate xlsx files which have more than ten columns and the page should be set as landscape to hold all the columns. I searched your source and all issues to figure out how to make it but failed. I am wondering if you guys can provide a way out. Thanks. Hi @xuri, I am wondering when you could add the page orientation setup. \u5750\u7b49\u3002  @xuri  It just works. Thank u guys.  # PR Details\r\n\r\n`File.DuplicateRow(sheet, row)` method added\r\n\r\n## Description\r\n\r\n`File.DuplicateRow(sheet, row)` method added, it is similar to `File.InsertRow(sheet, row)` but copies specified row values and styles. (Just like copy/paste in Excel).\r\n\r\nAlso subpart of code of `File.adjustRowDimensions()` method was extracted to separate method `File.ajustSingleRowDimensions()` and was reused in `DuplicateRow()`\r\n\r\n## Related Issue\r\n\r\nhttps://github.com/360EntSecGroup-Skylar/excelize/issues/83\r\n\r\n## Motivation and Context\r\n\r\nMotivation already described by another people in issue https://github.com/360EntSecGroup-Skylar/excelize/issues/83 \u2014 This enchantment required to use pre-created xlsx file as template.\r\n\r\n## How Has This Been Tested\r\n\r\nRelated unit test added https://github.com/360EntSecGroup-Skylar/excelize/compare/master...albenik:duplicate_row?expand=1#diff-bd370461fa2f33b420b2ab991d34fa2cR1034 with subtests\r\n\r\n`github.com/stretchr/testify` import introduced in test file, but this dependency where already preset as dependency in project. (Just run `G111MODULE=on go mod tidy` on master branch)\r\n\r\n## Types of changes\r\n\r\n- [x] Docs change / refactoring / dependency upgrade\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n- [x] My code follows the code style of this project.\r\n- [x] My change requires a change to the documentation. (But only autogenerated docs, same as for InsertRow() which not manually documented)\r\n- [ ] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [x] I have added tests to cover my changes.\r\n- [x] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/317?src=pr&el=h1) Report\n> Merging [#317](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/317?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/b04107c4a374dfc0a625d1513b0e5cb1d907260b?src=pr&el=desc) will **decrease** coverage by `0.09%`.\n> The diff coverage is `87.09%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/317/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/317?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##           master     #317     +/-   ##\n=========================================\n- Coverage   98.88%   98.79%   -0.1%     \n=========================================\n  Files          18       18             \n  Lines        3958     3982     +24     \n=========================================\n+ Hits         3914     3934     +20     \n- Misses         26       28      +2     \n- Partials       18       20      +2\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/317?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [excelize.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/317/diff?src=pr&el=tree#diff-ZXhjZWxpemUuZ28=) | `95.51% <100%> (-0.03%)` | :arrow_down: |\n| [rows.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/317/diff?src=pr&el=tree#diff-cm93cy5nbw==) | `97.71% <84%> (-1.45%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/317?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/317?src=pr&el=footer). Last update [b04107c...a7993f4](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/317?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  Add a regular expression to the search method\r\n\r\nSince the return value is returned by MAP,\r\n it is convenient when you want to search by regular expression and obtain multiple cell coordinates\r\n\r\nPS:\r\nI am using translation, I'm sorry in dirty English :( # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/316?src=pr&el=h1) Report\n> Merging [#316](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/316?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/b04107c4a374dfc0a625d1513b0e5cb1d907260b?src=pr&el=desc) will **decrease** coverage by `0.81%`.\n> The diff coverage is `0%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/316/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/316?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #316      +/-   ##\n==========================================\n- Coverage   98.88%   98.07%   -0.82%     \n==========================================\n  Files          18       18              \n  Lines        3958     3991      +33     \n==========================================\n  Hits         3914     3914              \n- Misses         26       59      +33     \n  Partials       18       18\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/316?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [sheet.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/316/diff?src=pr&el=tree#diff-c2hlZXQuZ28=) | `89.7% <0%> (-7.9%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/316?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/316?src=pr&el=footer). Last update [b04107c...3271db7](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/316?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/316?src=pr&el=h1) Report\n> Merging [#316](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/316?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/b04107c4a374dfc0a625d1513b0e5cb1d907260b?src=pr&el=desc) will **decrease** coverage by `0.79%`.\n> The diff coverage is `0%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/316/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/316?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##           master     #316     +/-   ##\n=========================================\n- Coverage   98.88%   98.09%   -0.8%     \n=========================================\n  Files          18       18             \n  Lines        3958     3990     +32     \n=========================================\n  Hits         3914     3914             \n- Misses         26       58     +32     \n  Partials       18       18\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/316?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [sheet.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/316/diff?src=pr&el=tree#diff-c2hlZXQuZ28=) | `89.92% <0%> (-7.68%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/316?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/316?src=pr&el=footer). Last update [b04107c...6fba208](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/316?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n # PR Details\r\n\r\n`RegSearchSheet(sheet, value string)` method added\r\n\r\n## Description\r\n\r\n`RegSearchSheet(sheet, value string) ` Method added,It is similar to `SearchSheet(sheet, value string)`, but uses regular expressions for the search. Returns a cell that matches a regular expression\r\n\r\n\r\n## Related Issue\r\n\r\n\r\n## Motivation and Context\r\n\r\nIt is necessary to describe a certain tag in the Excel file and to identify and change the content from the program (for example, you can get the cell marked as {tag: thisPrice} Replace with variable values)\r\nI implemented it for that\r\n\r\n## How Has This Been Tested\r\n\r\nhttps://github.com/360EntSecGroup-Skylar/excelize/pull/316/commits/6fba208b2cee4dcb3b3021f86255dc608e0d5f74\r\n\r\nWe added unit tests as well as existing methods\r\n\r\n## Types of changes\r\n\r\n- [x] Docs change / refactoring / dependency upgrade\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [x] My code follows the code style of this project.\r\n- [x] My change requires a change to the documentation.\r\n- [x] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [x] I have added tests to cover my changes.\r\n- [x] All new and existing tests passed. I did not grasp accurately, I am sorry, I sent the change as described above, I am pleased if you can confirm, Thank you for taking care of polite  # PR Details\r\nCloses https://github.com/360EntSecGroup-Skylar/excelize/issues/312\r\n\r\n<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\nCurrently, there is no way to get all merged cells from a worksheet currently,\r\nso added the function to do it.\r\n\r\n<!--- Describe your changes in detail -->\r\n\r\n## Related Issue\r\nhttps://github.com/360EntSecGroup-Skylar/excelize/issues/143 https://github.com/360EntSecGroup-Skylar/excelize/issues/78\r\n<!--- This project only accepts pull requests related to open issues -->\r\n<!--- If suggesting a new feature or change, please discuss it in an issue first -->\r\n<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->\r\n<!--- Please link to the issue here: -->\r\n\r\n## Motivation and Context\r\nI want to get merged cell axis from the sheet, but there is no way.\r\n<!--- Why is this change required? What problem does it solve? -->\r\n\r\n## How Has This Been Tested\r\nAdded excel file which contains merged cells, and executed the new unit test with it.\r\n<!--- Please describe in detail how you tested your changes. -->\r\n<!--- Include details of your testing environment, and the tests you ran to -->\r\n<!--- see how your change affects other areas of the code, etc. -->\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [x] My code follows the code style of this project.\r\n- [x] My change requires a change to the documentation.\r\n- [x] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [x] I have added tests to cover my changes.\r\n- [x] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/313?src=pr&el=h1) Report\n> Merging [#313](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/313?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/90221bd98fab0ce85a177d955d79a964bb4b66b2?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `88.23%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/313/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/313?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #313      +/-   ##\n==========================================\n+ Coverage   98.87%   98.87%   +<.01%     \n==========================================\n  Files          18       18              \n  Lines        3902     3919      +17     \n==========================================\n+ Hits         3858     3875      +17     \n  Misses         26       26              \n  Partials       18       18\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/313?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [excelize.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/313/diff?src=pr&el=tree#diff-ZXhjZWxpemUuZ28=) | `95.53% <88.23%> (+0.36%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/313?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/313?src=pr&el=footer). Last update [90221bd...3012df0](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/313?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n Thank you for your merging!  **Description**\r\nIs there any way to get MergeCells as below?\r\n\r\nIf not, I will PR.\r\n\r\n```\r\nxlsx, err := OpenFile(\"./test/Book1.xlsx\")\r\nif err != nil {\r\n\tt.Error(err)\r\n}\r\nxlsx.MergeCell(\"Sheet1\", \"D9\", \"E10\")\r\n\r\nmergeCells := xlsx.GetMergeCells(\"Sheet1\") // New Feature\r\nfor _, m := range mergeCells {\r\n\tfmt.Println(m.Start) // output: D9\r\n\tfmt.Println(m.End) // output: E10\r\n}\r\n``` @xuri\r\nThanks. You mean that \"coordinate of merged cells\" is the string value like \"D4\" or \"E10\" ? Understood, thanks! I will start working.  I have **undefined: excelize.TopLeftCell** error message\r\n    xlsx.SetSheetViewOptions(\"Sheet1\", 0, excelize.SheetViewOption(excelize.TopLeftCell(\"A100\")))\r\n\r\nWhen ZoomScale working correctly\r\n    xlsx.SetSheetViewOptions(\"Sheet1\", 0, excelize.SheetViewOption(excelize.ZoomScale(70)))\r\n\r\ngo version go1.11.2 windows/amd64\r\n  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n--> The example does not work again in 1.11.4\r\n\r\n**Description**\r\n\r\n<!--package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n\r\n\t\"github.com/Luxurioust/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\txlsx := excelize.CreateFile()\r\n\t// Create a new sheet.\r\n\txlsx.NewSheet(2, \"Sheet2\")\r\n\t// Set value of a cell.\r\n\txlsx.SetCellValue(\"Sheet2\", \"A2\", \"Hello world.\")\r\n\txlsx.SetCellValue(\"Sheet1\", \"B2\", 100)\r\n\t// Set active sheet of the workbook.\r\n\txlsx.SetActiveSheet(2)\r\n\t// Save xlsx file by the given path.\r\n\terr := xlsx.WriteTo(\"tmp/Workbook.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\tos.Exit(1)\r\n\t}\r\n}\r\n\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\nundefined excelize.createfile\r\n**Steps to reproduce the issue:**\r\n1.\r\n2.\r\n3.\r\n\r\n**Describe the results you received:**\r\n\r\n**Describe the results you expected:**\r\n\r\n**Output of `go version`:**\r\n\r\n```text\r\n(paste your output here)\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```text\r\n(paste here)\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\n  **Description**\r\n\r\nWhen you delete a sheet then create a new one and then delete again there is an out of index error\r\n\r\n**Steps to reproduce the issue:**\r\n```\r\nfunc main() {\r\n    xlsx := excelize.NewFile()\r\n    // Create a new sheet.\r\n\txlsx.NewSheet(\"Sheet2\")\r\n\txlsx.NewSheet(\"Sheet3\")\r\n\txlsx.NewSheet(\"Sheet4\")\r\n\tfmt.Println(\"init \", xlsx.GetSheetMap())\r\n\txlsx.DeleteSheet(\"Sheet3\")\r\n\tfmt.Println(\"delete \", xlsx.GetSheetMap())\r\n\txlsx.NewSheet(\"Sheet5\")\r\n\tfmt.Println(\"new \", xlsx.GetSheetMap())\r\n\txlsx.DeleteSheet(\"Sheet5\")\r\n\tfmt.Println(\"delete \", xlsx.GetSheetMap())\r\n    err := xlsx.SaveAs(\"./Book1.xlsx\")\r\n    if err != nil {\r\n        fmt.Println(err)\r\n    }\r\n}\r\n```\r\n\r\n**Describe the results you received:**\r\n```\r\n$ go run main.go\r\ninit  map[1:Sheet1 2:Sheet2 3:Sheet3 4:Sheet4]\r\ndelete  map[1:Sheet1 2:Sheet2 4:Sheet4]\r\nnew  map[1:Sheet1 2:Sheet2 4:Sheet5]\r\npanic: runtime error: slice bounds out of range\r\n\r\ngoroutine 1 [running]:\r\ngithub.com/360EntSecGroup-Skylar/excelize.(*File).deleteSheetFromContentTypes(0xc0002a2000, 0xc00005cde0, 0x15)\r\n        C:/Users/xx/go/pkg/mod/github.com/360!ent!sec!group-!skylar/excelize@v1.4.0/sheet.go:439 +0x2cd\r\ngithub.com/360EntSecGroup-Skylar/excelize.(*File).DeleteSheet(0xc0002a2000, 0x6a15ea, 0x6)\r\n        C:/Users/xx/go/pkg/mod/github.com/360!ent!sec!group-!skylar/excelize@v1.4.0/sheet.go:408 +0x45b\r\nmain.main()\r\n        C:/data/main.go:25 +0x275\r\nexit status 2\r\n```\r\n**Describe the results you expected:**\r\nTo not have an error\r\n**Output of `go version`:**\r\n\r\n```text\r\ngo version go1.11.1 windows/amd64\r\n```\r\n Hi @xuri, thanks for your quick fix.\r\n\r\nJust tested the latest version and works perfectly!  Closes #304\r\n\r\n# PR Details\r\n\r\n<!--- Provide a general summary of your changes in the Title above -->\r\nThis allows setting a sheet PR to show outline summary expand boxes above instead of below.\r\n\r\n## Description\r\n\r\n<!--- Describe your changes in detail -->\r\n\r\nAdded a new sheet pr type `OutlineSummaryBelow` and added that to the sheet serialization. Updated the respective tests.\r\n\r\n## Related Issue\r\n#304 \r\n<!--- This project only accepts pull requests related to open issues -->\r\n<!--- If suggesting a new feature or change, please discuss it in an issue first -->\r\n<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->\r\n<!--- Please link to the issue here: -->\r\n\r\n## Motivation and Context\r\n\r\n<!--- Why is this change required? What problem does it solve? -->\r\n\r\nMy users think the summary groupers look better this way.\r\n\r\n## How Has This Been Tested\r\nI generated an excel document with nested summary levels and verified that the groupers appeared above instead of below. I also updated unit tests.\r\n\r\n<!--- Please describe in detail how you tested your changes. -->\r\n<!--- Include details of your testing environment, and the tests you ran to -->\r\n<!--- see how your change affects other areas of the code, etc. -->\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [x] Docs change / refactoring / dependency upgrade\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [x] My code follows the code style of this project.\r\n- [x] My change requires a change to the documentation.\r\n- [x] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [x] I have added tests to cover my changes.\r\n- [x] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/307?src=pr&el=h1) Report\n> Merging [#307](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/307?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/4094e0019f08bb771eb45ee90b1ae119c71a0f3a?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/307/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/307?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #307      +/-   ##\n==========================================\n+ Coverage   98.94%   98.95%   +<.01%     \n==========================================\n  Files          18       18              \n  Lines        3897     3906       +9     \n==========================================\n+ Hits         3856     3865       +9     \n  Misses         24       24              \n  Partials       17       17\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/307?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [sheetpr.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/307/diff?src=pr&el=tree#diff-c2hlZXRwci5nbw==) | `100% <100%> (\u00f8)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/307?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/307?src=pr&el=footer). Last update [4094e00...faa7285](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/307?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n Now that the tests are passing I squashed the commits, added some more details, and signed it.  # PR Details\r\n\r\n<!--- Provide a general summary of your changes in the Title above -->\r\n[Migration to go module #305](https://github.com/360EntSecGroup-Skylar/excelize/issues/305)\r\n## Description\r\n\r\n<!--- Describe your changes in detail -->\r\nI added a go.mod file for migration to go module. As the project is not using any third party library, it should be sufficient for the migration.\r\n## Related Issue\r\nhttps://github.com/360EntSecGroup-Skylar/excelize/issues/305\r\n<!--- This project only accepts pull requests related to open issues -->\r\n<!--- If suggesting a new feature or change, please discuss it in an issue first -->\r\n<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->\r\n<!--- Please link to the issue here: -->\r\n\r\n## Motivation and Context\r\nAs I am building a project in go module and excelize is used, I have to fork the library for it to work. I hope I can go back using the official one asap.\r\n<!--- Why is this change required? What problem does it solve? -->\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [x] Docs change / refactoring / dependency upgrade\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/306?src=pr&el=h1) Report\n> Merging [#306](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/306?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/4094e0019f08bb771eb45ee90b1ae119c71a0f3a?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/306/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/306?src=pr&el=tree)\n\n```diff\n@@           Coverage Diff           @@\n##           master     #306   +/-   ##\n=======================================\n  Coverage   98.94%   98.94%           \n=======================================\n  Files          18       18           \n  Lines        3897     3897           \n=======================================\n  Hits         3856     3856           \n  Misses         24       24           \n  Partials       17       17\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/306?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/306?src=pr&el=footer). Last update [4094e00...252d31b](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/306?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  \r\n**Description**\r\nMigrate excelize to go module as go 1.11 is out.\r\n\r\nGo project using go modules right now cannot use this project as go.mod is lacking. This project is relatively easy to migrate to go module as it is not using third party library. I have made a pull request for it.  Feel free to have a look at it. Thank you.  How do you mark the header rows as header rows, so that when you open the file in excel, the sort/filter features recognise which rows are the header rows? To clarify, I have since worked out that the XML that is output when you want to split the header rows using this library works in Excel, but not in Apple\u2019s pages app. I\u2019ve not yet had time to dig around in the XML to work out why yet. (I had assumed it did not work at all, but then I discovered that it did work when you use genuine excel)  I am trying to change the radioButton state by using xlsx.setCellValue in his linked cell but it show always 0.\r\n\r\nCode :\r\n> xlsx.SetCellValue(\"test\", \"K45\", 1)\r\n\r\nResult :\r\n![image](https://user-images.githubusercontent.com/45336396/48981617-2211e380-f0d8-11e8-8742-e047a86e0e33.png)\r\n\r\nThe radio Buttons already exist in the excel file. I need to update the state.\r\n\r\nThank you  Change-Id: I585a4a017867b89bd39cb6e711467a46eaa757be\r\n\r\n# PR Details\r\n\r\n<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\n\r\n<!--- Describe your changes in detail -->\r\n\r\n## Related Issue\r\n\r\n<!--- This project only accepts pull requests related to open issues -->\r\n<!--- If suggesting a new feature or change, please discuss it in an issue first -->\r\n<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->\r\n<!--- Please link to the issue here: -->\r\n\r\n## Motivation and Context\r\n\r\n<!--- Why is this change required? What problem does it solve? -->\r\n\r\n## How Has This Been Tested\r\n\r\n<!--- Please describe in detail how you tested your changes. -->\r\n<!--- Include details of your testing environment, and the tests you ran to -->\r\n<!--- see how your change affects other areas of the code, etc. -->\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [x] My code follows the code style of this project.\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [ ] I have added tests to cover my changes.\r\n- [x] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/300?src=pr&el=h1) Report\n> Merging [#300](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/300?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/507fc5307d17194203046321534244a8fe6215ed?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/300/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/300?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #300      +/-   ##\n==========================================\n+ Coverage   98.94%   98.94%   +<.01%     \n==========================================\n  Files          18       18              \n  Lines        3896     3897       +1     \n==========================================\n+ Hits         3855     3856       +1     \n  Misses         24       24              \n  Partials       17       17\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/300?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [sheet.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/300/diff?src=pr&el=tree#diff-c2hlZXQuZ28=) | `98.43% <100%> (\u00f8)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/300?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/300?src=pr&el=footer). Last update [507fc53...1bb59f7](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/300?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1\u3001\u904d\u5386\u4e00\u5f20\u56fe\u7247\u6240\u6709\u50cf\u7d20\u70b9\u989c\u8272\u586b\u5145\u8fdb\u5355\u5143\u683c\r\n```\r\nfor i := 0; i < config.Width; i++ {\r\n\t\tfor j := 0; j < config.Height; j++ {\r\n\t\t\t//\u884c\u9ad8\r\n\t\t\txlsx.SetRowHeight(\"lovely\", j+1, 10)\r\n\t\t\t//\u83b7\u53d6\u56fe\u7247rgba\r\n\t\t\tr, g, b, _ := img.At(i, j).RGBA()\r\n\t\t\tstyle, err := xlsx.NewStyle(`{\"fill\":{\"type\":\"gradient\",\"color\":[\"#` + RgbToHex(r, g, b) + `\",\"#` + RgbToHex(r, g, b) + `\"],\"shading\":1}}`)\r\n\t\t\tif err != nil {\r\n\t\t\t\tfmt.Println(err)\r\n\t\t\t}\r\n\t\t\talpha := excelize.ToAlphaString(i) + strconv.Itoa(j+1)\r\n\t\t\txlsx.SetCellStyle(\"lovely\", alpha, alpha, style)\r\n\t\t}\r\n\t}\r\n```\r\n**Describe the results you received:**\r\n\u5f53\u56fe\u7247\u8fc7\u5927\uff0c\u6d4b\u8bd5500x500\u65f6\uff0cWPS\u53ef\u4ee5\u6b63\u5e38\u6253\u5f00\uff0coffice\u63d0\u793a\u90e8\u5206\u5185\u5bb9\u6709\u95ee\u9898\uff0c\u4fee\u590d\u4e0e\u4e0d\u4fee\u590d\u90fd\u65e0\u5185\u5bb9\u3002\u540c\u6837\u7684\u56fe\u7247\uff0c\u7528python\u8f6c\u51fa\u540eoffice\u53ef\u4ee5\u6b63\u5e38\u6253\u5f00\r\n**Describe the results you expected:**\r\n\r\n**Output of `go version`:**\r\n\r\n```text\r\ngo version go1.11 windows/amd64\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```text\r\nv1.4.0\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\nwin10 64 office 2019\r\n\r\n![image](https://user-images.githubusercontent.com/20334372/48881763-18774a00-ee52-11e8-8379-86eb7d17cc76.png)\r\n @xuri \r\n[imgtoexcel.zip](https://github.com/360EntSecGroup-Skylar/excelize/files/2608400/imgtoexcel.zip)\r\n\r\n Hi,@xuri When the image is large enough, it will still exceed the limit. Is there any other solution? @xuri \uff0cThank you  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. Using the example to export a xlsx file\r\n2. Install Yozo office\r\n3. Open the above file by Yozo\r\n\r\n**Describe the results you received:**\r\nShowing wrong.\r\n\r\n**Describe the results you expected:**\r\nShowing normally.\r\n\r\n**Output of `go version`:**\r\n```text\r\ngo version go1.10.2 linux/amd64\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```text\r\n507fc5307d17194203046321534244a8fe6215ed\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\nOS: deepin 15.8\r\nYozo office: 7.0.1491.101ZH.S1 I know, thanks!  Thank you very much for the 360 technical team,excelize is great.now, I have a problem. I want to draw a  pie chart in excelize.I tried all the ways,but not yet.can you give me some example.thinks\r\n\r\ni used \r\nxlsx.AddChart(\"Sheet1\", \"E1\", `{\"type\":\"Pie\",\"series\":[{\"categories\":\"Sheet1!$B$1:$D$1\",\"values\":\"Sheet1!$B$2:$D$2\"}],\"title\":{\"name\":\"oldandnewuserratio\"}}`) @xuri  yes,it's greant  , thanks again  **Description**\r\nI am trying to create an excel file with dropdown using excelize. At first, I am trying to use `validation.SetDropList(data)` to create the dropdown but i realize that the data is too many and causing the excel file to be corrupted. So i decided to use `validation.SetSqrefDropList(sqrefDropList, true)`, set the data on other cells and hide the cell that contain the data using `xlsx.SetRowVisible(sheet, hcell, vcell, false)`. But something strange happen. After opening and saving the file, the excel file now contain empty rows that can be read and causing an error in my program because there is an extra rows that are not hidden but contains empty value. \r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. Set a dropdown using `validation.SetSqrefDropList(sqrefDropList, true)`\r\n2. Hide the row that contain the data for dropdown\r\n```go\r\nfor index, val := range(valSplit) {\r\n     val = strings.Replace(val, \"\\\"\", \"\\\"\\\"\", -1)\r\n     file.SetCellValue(sheetName.Slug, collumnOption + strconv.Itoa(collumnRow + index), val)\r\n     file.SetRowVisible(sheetName.Slug, (collumnRow - 1 + index), false)\r\n}\r\nsqrefDropList := fmt.Sprintf(\"$%s$%d:$%s$%d\", collumnOption, collumnRow, collumnOption, (collumnRow+len(valSplit)-1))\r\ncollumnRow += len(valSplit)\r\nvalidation.SetSqrefDropList(sqrefDropList, true)\r\n```\r\n3. Open the file using Microsft Excel and save it.\r\n4. Check the XML of the sheet\r\n\r\n**Describe the results you received:**\r\nRows properly hidden and excel file not containing any extra empty rows\r\n```xml\r\n<sheetData>\r\n<row r=\"1\" spans=\"1:18\" ht=\"20.100000000000001\" customHeight=\"1\"></row>\r\n<row r=\"2\" spans=\"1:18\" ht=\"20.100000000000001\" customHeight=\"1\"></row> \r\n<row r=\"3\"spans=\"1:18\"></row>\r\n<row r=\"4\" spans=\"1:18\"></row>\r\n<row r=\"600\" spans=\"183:183\"></row> // this row contain the data\r\n<row r=\"601\" spans=\"183:183\"></row>\r\n<row r=\"602\" spans=\"183:183\"></row>\r\n</sheetData>\r\n```\r\n\r\n**Describe the results you expected:**\r\nRows being hidden but there's an extra empty rows that can be read. \r\n```xml\r\n<sheetData>\r\n<row r=\"1\" spans=\"1:18\" ht=\"20.100000000000001\" customHeight=\"1\"></row>\r\n<row r=\"2\" spans=\"1:18\" ht=\"20.100000000000001\" customHeight=\"1\"></row>\r\n<row r=\"3\" spans=\"1:18\" ht=\"21.95\" customHeight=\"1\"></row>\r\n<row r=\"4\" spans=\"1:18\" ht=\"21.95\" customHeight=\"1\"></row>\r\n<row r=\"5\" spans=\"1:18\" ht=\"21.95\" customHeight=\"1\"/>  // extra empty rows\r\n<row r=\"6\" spans=\"1:18\" ht=\"21.95\" customHeight=\"1\"/>\r\n<row r=\"7\" spans=\"1:18\" ht=\"21.95\" customHeight=\"1\"/>\r\n<row r=\"8\" spans=\"1:18\" ht=\"21.95\" customHeight=\"1\"/>\r\n<row r=\"9\" spans=\"1:18\" ht=\"21.95\" customHeight=\"1\"/>\r\n<row r=\"10\" spans=\"1:18\" ht=\"21.95\" customHeight=\"1\"/>\r\n<row r=\"11\" spans=\"1:18\" ht=\"21.95\" customHeight=\"1\"/>\r\n<row r=\"12\" spans=\"1:18\" ht=\"21.95\" customHeight=\"1\"/>\r\n<row r=\"13\" spans=\"1:18\" ht=\"21.95\" customHeight=\"1\"/>\r\n<row r=\"14\" spans=\"1:18\" ht=\"21.95\" customHeight=\"1\"/>\r\n<row r=\"15\" spans=\"1:18\" ht=\"21.95\" customHeight=\"1\"/>\r\n<row r=\"16\" spans=\"1:18\" ht=\"21.95\" customHeight=\"1\"/>\r\n</sheetData>\r\n```\r\n\r\n**Output of `go version`:**\r\n```text\r\ngo version go1.10 linux/amd64\r\n```\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\n```text\r\nMicrosoft Excel version : 2013\r\n```\r\n\r\nI really hope you can tell me what is the problem, whether it is because of the excelize or not. Thank you. Hi @xuri, thank you for answering my question but i am still not sure about why the problem only happen when i tried to hide the rows. Can you elaborate me more about the possible cause of that? because there's no extra cell added when i did not try to hide the cell.  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\nI'm generating an excel file with only 3000 rows and 15 columns. Two columns have hyperlink which I set up as in docs said. The problem is that this task is taking so long (almost 9 minutes). The problem is that If I remove the hyperlinks then everything work fine (between 10 - 15 seconds). Is there anyway that I can set hyperlinks withou the name? or convert a range of rows to hyperlinks?\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. Loop 3000 items.\r\n2. Set rows values.\r\n3. Set hyperlink row values.\r\n\r\n**Describe the results you received:**\r\n2 minutes of waiting for the excel file.\r\n\r\n**Describe the results you expected:**\r\nLess time generating the excel.\r\n\r\n**Output of `go version`:**\r\ngo version go1.10.1 windows/amd64\r\n```text\r\n(paste your output here)\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n1.4.0\r\n\r\n```text\r\n(paste here)\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\n Maybe a temporary solution: would it make sense to do the everything except hyperlink first, and then generate hyperlink actually in Excel using the HYPERLINK function?\r\nhttps://support.office.com/en-us/article/hyperlink-function-333c7ce6-c5ae-4164-9c47-7de9b76f577f Its not a good solution, since there is more than 3000 rows. I can\u2019t just write the links manually. For now Im just writing those links as plain text you can generate the url and the name programmatically as helper columns, and then simply pass them to the HYPERLINK and fill all the rows? That probably only take a minute. So, is this issue about the performance of the [`SetCellHyperlink`](https://godoc.org/github.com/360EntSecGroup-Skylar/excelize#File.SetCellHyperLink) method? Looks like a duplicate of #106. Yes, is about the performance about that function   <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nwhen I use the version higher v1.1.0 to generate a XLSX file, the onlyoffice will show the error \"A error accurred when open the file\"\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. open a xlsx template file (temp.xlsx)\r\n2. save as a new file (data.xlsx)\r\n3. open it by onlyoffice (web office server)\r\n\r\n**Describe the results you received:**\r\n\r\n**Describe the results you expected:**\r\n\r\n**Output of `go version`:**\r\n\r\n```text\r\n(paste your output here)\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```text\r\n(paste here)\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\n When I copy the sheet , the onlyoffice will open the file failure. I don't know why? > \u5f53\u6211\u590d\u5236\u5de5\u4f5c\u8868\u65f6\uff0conlyoffice\u5c06\u6253\u5f00\u6587\u4ef6\u5931\u8d25\u3002\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff1f\r\n\r\n\u60a8\u597d \u4f60\u7684\u95ee\u9898\u89e3\u51b3\u4e86\u5417 \u6211\u4e5f\u9047\u5230\u4e86\u548c\u60a8\u4e00\u6837\u7684\u95ee\u9898 \u964d\u52301.1.0 \u7248\u672c  how to set date of struct  into cell by SetCellValue(),or other way??\r\ni dont konw how to do it...  # PR Details\r\n\r\n<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\n\r\n<!--- Describe your changes in detail -->\r\n\r\n## Related Issue\r\n\r\n<!--- This project only accepts pull requests related to open issues -->\r\n<!--- If suggesting a new feature or change, please discuss it in an issue first -->\r\n<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->\r\n<!--- Please link to the issue here: -->\r\n\r\n## Motivation and Context\r\n\r\n<!--- Why is this change required? What problem does it solve? -->\r\n\r\n## How Has This Been Tested\r\n\r\n<!--- Please describe in detail how you tested your changes. -->\r\n<!--- Include details of your testing environment, and the tests you ran to -->\r\n<!--- see how your change affects other areas of the code, etc. -->\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [x] Docs change / refactoring / dependency upgrade\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [x] My code follows the code style of this project.\r\n- [x] My change requires a change to the documentation.\r\n- [x] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [x] I have added tests to cover my changes.\r\n- [x] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/285?src=pr&el=h1) Report\n> Merging [#285](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/285?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/30122d0346dc751b01c9865af3febb1f99e1f5e0?src=pr&el=desc) will **increase** coverage by `0.19%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/285/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/285?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #285      +/-   ##\n==========================================\n+ Coverage    98.8%   98.99%   +0.19%     \n==========================================\n  Files          18       18              \n  Lines        3854     3892      +38     \n==========================================\n+ Hits         3808     3853      +45     \n+ Misses         28       23       -5     \n+ Partials       18       16       -2\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/285?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [lib.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/285/diff?src=pr&el=tree#diff-bGliLmdv) | `97.97% <100%> (+0.27%)` | :arrow_up: |\n| [sheet.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/285/diff?src=pr&el=tree#diff-c2hlZXQuZ28=) | `98.41% <100%> (-0.17%)` | :arrow_down: |\n| [picture.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/285/diff?src=pr&el=tree#diff-cGljdHVyZS5nbw==) | `99.28% <0%> (+0.35%)` | :arrow_up: |\n| [cell.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/285/diff?src=pr&el=tree#diff-Y2VsbC5nbw==) | `98.79% <0%> (+1.2%)` | :arrow_up: |\n| [excelize.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/285/diff?src=pr&el=tree#diff-ZXhjZWxpemUuZ28=) | `95.16% <0%> (+1.44%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/285?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/285?src=pr&el=footer). Last update [30122d0...73841ad](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/285?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  how to flush data to file partially I want to write 500000 records into excel, when i called SetCellValue,i found the file size not rose until i call Save method the file size changed.How can i flush the data to file when set the cell value ? Just call `Save` every time you want to flush. Else changes only happen in the process memory. > Just call `Save` every time you want to flush. Else changes only happen in the process memory.\r\n\r\nDo you mean `Save` could keep appending new rows to the same file? > Hi @conquer66666, I don't understand what you mean, please describe it in detail.\r\n\r\nI have the same problem. If the file ends up getting really big, it would take up a lot of memory. Therefore, we all want to be able to keep appending the generated xlsx rows to a file and free up the memory.  > > Hi @conquer66666, I don't understand what you mean, please describe it in detail.\r\n> \r\n> I have the same problem. If the file ends up getting really big, it would take up a lot of memory. Therefore, we all want to be able to keep appending the generated xlsx rows to a file and free up the memory.\r\n\r\nme too\uff0c \u6211\u4e5f\u662f  **Description**\r\n\r\nI'm having trouble to parse a date in file done with LibreOffice. \r\nHere there is the file\r\n[XLSX file](https://drive.google.com/open?id=1W9btCsMKLSNeWGhEjuwwh1EFzpaE1AeU)\r\n\r\n**Steps to reproduce the issue:**\r\n\r\n\r\n```\r\n\txl, err := excelize.OpenFile(\"testdata/cheques2.xlsx\")\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\thoja := \"Hoja1\"\r\n\r\n\tstyle, _ := xl.NewStyle(`{\"number_format\":34}`)\r\n\r\n\txl.SetCellStyle(hoja, \"a2\", \"a2\", style)\r\n\txl.SetCellStyle(hoja, \"a3\", \"a3\", style)\r\n\tdate1 := xl.GetCellValue(hoja, \"a2\")\r\n\tdate2 := xl.GetCellValue(hoja, \"a3\")\r\n\tfmt.Printf(\"a1: %v\\na2: %v\\n\", date1, date2)\r\n```\r\n\r\n\r\nBoth dates (A2 and A3) are type date. \r\n1. Date in cell A2 is copied from a date from an Excel file\r\n2. Date in cell A3 was typed directly with the keyboard\r\n\r\n\r\n\r\n**Describe the results you received:**\r\n```\r\na1: 13/07/2018\r\na2: 43463\r\n```\r\nThe second one is read as a number.\r\n\r\n**Describe the results you expected:**\r\n\r\n**Output of `go version`:**\r\n\r\n```text\r\ngo version go1.11 linux/amd64\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```text\r\ngithub.com/xuri/excelize v1.4.0\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\nLibreOffice\r\nVersi\u00f3n: 6.1.2.1\r\nId. de compilaci\u00f3n: libreoffice-6.1.2.1-snap1  Allow me to post this issue, although it is not a bug report or feature request.  I am the convenor of an ISO committe (ISO/IEC JTC1/SC34/WG4), which maintains OOXML (ISO/IEC 29500).\r\n\r\nWe are revising Open Packaging Conventions of OOXML (ISO/IEC 29500-2) very thoroughly.  The biggest motivation for this revision is to address issues around part names, references, pack URIs, base URIs, resolution of relative references, and non-ASCII characters.  We are aware that lack of clarity in the currently published ISO/IEC 29500-2 has caused interoperability problems.\r\n\r\nWe hope that this revision helps imlementations including excelize and that it does not cause any troubles.  But we are not 100% sure.\r\n\r\nWe are thus very interested in feedbacks from you.  We have a public review and an open teleconference.  More about this, see [our wiki page](https://github.com/sc34wg4/opcRevision/wiki/Public-review-of-a-working-draft-for-the-revision-of-ISO-IEC-29500-2-(Open-Packaging-Conventions)).\r\n\r\nThanks!\r\n\r\nRegards,\r\nMakoto (ISO/IEC JTC1/SC34/WG4 convenor)  # PR Details\r\n\r\n<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\n\r\n<!--- Describe your changes in detail -->\r\n\r\n## Related Issue\r\n\r\n<!--- This project only accepts pull requests related to open issues -->\r\n<!--- If suggesting a new feature or change, please discuss it in an issue first -->\r\n<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->\r\n<!--- Please link to the issue here: -->\r\n\r\n## Motivation and Context\r\n\r\n<!--- Why is this change required? What problem does it solve? -->\r\n\r\n## How Has This Been Tested\r\n\r\n<!--- Please describe in detail how you tested your changes. -->\r\n<!--- Include details of your testing environment, and the tests you ran to -->\r\n<!--- see how your change affects other areas of the code, etc. -->\r\n\r\n## Types of changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n\r\n- [x] My code follows the code style of this project.\r\n- [x] My change requires a change to the documentation.\r\n- [x] I have updated the documentation accordingly.\r\n- [x] I have read the **CONTRIBUTING** document.\r\n- [ ] I have added tests to cover my changes.\r\n- [ ] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/278?src=pr&el=h1) Report\n> Merging [#278](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/278?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/90bdd3632f16244583525e580fa3edd42361db68?src=pr&el=desc) will **decrease** coverage by `0.79%`.\n> The diff coverage is `0%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/278/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/278?src=pr&el=tree)\n\n```diff\n@@           Coverage Diff           @@\n##           master   #278     +/-   ##\n=======================================\n- Coverage   98.79%    98%   -0.8%     \n=======================================\n  Files          18     18             \n  Lines        3823   3854     +31     \n=======================================\n  Hits         3777   3777             \n- Misses         28     59     +31     \n  Partials       18     18\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/278?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [sheet.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/278/diff?src=pr&el=tree#diff-c2hlZXQuZ28=) | `89.8% <0%> (-8.65%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/278?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/278?src=pr&el=footer). Last update [90bdd36...e2e58a3](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/278?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  \u8fd9\u4e2a\u6587\u4ef6\uff0c\u5185\u90e8\u7684\u8868\u540d\u8bfb\u4e0d\u51fa\u6765\uff0c\u662f\u4e0d\u662f\u5f88\u5947\u602a\uff0c\u56e0\u4e3axml\u5728parse\u7684\u65f6\u5019\u5931\u8d25\u4e86\u3002\r\n[\u4e34\u6e05.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/2483052/default.xlsx)\r\n\r\nAll  the versions of go can\u2018t read the sheetname of this file\u3002\r\n Good work\uff01Processing is very fast\u3002But when  I tried to read this file ,another problem arises.  The func  GetRows() return wrong code\u3002I checked this ,it like caused by the func sharedStringsReader() in the 252 line of  row.go\u3002byte[ss] maybe the end\u3002\r\n\u6309\u4e0b\u846b\u82a6\u8d77\u6765\u74e2\uff0c\u8fd8\u662f\u6709\u70b9\u5c0f\u95ee\u9898\u3002 ps\uff1aI get another file which may cause the Memory leak. My computer got stuck when it read this file by  excelize. Though I knew  there was some useless form in this file that made it so big\uff0cI can open it correctly by office. So I think this file should be treated as a normal document\uff0cand  the  problem should be belongs to excelize.\r\nfile:\r\n\r\n[\u534e\u6da6\u83cf\u6cfd.zip](https://github.com/360EntSecGroup-Skylar/excelize/files/2486146/default.zip)\r\n\r\n @xuri  @xuri That explains a lot\uff0cThank you very much.  # PR Details\r\n\r\nexport a new function that people can get byte.buffer with all of file content\r\n\r\n## Description\r\n\r\nIn some situation, we have to save the excel to a cloud storage service such as the Ali OSS. Some of the SDK that is supported by the cloud doesn't support write action. So we need to give it a reader that can read all of the excel file's content.\r\n\r\n\r\n## Related Issue\r\n\r\n## Motivation and Context\r\n\r\n## How Has This Been Tested\r\n\r\n## Types of changes\r\n\r\n- [ ] Docs change / refactoring / dependency upgrade\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n\r\n## Checklist\r\n\r\n- [x] My code follows the code style of this project.\r\n- [ ] My change requires a change to the documentation.\r\n- [ ] I have updated the documentation accordingly.\r\n- [ ] I have read the **CONTRIBUTING** document.\r\n- [ ] I have added tests to cover my changes.\r\n- [ ] All new and existing tests passed.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/275?src=pr&el=h1) Report\n> Merging [#275](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/275?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/f0234e6c08f77d23499945e2720a900306a12e95?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `50%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/275/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/275?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #275      +/-   ##\n==========================================\n+ Coverage   98.97%   98.97%   +<.01%     \n==========================================\n  Files          18       18              \n  Lines        3811     3813       +2     \n==========================================\n+ Hits         3772     3774       +2     \n  Misses         23       23              \n  Partials       16       16\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/275?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [file.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/275/diff?src=pr&el=tree#diff-ZmlsZS5nbw==) | `89.65% <50%> (+0.36%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/275?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/275?src=pr&el=footer). Last update [f0234e6...2be4d45](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/275?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n @xuri already fix the review idea.\r\n\r\nHere's another question: How to test std lib error such as `\r\n```go\r\nzw := zip.NewWriter(buf)\r\nfi, err := zw.Create(path)\r\n``` @xuri \r\nthx for the review, that's a good idea. @xuri down  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\nWhen I tried to insert thousands of images into a xlsx file, It was very slow...\r\nIt took hundreds milliseconds per item.\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t_ \"image/jpeg\"\r\n\t\"log\"\r\n\r\n\t\"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\txlsx := excelize.NewFile()\r\n\tfor i := 0; i < 10000; i++ {\r\n\t\tif err := xlsx.AddPicture(\"Sheet1\", fmt.Sprintf(\"A%d\", i+1), \"./lena.jpg\", \"\"); err != nil {\r\n\t\t\tlog.Fatalln(err)\r\n\t\t}\r\n\t\tif i%100 == 0 {\r\n\t\t\tlog.Printf(\"%d done\", i)\r\n\t\t}\r\n\t}\r\n\tif err := xlsx.SaveAs(\"./Book1.xlsx\"); err != nil {\r\n\t\tlog.Fatalln(err)\r\n\t}\r\n}\r\n\r\n```\r\n\r\n**Describe the results you received:** \r\n```\r\n...\r\n2018/09/28 22:54:20 4000 done\r\n2018/09/28 22:54:48 4100 done\r\n2018/09/28 22:55:16 4200 done\r\n2018/09/28 22:55:45 4300 done\r\n2018/09/28 22:56:22 4400 done\r\n2018/09/28 22:56:59 4500 done\r\n2018/09/28 22:57:30 4600 done\r\n2018/09/28 22:58:04 4700 done\r\n2018/09/28 22:58:45 4800 done\r\n2018/09/28 22:59:22 4900 done\r\n2018/09/28 22:59:58 5000 done\r\n```\r\n\r\n**Describe the results you expected:**\r\nWell, better performance?\r\n\r\n**Output of `go version`:**\r\n\r\n```text\r\ngo version go1.9.4 darwin/amd64\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```text\r\n[[projects]]\r\n  name = \"github.com/360EntSecGroup-Skylar/excelize\"\r\n  packages = [\".\"]\r\n  revision = \"eb62256d165607c6877ce88efbba10c119137b3d\"\r\n  version = \"v1.3.0\"\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\n```\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"darwin\"\r\nGOOS=\"darwin\"\r\nGOPATH=\"/Users/lianzhao/work\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/darwin_amd64\"\r\nGCCGO=\"gccgo\"\r\nCC=\"clang\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fdebug-prefix-map=/var/folders/3x/fvc3fcrs5139r6g4k36sxl_40000gn/T/go-build268279933=/tmp/go-build -gno-record-gcc-switches -fno-common\"\r\nCXX=\"clang++\"\r\nCGO_ENABLED=\"1\"\r\nCGO_CFLAGS=\"-g -O2\"\r\nCGO_CPPFLAGS=\"\"\r\nCGO_CXXFLAGS=\"-g -O2\"\r\nCGO_FFLAGS=\"-g -O2\"\r\nCGO_LDFLAGS=\"-g -O2\"\r\nPKG_CONFIG=\"pkg-config\"\r\n```\r\n  Hello!\r\nI just tested to protect cell like this\r\n\r\n```\r\nxlsx.SetCellValue(\"Sheet1\", \"B5\", \"Hello world.\")`\r\n\r\nstyle, err := xlsx.NewStyle(`{\"protection\":{\"locked\":true}}`)\r\nif err != nil {\r\n    fmt.Println(err)\r\n}\r\nxlsx.SetCellStyle(\"Sheet1\", \"B5\", \"B5\", style)\r\n```\r\nBut why does that cell is unprotected?\r\nThank you\r\n[test.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/2426582/test.xlsx)\r\n Hello, any updates for this issue? @xuri thankyou Hello @xuri, I have looked Format Cells in Microsoft Word and \"Locked\" checkbox has been checked. I am sorry because even though the cell is locked, I still can change the data I am sorry after I read the documentation, I cant found how to protect sheet. It is possible to do that with your library? @xuri thank you  After I use NewSheet and CopySheet function,Vertical print turn to  Horizontal print,How can I solve it with excelize. @xuri Thanks. func Excel() {\r\n\txlsx, err := excelize.OpenFile(\"./test.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\treturn\r\n\t}\r\n\tnewsheet := xlsx.NewSheet(\"\u7b2c2\u9875\")\r\n\terr = xlsx.CopySheet(1, newsheet)\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t}\r\n\terr = xlsx.SaveAs(\"./test1.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t}\r\n}\r\n[test.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/2414111/test.xlsx)\r\n[test1.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/2414112/test1.xlsx)\r\ntest.xlsx is the souce file.\r\ntest1.xlsx is the file after used Excel().\r\nYou can see the SheetName \"\u7b2c\u4e8c\u9875\" turn into Horizontal print,but the Sheetname\"\u7b2c\u4e00\u9875\" is Vertical print.  @xuri Thanks. Ok Thank you @xuri   How i can write text with break line.   The drop-down list in the current data verification function only supports the normal mode, and does not support the way of referring to the cell. The formula of the normal mode, the length of all the formula1 data can not exceed 255 characters after comma stitching, and the window office excel will report an error.\r\nI am going to add a new function called SetSqrefDropList to implement support for reference cells to do the drop-down column. I don't know if this name is feasible. The SetDropList parameter is an array that does not meet the requirements, and this requires a common value for the value, the cell reference within the current sheet, and a reference across the sheet cell. Uniform and complex parameters,  # PR Details\r\n\r\nSupport excel data data valiation \r\n\r\n\r\n## Description\r\n\r\nYou can use data validation to restrict the type of data or the values that users enter into a cell. One of the most common data validation uses is to create a drop-down list.\r\nBut  there is no way to get the format of the existing unit data validtion.\r\neg:\r\nDigital range range error\r\n\r\n![image](https://user-images.githubusercontent.com/3955934/44945667-0670a700-ae21-11e8-9e11-7c223d4baa0a.png)\r\n\r\nInput prompt\r\n![image](https://user-images.githubusercontent.com/3955934/44945670-15eff000-ae21-11e8-8e5a-e1e60f90604d.png)\r\n\r\n\r\n\r\n\r\nDown list\r\n\r\n![image](https://user-images.githubusercontent.com/3955934/44945671-1f795800-ae21-11e8-8284-60a7a0a3e489.png)\r\n\r\n\r\n\r\n## Motivation and Context\r\n\r\n\r\n\r\n## How Has This Been Tested\r\n\r\nI wrote a unit test with restrictions on the range of numbers and implementation drop-down lists. Enter prompts and test tips\r\n\r\n\r\n\r\n## Types of changes\r\n\r\n\r\n\r\n## Checklist\r\n\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/267?src=pr&el=h1) Report\n> Merging [#267](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/267?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/ce5b37a4ac93196f90cfef2aec381a9b7d153fdd?src=pr&el=desc) will **decrease** coverage by `0.26%`.\n> The diff coverage is `84.05%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/267/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/267?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #267      +/-   ##\n==========================================\n- Coverage   98.84%   98.57%   -0.27%     \n==========================================\n  Files          17       18       +1     \n  Lines        3721     3790      +69     \n==========================================\n+ Hits         3678     3736      +58     \n- Misses         25       35      +10     \n- Partials       18       19       +1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/267?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [datavalidation.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/267/diff?src=pr&el=tree#diff-ZGF0YXZhbGlkYXRpb24uZ28=) | `84.05% <84.05%> (\u00f8)` | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/267?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/267?src=pr&el=footer). Last update [ce5b37a...ba459dc](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/267?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  What about the compatibility for .xls excel files which generated before MS excel 2007?  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1.\r\n2.\r\n3.\r\n\r\n**Describe the results you received:**\r\n\r\n**Describe the results you expected:**\r\n\r\n**Output of `go version`:**\r\n\r\n```text\r\n(paste your output here)\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```text\r\n(paste here)\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\n OK  My target is to draw lines in xlsx, but I don't know how to set line scale.\r\n\r\n![qq 20180811191218](https://user-images.githubusercontent.com/8806281/43991242-29205610-9d9b-11e8-92f8-9824c31578f2.png)\r\n\r\n`xlsx.AddShape(\"Sheet1\", \"G6\", {\"type\":\"line\",\"scale\": 5,\"color\":{\"line\":\"#4286F4\",\"fill\":\"#8eb9ff\"},\"width\":10,\"height\": 10})`\r\nnot work!\r\n  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nloss of the excel style after  save with The AddPicture\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1.OpenFile\r\n2.AddPicture\r\n3.loss of the excel style\r\n![bug](https://user-images.githubusercontent.com/24697032/43813678-4ab59546-9af9-11e8-86ba-dfd2839afbc2.png)\r\n![result](https://user-images.githubusercontent.com/24697032/43813705-68397448-9af9-11e8-88c4-1b0d621af310.png)\r\n\r\n**Describe the results you received:**\r\n\r\n**Describe the results you expected:**\r\n\r\n**Output of `go version`:**\r\n\r\n```text\r\nskipping unsupported element on Workbook {http://schemas.openxmlformats.org/markup-compatibility/2006 AlternateContent}\r\nunsupported relationship xl/worksheets/../printerSettings/printerSettings3.bin http://schemas.openxmlformats.org/officeDocument/2006/relationships/printerSettings\r\nunsupported relationship xl/worksheets/../printerSettings/printerSettings2.bin http://schemas.openxmlformats.org/officeDocument/2006/relationships/printerSettings\r\nunsupported relationship xl/worksheets/../printerSettings/printerSettings1.bin http://schemas.openxmlformats.org/officeDocument/2006/relationships/printerSettings\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```text\r\n(paste here)\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):Win10\r\n Source code \r\npackage Test\r\n\r\nimport (\r\n\t\"fmt\"\r\n\r\n\t\"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\ntype Test struct {\r\n\tTest string\r\n}\r\n\r\nfunc (obj *Test) Excel(path string) {\r\n\txlsx, err := excelize.OpenFile(\"./Test.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\treturn\r\n\t}\r\n\terr = xlsx.AddPicture(\"\u571f\u65b9\", \"A20\", \"./timg.jpg\", `{\"x_scale\": 0.5, \"y_scale\": 0.5, \"hyperlink\": \"#Sheet2!D8\", \"hyperlink_type\": \"Location\"}`)\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t}\r\n\terr = xlsx.SaveAs(path)\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t}\r\n}\r\n\r\nAtt\r\n[Test.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/2269198/Test.xlsx)\r\n![timg](https://user-images.githubusercontent.com/24697032/43820731-a7991dbc-9b19-11e8-976d-52d10d15bf6d.jpg)\r\n@xuri Thank you\r\n\r\n go version go1.8 windows/amd64\r\n@xuri  It seems like The AddPicture function of excelize will loss  the excel style under The SetValue function of baliance.com/gooxml/spreadsheet.Sheet \"\u571f\u65b9\" is the sheet in last Test.xlsx\r\n[Test.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/2279851/Test.xlsx)\r\n  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\nPlease refer the code below\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\txlsx := excelize.NewFile()\r\n\txlsx.SetRowHeight(\"SHEET1\", 1, 100)\r\n\txlsx.SetColWidth(\"SHEET1\", \"A\", \"A\", 100)\r\n\txlsx.SaveAs(\"./Book1.xlsx\")\r\n}\r\n```\r\n\r\n**Describe the results you received:**\r\n![image](https://user-images.githubusercontent.com/536786/43725508-4b57178e-99cf-11e8-96a8-3a0c10195d1a.png)\r\n\r\n\r\n**Describe the results you expected:**\r\nI expected it to be a 100x100 cell\r\n\r\n**Output of `go version`:**\r\n\r\n```text\r\ngo version go1.9.4 darwin/amd64\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```text\r\n[[projects]]\r\n  name = \"github.com/360EntSecGroup-Skylar/excelize\"\r\n  packages = [\".\"]\r\n  revision = \"eb62256d165607c6877ce88efbba10c119137b3d\"\r\n  version = \"v1.3.0\"\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\nmac os 10.12.4\r\n![image](https://user-images.githubusercontent.com/536786/43725606-956782aa-99cf-11e8-987c-8ac85a701d68.png)\r\n Thank you for your reply. I've tried the code below\r\n``` go\r\nxlsx.SetRowHeight(\"SHEET1\", 1, 72) // got 1 inch height row\r\nxlsx.SetColWidth(\"SHEET1\", \"A\", \"A\", 12) // got 1 inch width column\r\n```\r\nMay I ask why it is 12?  Hi, has this library includes the features above (set & clear print area and export to pdf format)?\r\nThank you. thanks for the info.  ### The cell color how to set? Can give a simple example? @xuri how to update style instead of replace?\r\n\r\nFor example i have cell with borders and i want to fill it by color.\r\nWith xlsx.NewStyle()+ xlsx.SetCellStyle() border styles are lost. @l0rda have you found the solution? @chachora switched to gooxml because there is no support   Fixes #252 \r\n\r\nPlease let me know if there's another preferred approach for these additional unit tests. I needed to access internal methods and structs to write the tests the way I have, but I did not readily see another approach in existing tests.\r\n\r\nI have maintained existing behavior if `mid_value`, `max_value`, or `min_value` are omitted, but these changes could impact any existing code where these values were provided in format strings as they previously had no effect. # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/253?src=pr&el=h1) Report\n> Merging [#253](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/253?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/a3571ee39bec82d15d9a183aed7f7db39e0a160f?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/253/graphs/tree.svg?width=650&height=150&src=pr&token=6yoenXP7JO)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/253?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #253      +/-   ##\n==========================================\n+ Coverage   98.89%   98.89%   +<.01%     \n==========================================\n  Files          17       17              \n  Lines        3709     3718       +9     \n==========================================\n+ Hits         3668     3677       +9     \n  Misses         24       24              \n  Partials       17       17\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/253?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [styles.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/253/diff?src=pr&el=tree#diff-c3R5bGVzLmdv) | `100% <100%> (\u00f8)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/253?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/253?src=pr&el=footer). Last update [a3571ee...db7a605](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/253?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  Hi,\r\n\r\nI'm working with very large excel files and i would like to read specific columns only, not all of them, is there a workaround ?\r\n\r\nSorry if this exists or was already requested, i searched but found nothing.\r\n\r\nthanks I would like to know if this is possible as well.  \u7528excelize\u6253\u5f00\u5b58\u5728\u7684 xlsx\u6587\u4ef6\uff08\u91cc\u9762\u5df2\u7ecf\u5b58\u5728\u591a\u4e2aworksheet\u65f6\uff09\uff0c\u518d\u6b21\u4f7f\u7528NewSheet\u51fd\u6570\u589e\u52a0\u65b0\u7684\u5de5\u4f5c\u8868\u662f\uff0cxl\\workbook.xml\u539f\u6570\u636e\u4e2d\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5b58\u5728\u76f8\u540c\u7684sheetId=\"\"\u6570\u503c\u3002\r\n\u4f8b\u5982\uff0c\u65b0\u589eICT_DT_SRC\u540d\u79f0\u7684worksheet\u4e4b\u540e\uff0c\u53d1\u73b0sheetId=\"14\"\u7684\u5b58\u5728\u4e24\u4e2a\u3002Excel2013\u6253\u5f00\u65f6\u63d0\u793a\u9519\u8bef\u3002\u867d\u7136\u53ef\u4ee5\u81ea\u52a8\u4fee\u590d\u3002\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<workbook xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"x15\" xmlns:x15=\"http://schemas.microsoft.com/office/spreadsheetml/2010/11/main\"><fileVersion appName=\"xl\" lastEdited=\"6\" lowestEdited=\"5\" rupBuild=\"14420\"></fileVersion><workbookPr defaultThemeVersion=\"124226\"></workbookPr><bookViews><workbookView activeTab=\"9\" tabRatio=\"814\" windowHeight=\"7785\" windowWidth=\"19095\" xWindow=\"-3345\" yWindow=\"90\"></workbookView></bookViews><sheets><sheet name=\"\u901a\u670d\u6298\u7b97\u7387\" sheetId=\"7\" xmlns:relationships=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" relationships:id=\"rId1\"></sheet><sheet name=\"\u6536\u5165-\u603b\u8868\" sheetId=\"1\" xmlns:relationships=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" relationships:id=\"rId2\"></sheet><sheet name=\"\u6536\u5165-\u9500\u552e\u7ebf\" sheetId=\"12\" xmlns:relationships=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" relationships:id=\"rId3\"></sheet><sheet name=\"\u6536\u5165-\u5bb6\u7f51\u7ebf\" sheetId=\"13\" xmlns:relationships=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" relationships:id=\"rId4\"></sheet><sheet name=\"\u6536\u5165-\u96c6\u5ba2\u7ebf\" sheetId=\"14\" xmlns:relationships=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" relationships:id=\"rId5\"></sheet><sheet name=\"\u6536\u5165-\u8425\u4e1a\u7ebf\" sheetId=\"15\" xmlns:relationships=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" relationships:id=\"rId6\"></sheet><sheet name=\"\u6536\u5165-\u4e92\u8054\u7f51\u7ebf\" sheetId=\"5\" xmlns:relationships=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" relationships:id=\"rId7\"></sheet><sheet name=\"\u51fa\u5e10\u7528\u6237\u6570\" sheetId=\"16\" xmlns:relationships=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" relationships:id=\"rId8\"></sheet><sheet name=\"\u5168\u6210\u672c\" sheetId=\"17\" xmlns:relationships=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" relationships:id=\"rId9\" state=\"hidden\"></sheet><sheet name=\"ICT_DT_SRC\" sheetId=\"14\" xmlns:relationships=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" relationships:id=\"rId14\"></sheet></sheets><calcPr calcId=\"152511\"></calcPr></workbook> // \u4ee3\u7801\u4e3autf-8\u5b57\u7b26\u96c6\r\n// \u9519\u8bef\u95ee\u9898\u91cd\u73b0\u6d4b\u8bd5\u4ee3\u7801\r\npackage main\r\n\r\nimport (\r\n\t\"os\"\r\n\t\"fmt\"\r\n\t\"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\n\r\nfunc main(){\r\n\t// \u8fd9\u4e2a\u6587\u4ef6\u5728\u4e0b\u9762\u7684\u6d4b\u8bd5\u6587\u4ef6\u4e2d\uff0c\u662f\u7528Excel\u6253\u5f00\u65b0\u5efa\u591a\u4e2asheet\u4e4b\u540e\u5220\u9664\u4e4b\u540e\u518d\u65b0\u5efa\uff0c\u8fbe\u5230\u6a21\u62dfsheetid\u88ab\u5360\u7528\u7684\u76ee\u7684\u3002\r\n\texist_xlsx:=\"C:\\\\Temp\\\\test.xlsx\"\r\n\txlsx,err:=excelize.OpenFile(exist_xlsx)\r\n\tif err!=nil{\r\n\t\tfmt.Println(err)\r\n\t\tos.Exit(0)\r\n\t}\r\n\r\n\tsheet_name:=\"\u65b0\u5efasheet\"\r\n\tindex:= xlsx.NewSheet(sheet_name)\r\n\tfmt.Println(fmt.Sprintf(\"NEW SHEET ID=%d\",index))\r\n\r\n\tsheets_info:=xlsx.GetSheetMap()\r\n\tfor s := range sheets_info{\r\n\t\tfmt.Println(fmt.Sprintf(\"%d\\t%s\",s,sheets_info[s]))\r\n\t}\r\n\r\n\r\n\txlsx.SetActiveSheet(index)\r\n\tfor i:=1; i<=10 ;i++ {\r\n\t\txlsx.SetCellValue(sheet_name,fmt.Sprintf(\"A%d\",i),i)\r\n\t}\r\n\t// \u53e6\u5b58\u6587\u4ef6\r\n\txlsx.SaveAs(\"C:\\\\Temp\\\\test_bad.xlsx\")\r\n}\r\n\r\ntest.xlsx\u662f\u7528Excel 2013\u751f\u6210\u7684\u5408\u6cd5\u6587\u4ef6\uff0ctest_bad.xlsx\u662f\u4e0a\u8ff0\u4ee3\u7801\u53e6\u5b58\u7684\u6587\u4ef6\u3002\r\ntest_bad.xlsx\u6253\u5f00\u65f6\u62a5\u9519\u3002\r\n\r\nsheetId=\"11\" \u51fa\u73b0\u4e24\u6b21\u3002\r\n<sheet name=\"\u65b0\u5efasheet\" sheetId=\"11\" \r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<workbook xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"x15\" xmlns:x15=\"http://schemas.microsoft.com/office/spreadsheetml/2010/11/main\"><fileVersion appName=\"xl\" lastEdited=\"6\" lowestEdited=\"4\" rupBuild=\"14420\"></fileVersion><workbookPr defaultThemeVersion=\"124226\" filterPrivacy=\"true\"></workbookPr><bookViews><workbookView activeTab=\"8\" windowHeight=\"8010\" windowWidth=\"14805\" xWindow=\"240\" yWindow=\"105\"></workbookView></bookViews><sheets><sheet name=\"Sheet1\" sheetId=\"1\" xmlns:relationships=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" relationships:id=\"rId1\"></sheet><sheet name=\"Sheet4\" sheetId=\"4\" xmlns:relationships=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" relationships:id=\"rId2\"></sheet><sheet name=\"Sheet5\" sheetId=\"5\" xmlns:relationships=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" relationships:id=\"rId3\"></sheet><sheet name=\"Sheet6\" sheetId=\"6\" xmlns:relationships=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" relationships:id=\"rId4\"></sheet><sheet name=\"Sheet7\" sheetId=\"7\" xmlns:relationships=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" relationships:id=\"rId5\"></sheet><sheet name=\"Sheet10\" sheetId=\"10\" xmlns:relationships=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" relationships:id=\"rId6\"></sheet><sheet name=\"Sheet12\" sheetId=\"12\" xmlns:relationships=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" relationships:id=\"rId7\"></sheet><sheet name=\"Sheet11\" sheetId=\"11\" xmlns:relationships=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" relationships:id=\"rId8\"></sheet><sheet name=\"\u65b0\u5efasheet\" sheetId=\"11\" xmlns:relationships=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" relationships:id=\"rId11\"></sheet></sheets><calcPr calcId=\"122211\"></calcPr></workbook>\r\n\r\n\r\n[test.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/2200358/test.xlsx)\r\n[test_bad.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/2200360/test_bad.xlsx)\r\n\r\n\r\n\u6211\u7684\u6c34\u5e73\u6709\u9650\uff0c\u4f46\u4fee\u6539\u4ee3\u7801\u4e4b\u540eExcel\u6253\u5f00\u6ca1\u6709\u62a5\u9519\u4e86\u3002\r\n// FileName:sheet.go\r\n// setWorkbook update workbook property of XLSX. Maximum 31 characters are\r\n// allowed in sheet title.\r\n// \u901a\u8fc7\u679a\u4e3e\u5b58\u5728\u7684\u5de5\u4f5c\u8868\uff0c\u67e5\u627e\u5230\u6700\u5927\u7684SheetID\uff0c\u7136\u540e\u65b0\u589e\u7684\u65f6\u5019SheetID+1\u7684\u7ed3\u679c\u5e26\u5165\u65b0\u751f\u6210\u7684SheetID\uff0c\u9632\u6b62workbook.xml\u7684SheetID\u51b2\u7a81\u3002\r\n// \u8bf7\u5b98\u65b9\u7684\u5927\u795e\u6700\u4f73\u5316\u4ee3\u7801\u3002\u6211\u662f\u65b0\u624b\uff01\r\nfunc (f *File) setWorkbook(name string, rid int) {\r\n\tcontent := f.workbookReader()\r\n\tmax_sheetid:=0\r\n\tfor c:=range content.Sheets.Sheet{\r\n\t\ttmp_sheetid,_:=strconv.Atoi(content.Sheets.Sheet[c].SheetID)\r\n\t\tif max_sheetid<tmp_sheetid {\r\n\t\t\tmax_sheetid=tmp_sheetid\r\n\t\t}\r\n\t}\r\n\tmax_sheetid=max_sheetid+1\r\n\tcontent.Sheets.Sheet = append(content.Sheets.Sheet, xlsxSheet{\r\n\t\tName:    trimSheetName(name),\r\n\t\tSheetID: strconv.Itoa(max_sheetid),\r\n\t\tID:      \"rId\" + strconv.Itoa(rid),\r\n\t})\r\n}\r\n  **Description**\r\nI wanna insert an image and make it 100% scaling base on the height of the cell. But it didn't work whatever I adjust the parameter \"format\".\r\n\r\nI try the parameters below\r\n```err := xl.xlsxFile.AddPicture(sheetName, cellIndex, imgPath, `{\"y_scale\": 1.00}`)```\r\nor\r\n```err := xl.xlsxFile.AddPicture(sheetName, cellIndex, imgPath, `{\"positioning\": \"oneCell\"}`)```\r\nBut it turned out the image far exceed the height of cell. \r\n![image](https://user-images.githubusercontent.com/28393517/42556496-607bf2c6-851e-11e8-9e3e-d5e5da644755.png)\r\n\r\nCuriously. If I set y_scale to 0.99, the image could scaling in the cell to most extent. And we can see, there is a little bit margin lies in the bottom of cell.\r\ne.g. ```err := xl.xlsxFile.AddPicture(sheetName, cellIndex, imgPath, `{\"y_scale\": 0.99}`)```\r\n![image](https://user-images.githubusercontent.com/28393517/42556900-a25f3710-851f-11e8-8dad-b11378a67447.png)\r\n\r\n**Output of `go version`:**\r\n```\r\n$ go version\r\ngo version go1.10.1 linux/amd64\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```\r\n$ git rev-parse HEAD\r\n9cb0e9308b7e65d5a277b0c6af9fa0e8680b3658\r\n\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\n```\r\n$ uname -a\r\nLinux kvm-CcNgxVcard-3031 2.6.32-358.el6.x86_64 #1 SMP Fri Feb 22 00:31:26 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux\r\n$ cat /etc/issue\r\nCentOS release 6.4 (Final)\r\nKernel \\r on an \\m\r\n```\r\n\r\nI don't know If I did anything wrong? or there has a bug lies in the code.\r\nMany thanks and look forward to your reply\r\n Hi, @xuri , Sorry for bothering you. Can you please take a look if you have free.  I ran into a case where I needed to get all comments. \r\nI reckon it could be useful for the others.  # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/246?src=pr&el=h1) Report\n> Merging [#246](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/246?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/9cb0e9308b7e65d5a277b0c6af9fa0e8680b3658?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/246/graphs/tree.svg?width=650&src=pr&token=6yoenXP7JO&height=150)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/246?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #246      +/-   ##\n==========================================\n+ Coverage   98.97%   98.97%   +<.01%     \n==========================================\n  Files          16       16              \n  Lines        3604     3615      +11     \n==========================================\n+ Hits         3567     3578      +11     \n  Misses         22       22              \n  Partials       15       15\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/246?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [comment.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/246/diff?src=pr&el=tree#diff-Y29tbWVudC5nbw==) | `100% <100%> (\u00f8)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/246?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/246?src=pr&el=footer). Last update [9cb0e93...1a953b6](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/246?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n can you just squash it at the merge?\nCheers!\n\nRadomirs Cirskis MCDBA, MCAD C#, MCSD .NET C#, ZCE PHP5, MCSD VB6 ...\nM: +64 221 221 442 | E: RAD@nowITworks.eu <rad@nowitworks.eu>\n[image: View my profile on LinkedIn] <http://nz.linkedin.com/in/nad2000>\n\n\nOn Sun, Jul 1, 2018 at 4:33 PM xuri <notifications@github.com> wrote:\n\n> Thanks for your PR, could you squash the commits and refine the commit\n> message, you can copy the description of the PR to the squashed commit in\n> this case.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/360EntSecGroup-Skylar/excelize/pull/246#issuecomment-401582382>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAK0cnOKevgeQk3SmXDuKr6ZPIGEQzD3ks5uCFEUgaJpZM4U97bh>\n> .\n>\n  \u5173\u4e8e\u5355\u5143\u683c\u6587\u5b57\u6837\u5f0f\uff0c\u5982\u4e00\u53e5\u8bdd\u5206\u6210\u4e0d\u540c\u7684\u989c\u8272\u5927\u5c0f\u5c55\u793a\r\n\r\n\u6211**\u662f**\u6d4b**\u8bd5\u7684**  Is xlsxWorksheet.DataValidations.DataValidation not reserved for data validation? Why type is string is not an array.\r\n\r\nSimilar to the following structure:\r\n```golang\r\ntype xlsxCellDataValidation struct {\r\n\tAllowBlank       string  `xml:\"allowBlank,attr\"`       // allow empty\r\n\tShowInputMessage string  `xml:\"showInputMessage,attr\"` // 1, true,0,false,  select cell,  Whether the input message is displayed\r\n\tShowErrorMessage string  `xml:\"showErrorMessage,attr\"` // 1, true,0,false,  input error value, Whether the error message is displayed\r\n\tErrorStyle       *string `xml:\"errorStyle,attr\"`       //error icon style, warning, infomation,stop\r\n\tErrorTitle       *string `xml:\"errorTitle,attr\"`       // error title\r\n\tOperator         string  `xml:\"operator,attr\"`         //\r\n\tError            *string `xml:\"error,attr\"`            // input error value,  notice message\r\n\tPromptTitle      *string `xml:\"promptTitle\"`\r\n\tPrompt           *string `xml:\"prompt,attr\"`\r\n\tType             string  `xml:\"type,attr\"`  //data type, none,custom,date,decimal,list, textLength,time,whole\r\n\tSqref            string  `xml:\"sqref,attr\"` //Validity of data validation rules, cell and range, eg: A1 OR A1:A20\r\n\tFormula1         string  `xml:\"formula1\"`   // data validation role\r\n\tFormula2         string  `xml:\"formula2\"`   //data validation role\r\n}\r\n```\r\n I can understand that this field is not used now. Can I modify his type without regard to compatibility? I see  Golangs time.Duration uses nanoseconds, thus it is limited to approximately 290 years.\r\n # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/237?src=pr&el=h1) Report\n> Merging [#237](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/237?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/5db716d849d51b630822571c8a0aa4edd7cc8365?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/237/graphs/tree.svg?height=150&width=650&token=6yoenXP7JO&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/237?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #237      +/-   ##\n==========================================\n+ Coverage   98.91%   98.91%   +<.01%     \n==========================================\n  Files          16       16              \n  Lines        3582     3594      +12     \n==========================================\n+ Hits         3543     3555      +12     \n  Misses         23       23              \n  Partials       16       16\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/237?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [date.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/237/diff?src=pr&el=tree#diff-ZGF0ZS5nbw==) | `100% <100%> (\u00f8)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/237?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/237?src=pr&el=footer). Last update [5db716d...37c470e](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/237?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n Sorry. Done.    <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nI'm receiving 9.991345678E9 instead of of 9991345678\r\n\r\n  Documentation:\r\n* Add information about return value of NewSheet()\r\n* Minor documentation language fixes\r\nSamples:\r\n* Added sample go file for dumping a XLSX file to the console @xuri: The sample requires an input XLSX file. That's why it can't be run on godoc.  Just wanted to give some feedback -- sorry if this is the wrong format.  I am NOT a professional programmer by any means, but I have two programs: 1. that works to query mysql in a way that is secure for my company, and now it can excelize the data directly into excel spreadsheet.  2. TCP Port Scanner that accepts a list of 1000+hosts now can excelize the data and provide a report in Excel.   Excelize is well documented and was just easy to get working. \r\n\r\nThanks!!  We have the following tags in the repo:\r\n- `v1.0`\r\n- `1.1`\r\n- `v1.2`\r\n- `1.3`\r\n\r\nThis inconsistent naming is not helpful when upgrading dependencies references from an external project.\r\n\r\nI propose to use semver with a \"v\" prefix (example: \"v1.3.0\") as this is the direction that the Go community is taking with the VGO proposal. https://research.swtch.com/vgo-import It looks like that tag v1.0 has disappeared (and no v1.0.0 appeared)...  @xuri Could you follow the established best pratices in Git commit messages ? That would help external contributors to follow changes happening.\r\nhttps://chris.beams.io/posts/git-commit/\r\n\r\nCommit d96440edc480976e3ec48958c68e67f7a506ad32 breaks many rules:\r\n- many unrelated changes in a single commit\r\n- commit messge does not follow the standard format \"1 summary line + 1 empty line + details\"\r\n In fact I just expect that the content of `CONTRIBUTING.md` to be followed by project maintainers.\r\nhttps://github.com/360EntSecGroup-Skylar/excelize/blob/master/CONTRIBUTING.md#commit-messages  Hey,\r\nI do have an issue with a document.\r\nIt does contain v- this in `sheets4.xml.rels` but it has no relationship for the `comments%d.xml`\r\n\r\n```xml\r\n<Relationship Id=\"rId4\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/vmlDrawing\" Target=\"../drawings/vmlDrawing2.vml\"/>\r\n```\r\n\r\n1) I open this file with excelize it sets LegacyDrawing to this relationship for sheet4 (the sheet does not contain any comments yet).\r\n2) I add a comment to sheet4 cell doesn't matter\r\n3) xl/comments%d.xml gets added to file list containing the correct data\r\n4) since LegacyDrawing is already set the comments relationship is not added to the sheets relationships\r\n5) I save the file to disk\r\n6) As expected excel warns me about a corrupt file and that some comments could not be displayed.\r\n\r\nI guess there needs to be another check to see if relationships contains a valid reference to the a comments.xml for sheet x.\r\n\r\nBtw. the source file is not considered corrupt by excel.\r\nLibreoffice silently ignores the issue and the comments are missing there, too.\r\n\r\nIf you need more info please feel free to contact me. I was able to figure the exact issue out:\r\n  Somehow a file might contain a legacyDrawing relationship but be missing a comment relationship\r\nI could construct a similar file structure (by hand) that reproduces the issue.\r\nYou cannot open and save this constructed example with LibreOffice since it will silently fix that problem.\r\nI'm not sure about Excel however. I got the source file from a client using M$ Office/Excel so could be that there are differences.\r\n\r\nNote: Even though the issue might be fixable by saving the file with LibOff. Opening the file does not show any errors or warnings about a corrupt/repaired file. And I'm not sure about M$ it might even keep the structure as is.\r\n\r\nSo I guess a sanity check on the comment relationships should not be too much work and it might resolve other issues.\r\n\r\nYou should be able to see the problem with your current approach in `AddComment`.\r\n[issue228.zip](https://github.com/360EntSecGroup-Skylar/excelize/files/2054380/issue228.zip)\r\n\r\nI'm not sure however how to ideally approach this.\r\n\r\n- Fix on load? \r\n- Change the internal structures to track the validity of legacyDrawing?\r\n- Don't fix? (would break add comment on some files)\r\n\r\nAdditionally while you're at it. After using the tool on the xlsx file (it creates a new file) the visible comments positions are reset and a random box appears. Those seem to be errors, too. Hey,\r\n the xlsx file is included in the link i posted in the last message.\r\n\r\nJust try to add a comment to any cell in the second sheet named `Why is this so sheety`.\r\nIt will not show up.  I noticed one of my formulas was not getting returned through this package, so looked into it and found that `GetCellFormula()` (https://github.com/360EntSecGroup-Skylar/excelize/blob/master/cell.go#L228) only works for simple formulas, not shared like the example below:\r\n\r\n```\r\n<row r=\"46\" spans=\"1:4\">\r\n   <c r=\"A46\" s=\"4\" t=\"s\">\r\n      <v>13</v>\r\n   </c>\r\n   <c r=\"B46\" t=\"str\">\r\n      <v>1</v>\r\n   </c>\r\n   <c r=\"C46\">\r\n      <f t=\"shared\" si=\"0\" />\r\n      <v>2</v>\r\n   </c>\r\n   <c r=\"D46\" />\r\n</row>\r\n```\r\n\r\nIn my example,`C46`'s formula is simply `=B46`, so it's not really clear to me what `si=\"0\"` even means.\r\n\r\nAre there any plans to support shared formula types?  Hi,\r\n\r\nI need to add rows to an excel sheet, which might contain formulas.\r\nI know that I can use the dedicated function to add formulas (`SetCellFormula`), but I'd like to be able to write rows by rows instead of cell by cell. \r\n\r\nIs this possible with SetSheetRow ?\r\nFor example, could I write this row:\r\n{1, 2, \"A1+A2\", \"product_name\"}\r\n\r\nThanks   <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\nI am able to insert new values into specified cells and able to fetch the values from a specified cell. In my excel sheet, few cells have formulas in it, so depending on my input the cell which has the formula should return the calculated value. But here the excel is able to take my values as input and store it in excel sheet but it is not giving the calculated values of new entries, it is always giving the calculated values of old entries. \r\n\r\nFor example, I have manually give 2,3,4 values in B2, B3, B4  cells respectively and B5 has the formula to add them. expected output is a sum of these cells i.e, 9. When I programmatically try to fetch the value of B5 then I am able to get the correct output as 9. Now I am trying to insert the values programmatically to B2, B3, B4 and tried to get the output from B5. At this point, I am able to save new values to B2, B3, B4 as 5,6,7 but B5 is still giving me 9 instead of 18.\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. xlsx.SetCellValue(\"Sheet1\", \"B5\", 10) (for setting the value to cell)\r\n2.xlsx2.GetCellValue(\"Sheet1\", \"B16\") (for getting the value of a cell)\r\n3.\r\n\r\n**Describe the results you received:**\r\n\r\n**Describe the results you expected:**\r\n\r\n**Output of `go version`:**\r\n\r\n```text\r\n(paste your output here)\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```text\r\n(paste here)\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\nWindows 10, Microsoft Excel version 1804 There is also a slightly different workflow that is not working and I don't know of any sensible workaround:\r\nif I have an Excel with some formulas already in it and I add only the numbers then when I open Excel I don't see the formulas computed with the actual value I input.\r\nEven if I click on \"Calculate now\" or \"Calculate sheet\" in Excel this does not recompute the formulas and the only bad workaround I found to-date is to edit the formula and place the exact same formula (so F2+ENTER). This actually recomputes it but it's not clear why Excel does not recompute them even if I do a \"Calculate now\" or \"Calculate sheet\".\r\nDoes anybody have a workaround on this? Wow great! This is indeed the case. Working like charm.\r\nThank you very much for this!  style, _ := f.NewStyle(`{\"number_format\": 31}`)\r\nf.SetCellStyle(sheet, axis, axis, style)\r\n\r\n\r\nnot work for date format style, _ := xlsx.NewStyle(`{\"custom_number_format\": \"yyyy-mm-dd\"}`)\r\nf.SetCellStyle(sheet, axis, axis, style)\r\n\r\nthis code is work right @xuri Oh, Thanks   # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/223?src=pr&el=h1) Report\n> Merging [#223](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/223?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/eb62256d165607c6877ce88efbba10c119137b3d?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/223/graphs/tree.svg?src=pr&token=6yoenXP7JO&width=650&height=150)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/223?src=pr&el=tree)\n\n```diff\n@@           Coverage Diff           @@\n##           master     #223   +/-   ##\n=======================================\n  Coverage   98.36%   98.36%           \n=======================================\n  Files          16       16           \n  Lines        3554     3554           \n=======================================\n  Hits         3496     3496           \n  Misses         37       37           \n  Partials       21       21\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/223?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [chart.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/223/diff?src=pr&el=tree#diff-Y2hhcnQuZ28=) | `99.26% <\u00f8> (\u00f8)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/223?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/223?src=pr&el=footer). Last update [eb62256...fe9f952](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/223?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\nI did not see anyone asking about how font:family worked.\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\nI have this line to set my style, but my output is always in Calibri.\r\n\r\n```go\r\nstyle, err := xlsx.NewStyle(`{\"alignment\":{\"vertical\":\"top\",\"horizontal\":\"left\"},\"font\":{\"bold\":true,\"family\":\"Arial\",\"size\":11}}`)\r\n```\r\n\r\n**Describe the results you received:**\r\nDocument was generated, but the cells have a font of Calibri.\r\n\r\n**Describe the results you expected:**\r\nI expected document to be in Arial\r\n\r\n**Output of `go version`:**\r\n```\r\ngo version go1.10 windows/amd64\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```\r\nversion = \"1.2.0\"\r\nrevision = \"6d634ca320acca28a84f25888a04c0861548d5ed\"\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\nWindows 7, Excel 2007 Thank you!  That worked.\r\n\r\nWill you be issuing a new release?  or should I just pin to this revision?  Just a nice addition to set the chart size upon inserting. \r\n\r\nIt's rather too small and insignificant to create an enhancement issue for it first. # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/219?src=pr&el=h1) Report\n> Merging [#219](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/219?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/18aa606ffe0f5be5c7b77b2b99e261d9a093174b?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/219/graphs/tree.svg?width=650&height=150&src=pr&token=6yoenXP7JO)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/219?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #219      +/-   ##\n==========================================\n+ Coverage   97.15%   97.15%   +<.01%     \n==========================================\n  Files          16       16              \n  Lines        3550     3554       +4     \n==========================================\n+ Hits         3449     3453       +4     \n  Misses         80       80              \n  Partials       21       21\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/219?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [chart.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/219/diff?src=pr&el=tree#diff-Y2hhcnQuZ28=) | `99.26% <100%> (\u00f8)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/219?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/219?src=pr&el=footer). Last update [18aa606...1787c35](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/219?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n Added some unit test, just to ensure that the chart works as expected. Should be good now :) Those are more like \"optional\" parameters that in fact are the vararg of functions to set the properties. \r\nThis is something that is considered as one of the best practices now, I guess. \r\n\r\nSo if the client app doesn't specify anything - it will use the defaults for the chart size, that means it won't break the existing API. \r\n\r\nI would rather set the chart metadata in this way instead of parsing the format string for the width/height or complicate the chart struct. \r\n\r\nIMHO. Sounds like a good thing to have. Do you mind sharing which properties we can extract from the current style and use in the new way? I assume that it implies renaming of `chartOptions` in sort of `chartStyle` and providing more properties that could be extracted from the style itself. Moved the chart dimension into the format string, pls take a look.  I have an excel template that I am manipulating and I have pivot tables referring to a named table, \r\nIf I add table to the sheet where an existing table is, then the data may expand beyond the length of the existing table and the pivot tables miss it.\r\n\r\nthe next bet i have is to add a table to the data I am adding, but I don't have the ability to set the name of the table and so the pivot tables lose the reference.\r\n\r\nBasically i just want to be able to send in a parameter to this line here instead of it being auto-created:\r\nhttps://github.com/360EntSecGroup-Skylar/excelize/blob/master/table.go#L125 thanks so much for jumping on this - it does exactly what i asked for but unfortunately doesn't solve my problem, creating the new table doesn't seem to keep the link to the pivot tables in the document.\r\n\r\nWould be nice to be able to alter the range of an existing table maybe.   Some of this excel internal linking seems like magic.  **Description**\r\n\r\nI'm annotating an existing Excel file by adding comments to cells that contain invalid data.\r\nWhile doing so I realized that adding huge amount of comments to an excel file is extremely slow.\r\n\r\nFor comparison I set the style for a cell via conditional formating (cell value != 0). This takes about 3 seconds. Adding a comment to all these fields increases runtime to 3 minutes for the same amount of cells edited.\r\n\r\nSo the question actually is. Why does adding a comment take so much time?\r\nIs it the duplicate serialize/deserialization needed?\r\n\r\nAnd I might open another issue cause the file created is shown as containing errors and needs repairs (Excel only, Libreoffice et al. say everything is ok, but comments are missing on some of the sheets. So I guess there is an issue?)\r\n\r\nI was confused with the api tbh.\r\nI did this, which imho is useless: (object -> json -> object -> xml)\r\nBut I couldn't find a direct approach to just hand the object in.\r\n```go\r\ntype xlsxComment struct {\r\n    Author string `json:\"author\"`\r\n    Text   string `json:\"text\"`\r\n}\r\n\r\nerrorComment := xlsxComment{\r\n    Author: \"Linter\",\r\n    Text:   strings.Join([]string{\"Wow\", \"much error\",  \"such time\", \"many performance\"}, \"\\n\"),\r\n}\r\n\r\ncommentSerialized, err := json.Marshal(errorComment)\r\nxlsx.AddComment(sheetName, cellName, string(commentSerialized))\r\n```\r\n\r\n**Steps to reproduce the issue:**\r\n1. Create or open file\r\n2. Add many comments\r\n3. Wait\r\n\r\n**Describe the results you received:**\r\nsee description\r\n\r\n**Describe the results you expected:**\r\nsee description\r\n\r\n**Output of `go version`:**\r\n\r\n```\r\ngo version go1.10.1 linux/amd64\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```\r\n2b97c3bb463b28e3d81f714ef55798621174e0a1 (at time of writing HEAD~1)\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\n Yeah guess that solved itself.\r\n > How many comments did you add? Excelize needs to do some checks to ensure file compatibility, that will impact on performance.\r\n\r\n>I add 5k comments, I find that the cost time of every comments will increase with the comments increase.Why this happen? As far as I understood that the issue is the constant serialization and de-serialization needed for modifying comments.\r\nComments are stored in a separate file and only referenced in the column-data xml-files.\r\nSo if you add a comment, you need to find a unique reference identifier and add that reference in the column data and additionally add the comment itself to the (iirc drawings) file.\r\n\r\nSorry it's some time ago now. I'm trying to recall this from memory. I guess yuri can tell you more about this however. Hi @Obbi89 @xuri \uff0csry about reply so late. I limit the amount of comment to solve this problem. because when I use the latest version, it seems working as usual .  **Description**\r\n\r\nIf I add an picture I would like to lock it inside the cell. Within Excel you would select the picture -> RMB -> Size and Properties -> Properties -> Move and size with cells. How must I set the FormatString in AddPicture?\r\n\r\nThx!    Hi, I can draw a stacked bar chart now, but I want to set the bar's color, is any way to do it? @xuri Thanks for your quick response, appreciate your help.  **Description**\r\n\r\nWhen I add an image to an existing spreadsheet (a png in my case) whose size perfectly matches the size (in cm) of the area in which I want it to display, it gets displayed scaled/displayed incorrectly (too small).\r\n\r\nI think the calculation for `to.col` & `to.row` calculated in positionObjectPixels is somehow going wrong when using the col/row dimensions or image dimensions.\r\nI also think that if there was an option to use `<xdr:oneCellAnchor>` [see here](http://officeopenxml.com/drwPicInSpread-oneCell.php) it may fix the image display by avoiding having to do the calculations.\r\n\r\n**Steps to reproduce the issue:**\r\n1. Create an existing 'template' spreadsheet in excel with the first 8 column widths sized as follows (to hold the image): `a=1.38cm, b=19.39, c=1.14, d=1.11, e=1.11, f=1.11, g=2.94, h=4.42  (total 31.6cm)` / or as Excel prefers to measure them `A=6.29, B=98.86, c=5.14, d=5, e=5, f=5, g=14.43, h=22`\r\n2. Use `func (*File) AddPicture` ...with the aspect ratio locked, no offset, no link and scaling set to 1 (I have also tried without these) to insert a png of size `10.64cm high and 30.96 wide`\r\n\r\n**Describe the results you received:**\r\n* The image is inserted constrained to the width of 3 cols (a, b, c).   \r\n* It's aspect ratio is wrong.\r\n* In Excel, going to the image size properties and choosing 'Reset' scales it as it should be (to 100% scale and col H)\r\n\r\n**Describe the results you expected:**\r\n* The image is inserted constrained within the width of 8 cols (a, b, c, d, e, f, g, h).   \r\n* It's aspect ratio should be maintained.\r\n* In Excel, going to the image size properties should show it scaled to 100%\r\n\r\n**Output of `go version`:**\r\n\r\ngo1.10\r\n\r\n**Excelize version or commit ID:**\r\n\r\n1.2.0\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\nOS. Win 10 & MacOS 10.13, physical, Excel 1708 & earlier Thanks, do you think this (`<xdr:oneCellAnchor>`) is the only way to get the image to display at it's intended size?\r\nDo you have any idea why the `to.col` & `to.row` calculated in positionObjectPixels is somehow going wrong for the existing `<xdr:twoCellAnchor>` implementation?  I had a look but couldn't see anything obvious.\r\n\r\nI've attached a sample case to illustrate the issue [Excelizeissue212.zip](https://github.com/360EntSecGroup-Skylar/excelize/files/1923264/Excelizeissue212.zip)  Added ZoomScale SheetViewOption\r\nAccessible value between 10 - 400\r\n\r\nUsed as:\r\nxlsx.SetSheetViewOptions(sheet, 0, excelize.ZoomScale(75)) # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/211?src=pr&el=h1) Report\n> Merging [#211](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/211?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/2b97c3bb463b28e3d81f714ef55798621174e0a1?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/211/graphs/tree.svg?src=pr&width=650&height=150&token=6yoenXP7JO)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/211?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #211      +/-   ##\n==========================================\n+ Coverage   98.49%   98.49%   +<.01%     \n==========================================\n  Files          16       16              \n  Lines        3452     3457       +5     \n==========================================\n+ Hits         3400     3405       +5     \n  Misses         32       32              \n  Partials       20       20\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/211?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [sheetview.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/211/diff?src=pr&el=tree#diff-c2hlZXR2aWV3Lmdv) | `100% <100%> (\u00f8)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/211?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/211?src=pr&el=footer). Last update [2b97c3b...52eb0ec](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/211?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\nThe function xlsx.SetCellHyperLink create link without display text - the cell is empty but link is created.\r\nIt can be fixed by additionaly use xlsx.SetCellStr function\r\n\r\nNevertheless, it look likes as imperfection because the struct xlsxHyperlink has Display field for this purpose, but xlsx.SetCellHyperLink does not use it\r\n\r\n```\r\ntype xlsxHyperlink struct {\r\n\tRef      string `xml:\"ref,attr\"`\r\n\tLocation string `xml:\"location,attr,omitempty\"`\r\n\tDisplay  string `xml:\"display,attr,omitempty\"`\r\n\tRID      string `xml:\"http://schemas.openxmlformats.org/officeDocument/2006/relationships id,attr,omitempty\"`\r\n}\r\n```\r\n\r\n**Steps to reproduce the issue:**\r\n1. using xlsx.SetCellHyperLink\r\n\r\n**Describe the results you received:**\r\n```\r\n    <hyperlinks>\r\n        <hyperlink ref=\"A1\" location=\"Sheet1!A1\"></hyperlink>\r\n    </hyperlinks>\r\n```\r\n\r\n**Describe the results you expected:**\r\nIf we are using MS Excel:\r\n```\r\n    <hyperlinks>\r\n        <hyperlink ref=\"A1\" location=\"Sheet1!A1\" display=\"Sheet1\"/>\r\n    </hyperlinks>\r\n```\r\n\r\n\r\n**Output of `go version`:**\r\n\r\n```\r\ngo version go1.10 windows/amd64\r\n```\r\n  [**Description**]\r\n\r\nExcel files with inlineStr cell types read empty value, here is the sample file\r\n[output.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1889512/output.xlsx)\r\n\r\n**Steps to reproduce the issue:**\r\n1.\r\ndownload the sample file and read it with sample code as belong\r\n2.\r\n       xlsx, err := excelize.OpenFile(\"./output.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\treturn\r\n\t}\r\n\trows := xlsx.GetRows(\"test\")\r\n\tfor _, row := range rows {\r\n\t\tfor _, colCell := range row {\r\n\t\t\tfmt.Print(colCell, \"\\t\")\r\n\t\t}\r\n\t\tfmt.Println()\r\n\t}\r\n\r\n**Describe the results you received:**\r\n\t\t\t\r\n1\t2\t3\t\r\n4\t5\t6\t\r\n7\t8\t9\t\r\n\r\n\r\n**Describe the results you expected:**\r\n\r\ncol1\tcol2\tcol3\t\r\n1\t2\t3\t\r\n4\t5\t6\t\r\n7\t8\t9\t\t\r\n\r\n**Output of `go version`:**\r\n\r\nany\r\n\r\n**Excelize version or commit ID:**\r\n\r\nExcelize version: 1.2\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\n\r\nany\r\n Thanks for your support, really fast and terrific.  wps\r\n I am also getting an error when I try to load this xlsx file.\r\nerr=====================\r\nzip: not a valid zip file\r\n\r\n\r\n`//package PBCONVxlsx2csv03\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\r\n\t\"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\t//excelFileName := \"EPlan_AP_LastSixMonths.xlsx\"\r\n\t//excelFileName := \"./EPlan_AP_LastSixMonths.xlsx\"\r\n\t//excelFileName := \"EPlan_SubmitRequest_LastSixMonths.xlsx\"\r\n\texcelFileName := \"./EPlan_SubmitRequest_LastSixMonths.xlsx\"\r\n\r\n\t//xlsx, err := excelize.OpenFile(\"./Book1.xlsx\")\r\n\txlsx, err := excelize.OpenFile(excelFileName)\r\n\tif err != nil {\r\n\t\tfmt.Println(\"err=====================\")\r\n\t\tfmt.Println(err)\r\n\t\treturn\r\n\t}\r\n\t// Get value from cell by given worksheet name and axis.\r\n\tcell := xlsx.GetCellValue(\"Sheet1\", \"B2\")\r\n\tfmt.Println(cell)\r\n\t// Get all the rows in the Sheet1.\r\n\trows := xlsx.GetRows(\"Sheet1\")\r\n\tfor _, row := range rows {\r\n\t\tfor _, colCell := range row {\r\n\t\t\tfmt.Print(colCell, \"\\t\")\r\n\t\t}\r\n\t\tfmt.Println()\r\n\t}\r\n}\r\n`\r\n\r\n\r\n\r\n/Users/vyoumans/Documents/PBeachChallenge/EPlan_AP_LastSixMonths.xlsx\r\n[EPlan_AP_LastSixMonths.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1907806/EPlan_AP_LastSixMonths.xlsx)\r\n\r\nEPlan_AP_LastSixMonths.xlsx\r\n[EPlan_AP_LastSixMonths.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1907807/EPlan_AP_LastSixMonths.xlsx)\r\n\r\n I am also have the same problem.\r\n\r\nOS: win10 1803\r\nGo: 1.10.2\r\nExcelize: master\r\n\r\nOpenFile xls file get `zip: not a valid zip file` error. I copy the file content to a new xlsx file, the `OpenFile` successes.\r\n ![binary](https://user-images.githubusercontent.com/3746639/40237007-c68152c6-5ae1-11e8-9c69-1225716b11f4.PNG)\r\n\r\n\u5bf9\u6bd4\u4e86\u4e0b`xls`\u548c`xlsx`\u6587\u4ef6\uff0c\u53d1\u73b0\u5b83\u4eec\u7684\u6587\u4ef6\u8d77\u59cb\u7684\u683c\u5f0f\u4e0d\u4e00\u6837\u3002`zip`\u5305\u7684`findSignatureInBlock`\u4f1a\u53bb\u5224\u65ad\u524d\u9762\u7684\u5b57\u7b26\u6765\u786e\u8ba4\u6587\u4ef6\u683c\u5f0f\u3002\u6240\u4ee5\u5bfc\u81f4\u52a0\u8f7d`xls`\u5931\u8d25\u3002\r\n[1.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/2017055/1.xlsx)\r\n\r\n\u4e0a\u9762`1.xlsx`\u662fOffice 2013\u751f\u6210\u7684\u3002\u5728\u4e0a\u4f20`xls`\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5c45\u7136\u4e5f\u51fa\u73b0\u4e86\u4e0b\u9762\u7684\u683c\u5f0f\u4e0d\u6b63\u786e\u7684\u9519\u8bef\u3002\r\n![error](https://user-images.githubusercontent.com/3746639/40237366-e0515966-5ae2-11e8-82ff-35d81872dbcc.PNG)\r\n @navono thanks for your info, so what is your way to workaround it? @calvinchankf for now, copy the content to a new `.xls` or `xlsx` file by hand.... Lol thanks for sharing \ud83d\ude02 I will request my clients to export a xlsx\n\nOn Wed, Jun 20, 2018 at 21:23 Darkness <notifications@github.com> wrote:\n\n> @calvinchankf <https://github.com/calvinchankf> for now, copy the content\n> to a new .xls file by hand....\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/360EntSecGroup-Skylar/excelize/issues/207#issuecomment-398746616>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AFJ3J4GiMEm_1doWxA7FgF0BLYtbuDw1ks5t-kzLgaJpZM4TL5Sp>\n> .\n>\n @calvinchankf You're welcome. If you find a better way, please let me know. I also meet this problem , I just copy the content to a new .xls or xlsx file by hand .   \r\n\r\nneed help!\r\n\r\n If you have a lot file .xls files, may be can write a script to transfer all files extension to .xlsx.\r\nI haven't test the solution, just a thought.  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\nwhen I open a excel ( exist merged cell ) I found\r\nthere is a unmerged cell in the xlsx.MergeCells.Cells\r\n\r\n\r\npanic: runtime error: index out of range\r\ngoroutine 1 [running]:\r\ngithub.com/Luxurioust/excelize.checkCellInArea(0xc0422d68f6, 0x2, 0xc0425a5750, 0x3, 0xc0422d6800)\r\n\tC:/Users/Administrator/go/src/github.com/Luxurioust/excelize/cell.go:536 +0x387\r\ngithub.com/Luxurioust/excelize.(*File).mergeCellsParser(0xc0420346c0, 0xc042042640, 0x59ebd5, 0x2, 0xc042925de0, 0x4b2dae)\r\n\tC:/Users/Administrator/go/src/github.com/Luxurioust/excelize/cell.go:18 +0xc4\r\ngithub.com/Luxurioust/excelize.(*File).SetCellStr(0xc0420346c0, 0x5a0f0f, 0xc, 0x59ebd5, 0x2, 0x59fa54, 0x6)\r\n\tC:/Users/Administrator/go/src/github.com/Luxurioust/excelize/cell.go:431 +0x90\r\ngithub.com/Luxurioust/excelize.(*File).SetCellValue(0xc0420346c0, 0x5a0f0f, 0xc, 0x59ebd5, 0x2, 0x562500, 0x5c3aa0)\r\n\tC:/Users/Administrator/go/src/github.com/Luxurioust/excelize/cell.go:57 +0x657\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1.xlsx, err := excelize.OpenFile(filename)\r\n2.xlsx.SetCellValue(\"Sheel1\", \"a5\", \"weiwei\")\r\n3.run it\r\n\r\n**Describe the results you received:**\r\n\r\n\r\n**Describe the results you expected:**\r\n\r\n\r\n**Output of `go version`:**\r\n\r\n```\r\nGo SDK 1.9.2\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n\r\n```\r\nmaster\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\n @xuri \r\n[user-case.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1886881/user-case.xlsx)\r\n @xuri \u975e\u5e38\u611f\u8c22  ```\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\r\n\t\"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\txlsx := excelize.NewFile()\r\n\tsheetName := \"sheet1\"\r\n\tcurrentRow := 2\r\n\tcurrentLetter := \"A\"\r\n\txlsx.SetCellValue(sheetName, fmt.Sprintf(\"%s%d\", currentLetter, currentRow), \"test1\\ntest2\\test3\")\r\n\txlsx.SetRowHeight(sheetName, currentRow, 100)\r\n\txlsx.SaveAs(\"/tmp/1.xlsx\")\r\n}\r\n```\r\nI was thiinking this code will sets text value to \"A2\" cell and changes 2nd row's height. But result is like on the screenshot.\r\n\r\n![image](https://user-images.githubusercontent.com/1963102/38126294-56f0df72-33f8-11e8-9671-f9f9a99806b8.png)\r\n Thank you for quick fix!  \r\n![image](https://user-images.githubusercontent.com/1963102/38090132-41dc9f92-336a-11e8-9f51-dc51c8581eb9.png)\r\n +1 \r\nAutofit height is very useful future..  I think it'll be very comfortable and will minimize errors not to generate style json by hands, but (at least) marshal it for default struct. I would also like to see this change. I had to dig into the source code to figure out what style properties to set in order to align font for example. If the struct was pubic it would have been a lot easier to figure out and it would also help prevent typos. I also think this would be a big improvement.  There is nothing to lose by making it available and, in fact, I think it will make discovering how to interact with this library much simpler.  How to set the orientation of the chart? (MaxMin)  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nChinese name of sheet will cause GetRows() return empty array\r\n\r\n\r\n**Steps to reproduce the issue:**\r\n1. Create a sheet with a Chinese name like \"\u88682\"\r\n2. GetRows(\"\u88682\")\r\n3. Won't work\r\n\r\n**Describe the results you received:**\r\n\r\n\r\n**Describe the results you expected:**\r\n\r\n\r\n**Output of `go version`:**\r\ngo version go1.9.2 darwin/amd64\r\n\r\n\r\n**Excelize version or commit ID:**\r\nmaster\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\nMacOS [sample.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1858412/sample.xlsx)\r\n```go\r\n\tx, err := excelize.OpenFile(\"/tmp/sample.xlsx\")\r\n\tlog.Printf(\"file opened %+v\", x.Path)\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\trows := x.GetRows(\"\u88682\")\r\n```\r\nhere is the file and the code to reproduce this issue My bad, I forget to update the library for a while, thanks for your time, have a nice day!  I have a use case for my business scenario where I need to password protect my generated excel files before I can email them to the client.\r\nIt would be great if we can have a password protection feature in the library.\r\nThank you! Would it for now be possbile to expose the `xlsxWorkbookProtection` struct in the public API? That way I could implement password protection on the application side for now. Any progress on this? This feature is essential.  Hi Ri Xu,\r\n\r\nthat you for your good work on this library. Using it every week.\r\n\r\nWould like to report a possible issue with reading values. I am using the latest version of the library. OK and failing excels are shared due to sensitive nature to Ri Xu via email. In Nok excel GetCellValue returns \"\" in ok excel return the correct value.\r\n\r\n**Simple test program below**\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"strconv\"\r\n\t\"github.com/xuri/excelize\"\r\n)\r\n\r\nfunc main(){\r\n\txlsxNok, err := excelize.OpenFile(\"file_nok.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Print(err)\r\n\t}\r\n\txlsxOk, err := excelize.OpenFile(\"file_ok.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Print(err)\r\n\t}\r\n\tfmt.Printf(\"file_nok.xls [M20] = '%v', [L20] = '%v\\n\", xlsxNok.GetCellValue(\"Sheet1\", \"M20\"), xlsxNok.GetCellValue(\"Sheet1\", \"L20\"))\r\n\tfmt.Printf(\"file_ok.xls [M20] = '%v', [L20] = '%v\\n\", xlsxOk.GetCellValue(\"Sheet1\", \"M20\"), xlsxOk.GetCellValue(\"Sheet1\", \"L20\"))\r\n\tfor row := 14; row < 75; row++ {\r\n\t\tfmt.Printf(\"file_Nok.xls [M%v] = '%v'\\n\", row, xlsxNok.GetCellValue(\"Sheet1\", \"M\"+strconv.Itoa(row)))\r\n\t\tfmt.Printf(\"file_ok.xls [M%v] = '%v'\\n\", row, xlsxNok.GetCellValue(\"Sheet1\", \"M\"+strconv.Itoa(row)))\r\n\t}\r\n}\r\n```\r\n\r\n**Output**\r\n\r\n> file_nok.xls [M20] = '', [L20] = '0.00\r\n> file_ok.xls [M20] = '2.00', [L20] = '0.00\r\n> ...\r\n Thank you. [Workaround](https://github.com/360EntSecGroup-Skylar/excelize/issues/65#issuecomment-346967778) in issue #65 updated to handle space in xlsx path.   # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/196?src=pr&el=h1) Report\n> Merging [#196](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/196?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/770026e956508e1ff0d1563617d7a3c8f212fb22?src=pr&el=desc) will **decrease** coverage by `0.05%`.\n> The diff coverage is `0%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/196/graphs/tree.svg?token=6yoenXP7JO&src=pr&height=150&width=650)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/196?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #196      +/-   ##\n==========================================\n- Coverage   98.45%   98.39%   -0.06%     \n==========================================\n  Files          16       16              \n  Lines        3430     3432       +2     \n==========================================\n  Hits         3377     3377              \n- Misses         33       34       +1     \n- Partials       20       21       +1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/196?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [sheet.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/196/diff?src=pr&el=tree#diff-c2hlZXQuZ28=) | `97.07% <0%> (-0.64%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/196?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/196?src=pr&el=footer). Last update [770026e...b7bc0d8](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/196?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n  Hello, I would like to know if there is an alternative function to `GetRows` that will only return cells with content?\r\n\r\nExample:\r\n![image](https://user-images.githubusercontent.com/15075205/37337432-91226d9c-26b4-11e8-9f3c-9ae9ac216fe5.png)\r\n\r\nIf I do a `len(GetRows(\"sheet1\"))` on the sheet in example, the `len` function will return 1048576 instead of 2. I used Google Sheets and exported to .xlsx.\r\n[example.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1818879/example.xlsx)\r\n  There should be a helper function for inserting a new row but instead of empty, I should be able to provide a slice containing row data.\r\n\r\nThe function will create the row with cells populated with data (maybe assuming all are strings). There may also be an offset column parameter.  Is there a way to set a cell value instead of using `A2` , `B1` etc ?\r\n\r\nSomething like `SetCellValue(x, y, value)` ?\r\n\r\nUsing `A2` , `B1` etc is not really convenient when inserting data with loops (or at least I dont know how to do it right :)) Thanks this works! However, I wish there was a more transparent and obvious API for this \ud83e\udd14 \r\n\r\nI will submit a PR if you like  As the title says, it would be great if the `InsertRow` functionality returns a reference to the row. I was thinking that it can be useful for making changes to that row if a reference is returned. Not really necessary. It was like that in `tealeg/xlsx` so I was expecting it but I found another way \ud83d\ude04 \r\n\r\nThank you!  Hi!\r\n\r\nWhy does the cell become protected when using SetCellStyle?\r\n\r\nstyle, err := xlsx.NewStyle(`{\"font\":{\"color\":\"#FF0000\", \"size\":12}, \"border\":[{\"type\":\"right\",\"color\":\"#09600b\",\"style\":1}], \"alignment\":{\"horizontal\":\"right\"}}`)\r\n\t\tif err != nil {\r\n\t\t\tfmt.Println(err)\r\n\t\t}\r\n\t\txlsx.SetCellStyle(sheetFull, cell, cell, style)\r\n\r\nAdvance thanks! Please, look file before and after.\r\nSheet 3, Cell F8.\r\nfunc SetDate(xlsx *excelize.File, sheet int, cell string, data time.Time, isError *bool) {\r\n\r\n\tsheetString := strconv.Itoa(sheet)\r\n\tsheetFull := \"sheet\" + sheetString\r\n\r\n\tdefaultTime, _ := time.Parse(\"2006-01-02\", \"0001-01-01 05:48:48 +0548 LMT\")\r\n\tif data.Format(\"2006-01-02\") == defaultTime.Format(\"2006-01-02\") {\r\n\t\txlsx.SetCellValue(sheetFull, cell, \"\u0414\u0414.\u041c\u041c.\u0413\u0413\u0413\u0413\")\r\n\t\tstyle, err := xlsx.NewStyle(`{\"font\":{\"color\":\"#FF0000\", \"size\":12}, \"border\":[{\"type\":\"right\",\"color\":\"#09600b\",\"style\":1}], \"alignment\":{\"horizontal\":\"right\"}}`)\r\n\t\tif err != nil {\r\n\t\t\tfmt.Println(err)\r\n\t\t}\r\n\t\txlsx.SetCellStyle(sheetFull, cell, cell, style)\r\n\t\t*isError = true\r\n\t} else {\r\n\t\txlsx.SetCellValue(sheetFull, cell, data.Format(\"02.01.2006\"))\r\n\t}\r\n}\r\n\r\n[before.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1787549/before.xlsx)\r\n[after.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1787550/after.xlsx)\r\n Thank You!)  Hi!\r\nHow to draw a bar clustered?\r\n![bar clustered](https://user-images.githubusercontent.com/12747633/36962831-1d5114a2-2062-11e8-95e9-24cd123302de.png)\r\n It's great. Thank you! :)  From issue #80 ,I know how to format numbers to currency , but how do I format them to Accounting format? Thanks!\r\n![image](https://user-images.githubusercontent.com/22766013/36829746-98f11634-1d5b-11e8-9e55-8309d3a17e6e.png)\r\n(pic from #80)  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\nwhen i try to read the file i get the following error\r\n```\r\npanic: runtime error: index out of range\r\n\r\ngoroutine 1 [running]:\r\ngithub.com/360EntSecGroup-Skylar/excelize.(*xlsxC).getValueFrom(0xc08dc65c38, 0xc042088540, 0xc04208a190, 0xc09826c03c, 0x1, 0x0, 0x2)\r\n        C:/Users/adm_Palyanichka/go/src/github.com/360EntSecGroup-Skylar/excelize/rows.go:165 +0x23d\r\ngithub.com/360EntSecGroup-Skylar/excelize.(*File).GetRows(0xc042088540, 0xc04205e6f8, 0x7, 0x8, 0x0, 0x0)\r\n        C:/Users/adm_Palyanichka/go/src/github.com/360EntSecGroup-Skylar/excelize/rows.go:60 +0x7b8\r\nmain.writeFile(0xc04204b440, 0xc04205c120, 0x12)\r\n        C:/Users/adm_Palyanichka/go/src/carmoney.com/xlsx-converter/xlsxConverter.go:26 +0x238\r\nmain.main()\r\n        C:/Users/adm_Palyanichka/go/src/carmoney.com/xlsx-converter/xlsxConverter.go:88 +0x210\r\nexit status 2\r\n```\r\n\r\n**Output of `go version`:**\r\n\r\n```\r\n1.10\r\n```\r\n Hi\r\n[tmp.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1771643/tmp.xlsx)\r\n This file was created by 1C software (very controversial software)  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n![default](https://user-images.githubusercontent.com/11613587/36081776-5a04d29c-0fde-11e8-8bcd-09be44117062.PNG)\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\nDoes the function \"AddChart\" only support microsoft office?\r\nBecause when I use the AddChart example and get .xlsx file , the chart is blank if open by WPS Excel but it is ok if open by microsoft office Excel?  \r\n**Describe the results you received:**\r\nIn the AddChart example's .xlsx file , the chart is blank if open by WPS Excel but it is ok if open by microsoft office\r\n![default](https://user-images.githubusercontent.com/11613587/36081720-ba06c93a-0fdd-11e8-81ea-710ca324f25b.PNG)\r\n\r\n**Describe the results you expected:**\r\nThe chart can open by WPS Excel correctly.\r\n\r\n**Output of `go version`:**\r\ngo 1.8\r\n```\r\n(paste your output here)\r\n```\r\n\r\n**Excelize version or commit ID:**\r\nExcelize-1.2\r\n```\r\n(paste here)\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\nWin7, WPS office Oh,if I really want to open by WPS, do you have any idea? Thank you very aery much! By the way, how soon will you commit the latest version ? May I have the your time because I\u2018m really in a hurry!!! THX too much!!!  <!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\nExcel broken when create new file\r\n\r\n**Steps to reproduce the issue:**\r\n<pre>\r\nxlsx := excelize.NewFile()\r\nxlsx.NewSheet(\"Sheet1\")\r\nxlsx.SaveAs(\"test.xlsx\")\r\n</pre>\r\n\r\n**Describe the results you received:**\r\nJust trival process, but when open test.xlsx, excel 2013 compained: \r\n\u53d1\u73b0\u90e8\u5206\u5185\u5bb9\u6709\u95ee\u9898\uff0c\u662f\u5426\u8ba9\u6211\u4eec\u5c3d\u91cf\u5c1d\u8bd5\u4fee\u590d\uff1f\r\n\r\n\r\n**Describe the results you expected:**\r\nexcel 2013 keep quilt as do before\r\n\r\n**Output of `go version`:**\r\n```\r\ngo version go1.9.2 windows/amd64\r\n```\r\n\r\n**Excelize version or commit ID:**\r\n```\r\n7621927       latest commit\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\nwindow 7 professional, excel 2013 Thank you!\r\nI did not notice the example :<\r\n<pre>\r\nxlsx := excelize.NewFile()\r\n    // Create a new sheet.\r\n    index := xlsx.NewSheet(\"**Sheet2**\")\r\n</pre>  I think this is FEATURE REQUEST.\r\n\r\n**Description**\r\n\r\nI am adding images to spreadsheet cell and want to add a hyperlink on that image.\r\nI couldn't find a way with this library, so I add hyperlink to a cell. However, some cells have two images or more, hence adding hyperlink to a cell doesn't always produce a needed result.\r\n\r\nIs it even possible to add a hyperlink to an image by code? I know it's possible from Excel and Calc.\r\n\r\nThanks for creating this library, I think that's very awesome. Thank you. However, when I create a simple spreadsheet or a spreadsheet with image + hyperlink, there is an Excel 2016 error when opening that spreadsheet:\r\n\r\n> Excel was able to open the file by repairing or removing the unreadable content.\r\n> Repaired Records: Worksheet properties from /xl/workbook.xml part (Workbook)\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<recoveryLog xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"><logFileName>error139200_01.xml</logFileName><summary>Errors were detected in file 'C:\\...\\Workbook2.xlsx'</summary><repairedRecords><repairedRecord>Repaired Records: Worksheet properties from /xl/workbook.xml part (Workbook)</repairedRecord></repairedRecords></recoveryLog>\r\n```\r\n\r\nThere is also an extra Sheet being created \"Recovered_Sheet2\"\r\n[Workbook2.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1698793/Workbook2.xlsx)\r\n[error186720_03.xml.txt](https://github.com/360EntSecGroup-Skylar/excelize/files/1698795/error186720_03.xml.txt)\r\n\r\n\r\n please see attached.\r\n[Workbook2.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1698793/Workbook2.xlsx)\r\n[error186720_03.xml.txt](https://github.com/360EntSecGroup-Skylar/excelize/files/1698795/error186720_03.xml.txt) Here: [excel2.zip](https://github.com/360EntSecGroup-Skylar/excelize/files/1699063/excel2.zip) It's working without error now. Thank you! :)  The recent improvement to `SetCellStyle` still loops over all the rows, this is more concise and faster.\r\n\r\nSince the area check is now done by the loop, the inner loop check `checkCellInArea` is no longer needed. # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/184?src=pr&el=h1) Report\n> Merging [#184](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/184?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/6f4e4d9ef1be030a05f48aa5dda900f2dc9cb851?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/184/graphs/tree.svg?token=6yoenXP7JO&width=650&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/184?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #184      +/-   ##\n==========================================\n- Coverage   98.41%   98.41%   -0.01%     \n==========================================\n  Files          16       16              \n  Lines        3346     3335      -11     \n==========================================\n- Hits         3293     3282      -11     \n  Misses         33       33              \n  Partials       20       20\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/184?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [styles.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/184/diff?src=pr&el=tree#diff-c3R5bGVzLmdv) | `100% <100%> (\u00f8)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/184?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/184?src=pr&el=footer). Last update [6f4e4d9...e556c25](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/184?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n Squashed on top of latest master.  Here's a pull request addressing issue #182  # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/183?src=pr&el=h1) Report\n> Merging [#183](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/183?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/541d29f3b2bfc62c05813a8d8725fca0a628bc81?src=pr&el=desc) will **decrease** coverage by `0.11%`.\n> The diff coverage is `90.47%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/183/graphs/tree.svg?width=650&token=6yoenXP7JO&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/183?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #183      +/-   ##\n==========================================\n- Coverage   98.52%   98.41%   -0.12%     \n==========================================\n  Files          16       16              \n  Lines        3325     3346      +21     \n==========================================\n+ Hits         3276     3293      +17     \n- Misses         30       33       +3     \n- Partials       19       20       +1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/183?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [cell.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/183/diff?src=pr&el=tree#diff-Y2VsbC5nbw==) | `97.93% <90.47%> (-1.33%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/183?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/183?src=pr&el=footer). Last update [541d29f...b25ec6e](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/183?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n No problem.  Thanks for this great library!  cell := xlsx.GetCellValue(\"Sheet1\", \"B2\")\r\n\tfmt.Println(cell)\r\nrows := xlsx.GetRows(\"Sheet1\")\r\n\tfmt.Println(rows)\r\n-----------------------------------------------------------------------------\r\n\u539f\u5bbf\u8ff7\u5f69\u5916\u5957\u5973\u77ed\u6b3e\u51ac\u97e9\u7248\u5b66\u751f\u52a0\u539a\u60c5\u4fa3\u68c9\u8863bf\u5bbd\u677echic\u68c9\u670d\u5973\u65b0\u6b3e\r\n[] Running into the same error using excelize 1.4.1, Golang 1.12. Use the following test case to reproduce:\r\n\r\n\r\n```\r\nfunc TestGetRows(t *testing.T) {\r\n        excel := excelize.NewFile()\r\n        sheet := excel.GetSheetName(0)\r\n        axis := \"A1\"\r\n        excel.SetCellValue(sheet, axis, \"666\")\r\n        rows := excel.GetRows(sheet)\r\n        want := 1\r\n        got := len(rows)\r\n        if want != got {\r\n                t.Fatalf(\"want %d but got %d\", want, got)\r\n        }\r\n\r\n```\r\n\r\nRunning the test case fails, the cell is stored, but GetRows() returns 0.\r\n\r\n```\r\nA1 = \"666\"\r\n--- FAIL: TestGetRows (0.00s)\r\n    main_test.go:154: want 1 but got 0\r\nFAIL\r\n\r\n```  I'm just trying to add an image file but when I generate the excel an error shows up. (I'm just following the examples)\r\n\r\n. There is a one.jpg file in the same directory that the .exe generated by golang.\r\n. I used the command go build \r\n\r\n![image](https://user-images.githubusercontent.com/17097930/34961984-c6c6cc58-fa0f-11e7-950c-069b5fa3fe6f.png)\r\n\r\n\r\n````\r\nxlsx := excelize.NewFile()\r\n\tsheet := \"Sheet1\"\r\n\r\n\txlsx.SetCellValue(sheet, \"A2\", \"Picture\")\r\n\r\n\terrx := xlsx.AddPicture(sheet, \"A3\", \"https://i.imgur.com/sJUvygL.png\", \"\")\r\n\tif errx != nil {\r\n\t\tfmt.Println(errx)\r\n\t}\r\n\terr := xlsx.SaveAs(\"./testing.xlsx\")\r\n```\r\n`  I have been imported \r\n\r\n\t_ \"image/gif\"\r\n\t_ \"image/jpeg\"\r\n\t_ \"image/png\"  excelFilePath := model.GetExcelFilePath()\r\n\tfile, openFileError := excelize.OpenFile(excelFilePath)\r\n\tif openFileError != nil {\r\n\t\tlogginghelper.LogError(\"writeQuestionDataToExcel()::openFileError\", openFileError)\r\n\t\treturn openFileError\r\n\t}\r\n\t// sh := file.Sheet[\"0\"]\r\n\t// rowCounter, _ := strconv.ParseInt(rowno, 10, 0)\r\n\trowCounter, _ := strconv.Atoi(rowno)\r\n\tlogginghelper.LogDebug(file.GetSheetName(1))\r\n\tfile.RemoveRow(file.GetSheetName(1), 2)\r\n\t// logginghelper.LogDebug(\"row : \", file.GetRows(file.GetSheetName(1)))\r\n\tlogginghelper.LogDebug(\"row : \", rowCounter+1)\r\n\t// logginghelper.LogDebug(\"row : \", file.GetRows(file.GetSheetName(1)))\r\n\tfile.RemoveRow(file.GetSheetName(1), rowCounter+1)\r\n\treturn nil\r\n} which file..u mean excel xlsx file containing pictures text only . for example image.jpg , image.png .   I want to get cell value with zh-cn numberformat('28    | m\"\u6708\"d\"\u65e5\"')\r\n`\r\nstyle, _ := xlsx.NewStyle(`{\"number_format\": 28, \"lang\": \"zh-cn\"}`)\r\nxlsx.SetCellStyle(\"Sheet1\", \"A2\", \"A2\", style)\r\nfmt.Println(xlsx.GetCellValue(\"Sheet1\", \"A2\"))\r\n`\r\nthe cell value is '2017-12-04'\uff0cbut I got '43073'.\r\nand I want to write cell value use the same format\uff0cgot '43073' too. thanks a lot.  The function `SetCellValue` already supports `time.Time`, which can be then formated.\r\n\r\nBut if I have just `time.Duration` (like some diff of start and end time), I can't add it to the cell so that excel will treat it like time. I want it to be an time value with `[h]:mm:ss` format, which can be used in formulae.\r\n\r\n- If I add only the `time.Duration` it is the textual representation (eg `5h3m33s`)\r\n- if I add an formated output from `time.Duration` (eg `05:03:33`) , excel takes it just like an escaped string, using `SetCellDefault` also doesn't set the cell to be a time value\r\n\r\n Thanks, this works :) but it would be great if `SetCellValue` would do it for me. Or not? But `SetCellValue` also uses the default date format `m/d/yy h:mm` for `time.Time`, so why not use `[h]:mm:ss` for `time.Duration`? That was fast :) thanks great!  **Description**\r\nreading error if xlsx file has the data below (tealeg is ok).\r\n\r\ne.g. data.xlsx \r\na 2 row 5 column xlsx file. where col1,2,5 in row2 is empty (write nil just to format code)\r\n\r\nINT  INT  INT  INT  INT\r\nnil    nil    a      b    nil\r\n\r\nwhen xlsx.GetRows, it returns a len(6) row, the 6th cell is \"\". If all cell has value it's right, return a len(5) row.\r\n @xuri auto-fill is ok. what make me confused is a max 5 column xlsx, return a 6 column data, with all the 6th column \"\". [test.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1605933/test.xlsx)\r\nthat's it  \r\n**Description**\r\n\r\nI use office 2016(mac os) Excel open the minimal example  code  generated XLSX file. but There's no data\r\n\r\n**Steps to reproduce the issue:**\r\n1. copy the minimal example  code \r\n2. run the program\r\n```\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n\r\n    \"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\nfunc main() {\r\n    xlsx := excelize.NewFile()\r\n    // Create a new sheet.\r\n    index := xlsx.NewSheet(\"Sheet2\")\r\n    // Set value of a cell.\r\n    xlsx.SetCellValue(\"Sheet2\", \"A2\", \"Hello world.\")\r\n    xlsx.SetCellValue(\"Sheet1\", \"B2\", 100)\r\n    // Set active sheet of the workbook.\r\n    xlsx.SetActiveSheet(index)\r\n    // Save xlsx file by the given path.\r\n    err := xlsx.SaveAs(\"./Workbook.xlsx\")\r\n    if err != nil {\r\n        fmt.Println(err)\r\n    }\r\n}\r\n```\r\n\r\n**Describe the results you received:**\r\n\r\n\r\n**Describe the results you expected:**\r\n\r\n\r\n**Output of `go version`:**\r\n\r\n```\r\nshencan@MacBook:~/Goscript$ go run write_excel.go\r\nshencan@MacBook:~/Goscript$ ls -l  Workbook.xlsx\r\n-rw-r--r--  1 shencan  staff  5028 12 27 14:09 Workbook.xlsx\r\n```\r\n![image](https://user-images.githubusercontent.com/11796215/34372433-9b0d30b6-eb0f-11e7-9288-fbdf33a38c77.png)\r\n![image](https://user-images.githubusercontent.com/11796215/34372447-bd7f4c56-eb0f-11e7-9577-7d83c9b4e4b4.png)\r\n\r\n\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\nmac os  office 2016  Excel\r\n  I have an existing xlsx file and I want to format a sheet of it as a worksheet table (i.e. I want thr sheet to have zebra-stripes). However I get no relief when trying to add it to my existing code\r\n\r\n**My code looks like the following**\r\n\r\n    // Open existing file\r\n    xlsx, err := excelize.OpenFile(filePath)\r\n    if err != nil {\r\n    \tfmt.Printf(err.Error())\r\n    \treturn\r\n    }\r\n    \r\n\t// Add table formatting (If the following line is removed, excel is fine)\r\n    xlsx.AddTable(\"SheetName\", \"A2\", \"C10\", `{\"table_style\":\"TableStyleMedium2\", \"show_first_column\":true,\"show_last_column\":true,\"show_row_stripes\":false,\"show_column_stripes\":true}`)\r\n    \r\n    headerStyle, err := xlsx.NewStyle(`{\"fill\":{\"type\":\"pattern\",\"color\":[\"#283593\"],\"pattern\":1}, \"font\":{\"bold\":true,\"family\":\"Calibri\",\"size\":9,\"color\":\"#FFFFFF\"}}`)\r\n    if err != nil {\r\n    \tfmt.Println(err)\r\n    }\r\n    \r\n\t// Add header styling\r\n    xlsx.SetCellStyle(\"SheetName\", \"A1\", \"C1\", headerStyle)\r\n    \r\n    err = xlsx.Save()\r\n    if err != nil {\r\n    \tfmt.Printf(err.Error())\r\n    \treturn\r\n    }\r\n\r\n**Results**\r\nThe file is created but MS Excel cannot open it properly and warns that the file is broken.\r\n\r\n\r\n**`go version`:**\r\n```\r\ngo1.9.2 windows/amd64\r\n```\r\n\r\n**Excelize commit ID:**\r\n```\r\n46187309f4fcf317515693fcba913ae6ae3c7eb7\r\n```\r\n\r\n**Environment details (OS, Microsoft Excel\u2122 version, physical, etc.):**\r\n```\r\nOS: Windows 7 Enterprise Service Pack 1\r\nMicrosoft Excel\u2122 version: 2016 Standard\r\n``` Sure, since attachments do not support .go file extensions, I add it as a .txt\r\n\r\nWhen line 90 is commented out, the resulting excel is fine. When run as it is attached, excel cannot open it properly.\r\n\r\nP.S: Btw, as you can see, it is a hybrid with tealeg's xlsx.\r\n\r\n[main.txt](https://github.com/360EntSecGroup-Skylar/excelize/files/1589234/main.txt)\r\n Hallelujah!\r\nDidn't notice AddTable inserts filtering by itself. Thanks a lot for making life easier and helping get rid of VisualBasic scripts \ud83d\udd7a  Hi,\r\nfirst, thanks creating for this library, it's very useful.\r\n\r\nI would like to know if it's possible to have rich text inside a cell? What I mean by rich text is text with a rich format, for instance \"Hello **world**\" where world is bold but Hello isn't. I have tried to dabble with SetCellStr and SetCellDefault with content such as `\"Hello <font style='weight:700'>world</font>\"` (I don't know a lot about XLSX format so my example may be wrong) but the cell value ends up escaped (with SetCellDefault too).\r\n\r\nThanks!\r\n Thanks\r\nDo you think there is a lot of work required to complete this feature, and do you already have a clear idea of how to implement it? Maybe I could lend you a hand depending on what's needed Hi,\r\nsorry, I'm quite busy these days so I'm not able to work on this. If someone else wants to do it, feel free. Otherwise I'll let you know if I have time again to do it.  When creating an excel file, if I called SetColWidth and save the file. Then if I open the file on office, it reported the file was broken and need fix.  ```\r\nstyle, _ := input.NewStyle(`{\"custom_number_format\":\"d-mmm-yy\"}`)\r\ninput.SetCellStyle(inputActiveSheet, targetCol, targetCol, style)\r\nval := input.GetCellValue(inputActiveSheet, targetCol)\t\t\t\t\t\r\n```\r\n`val` gives me raw cell value oh I see... I found it some where in doc comments and tried to use.\r\n\r\nThere is big issues  in date parsing with formats like `m/d/yy`. \r\n\r\nactually `go` parses year `42` as `2042` instead of `1942`, so many confussion may occur. Excuse me, but is there any plan to support such kinda usage?  When i use formulas in a document, and i open it after with Excell or libreoffice, i need to do a full replace of sum to SUM for the formula to work.\r\n\r\nSame for vlookup to replace with VLOOKUP.\r\n\r\nIn xml file, the SUM is in uppercase but when opened in libreoffice or microsof Excell it appear in lowercase.\r\n\r\nI haven't found any way to prevent this and it might be long for huge documents to replace formulas in the whole document. For information, i'm on v1.2 of Excelize under linux mint 64 18.1 and go 1.8.1 or 1.9.2 My libreoffice version is 5.1.6.2, but does the same on other versions.\r\n\r\nThe strange thing is that if i look in the XML File, all seems OK, a formula writen with LibreOffice and saved as Excell format looks like the Excelize formula.\r\n\r\nWhen i replace sum with SUM in LibreOffice and save, except it can now be read by Microsoft Excell 2016 on windows 10 where it couldn't before, is that all &#39; are replaced by &quote; for exemple.\r\n\r\nI really don't undestand what does that strange thing.\r\n\r\nMay i add an example file? Ok, getting some better results on SUM  by changing '.' with '!' for area and ';' by ',' as separator. ('.' and ';' are those that appear in LibreOffice French (and SUM is converted to SOMME)).\r\n\r\nLooking at VLOOKUP now, and changed same ';' and '.' to ',' and '!' in my go code, the generated file keep getting column letter in lowercase where Excell ibreOffice expect uppercase as you can see here : \r\n\r\n`<f aca=\"false\">VLOOKUP(B2,zones!$A$4:$B$60,2,0)</f><v>France</v></c><c r=\"E2\" s=\"1\" t=\"s\"><v>1084</v></c><c r=\"F2\" s=\"1\" t=\"e\"><f aca=\"false\">VLOOKUP(E2,zones!$d$4:$E$60,2,0)</f>`\r\nThe first VLOOKUP is one corrected changing a to A in formula and gives a good result.\r\nThe second one, shows Err501 because of the lowercase d.\r\n\r\nReally close now because i got some errors in the way i wrote formulas but this lowercase problem still gives problems when reading files with Office and LibreOffice :-s Ok!! i finally got it working in libreOffice but still not in Microsoft Office, but i think there's still some king of issue because i had to remove all leading '$' on the first column in ranges.\r\n\r\n`\t\texcellFile.SetCellFormula(sheetName, \"B2\",\r\n\t\t\tfmt.Sprintf(\"VLOOKUP(%s%d,zones!$D$4:$E$60,2,0)\", tools.ColNumToStr(colNum-1), rowNum))\r\n`\r\nis written in xml file as `VLOOKUP(A2,zones!$d$4:$E$60,2,0)` (note that D became d)\r\n\r\n\r\nif i change my code  to\r\n`\t\texcellFile.SetCellFormula(sheetName, \"B2\",\r\n\t\t\tfmt.Sprintf(\"VLOOKUP(%s%d,zones!D$4:$E$60,2,0)\", tools.ColNumToStr(colNum-1), rowNum))\r\n`\r\nthe xml file contains now `VLOOKUP(A2,zones!D$4:$E$60,2,0)` and it works very well now\r\n\r\n\r\nThis is a big deal because aftre generating the file, i give it to our accountant that add some stuff and duplicate formulas and sheets. Then, when showing, the formula is broken because the leading $ (meaning not to change column when copying) no longer lock the column to it's value and D becomes E if you copy formula to the right for example. i changed the title to match the real problem ;) Last thing to get it working in Microsoft Office is i had to open the file in LibreOffice, then save the file under Office 2007-2013 format.\r\n\r\nThe effect on the xml files composing the document is the one i noticed earlier : \r\n\r\n`&#39;` are replaced by `&apos;` etc.\r\n\r\nSo as a resume, leading area column letter in formulas are writen in lowercase in xml files when there is a '$' char before, AND files are writen with wrong escaping characters format for latest versions of Microsoft Office (`&#39;` instead of `&apos;` and so on).\r\n\r\nBoth issues can be solved by removing leading '$' and opening then saving the file under LibreOffice.  I use this library to write dozens of Sheet, and then delete several of the Sheet.\r\n\r\nIf len (members) > 0 {\r\n\r\nXlsx.DeleteSheet (\"Sheet1\")\r\n\r\nXlsx.UpdateLinkedValue ()\r\n\r\nErrDelSheet1: = xlsx.Save ()\r\n\r\nIf errDelSheet1! = nil {{\r\n\r\nLogs.Error (errDelSheet1)\r\n\r\n}\r\n\r\nXlsx.DeleteSheet (\"Sheet2\")\r\n\r\nErrDelSheet2: = xlsx.Save ()\r\n\r\nIf errDelSheet2! = nil {{\r\n\r\nLogs.Error (errDelSheet2)\r\n\r\n}\r\n\r\n}\r\n\r\nThen open the Excel file, suggesting that some of the contents of Excel are not readable. Whether or not to repair it. I can open the file after I fix it.\r\n\r\nIf the above is not called\r\n\r\n\r\n![180e95b0-4eea-4e29-8363-791f503e421b](https://user-images.githubusercontent.com/6705071/33549961-4133b5a0-d927-11e7-919e-fcaba889defd.png)\r\n\r\n![2e072dbe-5b47-4bcf-a251-037c0e5e8994](https://user-images.githubusercontent.com/6705071/33550399-b5f10874-d928-11e7-8d06-180718b9a184.png)\r\n\r\n![53434980-26a7-4e5f-a4d9-6b73e2a4cf26](https://user-images.githubusercontent.com/6705071/33550701-d7791198-d929-11e7-8d47-35d697f400d1.png)\r\n\r\ncontact me: +86 15362969113      or  QQ:273217031   or  email:hwf452@163.com\r\n if len(members) > 0 {\r\n\t\txlsx.DeleteSheet(\"Sheet1\")\r\n\t\terrDelSheet1 := xlsx.Save()\r\n\t\tif errDelSheet1 != nil {\r\n\t\t\tlogs.Error(errDelSheet1)\r\n\t\t}\r\n\t\txlsx.DeleteSheet(\"Sheet2\")\r\n\t\terrDelSheet2 := xlsx.Save()\r\n\t\tif errDelSheet2 != nil {\r\n\t\t\tlogs.Error(errDelSheet2)\r\n\t\t}\r\n\t}\r\n\r\n\u5982\u679c\u8fd9\u6bb5\u5220\u9664Sheet\u7684\u4ee3\u7801\u6ca1\u6709\u8c03\u7528\u3002\u6587\u4ef6\u6253\u5f00\u6b63\u5e38\u3002 I've also meet this problem. Hello, yesterday I just made the bug you quickly completed the repair, I have verified this afternoon, your efficiency is very fast. Like for you.  I can't get to iterate rows beacause GetRows() returns an empty slice. Here's the code.\r\n\r\n```\r\n\txlsx, err := excelize.OpenFile(filePath)\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\thoja := xlsx.GetSheetName(1)\r\n\tlog.Printf(\"Reading sheet %v\\n\", hoja)\r\n\r\n\trows := xlsx.GetRows(hoja)\r\n\tlog.Printf(\"Rows length: %v\\n\", len(rows))\r\n\tlog.Printf(\"Rows: %v\\n\", rows)\r\n\t\r\n\r\nOutput:\r\n2017/11/28 10:22:24 Reading sheet Productos\r\n2017/11/28 10:22:24 Rows length: 0\r\n2017/11/28 10:22:24 Rows: []\r\n```\r\nI'm adding the file to recreate the situation.\r\n[productos.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1509431/productos.xlsx)\r\n\r\ngo version go1.9 linux/amd64\r\n\r\nThanks! Yes you are rigtht! \r\nI had updated the package, but I had forgotten to update the dependency in the vendor directory.\r\n\r\nThanks!  The value in cell B2 is 00:30:00, but the value parsed is 12:30:00.\r\ncell := xlsx.GetCellValue(\"Sheet1\", \"B2\")\r\n\r\nI take a try to fix it as follows, but 12-hour time is not supported in this way.\r\n\r\nfunc parseTime(i int, v string) string {\r\n        f, err := strconv.ParseFloat(v, 64)\r\n        if err != nil {\r\n                return v\r\n        }\r\n        val := timeFromExcelTime(f, false)\r\n        format := builtInNumFmt[i]  ===========>>h:mm:ss\r\n\r\n        replacements := []struct{ xltime, gotime string }{\r\n                {\"yyyy\", \"2006\"},\r\n                {\"yy\", \"06\"},\r\n                {\"mmmm\", \"%%%%\"},\r\n                {\"dddd\", \"&&&&\"},\r\n                {\"dd\", \"02\"},\r\n                {\"d\", \"2\"},\r\n                {\"mmm\", \"Jan\"},\r\n                {\"mmss\", \"0405\"},\r\n                {\"ss\", \"05\"},\r\n                {\"hh\", \"15\"},\r\n                {\"h\", \"3\"},  ===========>>{\"h\", \"15\"}\r\n                {\"mm:\", \"04:\"},\r\n                {\":mm\", \":04\"},\r\n                {\"mm\", \"01\"},\r\n                {\"am/pm\", \"pm\"},\r\n                {\"m/\", \"1/\"},\r\n                {\"%%%%\", \"January\"},\r\n                {\"&&&&\", \"Monday\"},\r\n        }\r\n        for _, repl := range replacements {\r\n\t\tformat = strings.Replace(format, repl.xltime, repl.gotime, 1)\r\n\t}\r\n\t// If the hour is optional, strip it out, along with the possible dangling\r\n\t// colon that would remain.\r\n\tif val.Hour() < 1 {    ==============>>val.Hour() is 0 \r\n\t\tformat = strings.Replace(format, \"]:\", \"]\", 1)\r\n\t\tformat = strings.Replace(format, \"[3]\", \"\", 1)\r\n\t\tformat = strings.Replace(format, \"[15]\", \"\", 1)\r\n\t} else {\r\n\t\tformat = strings.Replace(format, \"[3]\", \"3\", 1)\r\n\t\tformat = strings.Replace(format, \"[15]\", \"15\", 1)\r\n\t}\r\n        return val.Format(format)\r\n}\r\n\r\nThe xlsx file is attached. If it is a new issue, can you give a formal workaround for it?  Thanks.\r\n[time.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1504641/time.xlsx)\r\n  ![barstacked](https://user-images.githubusercontent.com/1130495/33100029-8ad28046-ced8-11e7-8348-917d395746fd.png)\r\n\r\nHaven't updated documentation. Let me know, and I'll update README and go docs. # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/161?src=pr&el=h1) Report\n> Merging [#161](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/161?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/3d231cb549a3be2754a1681b158731d381e9f600?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/161/graphs/tree.svg?height=150&width=650&token=6yoenXP7JO&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/161?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##           master    #161      +/-   ##\n=========================================\n+ Coverage    98.5%   98.5%   +<.01%     \n=========================================\n  Files          16      16              \n  Lines        3277    3288      +11     \n=========================================\n+ Hits         3228    3239      +11     \n  Misses         30      30              \n  Partials       19      19\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/161?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [chart.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/161?src=pr&el=tree#diff-Y2hhcnQuZ28=) | `99.16% <100%> (+0.01%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/161?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/161?src=pr&el=footer). Last update [3d231cb...9279525](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/161?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n Cool. I'll get these done. Just curious though as to why you wouldn't want a .gitignore. It helps to keep the project clean especially with various editors/IDEs trying to stick a config file in. Also, it makes for a difficult workflow manually choosing which files to add or not.  https://support.content.office.net/en-us/media/870ca653-52e0-4b05-9a8c-01d39dbe5a06.jpg  It is not friendly to git. \r\nEverty time i run the code, i got a modify in git...\r\nIs there any way to solve it?\r\n\r\nfor example:  \r\n```go\r\nfunc TestWrite(t *testing.T){\r\n\txlsx := excelize.NewFile()\r\n\txlsx.SetCellValue(\"Sheet1\", \"B2\", 100)\r\n\terr := xlsx.SaveAs(\"./Write.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t}\r\n}\r\n\r\n\r\n/*first time data like this\r\n504b 0304 1400 0800 0800 0000 0000 0000\r\n0000 0000 0000 0000 0000 1300 0000 786c\r\n2f74 6865 6d65 2f74 6865 6d65 312e 786d\r\n6cec 99cf 6fdb 3614 c7ef fb2b 08de 57c9\r\n3f64 c741 9522 b1e3 766b d216 8ddb a1c7\r\n6789 9658 53a4 40d2 497c 1bda d32e 0306\r\n/*\r\n/* second time data...\r\n504b 0304 1400 0800 0800 0000 0000 0000\r\n0000 0000 0000 0000 0000 0f00 0000 786c\r\n2f77 6f72 6b62 6f6f 6b2e 786d 6c8c 92cf\r\n6edb 300c c6ef 7b0a 81f7 c652 9006 4160\r\nb9c0 b00d cb65 08b0 ae3d 2b12 1d13 d11f\r\n4392 9be4 ed07 394d e3a2 979c 2851 f68f\r\n....\r\n*/\r\n```\r\n\r\n is there any plan to fixed it\uff1f\r\ni need add the generate xlsx in git... \u597d\u7684\u3002     Open an xlsx file, update one or more values. If excel has functions you should use UpdateLinkedValue function. But If call UpdateLinkedValue all calls using GetCellValue returns \"\".\r\nWhen I update excel and do not use UpdateLinkedValue values are updated and I can use excelize to read data without any issues. I tested this case.\r\n\r\nUsing Open XML SDK Tools I have found differences in all sheet xmls.\r\n\r\nExample diff from sheet xml file:\r\n```\r\n   <c r=\"F13\" s=\"53\" t=\"str\">\r\n    <f>\r\n     IF(WEEKDAY($E$9)=1,$E$9,\"N/A\")\r\n    </f>\r\n    <v>\r\n     N/A\r\n    </v>\r\n   </c>\r\n```\r\nvs\r\n```\r\n   <c r=\"F13\" s=\"53\">\r\n    <f>\r\n     IF(WEEKDAY($E$9)=1,$E$9,\"N/A\")\r\n    </f>     \r\n   </c>\r\n```\r\nor\r\n```\r\n   <c r=\"I13\" s=\"54\">\r\n    <f>\r\n     IF(H13=\"N/A\", IF(WEEKDAY($E$9)=4,$E$9,\"N/A\"), H13+1)\r\n    </f>\r\n    <v>\r\n     43040\r\n    </v>\r\n   </c>\r\n```\r\nvs \r\n```\r\n   <c r=\"I13\" s=\"54\">\r\n    <f>\r\n     IF(H13=\"N/A\", IF(WEEKDAY($E$9)=4,$E$9,\"N/A\"), H13+1)\r\n    </f> \r\n   </c>\r\n```\r\n@xuri, relevant files sent via email. OK, I this case I am closing an issue as a duplicate to https://github.com/360EntSecGroup-Skylar/excelize/issues/65. Big thank for answer.  Use [github.com/mohae/deepcopy](https://godoc.org/github.com/mohae/deepcopy#Copy) (license MIT) to deep copy worksheets with package `reflect` instead of the internal [`deepcopy` function](https://github.com/360EntSecGroup-Skylar/excelize/blob/88e48e079a91191e05f32a232f8dec4454b25238/lib.go#L114L123) that was using `encoding/gob` serialization and\r\ndeserialization. # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/155?src=pr&el=h1) Report\n> Merging [#155](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/155?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/9e463b4614348b3ddc04b1fedd5d662845ce0fb9?src=pr&el=desc) will **increase** coverage by `0.05%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/155/graphs/tree.svg?width=650&height=150&src=pr&token=6yoenXP7JO)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/155?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #155      +/-   ##\n==========================================\n+ Coverage   98.85%   98.91%   +0.05%     \n==========================================\n  Files          16       16              \n  Lines        3590     3582       -8     \n==========================================\n- Hits         3549     3543       -6     \n+ Misses         24       23       -1     \n+ Partials       17       16       -1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/155?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [lib.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/155/diff?src=pr&el=tree#diff-bGliLmdv) | `97.26% <\u00f8> (-0.18%)` | :arrow_down: |\n| [sheet.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/155/diff?src=pr&el=tree#diff-c2hlZXQuZ28=) | `98.09% <100%> (+0.61%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/155?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/155?src=pr&el=footer). Last update [9e463b4...4a1b406](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/155?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n Could this PR get a review? 1/ using `encoding/gob` is much slower than [`mohae/deepcopy`](https://github.com/mohae/deepcopy/)\r\n2/ When building an application this implementation of `deepcopy` drags the `encoding/gob` package into the binary which is otherwise not linked. And this package is much bigger (50x) than `mohae/deepcopy` (which only depends on `time` and `reflect`).\r\n```\r\n$ LC_ALL=C stat -f \"%6z %N\" $(go env GOPATH)/pkg/$(go env GOOS)_$(go env GOARCH)/github.com/mohae/deepcopy.a $(go env GOROOT)/pkg/$(go env GOOS)_$(go env GOARCH)/encoding/gob.a\r\n 10508 .../pkg/darwin_amd64/github.com/mohae/deepcopy.a\r\n541818 .../pkg/darwin_amd64/encoding/gob.a\r\n```\r\n3/ `encoding/gob` drags many more dependencies:\r\n```\r\n$ go list -f '{{printf \"%25s\" .ImportPath}} {{.Imports}}' encoding/gob github.com/mohae/deepcopy\r\n             encoding/gob [bufio encoding encoding/binary errors fmt io math math/bits os reflect sync sync/atomic unicode unicode/utf8]\r\ngithub.com/mohae/deepcopy [reflect time]\r\n``` Thanks for merging!  Thank you for your great work on excelize. Reading works like a charm.\r\nBut I have an issue with writing.\r\n\r\nI update one cell, save and XLSX file is corrupted.\r\n\r\nInput file: [source_file.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1465192/source_file.xlsx)\r\nOutput corrupted file: [Workbook.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1465193/Workbook.xlsx)\r\n\r\nHow I am writing to the file\r\n```\r\nxlsx, err := excelize.OpenFile(path)\r\nxlsx.SetCellInt(\"Sheet1\", \"I15\", 100)\r\nerr := xlsx.SaveAs(\"./Workbook.xlsx\")\r\n```\r\nErro message during opening Workbook.xlsx\r\n![image](https://user-images.githubusercontent.com/1046787/32704428-1b2a20de-c805-11e7-93d3-068349365c9e.png)\r\n\r\nAnd error if I try to recover the workbook:\r\nReplaced Part: /xl/worksheets/sheet1.xml part with XML error.  Load error. Line 2, column 213397.\r\nRemoved Records: Formula from /xl/calcChain.xml part (Calculation properties)\r\n\r\ngo env\r\n```\r\nset GOARCH=amd64\r\nset GOBIN=\r\nset GOEXE=.exe\r\nset GOHOSTARCH=amd64\r\nset GOHOSTOS=windows\r\nset GOOS=windows\r\nset GOPATH=C:\\Users\\stanislav.valasek\\go\r\nset GORACE=\r\nset GOROOT=C:\\Go\r\nset GOTOOLDIR=C:\\Go\\pkg\\tool\\windows_amd64\r\nset GCCGO=gccgo\r\nset CC=gcc\r\nset GOGCCFLAGS=-m64 -mthreads -fmessage-length=0\r\nset CXX=g++\r\nset CGO_ENABLED=1\r\nset CGO_CFLAGS=-g -O2\r\nset CGO_CPPFLAGS=\r\nset CGO_CXXFLAGS=-g -O2\r\nset CGO_FFLAGS=-g -O2\r\nset CGO_LDFLAGS=-g -O2\r\nset PKG_CONFIG=pkg-config\r\n```\r\n Have you tried using SetCellValue? Yes `xlsx.SetCellValue(\"Sheet1\", \"I15\", 100)`\r\nBut if I understand SetCellValue correctly it only switches based on data type and in this case it should call SetCellInt or am I missing something?\r\n\r\nResult it the same. Output file - [Workbook.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1467890/Workbook.xlsx)\r\n\r\nOutput file is smaller by 680Kb and corrupted. @xuri thank you. I have updated the package and tested. Works better than before.\r\nI am still getting \"Removed Feature: View from /xl/worksheets/sheet2.xml part\" but after I hit Repair my excel I can see a content. \r\nOutput file size is similar from 61,4Kb to 51,9 Kb.\r\nI will do some more testing and let you know. @xuri I made a diff of extracted xlsx files input and output before any changes/repairs.\r\nFound a difference in files: styles.xml, workbook.xml, workbook.xml.rels, sheet1.xml.\r\nAttached is a diff of relevant files - [diff.txt](https://github.com/360EntSecGroup-Skylar/excelize/files/1477793/diff.txt) Which contact can I use to share it directly? I have used your gmail. @xuri thank you. I have updated the package and tested. Now I can open a sheet where one cell was updated using excelize without a warning.\r\nBased on the above I consider this issue as solved. I do not want to close the issue directly without your confirmation.\r\nIf I find any other issues I will report.\r\n_Side note: output files are still smaller and I have sent you the input and output files via email._ Based on my testing updated excel files are readable and give any further warnings. Closing the issue. Thank you for fixing.  How can I get the text of cell's comment by refer to a cell's index, for example, something like GetCellComment(\"sheet1\",\"A36\")\r\nI have checked the excelize godoc and it seems we can just Add comments to cell but not Read from it.\r\nBtw, excelize is so good and I really like it.  The testsuite uses almost only `t.Log` instead of validating assertions and failing with [`t.Error`](https://golang.org/pkg/testing/#T.Error), [`t.Fatal`](https://golang.org/pkg/testing/#T.Fatal) or [`t.Fail`](https://golang.org/pkg/testing/#T.Error):\r\n```\r\n$ grep -E -c 'Error|Fatal|Fail|panic' *_test.go\r\nexcelize_test.go:3\r\nsheet_test.go:0\r\n```\r\n\r\nThis means that only code coverage is verified, but **regressions are not checked automatically** (humans have to read the `go test -v` output and have to know what is expected: that's not helpful for external contributors). It seems that most `if err != nil` blocks in `*_test.go` files that call `t.Log` could call `t.Fatal` instead.\r\n\r\nBefore:\r\n```go\r\nif err  != nil {\r\n    t.Log(err)\r\n}\r\n```\r\nAfter:\r\n```go\r\nif err  != nil {\r\n    t.Fatal(err)\r\n}\r\n``` @xuri Would you accept a patch that fixes this issue in the way I suggest in [previous comment](#issuecomment-343431642)?  I have implemented #145 (\"Add support for setting SheetView.showGridLines\") by adding two new methods:\r\n- `SetSheetViewOptions(sheetName string, viewIndex int, opts ...SheetViewOption) error`\r\n- `GetSheetViewOptions(sheetName string, viewIndex int, opts ...SheetViewOptionPtr) error`\r\n\r\nThe options value are given by the user through types that have privates methods that implement the private `SheetViewOption` and `SheetViewOptionPtr` interfaces:\r\n- `DefaultGridColor(bool)`\r\n- `RightToLeft(bool)`\r\n- `ShowFormulas(bool)`\r\n- `ShowGridLines(bool)`\r\n- `ShowRowColHeaders(bool)`\r\n\r\nExamples:\r\n```go\r\nerr := xl.SetSheetViewOptions(\"Sheet1\", -1, excelize.ShowGridLines(true))\r\n```\r\n```go\r\nvar showGridLines excelize.ShowGridLines\r\nerr := xl.GetSheetViewOptions(\"Sheet1\", -1, &showGridLines)\r\n``` # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/149?src=pr&el=h1) Report\n> Merging [#149](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/149?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/eb54510cadaa66649ddf6caf22d1b723c5a4b17a?src=pr&el=desc) will **increase** coverage by `0.02%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/149/graphs/tree.svg?token=6yoenXP7JO&width=650&height=150&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/149?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master     #149      +/-   ##\n==========================================\n+ Coverage   98.45%   98.47%   +0.02%     \n==========================================\n  Files          14       15       +1     \n  Lines        3171     3219      +48     \n==========================================\n+ Hits         3122     3170      +48     \n  Misses         30       30              \n  Partials       19       19\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/149?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [sheetview.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/149?src=pr&el=tree#diff-c2hlZXR2aWV3Lmdv) | `100% <100%> (\u00f8)` | |\n| [lib.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/149?src=pr&el=tree#diff-bGliLmdv) | `90.47% <100%> (+0.82%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/149?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/149?src=pr&el=footer). Last update [eb54510...88e48e0](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/149?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n Ready for review. @xuri I have more improvements on other subjects (printing in particular) on which I'm working. Could you give me some feedback on this one? Squash done.  I want to create a GET endpoint where the user downloads the xlxs file created with excelize.\r\nHow can I achive such thing without actually creating a FS file. The below works, but its far from ideal.\r\n\r\n```\r\nfunc GenerateExcel(w http.ResponseWriter, r *http.Request) {\r\n\txlsx := excelize.NewFile()\r\n\txlsx.NewSheet(2, \"Sheet2\")\r\n\txlsx.SetCellValue(\"Sheet2\", \"A2\", \"Hello world.\")\r\n\txlsx.SetCellValue(\"Sheet1\", \"B2\", 100)\r\n\txlsx.SetActiveSheet(2)\r\n\terr := xlsx.SaveAs(\"./Workbook.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\tos.Exit(1)\r\n\t}\r\n\tdata, err := ioutil.ReadFile(\"./Workbook.xlsx\")\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\tw.Header().Set(\"Content-Type\", \"application/octet-stream\")\r\n\tw.Header().Set(\"Content-Disposition\", \"attachment; filename=\"+\"Workbook.xlsx\")\r\n\tw.Header().Set(\"Content-Transfer-Encoding\", \"binary\")\r\n\tw.Header().Set(\"Expires\", \"0\")\r\n\thttp.ServeContent(w, r, \"Workbook.xlxs\", time.Now(), bytes.NewReader(data))\r\n}\r\n\r\n\r\n``` @xuri Thanks! I off work today. Will try this asap. Do I still need to xlxs.SaveAs? @xuri yeap that did it! There is no need to SaveAs, just Write(w) works. How about?\r\n\r\n``` go\r\n\r\nfunc (f *File) SendThroughHTTP(w http.ResponseWriter, filename string){\r\n\t\tw.Header().Set(\"Content-Type\", \"application/octet-stream\")\r\n\t\tw.Header().Set(\"Content-Disposition\", \"attachment; filename=\"+filename+\".xlsx\")\r\n\t\tw.Header().Set(\"Content-Transfer-Encoding\", \"binary\")\r\n        f.Write(w)\r\n}\r\n```\r\n @cescoferraro That would add an unnecessary dependency of `excelize` on `net/http`. @cescoferraro :  as you mentioned in above comment, we can achieve it without calling saveAs function.\r\n\r\nI have executed the above code after removing saveAs function. When i did HTTP request it give me Response in Binary format. \r\n\r\n```\r\nfunc GenerateExcel(w http.ResponseWriter, r *http.Request) {\r\n    xlsx := excelize.NewFile()\r\n    xlsx.NewSheet(\"Sheet2\")\r\n    xlsx.SetCellValue(\"Sheet2\", \"A2\", \"Hello world.\")\r\n    xlsx.SetCellValue(\"Sheet1\", \"B2\", 100)\r\n    xlsx.SetActiveSheet(2)\r\n  \r\n    w.Header().Set(\"Content-Type\", \"application/octet-stream\")\r\n    w.Header().Set(\"Content-Disposition\", \"attachment; filename=\"+\"Workbook.xlsx\")\r\n    w.Header().Set(\"Content-Transfer-Encoding\", \"binary\")\r\n    w.Header().Set(\"Expires\", \"0\")\r\n    xlsx.Write(w)\r\n}\r\n```\r\n\r\nHow can i save it as file with xlsx extension after making http request?\r\n\r\nPlease let me know if you need more detail. When saving the file directly to disk with `xlsx.SaveAs(\"./Workbook.xlsx\")` the file opens properly and all is good. However when writing to http.ResponseWriter as shown in @sourabhkheterpal's example, the file, when saved, isn't recognized and I cannot open it with an xlsx compatible application like Numbers.\r\n\r\nNow I'm using the [github.com/awslabs/aws-lambda-go-api-proxy/handlerfunc](github.com/awslabs/aws-lambda-go-api-proxy/handlerfunc) library which uses the `base64.StdEncoding.EncodeToString` method to encode the body. Am I right in assuming this encoding is the problem? as you mentioned @xuri , use write function return file instream, the xlsx file downloaded , opening it isn't recognized and need to repair. can you tell me the problem? Guys any solution for it?  Could you make `getTotalRowsCols()`  in `row.go` as public method?\r\n \r\nThank you! I did not notice that.\r\nI think you could  provide `GetTotalRowsCols(sheetName string) (w int,h int)` using sheetName instead of internal XML file path.  I can't find a solution to sort the excel based on a column.\r\n(I have this file with > 15000 rows, and I need to sort it based on the column content) I have the \r\nrows := xlsx.GetRows(\"Sheet1\")\r\nwhich I have sorted myself, but now I'm looking for something like:\r\nxlsx.SetRows(rows)\r\n\r\nIs there a way to inject such a rowset in one commando, or do I have to write it myself too?  I tried searching the docs and the github sources, but I didn't find an example with more separation of functionality.\r\n\r\nSo I try to keep my main clean, and I have this:\r\n\r\n> \r\n\t// main snippet\r\n\tvar fileName = \"myfile.xlsx\"\r\n\txlsx, err := excelize.OpenFile(fileName)\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\tos.Exit(1)\r\n\t}\r\n\r\n\tcheckSheetName(xlsx, 1, \"MySheetname\")\r\n\r\nand in the same file:\r\n\r\n> \r\n\tfunc checkSheetName(xlsx *File, sheetNr int, sheetName string) {\r\n\t\txlsx.SetActiveSheet(1)\r\n\t\tsheetName := xlsx.GetSheetName(1)\r\n\t\tfmt.Println(\"Sheetname: \" + sheetName)\r\n\t}\r\n\r\nbut somehow, it doesn't recognize the *File part. Can you give me (and the rest of us) a hint in how to use this, because I don't want to write one big main routine :-(\r\n\r\n Nice, thanks. Code is much more readable now  Webservers which need to generate and serve excel files on-the-fly using the std golang http ServeContent now need to use an extra buffer to serve an excel file from memory.\r\n\r\nThe File.Write function accepts a writer, but often we want a reader. In the case of http.ServeContent we need a ReaderSeeker (needs to know total size etc), so you can't use an io.Pipe to connect an excelize writer to a reader (it does not support seeking).\r\n\r\nSInce the File.Write function already makes use of an intermediate buffer, providing a function which returns a ReaderSeeker is easy, and could benefit many uses.  PHPEXCEL\u56e0\u4e3a\u6709\u5185\u5b58\u6cc4\u6f0f\u7684\u539f\u56e0,\u6240\u4ee5\u6211\u4eec\u51c6\u5907\u6362\u5e93\r\n\u8fd9\u4e2ago\u8bed\u8a00\u5f00\u53d1\u7684\u7c7b\u5e93,  \u6709\u505a\u8fc7\u538b\u6d4b\u5417\r\n\u751f\u62101W\u4e2axlsx \u9700\u8981\u5927\u6982\u591a\u4e45? \u53e6\u5916,\u4e0d\u4f1a\u53d1\u751f\u5185\u5b58\u6cc4\u6f0f\u5427 1. \u4e2a\u4eba\u4f7f\u7528\u7684\u60c5\u51b5\u3002\u5982\u679c\u5bf9\u6027\u80fd\u6709\u6781\u5176\u4e25\u683c\u8981\u6c42\uff0c\u5efa\u8bae\u4e0d\u8981\u4f7f\u7528\u3002\r\n2. \u6682\u65f6\u6ca1\u6709\u53d1\u751f\u5185\u5b58\u6cc4\u9732\u60c5\u51b5\u3002\r\n3. \u8fd9\u4e2a\u5e93\u7684\u7279\u70b9\u662f\u5bf9excel\u7684\u4e00\u4e9b\u529f\u80fd\u4e0a\u7684\u652f\u6301\u6bd4\u5176\u4ed6\u5e93\u8981\u4e30\u5bcc\u7684\u591a\r\n4. \u4e2a\u4eba\u8ba4\u4e3a\uff0c\u5982\u679c\u4f60\u7684\u8981\u6c42\u5f88\u4e25\u683c\uff0c\u5c31\u662fjava\u7684poi\uff0c\u8fd9\u4e2a\u5e94\u8be5\u662f\u516c\u8ba4\u7684\u5404\u65b9\u9762\u7ecf\u5f97\u4f4f\u8003\u9a8c\u7684\u5e93\u3002  \u6211\u5bfc\u5165\u7684excel\u7684\u65e5\u671f\u4e3a  2012/7/4  09:06:24 \uff0c\u4f46\u662f\u8bfb\u53d6\u51fa\u5566\u7684\u5374\u662f 7/4/12 09:06\uff0c\u683c\u5f0f\u53d8\u4e86\uff0c\u79d2\u4e5f\u6ca1\u4e86\r\n  ```\r\n go env                                                \r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/mario/src/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/lib/go\"\r\nGOTOOLDIR=\"/usr/lib/go/pkg/tool/linux_amd64\"\r\nGCCGO=\"gccgo\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build060412853=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\nCGO_CFLAGS=\"-g -O2\"\r\nCGO_CPPFLAGS=\"\"\r\nCGO_CXXFLAGS=\"-g -O2\"\r\nCGO_FFLAGS=\"-g -O2\"\r\nCGO_LDFLAGS=\"-g -O2\"\r\nPKG_CONFIG=\"pkg-config\"\r\n```\r\n\r\nError:\r\n```\r\npanic: runtime error: index out of range\r\n\r\ngoroutine 1 [running]:\r\ngithub.com/360EntSecGroup-Skylar/excelize.(*File).SetCellStr(0xc420052060, 0x572db7, 0x6, 0xc420013b48, 0x1, 0xc420104000, 0x9)\r\n\t/home/mario/src/go/src/github.com/360EntSecGroup-Skylar/excelize/cell.go:385 +0x486\r\ngithub.com/360EntSecGroup-Skylar/excelize.(*File).SetCellValue(0xc420052060, 0x572db7, 0x6, 0xc420013b48, 0x1, 0x538dc0, 0xc4200f4680)\r\n\t/home/mario/src/go/src/github.com/360EntSecGroup-Skylar/excelize/cell.go:59 +0x757\r\nmain.main()\r\n\t/home/mario/src/go/src/github.com/nuveo/main.go:47 +0x2f8\r\nexit status 2\r\n```\r\n\r\ncode:\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"bufio\"\r\n\t\"fmt\"\r\n\t\"os\"\r\n\t\"strings\"\r\n\r\n\t\"github.com/360EntSecGroup-Skylar/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\r\n\tf, err := os.Open(\"data/csv_tmp_file.csv\")\r\n\tif err != nil {\r\n\t\tpanic(err.Error())\r\n\t}\r\n\tdefer f.Close()\r\n\r\n\tvar count int\r\n\txlsx := excelize.NewFile()\r\n\t// Create a new sheet.\r\n\tsc := bufio.NewScanner(f)\r\n\tsc.Split(bufio.ScanLines)\r\n\tfor sc.Scan() {\r\n\t\tif count == 0 {\r\n\t\t\theaderTextSplited := strings.Split(sc.Text(), \",\")\r\n\t\t\tfor i, header := range headerTextSplited {\r\n\t\t\t\tfmt.Printf(\"%s %s\\n\", excelize.ToAlphaString(i), header)\r\n\t\t\t\txlsx.SetCellValue(\"Sheet1\", excelize.ToAlphaString(i), header)\r\n\t\t\t}\r\n\t\t\tcount++\r\n\t\t\tcontinue\r\n\t\t}\r\n\r\n\t\tvaluesTextSplited := strings.Split(sc.Text(), \",\")\r\n\t\tfor i, value := range valuesTextSplited {\r\n\t\t\txlsx.SetCellValue(\"Sheet1\", fmt.Sprintf(\"%s%s\", excelize.ToAlphaString(i), count), value)\r\n\t\t}\r\n                count++\r\n\t}\r\n\r\n\t// Save xlsx file by the given path.\r\n\terr = xlsx.SaveAs(\"./teste_excelize.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\tos.Exit(1)\r\n\t}\r\n}\r\n```  \u82f1\u8bed\u4e0d\u597d\u3002\u3002\u89c1\u8c05\r\n\u7248\u672c1.7.3\uff0c\u4ee3\u7801\u7528\u7684readme\u5b9e\u4f8b\u3002excel\u4e3a2010\r\n\u521b\u5efa\u7684excel\u6253\u5f00\u62a5\u9519\uff0cexcel\u65e0\u6cd5\u6253\u5f00\u6587\u4ef6\uff0c\u56e0\u4e3a\u6587\u4ef6\u683c\u5f0f\u6216\u6587\u4ef6\u6269\u5c55\u540d\u65e0\u6548\u3002\u8bf7\u786e\u5b9a\u6587\u4ef6\u672a\u635f\u574f\uff0c\u5e76\u4e14\u6587\u4ef6\u6269\u5c55\u540d\u4e0e\u6587\u4ef6\u7684\u683c\u5f0f\u5339\u914d  So, I've tried this:\r\n\r\n```\r\nfunc ExportarExcel(path string) error {\r\n\tfile := excelize.NewFile()\r\n\tdetalle := \"Detalle\"\r\n\tfile.NewSheet(2, detalle)\r\n\tfile.SetCellValue(detalle, \"A1\", \"ID\")\r\n\tfile.SetActiveSheet(2)\r\n\terr := file.SaveAs(path)\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\r\n\treturn nil\r\n}\r\n```\r\n\r\nI get a file with the sheet created but has nothing in A1 cell. None error is returned. \r\n\r\n[salida.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1296206/salida.xlsx)\r\n\r\n Oh! \r\nYou change the API!\r\nThat's why my program doesn't work correctly!  I stumbled upon a bug. If you pass a float64 to SetCellValue() and it is NaN, it causes a corrupt .xlsm file. I simply used math.IsNaN() to check prior to SetCellValue() and that the solved problem.\r\n  just not using double (for ... range...) Thank you very much, get it!  Hi there :\r\nmy xlsx file like: \r\n\r\n-------\r\nA1 123\r\n-------\r\nA2 abc\r\n\r\nI use xlsx.GetCellValue(\"Sheet1\",\"A2\")   the value is \"\" ,but the axis set A1 can get 123.\r\n  Hi! \r\nWhen I changed the sheet name from \u201dsheet2\u201c to \u201dT1\u201c in the sample code, I found that there was no data in the generated excel, also I could not get the data using \u201dT1\u201c. \r\nLook at the source code, in the sheet.go file setContentTypes method, the xml name has been fixed to sheet+index. So I using sheet+index when set cell value, but when I want to obtain sheetIndex, I must use \"T1\".\r\nThis is too inconvenient, Is there any  way to solve this question?\r\n\r\nThx\r\n o,that's very good, thank you, sir!  [input_campinas.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1276503/input_campinas.xlsx)\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n        \"bytes\"\r\n        \"fmt\"\r\n        \"io/ioutil\"\r\n        \"os\"\r\n        \"strconv\"\r\n\r\n        \"github.com/xuri/excelize\"\r\n)\r\n\r\nfunc main() {\r\n        f, _ := ioutil.ReadFile(\"input_campinas.xlsx\")\r\n        xlsx, err := excelize.OpenReader(bytes.NewReader(f))\r\n        if err != nil {\r\n                fmt.Println(err)\r\n                os.Exit(1)\r\n        }\r\n\r\n        for sheetIndex, _ := range xlsx.GetSheetMap() {\r\n                fmt.Println(\".... \", xlsx.GetRowVisible(\"sheet\"+strconv.Itoa(sheetIndex), 0))\r\n                rows := xlsx.GetRows(\"sheet\" + strconv.Itoa(sheetIndex))\r\n                fmt.Println(len(rows))\r\n                for _, row := range rows {\r\n                        for _, colCell := range row {\r\n                                fmt.Print(colCell, \"\\t\")\r\n                        }\r\n                }\r\n        }\r\n\r\n}\r\n```\r\n\r\nI'd be one of the first to contribute\r\n Very very good @xuri , thanks @xuri more case not read\r\n[input.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1288489/input.xlsx)\r\n ops, sorry.   @xuri Thanks\r\n2017/08/30 19:08:38 http: panic serving 127.0.0.1:49600: runtime error: index out of range\r\ngoroutine 16 [running]:\r\nnet/http.(*conn).serve.func1(0xc0421da280)\r\n\tD:/work/golang19/src/net/http/server.go:1697 +0xd7\r\npanic(0x8ed7e0, 0xc0c390)\r\n\tD:/work/golang19/src/runtime/panic.go:491 +0x291\r\ngithub.com/xuri/excelize.(*File).GetCellValue(0xc04238d320, 0x97b8f7, 0x6, 0xc042371008, 0x3, 0xf, 0xa3)\r\n\tD:/work/everything/goLang/package/src/github.com/xuri/excelize/cell.go:104 +0x4cd  @xuri \r\nI have the same problem when I use the function `GetCellValue()` ,it works when the cell value is number,but it can't work when the cell value is English or Chinese.\r\nMy go version is 1.9 too, the same code can work well at version 1.8 \r\nthe reason it can't work is :\r\n`runtime error: index out of range'\r\n'github.com/xuri/excelize.(*File).GetCellValue(0xc0420374a0, 0x979579, 0x6, 0x976693, 0x2, 0xc0421de000, 0xa3)`  @xuri Thanks,\r\nWe have found the bug of go 1.9 because the font size we set is 10.5 but when we set it to 11 it works,\r\nthe `xml.Unmarshal([]byte(f.readXML(\"xl/sharedStrings.xml\")), &sharedStrings)` should return err and check,and the err is `strconv.ParseInt: parsing \"10.5\": invalid syntax` @xuri Thanks,\r\nthe file is here:\r\n[test.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1269103/test.xlsx)\r\nand the test file is:\r\n`import (`\r\n`\t\"testing\"`\r\n`\t\"fmt\"`\r\n`\t\"github.com/xuri/excelize\"`\r\n`)`\r\n\r\n`func TestBug(t *testing.T){`\r\n`\txlsx, err := excelize.OpenFile( \"./test.xlsx\")`\r\n`\tif err != nil {`\r\n`\t\tt.Error(err)`\r\n`\t}`\r\n`\tfmt.Println(xlsx.GetCellValue(\"sheet1\", \"A4\"))`\r\n`}`\r\n  How to upload excel file to database by read header column name/first row as index Now, my problem is when I import data form excel sheet to the database in particular format. Like,\r\n\r\nTable name:-Mytable\r\n\r\nid | name | surname | email | date |\r\n\r\nand the excel file I am using to import have a same format. But a format can change Like,\r\n\r\nid | surname | name | date | email |\r\n\r\nhow can I map the columns from excel file to the database table so that correct data should enter into the data table. Yes column name is same with database, how to specify column coordinates with column name not using number? So is it possible to upload \r\n`for _, sheet := range xlFile.Sheets {\r\n    \tfor a, _  := range sheet.Rows {\r\n    \tif a>0{\r\nvar profile_refid \t\t      \t= sheet.Cell(a,0).Value -> sheet.Cell(a,profile_refid).Value\r\nvar profile_extid           \t       = sheet.Cell(a,1).Value -> sheet.Cell(a,profile_extid).Value\r\nvar profile_salutation             = sheet.Cell(a,2).Value -> sheet.Cell(a,profile_salutation).Value\r\nvar profile_name      \t      = sheet.Cell(a,3).Value -> sheet.Cell(a,profile_name).Value\r\n}\r\n}\r\n}`\r\nbecause my column name excel below\r\n![image](https://user-images.githubusercontent.com/1335828/29769292-fca85ba8-8c13-11e7-87d2-9af7103f707c.png)\r\n But field in my table like this\r\nprofile_salutation,profile_name,profile_refid,profile_extid, so not equal position with excel column Adjust could be automatically? identification with header table name?\r\nLike this ->\r\n` row[profile_refid], row[profile_extid], row[profile_salutation], row[profile_name]` Something like this?\r\nhttp://www.c-sharpcorner.com/UploadFile/0c1bb2/inserting-excel-file-records-into-sql-server-database-using/ Yes xuri thank you, I have solved it :)  i used API demo , but get chart is blank\r\n\r\n```\r\n\tcategories := map[string]string{\"A2\": \"Small\", \"A3\": \"Normal\", \"A4\": \"Large\", \"B1\": \"Apple\", \"C1\": \"Orange\", \"D1\": \"Pear\"}\r\n\tvalues := map[string]int{\"B2\": 2, \"C2\": 3, \"D2\": 3, \"B3\": 5, \"C3\": 2, \"D3\": 4, \"B4\": 6, \"C4\": 7, \"D4\": 8}\r\n\txlsx := excelize.NewFile()\r\n\tfor k, v := range categories {\r\n\t\txlsx.SetCellValue(\"Sheet1\", k, v)\r\n\t}\r\n\tfor k, v := range values {\r\n\t\txlsx.SetCellValue(\"Sheet1\", k, v)\r\n\t}\r\n\txlsx.AddChart(\"Sheet1\", \"F2\",\r\n\t\t`\r\n\t\t{\r\n\t\t\t\"type\":\"bar3D\",\r\n\t\t \t\"series\":[\r\n\t\t\t\t\t{\"name\":\"=Sheet1!$A$2\",\"categories\":\"=Sheet1!$B$1:$D$1\",\"values\":\"=Sheet1!$B$2:$D$2\"},\r\n\t\t\t\t\t{\"name\":\"=Sheet1!$A$3\",\"categories\":\"=Sheet1!$B$1:$D$1\",\"values\":\"=Sheet1!$B$3:$D$3\"},\r\n\t\t\t\t\t{\"name\":\"=Sheet1!$A$4\",\"categories\":\"=Sheet1!$B$1:$D$1\",\"values\":\"=Sheet1!$B$4:$D$4\"}\r\n\t\t\t\t\t],\r\n\t\t\t\"format\":{\"x_scale\":1.0,\"y_scale\":1.0,\"x_offset\":15,\"y_offset\":10,\"print_obj\":true,\"lock_aspect_ratio\":false,\"locked\":false},\r\n\t\t\t\"legend\":{\"position\":\"bottom\",\"show_legend_key\":false},\r\n\t\t\t\"title\":{\"name\":\"Fruit Line Chart\"},\r\n\t\t\t\"plotarea\":{\"show_bubble_size\":true,\"show_cat_name\":false,\"show_leader_lines\":false,\"show_percent\":true,\"show_series_name\":true,\"show_val\":true},\r\n\t\t\t\"show_blanks_as\":\"zero\"\r\n\t\t\t}\r\n\t\t`)\r\n\terr := xlsx.SaveAs(\"./Workbook.xlsx\")\r\n```\r\n I found the reason\uff0c I didn't use office to open it.\r\nI hava another question , Can I save this chart  as picture in local ?   Nice work, thank you! When is the release?   Travis will fail because of usage of \"github.com/xuri/excelize/format\" package.  \r\n\txlsx := excelize.NewFile()\r\n\r\n\txlsx.SetColWidth(\"Sheet1\", \"A\", \"A\", 15)\r\n\r\n\tfor i := 0; i < 10000; i++ {\r\n\t\tvar msec1 = time.Now().UnixNano() / 1000 / 1000\r\n\r\n\t\trowIdx := i + 2\r\n\t\txlsx.SetRowHeight(\"Sheet1\", rowIdx, 15)\r\n\t\trowNum := strconv.FormatInt(int64(rowIdx), 10)\r\n\r\n\t\txlsx.SetCellValue(\"Sheet1\", \"M\"+rowNum, \"link1\")\r\n\t\txlsx.SetCellHyperLink(\"Sheet1\", \"M\"+rowNum, \"./data/201708151534444.jpg\", \"External\")\r\n\t\txlsx.SetCellValue(\"Sheet1\", \"N\"+rowNum, \"link2\")\r\n\t\txlsx.SetCellHyperLink(\"Sheet1\", \"N\"+rowNum, \"./data/201708151534445.jpg\", \"External\")\r\n\r\n\t\tstyle, _ := xlsx.NewStyle(`{\"font\":{\"bold\":true,\"italic\":true,\"family\":\"Berlin Sans FB Demi\",\"size\":10,\"color\":\"blue\",\"underline\":\"single\"}}`)\r\n\t\txlsx.SetCellStyle(\"Sheet1\", \"M\"+rowNum, \"M\"+rowNum, style)\r\n\t\txlsx.SetCellStyle(\"Sheet1\", \"N\"+rowNum, \"N\"+rowNum, style)\r\n\r\n\t\tvar msec2 = time.Now().UnixNano() / 1000 / 1000\r\n\r\n\t\tglog.Infoln(\"row = \", rowIdx, \", msecs = \", msec2 - msec1)\r\n\t}\r\n\r\n\r\nOutput\r\n\r\nI0815 10:13:31.513288    2819 excelfile.go:35] row =  2 , msecs =  1ms\r\n...\r\nI0815 10:14:14.555693    2819 excelfile.go:35] row =  1000 , msecs =  84ms\r\n...\r\nI0815 10:16:21.934837    2819 excelfile.go:35] row =  2000 , msecs =  181ms\r\n...\r\nI0815 10:19:48.245594    2819 excelfile.go:35] row =  3000 , msecs =  252ms\r\n... @FU100  Changing my codebase like the below snippet really tuned my endpoint performance\r\n```go\r\nstyle, _ := xlsx.NewStyle(`{\"font\":{\"bold\":true,\"italic\":true,\"family\":\"Berlin Sans FB Demi\",\"size\":10,\"color\":\"blue\",\"underline\":\"single\"}}`)\r\nxlsx.SetCellStyle(\"Sheet1\", \"M1\", \"M10000\", style)\r\nxlsx.SetCellStyle(\"Sheet1\", \"N1\", \"N10000\", style)\r\nfor i := 0; i < 10000; i++ {\r\n\tvar msec1 = time.Now().UnixNano() / 1000 / 1000\r\n\trowIdx := i + 2\r\n\txlsx.SetRowHeight(\"Sheet1\", rowIdx, 15)\r\n    xlsx.SetCellHyperLink(\"Sheet1\", \"M\"+rowNumber, \"./data/201708151534444.jpg\", \"External\")\r\n    xlsx.SetCellHyperLink(\"Sheet1\", \"N\"+ rowNumber, \"./data/201708151534445.jpg\", \"External\")\r\n\trowNum := strconv.FormatInt(int64(rowIdx), 10)\r\n\txlsx.SetCellValue(\"Sheet1\", \"M\"+rowNum, \"link1\")\r\n\txlsx.SetCellValue(\"Sheet1\", \"N\"+rowNum, \"link2\")\r\n\tvar msec2 = time.Now().UnixNano() / 1000 / 1000\r\n\tglog.Infoln(\"row = \", rowIdx, \", msecs = \", msec2 - msec1)\r\n}\r\n``` Is there any other solution? Seems like SetCellHyperLink is very slow in a loop of 10k. It takes between 1 and 2 minutes. Without that function it only takes 10 seconds.  To operate low level for own risk. Why do we need it? Sometimes we just need to do some operations directly without all this \"higher level logic\" to make some changes as fast as possible. So I would suggest to return a pointer to cell at 'SetCellValue'. In that case it will be possible to set style for that cell directly without all this \"resolving required cell in map of maps\".\r\n\r\ne.g.:\r\n```go\r\ncell := xlsx.SetCellValue(\"sheet1\", \"A1\", \"my string\")\r\ncell.S := myStyleID\r\n```\r\n\r\nI tried this way and got almost no decrease in speed (about 30 second), but with previous way to get same result I need about 9 min.\r\nhttps://github.com/plandem/excelize/commit/93f949ef2a4156eb57e11652cb34d89b6976f151\r\n\r\nhttps://github.com/360EntSecGroup-Skylar/excelize/issues/60\r\n What about higher order struct for cells/rows and etc? Like at tealeg/xlsx? In my case, I can't use set style with range. Conditional formatting is not possible too. \r\n\r\nAnd again....why don't use higher order struct that will provide API to cell/row/sheet? E.g. like at tealeg?\r\n\r\n\r\np.s.: what 'File compatibility' are you talking about? Why don't you want to wrap with higher level API like this (just example)?\r\nhttps://github.com/360EntSecGroup-Skylar/excelize/compare/master...plandem:refactor\r\n\r\nP.S.: I'm ready to refactor, but xlsx in not in area of my interests - only one project right now, so mostly no use and I'm not ready to create another xlsx library from the ground. Your library at least works correctly with my files and much faster than tealeg (it reads whole file at open) here are some benchmarks:\r\n```\r\nBenchmarkOldSetValue-4           2000000              1154 ns/op             298 B/op         13 allocs/op\r\nBenchmarkOldSetRangeStyle-4         2000            579100 ns/op           48327 B/op       9493 allocs/op\r\nBenchmarkOldSetCellStyle-4          2000            567783 ns/op           49347 B/op       9472 allocs/op\r\nBenchmarkNewSetValue-4           2000000               919 ns/op             286 B/op         12 allocs/op\r\nBenchmarkNewSetRangeStyle-4         2000            567007 ns/op           48377 B/op       9484 allocs/op\r\nBenchmarkNewSetCellStyle-4       2000000               794 ns/op             272 B/op         10 allocs/op\r\n```\r\n\r\nOld - using current api\r\nNew - using higher order API around your api  When I'm trying to add a comment for each cell in column - I'm getting huge performance degrade - like from 20 sec to 1-2 min :( Is there any way to speed it up?  It seems like this method is not able to retrieve the value of a cell if the sheet name has been changed.\r\ne.g xlsx.GetCellValue(\"Sheet1\", \"A1\") will work while xlsx.GetCellValue(\"Config\", \"A1\") doesn't. Ok. Using the sheet+index works.   I mean why not title, why not just an index? Why sheet1, not 1. Some API wants this meta sheet-id, some wants title, some wants id. It's so confusing. Ok, it's still confusing why sometime we must use id, sheet-id or title. E.g.:\r\n```go\r\nxlsx.SetActiveSheet(ID)\r\nxlsx.SetCellStyle(SHEET_ID, ...)\r\nxlsx.DeleteSheet(SHEET_NAME)\r\n```\r\nI'm not against sheet-id (not sure what benefit we are gaining here, but anyway). But It's really confusing that API for sheet is not consistent :( it would be cool :)     Got it - thanks!  Can't get a way to check if cell has any hyperlink thanks! will check later and write feedback Hmm, I'm getting nil here :( \r\n```go\r\nfunc (f *File) GetCellHyperLink(sheet, axis string) (bool, string) {\r\n\tvar link bool\r\n\tvar target string\r\n\txlsx := f.workSheetReader(sheet)\r\n\taxis = f.mergeCellsParser(xlsx, axis)\r\n\tif xlsx.Hyperlinks == nil || axis == \"\" {\r\n\t\tlog.Println(\"empty hyper\", xlsx.Hyperlinks, axis)\r\n\t\treturn link, target\r\n\t}\r\n....\r\n```\r\n\r\nDocument has hyperlinks that must be \"fixed\" - i.e. to external non-existing file, I can see them at Excel, but I can't get it via library :( Any ideas?\r\n\r\nP.S.: I need to check my file and write at log, that there some external links. ok, \"external\" can point to file also, I mean at Excel I see next link:\r\n```\r\n='/Debian/public/xxxx/yyy/xxxx/[FILE_NAME.xls]SHEET_NAME'!H25\r\n```\r\n\r\nthis file doesn't exist (link is broken) and I'm trying to log such kind of broken links, but I can't get hyperlink for this cell - xlsx.Hyperlinks is nil :(  Windows: basic usage example generates xlsx file that opens by Excel with error: _Replaced Part: /xl/worksheets/sheet1.xml part with XML error.  A document must contain exactly one root element. Line 2, column 0._\r\n\r\nxlsx := excelize.NewFile()\r\nxlsx.SetCellValue(\"Sheet1\", \"B2\", 100)\r\nerr := xlsx.SaveAs(\"./Workbook.xlsx\")\r\n Thank you!  I have a bunch of ``[][]string``, how do I pass ``[]string`` while looping to write it?\r\n\r\nFeature request: something like ``AppendLine(line []string)`` or ``WriteLine(idx int, line []string`` for ease of writing. Right now I have to iterate thru letters to write it with ``SetCellValue()`` which increases complexity. To be clear, what have I done now: https://lab.pztrn.name/pztrn/excelator/src/master/excelator.go#L76\r\n\r\nWhat I want to do:\r\n\r\n```\r\nline := []string{\"First\", \"Second\", \"Third\"}\r\nxlsx.AppendLine(line)\r\n```\r\n\r\nWithout dealing with columns names. This is also available [here](https://godoc.org/github.com/tealeg/xlsx#Row.WriteSlice)\r\n\r\nIn addition to the functionality here, I think an `offset` parameter would be great in case you want to start writing from a specific cell of the column.\r\n\r\nI can submit a PR, once we agree on the function (API) signature.  Just tried example from README to get rows and print them out. On 6M file with 50k rows and 23 columns memory usage was 708036 kilobytes. For 1M file with 10.8k rows and 23 columns it eat 153835 kilobytes of memory. The code was:\r\n\r\n```\r\n    xlsx, err := excelize.OpenFile(filename)\r\n    if err != nil {\r\n        panic(err)\r\n    }\r\n\r\n    rows := xlsx.GetRows(\"sheet1\")\r\n    log.Println(\"Found\", len(rows), \"rows\")\r\n    for _, row := range rows {\r\n        log.Println(row)\r\n    }\r\n```\r\n\r\nI doubt that you can get 27 kilobytes (even megabytes) of memory usage for 12800x50 file.\r\n\r\nChecked on macOS 10.12.6 with golang 1.8.3 and latest git revision. Great, thanks!  There is For loop in every SetCellValue, so as row sum grows, it slows down obviously...  I have an excel with around 150,000 rows and it is very very slow (does not finish even in 15-20mins). Is this normal? Is there a tuning we can make to disable the checks like mentioned in the wiki?\r\n\r\nI think it's good to disable all checks and leave it to the user when desired. @cemremengu you can try `https://github.com/tealeg/xlsx`, and it fast.  Failed to set cell background color with LibreOffice Calc in linux .\r\nafter look at the styles.xml of xlsx file ,it's found that \"xfId\" was missing in cellXfs .\r\nSo the issued was solved by just set XfID in  func setCellXf of file styles.go :\r\n        i := 0\r\n\txf.XfID = &i                                                         //set a value to XfID instead of default nil\r\n\tstyle.CellXfs.Xf = append(style.CellXfs.Xf, xf)   //line  2126\r\n\r\nAnd it in func setFills of file styles.go,  pattern.FgColor.RG was not set .  is it good?  ^ title, is there a way to auto fit columns (auto width)?\r\n\r\nIf not, how to set the width on all cols to fit the content? Hello,\r\n\r\nJust want to know if there is still no solution ?\r\n\r\nThank's for your amazing job !  it support \"External\" and \"Location\" # [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/90?src=pr&el=h1) Report\n> Merging [#90](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/90?src=pr&el=desc) into [master](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/commit/bbed2f6dc9d73bb6ab6e0c7923c18acdafa13cd5?src=pr&el=desc) will **decrease** coverage by `0.19%`.\n> The diff coverage is `57.14%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/90/graphs/tree.svg?width=650&height=150&token=6yoenXP7JO&src=pr)](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/90?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##           master      #90     +/-   ##\n=========================================\n- Coverage   98.03%   97.84%   -0.2%     \n=========================================\n  Files          14       14             \n  Lines        3006     3014      +8     \n=========================================\n+ Hits         2947     2949      +2     \n- Misses         36       40      +4     \n- Partials       23       25      +2\n```\n\n\n| [Impacted Files](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/90?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [cell.go](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/90?src=pr&el=tree#diff-Y2VsbC5nbw==) | `96.81% <57.14%> (-2.37%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/90?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/90?src=pr&el=footer). Last update [bbed2f6...5a4870d](https://codecov.io/gh/360EntSecGroup-Skylar/excelize/pull/90?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n Hi! This is my first commit in open source community.\r\nI may not be familiar with the rules of this community.\r\nIf you have things about my commit, I would like to ask you for any advices.  Hello,I am using your lib in read in some xlsx files. But I fount that \"excelize\" cannot read in the content for every xlsx files.\r\nI attached an example file which I tried out by \"tealeg/xlsx\".\r\nCan you help me finding out the problem(s)? There are 3 sheets in the example xlsx file,But only two can be read out by  \"excelize\". \r\n[errorin360EntSecGroup-Skylar.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1182209/errorin360EntSecGroup-Skylar.xlsx)\r\n Thanks. It works by your code.\r\nI wrote the following code. And it didn't work in some unsure case. Did I use it in a wrong way?\r\n<pre><code>\r\n\tsheets := xlsx.GetSheetMap()\r\n\tfor i := range sheets {\r\n\t\tfmt.Println(i, sheets[i])\r\n\t\trows := xlsx.GetRows(sheets[i])\r\n\t\tfor _, row := range rows {\r\n\t\t\tfor _, colCell := range row {\r\n\t\t\t\tfmt.Print(colCell, \"\\t\")\r\n\t\t\t}\r\n\t\t\tfmt.Println()\r\n\t\t}\r\n\t}\r\n</code></pre> Thanks @xuri  . It works well.  [input.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1179486/input.xlsx)\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"log\"\r\n\t\"time\"\r\n\r\n\t\"github.com/xuri/excelize\"\r\n)\r\n\r\nvar check = func(err error) {\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n}\r\n\r\nfunc main() {\r\n\txlsx, err := excelize.OpenFile(\"input.xlsx\")\r\n\tcheck(err)\r\n\tv, err := time.Parse(\"2006/01/02\", \"2017/07/26\")\r\n\tcheck(err)\r\n\txlsx.SetCellValue(\"Sheet1\", \"A1\", v)\r\n\terr = xlsx.SaveAs(\"./output.xlsx\")\r\n\tif err != nil {\r\n\t\tlog.Fatalln(err)\r\n\t}\r\n\t// Bug: open output.xlsx in excel and the \"D1\" should be 7\r\n} \r\n```  In this example code, it is wrong.\r\n\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"log\"\r\n\r\n\t\"github.com/xuri/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\txlsx := excelize.NewFile()\r\n\tsRow := \"2\"\r\n\tfor i := 1; i <= 5; i++ {\r\n\t\tloc := GetColStr(i) + sRow\r\n\t\tfmt.Println(\"loc=\", loc)\r\n\t\txlsx.SetCellValue(\"Sheet1\", loc, i)\r\n\t}\r\n\tfmt.Println(\"used rows=\", len(xlsx.GetRows(\"Sheet1\"))) // should be 2\r\n\t// Bug1: Used Range of Sheet1 is \"A1..E5\", but should be \"A1..E2\"\r\n\terr := xlsx.SaveAs(\"./bug1.xlsx\")\r\n\tif err != nil {\r\n\t\tlog.Fatalln(err)\r\n\t}\r\n}\r\nfunc GetColStr(x int) string {\r\n\tcolName := \"\"\r\n\tfor x > 0 {\r\n\t\tdigit := (x - 1) % 26\r\n\t\tcolName = string(int('A')+digit) + colName\r\n\t\tx = (x - 1 - digit) / 26\r\n\t}\r\n\treturn colName\r\n}   @xuri, I found there is SetCellStyle(v,\"A9\",\"A9\", `{\"number_format\":22}`) method to setup time value.\r\nBut, I can not save as format like 'yyyy/mm/dd' or 'yyyy/m/d'. \r\nIs it possible to support a custom format method like this\r\n\r\n`[DBNum1][$-404]e\"\u5e74\"m\"\u6708\"d\"\u65e5\";@`\r\n\r\nhttp://www.myonlinetraininghub.com/excel-dates-displayed-in-different-languages What's the difference between 'zh-tw':{ 27: \"[$-404]e/m/d\"}  and 'zh-tw':{ 36: \"[$-404]e/m/d\"}?\r\nI guess that is mapping to \u897f\u66c6(2007) & \u4e2d\u83ef\u6c11\u570b\u66c6 ( 106=2007-1911), so it require a year subtract function when convert the number into string.\r\n\r\nBTW, have you ever read [this document](https://blogs.msdn.microsoft.com/brian_jones/2007/05/29/simple-spreadsheetml-file-part-3-formatting/)  , maybe it is useful for customized format @xuri, \r\n1. could you put example of builtin & custom number format in README.md?\r\n2. In my Excel 2007(zh_TW), the `{\"number_format\":14}` will set the output as 'yyyy/mm/dd'.  But in excelize's document, it is 'm/d/yy'.'  I am trying to hide the columns of a spreadsheet from my debian ubuntu gnome.\r\nI'm using the xlsx.SetColVisible(\"Sheet1\", \"N\", false) method, however when I reopen the xlsx in Libre Office, nothing has changes.\r\nWhen I uploaded the xlsx document to google docs, it hid the **\"N\"** Column properly.\r\nWhen I opened the xlsx document on a windows vm with MS Excel the column was hidden successfully.\r\nIs there a config  or something I am missing in the code to ensure it hides on linux's Libre Office ? \r\nI am running go 1.8.3 and using ubuntu gnome 16.04 LTS\r\nPlease assist Hi \r\nThis is the file after being edited through the go program\r\nPlease see attached :\r\n\r\n**NB** : I have removed critical data from spreadsheet \r\n[sample.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1169062/sample.xlsx)\r\n Apologies for miscommunication. This is a copy of the spreadsheet and in this copy I've hidden `L` as you have said.\r\n\r\nPlease see updated xlsx document : \r\n[sample.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1169274/sample.xlsx)\r\n\r\nAlso Please see the following screenshots from Libre Office & google sheets. I have the same template open : \r\n![googlesheets](https://user-images.githubusercontent.com/15342622/28515680-c5babbfc-705e-11e7-9846-f347fcdfa9c7.png)\r\n![libreoffice](https://user-images.githubusercontent.com/15342622/28515681-c5bc55ac-705e-11e7-9a03-7a271dc07d0f.png)\r\nI am running Libre Office  Version: 5.1.6.2\r\n\r\n\r\n\r\n I have but I see that there's been recent changes as well.\r\nI'm going to update, test and get back to you No luck yet. I am going to uninstall go and the xuri package. Would having both the ***xuri*** and the previous ***Luxurioust*** package influence the program in any way even though I'm importing the ***xuri*** package in my program ? There's been no difference.\r\nThe customer's I'm creating this for won't be in use of linux, so I'll leave it as is for now.\r\nThanks for your assistance though  Hello, Ri. \r\n\r\nUnder Linux (I tested on Astra Linux) the library writes an incorrect xlsx file. Help, please, this is very important for me.\r\n\r\npackage main\r\n\r\nimport (\r\n\t\"github.com/Luxurioust/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\txlsx, _ := excelize.OpenFile(\"1.xlsx\")\r\n\txlsx.SetCellValue(\"Sheet1\", \"A1\", 100)\r\n\txlsx.SaveAs(\"2.xlsx\")\r\n}\r\n\r\nAttachment:\r\n1.xlsx - file created for windows\r\n2.xlsx - file created for windows\r\n2_linux.xlsx - file created for linux \r\n\r\n[1.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1165155/1.xlsx)\r\n[2.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1165156/2.xlsx)\r\n[2_linux.xlsx](https://github.com/360EntSecGroup-Skylar/excelize/files/1165157/2_linux.xlsx) Thank you! I'll check. Yes, I have 1.7.5. I understand everything, I'll update the Go. Many thanks!  Hi!\r\nI am using pre-created .xlsx file as a report template. Sometimes I need repeat set of rows. Would be nice to have a method what can receive (startRow, endRow) and be able to insert that rows before nRow.\r\n\r\nWhat do you think? Is it possible now?\r\nThx\r\nRegards, Robert Hi, xuri. Could you please give your wechat or QQ? It will be easy to communicate with wechat or QQ.\r\nI want to contribute the project. I think Insert, Delete and Copy Row are very nice to have.\r\nthank you very much.\r\n\r\n  It seems that neither `InsertRowAfter(rn int)`  nor `InsertRowBefore(rn int)` function is supported.\r\nand neither  `InsertColumnAfter(cn int)`  nor `InsertColumnBefore(cn int)` function is supported.\r\n\r\nIt's useful when combining a template with dynamic data [varied rows or columns].\r\n \r\nAny suggestion? Thank you! Thank you! \r\nI've tried ` InsertRow()` and it works.\r\n\r\n   \r\n  1. open xlsx (quite complex formatting - styles and etc)\r\n2. copy from Col A into Col B\r\n3. set Col A equal 0\r\n4. save as a new file - files looks different :(\r\n\r\nsome cells at each row can be merged, BUT Col A, and Col B are simple - only style formatting.\r\n\r\nMore overs, some rows(quite a lot) that I'm not updating - after saving looks different.\r\n\r\nLet's recap - I only update some simple cells at some rows. Why rows that I'm not touching looks different?! :( hi. I will try to remove critical data and prepare file for you.\r\nBtw...what edition is your library based on?!\r\n\r\nhttp://www.ecma-international.org/publications/standards/Ecma-376.htm ok, here are files:\r\n\r\n**before** updating\r\nhttps://www.dropbox.com/s/h5doil7usuw3zhs/before.xlsx?dl=0\r\n\r\n**after** updating\r\nhttps://www.dropbox.com/s/0yo3mwk1mcpgic8/after.xlsx?dl=0\r\n\r\nWhat steps to reproduce:\r\n1) open **before** \r\n2) at sheet **3.1** set 2 values - row 10\r\n3) at sheet **3.2** set 2 values - row 37\r\n4) save as a new file\r\n\r\nOpen a new file and you will see that at sheet **3.2** we have broken formatting.\r\n\r\nI can't provide any data(to much to cleanup), but  right now looks like only formatting on this page breaks. **3.1** looks fine.\r\n\r\nP.S.: file size of **after** is much lesser (about 300k) @xuri Probably it's a good idea to write at Readme about ECMA-376 5th edition Well, it's much better now, but still looks different.\r\n\r\nbefore (3.8Mb file):\r\nhttps://www.dropbox.com/s/23s3i0rpss6ahyp/Screenshot%202017-07-15%2019.56.27.png?dl=0\r\n\r\nafter(3.3Mb file):\r\nhttps://www.dropbox.com/s/rmp951a4xodzgfi/Screenshot%202017-07-15%2019.56.51.png?dl=0\r\n\r\nhave no ideas why :( And file is still lesser by 500kb after saving :( 500Kb somewhere gone. If it's important, look for G14 at 3.2 sheet. I'm talking about these cells - lost their formatting after saving:\r\nhttps://www.dropbox.com/s/4zwe4hwuxinwvav/Screenshot%202017-07-15%2023.35.41.png?dl=0 @xuri do you mean that somewhere **completeCol** do something with cell that I didn't touch?! \r\n\r\nP.S.: about performance - impact is not so high, at least for my case (about 10K rows) I checked generated file - visually looks same! Huh....thanks man, I started to afraid that I did a bad choice to choose Go without testing saving ability of xls libs.\r\n\r\nI will get feedback from end-user next week probably, maybe I miss something. Hope everything is fine now :) I got another problem. After adding a new Sheet at that file I'm getting \"Corrupted file\" and sometimes Excel can't repair it. I need to \"prepare data\". But at least one issue is:\r\nsteps:\r\n1) file was saved at osx Excel(2016 year)\r\n2) opened that file at osx Excel(2011) and he asks to fix corrupted file, after successful fix save it\r\n3) open at osx Excel(2016) - he asks to fix corrupted file.\r\n\r\nLooks like there is something that break file :( Probably original issue was because of that.\r\n Ok, looks like it has nothing with starter issue, so i'm closing it and will create a new one if required.  Cant figure out how to do currency format..\r\n\r\nDoes anyone know which number_format I can use in SetStyle?\r\n\r\n<img src='https://image.prntscr.com/image/6_uG98v-Q-_JwKfbDtxL-w.png' />  I scanned the doc reference. I could not find the func for reading a merged cell. Even the GetRows can give the content of the xlsx file,  only the first cell(original cell) of the big merged cell (both merged row and column) can  get the content in the merged cell.\r\nIs there any methods can I distinguish the merged cell and the blank cell in black box? @xuri  Thanks for your prompt response. It works now. @xuri How to get merged cell info, as `github.com/tealeg/xlsx` does:  \r\n`cell := GetCellInfo()`,  cell contains `HMerge` and `VMerge` and other info.\r\n\r\nI want to merge cells in column B,C,D,etc, according to column A (grouped marking by merging cells).\r\n\r\nThanks!\r\n  Hi, guys! Is there any way to remove row? I'm trying to use next way:\r\n`cycleXLSX.Sheet[\"xl/worksheets/sheet1.xml\"].SheetData.Row = append(cycleXLSX.Sheet[\"xl/worksheets/sheet1.xml\"].SheetData.Row[:irow], cycleXLSX.Sheet[\"xl/worksheets/sheet1.xml\"].SheetData.Row[irow+1:]...)`\r\nBut the meta-data should be recalculated.  Fantastic library!!! - Hoping to invoice a bit more for excel format for up coming project and I'd like a way to donate some of that back to you.. \r\n\r\nGet a donate button somewhere :)  Do you plan to read / write Conditional Formatting add?\r\nThnks. How is the progress in implementation? Well thank you. Will wait. :)\r\n\u0423\u0441\u043f\u0435\u0445\u043e\u0432 ! :) Nice, nice. Now let's try)) It nice. Perfect work.  When support of the type  \"formula\" - \"expression\"?\r\nThnks How to add multiple rules \"cfRule\" with different priority to one conditional formatting declaration? \r\nExample:\r\n```\r\n<conditionalFormatting sqref=\"G16:G29\">\r\n<cfRule type=\"expression\" priority=\"2\" aboveAverage=\"0\" equalAverage=\"0\" bottom=\"0\" percent=\"0\" rank=\"0\" text=\"\" dxfId=\"0\">\r\n<formula>AND($G18>0,$G18>MIN($H18:$J18),MIN($H18:$J18)>0)</formula>\r\n</cfRule>\r\n<cfRule type=\"expression\" priority=\"3\" aboveAverage=\"0\" equalAverage=\"0\" bottom=\"0\" percent=\"0\" rank=\"0\" text=\"\" dxfId=\"1\">\r\n<formula>AND($G18>0,$G18<MIN($H18:$J18))</formula>\r\n</cfRule>\r\n<cfRule type=\"expression\" priority=\"4\" aboveAverage=\"0\" equalAverage=\"0\" bottom=\"0\" percent=\"0\" rank=\"0\" text=\"\" dxfId=\"2\">\r\n<formula>AND($G18>0,$G18=MIN($H3:$J3))</formula>\r\n</cfRule>\r\n</conditionalFormatting>\r\n``` Yes thank you. I create such an object, either the last value, or nothing at all in the file. Or am I doing something wrong?\r\n` xlFile.SetConditionalFormat(\"Sheet1\", fmt.Sprintf(`G%d:G%d`, start_position, rows), fmt.Sprintf(\"[{\"type\":\"cell\",\"criteria\":\"<\", \"format\":%d,\"value\":\"$H%d\".\"type\":\"cell\",\"criteria\":\">\",\"format\":%d,\"value\":\"$H%d\"}]\", format_green, start_position, format_red, start_position))`\r\n\t\t\t  \u6211\u4eec\u60f3\u77e5\u9053\u66f4\u6539api\u7684\u539f\u56e0 \u4e3a\u4ec0\u4e48\u6ca1\u6709\u4fdd\u7559\u65e7\u7684api\uff0c\u53ef\u4ee5\u6ce8\u91ca\u5e9f\u5f03\u7684\u554a It is better to mark a 'tag' or version, if it is not compatible with old API  How to correctly read the date/time from the cell? I will explain the problem:\r\n\r\nIn the Excel file there is a cell:\r\nE7 => 29.06.2017 9:28:48\r\nFormat: \"14-Mar-12\"\r\n\r\nI'm trying to get it...\r\n\r\n`e7 := xlsx.GetCellValue(\"Sheet1\", \"e7\")`\r\n`println(e7)`\r\n\r\nOutput: \"42915.395\" xlsx?\r\n[1_2017-06-29.xlsx](https://github.com/Luxurioust/excelize/files/1112114/1_2017-06-29.xlsx)\r\n Now it is clear. Thank you!  It is really useful when developers want to set the style of a new cell as same as an existent cell (format painter).\r\n I join the request. In our project, too, there is such a need. We need this for integration with a xlsx js library. Thank you! It will be useful. I hope that GetCellStyle will also appear.  Reading a .xlsx file with a sheet of 780 rows and 5 columns:\r\n\r\n- Using function \"GetRows\": less that 1 second.\r\n- Using function \"GetCellValue\" with looping construct: about 60 seconds.\r\n\r\nEnvironment:\r\n\r\n- golang 1.8 darwin/amd64\r\n- Macbook Air (1.3 GHz CPU & 8GB RAM)\r\n Thanks.\r\n\r\nPS: it is quite strange to communicate with another Chinese by using English.\r\n\r\n:-)\r\n  **Test Code**\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\r\n\t\"github.com/Luxurioust/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\t// read\r\n\txlsx, err := excelize.OpenFile(\"test-before.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Printf(\"%s\\n\", err.Error())\r\n\t\treturn\r\n\t}\r\n\ttable := xlsx.GetRows(\"sheet1\")\r\n\tfmt.Printf(\"\\n\")\r\n\tfmt.Printf(\"Before:\\n\")\r\n\tfor i := 0; i < len(table); i++ {\r\n\t\tfor j := 0; j < len(table[0]); j++ {\r\n\t\t\tfmt.Printf(\"%s \", table[i][j])\r\n\t\t}\r\n\t\tfmt.Printf(\"\\n\")\r\n\t}\r\n\t// change\r\n\txlsx.SetCellValue(\"sheet1\", \"A2\", \"A2\\nExample 2\")\r\n\txlsx.SetCellValue(\"sheet1\", \"B2\", \"A2\\n\u4f8b\u5b502\")\r\n\t// write\r\n\txlsx.SaveAs(\"test-after.xlsx\")\r\n\t// read again\r\n\txlsx, err = excelize.OpenFile(\"test-after.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Printf(\"%s\\n\", err.Error())\r\n\t\treturn\r\n\t}\r\n\ttable = xlsx.GetRows(\"sheet1\")\r\n\tfmt.Printf(\"\\n\")\r\n\tfmt.Printf(\"After:\\n\")\r\n\tfor i := 0; i < len(table); i++ {\r\n\t\tfor j := 0; j < len(table[0]); j++ {\r\n\t\t\tfmt.Printf(\"%s \", table[i][j])\r\n\t\t}\r\n\t\tfmt.Printf(\"\\n\")\r\n\t}\r\n\tfmt.Printf(\"\\n\")\r\n}\r\n```\r\n\r\n**Test File**\r\n\r\n[test-before.xlsx](https://github.com/Luxurioust/excelize/files/1110550/test-before.xlsx)\r\n![test-before](https://user-images.githubusercontent.com/20331014/27666036-8e32ad26-5ca3-11e7-9e0d-89f3a04f83ea.png)\r\n\r\n[test-after.xlsx](https://github.com/Luxurioust/excelize/files/1110551/test-after.xlsx)\r\n![test-after](https://user-images.githubusercontent.com/20331014/27666038-9739d0e8-5ca3-11e7-94af-e5651a27baa5.png)\r\n\r\n**Test Environment**\r\n\r\n- golang 1.8 darwin/amd64\r\n- Microsoft Excel 2016 for Mac\r\n\r\n**Problem**\r\n\r\nIt seems like excelize can parse multiline texts in cells (with '\\n' in the middle). However, multiline texts written by excelize could not be displayed correctly by Microsoft Excel, though they can be parsed correctly by excelize again. I got it.\r\n\r\nThis is a little bug of Microsoft Excel 2016 for Mac.\r\n\r\nHere is the solution: double click one of non-empty cells and then save.\r\n\r\nAfter doing these, all multiline texts will be displayed correctly.  It is really useful when developers want to set the height (width) of a new row (column) as same as an existent row (column). Thanks.\r\n The unit of the return value of function \"GetRowHeight\" (Pixels) is different from the 3rd parameter of function \"SetRowHeight\" (ht).\r\nSo developers have to copy code from function \"convertRowHeightToPixels\" to convert by themselves.\r\nFunction \"GetColWidth\" and function \"SetColWidth\" also have such difference.\r\n\r\nPlease at least point out this difference in the annotation, thank you. Here is another difference. \r\nThe 2nd parameter of function \"GetRowHeight\" is \"row\" (begin with 1).\r\nThe 2nd parameter of function \"SetRowHeight\" is \"rowIndex\" (begin with 0).\r\n\r\n:-) Thanks.\r\n  How to get the number of sheets in a .xlsx file?\r\nHow to get the number of rows and columns in a sheet?\r\n Thanks.\r\n\r\n Sorry to bump an old issue, but is it possible to get the number of rows/colums without reading the whole file, which `GetRows()` seems to do? Or at least something that short-circuits all the parsing and returns the result of https://github.com/xuri/excelize/blob/9e463b4614348b3ddc04b1fedd5d662845ce0fb9/rows.go#L159-L189 directly?  Hi thanks again for the great work.  I've been copying out the function **toAlphaString()** to use for myself. It would be neater to see it available direct from **excelize**, something like  **excelize.ToAphaString()**.   Yes?\r\n\r\n Thanks so much!! :)   How to get the computed value of a cell, after applying the formula, which is written into the cell? For example, A1 = 1, A2 = 2, A3 = SUM (A1: A2)\r\n`xlsx.GetCellValue(\"Sheet1\", \"A3\")` -> \"\"\r\nCan I extract 3? Got it. Is it a laborious functional? Is it difficult to implement it? Maybe it can be ported from tealeg/xlsx? Yes, indeed, this is not the easiest task. \r\n\r\nIn tealeg/xlsx it is possible to read the already calculated value.\r\n\r\nExample: \r\n1.xlsx => A1 = 1, A2 = 2, A3 = SUM(A1: A2)\r\n\r\n`excelFileName := \"1.xlsx\"`\r\n`xlFile, _ := xlsx.OpenFile(excelFileName)`\r\n\r\n`a1 := xlFile.Sheets[0].Rows[0].Cells[0]`\r\n`a1.SetInt(100)`\r\n\r\n`a3:= xlFile.Sheets[0].Rows[2].Cells[0]`\r\n`println(a3.Value)`\r\n\r\nOutput:\r\n3\r\n\r\nThere is no recalculation here, but the calculated value can be read. Maybe it's easier to implement? Such a functional would also be useful. Ok. So, I missed something. But... Here's the script I'm interested in:\r\n\r\n1.xlsx => A1 = 1, A2 = 2, A3 = SUM(A1: A2)\r\n\r\n`xlsx, _ := excelize.OpenFile(\"1.xlsx\")`\r\n\r\n`a1 := xlsx.GetCellValue(\"Sheet1\", \"A1\")`\r\n`a2 := xlsx.GetCellValue(\"Sheet1\", \"A2\")`\r\n`a3 := xlsx.GetCellValue(\"Sheet1\", \"A3\")`\r\n`println(a1, a2, a3)`\r\n\r\n`xlsx.SetCellValue(\"Sheet1\", \"A1\", 100)`\r\n`xlsx.WriteTo(\"2.xlsx\")`\r\n\r\n`xlsx, _ = excelize.OpenFile(\"2.xlsx\")`\r\n`a1 = xlsx.GetCellValue(\"Sheet1\", \"A1\")`\r\n`a2 = xlsx.GetCellValue(\"Sheet1\", \"A2\")`\r\n`a3 = xlsx.GetCellValue(\"Sheet1\", \"A3\")`\r\n`println(a1, a2, a3)`\r\n\r\nOutput:\r\n1 2 3\r\n100 2 3\r\n\r\nIs it possible to somehow get 102?\r\n\r\nThat is, I just want Excel to recalculate the values I've entered and saved. \r\n\r\nMaybe I want too much, because it's just an xml file... Well, all right. Life goes on. Thank you very much for the clarification! Here is a tested workaround how to invoke MS Excel recalculation engine from MS Power Shell. \r\n\r\nCreate poweshell script with a name excel.ps1:\r\n```\r\nparam([string]$ExcelFile)\r\nWrite-Host \"Updating calculated values for\", $ExcelFile\r\n$excl=New-Object -ComObject Excel.Application\r\n$excl.Visible = $true\r\n$wrkb=$excl.Workbooks.Open($ExcelFile)\r\n$excl.DisplayAlerts = $TRUE\r\n$Excel.Calculation = -4135\r\n$excl.CalculateBeforeSave = $true\r\n$wrkb.Save()\r\n$wrkb.Close()\r\n$excl.Quit()\r\n[System.Runtime.Interopservices.Marshal]::ReleaseComObject($excl)\r\n```\r\nIn your go program create a new function \r\n```\r\nfunc invokeExcelCalculationEngine(file os.FileInfo, fullFileName string) {\r\n  log.Debugln(\"Entering invokeExcelCalculationEngine\")\r\n  script := \"./excel.ps1 \" + fullFileName\r\n  cmdOut, err := exec.Command(\"powershell.exe\", script).Output()\r\n  if err != nil {\r\n    log.Fatal(err)\r\n  }\r\n  log.Debugf(\"Command output: %v\", string(cmdOut))\r\n}\r\n```\r\nAnd in your go program, where you are saving the excel file, use the folowing code to save it and to force external recalculation:\r\n```\r\nfullFileName := \"output_excel.xslx\"\r\nxlsx.UpdateLinkedValue()\r\nerr = xlsx.SaveAs(fullFileName)\r\nif err != nil {\r\n  log.Debugln(err)\r\n}\r\n// update calculated fields with workaround\r\nfullFileName = \"\\\"\" + fullFileName + \"\\\"\"\r\ninvokeExcelCalculationEngine(file, fullFileName)\r\n```\r\n\r\nEnjoy. Simplification of this code is welcomed.  ![image](https://user-images.githubusercontent.com/3291453/27527997-e9bb7a94-5a80-11e7-91b2-5ce9f6dd2e55.png)\r\n thx\uff0c\u6211\u518d\u8bd5\u4e00\u4e0b \u5df2\u7ecfOK\uff0c\u8bfb\u53d6\u901f\u5ea6\u548c\u4e4b\u524d\u7684\u7248\u672c\u4e00\u6837\u4e86\uff0c3Q  Maybe it will come in handy for someone else...\r\n\r\nI did not have enough functions in the library to convert arbitrary coordinates i, k (x, y) to the address of the cell. I took advantage of this decision: https://stackoverflow.com/a/32532049\r\n\r\nGolang:\r\n\r\n```\r\nfunc toCell(i int) string {\r\n   if i < 0 {\r\n      return \"\"\r\n   }\r\n   return toCell((i/26)-1) + string(65+i%26)\r\n}\r\n```\r\n\r\nUsing:\r\n```\r\n\r\ncell := toCell(i)\r\ncur := fmt.Sprintf(\"%s%v\", cell, k+1)\r\n```\r\n I did not know. Thanks for the info. Very useful functionality when working together with other js xlsx libraries (there is usually a numerical numbering). Maybe it makes sense to make it exportable?! As an helper\u2026 Thank you! > titleToNumber provides function to convert Excel sheet column title to int.\r\n\r\nIf I understood correctly, then this is an inverse function. Can it also be exported?  Excellent. Thank you!  Hello.\r\n\r\nPlease help me with date substitution and formatting. There is an xlsx file (template), it has a field of type Date, it has a format, for example: 14-Mar-12\r\n\r\nUsing the library, I substitute my date value, for example: 2017-06-23 14:04:05 I expect that the inserted date will be of the specified format, but it is not. The inserted value is displayed unchanged: 2017-06-23 14:04:05\r\n\r\nIf start Excel, open the saved file and double-click on this field, it is converted according to the specified format. How to do this with your library?\r\n\r\nIs there an analog UpdateLinkedValue() to update the date according to the format specified in the template?\r\n\r\nThank you! Excellent, great thanks! Our project is rescued :). On Monday at work I'll try a new version.\r\nP.S. Wonderful library! How to set the date correctly? If I use\r\n`xlsx.SetCellValue (\"Sheet1\", \"D7\", time.Now())`\r\nI get ######\r\n Excuse me, in Excel I'm a noob :). Everything worked out. Thank you! Hi @Luxurioust , when passing time.Time it indeed works but when later I do a setCellStyle for a very big range (where some, not all, columns have date values) \r\n\r\n`xlsx.SetCellStyle(\"Sheet1\", \"A1\", \"ZZ100\", `{\"alignment\":{\"wrap_text\":true}}`)`\r\n\r\nI lose the date formatting. Is there a way how I can ADD extra formatting (the wrap_text in this case) rather than OVERWRITING them?  how to know the sheet or cell is hiden? @Luxurioust thank you. and is there a function with column? thank you  Hi Luxurioust,\r\n\r\nwhen I want to apply a style to a larger (but not huge) amount of cells it takes more than a minute (see code below)\r\n\r\n`err = xlsx.SetCellStyle(\"Sheet1\", \"A1\", \"A6500\", `{\"alignment\":{\"wrap_text\":true}}`)`\r\n\r\nIs there a way to improve this? FYI: I want to apply this style to the whole spreadsheet, so if there is a more performant way to do this, shoot! (Sidenote 2: writing the file is also A LOT slower when these cell styles have been applied)\r\n\r\nAlso, I'm calling ` xlsx.SetCellValue(\"Sheet1\", laxis, value)` 6500 times. This is done quite quickly but could it not be faster if we pass a `[]interface{}` or `[][]interface{}` to something like `SetCellValueArea()` ?\r\n\r\nGreetings,\r\nPJ This is indeed fixed. Thanks!\r\n\r\nMy second question is still open, is there no more efficient way to pass a an array of 2D array of data instead of calling `xlsx.SetCellValue(\"Sheet1\", laxis, value)` a very large number of times? Well, for me it's still quite slow :( I have 3k rows with 14 cols and each row has at least 1 cell with style (\"red background\") to mark a bad cell. Without styles it takes about 30sec to generate, but with styles 9 min!!! Is there any way to optimize it?  Hi Luxurioust,\r\n\r\nfirst of all, AWESOME library. Got it up and running in no time thanks through the great documentation.\r\n\r\nYou know what would make excelize even better? Having a way to enable auto filter. I've searched around and it should be possible. See http://xlsxwriter.readthedocs.io/working_with_autofilters.html\r\n\r\nI dug around a bit in the python source code and most of the logic is defined here https://github.com/jmcnamara/XlsxWriter/blob/master/xlsxwriter/worksheet.py#L1472 (however I don't understand a whole lot of it... ) Hopefully you do  \r\n\r\nI'm not an advanced enough go developer to create a good PR, but would be very grateful if you could add this feature to excelize. @Luxurioust Wow, great work! Thanks a lot.\r\n\r\nI started to use it (just as `err = xlsx.AutoFilter(\"Sheet1\", \"A1\", \"D4\", \"\")` without any extra filters).\r\n\r\nIs this production ready? Because you wrote \"I have initialized ...\", does this mean this is work in progress? On my side everything seems to work. = AWESOME  When I open an existing xlsx file and try to add a picture to a sheet which already has some pictures in it,  existing pictures will be corrupted or removed and the picture I'm trying to add is not added to the sheet.\r\n\r\nMy code:\r\n\r\n``` go\r\nfunc main() {\r\n\txlsx, err := excelize.OpenFile(\"./tmp.xlsx\")\r\n\tif err != nil {\r\n\t\tlog.Println(err)\r\n\t }\r\n\r\n\tif err = xlsx.AddPicture(\"Sheet1\", \"E5\", \"./test.jpg\", `{\"x_scale\": 1, \"y_scale\": 1}`); err != nil {\r\n\t\tlog.Println(err)\r\n\t}\r\n\r\n\terr = xlsx.WriteTo(\"./Workbook.xlsx\")\r\n\tif err != nil {\r\n\t\tlog.Println(err)\r\n\t\tos.Exit(1)\r\n\t}\r\n}\r\n```\r\n\r\nBase xlsx file:\r\n[tmp.xlsx](https://github.com/Luxurioust/excelize/files/1049467/tmp.xlsx)\r\n\r\n\r\nAfter adding the picture:\r\n[Workbook.xlsx](https://github.com/Luxurioust/excelize/files/1049468/Workbook.xlsx)\r\n\r\n\r\n  I have set the cells (approx. 300) as text i.e. \"05-29-17\" and the .xlsx file, it saves in seconds... When I set the cells to a Go Time type and save the .xlsx file, it takes almost a minute! -- Anyhow, it's a Great package! Thanks for sharing! Thank you for the awesome package. You should have a 'Donate Now' button somewhere. I would gladly send you a beer!  Hello. First of all I really grateful for your work.\r\n\r\nFound some strange behaviour of func UpdateLinkedValue.\r\nI have two sheets - first with real data and second with linked data from first one.\r\nOn the second sheet with linked data I use auto formatting rules. In my situation it is adding background color to cell depends on percentage, for example red background if 90% and more.\r\n\r\nIf I don't using UpdateLinkedValues I don't loose auto formatting, but linked data doesn't update.\r\nIf I using UpdateLinkedValues I loose auto formatting, but linked data updates. Cool. Thanks. Work really better. But still one moment.\r\nIf I have multiple rules for one cell, I suppose it's because of that, they don't apply as expect.\r\nFor example\r\nI have an auto rule - 90% red color, 90%-70% yellow color, less then 70% green color.\r\nAfter using UpdateLinkedValue(), linked cells updates but value in source cell is for example 20%, but color in linked cell is red (for some reasons, I don't know why).\r\nIf I after that in Excel change value in source cell from 20% to for example 80%, I see yellow color in linked cell (as expected). In attachment two files:\r\nFirst - is a template, which is used for adding data\r\nSecond - is the result file after adding data to cells and using UpdateLinkedValue\r\nSheet 7 is the result aggregated file with linked cells and auto formatting rules.\r\n[result.xlsx](https://github.com/Luxurioust/excelize/files/1028744/result.xlsx)\r\n[template.xlsx](https://github.com/Luxurioust/excelize/files/1028745/template.xlsx)\r\n I tried your variant but with no success :(\r\nI attache an example, similar to what I use.\r\nFirst I found that I become to loose formatting (suppose because of that fix #54 )\r\nSecond I still can't reach need result - percent on source sheet3 and linked sheet7. And colors of course.\r\nSuppose, I use your code not correctly. But where?\r\nYou can repeat what I do by rename template.xlsx to result.xlsx, and apply the code.\r\nJust add that previously I used\r\n`xlsx.SetCellStr(sheet, cell, strconv.Itoa(int(value))+\"%\")`\r\nin WriteToXlsxPrc func.\r\n[temp.go.txt](https://github.com/Luxurioust/excelize/files/1031136/temp.go.txt)\r\n For some reasons, after running temp.go file, result is like an attached file.\r\nFormatting on Sheet3 in column G is lost (I mean borders).\r\nIf I checkout to - 7c3f91ada483194018fca95c6caae03b22247d52, and run code again - borders are on their places.\r\n[result.xlsx](https://github.com/Luxurioust/excelize/files/1034897/result.xlsx)\r\n Perfectly well! I suppose this issue can be marked as closed.\r\nAlso I should say that percent cell also work as expected.\r\nFor me\r\n`\"number_format\": 9,`\r\nin SetCellStyle, and\r\n`SetCellValue(sheet, cell, value/100.00)`\r\nwere the solution.\r\nMay be it is the normal behaivour of Excel, to make percents in cell as Value * 100%, but for me it was really surprised.\r\nMay be it will be helpful for others if you add some demo code, how to work with percent cells.\r\nAgain thanks for your work.  Hello. First of all I really grateful for your work.\r\n\r\nDon't know bug or not, but I found some strange behavior of func SetCellStyle.\r\nIf I already have some formating, for example borders, and I try to add for example red color to cell, I loosing borders.\r\nMay be it is normal, but in this way it would be useful to have func like AddCellStyle or something similar. seconded!  Hi hope all is well. Great work that i'm benefiting from so thanks very much.\r\n\r\nWith .SetCellValue(), .SetCellStr(), and .SetCellInt(), they make decisions about the alignment of the result, which is not bad per se.  I know i can use .SetCellStyle() afterwards. But it would be very handy to have a function that respects the existing style.  I wish to be able to set all the styles i need within an Excel file as a kind of report template, outside of Go, then use Go to populate it, and not even need to know what the styles are within my Go code.  For example a column that is already center-aligned, would be great if a function that can keep it center-aligned, or whatever the style might be, including font, color, date formatting, currency etc.\r\n\r\nSomething like a .SetCellValueWithStyleRetention().  Or is there already a way to achieve this with the existing functions? Thanks for the quick response.  Attached are Book1.xlsx and Book2.xlsx.\r\nI created Book1.xlsx outside of Go, then made a copy of it, which is Book2.xlsx.\r\nThen i run the Go code (so to speak) on Book2.xlsx.\r\nYou are correct when the cells have existing content, but when the cells do not have existing content, that's when the functions appear to make those decisions.\r\n[Book1.xlsx](https://github.com/Luxurioust/excelize/files/1028537/Book1.xlsx)\r\n[Book2.xlsx](https://github.com/Luxurioust/excelize/files/1028538/Book2.xlsx)\r\n[test_excel.go.txt](https://github.com/Luxurioust/excelize/files/1028544/test_excel.go.txt)\r\n\r\n\r\n\r\n I'm using Excel 2010 in case that might be relevant. Thanks so much @xuri you're the best!!  :+1:   when calling `.Token()` function of type `*xml.Decoder`, error returned is ignored when it should be handled.\r\nline: `token, err := decoder.Token()` inside function `getTotalRowsCols()`  When read a xlsx file with  complex border , Inserted picture shows error.\r\n![1494499107](https://cloud.githubusercontent.com/assets/8806281/25945526/cac39746-3679-11e7-9c02-cc649cd6856d.png)\r\n![1494499121](https://cloud.githubusercontent.com/assets/8806281/25945534/d2b29f7e-3679-11e7-9f51-355f3cc44730.png)\r\n[Workbook.xlsx](https://github.com/Luxurioust/excelize/files/992721/Workbook.xlsx)\r\n\r\n```\r\nfunc main() {\r\n\txlsx, _ := excelize.OpenFile(\"./Workbook.xlsx\")\r\n\r\n\terr := xlsx.AddPicture(\"Sheet1\", \"A2\", \"./1.jpg\", `{\"x_offset\": 15, \"y_offset\": 10, \"print_obj\": true, \"lock_aspect_ratio\": false, \"locked\": false}`)\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t}\r\n\terr = xlsx.WriteTo(\"./Workbook1.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\tos.Exit(1)\r\n\t}\r\n}\r\n``` @xuri It works! Error because I tested it in an old go version!  Hi,\r\n\r\nIf I open a xlsx file and want to write to some cells in sheet where sheet name is not in format of \"SheetX\"\r\nafter xlsx file is saved, there is no entry in the cell if you open a file with Excel.\r\nAnother thing is if I use xlsx.CreateFile() I'm aware that I get only one sheet with name \"Sheet1\" and I can write to the cells of \"Sheet1\".\r\nWhen I do xlsx.NewSheet(2, \"Sheet2\") I can write to cells in \"Sheet2\". But if instead od \"Sheet2\" I put \"Test_1\" for example, then if I write to some cells in this sheet, this cannot be seen in Excel.\r\n\r\nOnly workaround I found is to create new sheets with name \"SheetX\" then do whatever you need and before saving use xslx.SetSheetName(\"Sheet2\", \"Test_1\") for example. Ok.\r\nThank you for the explanation.  panic: runtime error: invalid memory address or nil pointer dereference\r\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x4d96f7]\r\n\r\ngoroutine 1 [running]:\r\ngithub.com/Luxurioust/excelize.(*File).formattedValue(0xc4200504b0, 0x1, 0xc4200f9982, 0x6, 0x0, 0x0)\r\n        /home/dlin/go/src/github.com/Luxurioust/excelize/cell.go:69 +0x177\r\ngithub.com/Luxurioust/excelize.(*xlsxC).getValueFrom(0xc4200edd70, 0xc4200504b0, 0xc420050820, 0xc4201148d0, 0x1, 0x0, 0x2)\r\n        /home/dlin/go/src/github.com/Luxurioust/excelize/rows.go:144 +0x15b\r\ngithub.com/Luxurioust/excelize.(*File).GetRows(0xc4200504b0, 0xc4200edea0, 0x6, 0xc42001159c, 0x1, 0xc4200edea0)\r\n        /home/dlin/go/src/github.com/Luxurioust/excelize/rows.go:60 +0x9e8\r\nmain.updateSheet(0xc4200504b0, 0x531640, 0x3)\r\n        /home/dlin/tmp/bug/bug.go:28 +0xd2\r\nmain.main()\r\n        /home/dlin/tmp/bug/bug.go:15 +0x6f\r\n\r\n[t.xlsx](https://github.com/Luxurioust/excelize/files/978431/t.xlsx)\r\n\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"strconv\"\r\n\r\n\t\"github.com/Luxurioust/excelize\" // bug: Date format, can't insert value\r\n)\r\n\r\nfunc main() {\r\n\tlog.SetFlags(log.Lshortfile)\r\n\txl, err := excelize.OpenFile(\"t.xlsx\")\r\n\r\n\tupdateSheet(xl, \"Fut\")\r\n\r\n\terr = xl.Save()\r\n\tif err != nil {\r\n\t\tlog.Fatalln(err)\r\n\t}\r\n}\r\nfunc updateSheet(xl *excelize.File, sheetName string) {\r\n\r\n\tidxSheet := xl.GetSheetIndex(sheetName)\r\n\tif idxSheet == 0 {\r\n\t\tlog.Fatalln(\"Can't found correct sheetName:\", sheetName)\r\n\t}\r\n\trows := xl.GetRows(\"sheet\" + strconv.Itoa(idxSheet))\r\n\tfmt.Println(rows)\r\n}\r\n\r\nfunc GetColStr(x int) string {\r\n\tcolName := \"\"\r\n\t//oldX := x\r\n\tfor x > 0 {\r\n\t\tdigit := (x - 1) % 26\r\n\t\tcolName = string(int('A')+digit) + colName\r\n\t\tx = (x - 1 - digit) / 26\r\n\t}\r\n\t//log.Println(oldX, colName)\r\n\treturn colName\r\n}   xl.SetCellValue(\"Sheet1\",\"A1\", time.Now())\r\nThe excel file will show empty @xuri  the same issue exists.   For example,\r\ntealeg/xlsx display the same cell as: &{<nil> 42740  0xc420424640 mm-dd-yy false false 0 0 2}\r\nthrought it's .String() will convert to '01-05-17'\r\n\r\nLuxurioust/excelize: just display as 42740 (already converted to string)  ```\r\n$ go version\r\ngo version go1.8.1 windows/amd64\r\n```\r\n\r\nCode:\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n\r\n\t\"github.com/Luxurioust/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\txlsx := excelize.CreateFile()\r\n\t// Create a new sheet.\r\n\txlsx.NewSheet(2, \"List\")\r\n\t// xlsx.DeleteSheet(\"Sheet1\")\r\n\t// Set value of a cell.\r\n\txlsx.SetCellValue(\"List\", \"A1\", 100)\r\n\txlsx.SetCellValue(\"List\", \"B1\", 30)\r\n\txlsx.SetCellFormula(\"List\", \"C1\", \"=A1+A2\")\r\n\t// Set active sheet of the workbook.\r\n\txlsx.SetActiveSheet(2)\r\n\t// Save xlsx file by the given path.\r\n\terr := xlsx.WriteTo(\"./dummy.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\tos.Exit(1)\r\n\t}\r\n}\r\n```\r\nI changing \"Create XLSX file Example\"\r\nBut Cell is Empty...\r\n\r\n[dummy.xlsx](https://github.com/Luxurioust/excelize/files/969663/dummy.xlsx)\r\n\r\nI Tested MS Office2007  Does that mean we should use 'S'heet+index in this API. // uppercase\r\nBut, we should 's'heet+index in GetRows() API? // lowercase\r\n @Luxurioust Thankyou for replay\n\nI will try I test this problem too.\r\nI find the sheet name MUST in \"Sheetn\" and the \"n\" MUST equals xlsx.NewSheet(n, \"Sheetn\").\r\n\r\n2017-05-05 \r\n\r\nLiaoBin \r\n\r\n\r\n\r\n\u53d1\u4ef6\u4eba\uff1adohq <notifications@github.com>\r\n\u53d1\u9001\u65f6\u95f4\uff1a2017-05-02 15:12\r\n\u4e3b\u9898\uff1a[Luxurioust/excelize] Newsheet Disable SetCellValue? (#47)\r\n\u6536\u4ef6\u4eba\uff1a\"Luxurioust/excelize\"<excelize@noreply.github.com>\r\n\u6284\u9001\uff1a\"Subscribed\"<subscribed@noreply.github.com>\r\n\r\n$ go version\r\ngo version go1.8.1 windows/amd64\r\n\r\nCode:\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n\r\n\t\"github.com/Luxurioust/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\txlsx := excelize.CreateFile()\r\n\t// Create a new sheet.\r\n\txlsx.NewSheet(2, \"List\")\r\n\t// xlsx.DeleteSheet(\"Sheet1\")\r\n\t// Set value of a cell.\r\n\txlsx.SetCellValue(\"List\", \"A1\", 100)\r\n\txlsx.SetCellValue(\"List\", \"B1\", 30)\r\n\txlsx.SetCellFormula(\"List\", \"C1\", \"=A1+A2\")\r\n\t// Set active sheet of the workbook.\r\n\txlsx.SetActiveSheet(2)\r\n\t// Save xlsx file by the given path.\r\n\terr := xlsx.WriteTo(\"./dummy.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\tos.Exit(1)\r\n\t}\r\n}\r\nI changing \"Create XLSX file Example\"\r\nBut Cell is Empty...\r\ndummy.xlsx\r\nI Tested MS Office2007\r\n\u2014\r\nYou are receiving this because you are subscribed to this thread.\r\nReply to this email directly, view it on GitHub, or mute the thread. @Luxurioust \r\nI tested createsheet after GetSeheetIndex\r\nI have tested the program and confirmed that it works as designed.\r\nThank you!  cell := xlsx.GetCellValue(\"Sheet1\", \"B2\")\r\nfmt.Println(cell)\r\n// Get all the rows in a sheet.\r\nrows := xlsx.GetRows(\"sheet1\")\r\nfmt.Println(rows)\r\n\r\nin windows it works normal,but in macOS rows is empty,cell can get value I met this issue too. I just use the sample code in the repo's readme page to read the xlsx file \"Workbook1.xlsx\" which provided in the repo's test folder.\r\n\r\nThen I met the same issue. When I run this code in macOS Sierra Version 10.12.5 with go version go1.8.3 darwin/amd64, only the GetCellValue func worked. The GetRows func doesn't work.\r\n\r\nThe output in macOS is below:\r\n![excelize-output-macos](https://cloud.githubusercontent.com/assets/170981/26660189/c9e5776a-46a8-11e7-8f48-c2524fb19196.png)\r\n\r\n\r\nI have try this code and sample xlsx file in Windows 10 with go version go1.8.3 windows/amd64, the output in Win 10 is below:\r\n![2017-06-01 09 01 45](https://cloud.githubusercontent.com/assets/170981/26660217/ff9e7c1c-46a8-11e7-818e-12be66e98642.jpg)\r\n \r\n\r\nThe sample code:\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n\t\"strconv\"\r\n\r\n\t\"github.com/Luxurioust/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\txlsx, err := excelize.OpenFile(\"./samples/Workbook1.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\tos.Exit(1)\r\n\t}\r\n\t// Get value from cell by given sheet index and axis.\r\n\tcell := xlsx.GetCellValue(\"Sheet2\", \"B2\")\r\n\tfmt.Println(cell)\r\n\t// Get sheet index.\r\n\tindex := xlsx.GetSheetIndex(\"Sheet2\")\r\n\t// Get all the rows in a sheet.\r\n\trows := xlsx.GetRows(\"sheet\" + strconv.Itoa(index))\r\n\tfor _, row := range rows {\r\n\t\tfor _, colCell := range row {\r\n\t\t\tfmt.Print(colCell, \"\\t\")\r\n\t\t}\r\n\t\tfmt.Println()\r\n\t}\r\n\r\n}\r\n```\r\n\r\nThe sample xlsx file is in the attachments.\r\n[Workbook1.xlsx](https://github.com/Luxurioust/excelize/files/1043306/Workbook1.xlsx)\r\n @Luxurioust I have update the library with `go get -u github.com/Luxurioust/excelize`. The func GetRows doesn't work on macOS as well. @Luxurioust This is the output.\r\n![excelize-output-after-update-library](https://cloud.githubusercontent.com/assets/170981/26664181/22bf5946-46c2-11e7-9aa0-e6a138c46336.png)\r\n @Luxurioust When I debug by stepping into, I just found that getTotalRowsCols func just return tr and tc both with 0.\r\n\r\n![excelize-debug-10](https://cloud.githubusercontent.com/assets/170981/26671993/10038840-46ea-11e7-870b-7df98c608dd9.png)\r\n\r\n![excelize-debug-11](https://cloud.githubusercontent.com/assets/170981/26671992/0fa36d02-46ea-11e7-8aae-969ea87cb22a.png) @xuri If you want me to do more debug steps, please just make it clear. @Luxurioust decoder.Token() in rows.go line 79 has executed 3 times in the loop. Yes, but I can't view the err value in the debug.\r\n![excelize-debug-12](https://cloud.githubusercontent.com/assets/170981/26679378/56ed2b68-4707-11e7-899e-7655089bc329.png)\r\n I have run the same code in my home MacBook Pro with macOS Sierra Version 10.12.3 (16D32) with go version go1.8 darwin/amd64, it worked well.\r\n\r\nThe output is:\r\n<img width=\"475\" alt=\"excelize-output-in-home-macbook-pro\" src=\"https://cloud.githubusercontent.com/assets/170981/26685154/d0a518c6-471b-11e7-99ef-8931ca0ec547.png\">\r\n\r\nIn my home MacBook Pro, I have a ~/.profile file with some config for go like this:\r\n```shell\r\nexport GOPATH=/Users/helihua/go\r\nexport GOROOT=/usr/local/go\r\nexport PATH=$PATH:$GOROOT/bin:$GOPATH/bin\r\n```\r\n\r\nAnd I use zsh in my home MacBook Pro too, and I source the ~/.profile in the first line of ~/.zsh.rc, like this:\r\n\r\n```shell\r\nsource ~/.profile\r\n``` \r\n\r\nI'll check the env setting on my office MacBook Pro tomorrow, and then post here to make something clear. This is the ~/.profile on my office MacBook Pro:\r\n```shell\r\nexport GOROOT=/usr/local/go\r\nexport GOPATH=/Users/helihua/go\r\nexport PATH=/usr/local/go/bin:$PATH\r\n```\r\n\r\nAnd in my ~/.zshrc file there is source ~/.profile like this:\r\n```shell\r\n# Example aliases\r\n# alias zshconfig=\"mate ~/.zshrc\"\r\n# alias ohmyzsh=\"mate ~/.oh-my-zsh\"\r\nsource ~/.profile\r\nexport PATH=~/bin:$PATH\r\nexport ANDROID_SDK_HOME=/Users/helihua/Library/Android/sdk\r\n``` And I had change my shell to bash in the Terminal, then run `go run [my_script.go]`, the GetRows Func just doesn't work as well. GOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"darwin\"\r\nGOOS=\"darwin\"\r\nGOPATH=\"/Users/helihua/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/darwin_amd64\"\r\nGCCGO=\"gccgo\"\r\nCC=\"clang\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fdebug-prefix-map=/var/folders/8_/d2fvf9j975j75dk11g4z1y1m0000gp/T/go-build635963732=/tmp/go-build -gno-record-gcc-switches -fno-common\"\r\nCXX=\"clang++\"\r\nCGO_ENABLED=\"1\"\r\nPKG_CONFIG=\"pkg-config\"\r\nCGO_CFLAGS=\"-g -O2\"\r\nCGO_CPPFLAGS=\"\"\r\nCGO_CXXFLAGS=\"-g -O2\"\r\nCGO_FFLAGS=\"-g -O2\"\r\nCGO_LDFLAGS=\"-g -O2\"\r\n You mean that I should reinstall the Golang runtime with homebrew? I had reinstall the Golang runtime pkg downloaded from the official website of Golang, and then it worked.\r\n\r\nThis is the output:\r\n```shell\r\n19\r\nMonitor\t\tBrand\t\t\t\r\n> 23 Inch\t19\tHP\t200\t\t\r\n20-23 Inch\t24\tDELL\t450\t\t\r\n17-20 Inch\t56\tLenove\t200\t\t\r\n< 17 Inch\t21\tSONY\t510\t\t\r\n\t\tAcer\t315\t\t\r\n\t\tIBM\t127\t\t\r\n\t\tASUS\t89\t\t\r\n\t\tApple\t348\t\t\r\n\t\tSAMSUNG\t53\t\t\r\n\t\tOther\t37\t\t\r\n```\r\n\r\nThanks for your patience about all of these.  May be cause I had install a mongo db on this MacBook Pro using homebrew, but it failed. I know that mongo db depends on golang, maybe this issue was caused by this failed installation of mongo db. And before I reinstall the pkg downloaded from the official site of Golang, I had run `brew remove go` to remove the golang which was installed by homebrew. Wish it will help.  I searched the docs and the code but didn't find anything to set the font style to bold, italic etc. Sweeeet! Thank you very much.   @xuri Thank you, waiting for your good news. see https://github.com/extrame/xls @xuri The xls spec if pretty heavy duty and entirely different from reading xlsx. I think it would be reasonable to say we won't support the legacy xls format and close this and the related issues.  ```\r\n% go version\r\ngo version go1.8.1 linux/amd64\r\n```\r\n\r\nCode:\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n        \"fmt\"\r\n        \"log\"\r\n        \"github.com/Luxurioust/excelize\"\r\n)\r\n\r\nfunc main() {\r\n        xlsx, err1 := excelize.OpenFile(\"/tmp/1.xlsx\")\r\n        if err1 != nil {\r\n                log.Fatal(\"Failed to open XLSX file: \" + err1.Error())\r\n        }\r\n\r\n        // We will always use first sheet.\r\n        sheet_name := xlsx.GetSheetName(1)\r\n        log.Println(\"Will use sheet: '\" + sheet_name + \"'\")\r\n\r\n        // Read file data.\r\n        //file_data := make(map[string]string)\r\n        rows := xlsx.GetRows(sheet_name)\r\n        for _, row := range rows {\r\n                fmt.Println(row)\r\n        }\r\n}\r\n``` Same on go 1.8.\r\n\r\nTested with files created in MS Office 2013 and Libreoffice 5.3.2. Why documentation says opposing?\r\n\r\nhttps://godoc.org/github.com/Luxurioust/excelize#File.GetRows I think for now it should be something like:\r\n\r\n```\r\nFor now you should use sheet_name like \"sheet3\" where \"sheet\" is a constant part and \"3\" is a sheet number. For example, if sheet named as \"SomeUniqueData\" and it is second if spreadsheet program interface - you should use \"sheet2\" here.\r\n```  Hi. Example does not work. Library created bad xlsx file (in attach).\r\n\txlsx := excelize.CreateFile()\r\n\txlsx.NewSheet(2, \"Sheet2\")\r\n\txlsx.SetCellValue(\"Sheet2\", \"A2\", \"Hello world.\")\r\n\txlsx.SetCellValue(\"Sheet1\", \"B2\", 100)\r\n\txlsx.SetActiveSheet(2)\r\n\terr = xlsx.WriteTo(\"Workbook.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\tos.Exit(1)\r\n\t}\r\n[Workbook.xlsx](https://github.com/Luxurioust/excelize/files/935674/Workbook.xlsx)\r\n It works for me, can you share full code? It's full code. I copy/paste and build.\r\n\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n\r\n\t\"github.com/Luxurioust/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\txlsx := excelize.CreateFile()\r\n\txlsx.NewSheet(2, \"Sheet2\")\r\n\txlsx.SetCellValue(\"Sheet2\", \"A2\", \"Hello world.\")\r\n\txlsx.SetCellValue(\"Sheet1\", \"B2\", 100)\r\n\txlsx.SetActiveSheet(2)\r\n\terr := xlsx.WriteTo(\"Workbook.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\tos.Exit(1)\r\n\t}\r\n} Many thanks! My version Go was 1.7.5. I updated to the latest 1.8.1 and all worked.  Feature request\r\nPlease add support for Sheet move/copy between different xlsx files\r\n\r\nThanks in advance  Can you please add feature:\r\nsupport for pivot data source edit/change\r\nRight now I make copy of pivot, but copy make reference to the data source, so I still required to make changes in pivot data source manually \r\n\r\nAlso it will be great to create pivot from the code, without excel application :)\r\n\r\nThanks in advance  Thanks for this project!\r\n\r\n```\r\nxls, err := excelize.OpenFile(\"data/test2.xlsx\")\r\nlog.Println(xls.GetRows(\"Sheet1\"))\r\n```\r\n\r\nGets me an empty list while the file is not empty\r\n\r\nhttps://www.dropbox.com/s/c4b0piomygv6n2g/test2.xlsx?dl=0 thank you very much - works!  Suggest to add function \"AddTextBox()\" like \"AddPicture()\" @xuri It works and I want to know if I could set font-family, font-size and font-color.\r\n```\r\nxlsx.AddShape(\"Sheet1\", \"A2\", `{\"format\":{\"x_offset\": 15, \"y_offset\": 10},\"type\":\"rect\", \"text\":\"text\",\"width\": 60, \"height\": 35 }`)\r\n``` @xuri Thanks!  \r\nHow to insert newlines into shape? I tested '\\n' not work   Is there a simple way when setting complex border like this.\r\n\r\n![default](https://cloud.githubusercontent.com/assets/8806281/24485486/5a589938-1537-11e7-97ad-b0ac40d89a69.JPG)\r\n It works! Thanks a lot and I should make packaged function by my own requirement!    In lastest version the GetRows function can`t work ! To call xlsx.GetRows(\"sheet1\") function get a string array but length with 0.   Rules have changed ? @xuri  This function was ok in  yesterday ! My  host used Go 1.7.2 .  This is a attachments file\r\n[mood.xlsx](https://github.com/xuri/excelize/files/878041/mood.xlsx)\r\n me too, It does not work today! @xuri  You are right ! I switched to version 1.8 just now , the app is ok !  THX  I need  import some data to mongodb and the row data  have a picture need to save another path !  I don't want to upload excel and pictures two times, so how do I get a picture from the cell ? Here are my previous snippets and related links([https://github.com/tealeg/xlsx/issues/49](url)), but there's no real solution,that made me a little anxious !   Thanks a lot !  \r\n\r\n![qq20170323-173945](https://cloud.githubusercontent.com/assets/18027793/24286501/775fc546-10b0-11e7-9c9d-eb379146d86e.png)\r\n\r\n![qq20170323-174044](https://cloud.githubusercontent.com/assets/18027793/24286635/f3fa2ccc-10b0-11e7-9d2c-b5483f4895e4.png)\r\n\r\n![qq20170324-175016](https://cloud.githubusercontent.com/assets/18027793/24289007/6c5da582-10ba-11e7-8208-e5e105d88707.png) @Luxurioust  Thanks a lot !  @Luxurioust   Quickly response very commendable, You are a good person to help others! Persistent optimization is great ! Thanks  again !   Hi,\r\n\r\nWhen I create workbook and do some entries to the cells I noticed that if there are some leading spaces in front of the text, they are missing.\r\nIn case if I open the workbook with excel and enter some text with leading spaces they are corretly entered to the cell.  Thanks.  How can I \"create\" and \"update\" graphs in an xlsx files? @Luxurioust I need to write a tool to automatize some steps.\r\nI need to add a value in a row on the sheet1, looking for a certain sheet (by name for example), adding in it some values, update a chart, switch to another sheet, add the same values and update 2 charts, switch to another sheet and modify some values.\r\nIs an huge job so I wish to automatize it.\r\n\r\nDo you have any documentation to read how xlsx files works? Thanks in advantage! Is there any functionality for changing the chart? For example, the ChangeChart () function?  Hi,\r\n\r\nIs it possible to implement new function which can delete/remove particular sheet?\r\n Sure, no problem. I just thought it would be a nice feature to have in case when you do some operations with the data and put the results in new sheet and in such cases some sheet(s) can become obsolete. Thanks.  Hi,\r\nwould it be possible to have something like stream-writing to a file in case of lots of rows? Like hitting the excel sheet row limit?\r\n\r\nI'm not so familiar with GoLang's IO, but maybe there is no problem to achieve this? \r\n\r\nFor example I have millions of rows to put in excel sheets, and it is obviously memory heavy task. The idea is to read slice of rows from data source, like 100,000 at the time, then write them to the excel file in a loop until all rows was written. In such case there would be produced either excel file with few sheets or few excel files.\r\n\r\nThe primary idea is to handle memory consumption to reasonable amounts of RAM, like few gigabytes not tens..\r\n\r\nWhat's Your opinion? Thanks! Regarding low-hanging fruit for performance - I was having issues outputting a few thousand rows with roughly 30-40 columns each in any sort of reasonable time.  I narrowed it down and it appears the performance problems are coming from changes made in this commit (fixing missing hyperlink): https://github.com/Luxurioust/excelize/commit/6e1475a2429b2088a4c0b322962fc584370653d9#diff-ec4216644fd4919ab5c2a68efb70d453\r\n\r\nThat change causes the entire spreadsheet data structure to be fully rebuilt every time cell data is set instead of appending new rows when needed.  I haven't had time to dive into exactly what was fixed with that issue which is why I'm not submitting a pull request right now, but if I use a version of completeRow similar to the one prior to that commit, my time for xslx generation goes from upwards of a couple minutes to about 3 seconds with identical output (20,000 rows, 30 columns).  It still slows down quite a bit at higher numbers, but it's a target for massive improvement in the lower ranges as a starting point. why\uff1f\n\n\n\n\n\u53d1\u81ea\u7f51\u6613\u90ae\u7bb1\u5927\u5e08\n\n\nOn 03/30/2017 11:33\uff0cDave Butler<notifications@github.com> wrote\uff1a\n\nRegarding low-hanging fruit for performance - I was having issues outputting a few thousand rows with roughly 30-40 columns each in any sort of reasonable time. I narrowed it down and it appears the performance problems are coming from changes made in this commit (fixing missing hyperlink): 6e1475a#diff-ec4216644fd4919ab5c2a68efb70d453\n\nThat change causes the entire spreadsheet data structure to be fully rebuilt every time cell data is set instead of appending new rows when needed. I haven't had time to dive into exactly what was fixed with that issue which is why I'm not submitting a pull request right now, but if I use a version of completeRow similar to the one prior to that commit, my time for xslx generation goes from upwards of a couple minutes to about 3 seconds with identical output (20,000 rows, 30 columns). It still slows down quite a bit at higher numbers, but it's a target for massive improvement in the lower ranges as a starting point.\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread. +1 to this. Is there a way to send the result by row? I experienced around 5-10 minutes creating and downloading a 2MB xlsx file having 1000+ rows. Hey @xuri, any update? Thanks! Will give it a shot. Hi xuri,\r\n\r\nI've gone through the multiple github issues related to performance / memory management. However I did not figure out if the following is already possible.\r\n\r\nSituation: Having to write > 100.000 lines.\r\nSolution A: have an io interface which periodically will write to disk so that memory consumption does go through the roof.\r\nSolution B: Write to different xlsx files, and then have a way to merge them together (but again, without having to use big amounts of memory)\r\n\r\nDoes this exist and give you a snippet demonstrating this? Would also be nice for the standard documentation. @xuri Can you check my comment above? @pjmuller maybe https://github.com/eaciit/hoboexcel will works for your need? the lib uses buffered input/output and custom tailored to handle large simple xlsx file. This is really causing issues... \ud83d\ude22 Memory usage goes off the roof\r\n\r\nAny updates? Any updates?  Added data validation types in attached xlsxWorksheet.go. \r\n\r\n[xmlWorkbook.zip](https://github.com/Luxurioust/excelize/files/814641/xmlWorkbook.zip)\r\n\r\nWith this change cell data validations are preserved when calling OpenFile(\"excel.xlsx\") and then WriteTo(\"excel.xlsx\").\r\n\r\nThanks! \nGreetings Ri Xu,\n\n\nSorry, I attached the wrong source. Here is xlsxWorksheet.go.\n\n\nRegards,\n\nC. Huff\n\n\n________________________________\nFrom: Ri Xu notifications-at-github.com |github/Example Shred| <9rw25k5ett@sneakemail.com>\nSent: Friday, March 3, 2017 3:15 AM\nTo: ******************; Luxurioust/excelize\nCc: cehuff; Mention\nSubject: Re: [Luxurioust/excelize] Adding Excel data validation to type xlsxWorksheet (#28)\n\n\n@cehuff<https://github.com/cehuff> Thanks for your issue. But sorry, I didn't understand what you meant. I can't find any differences in the attachments. Will not be lost exist data validation properties after saving by calling WriteTo(). Do you mean if you want to add additional feature to support set data validation for a cell?\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub<https://github.com/Luxurioust/excelize/issues/28#issuecomment-283853898>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AEAmZFyssTAi_7l3gTtPnYC7cNUHnfuLks5rh4XWgaJpZM4MRUeT>.\n  When printing file, inserted pictures are hidden.\r\nI found a property setting.\r\n![_20170227211942](https://cloud.githubusercontent.com/assets/8806281/23362839/9e969a22-fd32-11e6-99f5-3f4592aafb25.png)\r\n  When setting value repeatedly with many cols, it runs very slow!\r\n----------------------------------------\r\n\tcol := \"A\"\r\n\tfor i := 0; ; i++ {\r\n\t\tcol += \"A\"\r\n\t\txlsx.SetCellStr(\"Sheet1\", col+\"1\", \"a\")\r\n\t\tfmt.Println(\"set value\")\r\n\t}\r\n-----------------------------------------\r\n  Hi! I want to use custom names for my sheets. But I can't because it need to name \"Sheet\" + index.\r\nIt's critical bug, I think.\r\n\r\nhttps://github.com/Luxurioust/excelize/blob/master/cell.go#L14\r\nhttps://github.com/Luxurioust/excelize/blob/master/sheet.go#L22\r\nhttps://github.com/Luxurioust/excelize/blob/master/sheet.go#L35 @Luxurioust how to progress? @Luxurioust there is still a bug, the sheet name **must** be modified **after** cells were written to it, otherwise the generated excel file is invalid.  Feel free to delete if off-topic.\r\n\r\nI see two reasonably popular XLSX go packages, this and tealeg/xlsx.  Is it worth trying to merge to one unified effort?  By passing this test data\r\n[data.xlsx](https://github.com/Luxurioust/excelize/files/782411/data.xlsx)\r\n\r\nThe myread.go\r\n```\r\npackage main\r\n/*\r\nBuild: go build -o myread myread.go\r\nrun: ./my_read data.xlsx\r\n*/\r\nimport (\r\n\t\"fmt\"\r\n\t\"log\"\r\n\t\"os\"\r\n\r\n\t\"github.com/Luxurioust/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\tinF, err := excelize.OpenFile(os.Args[1])\r\n\tif err != nil {\r\n\t\tlog.Fatalln(err)\r\n\t}\r\n\r\n\tsheet := inF.GetRows(inF.GetSheetName(1))\r\n\tfor _, row := range sheet {\r\n\t\tfmt.Println(len(row), row)\r\n\t}\r\n} \r\n\r\n```\r\nexpect get:\r\n3 [\u65e5\u76e4 12345 \u591c\u76e4\u4ea4\u6613\u884c\u60c5\u8f49\u5165]\r\n3 [\u6e2c 12346 \u884c\u60c5\u8f49\u5165]\r\n\r\nbut get:\r\n3 [\u6e2c 12346 \u884c\u60c5\u8f49\u5165]\r\n3 [\u6e2c 12346 \u884c\u60c5\u8f49\u5165]\r\n  Referring to #2 and what @stengaard suggested I have implemented io.Reader and io.Writer interfaces.\r\n\r\nThe existing API hasn't changed at all, there are now additional options for reading and writing the files.\r\n\r\nWe now have:\r\n```\r\nfunc OpenReader(r io.Reader) (*File, error)\r\n\r\nfunc (f *File) Write(w io.Writer) error\r\n``` # [Codecov](https://codecov.io/gh/Luxurioust/excelize/pull/22?src=pr&el=h1) Report\n> Merging [#22](https://codecov.io/gh/Luxurioust/excelize/pull/22?src=pr&el=desc) into [master](https://codecov.io/gh/Luxurioust/excelize/commit/0833a9d5dab846ed01be52fa59c97ede36ee4a93?src=pr&el=desc) will **decrease** coverage by `-3.92%`.\n> The diff coverage is `74.28%`.\n\n\n```diff\n@@            Coverage Diff             @@\n##           master      #22      +/-   ##\n==========================================\n- Coverage   93.98%   90.06%   -3.92%     \n==========================================\n  Files           8        8              \n  Lines        1030     1027       -3     \n==========================================\n- Hits          968      925      -43     \n- Misses         34       67      +33     \n- Partials       28       35       +7\n```\n\n\n| [Impacted Files](https://codecov.io/gh/Luxurioust/excelize/pull/22?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [lib.go](https://codecov.io/gh/Luxurioust/excelize/compare/0833a9d5dab846ed01be52fa59c97ede36ee4a93...bd817ea8907386371f123426b66d7ee936f931c1?src=pr&el=tree#diff-bGliLmdv) | `88% <\u00f8> (-0.68%)` | :x: |\n| [excelize.go](https://codecov.io/gh/Luxurioust/excelize/compare/0833a9d5dab846ed01be52fa59c97ede36ee4a93...bd817ea8907386371f123426b66d7ee936f931c1?src=pr&el=tree#diff-ZXhjZWxpemUuZ28=) | `84.68% <60%> (-13.43%)` | :x: |\n| [file.go](https://codecov.io/gh/Luxurioust/excelize/compare/0833a9d5dab846ed01be52fa59c97ede36ee4a93...bd817ea8907386371f123426b66d7ee936f931c1?src=pr&el=tree#diff-ZmlsZS5nbw==) | `79.48% <93.33%> (+3.97%)` | :white_check_mark: |\n| [cell.go](https://codecov.io/gh/Luxurioust/excelize/compare/0833a9d5dab846ed01be52fa59c97ede36ee4a93...bd817ea8907386371f123426b66d7ee936f931c1?src=pr&el=tree#diff-Y2VsbC5nbw==) | `88.1% <\u00f8> (-7.57%)` | :x: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/Luxurioust/excelize/pull/22?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/Luxurioust/excelize/pull/22?src=pr&el=footer). Last update [0833a9d...bd817ea](https://codecov.io/gh/Luxurioust/excelize/compare/0833a9d5dab846ed01be52fa59c97ede36ee4a93...bd817ea8907386371f123426b66d7ee936f931c1?src=pr&el=footer&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).  Setting border for selected cells is a practical requirement.   As well as in https://github.com/tealeg/xlsx/issues/186, this library suffers from memory eating while trying to parse large files.\r\n\r\nFor example I have 7mb file (~60k rows with ~40 columns for each row) which parsed with tealeg/xlsx into 700mb of RAM, while this library eats almost whole gigabyte.\r\n\r\nAny plans to provide an iterator which will be memory-friendly? Hey and thanks!\r\n\r\nI think it's still too high, especially if you'll parse large files. What about streamlined interface?  There should be three columns in the output, first and third column are Chinese characters.\r\n\r\n[data.xlsx](https://github.com/Luxurioust/excelize/files/756551/data.xlsx)\r\n\r\n```\r\npackage main\r\nimport (\r\n\t\"fmt\"\r\n\t\"log\"\r\n\r\n\t\"github.com/Luxurioust/excelize\"\r\n)\r\n\r\nfunc main() {\r\n\tinF, err := excelize.OpenFile(\"data.xlsx\")\r\n\tif err != nil {\r\n\t\tlog.Fatalln(err)\r\n\t}\r\n\r\n\tsheet := inF.GetRows(inF.GetSheetName(1))\r\n\tfor _, row := range sheet {\r\n\t\tfmt.Println(len(row), row)\r\n\t}\r\n} \r\n```  Needed this function for one of my projects, but didn't find it in your lib, so I decided to contribute. Tell me if any change is needed.\r\n\r\nPs: Thanks for this great lib! It's helping me a lot # [Codecov](https://codecov.io/gh/Luxurioust/excelize/pull/18?src=pr&el=h1) Report\n> Merging [#18](https://codecov.io/gh/Luxurioust/excelize/pull/18?src=pr&el=desc) into [master](https://codecov.io/gh/Luxurioust/excelize/commit/a1060e779ee295e9871e2fbe9148d8d9dc72a379?src=pr&el=desc) will **increase** coverage by `0.05%`.\n\n\n```diff\n@@            Coverage Diff             @@\n##           master      #18      +/-   ##\n==========================================\n+ Coverage   94.65%   94.71%   +0.05%     \n==========================================\n  Files           8        8              \n  Lines         973      984      +11     \n==========================================\n+ Hits          921      932      +11     \n  Misses         29       29              \n  Partials       23       23\n```\n\n\n| [Impacted Files](https://codecov.io/gh/Luxurioust/excelize/pull/18?src=pr&el=tree) | Coverage \u0394 | |\n|---|---|---|\n| [rows.go](https://codecov.io/gh/Luxurioust/excelize/compare/a1060e779ee295e9871e2fbe9148d8d9dc72a379...8ce12b60b8a37ce6d3bd0bcee360393d52d4d0eb?src=pr&el=tree#diff-cm93cy5nbw==) | `95.34% <100%> (+1.59%)` | :white_check_mark: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/Luxurioust/excelize/pull/18?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/Luxurioust/excelize/pull/18?src=pr&el=footer). Last update [a1060e7...8ce12b6](https://codecov.io/gh/Luxurioust/excelize/compare/a1060e779ee295e9871e2fbe9148d8d9dc72a379...8ce12b60b8a37ce6d3bd0bcee360393d52d4d0eb?el=footer&src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments). You're welcome!  [Workbook.xlsx](https://github.com/Luxurioust/excelize/files/722660/Workbook.xlsx)\r\nI attached my test file.\r\n\r\nI made that file and run homepage's \"Reading XLSX file sample\" code\r\nI expected :\r\ntest text\r\n1       2 ...\r\n\r\nBut i got :\r\n\r\n1       2 ...\r\n\r\nBut when I input some values to \"A?\" of \"Sheet1\" I got the expected result.\r\n\r\nI think cell.go's line 26\r\n\tif rows <= xAxis {\r\n\t\treturn \"\"\r\n\t}\r\nreturn an empty string.  As the title says, how to get all rows and their cells? I don't know beforehand how many rows or cells there'll be. Hmm, kept returning an empty slice.\r\n I ended up using another lib, but I ran the functions to get the active sheet name which I used in `getRows()`\r\n  I did not want to meddle much with your code, but I recently needed to insert a float number into the sheet and wasn't able to use SetCellStr, because it escapes the value with an appostrophe. I needed to do some calculations with the floats\r\n\r\nThe PR adds a new function SetCellDefault which is exaclty what SetCellInt does, but accepts a string instead\r\nIt also modifies the behaviour of SetCellValue for float32 and float64 values and converts the float number to a string before calling SetCellDefault ## [Current coverage](https://codecov.io/gh/Luxurioust/excelize/pull/15?src=pr) is 92.84% (diff: 100%)\n> Merging [#15](https://codecov.io/gh/Luxurioust/excelize/pull/15?src=pr) into [master](https://codecov.io/gh/Luxurioust/excelize/branch/master?src=pr) will increase coverage by **0.24%**\n\n```diff\n@@             master        #15   diff @@\n==========================================\n  Files             6          6          \n  Lines           500        517    +17   \n  Methods           0          0          \n  Messages          0          0          \n  Branches          0          0          \n==========================================\n+ Hits            463        480    +17   \n  Misses           21         21          \n  Partials         16         16          \n```\n\n> Powered by [Codecov](https://codecov.io?src=pr). Last update [2497ccb...57fc294](https://codecov.io/gh/Luxurioust/excelize/compare/2497ccb8768d68ef5e5e3375f23265b9fee97e0d...57fc2943ff6e1b2f062daafc6d03d9fc05bfe896?src=pr) Thank **you** for the library :)  \u53ea\u6709\u6574\u5f62\u548c\u5b57\u7b26\u4e32\u7684\u63d2\u5165\u6ca1\u6709\u56fe\u7247\u7684\u63d2\u5165\u529f\u80fd  Thank you for your library! Great work! \ud83d\udc4d \r\n\r\nDo you have a roadmap for future development?  I've added a looping functionality on rows and columns, this will ease when scanning over a table for ex.\r\n\r\nlet the code talk :+1: \r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"github.com/NaySoftware/excelize\"\r\n\t\"os\"\r\n)\r\n\r\nfunc main() {\r\n\txlsx, err := excelize.OpenFile(\"WorkBook.xlsx\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\tos.Exit(1)\r\n\t}\r\n\r\n\trows, err := xlsx.GetRows(\"Sheet1\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t}\r\n\r\n\tfor _, row := range rows {\r\n\t\tfor _, colCell := range row.C {\r\n\t\t\tval, _ := colCell.GetValueFrom(xlsx)\r\n\t\t\tfmt.Print(val, \"\\t\\t\")\r\n\t\t} // cols\r\n\t\tfmt.Println()\r\n\t} // rows\r\n\r\n\tfmt.Println()\r\n} // main\r\n\r\n\r\n``` ## [Current coverage](https://codecov.io/gh/Luxurioust/excelize/pull/11?src=pr) is 80.41% (diff: 0.00%)\n\n> Merging [#11](https://codecov.io/gh/Luxurioust/excelize/pull/11?src=pr) into [master](https://codecov.io/gh/Luxurioust/excelize/branch/master?src=pr) will decrease coverage by **11.16%**\n\n``` diff\n@@             master        #11   diff @@\n==========================================\n  Files             5          6     +1   \n  Lines           404        429    +25   \n  Methods           0          0          \n  Messages          0          0          \n  Branches          0          0          \n==========================================\n- Hits            370        345    -25   \n- Misses           19         65    +46   \n- Partials         15         19     +4   \n```\n\n> Powered by [Codecov](https://codecov.io?src=pr). Last update [6185cd5...1bbc54d](https://codecov.io/gh/Luxurioust/excelize/compare/6185cd577df8223f4c8e4b239a046bdfe8d07fd9...1bbc54d4ec8d11ecb41bea99aa1b7220c4e6f040?src=pr)\n I will update the code and make a new pull request\n   ## [Current coverage](https://codecov.io/gh/Luxurioust/excelize/pull/7?src=pr) is 88.86% (diff: 100%)\n\n> Merging [#7](https://codecov.io/gh/Luxurioust/excelize/pull/7?src=pr) into [master](https://codecov.io/gh/Luxurioust/excelize/branch/master?src=pr) will not change coverage\n\n``` diff\n@@             master         #7   diff @@\n==========================================\n  Files             5          5          \n  Lines           404        404          \n  Methods           0          0          \n  Messages          0          0          \n  Branches          0          0          \n==========================================\n  Hits            359        359          \n  Misses           27         27          \n  Partials         18         18          \n```\n\n> Powered by [Codecov](https://codecov.io?src=pr). Last update [db5f513...6dda05d](https://codecov.io/gh/Luxurioust/excelize/compare/db5f5134d5e221d7f9ed47c320d2cb0b519af565...6dda05d30e1be58909e291433ef7c226f7e4b215?src=pr)\n  ```\npackage main\n\nimport (\n    \"fmt\"\n    \"github.com/Luxurioust/excelize\"\n)\n\nfunc main() {\n    xlsx, err := excelize.OpenFile(\"/home/Workbook.xlsx\")\n    if err != nil {\n        fmt.Println(err)\n    }\n    cell := xlsx.GetCellValue(\"Sheet2\", \"D11\")\n    fmt.Println(cell)\n}\n\n```\n  Is there any way to read excel by rows, like in tealeg's case:\n\n``` go\nfor _, row = range sheet.Rows\n```\n\nin case I don't know how many rows are there?\n the question is the same as the above.\n I've submitted a pull request solving this issue.\n", "text_all_count": 59533, "text_word_token": ["I", "use", "the", "sample", "python", "code", "at", "LINK", "to", "create", "an", "xlsx", "file", "sample", "NUMBER", "xlsx", "this", "file", "can", "be", "opened", "by", "MS", "Office", "and", "Libreoffice", "NUMBER", "Then", "I", "write", "a", "go", "program", "with", "excelize", "to", "read", "sample", "NUMBER", "xlsx", "but", "I", "cannot", "read", "the", "data", "of", "the", "file", "NUMBER", "GetActiveSheetIndex", "returns", "NUMBER", "GetSheetName", "NUMBER", "returns", "empty", "string", "NUMBER", "The", "python", "code", "python", "from", "openpyxl", "import", "Workbook", "wb", "Workbook", "grab", "the", "active", "worksheet", "ws", "wb", "NUMBER", "active", "Data", "can", "be", "assigned", "directly", "to", "cells", "ws", "A", "NUMBER", "NUMBER", "Rows", "can", "also", "be", "appended", "ws", "NUMBER", "append", "NUMBER", "NUMBER", "NUMBER", "Python", "types", "will", "automatically", "be", "converted", "import", "datetime", "ws", "A", "NUMBER", "datetime", "NUMBER", "datetime", "NUMBER", "now", "Save", "the", "file", "wb", "NUMBER", "save", "sample", "NUMBER", "xlsx", "The", "go", "code", "go", "package", "main", "import", "fmt", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "func", "main", "xlsx", "err", "excelize", "NUMBER", "OpenFile", "sample", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "return", "fmt", "NUMBER", "Printf", "GetActiveSheetIndex", "d", "n", "xlsx", "NUMBER", "GetActiveSheetIndex", "NUMBER", "fmt", "NUMBER", "Printf", "GetSheetName", "s", "n", "xlsx", "NUMBER", "GetSheetName", "NUMBER", "empty", "string", "rows", "err", "xlsx", "NUMBER", "GetRows", "xlsx", "NUMBER", "GetSheetName", "NUMBER", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "return", "else", "nothing", "printed", "for", "_", "row", "range", "rows", "fmt", "NUMBER", "Println", "row", "Sample", "xlsx", "file", "generate", "by", "python", "sample", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "sample", "NUMBER", "xlsx", "go", "version", "go", "NUMBER", "linux", "amd", "NUMBER", "Excelize", "version", "v", "NUMBER", "Hi", "m", "NUMBER", "ng", "NUMBER", "i", "thanks", "for", "your", "feedback", "please", "try", "to", "upgrade", "the", "library", "with", "the", "master", "branch", "code", "NUMBER", "Git", "tag", "for", "v", "NUMBER", "will", "be", "update", "on", "the", "next", "release", "NUMBER", "The", "master", "branch", "be", "ok", "thanks", "NUMBER", "PR", "Details", "add", "miss", "error", "check", "in", "SetSheetRow", "when", "call", "SetCellValue", "NUMBER", "Description", "Fix", "typo", "in", "comments", "Check", "return", "error", "when", "call", "SetCellValue", "NUMBER", "Related", "Issue", "None", "NUMBER", "Motivation", "and", "Context", "When", "set", "cell", "value", "of", "type", "time", "NUMBER", "Time", "with", "timezone", "other", "than", "UTC", "the", "result", "be", "empty", "string", "NUMBER", "After", "go", "through", "excelize", "code", "I", "find", "the", "bug", "NUMBER", "How", "Has", "This", "Been", "Tested", "No", "exist", "suitable", "test", "to", "add", "this", "case", "and", "this", "fix", "be", "pretty", "straight", "forward", "NUMBER", "Types", "of", "change", "TAG", "Docs", "change", "refactoring", "dependency", "upgrade", "x", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "ce", "NUMBER", "e", "NUMBER", "bec", "NUMBER", "c", "NUMBER", "bf", "NUMBER", "fe", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "a", "src", "pr", "el", "desc", "will", "decrease", "coverage", "by", "NUMBER", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "cell", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "Y", "NUMBER", "VsbC", "NUMBER", "nbw", "NUMBER", "TAG", "NUMBER", "arrow_down", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "ce", "NUMBER", "db", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "\u5728\u5b98\u65b9\u6587\u6863\u4e2d\u6709\u8bf4", "func", "f", "File", "CopySheet", "from", "to", "int", "error", "\u4e0d\u652f\u6301\u5305\u542b\u8868\u683c", "\u56fe\u7247", "\u56fe\u8868\u548c\u900f\u89c6\u8868\u7b49\u5143\u7d20\u7684\u5de5\u4f5c\u8868\u4e4b\u95f4\u7684\u590d\u5236", "\u8bf7\u95ee\u672a\u6765\u6709\u8ba1\u5212\u5bf9\u5e94\u542b\u6709", "\u8868\u683c", "\u56fe\u7247", "\u56fe\u6807\u7684\u5de5\u4f5c\u8868\u4e4b\u95f4\u7684\u590d\u5236\u5417", "Fix", "potential", "memory", "leak", "where", "zw", "be", "not", "Close", "when", "an", "error", "occur", "NUMBER", "PR", "Details", "TAG", "Description", "TAG", "Related", "Issue", "TAG", "TAG", "TAG", "TAG", "Motivation", "and", "Context", "TAG", "How", "Has", "This", "Been", "Tested", "TAG", "TAG", "TAG", "Types", "of", "change", "TAG", "Docs", "change", "refactoring", "dependency", "upgrade", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "f", "NUMBER", "a", "NUMBER", "ea", "NUMBER", "fd", "NUMBER", "dcc", "NUMBER", "ff", "NUMBER", "d", "NUMBER", "bbcdf", "NUMBER", "src", "pr", "el", "desc", "will", "decrease", "coverage", "by", "NUMBER", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "file", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "ZmlsZS", "NUMBER", "nbw", "NUMBER", "TAG", "NUMBER", "arrow_down", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "f", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "\u6211\u4f7f\u7528go", "get", "\u7ed3\u679c\u5f97\u5230killed", "NUMBER", "bash", "go", "get", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "c", "NUMBER", "d", "NUMBER", "b", "NUMBER", "cc", "NUMBER", "e", "NUMBER", "NUMBER", "b", "d", "NUMBER", "a", "NUMBER", "ac", "NUMBER", "d", "NUMBER", "png", "go", "version", "NUMBER", "\u6211\u5c1d\u8bd5\u4f7f\u7528git", "clone", "When", "I", "tried", "git", "clone", "bash", "git", "clone", "LINK", "Skylar", "excelize", "NUMBER", "git", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "fff", "NUMBER", "b", "NUMBER", "cc", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "ab", "NUMBER", "c", "NUMBER", "png", "What", "should", "I", "do", "This", "be", "based", "on", "NUMBER", "because", "I", "add", "to", "that", "unit", "test", "so", "either", "merge", "that", "one", "first", "and", "then", "this", "one", "or", "just", "merge", "this", "one", "and", "close", "the", "other", "NUMBER", "Description", "Handle", "multi", "row", "inline", "strings", "simplify", "the", "row", "combination", "logic", "and", "use", "a", "string", "builder", "NUMBER", "Related", "Issue", "NUMBER", "Motivation", "and", "Context", "Inline", "strings", "not", "just", "shared", "strings", "can", "have", "the", "r", "field", "NUMBER", "Since", "the", "structs", "matched", "I", "went", "ahead", "and", "consolidated", "them", "NUMBER", "How", "Has", "This", "Been", "Tested", "Added", "unit", "test", "and", "verify", "against", "the", "sample", "file", "provide", "in", "the", "issue", "NUMBER", "Types", "of", "change", "TAG", "Docs", "change", "refactoring", "dependency", "upgrade", "x", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "x", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "x", "All", "new", "and", "exist", "test", "pass", "NUMBER", "It", "looks", "like", "the", "test", "go", "back", "to", "Go", "NUMBER", "and", "strings", "NUMBER", "Builder", "be", "unavailable", "NUMBER", "Do", "we", "still", "support", "Go", "NUMBER", "If", "so", "I", "can", "change", "that", "back", "to", "string", "concatenation", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "e", "NUMBER", "b", "NUMBER", "ac", "NUMBER", "a", "NUMBER", "fcf", "NUMBER", "b", "NUMBER", "c", "NUMBER", "abb", "NUMBER", "bfa", "NUMBER", "e", "NUMBER", "dd", "NUMBER", "dbcb", "src", "pr", "el", "desc", "will", "increase", "coverage", "by", "TAG", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "TAG", "\u00f8", "rows", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "cm", "NUMBER", "cy", "NUMBER", "nbw", "NUMBER", "TAG", "NUMBER", "arrow_down", "sheet", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "c", "NUMBER", "hlZXQuZ", "NUMBER", "NUMBER", "TAG", "\u00f8", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "e", "NUMBER", "b", "NUMBER", "ac", "NUMBER", "acd", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "Okay", "I", "update", "the", "readme", "to", "note", "that", "Go", "NUMBER", "or", "higher", "be", "required", "NUMBER", "Description", "SheetID", "only", "seems", "to", "indicate", "the", "file", "name", "for", "the", "sheet", "NUMBER", "Check", "the", "sheets", "list", "based", "on", "index", "instead", "NUMBER", "Reordering", "sheets", "in", "Excel", "change", "the", "order", "they", "appear", "in", "that", "list", "NUMBER", "Related", "Issue", "Fixes", "NUMBER", "Motivation", "and", "Context", "Using", "SheetID", "be", "not", "a", "reliable", "way", "to", "get", "a", "sheet", "s", "name", "based", "on", "index", "NUMBER", "How", "Has", "This", "Been", "Tested", "Verified", "with", "the", "test", "file", "given", "in", "NUMBER", "and", "against", "the", "exist", "file", "in", "the", "test", "directory", "of", "this", "project", "NUMBER", "I", "add", "unit", "test", "to", "ensure", "the", "expected", "matches", "NUMBER", "Types", "of", "change", "TAG", "Docs", "change", "refactoring", "dependency", "upgrade", "x", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "x", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "x", "All", "new", "and", "exist", "test", "pass", "NUMBER", "I", "see", "I", "ll", "verify", "GetSheetMap", "today", "then", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "f", "NUMBER", "a", "NUMBER", "ea", "NUMBER", "fd", "NUMBER", "dcc", "NUMBER", "ff", "NUMBER", "d", "NUMBER", "bbcdf", "NUMBER", "src", "pr", "el", "desc", "will", "decrease", "coverage", "by", "TAG", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "sheet", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "c", "NUMBER", "hlZXQuZ", "NUMBER", "NUMBER", "TAG", "NUMBER", "arrow_down", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "f", "NUMBER", "faaaa", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "xuri", "I", "update", "GetSheetMap", "to", "also", "use", "the", "index", "based", "approach", "and", "add", "test", "that", "validate", "the", "sheet", "map", "that", "gets", "created", "NUMBER", "PR", "Details", "TAG", "Description", "TAG", "Related", "Issue", "TAG", "TAG", "TAG", "TAG", "Motivation", "and", "Context", "TAG", "How", "Has", "This", "Been", "Tested", "TAG", "TAG", "TAG", "Types", "of", "change", "TAG", "Docs", "change", "refactoring", "dependency", "upgrade", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "All", "new", "and", "exist", "test", "pass", "NUMBER", "PR", "Details", "TAG", "Description", "TAG", "Related", "Issue", "TAG", "TAG", "TAG", "TAG", "Motivation", "and", "Context", "TAG", "How", "Has", "This", "Been", "Tested", "TAG", "TAG", "TAG", "Types", "of", "change", "TAG", "Docs", "change", "refactoring", "dependency", "upgrade", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Description", "We", "were", "parsing", "the", "entire", "sheet", "twice", "which", "was", "leading", "to", "extra", "memory", "consumption", "and", "parsing", "time", "when", "reading", "an", "excel", "sheet", "with", "Rows", "and", "GetRows", "Related", "Issue", "NUMBER", "Motivation", "and", "Context", "This", "effectively", "halves", "the", "read", "time", "for", "spreadsheets", "NUMBER", "How", "Has", "This", "Been", "Tested", "All", "test", "continue", "to", "pass", "and", "I", "add", "a", "benchmark", "to", "validate", "the", "performance", "improvement", "NUMBER", "Before", "BenchmarkRows", "NUMBER", "NUMBER", "NUMBER", "ns", "op", "NUMBER", "B", "op", "NUMBER", "allocs", "op", "OnlyOnce", "BenchmarkRows", "NUMBER", "NUMBER", "NUMBER", "ns", "op", "NUMBER", "B", "op", "NUMBER", "allocs", "op", "When", "run", "against", "the", "data", "sheet", "use", "in", "NUMBER", "the", "read", "time", "went", "from", "NUMBER", "seconds", "on", "my", "machine", "to", "NUMBER", "seconds", "NUMBER", "Important", "The", "one", "thing", "I", "did", "change", "be", "that", "if", "you", "declare", "a", "blank", "Rows", "struct", "and", "immediately", "call", "Columns", "on", "it", "you", "will", "get", "an", "index", "out", "of", "bounds", "error", "since", "you", "ll", "be", "trying", "to", "access", "nothing", "NUMBER", "However", "this", "didn", "t", "seem", "realistic", "since", "users", "should", "be", "get", "the", "rows", "struct", "by", "calling", "file", "NUMBER", "Rows", "someSheet", "and", "it", "works", "correctly", "under", "those", "conditions", "NUMBER", "I", "delete", "the", "part", "of", "the", "test", "that", "looked", "for", "this", "behavior", "NUMBER", "I", "can", "add", "a", "bounds", "check", "to", "Columns", "if", "you", "prefer", "but", "it", "seems", "unnecessary", "to", "me", "NUMBER", "Types", "of", "change", "TAG", "Docs", "change", "refactoring", "dependency", "upgrade", "x", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "x", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "x", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "x", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "x", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "cbe", "NUMBER", "fdf", "NUMBER", "c", "NUMBER", "b", "NUMBER", "b", "NUMBER", "b", "NUMBER", "b", "NUMBER", "a", "NUMBER", "src", "pr", "el", "desc", "will", "increase", "coverage", "by", "NUMBER", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "rows", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "cm", "NUMBER", "cy", "NUMBER", "nbw", "NUMBER", "TAG", "NUMBER", "arrow_down", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "cbe", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "ca", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "Squashed", "and", "re", "sign", "NUMBER", "Failing", "for", "code", "coverage", "on", "the", "patch", "but", "this", "be", "mostly", "deleting", "code", "NUMBER", "Also", "be", "this", "LINK", "Skylar", "excelize", "blob", "master", "rows", "NUMBER", "go", "L", "NUMBER", "block", "necessary", "It", "s", "replacing", "a", "namespace", "header", "for", "compatibility", "with", "Office", "NUMBER", "but", "this", "be", "only", "a", "read", "operation", "within", "the", "library", "so", "Office", "NUMBER", "isn", "t", "a", "concern", "at", "this", "step", "NUMBER", "If", "I", "remove", "it", "the", "test", "all", "still", "pass", "the", "test", "file", "I", "have", "still", "read", "properly", "and", "it", "shaves", "another", "NUMBER", "off", "the", "read", "time", "of", "a", "file", "NUMBER", "If", "other", "code", "in", "the", "library", "be", "relying", "on", "this", "side", "effect", "then", "I", "ll", "hold", "off", "on", "remove", "it", "for", "a", "later", "PR", "and", "spend", "some", "time", "investigating", "how", "to", "do", "it", "NUMBER", "If", "I", "can", "just", "delete", "it", "without", "any", "side", "effect", "then", "let", "me", "know", "and", "I", "ll", "remove", "it", "in", "this", "PR", "NUMBER", "TAG", "Description", "I", "want", "to", "revent", "a", "sheet", "from", "be", "modify", "NUMBER", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "open", "protect", "worksheet", "NUMBER", "select", "Set", "column", "format", "Set", "row", "format", "Select", "locked", "cells", "Select", "unlocked", "cells", "NUMBER", "Want", "to", "can", "modify", "Modify", "cell", "width", "but", "can", "not", "modify", "cell", "value", "NUMBER", "I", "fork", "the", "this", "lib", "NUMBER", "the", "add", "API", "GetProtectSheet", "read", "the", "FormatSheetProtection", "then", "set", "the", "save", "field", "which", "be", "true", "NUMBER", "but", "it", "not", "works", "NUMBER", "Describe", "the", "results", "you", "received", "protect", "all", "I", "can", "not", "modify", "modify", "cell", "width", "Describe", "the", "results", "you", "expected", "can", "modify", "Modify", "cell", "width", "but", "can", "not", "modify", "cell", "value", "Output", "of", "go", "version", "text", "go", "version", "go", "NUMBER", "darwin", "amd", "NUMBER", "Excelize", "version", "or", "commit", "ID", "text", "NUMBER", "c", "NUMBER", "d", "NUMBER", "ab", "NUMBER", "f", "NUMBER", "b", "NUMBER", "ec", "NUMBER", "cfb", "NUMBER", "ad", "NUMBER", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "mac", "Darwin", "localhost", "NUMBER", "Darwin", "Kernel", "Version", "NUMBER", "Thu", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "PDT", "NUMBER", "root", "xnu", "NUMBER", "NUMBER", "RELEASE_X", "NUMBER", "_", "NUMBER", "x", "NUMBER", "_", "NUMBER", "excel", "v", "NUMBER", "NUMBER", "go", "func", "f", "File", "GetProtect", "sheet", "string", "FormatSheetProtection", "error", "xlsx", "err", "f", "NUMBER", "workSheetReader", "sheet", "if", "err", "nil", "return", "nil", "err", "var", "ret", "FormatSheetProtection", "ret", "NUMBER", "AutoFilter", "xlsx", "NUMBER", "SheetProtection", "NUMBER", "AutoFilter", "ret", "NUMBER", "DeleteColumns", "xlsx", "NUMBER", "SheetProtection", "NUMBER", "DeleteColumns", "ret", "NUMBER", "DeleteRows", "xlsx", "NUMBER", "SheetProtection", "NUMBER", "DeleteRows", "ret", "NUMBER", "FormatCells", "xlsx", "NUMBER", "SheetProtection", "NUMBER", "FormatCells", "ret", "NUMBER", "FormatColumns", "xlsx", "NUMBER", "SheetProtection", "NUMBER", "FormatColumns", "ret", "NUMBER", "FormatRows", "xlsx", "NUMBER", "SheetProtection", "NUMBER", "FormatRows", "ret", "NUMBER", "InsertColumns", "xlsx", "NUMBER", "SheetProtection", "NUMBER", "InsertColumns", "ret", "NUMBER", "InsertHyperlinks", "xlsx", "NUMBER", "SheetProtection", "NUMBER", "InsertHyperlinks", "ret", "NUMBER", "InsertRows", "xlsx", "NUMBER", "SheetProtection", "NUMBER", "InsertRows", "ret", "NUMBER", "EditObjects", "xlsx", "NUMBER", "SheetProtection", "NUMBER", "Objects", "ret", "NUMBER", "PivotTables", "xlsx", "NUMBER", "SheetProtection", "NUMBER", "PivotTables", "ret", "NUMBER", "EditScenarios", "xlsx", "NUMBER", "SheetProtection", "NUMBER", "Scenarios", "ret", "NUMBER", "SelectLockedCells", "xlsx", "NUMBER", "SheetProtection", "NUMBER", "SelectLockedCells", "ret", "NUMBER", "SelectUnlockedCells", "xlsx", "NUMBER", "SheetProtection", "NUMBER", "SelectUnlockedCells", "ret", "NUMBER", "Sort", "xlsx", "NUMBER", "SheetProtection", "NUMBER", "Sort", "return", "ret", "err", "TAG", "Description", "TAG", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "NUMBER", "NUMBER", "Describe", "the", "results", "you", "received", "Describe", "the", "results", "you", "expected", "Output", "of", "go", "version", "text", "paste", "your", "output", "here", "Excelize", "version", "or", "commit", "ID", "text", "paste", "here", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "A", "translation", "in", "english", "would", "be", "welcome", "too", "NUMBER", "Can", "I", "open", "the", "file", "in", "read", "only", "mode", "The", "file", "be", "opened", "by", "another", "process", "Office", "but", "I", "only", "need", "to", "read", "some", "data", "from", "it", "use", "program", "NUMBER", "open", "C", "Users", "andrew", "OneDrive", "REPORT", "NUMBER", "xlsx", "The", "process", "cannot", "access", "the", "file", "because", "it", "be", "be", "use", "by", "another", "process", "NUMBER", "Thanks", "NUMBER", "the", "minimum", "program", "be", "as", "the", "following", "func", "main", "f", "err", "excelize", "NUMBER", "OpenFile", "C", "Users", "andrew", "OneDrive", "Work", "Label", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "return", "s", "f", "NUMBER", "GetSheetMap", "fmt", "NUMBER", "Println", "s", "The", "Excel", "file", "be", "on", "my", "company", "OneDrive", "folder", "NUMBER", "It", "can", "be", "opened", "and", "processed", "use", "this", "program", "without", "any", "problem", "NUMBER", "But", "If", "I", "open", "the", "file", "use", "Microsoft", "Excel", "first", "NUMBER", "Then", "this", "program", "will", "fail", "and", "the", "message", "be", "open", "C", "Users", "andrew", "OneDrive", "Work", "Label", "NUMBER", "xlsx", "The", "process", "cannot", "access", "the", "file", "because", "it", "be", "be", "use", "by", "another", "process", "NUMBER", "PR", "Details", "TAG", "Description", "TAG", "Related", "Issue", "TAG", "TAG", "TAG", "TAG", "Motivation", "and", "Context", "TAG", "How", "Has", "This", "Been", "Tested", "TAG", "TAG", "TAG", "Types", "of", "change", "TAG", "Docs", "change", "refactoring", "dependency", "upgrade", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "All", "new", "and", "exist", "test", "pass", "NUMBER", "PR", "Details", "TAG", "Description", "TAG", "Related", "Issue", "TAG", "TAG", "TAG", "TAG", "Motivation", "and", "Context", "TAG", "How", "Has", "This", "Been", "Tested", "TAG", "TAG", "TAG", "Types", "of", "change", "TAG", "Docs", "change", "refactoring", "dependency", "upgrade", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "c", "NUMBER", "ee", "NUMBER", "fb", "NUMBER", "fa", "NUMBER", "adc", "NUMBER", "a", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "c", "NUMBER", "src", "pr", "el", "desc", "will", "increase", "coverage", "by", "TAG", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "TAG", "\u00f8", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "c", "NUMBER", "ee", "NUMBER", "e", "NUMBER", "f", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "Description", "func", "SetValueTest", "Open", "Book", "NUMBER", "Excel", "f", "err", "excelize", "NUMBER", "OpenFile", "NUMBER", "Book", "NUMBER", "xlsx", "if", "err", "nil", "Println", "err", "return", "for", "i", "NUMBER", "i", "TAG", "Hi", "GZLHZ", "thanks", "for", "your", "feedback", "NUMBER", "This", "issue", "has", "be", "fix", "NUMBER", "Please", "try", "to", "upgrade", "the", "library", "with", "the", "master", "branch", "code", "but", "I", "don", "t", "recommend", "calling", "the", "Save", "method", "in", "the", "iteration", "which", "will", "cause", "more", "heap", "memory", "allocated", "NUMBER", "Ok", "Thank", "you", "NUMBER", "I", "know", "that", "be", "not", "a", "good", "save", "way", "I", "just", "try", "it", "when", "I", "learning", "how", "to", "use", "and", "report", "to", "you", "NUMBER", "Excelize", "be", "a", "very", "good", "project", "thank", "you", "for", "create", "this", "When", "I", "download", "Excel", "file", "from", "Internet", "the", "content", "of", "the", "Excel", "file", "can", "t", "be", "read", "out", "from", "exclize", "program", "NUMBER", "If", "I", "open", "the", "Excel", "file", "and", "click", "on", "the", "Enable", "Edit", "button", "and", "save", "it", "the", "content", "can", "be", "read", "out", "from", "exclize", "program", "NUMBER", "How", "can", "I", "Enable", "Edit", "or", "remove", "the", "Protected", "View", "use", "exclize", "Windows", "NUMBER", "C", "Temp", "a", "type", "go", "NUMBER", "mod", "module", "a", "go", "NUMBER", "require", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "v", "NUMBER", "User", "Metrics", "NUMBER", "zip", "LINK", "Skylar", "excelize", "file", "NUMBER", "User", "NUMBER", "Metrics", "NUMBER", "zip", "It", "works", "well", "NUMBER", "Thanks", "for", "the", "quick", "fix", "NUMBER", "Description", "I", "have", "complicated", "accounting", "document", "with", "many", "rows", "NUMBER", "I", "was", "update", "package", "Excelize", "NUMBER", "And", "now", "if", "i", "calling", "RemoveRow", "in", "cycle", "i", "receive", "an", "error", "out", "of", "range", "NUMBER", "Error", "location", "RemoveRow", "adjustHelper", "adjustMergeCells", "deleteMergeCell", "Row", "sheet", "NUMBER", "MergeCells", "NUMBER", "Cells", "append", "sheet", "NUMBER", "MergeCells", "NUMBER", "Cells", "idx", "sheet", "NUMBER", "MergeCells", "NUMBER", "Cells", "idx", "NUMBER", "NUMBER", "I", "think", "you", "need", "to", "replace", "row", "for", "i", "areaData", "range", "xlsx", "NUMBER", "MergeCells", "NUMBER", "Cells", "with", "for", "i", "NUMBER", "i", "TAG", "len", "dealElems", "err", "xlsx", "NUMBER", "RemoveRow", "sheetName", "cursor", "NUMBER", "row", "NUMBER", "TAG", "v", "NUMBER", "Should", "we", "use", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "instead", "of", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "on", "the", "following", "page", "LINK", "install", "AngangGuo", "That", "doc", "be", "outdate", "it", "be", "for", "v", "NUMBER", "NUMBER", "Use", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "in", "your", "import", "NUMBER", "Build", "your", "project", "as", "a", "Go", "module", "go", "mod", "init", "and", "set", "GO", "NUMBER", "MODULE", "on", "for", "all", "go", "tasks", "for", "this", "project", "NUMBER", "With", "Go", "modules", "you", "don", "t", "have", "to", "explicitely", "go", "get", "it", "will", "be", "automatic", "on", "go", "build", "NUMBER", "Hello", "all", "I", "have", "pull", "latest", "Excelize", "code", "but", "now", "this", "error", "appeared", "in", "some", "of", "latest", "update", "NUMBER", "When", "I", "create", "new", "style", "and", "I", "tell", "NewStyle", "function", "that", "I", "do", "not", "want", "my", "font", "to", "be", "italic", "I", "still", "get", "style", "with", "italic", "font", "and", "my", "cells", "get", "italic", "NUMBER", "Here", "be", "code", "for", "test", "package", "main", "import", "fmt", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "f", "excelize", "NUMBER", "NewFile", "create", "new", "file", "option", "categories", "map", "string", "string", "A", "NUMBER", "Small", "A", "NUMBER", "Normal", "A", "NUMBER", "Large", "B", "NUMBER", "Apple", "C", "NUMBER", "Orange", "D", "NUMBER", "Pear", "values", "map", "string", "int", "B", "NUMBER", "NUMBER", "C", "NUMBER", "NUMBER", "D", "NUMBER", "NUMBER", "B", "NUMBER", "NUMBER", "C", "NUMBER", "NUMBER", "D", "NUMBER", "NUMBER", "B", "NUMBER", "NUMBER", "C", "NUMBER", "NUMBER", "D", "NUMBER", "NUMBER", "for", "k", "v", "range", "categories", "f", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "k", "v", "for", "k", "v", "range", "values", "f", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "k", "v", "CREATING", "STYLE", "WITH", "ITALIC", "FALSE", "style", "err", "f", "NUMBER", "NewStyle", "alignment", "horizontal", "center", "vertical", "center", "wrap_text", "false", "indent", "NUMBER", "justify_last_line", "false", "shrink_to_fit", "false", "text_rotation", "NUMBER", "font", "size", "NUMBER", "name", "Calibri", "bold", "true", "underline", "italic", "false", "family", "color", "ffffff", "fill", "type", "pattern", "color", "NUMBER", "c", "NUMBER", "ff", "pattern", "NUMBER", "err", "f", "NUMBER", "SetCellStyle", "Sheet", "NUMBER", "A", "NUMBER", "D", "NUMBER", "style", "err", "f", "NUMBER", "SaveAs", "NUMBER", "Book", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "Result", "TAG", "TAG", "TAG", "Thank", "you", "all", "xuri", "I", "be", "get", "this", "issue", "both", "on", "MS", "office", "I", "will", "ask", "for", "version", "and", "on", "Open", "office", "NUMBER", "Here", "be", "Open", "office", "info", "TAG", "TAG", "TAG", "Is", "it", "possible", "to", "convert", "xlsx", "file", "to", "csv", "use", "excelize", "Can", "t", "find", "manual", "about", "this", "feature", "\u4e00\u4e2acell\u5185\u7684\u5982\u679c\u5b58\u5728\u591a\u884c\u6570\u636e\u65f6", "\u8bfb\u53d6cell\u6570\u636e\u65f6\u53ea\u4f1a\u8fd4\u56de\u7b2c\u4e00\u884c\u7684\u6570\u636e", "\u6362\u884c\u540e\u7684\u6570\u636e\u90fd\u4f1a\u4e22\u5931", "\u672c\u5730\u5f00\u53d1\u73af\u5883\u662f", "mac", "NUMBER", "go", "NUMBER", "\u5f15\u7528\u7684\u5e93\u662f", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "xuri", "\u62b1\u6b49", "\u662f\u6211\u4f7f\u7528\u6709\u95ee\u9898", "TAG", "Description", "If", "you", "try", "to", "open", "and", "save", "an", "excel", "file", "which", "has", "formatterd", "colored", "cell", "borders", "it", "corrupts", "the", "file", "xlsx", "err", "excelize", "NUMBER", "OpenFile", "NUMBER", "Book", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "return", "err", "xlsx", "NUMBER", "Save", "if", "err", "nil", "fmt", "NUMBER", "Println", "unable", "to", "save", "Internal", "timesheet", "error", "err", "os", "NUMBER", "Exit", "NUMBER", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "NUMBER", "NUMBER", "Describe", "the", "results", "you", "received", "Describe", "the", "results", "you", "expected", "Output", "of", "go", "version", "text", "go", "version", "go", "NUMBER", "darwin", "amd", "NUMBER", "Excelize", "version", "or", "commit", "ID", "text", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "v", "NUMBER", "NUMBER", "d", "NUMBER", "ca", "NUMBER", "e", "NUMBER", "c", "NUMBER", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "Mac", "OS", "Excel", "for", "mac", "NUMBER", "I", "can", "t", "upload", "the", "actual", "attachment", "since", "it", "has", "some", "confidential", "data", "but", "it", "happens", "for", "any", "excel", "file", "so", "let", "me", "recreate", "the", "scenario", "with", "a", "regular", "file", "and", "upload", "that", "NUMBER", "Case", "NUMBER", "You", "should", "only", "change", "the", "font", "to", "Yu", "Gothic", "but", "bold", "and", "italic", "be", "valid", "NUMBER", "The", "same", "event", "occur", "regardless", "of", "the", "font", "setting", "NUMBER", "Case", "NUMBER", "go", "package", "main", "import", "fmt", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "f", "excelize", "NUMBER", "NewFile", "style", "err", "f", "NUMBER", "NewStyle", "font", "family", "Yu", "Gothic", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "f", "NUMBER", "SetCellStyle", "Sheet", "NUMBER", "A", "NUMBER", "A", "NUMBER", "style", "f", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "A", "NUMBER", "Hello", "world", "NUMBER", "f", "NUMBER", "SaveAs", "NUMBER", "Book_Case", "NUMBER", "xlsx", "case", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "d", "NUMBER", "NUMBER", "ca", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "be", "NUMBER", "c", "NUMBER", "f", "NUMBER", "c", "NUMBER", "png", "Book_Case", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "Book_Case", "NUMBER", "xlsx", "Case", "NUMBER", "You", "change", "the", "font", "to", "Yu", "Gothic", "and", "set", "the", "bool", "values", "of", "bold", "and", "italic", "to", "false", "but", "bold", "and", "italic", "be", "valid", "NUMBER", "Case", "NUMBER", "go", "package", "main", "import", "fmt", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "f", "excelize", "NUMBER", "NewFile", "style", "err", "f", "NUMBER", "NewStyle", "font", "bold", "false", "italic", "false", "family", "Yu", "Gothic", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "f", "NUMBER", "SetCellStyle", "Sheet", "NUMBER", "B", "NUMBER", "B", "NUMBER", "style", "f", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "B", "NUMBER", "Hello", "world", "NUMBER", "f", "NUMBER", "SaveAs", "NUMBER", "Book_Case", "NUMBER", "xlsx", "case", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "c", "NUMBER", "NUMBER", "ca", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "db", "NUMBER", "a", "NUMBER", "c", "NUMBER", "ecf", "NUMBER", "png", "Book_Case", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "Book_Case", "NUMBER", "xlsx", "I", "checked", "the", "test", "code", "and", "find", "that", "the", "values", "set", "for", "bold", "and", "italic", "were", "test", "with", "only", "true", "so", "I", "m", "concerned", "that", "I", "can", "t", "confirm", "what", "happens", "in", "the", "case", "of", "false", "NUMBER", "Output", "of", "go", "version", "go", "version", "go", "NUMBER", "windows", "amd", "NUMBER", "Excelize", "version", "or", "commit", "ID", "NUMBER", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "Windows", "NUMBER", "Excel", "NUMBER", "Excel", "NUMBER", "Hi", "xuri", "thanks", "for", "reply", "NUMBER", "I", "m", "do", "checking", "the", "fix", "NUMBER", "It", "s", "work", "properly", "NUMBER", "case", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "fbd", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "afa", "NUMBER", "fcfbcd", "NUMBER", "png", "case", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "fbd", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "cae", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "png", "TAG", "I", "have", "a", "spreadsheet", "with", "merge", "cells", "on", "row", "NUMBER", "F", "NUMBER", "H", "NUMBER", "NUMBER", "After", "I", "call", "file", "NUMBER", "RemoveRow", "Sheet", "NUMBER", "NUMBER", "the", "new", "row", "NUMBER", "which", "originally", "do", "not", "contain", "any", "merge", "cells", "will", "have", "F", "NUMBER", "H", "NUMBER", "merge", "NUMBER", "test", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "test", "NUMBER", "xlsx", "file", "err", "excelize", "NUMBER", "OpenFile", "test", "NUMBER", "xlsx", "file", "NUMBER", "RemoveRow", "Sheet", "NUMBER", "NUMBER", "file", "NUMBER", "SaveAs", "out", "NUMBER", "xlsx", "Output", "of", "go", "version", "go", "version", "go", "NUMBER", "windows", "amd", "NUMBER", "Excelize", "version", "or", "commit", "ID", "NUMBER", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "Windows", "NUMBER", "Excel", "NUMBER", "Hello", "I", "have", "report", "bug", "with", "f", "NUMBER", "SetSheetVisible", "function", "NUMBER", "Fix", "NUMBER", "be", "work", "for", "Microsoft", "office", "but", "issue", "remains", "in", "Open", "Office", "NUMBER", "Test", "code", "package", "main", "import", "fmt", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "f", "excelize", "NUMBER", "NewFile", "Create", "a", "new", "sheet", "NUMBER", "index", "f", "NUMBER", "NewSheet", "Sheet", "NUMBER", "Set", "value", "of", "a", "cell", "NUMBER", "f", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "A", "NUMBER", "Hello", "world", "NUMBER", "f", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "B", "NUMBER", "NUMBER", "Set", "active", "sheet", "of", "the", "workbook", "NUMBER", "f", "NUMBER", "SetActiveSheet", "index", "Save", "xlsx", "file", "by", "the", "given", "path", "NUMBER", "err", "f", "NUMBER", "SetSheetVisible", "Sheet", "NUMBER", "false", "err", "f", "NUMBER", "SaveAs", "NUMBER", "Book", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "Book_", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "Book_", "NUMBER", "xlsx", "Book_", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "Book_", "NUMBER", "xlsx", "When", "there", "be", "six", "types", "of", "comparison", "target", "NUMBER", "test", "NUMBER", "go", "package", "main", "import", "fmt", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "categories", "map", "string", "string", "A", "NUMBER", "SS", "A", "NUMBER", "S", "A", "NUMBER", "M", "A", "NUMBER", "L", "A", "NUMBER", "LL", "A", "NUMBER", "XL", "B", "NUMBER", "Apple", "C", "NUMBER", "Orange", "D", "NUMBER", "Pear", "values", "map", "string", "int", "B", "NUMBER", "NUMBER", "C", "NUMBER", "NUMBER", "D", "NUMBER", "NUMBER", "B", "NUMBER", "NUMBER", "C", "NUMBER", "NUMBER", "D", "NUMBER", "NUMBER", "B", "NUMBER", "NUMBER", "C", "NUMBER", "NUMBER", "D", "NUMBER", "NUMBER", "B", "NUMBER", "NUMBER", "C", "NUMBER", "NUMBER", "D", "NUMBER", "NUMBER", "B", "NUMBER", "NUMBER", "C", "NUMBER", "NUMBER", "D", "NUMBER", "NUMBER", "B", "NUMBER", "NUMBER", "C", "NUMBER", "NUMBER", "D", "NUMBER", "NUMBER", "f", "excelize", "NUMBER", "NewFile", "for", "k", "v", "range", "categories", "f", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "k", "v", "for", "k", "v", "range", "values", "f", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "k", "v", "f", "NUMBER", "AddChart", "Sheet", "NUMBER", "E", "NUMBER", "type", "line", "series", "name", "Sheet", "NUMBER", "A", "NUMBER", "categories", "values", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "name", "Sheet", "NUMBER", "A", "NUMBER", "categories", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "values", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "name", "Sheet", "NUMBER", "A", "NUMBER", "categories", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "values", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "name", "Sheet", "NUMBER", "A", "NUMBER", "categories", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "values", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "name", "Sheet", "NUMBER", "A", "NUMBER", "categories", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "values", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "name", "Sheet", "NUMBER", "A", "NUMBER", "categories", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "values", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "format", "x_scale", "NUMBER", "y_scale", "NUMBER", "x_offset", "NUMBER", "y_offset", "NUMBER", "print_obj", "true", "lock_aspect_ratio", "false", "locked", "false", "legend", "position", "top", "show_legend_key", "false", "title", "name", "Fruit", "Line", "Chart", "plotarea", "show_bubble_size", "true", "show_cat_name", "false", "show_leader_lines", "false", "show_percent", "true", "show_series_name", "true", "show_val", "true", "show_blanks_as", "zero", "err", "f", "NUMBER", "SaveAs", "NUMBER", "Book_", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "test", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "fd", "NUMBER", "e", "NUMBER", "NUMBER", "cb", "NUMBER", "bb", "NUMBER", "cf", "NUMBER", "e", "NUMBER", "png", "When", "there", "be", "seven", "types", "of", "comparison", "target", "NUMBER", "Of", "course", "also", "in", "the", "case", "of", "eight", "or", "more", "with", "the", "same", "result", "NUMBER", "test", "NUMBER", "go", "package", "main", "import", "fmt", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "categories", "map", "string", "string", "A", "NUMBER", "SS", "A", "NUMBER", "S", "A", "NUMBER", "M", "A", "NUMBER", "L", "A", "NUMBER", "LL", "A", "NUMBER", "XL", "A", "NUMBER", "XLL", "B", "NUMBER", "Apple", "C", "NUMBER", "Orange", "D", "NUMBER", "Pear", "values", "map", "string", "intf", "excelize", "NUMBER", "NewFile", "for", "k", "v", "range", "categories", "f", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "k", "v", "for", "k", "v", "range", "values", "f", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "k", "v", "f", "NUMBER", "AddChart", "Sheet", "NUMBER", "E", "NUMBER", "type", "line", "series", "name", "Sheet", "NUMBER", "A", "NUMBER", "categories", "values", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "name", "Sheet", "NUMBER", "A", "NUMBER", "categories", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "values", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "name", "Sheet", "NUMBER", "A", "NUMBER", "categories", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "values", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "name", "Sheet", "NUMBER", "A", "NUMBER", "categories", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "values", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "name", "Sheet", "NUMBER", "A", "NUMBER", "categories", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "values", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "name", "Sheet", "NUMBER", "A", "NUMBER", "categories", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "values", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "name", "Sheet", "NUMBER", "A", "NUMBER", "categories", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "values", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "format", "x_scale", "NUMBER", "y_scale", "NUMBER", "x_offset", "NUMBER", "y_offset", "NUMBER", "print_obj", "true", "lock_aspect_ratio", "false", "locked", "false", "legend", "position", "top", "show_legend_key", "false", "title", "name", "Fruit", "Line", "Chart", "plotarea", "show_bubble_size", "true", "show_cat_name", "false", "show_leader_lines", "false", "show_percent", "true", "show_series_name", "true", "show_val", "true", "show_blanks_as", "zero", "err", "f", "NUMBER", "SaveAs", "NUMBER", "Book_", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "test", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ab", "NUMBER", "NUMBER", "fd", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "da", "NUMBER", "png", "When", "the", "drawing", "NUMBER", "xml", "of", "Book_", "NUMBER", "xlsx", "and", "the", "drawing", "NUMBER", "xml", "of", "Book_", "NUMBER", "xlsx", "were", "compared", "there", "was", "no", "difference", "in", "the", "file", "contents", "NUMBER", "Even", "when", "there", "were", "five", "types", "of", "comparison", "target", "there", "were", "no", "differences", "in", "drawing", "NUMBER", "xml", "NUMBER", "Basically", "drawing", "NUMBER", "xml", "do", "not", "change", "with", "the", "number", "of", "comparison", "target", "so", "it", "seems", "that", "a", "problem", "will", "occur", "in", "the", "part", "that", "refers", "to", "drawing", "NUMBER", "xml", "NUMBER", "test", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "b", "NUMBER", "NUMBER", "fd", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "afe", "NUMBER", "bca", "NUMBER", "png", "When", "the", "chart", "NUMBER", "xml", "of", "Book_", "NUMBER", "xlsx", "and", "the", "chart", "NUMBER", "xml", "of", "Book_", "NUMBER", "xlsx", "were", "compared", "chart", "NUMBER", "xml", "of", "Book_", "NUMBER", "xlsx", "caught", "the", "following", "part", "NUMBER", "TAG", "TAG", "TAG", "TAG", "TAG", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "Sheet", "NUMBER", "A", "NUMBER", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "In", "the", "argument", "contents", "of", "line", "NUMBER", "of", "chart", "NUMBER", "go", "f", "NUMBER", "addChart", "formatSet", "the", "component", "cap", "of", "Series", "change", "from", "len", "NUMBER", "cap", "NUMBER", "to", "len", "NUMBER", "cap", "NUMBER", "to", "be", "caught", "NUMBER", "test", "NUMBER", "go", "When", "there", "be", "six", "types", "of", "comparison", "target", "NUMBER", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "File", "NUMBER", "AddChart", "C", "Go", "src", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "chart", "NUMBER", "go", "NUMBER", "PC", "NUMBER", "x", "NUMBER", "a", "NUMBER", "NUMBER", "drawingRID", "f", "NUMBER", "addDrawingRelationships", "drawingID", "SourceRelationshipChart", "NUMBER", "charts", "chart", "strconv", "NUMBER", "Itoa", "chartID", "NUMBER", "xml", "NUMBER", "err", "f", "NUMBER", "addDrawingChart", "sheet", "drawingXML", "cell", "formatSet", "NUMBER", "Dimension", "NUMBER", "Width", "formatSet", "NUMBER", "Dimension", "NUMBER", "Height", "drawingRID", "formatSet", "NUMBER", "Format", "NUMBER", "if", "err", "nil", "NUMBER", "return", "err", "NUMBER", "NUMBER", "f", "NUMBER", "addChart", "formatSet", "NUMBER", "f", "NUMBER", "addContentTypePart", "chartID", "chart", "NUMBER", "f", "NUMBER", "addContentTypePart", "drawingID", "drawings", "NUMBER", "return", "err", "NUMBER", "NUMBER", "dlv", "p", "formatSet", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChart", "Type", "line", "Series", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartSeries", "len", "NUMBER", "cap", "NUMBER", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartSeries", "NUMBER", "xc", "NUMBER", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartSeries", "NUMBER", "xc", "NUMBER", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartSeries", "NUMBER", "xc", "NUMBER", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartSeries", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartSeries", "NUMBER", "xc", "NUMBER", "a", "NUMBER", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartSeries", "NUMBER", "xc", "NUMBER", "af", "NUMBER", "Format", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatPicture", "FPrintsWithSheet", "true", "FLocksWithSheet", "false", "NoChangeAspect", "false", "OffsetX", "NUMBER", "OffsetY", "NUMBER", "XScale", "NUMBER", "YScale", "NUMBER", "Hyperlink", "HyperlinkType", "Positioning", "Dimension", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartDimension", "Width", "NUMBER", "Height", "NUMBER", "Legend", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartLegend", "None", "false", "DeleteSeries", "int", "len", "NUMBER", "cap", "NUMBER", "nil", "Font", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatFont", "NUMBER", "xc", "NUMBER", "b", "NUMBER", "Layout", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatLayout", "NUMBER", "xc", "NUMBER", "f", "NUMBER", "Position", "top", "ShowLegendEntry", "false", "ShowLegendKey", "false", "Title", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartTitle", "None", "false", "Name", "Fruit", "Line", "Chart", "Overlay", "false", "Layout", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatLayout", "NUMBER", "xc", "NUMBER", "XAxis", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartAxis", "Crossing", "MajorTickMark", "MinorTickMark", "MinorUnitType", "MajorUnit", "NUMBER", "MajorUnitType", "DisplayUnits", "DisplayUnitsVisible", "false", "DateAxis", "false", "ReverseOrder", "false", "Maximum", "NUMBER", "Minimum", "NUMBER", "NumFormat", "NumFont", "struct", "Color", "string", "json", "color", "Bold", "bool", "json", "bold", "Italic", "bool", "json", "italic", "Underline", "bool", "json", "underline", "NUMBER", "xc", "NUMBER", "f", "NUMBER", "NameLayout", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatLayout", "NUMBER", "xc", "NUMBER", "YAxis", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartAxis", "Crossing", "MajorTickMark", "MinorTickMark", "MinorUnitType", "MajorUnit", "NUMBER", "MajorUnitType", "DisplayUnits", "DisplayUnitsVisible", "false", "DateAxis", "false", "ReverseOrder", "false", "Maximum", "NUMBER", "Minimum", "NUMBER", "NumFormat", "NumFont", "struct", "Color", "string", "json", "color", "Bold", "bool", "json", "bold", "Italic", "bool", "json", "italic", "Underline", "bool", "json", "underline", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "NameLayout", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatLayout", "NUMBER", "xc", "NUMBER", "d", "NUMBER", "Chartarea", "struct", "Border", "struct", "None", "bool", "json", "none", "json", "border", "Fill", "struct", "Color", "string", "json", "color", "json", "fill", "Pattern", "struct", "Pattern", "string", "json", "pattern", "FgColor", "string", "json", "fg_color", "BgColor", "string", "json", "bg_color", "json", "pattern", "Border", "struct", "None", "bool", "json", "none", "NUMBER", "xc", "NUMBER", "f", "NUMBER", "Fill", "struct", "Color", "string", "json", "color", "NUMBER", "xc", "NUMBER", "Pattern", "struct", "Pattern", "string", "json", "pattern", "FgColor", "string", "json", "fg_color", "BgColor", "string", "json", "bg_color", "NUMBER", "xc", "NUMBER", "Plotarea", "struct", "ShowBubbleSize", "bool", "json", "show_bubble_size", "ShowCatName", "bool", "json", "show_cat_name", "ShowLeaderLines", "bool", "json", "show_leader_lines", "ShowPercent", "bool", "json", "show_percent", "ShowSerName", "bool", "json", "show_series_name", "ShowVal", "bool", "json", "show_val", "Gradient", "struct", "Colors", "string", "json", "colors", "json", "gradient", "Border", "struct", "Color", "string", "json", "color", "Width", "int", "json", "width", "DashType", "string", "json", "dash_type", "json", "border", "Fill", "struct", "Color", "string", "json", "color", "json", "fill", "Layout", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatLayout", "json", "layout", "ShowBubbleSize", "true", "ShowCatName", "false", "ShowLeaderLines", "false", "ShowPercent", "true", "ShowSerName", "true", "ShowVal", "true", "Gradient", "struct", "Colors", "string", "json", "colors", "NUMBER", "xc", "NUMBER", "Border", "struct", "Color", "string", "json", "color", "Width", "int", "json", "width", "DashType", "string", "json", "dash_type", "NUMBER", "xc", "NUMBER", "Fill", "struct", "Color", "string", "json", "color", "NUMBER", "xc", "NUMBER", "Layout", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatLayout", "NUMBER", "xc", "NUMBER", "ShowBlanksAs", "zero", "ShowHiddenData", "false", "SetRotation", "NUMBER", "SetHoleSize", "NUMBER", "dlv", "test", "NUMBER", "go", "When", "there", "be", "seven", "types", "of", "comparison", "target", "NUMBER", "dlv", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "File", "NUMBER", "AddChart", "C", "Go", "src", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "chart", "NUMBER", "go", "NUMBER", "PC", "NUMBER", "x", "NUMBER", "a", "NUMBER", "NUMBER", "drawingRID", "f", "NUMBER", "addDrawingRelationships", "drawingID", "SourceRelationshipChart", "NUMBER", "charts", "chart", "strconv", "NUMBER", "Itoa", "chartID", "NUMBER", "xml", "NUMBER", "err", "f", "NUMBER", "addDrawingChart", "sheet", "drawingXML", "cell", "formatSet", "NUMBER", "Dimension", "NUMBER", "Width", "formatSet", "NUMBER", "Dimension", "NUMBER", "Height", "drawingRID", "formatSet", "NUMBER", "Format", "NUMBER", "if", "err", "nil", "NUMBER", "return", "err", "NUMBER", "NUMBER", "f", "NUMBER", "addChart", "formatSet", "NUMBER", "f", "NUMBER", "addContentTypePart", "chartID", "chart", "NUMBER", "f", "NUMBER", "addContentTypePart", "drawingID", "drawings", "NUMBER", "return", "err", "NUMBER", "NUMBER", "dlv", "p", "formatSet", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChart", "Type", "line", "Series", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartSeries", "len", "NUMBER", "cap", "NUMBER", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartSeries", "NUMBER", "xc", "NUMBER", "fd", "NUMBER", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartSeries", "NUMBER", "xc", "NUMBER", "fd", "NUMBER", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartSeries", "NUMBER", "xc", "NUMBER", "fd", "NUMBER", "b", "NUMBER", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartSeries", "NUMBER", "xc", "NUMBER", "fd", "NUMBER", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartSeries", "NUMBER", "xc", "NUMBER", "fd", "NUMBER", "e", "NUMBER", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartSeries", "NUMBER", "xc", "NUMBER", "fd", "NUMBER", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartSeries", "NUMBER", "xc", "NUMBER", "fd", "NUMBER", "Format", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatPicture", "FPrintsWithSheet", "true", "FLocksWithSheet", "false", "NoChangeAspect", "false", "OffsetX", "NUMBER", "OffsetY", "NUMBER", "XScale", "NUMBER", "YScale", "NUMBER", "Hyperlink", "HyperlinkType", "Positioning", "Dimension", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartDimension", "Width", "NUMBER", "Height", "NUMBER", "Legend", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartLegend", "None", "false", "DeleteSeries", "int", "len", "NUMBER", "cap", "NUMBER", "nil", "Font", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatFont", "NUMBER", "xc", "NUMBER", "b", "NUMBER", "Layout", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatLayout", "NUMBER", "xc", "NUMBER", "f", "NUMBER", "Position", "top", "ShowLegendEntry", "false", "ShowLegendKey", "false", "Title", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartTitle", "None", "false", "Name", "Fruit", "Line", "Chart", "Overlay", "false", "Layout", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatLayout", "NUMBER", "xc", "NUMBER", "XAxis", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartAxis", "Crossing", "MajorTickMark", "MinorTickMark", "MinorUnitType", "MajorUnit", "NUMBER", "MajorUnitType", "DisplayUnits", "DisplayUnitsVisible", "false", "DateAxis", "false", "ReverseOrder", "false", "Maximum", "NUMBER", "Minimum", "NUMBER", "NumFormat", "NumFont", "struct", "Color", "string", "json", "color", "Bold", "bool", "json", "bold", "Italic", "bool", "json", "italic", "Underline", "bool", "json", "underline", "NUMBER", "xc", "NUMBER", "f", "NUMBER", "NameLayout", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatLayout", "NUMBER", "xc", "NUMBER", "YAxis", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatChartAxis", "Crossing", "MajorTickMark", "MinorTickMark", "MinorUnitType", "MajorUnit", "NUMBER", "MajorUnitType", "DisplayUnits", "DisplayUnitsVisible", "false", "DateAxis", "false", "ReverseOrder", "false", "Maximum", "NUMBER", "Minimum", "NUMBER", "NumFormat", "NumFont", "struct", "Color", "string", "json", "color", "Bold", "bool", "json", "bold", "Italic", "bool", "json", "italic", "Underline", "bool", "json", "underline", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "NameLayout", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatLayout", "NUMBER", "xc", "NUMBER", "d", "NUMBER", "Chartarea", "struct", "Border", "struct", "None", "bool", "json", "none", "json", "border", "Fill", "struct", "Color", "string", "json", "color", "json", "fill", "Pattern", "struct", "Pattern", "string", "json", "pattern", "FgColor", "string", "json", "fg_color", "BgColor", "string", "json", "bg_color", "json", "pattern", "Border", "struct", "None", "bool", "json", "none", "NUMBER", "xc", "NUMBER", "f", "NUMBER", "Fill", "struct", "Color", "string", "json", "color", "NUMBER", "xc", "NUMBER", "Pattern", "struct", "Pattern", "string", "json", "pattern", "FgColor", "string", "json", "fg_color", "BgColor", "string", "json", "bg_color", "NUMBER", "xc", "NUMBER", "Plotarea", "struct", "ShowBubbleSize", "bool", "json", "show_bubble_size", "ShowCatName", "bool", "json", "show_cat_name", "ShowLeaderLines", "bool", "json", "show_leader_lines", "ShowPercent", "bool", "json", "show_percent", "ShowSerName", "bool", "json", "show_series_name", "ShowVal", "bool", "json", "show_val", "Gradient", "struct", "Colors", "string", "json", "colors", "json", "gradient", "Border", "struct", "Color", "string", "json", "color", "Width", "int", "json", "width", "DashType", "string", "json", "dash_type", "json", "border", "Fill", "struct", "Color", "string", "json", "color", "json", "fill", "Layout", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatLayout", "json", "layout", "ShowBubbleSize", "true", "ShowCatName", "false", "ShowLeaderLines", "false", "ShowPercent", "true", "ShowSerName", "true", "ShowVal", "true", "Gradient", "struct", "Colors", "string", "json", "colors", "NUMBER", "xc", "NUMBER", "Border", "struct", "Color", "string", "json", "color", "Width", "int", "json", "width", "DashType", "string", "json", "dash_type", "NUMBER", "xc", "NUMBER", "Fill", "struct", "Color", "string", "json", "color", "NUMBER", "xc", "NUMBER", "Layout", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "formatLayout", "NUMBER", "xc", "NUMBER", "ShowBlanksAs", "zero", "ShowHiddenData", "false", "SetRotation", "NUMBER", "SetHoleSize", "NUMBER", "dlv", "delve_test", "NUMBER", "txt", "LINK", "Skylar", "excelize", "file", "NUMBER", "delve_test", "NUMBER", "txt", "delve_test", "NUMBER", "txt", "LINK", "Skylar", "excelize", "file", "NUMBER", "delve_test", "NUMBER", "txt", "Hi", "xuri", "thanks", "for", "reply", "NUMBER", "I", "m", "do", "checking", "the", "fix", "NUMBER", "It", "s", "work", "properly", "NUMBER", "Thanks", "for", "your", "prompt", "response", "NUMBER", "fix", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "fa", "NUMBER", "NUMBER", "ac", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "d", "NUMBER", "png", "Excelize", "broke", "xlsx", "file", "when", "InsertRow", "and", "sheet", "contain", "some", "summarized", "cells", "NUMBER", "For", "example", "A", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Sum", "in", "cell", "A", "NUMBER", "xlsx", "NUMBER", "InsertRow", "Sheet", "NUMBER", "NUMBER", "and", "as", "result", "file", "be", "broken", "NUMBER", "Today", "I", "have", "update", "excelize", "previous", "update", "was", "NUMBER", "or", "NUMBER", "month", "ago", "NUMBER", "After", "that", "appeared", "problem", "with", "lost", "bold", "format", "on", "text", "in", "cells", "NUMBER", "Open", "file", "in", "Excel", "make", "some", "cells", "bold", "save", "file", "NUMBER", "Than", "open", "and", "save", "file", "by", "Excelize", "open", "again", "in", "Excel", "and", "all", "cells", "be", "not", "bold", "NUMBER", "Hello", "all", "I", "be", "use", "excelize", "for", "a", "long", "time", "and", "I", "have", "notice", "that", "I", "be", "get", "blank", "sheet", "blank", "file", "NUMBER", "It", "be", "happening", "on", "all", "OS", "platforms", "NUMBER", "Issue", "happens", "randomly", "if", "i", "start", "same", "export", "of", "data", "once", "it", "can", "be", "filled", "once", "I", "get", "empty", "sheet", "NUMBER", "It", "can", "happen", "that", "I", "have", "blank", "once", "in", "NUMBER", "or", "so", "NUMBER", "After", "hard", "test", "I", "have", "spotted", "that", "part", "which", "be", "cause", "this", "issue", "be", "in", "f", "NUMBER", "DeleteSheet", "Sheet", "NUMBER", "I", "be", "calling", "this", "function", "before", "I", "use", "SaveAs", "NUMBER", "Before", "that", "I", "have", "tracked", "data", "and", "xlsx", "file", "should", "be", "populated", "but", "excelize", "saves", "empty", "file", "NUMBER", "Hi", "xuri", "I", "can", "not", "provide", "you", "with", "my", "code", "because", "of", "ISO", "NUMBER", "But", "I", "will", "try", "to", "create", "same", "test", "code", "as", "I", "use", "NUMBER", "I", "build", "go", "file", "on", "Ubuntu", "NUMBER", "LTS", "and", "GO", "version", "be", "be", "go", "NUMBER", "linux", "amd", "NUMBER", "Hello", "all", "NUMBER", "Thank", "you", "for", "your", "work", "NUMBER", "I", "have", "notice", "that", "err", "f", "NUMBER", "SetSheetVisible", "Sheet", "NUMBER", "false", "do", "not", "work", "NUMBER", "Here", "be", "code", "package", "main", "import", "fmt", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "f", "excelize", "NUMBER", "NewFile", "Create", "a", "new", "sheet", "NUMBER", "index", "f", "NUMBER", "NewSheet", "Sheet", "NUMBER", "Set", "value", "of", "a", "cell", "NUMBER", "f", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "A", "NUMBER", "Hello", "world", "NUMBER", "f", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "B", "NUMBER", "NUMBER", "Set", "active", "sheet", "of", "the", "workbook", "NUMBER", "f", "NUMBER", "SetActiveSheet", "index", "Save", "xlsx", "file", "by", "the", "given", "path", "NUMBER", "err", "f", "NUMBER", "SetSheetVisible", "Sheet", "NUMBER", "false", "err", "f", "NUMBER", "SaveAs", "NUMBER", "Book", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "\u8bf7\u95ee\u6211\u751f\u6210\u7684execl\u5728\u67d0\u4e9b\u8f6f\u4ef6\u4e2d\u4f7f\u7528\u65f6\u4f1a\u62a5", "File", "be", "not", "a", "valid", "ZIP", "file", "\u7136\u540e\u6211\u6253\u5f00\u6587\u4ef6\u4fdd\u5b58\u4e00\u4e0b\u5728\u7528\u8f6f\u4ef6\u4f7f\u7528\u5c31\u6ca1\u95ee\u9898\u4e86", "\u4fdd\u5b58\u540e\u7684execl\u4f1a\u53d8\u5927", "\u8bf7\u95ee\u6709\u529e\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5417", "Hi", "thank", "you", "very", "much", "for", "this", "great", "library", "NUMBER", "I", "would", "like", "to", "edit", "the", "file", "properties", "as", "for", "example", "the", "author", "title", "subject", "and", "so", "on", "NUMBER", "The", "file", "created", "by", "the", "program", "have", "the", "following", "properties", "as", "shown", "in", "this", "Windows", "detail", "view", "screenshot", "Unbenannt", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "eb", "NUMBER", "NUMBER", "de", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "d", "NUMBER", "c", "NUMBER", "ef", "NUMBER", "PNG", "It", "would", "be", "great", "if", "I", "could", "change", "those", "properties", "NUMBER", "Works", "like", "a", "charm", "Thanks", "TAG", "Description", "TAG", "Hi", "Thanks", "a", "million", "for", "excelize", "But", "unfortunately", "I", "think", "I", "ve", "find", "a", "bug", "connected", "with", "formulas", "feature", "of", "NUMBER", "xlsx", "file", "NUMBER", "In", "the", "excelize", "it", "s", "file", "property", "CalcChain", "NUMBER", "When", "my", "problem", "occur", "If", "there", "was", "any", "formula", "add", "to", "NUMBER", "xlsx", "file", "and", "then", "was", "remove", "the", "excelize", "treating", "it", "as", "not", "nil", "but", "like", "an", "empty", "object", "of", "excelize", "NUMBER", "xlsxCalcChain", "and", "saves", "with", "incorrect", "structure", "NUMBER", "If", "try", "to", "open", "NUMBER", "xlsx", "file", "with", "Excel", "get", "this", "error", "Removed", "Records", "Formula", "from", "xl", "calcChain", "NUMBER", "xml", "part", "Calculation", "properties", "Hope", "not", "made", "it", "too", "unclear", "Thanks", "Thank", "you", "for", "your", "great", "work", "on", "excelize", "NUMBER", "Reading", "works", "like", "a", "charm", "NUMBER", "But", "I", "have", "an", "issue", "with", "write", "NUMBER", "When", "I", "update", "a", "Cell", "or", "Add", "a", "new", "Sheet", "excel", "file", "be", "corrupted", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "deb", "ffef", "NUMBER", "a", "NUMBER", "df", "NUMBER", "png", "TAG", "TAG", "TAG", "error", "NUMBER", "_", "NUMBER", "xml", "TAG", "TAG", "Errors", "were", "detected", "in", "file", "C", "Projects", "Programming", "go", "src", "github", "NUMBER", "com", "valasek", "excel", "excel", "NUMBER", "xlsx", "TAG", "TAG", "TAG", "Repaired", "Part", "xl", "workbook", "NUMBER", "xml", "part", "with", "XML", "error", "NUMBER", "Workbook", "Load", "error", "NUMBER", "Line", "NUMBER", "column", "NUMBER", "TAG", "TAG", "TAG", "Used", "code", "Package", "excel", "reads", "and", "checks", "internal", "timesheets", "package", "main", "import", "fmt", "os", "strconv", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "func", "main", "open", "file", "xlsx", "err", "excelize", "NUMBER", "OpenFile", "NUMBER", "excel", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "os", "NUMBER", "Exit", "NUMBER", "jump", "to", "last", "row", "lastRow", "NUMBER", "for", "cell", "_", "xlsx", "NUMBER", "GetCellValue", "Timesheet", "A", "strconv", "NUMBER", "Itoa", "lastRow", "if", "cell", "lastRow", "lastRow", "NUMBER", "else", "break", "mock", "the", "data", "data", "string", "string", "Stanislav", "Valasek", "NUMBER", "NUMBER", "NUMBER", "Microsoft", "NUMBER", "Customer", "Improving", "dba", "name", "Standard", "string", "Stanislav", "Valasek", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Microsoft", "NUMBER", "Parsing", "legal", "name", "Standard", "xlsx", "NUMBER", "NewSheet", "NewSheet", "NUMBER", "index", "xlsx", "NUMBER", "GetSheetIndex", "Timesheet", "xlsx", "NUMBER", "SetActiveSheet", "index", "write", "the", "data", "for", "i", "row", "range", "data", "for", "j", "value", "range", "row", "err", "xlsx", "NUMBER", "SetCellStr", "Timesheet", "string", "A", "j", "strconv", "NUMBER", "Itoa", "lastRow", "i", "value", "if", "err", "nil", "fmt", "NUMBER", "Println", "unable", "to", "write", "row", "to", "excel", "during", "update", "error", "err", "os", "NUMBER", "Exit", "NUMBER", "fmt", "NUMBER", "Printf", "write", "s", "s", "s", "n", "string", "A", "j", "strconv", "NUMBER", "Itoa", "lastRow", "i", "value", "save", "the", "change", "err", "xlsx", "NUMBER", "Save", "if", "err", "nil", "fmt", "NUMBER", "Println", "unable", "to", "save", "Internal", "timesheet", "error", "err", "os", "NUMBER", "Exit", "NUMBER", "I", "shared", "a", "source", "excel", "directly", "with", "xuri", "NUMBER", "go", "env", "set", "GOARCH", "amd", "NUMBER", "set", "GOBIN", "set", "GOCACHE", "C", "Users", "stanislav", "NUMBER", "valasek", "AppData", "Local", "go", "build", "set", "GOEXE", "NUMBER", "exe", "set", "GOFLAGS", "set", "GOHOSTARCH", "amd", "NUMBER", "set", "GOHOSTOS", "windows", "set", "GOOS", "windows", "set", "GOPATH", "C", "Users", "stanislav", "NUMBER", "valasek", "go", "set", "GOPROXY", "set", "GORACE", "set", "GOROOT", "C", "SW", "Go", "set", "GOTMPDIR", "set", "GOTOOLDIR", "C", "SW", "Go", "pkg", "tool", "windows_amd", "NUMBER", "set", "GCCGO", "gccgo", "set", "CC", "gcc", "set", "CXX", "g", "set", "CGO_ENABLED", "NUMBER", "set", "GOMOD", "C", "Projects", "Programming", "go", "src", "github", "NUMBER", "com", "valasek", "excel", "go", "NUMBER", "mod", "set", "CGO_CFLAGS", "g", "O", "NUMBER", "set", "CGO_CPPFLAGS", "set", "CGO_CXXFLAGS", "g", "O", "NUMBER", "set", "CGO_FFLAGS", "g", "O", "NUMBER", "set", "CGO_LDFLAGS", "g", "O", "NUMBER", "set", "PKG_CONFIG", "pkg", "config", "set", "GOGCCFLAGS", "m", "NUMBER", "mthreads", "fno", "caret", "diagnostics", "Qunused", "argument", "fmessage", "length", "NUMBER", "fdebug", "prefix", "map", "C", "Users", "stanislav", "NUMBER", "valasek", "AppData", "Local", "Temp", "go", "build", "NUMBER", "tmp", "go", "build", "gno", "record", "gcc", "switches", "facing", "same", "problem", "Hi", "xuri", "I", "confirm", "that", "create", "new", "Sheet", "and", "write", "new", "cells", "use", "the", "code", "above", "be", "fix", "now", "NUMBER", "Tested", "use", "v", "NUMBER", "branch", "NUMBER", "require", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "v", "NUMBER", "NUMBER", "d", "NUMBER", "ca", "NUMBER", "e", "NUMBER", "c", "NUMBER", "Thenk", "you", "for", "fix", "and", "your", "time", "\u5982\u4f55\u8bbe\u7f6e\u5f62\u72b6\u4e3a\u900f\u660e", "I", "get", "panic", "when", "processing", "an", "Excel", "file", "at", "the", "following", "command", "rows", "_", "xlsx", "NUMBER", "GetRows", "sheetName", "The", "same", "file", "was", "processed", "successfully", "before", "the", "update", "of", "the", "package", "NUMBER", "Previous", "version", "hash", "I", "use", "eca", "NUMBER", "f", "NUMBER", "ba", "NUMBER", "e", "NUMBER", "d", "NUMBER", "be", "NUMBER", "eec", "NUMBER", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "Try", "to", "process", "a", "simple", "Excel", "file", "with", "no", "fromatting", "NUMBER", "NUMBER", "Describe", "the", "results", "you", "received", "panic", "error", "Describe", "the", "results", "you", "expected", "No", "error", "Output", "of", "go", "version", "panic", "runtime", "error", "invalid", "memory", "address", "or", "nil", "pointer", "dereference", "signal", "SIGSEGV", "segmentation", "violation", "code", "NUMBER", "x", "NUMBER", "addr", "NUMBER", "x", "NUMBER", "pc", "NUMBER", "x", "NUMBER", "goroutine", "NUMBER", "run", "github", "NUMBER", "com", "xuri", "excelize", "NUMBER", "File", "NUMBER", "formattedValue", "NUMBER", "xc", "NUMBER", "ca", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "b", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "xc", "NUMBER", "a", "NUMBER", "c", "NUMBER", "go", "src", "github", "NUMBER", "com", "xuri", "excelize", "cell", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "github", "NUMBER", "com", "xuri", "excelize", "NUMBER", "xlsxC", "NUMBER", "getValueFrom", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "NUMBER", "xc", "NUMBER", "ca", "NUMBER", "c", "NUMBER", "NUMBER", "xc", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "go", "src", "github", "NUMBER", "com", "xuri", "excelize", "rows", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "c", "NUMBER", "github", "NUMBER", "com", "xuri", "excelize", "NUMBER", "File", "NUMBER", "GetRows", "NUMBER", "xc", "NUMBER", "ca", "NUMBER", "c", "NUMBER", "NUMBER", "xc", "NUMBER", "NUMBER", "xb", "NUMBER", "xe", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "xc", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "Excelize", "version", "or", "commit", "ID", "NUMBER", "cbd", "NUMBER", "dc", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ac", "NUMBER", "f", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "Windows", "NUMBER", "go", "version", "go", "NUMBER", "windows", "amd", "NUMBER", "Hi", "I", "have", "the", "problem", "use", "version", "LINK", "Skylar", "excelize", "commit", "NUMBER", "cbd", "NUMBER", "dc", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ac", "NUMBER", "f", "I", "think", "this", "be", "the", "latest", "version", "NUMBER", "Hi", "please", "use", "the", "attached", "Excel", "and", "version", "LINK", "Skylar", "excelize", "commit", "NUMBER", "cbd", "NUMBER", "dc", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ac", "NUMBER", "f", "NUMBER", "On", "Tue", "NUMBER", "NUMBER", "NUMBER", "xuri", "TAG", "write", "Subject", "Re", "NUMBER", "EntSecGroup", "Skylar", "excelize", "GetRows", "panics", "NUMBER", "To", "NUMBER", "EntSecGroup", "Skylar", "excelize", "TAG", "Cc", "dictor", "NUMBER", "TAG", "Mention", "TAG", "Date", "Tuesday", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "AM", "Hi", "dictor", "NUMBER", "I", "have", "test", "and", "it", "works", "well", "at", "rev", "NUMBER", "eca", "NUMBER", "have", "you", "tried", "use", "the", "latest", "code", "on", "the", "master", "branch", "or", "provide", "a", "NUMBER", "xlsx", "file", "attachment", "NUMBER", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "or", "mute", "the", "thread", "NUMBER", "\u4e4b\u524d\u597d\u597d\u7684", "NUMBER", "\u53f7\u66f4\u65b0\u4ee3\u7801\u540e\u4e5f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898", "\u9519\u8bef\u6808\u8ddf\u4e0a\u9762\u4e00\u6837", "\u73af\u5883\u4e3a", "WIN", "NUMBER", "GO", "NUMBER", "\u7b80\u5355\u8c03\u8bd5\u4e00\u4e0b", "\u51fa\u73b0\u95ee\u9898\u65f6", "styleSheet", "NUMBER", "CellXfs\u4e3anil", "\u800c", "s", "\u4e3a", "NUMBER", "\u5e94\u8be5\u662f\u683c\u5f0f\u6570\u636e\u6ca1\u6709\u8bfb\u53d6\u51fa\u6765", "\u4e34\u65f6\u52a0\u4e86\u4e2a\u5224\u65ad\u5148\u7528\u8d77\u6765\u4e86", "\u56e0\u4e3a\u662f\u4e1a\u52a1\u6570\u636e", "\u4e0d\u65b9\u4fbf\u516c\u5f00\u4e0a\u4f20\u9644\u4ef6", "\u53ef\u4ee5\u7ed9\u4e2a\u8054\u7cfb\u65b9\u5f0f\u79c1\u4f20", "Hi", "I", "was", "wondering", "if", "you", "have", "an", "example", "of", "how", "to", "setup", "page", "margins", "NUMBER", "I", "can", "see", "that", "the", "options", "be", "available", "but", "I", "be", "unsure", "how", "to", "access", "them", "NUMBER", "Thanks", "for", "any", "help", "Dov", "Thank", "you", "NUMBER", "Large", "amount", "of", "data", "export", "memory", "occupies", "a", "huge", "amount", "which", "be", "far", "larger", "than", "the", "actual", "Excel", "size", "and", "can", "not", "recover", "memory", "NUMBER", "The", "more", "the", "number", "of", "export", "columns", "the", "more", "memory", "be", "consumed", "and", "the", "memory", "cannot", "be", "reclaimed", "The", "invocation", "method", "be", "scol", "_", "excelize", "NUMBER", "ColumnNumberToName", "colid", "scolindex", "fmt", "NUMBER", "Sprintf", "s", "d", "scol", "rowcount", "NUMBER", "xlsx", "NUMBER", "SetCellValue", "sheetname", "scolindex", "rowdata", "colid", "The", "following", "be", "the", "result", "of", "my", "test", "NUMBER", "When", "exporting", "only", "CSV", "file", "RAM", "takes", "NUMBER", "MB", "use", "encoding", "csv", "NUMBER", "Using", "Excel", "to", "export", "a", "row", "NUMBER", "columns", "RAM", "NUMBER", "MB", "and", "the", "actual", "Excel", "file", "size", "be", "NUMBER", "KB", "NUMBER", "NUMBER", "Use", "Excel", "to", "export", "NUMBER", "rows", "NUMBER", "columns", "RAM", "NUMBER", "MB", "NUMBER", "seconds", "actual", "Excel", "file", "size", "be", "NUMBER", "KB", "NUMBER", "Using", "Excel", "to", "export", "large", "file", "row", "NUMBER", "column", "NUMBER", "RAM", "NUMBER", "GB", "NUMBER", "seconds", "NUMBER", "The", "actual", "size", "of", "Excel", "file", "be", "NUMBER", "MB", "NUMBER", "NUMBER", "Using", "Excel", "to", "export", "large", "file", "row", "NUMBER", "column", "NUMBER", "RAM", "NUMBER", "GB", "NUMBER", "seconds", "NUMBER", "The", "actual", "size", "of", "Excel", "file", "be", "NUMBER", "MB", "NUMBER", "After", "the", "file", "be", "saved", "the", "memory", "be", "not", "release", "only", "after", "the", "program", "exits", "NUMBER", "\u5bfc\u51fa\u5217\u6570\u8d8a\u591a\u5360\u7528\u5185\u5b58\u5267\u589e", "\u4e0d\u80fd\u56de\u6536\u5185\u5b58\u7684\u95ee\u9898", "\u4ee5\u4e0b\u662f\u6211\u6d4b\u8bd5\u7684\u7ed3\u679c", "NUMBER", "\u5f53\u53ea\u5bfc\u51facsv\u6587\u4ef6", "RAM\u5360\u7528", "NUMBER", "MB", "encoding", "csv", "NUMBER", "\u4f7f\u7528Excel\u5bfc\u51fa", "NUMBER", "\u884c", "NUMBER", "\u5217", "RAM\u5360\u7528", "NUMBER", "MB", "\u5b9e\u9645Excel\u6587\u4ef6\u5927\u5c0f", "NUMBER", "KB", "NUMBER", "\u4f7f\u7528Excel\u5bfc\u51fa", "NUMBER", "\u884c", "NUMBER", "\u5217", "RAM\u5360\u7528", "NUMBER", "MB", "NUMBER", "\u79d2", "\u5b9e\u9645Excel\u6587\u4ef6\u5927\u5c0f", "NUMBER", "KB", "NUMBER", "\u4f7f\u7528Excel\u5bfc\u51fa\u5927\u6587\u4ef6", "row", "NUMBER", "column", "NUMBER", "RAM\u5360\u7528", "NUMBER", "GB", "\u8017\u65f6", "NUMBER", "\u79d2", "\u5b9e\u9645Excel\u6587\u4ef6\u5927\u5c0f", "NUMBER", "MB", "NUMBER", "\u4f7f\u7528Excel\u5bfc\u51fa\u5927\u6587\u4ef6", "row", "NUMBER", "column", "NUMBER", "RAM\u5360\u7528", "NUMBER", "GB", "\u8017\u65f6", "NUMBER", "\u79d2", "\u5b9e\u9645Excel\u6587\u4ef6\u5927\u5c0f", "NUMBER", "MB", "_\u6587\u4ef6\u4fdd\u5b58\u540e", "\u5185\u5b58\u5e76\u4e0d\u91ca\u653e", "\u53ea\u6709\u5728\u9000\u51fa\u7a0b\u5e8f\u540e\u624d\u91ca\u653e", "_", "\u5bf9\u8c61\u6570\u7ec4\u5206\u914d\u4e86\u592a\u591a\u5185\u5b58\u7ed9\u5355\u5143\u683c", "\u5927\u6570\u636e\u91cf\u65f6\u751a\u81f3\u4e0d\u9700\u8981\u6837\u5f0f", "\u5e76\u4e0d\u4e00\u5b9a\u6307\u5b9a\u6240\u6709\u5168\u90e8\u6807\u7b7e", "prepareSheetXML", "xlsx", "col", "row", "type", "xlsxRow", "struct", "Collapsed", "bool", "xml", "collapsed", "attr", "omitempty", "CustomFormat", "bool", "xml", "customFormat", "attr", "omitempty", "CustomHeight", "bool", "xml", "customHeight", "attr", "omitempty", "Hidden", "bool", "xml", "hidden", "attr", "omitempty", "Ht", "float", "NUMBER", "xml", "ht", "attr", "omitempty", "OutlineLevel", "uint", "NUMBER", "xml", "outlineLevel", "attr", "omitempty", "Ph", "bool", "xml", "ph", "attr", "omitempty", "R", "int", "xml", "r", "attr", "omitempty", "S", "int", "xml", "s", "attr", "omitempty", "Spans", "string", "xml", "spans", "attr", "omitempty", "ThickBot", "bool", "xml", "thickBot", "attr", "omitempty", "ThickTop", "bool", "xml", "thickTop", "attr", "omitempty", "C", "xlsxC", "xml", "c", "Object", "arrays", "allocate", "too", "much", "memory", "to", "cells", "and", "do", "not", "even", "need", "styles", "for", "large", "amounts", "of", "data", "and", "do", "not", "necessarily", "specify", "all", "tags", "NUMBER", "Processing", "Excel", "requires", "about", "NUMBER", "times", "memory", "usage", "per", "MB", "NUMBER", "The", "client", "uses", "small", "memory", "consumption", "and", "uses", "disk", "caching", "which", "results", "in", "a", "dramatic", "performance", "degradation", "NUMBER", "For", "example", "write", "a", "NUMBER", "MB", "Excel", "file", "requires", "more", "than", "NUMBER", "GB", "of", "memory", "which", "be", "hard", "to", "imagine", "NUMBER", "Please", "give", "me", "back", "the", "memory", "NUMBER", "Please", "try", "read", "this", "file", "expected", "NUMBER", "K", "rows", "get", "NUMBER", "rows", "price", "NUMBER", "zip", "LINK", "Skylar", "excelize", "file", "NUMBER", "price", "NUMBER", "zip", "Check", "file", "by", "tealeg", "xlsx", "and", "it", "works", "Can", "not", "install", "v", "NUMBER", "go", "get", "u", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "package", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "cannot", "find", "package", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "in", "any", "of", "home", "user", "soft", "go", "go", "src", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "from", "GOROOT", "home", "user", "soft", "go", "gopath", "src", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "from", "GOPATH", "simple", "test", "go", "func", "TestCopySheet", "t", "test", "NUMBER", "T", "f", "excelize", "NUMBER", "NewFile", "i", "f", "NUMBER", "NewSheet", "s", "NUMBER", "if", "err", "f", "NUMBER", "CopySheet", "NUMBER", "i", "err", "nil", "t", "NUMBER", "Error", "err", "Error", "sheet", "sheet", "NUMBER", "be", "not", "exist", "go", "version", "go", "version", "go", "NUMBER", "linux", "amd", "NUMBER", "I", "use", "dep", "to", "manage", "package", "this", "be", "output", "of", "dep", "status", "PROJECT", "CONSTRAINT", "VERSION", "REVISION", "LATEST", "PKGS", "USED", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "v", "NUMBER", "b", "NUMBER", "f", "NUMBER", "d", "v", "NUMBER", "NUMBER", "simple", "test", "go", "func", "TestCopySheet", "t", "test", "NUMBER", "T", "f", "excelize", "NUMBER", "NewFile", "i", "f", "NUMBER", "NewSheet", "s", "NUMBER", "if", "err", "f", "NUMBER", "CopySheet", "NUMBER", "i", "err", "nil", "t", "NUMBER", "Error", "err", "Error", "sheet", "sheet", "NUMBER", "be", "not", "exist", "The", "first", "sheet", "must", "be", "named", "sheet", "NUMBER", "otherwise", "it", "fail", "NUMBER", "golang", "copySheet", "provides", "a", "function", "to", "duplicate", "a", "worksheet", "by", "gave", "source", "and", "target", "worksheet", "name", "NUMBER", "func", "f", "File", "copySheet", "from", "to", "int", "sheet", "f", "NUMBER", "workSheetReader", "sheet", "strconv", "NUMBER", "Itoa", "from", "worksheet", "deepcopy", "NUMBER", "Copy", "sheet", "NUMBER", "xlsxWorksheet", "path", "xl", "worksheets", "sheet", "strconv", "NUMBER", "Itoa", "to", "NUMBER", "xml", "if", "len", "worksheet", "NUMBER", "SheetViews", "NUMBER", "SheetView", "NUMBER", "worksheet", "NUMBER", "SheetViews", "NUMBER", "SheetView", "NUMBER", "NUMBER", "TabSelected", "false", "worksheet", "NUMBER", "Drawing", "nil", "worksheet", "NUMBER", "TableParts", "nil", "worksheet", "NUMBER", "PageSetUp", "nil", "f", "NUMBER", "Sheet", "path", "worksheet", "toRels", "xl", "worksheets", "_rels", "sheet", "strconv", "NUMBER", "Itoa", "to", "NUMBER", "xml", "NUMBER", "rels", "fromRels", "xl", "worksheets", "_rels", "sheet", "strconv", "NUMBER", "Itoa", "from", "NUMBER", "xml", "NUMBER", "rels", "_", "ok", "f", "NUMBER", "XLSX", "fromRels", "if", "ok", "f", "NUMBER", "XLSX", "toRels", "f", "NUMBER", "XLSX", "fromRels", "it", "gets", "sheet", "name", "as", "sheet", "NUMBER", "I", "find", "you", "have", "fix", "it", "on", "master", "branch", "can", "you", "merge", "to", "v", "NUMBER", "TAG", "Description", "TAG", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "NUMBER", "NUMBER", "Describe", "the", "results", "you", "received", "Describe", "the", "results", "you", "expected", "Output", "of", "go", "version", "text", "paste", "your", "output", "here", "Excelize", "version", "or", "commit", "ID", "text", "paste", "here", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "Description", "I", "m", "trying", "to", "install", "this", "lib", "NUMBER", "But", "the", "return", "be", "strange", "NUMBER", "When", "I", "try", "to", "install", "with", "go", "get", "v", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "everything", "works", "well", "NUMBER", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "Install", "use", "go", "get", "v", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "Describe", "the", "results", "you", "received", "shell", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "download", "package", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "cannot", "find", "package", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "in", "any", "of", "usr", "local", "go", "src", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "from", "GOROOT", "home", "rafael", "go", "src", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "from", "GOPATH", "When", "i", "search", "in", "go", "src", "github", "NUMBER", "com", "I", "find", "folder", "NUMBER", "EntSecGroup", "Skylar", "excelize", "but", "not", "this", "v", "NUMBER", "Describe", "the", "results", "you", "expected", "No", "output", "NUMBER", "Output", "of", "go", "version", "text", "go", "version", "go", "NUMBER", "linux", "amd", "NUMBER", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "OS", "Setup", "text", "NUMBER", "oossssoo", "NUMBER", "rafael", "leviathan", "ssssssssssssssssss", "ssssssssssssssssssyyssss", "OS", "Ubuntu", "NUMBER", "x", "NUMBER", "_", "NUMBER", "NUMBER", "ossssssssssssssssssdMMMNysssso", "NUMBER", "Kernel", "NUMBER", "NUMBER", "generic", "ssssssssssshdmmNNmmyNMMMMhssssss", "Uptime", "NUMBER", "mins", "ssssssssshmydMMMMMMMNddddyssssssss", "Packages", "NUMBER", "dpkg", "NUMBER", "snap", "sssssssshNMMMyhhyyyyhmNMMMNhssssssss", "Shell", "zsh", "NUMBER", "NUMBER", "ssssssssdMMMNhsssssssssshNMMMdssssssss", "NUMBER", "Resolution", "NUMBER", "x", "NUMBER", "sssshhhyNMMNyssssssssssssyNMMMysssssss", "DE", "GNOME", "NUMBER", "ossyNMMMNyMMhsssssssssssssshmmmhssssssso", "WM", "GNOME", "Shell", "ossyNMMMNyMMhsssssssssssssshmmmhssssssso", "WM", "Theme", "Adwaita", "sssshhhyNMMNyssssssssssssyNMMMysssssss", "Theme", "Sweet", "mars", "GTK", "NUMBER", "NUMBER", "NUMBER", "ssssssssdMMMNhsssssssssshNMMMdssssssss", "NUMBER", "Icons", "Yaru", "GTK", "NUMBER", "NUMBER", "sssssssshNMMMyhhyyyyhdNMMMNhssssssss", "Terminal", "gnome", "terminal", "sssssssssdmydMMMMMMMMddddyssssssss", "CPU", "AMD", "FX", "NUMBER", "NUMBER", "NUMBER", "GHz", "ssssssssssshdmNNNNmyNMMMMhssssss", "GPU", "NVIDIA", "GeForce", "GTX", "NUMBER", "NUMBER", "ossssssssssssssssssdMMMNysssso", "NUMBER", "Memory", "NUMBER", "MiB", "NUMBER", "MiB", "sssssssssssssssssyyyssss", "ssssssssssssssssss", "NUMBER", "oossssoo", "NUMBER", "Enviroment", "Var", "text", "cat", "NUMBER", "zshrc", "If", "you", "come", "from", "bash", "you", "might", "have", "to", "change", "your", "PATH", "NUMBER", "export", "PATH", "HOME", "bin", "usr", "local", "bin", "PATH", "Path", "to", "your", "oh", "my", "zsh", "installation", "NUMBER", "export", "ZSH", "home", "rafael", "NUMBER", "oh", "my", "zsh", "Set", "name", "of", "the", "theme", "to", "load", "if", "set", "to", "random", "it", "will", "load", "a", "random", "theme", "each", "time", "oh", "my", "zsh", "be", "loaded", "in", "which", "case", "to", "know", "which", "specific", "one", "was", "loaded", "run", "echo", "RANDOM_THEME", "See", "LINK", "my", "zsh", "wiki", "Themes", "ZSH_THEME", "robbyrussell", "Set", "list", "of", "themes", "to", "pick", "from", "when", "loading", "at", "random", "Setting", "this", "variable", "when", "ZSH_THEME", "random", "will", "cause", "zsh", "to", "load", "a", "theme", "from", "this", "variable", "instead", "of", "looking", "in", "NUMBER", "oh", "my", "zsh", "themes", "If", "set", "to", "an", "empty", "array", "this", "variable", "will", "have", "no", "effect", "NUMBER", "ZSH_THEME_RANDOM_CANDIDATES", "robbyrussell", "agnoster", "Uncomment", "the", "following", "line", "to", "use", "case", "sensitive", "completion", "NUMBER", "CASE_SENSITIVE", "true", "Uncomment", "the", "following", "line", "to", "use", "hyphen", "insensitive", "completion", "NUMBER", "Case", "sensitive", "completion", "must", "be", "off", "NUMBER", "_", "and", "will", "be", "interchangeable", "NUMBER", "HYPHEN_INSENSITIVE", "true", "Uncomment", "the", "following", "line", "to", "disable", "bi", "weekly", "auto", "update", "checks", "NUMBER", "DISABLE_AUTO_UPDATE", "true", "Uncomment", "the", "following", "line", "to", "change", "how", "often", "to", "auto", "update", "in", "days", "NUMBER", "export", "UPDATE_ZSH_DAYS", "NUMBER", "Uncomment", "the", "following", "line", "to", "disable", "colors", "in", "ls", "NUMBER", "DISABLE_LS_COLORS", "true", "Uncomment", "the", "following", "line", "to", "disable", "auto", "setting", "terminal", "title", "NUMBER", "DISABLE_AUTO_TITLE", "true", "Uncomment", "the", "following", "line", "to", "enable", "command", "auto", "correction", "NUMBER", "ENABLE_CORRECTION", "true", "Uncomment", "the", "following", "line", "to", "display", "red", "dots", "whilst", "waiting", "for", "completion", "NUMBER", "COMPLETION_WAITING_DOTS", "true", "Uncomment", "the", "following", "line", "if", "you", "want", "to", "disable", "marking", "untracked", "file", "under", "VCS", "as", "dirty", "NUMBER", "This", "makes", "repository", "status", "check", "for", "large", "repositories", "much", "much", "faster", "NUMBER", "DISABLE_UNTRACKED_FILES_DIRTY", "true", "Uncomment", "the", "following", "line", "if", "you", "want", "to", "change", "the", "command", "execution", "time", "stamp", "shown", "in", "the", "history", "command", "output", "NUMBER", "You", "can", "set", "one", "of", "the", "optional", "three", "formats", "mm", "dd", "yyyy", "dd", "NUMBER", "mm", "NUMBER", "yyyy", "yyyy", "mm", "dd", "or", "set", "a", "custom", "format", "use", "the", "strftime", "function", "format", "specifications", "see", "man", "strftime", "for", "details", "NUMBER", "HIST_STAMPS", "mm", "dd", "yyyy", "Would", "you", "like", "to", "use", "another", "custom", "folder", "than", "ZSH", "custom", "ZSH_CUSTOM", "path", "to", "new", "custom", "folder", "Which", "plugins", "would", "you", "like", "to", "load", "Standard", "plugins", "can", "be", "find", "in", "NUMBER", "oh", "my", "zsh", "plugins", "Custom", "plugins", "may", "be", "add", "to", "NUMBER", "oh", "my", "zsh", "custom", "plugins", "Example", "format", "plugins", "rails", "git", "textmate", "ruby", "lighthouse", "Add", "wisely", "as", "too", "many", "plugins", "slow", "down", "shell", "startup", "NUMBER", "plugins", "git", "source", "ZSH", "oh", "my", "zsh", "NUMBER", "sh", "User", "configuration", "export", "MANPATH", "usr", "local", "man", "MANPATH", "You", "may", "need", "to", "manually", "set", "your", "language", "environment", "export", "LANG", "en_US", "NUMBER", "UTF", "NUMBER", "Preferred", "editor", "for", "local", "and", "remote", "sessions", "if", "n", "SSH_CONNECTION", "then", "export", "EDITOR", "vim", "else", "export", "EDITOR", "mvim", "fi", "Compilation", "flags", "export", "ARCHFLAGS", "arch", "x", "NUMBER", "_", "NUMBER", "Set", "personal", "aliases", "overriding", "those", "provide", "by", "oh", "my", "zsh", "libs", "plugins", "and", "themes", "NUMBER", "Aliases", "can", "be", "placed", "here", "though", "oh", "my", "zsh", "users", "be", "encourage", "to", "define", "aliases", "within", "the", "ZSH_CUSTOM", "folder", "NUMBER", "For", "a", "full", "list", "of", "active", "aliases", "run", "alias", "NUMBER", "Example", "aliases", "alias", "zshconfig", "mate", "NUMBER", "zshrc", "alias", "ohmyzsh", "mate", "NUMBER", "oh", "my", "zsh", "export", "PATH", "PATH", "usr", "local", "go", "bin", "export", "GOPATH", "HOME", "go", "export", "PATH", "GOPATH", "bin", "PATH", "Success", "Thank", "u", "man", "xuri", "I", "have", "met", "the", "same", "issue", "when", "installing", "this", "lib", "NUMBER", "Maybe", "you", "should", "find", "other", "way", "to", "make", "it", "easily", "out", "of", "box", "but", "not", "to", "find", "solution", "NUMBER", "\u8fd9\u4e2a\u4f53\u9a8c\u5e76\u4e0d\u53cb\u597d", "How", "to", "add", "header", "and", "footer", "for", "NUMBER", "xlsx", "TAG", "Description", "According", "with", "the", "go", "Modules", "spec", "LINK", "user", "content", "release", "modules", "v", "NUMBER", "or", "higher", "a", "module", "with", "the", "version", "v", "NUMBER", "excelize", "v", "NUMBER", "should", "be", "imported", "as", "follows", "go", "import", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "But", "this", "causes", "the", "error", "unknown", "import", "path", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "cannot", "find", "module", "provide", "package", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "Import", "the", "dependency", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "in", "a", "go", "Module", "enable", "project", "NUMBER", "NUMBER", "Run", "go", "build", "NUMBER", "Describe", "the", "results", "you", "received", "Error", "unknown", "import", "path", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "cannot", "find", "module", "provide", "package", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "Describe", "the", "results", "you", "expected", "Build", "should", "be", "successful", "NUMBER", "Output", "of", "go", "version", "text", "go", "version", "go", "NUMBER", "linux", "amd", "NUMBER", "Excelize", "version", "or", "commit", "ID", "text", "v", "NUMBER", "Still", "not", "fix", "i", "request", "the", "issue", "be", "reopened", "NUMBER", "I", "believe", "that", "in", "order", "to", "fix", "this", "the", "code", "needs", "to", "be", "moved", "to", "the", "package", "v", "NUMBER", "and", "that", "package", "needs", "to", "have", "a", "go", "NUMBER", "mod", "file", "NUMBER", "Also", "the", "current", "package", "should", "serve", "has", "a", "proxy", "to", "the", "classes", "and", "function", "of", "the", "v", "NUMBER", "package", "NUMBER", "Full", "description", "go", "Modules", "spec", "LINK", "user", "content", "release", "modules", "v", "NUMBER", "or", "higher", "NUMBER", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "In", "a", "go", "Module", "enable", "project", "run", "sh", "go", "get", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "Describe", "the", "results", "you", "received", "Got", "the", "following", "error", "sh", "go", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "v", "NUMBER", "go", "NUMBER", "mod", "has", "non", "NUMBER", "v", "NUMBER", "module", "path", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "and", "NUMBER", "v", "NUMBER", "go", "NUMBER", "mod", "do", "not", "exist", "at", "revision", "v", "NUMBER", "go", "error", "loading", "module", "requirements", "Describe", "the", "results", "you", "expected", "go", "get", "should", "be", "successful", "NUMBER", "That", "fix", "it", "i", "didn", "t", "realized", "there", "wasn", "t", "a", "new", "version", "with", "the", "fix", "NUMBER", "Many", "thxs", "sir", "xuri", "It", "s", "work", "but", "i", "suspect", "there", "be", "still", "a", "problem", "go", "NUMBER", "mod", "references", "v", "NUMBER", "indirectly", "go", "NUMBER", "go", "NUMBER", "require", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "indirect", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "v", "NUMBER", "github", "NUMBER", "com", "stretchr", "testify", "v", "NUMBER", "I", "suspect", "this", "be", "because", "the", "package", "excelize", "declaration", "on", "excelize", "NUMBER", "go", "file", "doesn", "t", "include", "the", "v", "NUMBER", "but", "i", "might", "be", "wrong", "NUMBER", "xuri", "The", "bug", "still", "exists", "Can", "not", "install", "v", "NUMBER", "go", "get", "install", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "Error", "can", "not", "find", "package", "I", "created", "a", "new", "project", "to", "benchmark", "some", "change", "my", "main", "NUMBER", "go", "looks", "like", "this", "go", "package", "main", "import", "fmt", "time", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "some", "code", "for", "test", "stuff", "NUMBER", "my", "go", "NUMBER", "mod", "looks", "like", "this", "go", "module", "github", "NUMBER", "com", "mlh", "NUMBER", "benchmarker", "go", "NUMBER", "require", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "v", "NUMBER", "github", "NUMBER", "com", "davecgh", "go", "spew", "v", "NUMBER", "indirect", "golang", "NUMBER", "org", "x", "image", "v", "NUMBER", "NUMBER", "cff", "NUMBER", "a", "NUMBER", "b", "indirect", "and", "everything", "be", "build", "fine", "NUMBER", "Could", "anyone", "still", "having", "issue", "share", "similar", "information", "so", "we", "can", "try", "to", "figure", "out", "what", "be", "wrong", "Create", "a", "NUMBER", "xlsx", "file", "by", "use", "the", "example", "code", "i", "can", "open", "it", "with", "wps", "on", "windows", "but", "can", "t", "open", "it", "with", "wps", "on", "android", "NUMBER", "I", "use", "the", "lastest", "version", "NUMBER", "thanks", "very", "much", "it", "s", "all", "right", "now", "NUMBER", "Description", "This", "allows", "users", "to", "change", "the", "default", "font", "of", "the", "workbook", "NUMBER", "I", "also", "remove", "the", "scheme", "stuff", "since", "the", "library", "doesn", "t", "have", "an", "API", "for", "themes", "in", "it", "yet", "and", "without", "that", "they", "don", "t", "appear", "to", "impact", "anything", "NUMBER", "In", "the", "template", "I", "remove", "the", "theme", "reference", "from", "the", "default", "font", "and", "change", "the", "default", "style", "name", "to", "Normal", "although", "I", "don", "t", "think", "that", "name", "change", "was", "necessary", "if", "you", "preferred", "the", "old", "name", "NUMBER", "Related", "Issue", "Closes", "NUMBER", "TAG", "TAG", "TAG", "TAG", "Motivation", "and", "Context", "My", "users", "want", "something", "other", "than", "Calibri", "so", "I", "figured", "I", "would", "add", "the", "change", "back", "to", "the", "main", "repo", "NUMBER", "How", "Has", "This", "Been", "Tested", "I", "add", "some", "unit", "test", "and", "generate", "some", "documents", "with", "this", "branch", "NUMBER", "Types", "of", "change", "TAG", "x", "Docs", "change", "refactoring", "dependency", "upgrade", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "x", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "x", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "x", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "x", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "x", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "f", "NUMBER", "f", "NUMBER", "a", "NUMBER", "ce", "NUMBER", "d", "NUMBER", "d", "NUMBER", "ed", "NUMBER", "e", "NUMBER", "b", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "src", "pr", "el", "desc", "will", "increase", "coverage", "by", "NUMBER", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "styles", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "c", "NUMBER", "R", "NUMBER", "bGVzLmdv", "NUMBER", "TAG", "NUMBER", "arrow_up", "shape", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "c", "NUMBER", "hhcGUuZ", "NUMBER", "NUMBER", "TAG", "\u00f8", "arrow_up", "comment", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "Y", "NUMBER", "tbWVudC", "NUMBER", "nbw", "NUMBER", "TAG", "\u00f8", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "c", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "The", "new", "line", "I", "add", "that", "I", "m", "not", "hitting", "in", "the", "test", "be", "the", "panic", "after", "the", "xml", "NUMBER", "Unmarshal", "in", "the", "new", "readDefaultFont", "function", "NUMBER", "That", "should", "never", "happen", "but", "the", "panic", "be", "there", "to", "make", "it", "clear", "where", "this", "went", "wrong", "NUMBER", "I", "use", "panic", "instead", "of", "an", "error", "value", "because", "this", "be", "a", "truly", "exceptional", "case", "that", "should", "never", "be", "encountered", "NUMBER", "Even", "if", "you", "set", "invalid", "xml", "as", "the", "font", "like", "TAG", "font", "TAG", "Hi", "ballyang", "please", "provides", "the", "version", "of", "excelize", "and", "Go", "you", "be", "use", "and", "the", "xlsx", "file", "attachment", "if", "you", "can", "NUMBER", "Also", "reference", "NUMBER", "env", "go", "go", "version", "go", "NUMBER", "linux", "amd", "NUMBER", "ubuntu", "NUMBER", "excelize", "latest", "\u5df2\u7ecfgoget\u6700\u65b0\u7684\u4e0b\u6765\u4e86", "go", "demo", "tmp", "NUMBER", "test", "NUMBER", "xlsx", "t", "NUMBER", "err", "excelize", "NUMBER", "OpenFile", "tmp", "if", "err", "nil", "log", "NUMBER", "Fatal", "err", "for", "x", "NUMBER", "x", "NUMBER", "x", "t", "NUMBER", "RemoveRow", "Sheet", "NUMBER", "x", "t", "NUMBER", "SaveAs", "NUMBER", "test", "NUMBER", "save", "NUMBER", "xlsx", "excel", "file", "test", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "test", "NUMBER", "xlsx", "\u6211\u53ea\u662f\u628a\u540e\u9762\u90a3\u51e0\u884cremove\u6389", "\u4f46\u5728win\u4e0b\u6253\u5f00", "\u5c31\u4f1a\u62a5", "Excel", "\u5df2\u5b8c\u6210\u6587\u4ef6\u7ea7\u9a8c\u8bc1\u548c\u4fee\u590d", "\u6b64\u5de5\u4f5c\u7c3f\u7684\u67d0\u4e9b\u90e8\u5206\u53ef\u80fd\u5df2\u88ab\u4fee\u590d\u6216\u4e22\u5f03", "\u7c7b\u4f3c\u9519\u8bef", "PR", "Details", "Refactoring", "for", "merge", "cells", "function", "NUMBER", "Description", "Move", "mergedcell", "relate", "function", "code", "in", "excelize", "NUMBER", "go", "to", "cellmerged", "NUMBER", "go", "NUMBER", "Related", "Issue", "None", "Motivation", "and", "Context", "If", "add", "some", "function", "relate", "to", "merge", "cell", "it", "causes", "enlargement", "of", "excelize", "NUMBER", "go", "NUMBER", "Also", "I", "want", "to", "extend", "the", "function", "but", "at", "that", "time", "I", "need", "to", "add", "the", "function", "relate", "to", "the", "merge", "cell", "NUMBER", "How", "Has", "This", "Been", "Tested", "runs", "unit", "test", "NUMBER", "Types", "of", "change", "TAG", "x", "Docs", "change", "refactoring", "dependency", "upgrade", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "x", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "x", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "x", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "x", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "b", "NUMBER", "e", "NUMBER", "beb", "NUMBER", "c", "NUMBER", "fa", "NUMBER", "a", "NUMBER", "src", "pr", "el", "desc", "will", "not", "change", "coverage", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "excelize", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "ZXhjZWxpemUuZ", "NUMBER", "NUMBER", "TAG", "NUMBER", "arrow_down", "cellmerged", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "Y", "NUMBER", "VsbG", "NUMBER", "lcmdlZC", "NUMBER", "nbw", "NUMBER", "TAG", "\u00f8", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "b", "NUMBER", "a", "NUMBER", "a", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "PR", "Details", "Description", "Bug", "NUMBER", "Out", "of", "range", "panic", "when", "remove", "formula", "NUMBER", "Reproduction", "Steps", "NUMBER", "Download", "input", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "input", "NUMBER", "xlsx", "NUMBER", "run", "following", "code", "NUMBER", "go", "package", "main", "import", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "f", "err", "excelize", "NUMBER", "OpenFile", "input", "NUMBER", "xlsx", "if", "err", "nil", "panic", "err", "f", "NUMBER", "SetCellFormula", "Sheet", "NUMBER", "A", "NUMBER", "if", "err", "f", "NUMBER", "SaveAs", "panic", "NUMBER", "xlsx", "err", "nil", "panic", "err", "Actual", "Behavior", "panic", "runtime", "error", "slice", "bounds", "out", "of", "range", "goroutine", "NUMBER", "run", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "File", "NUMBER", "deleteCalcChain", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "c", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "Users", "aplulu", "go", "pkg", "mod", "github", "NUMBER", "com", "NUMBER", "ent", "sec", "group", "skylar", "excelize", "v", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "calcchain", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "File", "NUMBER", "SetCellFormula", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "e", "NUMBER", "NUMBER", "x", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "c", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "xc", "NUMBER", "aff", "NUMBER", "Users", "aplulu", "go", "pkg", "mod", "github", "NUMBER", "com", "NUMBER", "ent", "sec", "group", "skylar", "excelize", "v", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "cell", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "main", "NUMBER", "main", "Users", "aplulu", "projects", "excelize", "test", "bug", "bug", "NUMBER", "go", "NUMBER", "NUMBER", "xa", "NUMBER", "exit", "status", "NUMBER", "Bug", "NUMBER", "If", "the", "delete", "sheet", "contains", "Formula", "file", "will", "be", "corrupted", "NUMBER", "Reproduction", "Steps", "NUMBER", "Download", "input", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "input", "NUMBER", "xlsx", "NUMBER", "Run", "following", "code", "NUMBER", "NUMBER", "Open", "the", "generate", "corrupt", "NUMBER", "xlsx", "in", "Excel", "NUMBER", "go", "package", "main", "import", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "f", "err", "excelize", "NUMBER", "OpenFile", "input", "NUMBER", "xlsx", "if", "err", "nil", "panic", "err", "f", "NUMBER", "DeleteSheet", "Sheet", "NUMBER", "if", "err", "f", "NUMBER", "SaveAs", "corrupt", "NUMBER", "xlsx", "err", "nil", "panic", "err", "Actual", "Behavior", "Screen", "Shot", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "a", "NUMBER", "b", "NUMBER", "c", "NUMBER", "png", "TAG", "TAG", "TAG", "Repair", "Result", "to", "corrupt", "NUMBER", "xml", "TAG", "TAG", "Errors", "were", "detected", "in", "file", "Users", "aplulu", "projects", "excelize", "test", "bug", "corrupt", "NUMBER", "xlsx", "TAG", "TAG", "TAG", "Removed", "Records", "Formula", "from", "xl", "calcChain", "NUMBER", "xml", "part", "Calculation", "properties", "TAG", "TAG", "TAG", "Environement", "Excelize", "master", "branch", "go", "version", "go", "NUMBER", "darwin", "amd", "NUMBER", "Microsoft", "Excel", "for", "Mac", "version", "NUMBER", "Related", "Issue", "TAG", "TAG", "TAG", "TAG", "Motivation", "and", "Context", "TAG", "How", "Has", "This", "Been", "Tested", "TAG", "TAG", "TAG", "Types", "of", "change", "TAG", "Docs", "change", "refactoring", "dependency", "upgrade", "x", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "x", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "aa", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "ce", "src", "pr", "el", "desc", "will", "decrease", "coverage", "by", "NUMBER", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "cell", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "Y", "NUMBER", "VsbC", "NUMBER", "nbw", "NUMBER", "TAG", "\u00f8", "arrow_up", "calcchain", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "Y", "NUMBER", "FsY", "NUMBER", "NoYWluLmdv", "NUMBER", "TAG", "NUMBER", "arrow_down", "sheet", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "c", "NUMBER", "hlZXQuZ", "NUMBER", "NUMBER", "TAG", "\u00f8", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "ff", "NUMBER", "a", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "TAG", "Description", "TAG", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "open", "a", "xlsx", "cy", "file", "cy", "NUMBER", "xlsx", "NUMBER", "saveAs", "cy", "NUMBER", "xlsx", "NUMBER", "but", "the", "file", "modification", "time", "do", "not", "change", "Describe", "the", "results", "you", "received", "So", "I", "can", "t", "tell", "if", "the", "current", "file", "has", "change", "by", "use", "the", "PHP", "filemtime", "function", "Describe", "the", "results", "you", "expected", "Output", "of", "go", "version", "text", "paste", "your", "output", "here", "Excelize", "version", "or", "commit", "ID", "text", "paste", "here", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "PR", "Details", "Fix", "calc", "object", "position", "for", "addPicture", "NUMBER", "Description", "The", "target", "cell", "for", "calclator", "the", "width", "and", "height", "Related", "Issue", "TAG", "TAG", "TAG", "TAG", "Motivation", "and", "Context", "I", "wanted", "to", "fix", "one", "of", "the", "factors", "that", "cause", "the", "size", "of", "the", "inserted", "image", "to", "be", "incorrect", "NUMBER", "TAG", "How", "Has", "This", "Been", "Tested", "Verified", "by", "local", "excel", "TAG", "TAG", "TAG", "Types", "of", "change", "TAG", "Docs", "change", "refactoring", "dependency", "upgrade", "x", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "x", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "eca", "NUMBER", "f", "NUMBER", "ba", "NUMBER", "e", "NUMBER", "d", "NUMBER", "be", "NUMBER", "eec", "NUMBER", "src", "pr", "el", "desc", "will", "not", "change", "coverage", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "col", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "Y", "NUMBER", "sLmdv", "NUMBER", "TAG", "\u00f8", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "eca", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "It", "be", "an", "image", "before", "this", "PR", "TAG", "You", "can", "try", "it", "with", "this", "code", "and", "file", "NUMBER", "LINK", "image", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "fee", "NUMBER", "b", "NUMBER", "e", "NUMBER", "png", "input_change_x", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "input_change_x", "NUMBER", "xlsx", "input_change_y", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "input_change_y", "NUMBER", "xlsx", "input_def", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "input_def", "NUMBER", "xlsx", "There", "be", "no", "problem", "if", "the", "width", "and", "height", "of", "the", "cell", "before", "and", "after", "the", "inserted", "cell", "be", "the", "same", "but", "it", "will", "be", "a", "problem", "if", "they", "be", "different", "NUMBER", "xmlCharte", "NUMBER", "go", "NUMBER", "LumMod", "attrValInt", "Val", "NUMBER", "LumOff", "attrValInt", "Val", "NUMBER", "\u8fd9\u91cc\u900f\u660e\u5ea6\u5b9a\u4e49", "\u53c2\u8003", "LINK", "the", "difference", "between", "lummod", "lumoff", "and", "tint", "shade", "in", "drawingml", "colors", "luminance", "luminance", "NUMBER", "lumMod", "NUMBER", "_", "NUMBER", "lumOff", "NUMBER", "_", "NUMBER", "\u6839\u636e\u516c\u5f0f\u4fee\u6539", "NUMBER", "NUMBER", "\u51cf\u5c0f", "undefined", "excelize", "NUMBER", "ToAlphaString", "in", "v", "NUMBER", "LINK", "Skylar", "excelize", "issue", "NUMBER", "url", "Please", "add", "suport", "for", "tiff", "bmp", "and", "may", "be", "other", "image", "type", "NUMBER", "It", "be", "simple", "and", "useful", "NUMBER", "Thanks", "NUMBER", "Create", "a", "new", "Excel", "file", "insert", "an", "image", "into", "one", "cell", "of", "one", "sheet", "create", "another", "sheet", "insert", "another", "image", "into", "one", "cell", "of", "another", "sheet", "as", "the", "result", "causes", "a", "event", "that", "pasted", "two", "images", "on", "both", "cells", "of", "both", "sheets", "NUMBER", "It", "doesn", "t", "occur", "when", "you", "finish", "inserted", "an", "image", "into", "one", "cell", "of", "a", "sheet", "or", "inserted", "images", "into", "two", "or", "more", "cells", "of", "the", "same", "sheet", "NUMBER", "golang", "func", "main", "xlsx", "excelize", "NUMBER", "NewFile", "Create", "a", "worksheet", "index", "xlsx", "NUMBER", "NewSheet", "Sheet", "NUMBER", "Insert", "image", "NUMBER", "jpg", "into", "A", "NUMBER", "cell", "of", "sheet", "NUMBER", "Still", "okay", "at", "this", "point", "err", "xlsx", "NUMBER", "AddPicture", "Sheet", "NUMBER", "A", "NUMBER", "NUMBER", "image", "NUMBER", "jpg", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "return", "err", "Insert", "image", "NUMBER", "jpg", "into", "A", "NUMBER", "cell", "of", "sheet", "NUMBER", "If", "this", "be", "executed", "image", "NUMBER", "jpg", "be", "pasted", "A", "NUMBER", "cells", "of", "Sheet", "NUMBER", "and", "Sheet", "NUMBER", "and", "image", "NUMBER", "jpg", "be", "pasted", "A", "NUMBER", "cells", "of", "Sheet", "NUMBER", "and", "Sheet", "NUMBER", "err", "xlsx", "NUMBER", "AddPicture", "Sheet", "NUMBER", "A", "NUMBER", "NUMBER", "image", "NUMBER", "jpg", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "return", "err", "Save", "Excel", "err", "xlsx", "NUMBER", "SaveAs", "NUMBER", "Book", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "return", "err", "return", "nil", "When", "I", "extracted", "the", "Excel", "file", "and", "saw", "it", "the", "value", "of", "the", "name", "held", "inside", "of", "drawing", "NUMBER", "xml", "was", "the", "same", "Picture", "NUMBER", "so", "it", "be", "considered", "to", "be", "due", "to", "that", "NUMBER", "If", "SaveAS", "be", "executed", "first", "and", "then", "reopened", "and", "the", "image", "be", "executed", "only", "after", "Save", "be", "executed", "the", "stored", "information", "will", "disappear", "or", "it", "will", "operate", "normally", "NUMBER", "Of", "course", "there", "be", "no", "problem", "if", "you", "insert", "image", "NUMBER", "jpg", "into", "one", "cell", "of", "one", "sheet", "execute", "SaveAS", "reopen", "it", "and", "insert", "image", "NUMBER", "jpg", "into", "another", "cell", "of", "another", "sheet", "NUMBER", "golang", "func", "main", "xlsx", "excelize", "NUMBER", "NewFile", "Create", "a", "worksheet", "index", "xlsx", "NUMBER", "NewSheet", "Sheet", "NUMBER", "Save", "Excel", "err", "xlsx", "NUMBER", "SaveAs", "NUMBER", "Book", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "return", "err", "Reopen", "xlsx", "err", "excelize", "NUMBER", "OpenFile", "NUMBER", "Book", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "return", "err", "Insert", "image", "NUMBER", "jpg", "into", "A", "NUMBER", "cell", "of", "sheet", "NUMBER", "err", "xlsx", "NUMBER", "AddPicture", "Sheet", "NUMBER", "A", "NUMBER", "NUMBER", "image", "NUMBER", "jpg", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "return", "err", "Save", "Excel", "err", "xlsx", "NUMBER", "Save", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "return", "err", "Insert", "image", "NUMBER", "jpg", "into", "A", "NUMBER", "cell", "of", "sheet", "NUMBER", "err", "xlsx", "NUMBER", "AddPicture", "Sheet", "NUMBER", "A", "NUMBER", "NUMBER", "image", "NUMBER", "jpg", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "return", "err", "Save", "Excel", "err", "xlsx", "NUMBER", "Save", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "return", "err", "return", "nil", "When", "this", "be", "executed", "Book", "NUMBER", "xlsx", "be", "generate", "in", "which", "image", "NUMBER", "jpg", "be", "inserted", "into", "only", "A", "NUMBER", "cell", "of", "sheet", "NUMBER", "and", "image", "NUMBER", "jpg", "be", "inserted", "into", "only", "A", "NUMBER", "cell", "of", "sheet", "NUMBER", "Hi", "GinSanaduki", "thanks", "for", "your", "issue", "NUMBER", "I", "have", "test", "based", "on", "your", "code", "and", "it", "works", "well", "NUMBER", "Which", "version", "of", "Excelize", "and", "Go", "be", "you", "use", "Hi", "xuri", "thanks", "for", "the", "reply", "NUMBER", "The", "excelize", "library", "which", "I", "downloaded", "March", "NUMBER", "NUMBER", "be", "one", "version", "before", "the", "latest", "commit", "NUMBER", "When", "I", "tried", "with", "NUMBER", "windows", "NUMBER", "the", "same", "phenomenon", "occur", "NUMBER", "go", "version", "go", "NUMBER", "windows", "amd", "NUMBER", "I", "know", "what", "to", "do", "here", "for", "the", "time", "be", "so", "if", "you", "don", "t", "reproduce", "it", "let", "me", "wait", "and", "see", "please", "NUMBER", "Thank", "you", "for", "confirmation", "NUMBER", "I", "see", "something", "similar", "with", "comments", "on", "NUMBER", "b", "NUMBER", "ddcd", "NUMBER", "go", "package", "main", "import", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "xlsx", "excelize", "NUMBER", "NewFile", "xlsx", "NUMBER", "NewSheet", "Sheet", "NUMBER", "err", "xlsx", "NUMBER", "AddComment", "Sheet", "NUMBER", "A", "NUMBER", "author", "Me", "text", "Comment", "if", "err", "nil", "panic", "err", "err", "xlsx", "NUMBER", "AddComment", "Sheet", "NUMBER", "A", "NUMBER", "author", "Me", "text", "Comment", "if", "err", "nil", "panic", "err", "err", "xlsx", "NUMBER", "SaveAs", "NUMBER", "Test", "NUMBER", "xlsx", "if", "err", "nil", "panic", "err", "Sheet", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "bdf", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "df", "NUMBER", "cef", "NUMBER", "b", "NUMBER", "png", "Sheet", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "c", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "c", "NUMBER", "e", "NUMBER", "ecb", "NUMBER", "png", "I", "did", "not", "know", "that", "the", "same", "event", "would", "occur", "even", "with", "the", "addition", "of", "comments", "NUMBER", "ank", "you", "for", "provide", "the", "information", "NUMBER", "Just", "in", "case", "I", "put", "the", "reproduction", "file", "of", "those", "days", "NUMBER", "Book", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "Book", "NUMBER", "xlsx", "evi", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "ad", "NUMBER", "NUMBER", "de", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "ec", "NUMBER", "png", "evi", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "de", "NUMBER", "e", "NUMBER", "NUMBER", "aa", "NUMBER", "c", "NUMBER", "a", "NUMBER", "b", "NUMBER", "ef", "NUMBER", "png", "It", "did", "not", "occur", "with", "modify", "sources", "NUMBER", "This", "problem", "do", "not", "occur", "with", "current", "sources", "NUMBER", "Thank", "you", "very", "much", "NUMBER", "Book", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "Book", "NUMBER", "xlsx", "evi", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ffda", "NUMBER", "NUMBER", "df", "NUMBER", "e", "NUMBER", "NUMBER", "bd", "NUMBER", "NUMBER", "a", "NUMBER", "b", "NUMBER", "f", "NUMBER", "png", "evi", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ffda", "NUMBER", "NUMBER", "df", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "dfb", "NUMBER", "ba", "NUMBER", "png", "xlsx", "NUMBER", "RemoveRow", "sheet", "NUMBER", "NUMBER", "xlsx", "NUMBER", "RemoveRow", "sheet", "NUMBER", "NUMBER", "xlsx", "NUMBER", "RemoveRow", "sheet", "NUMBER", "NUMBER", "xlsx", "NUMBER", "Save", "\u5e94\u8be5\u600e\u4e48\u5220\u9664", "\u624d\u80fd", "\u6b63\u786e\u5e76\u4e0d\u635f\u574f\u6587\u4ef6", "\u5220\u9664\u5462", "TEST", "NUMBER", "\u526f\u672c", "NUMBER", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "TEST", "NUMBER", "NUMBER", "xlsx", "TEST", "NUMBER", "\u526f\u672c", "NUMBER", "\u5220\u9664\u540e\u635f\u574f", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "TEST", "NUMBER", "NUMBER", "xlsx", "TEST", "NUMBER", "\u526f\u672c", "NUMBER", "AC\u5217\u52a0\u5220\u9664\u5b57\u6837", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "TEST", "NUMBER", "NUMBER", "AC", "NUMBER", "xlsx", "go", "NUMBER", "NUMBER", "EntSecGroup", "Skylar", "excelize", "\u7248\u672c", "\u662f", "NUMBER", "\u66f4\u65b0\u7684", "TEST", "NUMBER", "\u526f\u672c", "NUMBER", "\u5220\u9664\u540e\u635f\u574f", "NUMBER", "xlsx", "\u662f\u635f\u574f\u7684\u6587\u4ef6", "Description", "Hallo", "i", "find", "the", "same", "issue", "NUMBER", "RemoveRow", "seems", "to", "be", "corrupting", "spreadsheets", "NUMBER", "Steps", "to", "reproduce", "the", "issue", "In", "my", "case", "i", "have", "an", "excel", "file", "with", "the", "following", "merge", "cells", "mergeCell", "ref", "D", "NUMBER", "F", "NUMBER", "mergeCell", "ref", "D", "NUMBER", "F", "NUMBER", "mergeCell", "ref", "D", "NUMBER", "F", "NUMBER", "mergeCell", "ref", "D", "NUMBER", "F", "NUMBER", "mergeCell", "ref", "D", "NUMBER", "F", "NUMBER", "Let", "say", "the", "row", "NUMBER", "would", "like", "to", "be", "remove", "and", "execute", "the", "following", "pseudocode", "below", "go", "func", "main", "var", "file", "excelize", "NUMBER", "File", "err", "error", "open", "the", "file", "file", "err", "excelize", "NUMBER", "OpenFile", "testlocal", "NUMBER", "xlsx", "panic", "err", "file", "NUMBER", "RemoveRow", "sheet", "NUMBER", "NUMBER", "file", "NUMBER", "Save", "Describe", "the", "results", "you", "received", "When", "i", "open", "the", "file", "i", "receive", "the", "message", "We", "find", "a", "problem", "with", "some", "content", "in", "testlocal", "NUMBER", "xlsx", "Do", "you", "want", "us", "to", "try", "to", "recover", "as", "much", "as", "we", "can", "after", "clicking", "yes", "it", "will", "go", "to", "a", "dialog", "box", "that", "it", "has", "be", "repair", "recovered", "NUMBER", "Repair", "Log", "TAG", "TAG", "TAG", "error", "NUMBER", "_", "NUMBER", "xml", "TAG", "TAG", "Errors", "were", "detected", "in", "file", "D", "Documents", "test", "NUMBER", "xlsx", "TAG", "TAG", "TAG", "Removed", "Records", "Merge", "cells", "from", "xl", "worksheets", "sheet", "NUMBER", "xml", "part", "TAG", "TAG", "TAG", "I", "try", "to", "check", "deeper", "to", "examining", "the", "xl", "worksheets", "sheet", "NUMBER", "xml", "file", "showed", "the", "merge", "cell", "node", "was", "add", "twice", "TAG", "TAG", "TAG", "TAG", "After", "repairing", "the", "file", "the", "duplicate", "node", "was", "remove", "TAG", "TAG", "TAG", "Describe", "the", "results", "you", "expected", "I", "expect", "the", "row", "to", "be", "remove", "without", "error", "Output", "of", "go", "version", "go", "version", "go", "NUMBER", "darwin", "amd", "NUMBER", "Excelize", "version", "or", "commit", "ID", "Version", "v", "NUMBER", "Commit", "ID", "LINK", "Skylar", "excelize", "commit", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "de", "NUMBER", "a", "NUMBER", "e", "NUMBER", "a", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "Windows", "NUMBER", "MS", "Excel", "NUMBER", "PR", "Details", "TAG", "Description", "Adding", "the", "same", "image", "should", "create", "a", "drawing", "referencing", "the", "already", "stored", "copy", "of", "the", "image", "NUMBER", "Related", "Issue", "NUMBER", "Motivation", "and", "Context", "This", "reduces", "the", "overall", "file", "size", "if", "an", "image", "be", "reused", "NUMBER", "For", "example", "a", "header", "might", "be", "use", "frequently", "in", "a", "number", "of", "sheets", "and", "if", "the", "same", "logo", "be", "use", "this", "change", "will", "make", "it", "so", "only", "one", "copy", "of", "that", "logo", "be", "saved", "NUMBER", "How", "Has", "This", "Been", "Tested", "Added", "a", "unit", "test", "verify", "there", "was", "no", "performance", "regression", "in", "the", "benchmark", "and", "generate", "some", "documents", "with", "several", "repeated", "images", "NUMBER", "Types", "of", "change", "TAG", "Docs", "change", "refactoring", "dependency", "upgrade", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "x", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "x", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "x", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "f", "NUMBER", "c", "NUMBER", "ad", "NUMBER", "ceb", "NUMBER", "ec", "NUMBER", "f", "NUMBER", "a", "NUMBER", "c", "NUMBER", "cd", "NUMBER", "a", "src", "pr", "el", "desc", "will", "increase", "coverage", "by", "TAG", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "TAG", "\u00f8", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "f", "NUMBER", "c", "NUMBER", "a", "NUMBER", "dcb", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "TAG", "Description", "SetCellVal", "before", "use", "NewSheet", "will", "destroy", "the", "excel", "file", "TAG", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "SetCellValue", "to", "a", "not", "exist", "sheet", "before", "NewSheet", "Describe", "the", "results", "you", "received", "SetCellVal", "before", "use", "NewSheet", "will", "destroy", "the", "excel", "file", "Describe", "the", "results", "you", "expected", "Create", "one", "sheet", "and", "set", "some", "value", "Output", "of", "go", "version", "text", "go", "version", "go", "NUMBER", "darwin", "amd", "NUMBER", "Excelize", "version", "or", "commit", "ID", "text", "f", "NUMBER", "c", "NUMBER", "ad", "NUMBER", "ceb", "NUMBER", "ec", "NUMBER", "f", "NUMBER", "a", "NUMBER", "c", "NUMBER", "cd", "NUMBER", "a", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "latest", "version", "fo", "mac", "microsoft", "excel", "ver", "NUMBER", "NUMBER", "mac", "lastest", "version", "go", "version", "go", "version", "go", "NUMBER", "darwin", "amd", "NUMBER", "excel", "microsoft", "excel", "NUMBER", "NUMBER", "first", "code", "destroy", "the", "file", "go", "package", "main", "import", "fmt", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "f", "excelize", "NUMBER", "NewFile", "f", "NUMBER", "SetCellValue", "\u6b63", "A", "NUMBER", "aa", "err", "f", "NUMBER", "SaveAs", "issue_", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "second", "code", "be", "ok", "go", "package", "main", "import", "fmt", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "f", "excelize", "NUMBER", "NewFile", "f", "NUMBER", "NewSheet", "\u6b63", "f", "NUMBER", "SetCellValue", "\u6b63", "A", "NUMBER", "aa", "err", "f", "NUMBER", "SaveAs", "issue_", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "it", "seams", "that", "setCellvalue", "has", "some", "bug", "PR", "Details", "SetCellVal", "before", "use", "NewSheet", "will", "destroy", "the", "excel", "file", "Description", "like", "below", "Motivation", "and", "Context", "How", "Has", "This", "Been", "Tested", "Types", "of", "change", "TAG", "Docs", "change", "refactoring", "dependency", "upgrade", "x", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "x", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "x", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "x", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "x", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "x", "All", "new", "and", "exist", "test", "pass", "NUMBER", "close", "NUMBER", "ci", "NEED", "HELP", "It", "looks", "like", "some", "test", "be", "fail", "NUMBER", "Are", "you", "up", "to", "date", "with", "master", "TAG", "Description", "TAG", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "NUMBER", "NUMBER", "Describe", "the", "results", "you", "received", "Describe", "the", "results", "you", "expected", "Output", "of", "go", "version", "text", "paste", "your", "output", "here", "Excelize", "version", "or", "commit", "ID", "text", "paste", "here", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "This", "do", "not", "support", "the", "older", "binary", "xls", "format", "NUMBER", "If", "you", "only", "need", "read", "support", "you", "could", "try", "this", "library", "LINK", "PR", "Details", "TAG", "Description", "TAG", "Having", "an", "option", "for", "specify", "the", "range", "of", "row", "numbers", "to", "be", "grouped", "in", "the", "same", "outline", "level", "NUMBER", "Related", "Issue", "NUMBER", "TAG", "TAG", "TAG", "TAG", "Motivation", "and", "Context", "TAG", "It", "would", "allow", "users", "to", "specify", "the", "range", "of", "row", "numbers", "for", "the", "outline", "level", "to", "be", "applied", "instead", "of", "specify", "it", "for", "every", "row", "NUMBER", "How", "Has", "This", "Been", "Tested", "Tested", "it", "out", "locally", "NUMBER", "TAG", "TAG", "TAG", "Types", "of", "change", "TAG", "Docs", "change", "refactoring", "dependency", "upgrade", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "x", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "x", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "x", "All", "new", "and", "exist", "test", "pass", "NUMBER", "TAG", "Description", "NUMBER", "Removed", "ToAlphaString", "which", "be", "a", "breaking", "change", "and", "replaced", "it", "with", "ColumnNumberToName", "NUMBER", "The", "documentation", "LINK", "Skylar", "excelize", "blob", "master", "lib", "NUMBER", "go", "L", "NUMBER", "however", "still", "has", "the", "original", "name", "in", "it", "NUMBER", "It", "also", "change", "the", "signature", "from", "a", "string", "return", "value", "to", "a", "string", "error", "return", "value", "to", "guard", "against", "indexes", "less", "than", "one", "NUMBER", "This", "doesn", "t", "seem", "necessary", "NUMBER", "It", "also", "appears", "to", "have", "change", "the", "zero", "based", "index", "to", "a", "one", "based", "index", "NUMBER", "What", "was", "the", "motivation", "for", "these", "change", "Will", "there", "be", "a", "changelog", "that", "lays", "out", "other", "things", "that", "be", "now", "broken", "from", "that", "PR", "It", "would", "be", "helpful", "to", "know", "what", "the", "upgrade", "path", "looks", "like", "NUMBER", "For", "an", "example", "of", "why", "a", "zero", "based", "index", "and", "a", "single", "return", "value", "was", "nice", "for", "colNum", "str", "range", "headers", "s", "NUMBER", "workbook", "NUMBER", "SetCellStr", "sheetName", "fmt", "NUMBER", "Sprintf", "s", "d", "excelize", "NUMBER", "ToAlphaString", "colNum", "rowNum", "str", "Code", "now", "has", "to", "be", "more", "verbose", "to", "introduce", "an", "offset", "and", "ignore", "the", "error", "NUMBER", "setRowOutlineLevel", "now", "panics", "instead", "of", "returning", "or", "returning", "an", "error", "like", "ColumnNumberToName", "do", "NUMBER", "It", "would", "be", "nice", "if", "the", "behavior", "was", "consistent", "NUMBER", "Given", "that", "setting", "the", "outline", "level", "now", "panics", "I", "think", "it", "would", "be", "reasonable", "to", "have", "ColumnNumberToName", "also", "panic", "NUMBER", "Sending", "a", "valid", "column", "number", "seems", "like", "a", "reasonable", "requirement", "and", "returning", "an", "error", "value", "seems", "unnecessary", "just", "to", "ensure", "the", "parameter", "be", "a", "positive", "number", "NUMBER", "It", "s", "also", "not", "checking", "that", "the", "column", "number", "be", "less", "than", "the", "maximum", "of", "I", "think", "NUMBER", "NUMBER", "setRowOutlineLevel", "be", "also", "now", "NUMBER", "based", "index", "instead", "of", "NUMBER", "based", "NUMBER", "This", "be", "less", "surprising", "to", "a", "newcomer", "but", "breaks", "a", "lot", "of", "code", "and", "could", "have", "be", "mitigated", "by", "just", "update", "the", "docs", "instead", "of", "a", "code", "change", "NUMBER", "AddPicture", "be", "doing", "some", "weird", "things", "now", "NUMBER", "Prior", "to", "this", "change", "I", "was", "merge", "cells", "A", "NUMBER", "to", "B", "NUMBER", "then", "placed", "an", "image", "in", "cell", "A", "NUMBER", "with", "some", "x", "and", "y", "scaling", "NUMBER", "It", "sat", "nicely", "in", "the", "merge", "cell", "NUMBER", "After", "this", "change", "it", "no", "longer", "sits", "in", "the", "cell", "but", "looks", "like", "the", "top", "left", "corner", "be", "centered", "now", "instead", "NUMBER", "Also", "there", "appear", "to", "be", "infinite", "copies", "of", "the", "image", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "bcabd", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "ce", "NUMBER", "png", "If", "I", "click", "and", "drag", "the", "image", "from", "where", "it", "sits", "originally", "more", "appear", "and", "they", "just", "keep", "appearing", "Since", "you", "re", "introduce", "several", "breaking", "change", "you", "might", "want", "to", "consider", "bumping", "the", "library", "to", "v", "NUMBER", "Most", "consumers", "probably", "assume", "you", "re", "following", "semantic", "version", "and", "would", "be", "surprised", "to", "have", "their", "code", "not", "compile", "after", "taking", "a", "minor", "version", "upgrade", "NUMBER", "Thank", "you", "for", "Fixing", "the", "picture", "thing", "I", "pull", "down", "your", "change", "and", "test", "them", "NUMBER", "Images", "be", "indeed", "going", "to", "the", "right", "place", "again", "NUMBER", "However", "I", "m", "still", "seeing", "the", "infinite", "image", "duplication", "issue", "NUMBER", "If", "I", "switch", "back", "to", "the", "previous", "version", "of", "excelize", "and", "drag", "an", "image", "around", "the", "workbook", "it", "simply", "moves", "the", "image", "NUMBER", "Now", "a", "copy", "be", "created", "and", "moved", "instead", "NUMBER", "mlh", "NUMBER", "Thank", "you", "for", "you", "feedback", "NUMBER", "The", "primary", "motivation", "of", "col", "row", "addressing", "change", "was", "fact", "that", "different", "public", "methods", "use", "different", "addressing", "some", "time", "zero", "based", "some", "time", "one", "based", "NUMBER", "What", "about", "row", "starting", "number", "Then", "I", "work", "with", "row", "number", "NUMBER", "which", "has", "label", "NUMBER", "in", "excel", "app", "and", "which", "address", "ad", "A", "NUMBER", "for", "example", "in", "this", "library", "I", "be", "expecting", "that", "in", "all", "other", "places", "it", "will", "be", "NUMBER", "not", "NUMBER", "NUMBER", "Also", "about", "column", "name", "to", "number", "conversions", "Excel", "has", "numeric", "column", "mode", "and", "columns", "also", "starting", "from", "NUMBER", "in", "this", "case", "NUMBER", "mlh", "NUMBER", "setRowOutlineLevel", "now", "panics", "instead", "of", "returning", "or", "returning", "an", "error", "like", "ColumnNumberToName", "do", "NUMBER", "It", "would", "be", "nice", "if", "the", "behavior", "was", "consistent", "NUMBER", "Given", "that", "setting", "the", "outline", "level", "now", "panics", "I", "think", "it", "would", "be", "reasonable", "to", "have", "ColumnNumberToName", "also", "panic", "NUMBER", "Sending", "a", "valid", "column", "number", "seems", "like", "a", "reasonable", "requirement", "and", "returning", "an", "error", "value", "seems", "unnecessary", "just", "to", "ensure", "the", "parameter", "be", "a", "positive", "number", "NUMBER", "It", "s", "also", "not", "checking", "that", "the", "column", "number", "be", "less", "than", "the", "maximum", "of", "I", "think", "NUMBER", "NUMBER", "setRowOutlineLevel", "be", "also", "now", "NUMBER", "based", "index", "instead", "of", "NUMBER", "based", "NUMBER", "This", "be", "less", "surprising", "to", "a", "newcomer", "but", "breaks", "a", "lot", "of", "code", "and", "could", "have", "be", "mitigated", "by", "just", "update", "the", "docs", "instead", "of", "a", "code", "change", "NUMBER", "Please", "look", "at", "LINK", "where", "use", "complex", "approach", "Functions", "returns", "error", "and", "it", "Must", "wrappers", "panics", "on", "error", "NUMBER", "I", "use", "same", "approach", "here", "but", "unfortunately", "I", "miss", "some", "wrappers", "for", "ColumnNameToNubmer", "for", "example", "NUMBER", "I", "will", "be", "very", "pleasure", "I", "you", "made", "a", "PR", "with", "fix", "NUMBER", "Since", "you", "re", "introduce", "several", "breaking", "change", "you", "might", "want", "to", "consider", "bumping", "the", "library", "to", "v", "NUMBER", "Most", "consumers", "probably", "assume", "you", "re", "following", "semantic", "version", "and", "would", "be", "surprised", "to", "have", "their", "code", "not", "compile", "after", "taking", "a", "minor", "version", "upgrade", "NUMBER", "Thank", "you", "for", "Fixing", "the", "picture", "thing", "After", "consideration", "I", "think", "all", "incompatible", "API", "change", "will", "be", "include", "in", "v", "NUMBER", "NUMBER", "If", "so", "we", "can", "modify", "function", "signature", "to", "use", "return", "error", "instead", "of", "panic", "NUMBER", "Kind", "notice", "albenik", "xuri", "As", "I", "already", "propose", "v", "NUMBER", "earlier", "agreed", "of", "course", "But", "we", "need", "to", "take", "care", "with", "LINK", "semantic", "import", "version", "to", "keep", "support", "for", "earler", "version", "fo", "go", "NUMBER", "Simply", "add", "v", "NUMBER", "suffix", "to", "package", "name", "not", "enough", "v", "NUMBER", "branch", "also", "needed", "NUMBER", "xuri", "And", "go", "away", "from", "panics", "and", "use", "error", "will", "be", "good", "solution", "i", "think", "NUMBER", "I", "ll", "open", "a", "new", "issue", "for", "the", "image", "duplication", "thing", "once", "I", "have", "everything", "together", "to", "reproduce", "it", "in", "a", "smaller", "test", "case", "NUMBER", "On", "Thu", "Mar", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Veniamin", "Albaev", "TAG", "write", "xuri", "TAG", "And", "go", "away", "from", "panics", "and", "use", "error", "will", "be", "good", "solution", "i", "think", "NUMBER", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "The", "primary", "motivation", "of", "col", "row", "addressing", "change", "was", "fact", "that", "different", "public", "methods", "use", "different", "addressing", "some", "time", "zero", "based", "some", "time", "one", "based", "NUMBER", "I", "certainly", "understand", "the", "benefit", "of", "make", "the", "numbering", "consistent", "it", "was", "just", "alarming", "to", "see", "the", "change", "suddenly", "appear", "without", "any", "discussion", "when", "having", "better", "documentation", "on", "the", "function", "could", "have", "resolve", "most", "issue", "with", "use", "the", "library", "NUMBER", "I", "prefer", "the", "new", "names", "you", "ve", "introduce", "ColumnNumberToName", "be", "more", "descriptive", "than", "ToAlphaString", "NUMBER", "The", "difference", "between", "what", "this", "library", "be", "doing", "and", "the", "regexp", "library", "though", "be", "that", "ColumnNumberToName", "be", "more", "of", "an", "array", "access", "by", "index", "while", "regexp", "be", "dynamically", "build", "a", "state", "machine", "from", "a", "string", "for", "a", "regular", "grammar", "NUMBER", "If", "you", "access", "an", "invalid", "array", "index", "Go", "panics", "I", "think", "that", "would", "be", "reasonable", "to", "expect", "here", "as", "well", "NUMBER", "To", "elaborate", "more", "returning", "error", "values", "from", "things", "that", "you", "would", "expect", "to", "fail", "system", "calls", "HTTP", "request", "parsing", "operations", "makes", "a", "lot", "of", "sense", "and", "his", "helpful", "NUMBER", "When", "you", "re", "only", "checking", "that", "the", "number", "be", "within", "some", "fix", "range", "I", "m", "not", "sure", "it", "s", "provide", "much", "value", "here", "and", "we", "should", "probably", "add", "a", "check", "for", "the", "upper", "bound", "as", "well", "NUMBER", "I", "certainly", "understand", "the", "benefit", "of", "make", "the", "numbering", "consistent", "it", "was", "just", "alarming", "to", "see", "the", "change", "suddenly", "appear", "without", "any", "discussion", "mlh", "NUMBER", "Your", "absolutely", "right", "here", "But", "I", "have", "to", "improve", "library", "for", "real", "project", "with", "very", "hard", "deadline", "NUMBER", "For", "me", "the", "only", "two", "way", "where", "possible", "NUMBER", "Made", "a", "fork", "for", "my", "own", "needs", "use", "it", "and", "not", "maintain", "it", "later", "NUMBER", "NUMBER", "Made", "a", "PR", "to", "give", "an", "opportunity", "to", "improve", "base", "library", "NUMBER", "And", "I", "be", "very", "grateful", "to", "xuri", "that", "he", "was", "accepted", "my", "PRs", "NUMBER", "Also", "I", "was", "not", "planed", "deep", "refactoring", "but", "unfortunately", "excelize", "code", "be", "very", "linked", "together", "IMHO", "NUMBER", "All", "minor", "change", "what", "I", "do", "only", "gave", "me", "an", "error", "in", "very", "unexpect", "places", "NUMBER", "SOME", "TEXT", "REMOVED", "SEE", "NEW", "COMMENT", "BELOW", "xuri", "That", "do", "you", "this", "about", "all", "of", "it", "There", "be", "balance", "for", "you", "and", "your", "library", "between", "speed", "and", "risks", "of", "library", "growing", "and", "stability", "The", "difference", "between", "what", "this", "library", "be", "doing", "and", "the", "regexp", "library", "though", "be", "that", "ColumnNumberToName", "be", "more", "of", "an", "array", "access", "by", "index", "while", "regexp", "be", "dynamically", "build", "a", "state", "machine", "from", "a", "string", "for", "a", "regular", "grammar", "NUMBER", "If", "you", "access", "an", "invalid", "array", "index", "Go", "panics", "I", "think", "that", "would", "be", "reasonable", "to", "expect", "here", "as", "well", "NUMBER", "mlh", "NUMBER", "I", "have", "another", "description", "The", "common", "part", "of", "this", "library", "and", "regexp", "be", "a", "syntax", "check", "of", "provide", "string", "NUMBER", "And", "more", "than", "one", "use", "case", "possible", "for", "ColumnNumberToName", "and", "depended", "function", "NUMBER", "First", "internal", "use", "with", "basic", "confidence", "that", "all", "the", "cell", "names", "be", "correct", "NUMBER", "So", "panics", "be", "a", "good", "way", "to", "shorten", "a", "code", "but", "give", "a", "chance", "to", "detect", "typo", "or", "another", "code", "error", "NUMBER", "Second", "accepting", "external", "input", "cell", "name", "from", "user", "NUMBER", "And", "in", "this", "case", "error", "return", "be", "preferred", "NUMBER", "So", "I", "think", "that", "use", "of", "the", "combined", "approach", "basic", "function", "returns", "error", "plus", "Must", "wrappers", "be", "justified", "NUMBER", "Or", "at", "least", "we", "need", "a", "separate", "public", "function", "for", "column", "name", "row", "number", "and", "cell", "name", "validations", "NUMBER", "I", "still", "don", "t", "quite", "agree", "with", "you", "here", "The", "common", "part", "of", "this", "library", "and", "regexp", "be", "a", "syntax", "check", "of", "provide", "string", "NUMBER", "There", "isn", "t", "a", "syntax", "check", "in", "this", "library", "it", "s", "performing", "an", "array", "boundary", "check", "for", "valid", "columns", "within", "a", "fix", "range", "of", "NUMBER", "to", "NUMBER", "NUMBER", "I", "would", "expect", "the", "consuming", "library", "to", "sanity", "check", "input", "from", "the", "user", "before", "passing", "it", "on", "to", "library", "code", "NUMBER", "ColumnNameToNumber", "where", "the", "input", "can", "be", "an", "arbitrary", "string", "makes", "sense", "to", "do", "this", "pattern", "on", "and", "it", "looks", "like", "you", "already", "did", "that", "in", "your", "PR", "NUMBER", "I", "m", "perfectly", "happy", "with", "the", "implementation", "as", "it", "be", "in", "that", "direction", "NUMBER", "I", "still", "don", "t", "quite", "agree", "with", "you", "here", "mlh", "NUMBER", "Ok", "do", "you", "accept", "logic", "like", "this", "one", "NUMBER", "IsCollumnNameCorrect", "string", "bool", "IsRowNumberCorrect", "int", "bool", "IsCellNameCorect", "string", "bool", "add", "NUMBER", "NUMBER", "All", "other", "sheet", "manipulation", "function", "and", "and", "coordinate", "conversion", "function", "returns", "only", "result", "if", "no", "other", "error", "no", "relate", "with", "cell", "naming", "needed", "and", "panics", "with", "incorrect", "cell", "\u0441ol", "row", "input", "NUMBER", "NUMBER", "Cell", "addressing", "should", "be", "checked", "in", "NUMBER", "not", "only", "for", "syntax", "and", "lower", "bound", "but", "also", "for", "hight", "bounds", "like", "NUMBER", "NUMBER", "I", "hadn", "t", "thought", "of", "add", "validation", "function", "but", "I", "do", "prefer", "that", "NUMBER", "Could", "the", "names", "be", "IsValidColumnName", "and", "similar", "since", "they", "re", "doing", "validation", "Also", "this", "be", "my", "preference", "but", "if", "I", "m", "alone", "here", "it", "s", "not", "like", "I", "m", "going", "to", "stop", "use", "the", "library", "or", "contribute", "if", "you", "stick", "with", "the", "error", "strategy", "NUMBER", "I", "ll", "just", "open", "a", "PR", "with", "the", "Must", "style", "function", "you", "suggested", "earlier", "NUMBER", "Could", "the", "names", "be", "IsValidColumnName", "and", "similar", "since", "they", "re", "doing", "validation", "Yes", "of", "course", "I", "think", "NUMBER", "And", "I", "will", "be", "glad", "to", "hear", "xuri", "opinion", "NUMBER", "Also", "this", "be", "my", "preference", "but", "if", "I", "m", "alone", "here", "it", "s", "not", "like", "I", "m", "going", "to", "stop", "use", "the", "library", "or", "contribute", "if", "you", "stick", "with", "the", "error", "strategy", "NUMBER", "I", "ll", "just", "open", "a", "PR", "with", "the", "Must", "style", "function", "you", "suggested", "earlier", "NUMBER", "And", "again", "xuri", "opinion", "will", "be", "most", "important", "I", "think", "NUMBER", "For", "me", "both", "ways", "with", "error", "and", "Must", "wrappers", "and", "with", "panics", "be", "acceptable", "NUMBER", "mlh", "NUMBER", "As", "of", "commit", "LINK", "Skylar", "excelize", "commit", "NUMBER", "ff", "NUMBER", "dc", "NUMBER", "a", "NUMBER", "d", "NUMBER", "aa", "NUMBER", "f", "NUMBER", "db", "NUMBER", "cf", "NUMBER", "dfe", "NUMBER", "cc", "NUMBER", "b", "NUMBER", "e", "I", "think", "xuri", "decided", "to", "use", "an", "error", "returning", "way", "NUMBER", "Yup", "I", "ll", "get", "a", "PR", "up", "in", "the", "near", "future", "with", "some", "Must", "methods", "NUMBER", "TAG", "Description", "When", "add", "an", "image", "it", "would", "be", "useful", "to", "detect", "if", "the", "image", "be", "a", "duplicate", "and", "instead", "of", "add", "the", "image", "again", "return", "a", "reference", "to", "the", "exist", "media", "NUMBER", "We", "have", "a", "header", "that", "gets", "add", "in", "some", "large", "workbooks", "to", "each", "sheet", "and", "this", "substantially", "increases", "the", "file", "size", "NUMBER", "If", "we", "open", "the", "file", "in", "Excel", "and", "save", "it", "again", "Excel", "detects", "the", "duplicate", "images", "and", "consolidates", "them", "on", "save", "reducing", "the", "file", "size", "NUMBER", "I", "think", "it", "would", "be", "possible", "to", "change", "addMedia", "in", "picture", "NUMBER", "go", "to", "handle", "this", "behavior", "NUMBER", "AddPictureFromBytes", "would", "change", "slightly", "as", "well", "NUMBER", "addMedia", "steps", "through", "all", "the", "saved", "media", "and", "looks", "for", "byte", "slices", "that", "have", "the", "same", "length", "as", "the", "file", "we", "be", "trying", "to", "save", "NUMBER", "Compute", "the", "hash", "for", "both", "we", "can", "obviously", "re", "use", "the", "hash", "of", "the", "file", "be", "saved", "for", "future", "comparisons", "NUMBER", "If", "the", "hash", "matches", "return", "the", "media", "path", "for", "the", "exist", "image", "NUMBER", "If", "no", "matches", "be", "find", "save", "the", "new", "media", "and", "return", "its", "path", "NUMBER", "AddPictureFromBytes", "calls", "addMedia", "before", "calling", "addDrawingRelationships", "and", "uses", "the", "media", "path", "provide", "by", "addMedia", "in", "the", "call", "to", "addDrawingRelationships", "NUMBER", "Since", "checking", "the", "length", "of", "a", "slice", "be", "a", "constant", "time", "operation", "and", "very", "few", "slices", "should", "have", "the", "_exact_", "same", "length", "without", "actually", "be", "the", "same", "media", "there", "shouldn", "t", "be", "much", "of", "a", "performance", "impact", "from", "the", "hashing", "NUMBER", "However", "it", "would", "be", "worth", "add", "a", "benchmark", "to", "ensure", "this", "doesn", "t", "cause", "a", "regression", "for", "NUMBER", "It", "would", "also", "be", "useful", "to", "incorporate", "a", "benchmark", "for", "actually", "saving", "the", "xlsx", "file", "since", "it", "s", "likely", "that", "the", "performance", "impact", "of", "this", "check", "would", "be", "offset", "by", "not", "having", "to", "write", "as", "many", "file", "NUMBER", "I", "will", "wait", "for", "feedback", "on", "this", "one", "since", "while", "I", "think", "it", "may", "be", "useful", "but", "I", "understand", "not", "wanting", "to", "risk", "the", "performance", "impact", "NUMBER", "A", "hash", "may", "actually", "be", "overkill", "the", "bytes", "package", "has", "has", "an", "Equal", "LINK", "Equal", "function", "that", "already", "handles", "equality", "and", "would", "probably", "be", "more", "efficient", "NUMBER", "TAG", "Description", "I", "ve", "tried", "to", "recreate", "this", "issue", "and", "wasn", "t", "able", "to", "create", "a", "minimal", "reproduction", "NUMBER", "I", "have", "an", "app", "that", "be", "having", "a", "nil", "pointer", "dereference", "panic", "when", "calling", "NewStyle", "NUMBER", "The", "same", "exact", "code", "do", "not", "have", "the", "issue", "on", "a", "colleague", "s", "computer", "we", "re", "definitely", "use", "the", "same", "NUMBER", "code", "NUMBER", "Any", "help", "be", "much", "appreciated", "NUMBER", "I", "ve", "spent", "a", "few", "days", "trying", "various", "approaches", "clearing", "my", "modcache", "reinstalling", "Go", "update", "my", "Mac", "OS", "NUMBER", "The", "error", "occur", "in", "the", "following", "block", "all", "of", "the", "below", "code", "be", "from", "styles", "NUMBER", "go", "go", "if", "fs", "NUMBER", "Font", "nil", "font", "_", "xml", "NUMBER", "Marshal", "setFont", "fs", "s", "NUMBER", "Fonts", "NUMBER", "Count", "s", "NUMBER", "Fonts", "NUMBER", "Font", "append", "s", "NUMBER", "Fonts", "NUMBER", "Font", "xlsxFont", "Font", "string", "font", "NUMBER", "len", "font", "NUMBER", "fontID", "s", "NUMBER", "Fonts", "NUMBER", "Count", "NUMBER", "At", "the", "time", "s", "NUMBER", "Fonts", "NUMBER", "Count", "be", "call", "s", "NUMBER", "Fonts", "be", "nil", "for", "some", "reason", "NUMBER", "s", "be", "initialized", "with", "the", "following", "line", "s", "f", "NUMBER", "ylesReader", "and", "I", "can", "t", "quite", "figure", "out", "why", "this", "constructor", "be", "initializing", "s", "NUMBER", "Fonts", "as", "nil", "for", "me", "but", "not", "my", "colleagues", "NUMBER", "I", "really", "have", "no", "idea", "what", "be", "cause", "this", "issue", "and", "when", "I", "tried", "to", "create", "a", "minimal", "reproduction", "that", "shows", "NewStyle", "having", "this", "memory", "panic", "I", "was", "unable", "to", "cause", "the", "panic", "NUMBER", "Output", "of", "go", "version", "text", "go", "version", "go", "NUMBER", "darwin", "amd", "NUMBER", "Excelize", "version", "or", "commit", "ID", "text", "NUMBER", "and", "have", "also", "tried", "later", "commit", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "Mac", "OSX", "Gin", "web", "app", "creating", "xlsx", "file", "runtime", "error", "invalid", "memory", "address", "or", "nil", "pointer", "dereference", "usr", "local", "Cellar", "go", "NUMBER", "libexec", "src", "runtime", "panic", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "c", "NUMBER", "panicmem", "panic", "memoryError", "usr", "local", "Cellar", "go", "NUMBER", "libexec", "src", "runtime", "signal_unix", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "a", "NUMBER", "f", "sigpanic", "panicmem", "Users", "ndubelman", "Desktop", "Dev", "Go", "pkg", "mod", "github", "NUMBER", "com", "NUMBER", "ent", "sec", "group", "skylar", "excelize", "v", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "styles", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "e", "File", "NUMBER", "NewStyle", "font", "_", "xml", "NUMBER", "Marshal", "setFont", "fs", "buildAllocationSheet", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "e", "NUMBER", "addBuildAllocationHeaders", "style", "NUMBER", "err", "excelFile", "NUMBER", "NewStyle", "alignment", "horizontal", "center", "Sorry", "it", "be", "company", "code", "and", "when", "I", "tried", "to", "recreate", "it", "with", "a", "smaller", "example", "I", "was", "unable", "to", "get", "the", "same", "issue", "NUMBER", "Feel", "free", "to", "close", "this", "NUMBER", "I", "was", "just", "curious", "if", "someone", "might", "know", "of", "an", "obvious", "reason", "why", "s", "NUMBER", "Fonts", "would", "be", "initialized", "as", "nil", "for", "me", "but", "not", "a", "coworker", "run", "the", "same", "code", "NUMBER", "\u9ed8\u8ba4\u7684\u5750\u6807\u53ca\u5206\u7c7b\u7684\u989c\u8272\u592a\u6d45\u4e86", "\u6b64\u5916\u8fd8\u60f3\u52a0\u4e2a\u5750\u6807\u6c34\u5e73\u7ebf\u793a\u610f\u7ebf", "NUMBER", "PR", "Details", "TAG", "Description", "TAG", "Related", "Issue", "TAG", "TAG", "TAG", "TAG", "Motivation", "and", "Context", "TAG", "How", "Has", "This", "Been", "Tested", "TAG", "TAG", "TAG", "Types", "of", "change", "TAG", "Docs", "change", "refactoring", "dependency", "upgrade", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "c", "NUMBER", "e", "NUMBER", "e", "NUMBER", "f", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "b", "NUMBER", "d", "NUMBER", "dede", "NUMBER", "src", "pr", "el", "desc", "will", "not", "change", "coverage", "NUMBER", "The", "diff", "coverage", "be", "n", "a", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "rows", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "cm", "NUMBER", "cy", "NUMBER", "nbw", "NUMBER", "TAG", "\u00f8", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "c", "NUMBER", "e", "NUMBER", "b", "NUMBER", "b", "NUMBER", "d", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "PR", "Details", "Implement", "consistent", "row", "addressing", "by", "Excel", "row", "number", "starting", "with", "NUMBER", "Description", "NUMBER", "Added", "second", "version", "for", "all", "row", "manipulation", "methods", "with", "zero", "based", "row", "addressing", "NUMBER", "NUMBER", "Fixed", "methods", "documentation", "to", "explicitly", "describe", "which", "row", "addressing", "use", "in", "method", "NUMBER", "NUMBER", "Added", "WARNING", "to", "README", "NUMBER", "md", "NUMBER", "NUMBER", "Cosmetic", "change", "All", "row", "test", "moved", "to", "file", "rows_test", "NUMBER", "go", "NUMBER", "Related", "Issue", "LINK", "Skylar", "excelize", "issue", "NUMBER", "Motivation", "and", "Context", "Yet", "another", "entropy", "fix", "I", "spent", "a", "much", "time", "to", "find", "bug", "be", "my", "program", "relate", "to", "different", "row", "numbering", "logic", "with", "different", "methods", "NUMBER", "How", "Has", "This", "Been", "Tested", "Unit", "test", "has", "be", "update", "and", "succeed", "NUMBER", "Types", "of", "change", "x", "Docs", "change", "refactoring", "dependency", "upgrade", "x", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "x", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "x", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "x", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "x", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "x", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "f", "NUMBER", "da", "NUMBER", "bab", "NUMBER", "c", "NUMBER", "ab", "NUMBER", "d", "NUMBER", "c", "NUMBER", "ae", "NUMBER", "ba", "NUMBER", "c", "NUMBER", "src", "pr", "el", "desc", "will", "decrease", "coverage", "by", "NUMBER", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "rows", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "cm", "NUMBER", "cy", "NUMBER", "nbw", "NUMBER", "TAG", "NUMBER", "arrow_down", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "f", "NUMBER", "d", "NUMBER", "cace", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "Hi", "xuri", "NUMBER", "By", "guidelines", "LINK", "LINK", "semantic", "import", "version", "after", "incompatible", "API", "change", "it", "s", "necessary", "to", "update", "version", "to", "v", "NUMBER", "and", "module", "import", "path", "to", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "v", "NUMBER", "NUMBER", "And", "also", "remove", "TravisCI", "test", "from", "older", "go", "version", "which", "not", "support", "go", "modules", "NUMBER", "Do", "you", "plan", "to", "follow", "guidelines", "Or", "I", "should", "simply", "break", "compatibility", "and", "place", "a", "README", "note", "xuri", "do", "Is", "there", "a", "way", "to", "remove", "all", "the", "Data", "Validation", "from", "the", "sheet", "Thank", "you", "for", "your", "work", "on", "excelize", "NUMBER", "This", "be", "a", "really", "helpful", "and", "flexible", "tool", "NUMBER", "I", "find", "an", "issue", "when", "an", "exist", "formula", "on", "the", "input", "file", "be", "delete", "from", "the", "cell", "or", "moved", "down", "when", "new", "rows", "be", "add", "NUMBER", "The", "error", "message", "be", "the", "same", "to", "NUMBER", "Scenario", "description", "Input", "file", "structure", "Rows", "at", "beginning", "acting", "as", "sheet", "header", "NUMBER", "Data", "section", "that", "I", "need", "to", "populate", "with", "new", "rows", "NUMBER", "Cells", "at", "bottom", "with", "formulas", "that", "I", "need", "to", "rebuild", "update", "vertical", "range", "after", "previous", "step", "be", "do", "NUMBER", "It", "would", "be", "so", "helpful", "if", "some", "day", "this", "rebuild", "could", "be", "automatic", "like", "Microsoft", "Excel", "editor", "do", "Excelize", "steps", "To", "apply", "final", "formulas", "result", "I", "need", "to", "perform", "the", "following", "NUMBER", "Scan", "the", "whole", "sheet", "and", "find", "cells", "with", "formulas", "NUMBER", "NUMBER", "Backup", "sheet", "formulas", "info", "NUMBER", "NUMBER", "Populate", "sheet", "with", "new", "rows", "NUMBER", "NUMBER", "Put", "back", "the", "formulas", "with", "the", "new", "range", "calculation", "NUMBER", "Issue", "Input", "file", "info", "Name", "HistoryTemplate", "NUMBER", "xlsx", "Number", "values", "from", "E", "NUMBER", "to", "E", "NUMBER", "Formula", "at", "E", "NUMBER", "SUM", "E", "NUMBER", "E", "NUMBER", "NUMBER", "Formula", "deletion", "xlsx", "_", "excelize", "NUMBER", "OpenFile", "NUMBER", "HistoryTemplate", "NUMBER", "xlsx", "sheetName", "Paros", "xlsx", "NUMBER", "SetCellFormula", "sheetName", "E", "NUMBER", "xlsx", "NUMBER", "SaveAs", "NUMBER", "output", "NUMBER", "xlsx", "NUMBER", "Formula", "moved", "down", "xlsx", "_", "excelize", "NUMBER", "OpenFile", "NUMBER", "HistoryTemplate", "NUMBER", "xlsx", "sheetName", "Paros", "xlsx", "NUMBER", "DuplicateRowTo", "sheetName", "NUMBER", "NUMBER", "xlsx", "NUMBER", "SaveAs", "NUMBER", "output", "NUMBER", "xlsx", "Error", "message", "to", "open", "output", "file", "_Removed", "Records", "Formula", "from", "xl", "calcChain", "NUMBER", "xml", "part", "Calculation", "properties", "_", "Files", "HistoryTemplate", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "HistoryTemplate", "NUMBER", "xlsx", "output", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "output", "NUMBER", "xlsx", "output", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "output", "NUMBER", "xlsx", "go", "env", "set", "GOARCH", "amd", "NUMBER", "set", "GOBIN", "set", "GOCACHE", "C", "Users", "Mind", "AppData", "Local", "go", "build", "set", "GOEXE", "NUMBER", "exe", "set", "GOHOSTARCH", "amd", "NUMBER", "set", "GOHOSTOS", "windows", "set", "GOOS", "windows", "set", "GOPATH", "C", "GO_Projects", "set", "GORACE", "set", "GOROOT", "C", "Go", "set", "GOTMPDIR", "set", "GOTOOLDIR", "C", "Go", "pkg", "tool", "windows_amd", "NUMBER", "set", "GCCGO", "gccgo", "set", "CC", "gcc", "set", "CXX", "g", "set", "CGO_ENABLED", "NUMBER", "set", "CGO_CFLAGS", "g", "O", "NUMBER", "set", "CGO_CPPFLAGS", "set", "CGO_CXXFLAGS", "g", "O", "NUMBER", "set", "CGO_FFLAGS", "g", "O", "NUMBER", "set", "CGO_LDFLAGS", "g", "O", "NUMBER", "set", "PKG_CONFIG", "pkg", "config", "set", "GOGCCFLAGS", "m", "NUMBER", "mthreads", "fno", "caret", "diagnostics", "Qunused", "argument", "fmessage", "length", "NUMBER", "fdebug", "prefix", "map", "C", "Users", "Mind", "AppData", "Local", "Temp", "go", "build", "NUMBER", "tmp", "go", "build", "gno", "record", "gcc", "switches", "Thanks", "for", "your", "fix", "NUMBER", "I", "know", "that", "DuplicateRow", "and", "DuplicateRowTo", "implies", "hard", "work", "NUMBER", "Now", "the", "output", "file", "has", "no", "error", "when", "formula", "be", "remove", "from", "cell", "NUMBER", "Right", "now", "this", "be", "enough", "for", "me", "NUMBER", "TAG", "Description", "func", "f", "File", "GetComments", "comments", "map", "string", "Comment", "returns", "wrong", "mapping", "between", "worksheets", "and", "comments", "NUMBER", "This", "problem", "only", "occur", "if", "a", "workbook", "contains", "multiple", "worksheets", "and", "at", "least", "one", "of", "them", "except", "the", "last", "one", "doesn", "t", "contain", "comments", "NUMBER", "Example", "Assuming", "a", "workbook", "has", "NUMBER", "worksheets", "there", "will", "be", "NUMBER", "file", "in", "xl", "worksheets", "NUMBER", "sheet", "NUMBER", "xml", "sheet", "without", "comments", "sheet", "NUMBER", "xml", "and", "sheet", "NUMBER", "xml", "NUMBER", "Since", "the", "first", "sheet", "doesn", "t", "contain", "any", "comments", "there", "will", "only", "be", "two", "comment", "file", "in", "xl", "NUMBER", "comments", "NUMBER", "xml", "comments", "NUMBER", "xml", "NUMBER", "Currently", "the", "relation", "between", "sheet", "TAG", "NUMBER", "xml", "and", "comments", "TAG", "NUMBER", "xml", "seems", "to", "be", "index", "based", "according", "to", "Comment", "NUMBER", "go", "LINK", "Skylar", "excelize", "blob", "master", "comment", "NUMBER", "go", "L", "NUMBER", "NUMBER", "Code", "snippet", "from", "link", "above", "commentID", "f", "NUMBER", "GetSheetIndex", "n", "commentsXML", "xl", "comments", "strconv", "NUMBER", "Itoa", "commentID", "NUMBER", "xml", "Solution", "Matching", "sheet", "TAG", "NUMBER", "xml", "and", "comments", "TAG", "NUMBER", "xml", "based", "on", "a", "common", "index", "returns", "wrong", "matchings", "if", "any", "worksheet", "except", "the", "last", "one", "has", "no", "comments", "NUMBER", "It", "seems", "that", "the", "proper", "relationship", "between", "worksheets", "and", "comments", "can", "be", "find", "in", "xl", "worksheets", "_rels", "NUMBER", "This", "folder", "contains", "XML", "file", "for", "each", "worksheet", "that", "has", "any", "relationships", "NUMBER", "A", "plain", "worksheet", "will", "have", "no", "file", "in", "xl", "worksheets", "_rels", "NUMBER", "According", "to", "the", "example", "I", "mention", "above", "sheet", "NUMBER", "xml", "NUMBER", "rels", "contains", "the", "lines", "TAG", "TAG", "TAG", "TAG", "Note", "that", "there", "be", "no", "reference", "to", "xl", "comments", "NUMBER", "xml", "NUMBER", "sheet", "NUMBER", "xml", "NUMBER", "rels", "contains", "the", "lines", "TAG", "TAG", "TAG", "TAG", "TAG", "Note", "that", "there", "be", "a", "reference", "to", "xl", "comments", "NUMBER", "xml", "in", "line", "TAG", "To", "avoid", "the", "issue", "I", "would", "propose", "to", "match", "worksheets", "and", "comments", "based", "on", "their", "relationship", "in", "xl", "worksheets", "_rels", "NUMBER", "Please", "note", "that", "a", "plain", "worksheet", "will", "not", "have", "a", "corresponding", "file", "in", "xl", "worksheets", "_rels", "NUMBER", "Thus", "it", "may", "happen", "that", "you", "will", "only", "see", "sheet", "NUMBER", "xml", "NUMBER", "rels", "and", "sheet", "NUMBER", "xml", "NUMBER", "rels", "assuming", "that", "worksheet", "one", "be", "plain", "but", "worksheet", "two", "and", "three", "contain", "comments", "NUMBER", "TAG", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "Create", "a", "new", "Excel", "file", "NUMBER", "In", "case", "you", "don", "t", "have", "three", "worksheets", "by", "default", "create", "two", "additional", "sheets", "NUMBER", "NUMBER", "Set", "a", "comment", "in", "any", "cell", "on", "worksheet", "NUMBER", "and", "worksheet", "NUMBER", "Don", "t", "set", "any", "comment", "on", "worksheet", "NUMBER", "NUMBER", "Call", "GetComments", "Describe", "the", "results", "you", "received", "Output", "with", "some", "additional", "format", "Sheet", "NUMBER", "xxx", "xxx", "NUMBER", "A", "NUMBER", "This", "xxx", "xxx", "NUMBER", "B", "NUMBER", "Is", "xxx", "xxx", "NUMBER", "C", "NUMBER", "A", "test", "comment", "Sheet", "NUMBER", "xxx", "xxx", "NUMBER", "A", "NUMBER", "Another", "xxx", "xxx", "NUMBER", "B", "NUMBER", "Test", "xxx", "xxx", "NUMBER", "C", "NUMBER", "Comment", "Sheet", "NUMBER", "Describe", "the", "results", "you", "expected", "Since", "the", "first", "sheet", "had", "no", "comments", "but", "only", "sheet", "two", "and", "three", "I", "would", "expect", "Sheet", "NUMBER", "Sheet", "NUMBER", "xxx", "xxx", "NUMBER", "A", "NUMBER", "This", "xxx", "xxx", "NUMBER", "B", "NUMBER", "Is", "xxx", "xxx", "NUMBER", "C", "NUMBER", "A", "test", "comment", "Sheet", "NUMBER", "xxx", "xxx", "NUMBER", "A", "NUMBER", "Another", "xxx", "xxx", "NUMBER", "B", "NUMBER", "Test", "xxx", "xxx", "NUMBER", "C", "NUMBER", "Comment", "Output", "of", "go", "version", "text", "go", "version", "go", "NUMBER", "darwin", "amd", "NUMBER", "Excelize", "version", "or", "commit", "ID", "text", "v", "NUMBER", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "OSX", "Mojave", "NUMBER", "Microsoft", "Excel", "NUMBER", "I", "made", "some", "routines", "to", "get", "spreadsheet", "columns", "as", "follows", "golang", "fmt", "NUMBER", "Println", "h", "NUMBER", "NextColumn", "A", "NUMBER", "Prints", "B", "fmt", "NUMBER", "Println", "h", "NUMBER", "NextColumn", "A", "NUMBER", "Prints", "G", "fmt", "NUMBER", "Println", "h", "NUMBER", "NextColumn", "Z", "NUMBER", "Prints", "AA", "fmt", "NUMBER", "Println", "h", "NUMBER", "NextColumn", "A", "NUMBER", "Prints", "E", "fmt", "NUMBER", "Println", "h", "NUMBER", "NextColumn", "AA", "NUMBER", "Prints", "AB", "fmt", "NUMBER", "Println", "h", "NUMBER", "NextColumn", "AA", "NUMBER", "Prints", "AE", "fmt", "NUMBER", "Println", "h", "NUMBER", "NextColumn", "AZ", "NUMBER", "Prints", "BA", "fmt", "NUMBER", "Println", "h", "NUMBER", "NextColumn", "ZZ", "NUMBER", "Prints", "AAA", "fmt", "NUMBER", "Println", "h", "NUMBER", "NextColumn", "XFD", "NUMBER", "Prints", "fmt", "NUMBER", "Println", "h", "NUMBER", "NextColumn", "XFD", "NUMBER", "Prints", "fmt", "NUMBER", "Println", "h", "NUMBER", "NextColumn", "XFB", "NUMBER", "Prints", "XFC", "fmt", "NUMBER", "Println", "h", "NUMBER", "NextColumn", "XFB", "NUMBER", "Prints", "XFD", "fmt", "NUMBER", "Println", "h", "NUMBER", "NextColumn", "XFB", "NUMBER", "Prints", "fmt", "NUMBER", "Println", "h", "NUMBER", "NextColumn", "XFB", "NUMBER", "Prints", "fmt", "NUMBER", "Println", "h", "NUMBER", "NextColumn", "NUMBER", "NUMBER", "Prints", "fmt", "NUMBER", "Println", "h", "NUMBER", "NextColumn", "fsdfsd", "NUMBER", "Prints", "fmt", "NUMBER", "Println", "h", "NUMBER", "NextColumn", "fsdfsd", "NUMBER", "Prints", "fmt", "NUMBER", "Println", "h", "NUMBER", "Columns", "A", "NUMBER", "Prints", "A", "B", "C", "D", "E", "fmt", "NUMBER", "Println", "h", "NUMBER", "Columns", "XFA", "NUMBER", "Prints", "XFA", "XFB", "XFC", "XFD", "So", "I", "m", "offering", "the", "code", "for", "the", "project", "if", "the", "maintainer", "s", "understands", "it", "as", "useful", "handy", "NUMBER", "Please", "feel", "free", "to", "use", "and", "adapt", "NUMBER", "The", "code", "be", "available", "under", "_the", "unlicense_", "NUMBER", "Here", "s", "the", "code", "LINK", "If", "the", "maintainers", "do", "preffer", "I", "can", "PR", "NUMBER", "My", "only", "doubt", "be", "about", "the", "quantity", "of", "columns", "NUMBER", "Is", "it", "universal", "among", "spreadsheet", "engines", "version", "Description", "Simplify", "TitleToNumber", "implementation", "add", "a", "few", "more", "test", "cases", "in", "TestTitleToNumber", "use", "pure", "integer", "computation", "drop", "use", "of", "math", "NUMBER", "Pow", "remove", "unnecessary", "casts", "to", "int", "Motivation", "and", "Context", "Faster", "TitleToNumber", "NUMBER", "How", "Has", "This", "Been", "Tested", "Increased", "code", "coverage", "thanks", "to", "more", "test", "cases", "NUMBER", "Types", "of", "change", "TAG", "x", "Docs", "change", "refactoring", "dependency", "upgrade", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "x", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "x", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "b", "NUMBER", "b", "NUMBER", "c", "NUMBER", "fa", "NUMBER", "b", "NUMBER", "cc", "NUMBER", "f", "NUMBER", "b", "NUMBER", "b", "NUMBER", "src", "pr", "el", "desc", "will", "not", "change", "coverage", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "lib", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "bGliLmdv", "NUMBER", "TAG", "\u00f8", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "b", "NUMBER", "b", "NUMBER", "c", "NUMBER", "c", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "TAG", "Description", "TAG", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "Open", "file", "test", "NUMBER", "xlsx", "NUMBER", "Run", "GetRows", "Sheet", "NUMBER", "package", "main", "import", "fmt", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "file", "err", "excelize", "NUMBER", "OpenFile", "test", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "return", "rows", "file", "NUMBER", "GetRows", "Sheet", "NUMBER", "for", "_", "row", "range", "rows", "fmt", "NUMBER", "Println", "row", "test", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "test", "NUMBER", "xlsx", "Describe", "the", "results", "you", "received", "Salary", "Name", "Age", "Department", "NUMBER", "Peter", "NUMBER", "Finance", "Describe", "the", "results", "you", "expected", "Salary", "Name", "Age", "Department", "NUMBER", "Peter", "NUMBER", "Finance", "Output", "of", "go", "version", "text", "NUMBER", "Excelize", "version", "or", "commit", "ID", "text", "NUMBER", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "Roadmap", "Object", "Linking", "and", "Embedding", "OLE", "format", "support", "NUMBER", "Our", "company", "has", "lots", "of", "system", "that", "export", "the", "old", "format", "NUMBER", "xls", "Excel", "file", "NUMBER", "The", "ole", "support", "be", "the", "last", "item", "on", "the", "roadmap", "list", "NUMBER", "It", "s", "difficult", "for", "the", "team", "to", "implement", "the", "legacy", "file", "format", "support", "NUMBER", "Is", "it", "possible", "to", "just", "add", "a", "command", "to", "convert", "the", "xls", "file", "to", "xlsx", "file", "so", "that", "we", "can", "process", "the", "file", "use", "excelize", "Thanks", "Andrew", "PR", "Details", "close", "NUMBER", "Description", "datavalidation", "list", "error", "formula", "NUMBER", "not", "set", "formula", "value", "Related", "Issue", "TAG", "TAG", "TAG", "TAG", "Motivation", "and", "Context", "TAG", "How", "Has", "This", "Been", "Tested", "TAG", "TAG", "TAG", "Types", "of", "change", "TAG", "Docs", "change", "refactoring", "dependency", "upgrade", "x", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "c", "NUMBER", "c", "NUMBER", "e", "NUMBER", "ad", "NUMBER", "e", "NUMBER", "d", "NUMBER", "cc", "NUMBER", "c", "NUMBER", "c", "NUMBER", "e", "NUMBER", "bba", "NUMBER", "src", "pr", "el", "desc", "will", "decrease", "coverage", "by", "NUMBER", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "datavalidation", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "ZGF", "NUMBER", "YXZhbGlkYXRpb", "NUMBER", "uZ", "NUMBER", "NUMBER", "TAG", "NUMBER", "arrow_down", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "c", "NUMBER", "c", "NUMBER", "e", "NUMBER", "daf", "NUMBER", "a", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "TAG", "Description", "Set", "the", "list", "validation", "error", "NUMBER", "When", "the", "content", "of", "the", "list", "value", "be", "too", "long", "the", "format", "of", "the", "excel", "file", "will", "be", "incorrect", "NUMBER", "After", "the", "repair", "the", "unit", "list", "data", "validation", "in", "the", "excel", "sheet", "disappears", "NUMBER", "TAG", "PR", "Details", "TAG", "Description", "TAG", "Related", "Issue", "TAG", "TAG", "TAG", "TAG", "Motivation", "and", "Context", "TAG", "How", "Has", "This", "Been", "Tested", "TAG", "TAG", "TAG", "Types", "of", "change", "TAG", "Docs", "change", "refactoring", "dependency", "upgrade", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "f", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "fb", "NUMBER", "ab", "NUMBER", "ace", "NUMBER", "c", "NUMBER", "e", "src", "pr", "el", "desc", "will", "increase", "coverage", "by", "TAG", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "TAG", "NUMBER", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "f", "NUMBER", "f", "NUMBER", "d", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "According", "Go", "Release", "Policy", "LINK", "policy", "Each", "major", "Go", "release", "be", "support", "until", "there", "be", "two", "newer", "major", "release", "go", "NUMBER", "be", "obsolete", "and", "should", "be", "remove", "from", "TravicCI", "config", "IMHO", "NUMBER", "If", "you", "agree", "I", "ready", "to", "do", "a", "PR", "NUMBER", "Why", "remove", "checks", "on", "Travis", "CI", "as", "all", "the", "checks", "currently", "pass", "even", "on", "those", "old", "version", "of", "Go", "dolmen", "Do", "you", "really", "use", "unsupported", "version", "of", "Go", "in", "your", "work", "What", "if", "in", "future", "PR", "will", "break", "on", "unsupported", "version", "Fix", "PR", "Or", "change", "project", "config", "without", "ask", "authors", "Or", "spend", "time", "to", "communicate", "with", "authors", "instead", "of", "simply", "made", "a", "PR", "I", "think", "it", "will", "be", "better", "to", "avoid", "this", "now", "with", "very", "low", "cost", "NUMBER", "This", "issue", "be", "about", "consistency", "of", "project", "with", "ecosystem", "NUMBER", "Of", "course", "it", "can", "be", "untouched", "until", "it", "breaks", "or", "TravisCI", "will", "remove", "support", "of", "older", "version", "NUMBER", "This", "be", "also", "a", "way", "NUMBER", "PR", "Details", "New", "feature", "File", "NUMBER", "DuplicateRowTo", "duplicate", "row", "to", "specified", "row", "position", "Description", "DuplicateRowTo", "be", "similar", "to", "DuplicateRow", "but", "copies", "specified", "row", "not", "just", "after", "specified", "source", "row", "but", "to", "any", "other", "specified", "position", "below", "or", "above", "source", "row", "NUMBER", "Also", "I", "made", "minor", "modifications", "of", "test", "use", "filepath", "NUMBER", "Join", "instead", "of", "direct", "unix", "way", "paths", "strings", "to", "avoid", "possible", "test", "fail", "on", "other", "OS", "NUMBER", "Related", "Issue", "LINK", "Skylar", "excelize", "issue", "NUMBER", "Motivation", "and", "Context", "Described", "in", "LINK", "Skylar", "excelize", "issue", "NUMBER", "How", "Has", "This", "Been", "Tested", "go", "test", "NUMBER", "NUMBER", "Types", "of", "change", "x", "Docs", "change", "refactoring", "dependency", "upgrade", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "x", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "x", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "x", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "b", "NUMBER", "ed", "NUMBER", "c", "NUMBER", "d", "NUMBER", "cced", "NUMBER", "d", "NUMBER", "e", "NUMBER", "a", "NUMBER", "af", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "ca", "NUMBER", "c", "src", "pr", "el", "desc", "will", "decrease", "coverage", "by", "NUMBER", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "excelize", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "ZXhjZWxpemUuZ", "NUMBER", "NUMBER", "TAG", "NUMBER", "arrow_down", "rows", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "cm", "NUMBER", "cy", "NUMBER", "nbw", "NUMBER", "TAG", "NUMBER", "arrow_down", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "b", "NUMBER", "ed", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "PR", "Details", "Do", "not", "create", "a", "blank", "fill", "if", "no", "fill", "be", "specified", "in", "the", "style", "format", "Description", "setFills", "returns", "nil", "if", "type", "be", "not", "gradient", "or", "pattern", "NUMBER", "NewStyle", "checks", "for", "nil", "and", "only", "add", "fill", "sets", "fillID", "if", "not", "nil", "NUMBER", "Related", "Issue", "LINK", "Skylar", "excelize", "issue", "NUMBER", "Motivation", "and", "Context", "Setting", "a", "cell", "style", "on", "a", "cell", "that", "be", "part", "of", "a", "table", "overrides", "the", "table", "fill", "format", "regardless", "if", "there", "be", "a", "fill", "specified", "in", "the", "style", "format", "or", "not", "NUMBER", "This", "only", "sets", "a", "fill", "on", "the", "style", "if", "provide", "a", "fill", "format", "in", "the", "call", "to", "NewStyle", "NUMBER", "How", "Has", "This", "Been", "Tested", "Unit", "test", "add", "to", "styles_test", "NUMBER", "go", "for", "both", "a", "fill", "specified", "and", "fill", "not", "specified", "NUMBER", "Types", "of", "change", "Docs", "change", "refactoring", "dependency", "upgrade", "X", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "X", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "X", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "X", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "X", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "d", "NUMBER", "fadf", "NUMBER", "f", "NUMBER", "a", "NUMBER", "f", "NUMBER", "cae", "NUMBER", "fe", "NUMBER", "ccc", "NUMBER", "ea", "NUMBER", "d", "src", "pr", "el", "desc", "will", "increase", "coverage", "by", "TAG", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "TAG", "\u00f8", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "d", "NUMBER", "fa", "NUMBER", "dd", "NUMBER", "b", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "PR", "Details", "TAG", "Description", "TAG", "Related", "Issue", "TAG", "TAG", "TAG", "TAG", "Motivation", "and", "Context", "TAG", "How", "Has", "This", "Been", "Tested", "TAG", "TAG", "TAG", "Types", "of", "change", "TAG", "x", "Docs", "change", "refactoring", "dependency", "upgrade", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "x", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "x", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "x", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "x", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "x", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "beda", "NUMBER", "a", "NUMBER", "ff", "src", "pr", "el", "desc", "will", "increase", "coverage", "by", "TAG", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "TAG", "\u00f8", "arrow_up", "sheetpr", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "c", "NUMBER", "hlZXRwci", "NUMBER", "nbw", "NUMBER", "TAG", "\u00f8", "arrow_up", "sheet", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "c", "NUMBER", "hlZXQuZ", "NUMBER", "NUMBER", "TAG", "NUMBER", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "f", "NUMBER", "e", "NUMBER", "de", "NUMBER", "a", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "Hi", "I", "m", "t", "he", "original", "author", "of", "tealeg", "xlsx", "NUMBER", "The", "BSD", "NUMBER", "clause", "license", "be", "pretty", "lenient", "but", "it", "do", "require", "you", "to", "reproduce", "my", "copyright", "statement", "when", "use", "my", "code", "NUMBER", "I", "know", "you", "openly", "state", "that", "you", "use", "some", "of", "my", "code", "so", "there", "s", "no", "ill", "intent", "and", "really", "I", "think", "what", "you", "ve", "do", "it", "awesome", "but", "you", "re", "actually", "required", "to", "include", "my", "copyright", "statement", "alongside", "yours", "in", "the", "license", "NUMBER", "Thanks", "xuri", "NUMBER", "Description", "I", "be", "trying", "to", "create", "a", "chart", "on", "excel", "sheet", "use", "AddChart", "function", "NUMBER", "I", "executed", "the", "code", "successfully", "and", "It", "returned", "me", "the", "file", "as", "I", "be", "expecting", "it", "to", "be", "NUMBER", "But", "when", "before", "saving", "the", "file", "I", "want", "to", "rename", "the", "sheet", "name", "use", "xlsx", "NUMBER", "SetSheetName", "Sheet", "NUMBER", "New", "Name", "It", "creates", "a", "file", "with", "empty", "chart", "NUMBER", "TAG", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "Write", "following", "code", "and", "check", "the", "output", "it", "will", "return", "the", "correct", "chart", "with", "Graph", "NUMBER", "package", "main", "import", "fmt", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "categories", "map", "string", "string", "A", "NUMBER", "datum", "A", "NUMBER", "NUMBER", "Nov", "NUMBER", "A", "NUMBER", "NUMBER", "Nov", "NUMBER", "A", "NUMBER", "NUMBER", "Nov", "NUMBER", "A", "NUMBER", "NUMBER", "Nov", "NUMBER", "A", "NUMBER", "NUMBER", "Nov", "NUMBER", "A", "NUMBER", "NUMBER", "Nov", "NUMBER", "D", "NUMBER", "score", "totaal", "h", "values", "map", "string", "float", "NUMBER", "D", "NUMBER", "NUMBER", "D", "NUMBER", "NUMBER", "D", "NUMBER", "NUMBER", "D", "NUMBER", "NUMBER", "D", "NUMBER", "NUMBER", "D", "NUMBER", "NUMBER", "xlsx", "excelize", "NUMBER", "NewFile", "for", "k", "v", "range", "categories", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "k", "v", "for", "k", "v", "range", "values", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "k", "v", "xlsx", "NUMBER", "AddChart", "Sheet", "NUMBER", "B", "NUMBER", "type", "line", "dimension", "width", "NUMBER", "height", "NUMBER", "series", "name", "Sheet", "NUMBER", "D", "NUMBER", "categories", "Sheet", "NUMBER", "A", "NUMBER", "A", "NUMBER", "values", "Sheet", "NUMBER", "D", "NUMBER", "D", "NUMBER", "format", "x_scale", "NUMBER", "y_scale", "NUMBER", "x_offset", "NUMBER", "y_offset", "NUMBER", "print_obj", "true", "lock_aspect_ratio", "false", "locked", "false", "legend", "position", "bottom", "show_legend_key", "false", "title", "name", "Fruit", "NUMBER", "D", "Clustered", "Column", "Chart", "plotarea", "show_bubble_size", "true", "show_cat_name", "false", "show_leader_lines", "true", "show_percent", "true", "show_series_name", "true", "show_val", "true", "show_blanks_as", "zero", "x_axis", "reverse_order", "false", "y_axis", "maximum", "NUMBER", "minimum", "NUMBER", "Save", "xlsx", "file", "by", "the", "given", "path", "NUMBER", "err", "xlsx", "NUMBER", "SaveAs", "NUMBER", "Book", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "NUMBER", "Add", "the", "following", "line", "before", "saving", "the", "file", "xlsx", "NUMBER", "SetSheetName", "Sheet", "NUMBER", "customsheetname", "and", "it", "will", "save", "the", "file", "with", "empty", "chart", "NUMBER", "Output", "of", "go", "version", "go", "version", "go", "NUMBER", "linux", "amd", "NUMBER", "Excelize", "version", "or", "commit", "ID", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "da", "NUMBER", "c", "NUMBER", "fca", "NUMBER", "afe", "NUMBER", "b", "NUMBER", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "Distributor", "ID", "Ubuntu", "Description", "Ubuntu", "NUMBER", "LTS", "Release", "NUMBER", "Codename", "xenial", "bharatsewani", "NUMBER", "xuri", "I", "investigated", "this", "issue", "and", "find", "mistake", "in", "code", "for", "add", "chart", "NUMBER", "When", "you", "add", "chart", "you", "set", "values", "with", "sheet", "name", "xlsx", "NUMBER", "AddChart", "Sheet", "NUMBER", "B", "NUMBER", "type", "line", "dimension", "NUMBER", "series", "name", "Sheet", "NUMBER", "D", "NUMBER", "TAG", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "da", "NUMBER", "c", "NUMBER", "fca", "NUMBER", "afe", "NUMBER", "b", "NUMBER", "src", "pr", "el", "desc", "will", "decrease", "coverage", "by", "NUMBER", "NUMBER", "The", "diff", "coverage", "be", "n", "a", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "file", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "ZmlsZS", "NUMBER", "nbw", "NUMBER", "TAG", "NUMBER", "arrow_down", "cell", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "Y", "NUMBER", "VsbC", "NUMBER", "nbw", "NUMBER", "TAG", "NUMBER", "arrow_down", "rows", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "cm", "NUMBER", "cy", "NUMBER", "nbw", "NUMBER", "TAG", "NUMBER", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "ed", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "PR", "Details", "This", "PR", "fix", "the", "issue", "NUMBER", "Description", "It", "checks", "if", "there", "s", "N", "defined", "by", "the", "user", "empty", "lines", "in", "sequence", "in", "the", "sheet", "and", "if", "so", "it", "stops", "the", "GetRows", "function", "NUMBER", "I", "also", "had", "a", "more", "than", "NUMBER", "million", "empty", "lines", "sheet", "NUMBER", "How", "Has", "This", "Been", "Tested", "It", "was", "created", "a", "unit", "test", "that", "covers", "all", "code", "created", "NUMBER", "The", "overall", "coverage", "of", "the", "project", "still", "roughly", "the", "same", "and", "it", "s", "all", "passing", "NUMBER", "It", "was", "also", "made", "many", "api", "test", "in", "an", "in", "house", "project", "with", "different", "file", "NUMBER", "A", "simple", "file", "created", "by", "hand", "with", "few", "rows", "and", "with", "a", "large", "file", "NUMBER", "k", "rows", "from", "a", "real", "client", "NUMBER", "Types", "of", "change", "Docs", "change", "refactoring", "dependency", "upgrade", "X", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "X", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "X", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "X", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "X", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "X", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "X", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "da", "NUMBER", "c", "NUMBER", "fca", "NUMBER", "afe", "NUMBER", "b", "NUMBER", "src", "pr", "el", "desc", "will", "increase", "coverage", "by", "NUMBER", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "excelize", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "ZXhjZWxpemUuZ", "NUMBER", "NUMBER", "TAG", "\u00f8", "arrow_up", "lib", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "bGliLmdv", "NUMBER", "TAG", "\u00f8", "arrow_up", "picture", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "cGljdHVyZS", "NUMBER", "nbw", "NUMBER", "TAG", "\u00f8", "arrow_up", "styles", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "c", "NUMBER", "R", "NUMBER", "bGVzLmdv", "NUMBER", "TAG", "\u00f8", "arrow_up", "file", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "ZmlsZS", "NUMBER", "nbw", "NUMBER", "TAG", "\u00f8", "arrow_up", "chart", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "Y", "NUMBER", "hhcnQuZ", "NUMBER", "NUMBER", "TAG", "\u00f8", "arrow_up", "table", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "dGFibGUuZ", "NUMBER", "NUMBER", "TAG", "\u00f8", "arrow_up", "sheet", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "c", "NUMBER", "hlZXQuZ", "NUMBER", "NUMBER", "TAG", "\u00f8", "arrow_up", "cell", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "Y", "NUMBER", "VsbC", "NUMBER", "nbw", "NUMBER", "TAG", "\u00f8", "arrow_up", "datavalidation", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "ZGF", "NUMBER", "YXZhbGlkYXRpb", "NUMBER", "uZ", "NUMBER", "NUMBER", "TAG", "\u00f8", "arrow_up", "NUMBER", "and", "NUMBER", "more", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "more", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "dc", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "I", "must", "generate", "xlsx", "file", "which", "have", "more", "than", "ten", "columns", "and", "the", "page", "should", "be", "set", "as", "landscape", "to", "hold", "all", "the", "columns", "NUMBER", "I", "search", "your", "source", "and", "all", "issue", "to", "figure", "out", "how", "to", "make", "it", "but", "fail", "NUMBER", "I", "be", "wondering", "if", "you", "guys", "can", "provide", "a", "way", "out", "NUMBER", "Thanks", "NUMBER", "Hi", "xuri", "I", "be", "wondering", "when", "you", "could", "add", "the", "page", "orientation", "setup", "NUMBER", "\u5750\u7b49", "xuri", "It", "just", "works", "NUMBER", "Thank", "u", "guys", "NUMBER", "PR", "Details", "File", "NUMBER", "DuplicateRow", "sheet", "row", "method", "add", "Description", "File", "NUMBER", "DuplicateRow", "sheet", "row", "method", "add", "it", "be", "similar", "to", "File", "NUMBER", "InsertRow", "sheet", "row", "but", "copies", "specified", "row", "values", "and", "styles", "NUMBER", "Just", "like", "copy", "paste", "in", "Excel", "NUMBER", "Also", "subpart", "of", "code", "of", "File", "NUMBER", "adjustRowDimensions", "method", "was", "extracted", "to", "separate", "method", "File", "NUMBER", "ajustSingleRowDimensions", "and", "was", "reused", "in", "DuplicateRow", "Related", "Issue", "LINK", "Skylar", "excelize", "issue", "NUMBER", "Motivation", "and", "Context", "Motivation", "already", "describe", "by", "another", "people", "in", "issue", "LINK", "Skylar", "excelize", "issue", "NUMBER", "This", "enchantment", "required", "to", "use", "pre", "created", "xlsx", "file", "as", "template", "NUMBER", "How", "Has", "This", "Been", "Tested", "Related", "unit", "test", "add", "LINK", "Skylar", "excelize", "compare", "master", "NUMBER", "albenik", "duplicate_row", "expand", "NUMBER", "diff", "bd", "NUMBER", "fa", "NUMBER", "f", "NUMBER", "b", "NUMBER", "b", "NUMBER", "ab", "NUMBER", "d", "NUMBER", "fa", "NUMBER", "cR", "NUMBER", "with", "subtests", "github", "NUMBER", "com", "stretchr", "testify", "import", "introduce", "in", "test", "file", "but", "this", "dependency", "where", "already", "preset", "as", "dependency", "in", "project", "NUMBER", "Just", "run", "G", "NUMBER", "MODULE", "on", "go", "mod", "tidy", "on", "master", "branch", "Types", "of", "change", "x", "Docs", "change", "refactoring", "dependency", "upgrade", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "x", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "x", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "But", "only", "autogenerated", "docs", "same", "as", "for", "InsertRow", "which", "not", "manually", "documented", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "x", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "x", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "dfc", "NUMBER", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "cb", "NUMBER", "d", "NUMBER", "b", "src", "pr", "el", "desc", "will", "decrease", "coverage", "by", "NUMBER", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "excelize", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "ZXhjZWxpemUuZ", "NUMBER", "NUMBER", "TAG", "NUMBER", "arrow_down", "rows", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "cm", "NUMBER", "cy", "NUMBER", "nbw", "NUMBER", "TAG", "NUMBER", "arrow_down", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "Add", "a", "regular", "expression", "to", "the", "search", "method", "Since", "the", "return", "value", "be", "returned", "by", "MAP", "it", "be", "convenient", "when", "you", "want", "to", "search", "by", "regular", "expression", "and", "obtain", "multiple", "cell", "coordinates", "PS", "I", "be", "use", "translation", "I", "m", "sorry", "in", "dirty", "English", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "dfc", "NUMBER", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "cb", "NUMBER", "d", "NUMBER", "b", "src", "pr", "el", "desc", "will", "decrease", "coverage", "by", "NUMBER", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "sheet", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "c", "NUMBER", "hlZXQuZ", "NUMBER", "NUMBER", "TAG", "NUMBER", "arrow_down", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "b", "NUMBER", "c", "NUMBER", "db", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "dfc", "NUMBER", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "cb", "NUMBER", "d", "NUMBER", "b", "src", "pr", "el", "desc", "will", "decrease", "coverage", "by", "NUMBER", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "sheet", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "c", "NUMBER", "hlZXQuZ", "NUMBER", "NUMBER", "TAG", "NUMBER", "arrow_down", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "b", "NUMBER", "c", "NUMBER", "fba", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "PR", "Details", "RegSearchSheet", "sheet", "value", "string", "method", "add", "Description", "RegSearchSheet", "sheet", "value", "string", "Method", "add", "It", "be", "similar", "to", "SearchSheet", "sheet", "value", "string", "but", "uses", "regular", "expressions", "for", "the", "search", "NUMBER", "Returns", "a", "cell", "that", "matches", "a", "regular", "expression", "Related", "Issue", "Motivation", "and", "Context", "It", "be", "necessary", "to", "describe", "a", "certain", "tag", "in", "the", "Excel", "file", "and", "to", "identify", "and", "change", "the", "content", "from", "the", "program", "for", "example", "you", "can", "get", "the", "cell", "marked", "as", "tag", "thisPrice", "Replace", "with", "variable", "values", "I", "implement", "it", "for", "that", "How", "Has", "This", "Been", "Tested", "LINK", "Skylar", "excelize", "pull", "NUMBER", "commit", "NUMBER", "fba", "NUMBER", "b", "NUMBER", "cee", "NUMBER", "dcb", "NUMBER", "b", "NUMBER", "f", "NUMBER", "dc", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "We", "add", "unit", "test", "as", "well", "as", "exist", "methods", "Types", "of", "change", "x", "Docs", "change", "refactoring", "dependency", "upgrade", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "x", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "x", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "x", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "x", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "x", "All", "new", "and", "exist", "test", "pass", "NUMBER", "I", "did", "not", "grasp", "accurately", "I", "be", "sorry", "I", "sent", "the", "change", "as", "describe", "above", "I", "be", "pleased", "if", "you", "can", "confirm", "Thank", "you", "for", "taking", "care", "of", "polite", "PR", "Details", "Closes", "LINK", "Skylar", "excelize", "issue", "NUMBER", "TAG", "Description", "Currently", "there", "be", "no", "way", "to", "get", "all", "merge", "cells", "from", "a", "worksheet", "currently", "so", "add", "the", "function", "to", "do", "it", "NUMBER", "TAG", "Related", "Issue", "LINK", "Skylar", "excelize", "issue", "NUMBER", "LINK", "Skylar", "excelize", "issue", "NUMBER", "TAG", "TAG", "TAG", "TAG", "Motivation", "and", "Context", "I", "want", "to", "get", "merge", "cell", "axis", "from", "the", "sheet", "but", "there", "be", "no", "way", "NUMBER", "TAG", "How", "Has", "This", "Been", "Tested", "Added", "excel", "file", "which", "contains", "merge", "cells", "and", "executed", "the", "new", "unit", "test", "with", "it", "NUMBER", "TAG", "TAG", "TAG", "Types", "of", "change", "TAG", "Docs", "change", "refactoring", "dependency", "upgrade", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "x", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "x", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "x", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "x", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "x", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "bd", "NUMBER", "fab", "NUMBER", "ce", "NUMBER", "a", "NUMBER", "d", "NUMBER", "d", "NUMBER", "a", "NUMBER", "bb", "NUMBER", "b", "NUMBER", "b", "NUMBER", "src", "pr", "el", "desc", "will", "increase", "coverage", "by", "TAG", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "TAG", "NUMBER", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "bd", "NUMBER", "df", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "Thank", "you", "for", "your", "merge", "Description", "Is", "there", "any", "way", "to", "get", "MergeCells", "as", "below", "If", "not", "I", "will", "PR", "NUMBER", "xlsx", "err", "OpenFile", "NUMBER", "test", "Book", "NUMBER", "xlsx", "if", "err", "nil", "t", "NUMBER", "Error", "err", "xlsx", "NUMBER", "MergeCell", "Sheet", "NUMBER", "D", "NUMBER", "E", "NUMBER", "mergeCells", "xlsx", "NUMBER", "GetMergeCells", "Sheet", "NUMBER", "New", "Feature", "for", "_", "m", "range", "mergeCells", "fmt", "NUMBER", "Println", "m", "NUMBER", "Start", "output", "D", "NUMBER", "fmt", "NUMBER", "Println", "m", "NUMBER", "End", "output", "E", "NUMBER", "xuri", "Thanks", "NUMBER", "You", "mean", "that", "coordinate", "of", "merge", "cells", "be", "the", "string", "value", "like", "D", "NUMBER", "or", "E", "NUMBER", "Understood", "thanks", "I", "will", "start", "work", "NUMBER", "I", "have", "undefined", "excelize", "NUMBER", "TopLeftCell", "error", "message", "xlsx", "NUMBER", "SetSheetViewOptions", "Sheet", "NUMBER", "NUMBER", "excelize", "NUMBER", "SheetViewOption", "excelize", "NUMBER", "TopLeftCell", "A", "NUMBER", "When", "ZoomScale", "work", "correctly", "xlsx", "NUMBER", "SetSheetViewOptions", "Sheet", "NUMBER", "NUMBER", "excelize", "NUMBER", "SheetViewOption", "excelize", "NUMBER", "ZoomScale", "NUMBER", "go", "version", "go", "NUMBER", "windows", "amd", "NUMBER", "TAG", "The", "example", "do", "not", "work", "again", "in", "NUMBER", "Description", "TAG", "undefined", "excelize", "NUMBER", "createfile", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "NUMBER", "NUMBER", "Describe", "the", "results", "you", "received", "Describe", "the", "results", "you", "expected", "Output", "of", "go", "version", "text", "paste", "your", "output", "here", "Excelize", "version", "or", "commit", "ID", "text", "paste", "here", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "Description", "When", "you", "delete", "a", "sheet", "then", "create", "a", "new", "one", "and", "then", "delete", "again", "there", "be", "an", "out", "of", "index", "error", "Steps", "to", "reproduce", "the", "issue", "func", "main", "xlsx", "excelize", "NUMBER", "NewFile", "Create", "a", "new", "sheet", "NUMBER", "xlsx", "NUMBER", "NewSheet", "Sheet", "NUMBER", "xlsx", "NUMBER", "NewSheet", "Sheet", "NUMBER", "xlsx", "NUMBER", "NewSheet", "Sheet", "NUMBER", "fmt", "NUMBER", "Println", "init", "xlsx", "NUMBER", "GetSheetMap", "xlsx", "NUMBER", "DeleteSheet", "Sheet", "NUMBER", "fmt", "NUMBER", "Println", "delete", "xlsx", "NUMBER", "GetSheetMap", "xlsx", "NUMBER", "NewSheet", "Sheet", "NUMBER", "fmt", "NUMBER", "Println", "new", "xlsx", "NUMBER", "GetSheetMap", "xlsx", "NUMBER", "DeleteSheet", "Sheet", "NUMBER", "fmt", "NUMBER", "Println", "delete", "xlsx", "NUMBER", "GetSheetMap", "err", "xlsx", "NUMBER", "SaveAs", "NUMBER", "Book", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "Describe", "the", "results", "you", "received", "go", "run", "main", "NUMBER", "go", "init", "map", "NUMBER", "Sheet", "NUMBER", "NUMBER", "Sheet", "NUMBER", "NUMBER", "Sheet", "NUMBER", "NUMBER", "Sheet", "NUMBER", "delete", "map", "NUMBER", "Sheet", "NUMBER", "NUMBER", "Sheet", "NUMBER", "NUMBER", "Sheet", "NUMBER", "new", "map", "NUMBER", "Sheet", "NUMBER", "NUMBER", "Sheet", "NUMBER", "NUMBER", "Sheet", "NUMBER", "panic", "runtime", "error", "slice", "bounds", "out", "of", "range", "goroutine", "NUMBER", "run", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "File", "NUMBER", "deleteSheetFromContentTypes", "NUMBER", "xc", "NUMBER", "a", "NUMBER", "NUMBER", "xc", "NUMBER", "cde", "NUMBER", "NUMBER", "x", "NUMBER", "C", "Users", "xx", "go", "pkg", "mod", "github", "NUMBER", "com", "NUMBER", "ent", "sec", "group", "skylar", "excelize", "v", "NUMBER", "sheet", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "cd", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "File", "NUMBER", "DeleteSheet", "NUMBER", "xc", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "a", "NUMBER", "ea", "NUMBER", "x", "NUMBER", "C", "Users", "xx", "go", "pkg", "mod", "github", "NUMBER", "com", "NUMBER", "ent", "sec", "group", "skylar", "excelize", "v", "NUMBER", "sheet", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "b", "main", "NUMBER", "main", "C", "data", "main", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "exit", "status", "NUMBER", "Describe", "the", "results", "you", "expected", "To", "not", "have", "an", "error", "Output", "of", "go", "version", "text", "go", "version", "go", "NUMBER", "windows", "amd", "NUMBER", "Hi", "xuri", "thanks", "for", "your", "quick", "fix", "NUMBER", "Just", "test", "the", "latest", "version", "and", "works", "perfectly", "Closes", "NUMBER", "PR", "Details", "TAG", "This", "allows", "setting", "a", "sheet", "PR", "to", "show", "outline", "summary", "expand", "boxes", "above", "instead", "of", "below", "NUMBER", "Description", "TAG", "Added", "a", "new", "sheet", "pr", "type", "OutlineSummaryBelow", "and", "add", "that", "to", "the", "sheet", "serialization", "NUMBER", "Updated", "the", "respective", "test", "NUMBER", "Related", "Issue", "NUMBER", "TAG", "TAG", "TAG", "TAG", "Motivation", "and", "Context", "TAG", "My", "users", "think", "the", "summary", "groupers", "look", "better", "this", "way", "NUMBER", "How", "Has", "This", "Been", "Tested", "I", "generate", "an", "excel", "document", "with", "nested", "summary", "levels", "and", "verify", "that", "the", "groupers", "appeared", "above", "instead", "of", "below", "NUMBER", "I", "also", "update", "unit", "test", "NUMBER", "TAG", "TAG", "TAG", "Types", "of", "change", "TAG", "x", "Docs", "change", "refactoring", "dependency", "upgrade", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "x", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "x", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "x", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "x", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "x", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "e", "NUMBER", "f", "NUMBER", "bb", "NUMBER", "eb", "NUMBER", "ee", "NUMBER", "b", "NUMBER", "ae", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "src", "pr", "el", "desc", "will", "increase", "coverage", "by", "TAG", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "TAG", "\u00f8", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "e", "NUMBER", "faa", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "Now", "that", "the", "test", "be", "passing", "I", "squashed", "the", "commit", "add", "some", "more", "details", "and", "sign", "it", "NUMBER", "PR", "Details", "TAG", "Migration", "to", "go", "module", "NUMBER", "LINK", "Skylar", "excelize", "issue", "NUMBER", "Description", "TAG", "I", "add", "a", "go", "NUMBER", "mod", "file", "for", "migration", "to", "go", "module", "NUMBER", "As", "the", "project", "be", "not", "use", "any", "third", "party", "library", "it", "should", "be", "sufficient", "for", "the", "migration", "NUMBER", "Related", "Issue", "LINK", "Skylar", "excelize", "issue", "NUMBER", "TAG", "TAG", "TAG", "TAG", "Motivation", "and", "Context", "As", "I", "be", "build", "a", "project", "in", "go", "module", "and", "excelize", "be", "use", "I", "have", "to", "fork", "the", "library", "for", "it", "to", "work", "NUMBER", "I", "hope", "I", "can", "go", "back", "use", "the", "official", "one", "asap", "NUMBER", "TAG", "Types", "of", "change", "TAG", "x", "Docs", "change", "refactoring", "dependency", "upgrade", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "x", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "e", "NUMBER", "f", "NUMBER", "bb", "NUMBER", "eb", "NUMBER", "ee", "NUMBER", "b", "NUMBER", "ae", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "src", "pr", "el", "desc", "will", "not", "change", "coverage", "NUMBER", "The", "diff", "coverage", "be", "n", "a", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "Description", "Migrate", "excelize", "to", "go", "module", "as", "go", "NUMBER", "be", "out", "NUMBER", "Go", "project", "use", "go", "modules", "right", "now", "cannot", "use", "this", "project", "as", "go", "NUMBER", "mod", "be", "lacking", "NUMBER", "This", "project", "be", "relatively", "easy", "to", "migrate", "to", "go", "module", "as", "it", "be", "not", "use", "third", "party", "library", "NUMBER", "I", "have", "made", "a", "pull", "request", "for", "it", "NUMBER", "Feel", "free", "to", "have", "a", "look", "at", "it", "NUMBER", "Thank", "you", "NUMBER", "How", "do", "you", "mark", "the", "header", "rows", "as", "header", "rows", "so", "that", "when", "you", "open", "the", "file", "in", "excel", "the", "sort", "filter", "features", "recognise", "which", "rows", "be", "the", "header", "rows", "To", "clarify", "I", "have", "since", "worked", "out", "that", "the", "XML", "that", "be", "output", "when", "you", "want", "to", "split", "the", "header", "rows", "use", "this", "library", "works", "in", "Excel", "but", "not", "in", "Apple", "s", "pages", "app", "NUMBER", "I", "ve", "not", "yet", "had", "time", "to", "dig", "around", "in", "the", "XML", "to", "work", "out", "why", "yet", "NUMBER", "I", "had", "assumed", "it", "did", "not", "work", "at", "all", "but", "then", "I", "discover", "that", "it", "did", "work", "when", "you", "use", "genuine", "excel", "I", "be", "trying", "to", "change", "the", "radioButton", "state", "by", "use", "xlsx", "NUMBER", "setCellValue", "in", "his", "linked", "cell", "but", "it", "show", "always", "NUMBER", "Code", "xlsx", "NUMBER", "SetCellValue", "test", "K", "NUMBER", "NUMBER", "Result", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "f", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "e", "NUMBER", "png", "The", "radio", "Buttons", "already", "exist", "in", "the", "excel", "file", "NUMBER", "I", "need", "to", "update", "the", "state", "NUMBER", "Thank", "you", "Change", "Id", "I", "NUMBER", "a", "NUMBER", "a", "NUMBER", "b", "NUMBER", "bd", "NUMBER", "cb", "NUMBER", "e", "NUMBER", "a", "NUMBER", "eaa", "NUMBER", "be", "PR", "Details", "TAG", "Description", "TAG", "Related", "Issue", "TAG", "TAG", "TAG", "TAG", "Motivation", "and", "Context", "TAG", "How", "Has", "This", "Been", "Tested", "TAG", "TAG", "TAG", "Types", "of", "change", "TAG", "Docs", "change", "refactoring", "dependency", "upgrade", "x", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "x", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "x", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "fc", "NUMBER", "d", "NUMBER", "a", "NUMBER", "fe", "NUMBER", "ed", "src", "pr", "el", "desc", "will", "increase", "coverage", "by", "TAG", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "TAG", "\u00f8", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "fc", "NUMBER", "bb", "NUMBER", "f", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "TAG", "Description", "TAG", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "\u904d\u5386\u4e00\u5f20\u56fe\u7247\u6240\u6709\u50cf\u7d20\u70b9\u989c\u8272\u586b\u5145\u8fdb\u5355\u5143\u683c", "for", "i", "NUMBER", "i", "TAG", "Description", "TAG", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "Using", "the", "example", "to", "export", "a", "xlsx", "file", "NUMBER", "Install", "Yozo", "office", "NUMBER", "Open", "the", "above", "file", "by", "Yozo", "Describe", "the", "results", "you", "received", "Showing", "wrong", "NUMBER", "Describe", "the", "results", "you", "expected", "Showing", "normally", "NUMBER", "Output", "of", "go", "version", "text", "go", "version", "go", "NUMBER", "linux", "amd", "NUMBER", "Excelize", "version", "or", "commit", "ID", "text", "NUMBER", "fc", "NUMBER", "d", "NUMBER", "a", "NUMBER", "fe", "NUMBER", "ed", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "OS", "deepin", "NUMBER", "Yozo", "office", "NUMBER", "ZH", "NUMBER", "S", "NUMBER", "I", "know", "thanks", "Thank", "you", "very", "much", "for", "the", "NUMBER", "technical", "team", "excelize", "be", "great", "NUMBER", "now", "I", "have", "a", "problem", "NUMBER", "I", "want", "to", "draw", "a", "pie", "chart", "in", "excelize", "NUMBER", "I", "tried", "all", "the", "ways", "but", "not", "yet", "NUMBER", "can", "you", "give", "me", "some", "example", "NUMBER", "inks", "i", "use", "xlsx", "NUMBER", "AddChart", "Sheet", "NUMBER", "E", "NUMBER", "type", "Pie", "series", "categories", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "values", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "title", "name", "oldandnewuserratio", "xuri", "yes", "it", "s", "greant", "thanks", "again", "Description", "I", "be", "trying", "to", "create", "an", "excel", "file", "with", "dropdown", "use", "excelize", "NUMBER", "At", "first", "I", "be", "trying", "to", "use", "validation", "NUMBER", "SetDropList", "data", "to", "create", "the", "dropdown", "but", "i", "realize", "that", "the", "data", "be", "too", "many", "and", "cause", "the", "excel", "file", "to", "be", "corrupted", "NUMBER", "So", "i", "decided", "to", "use", "validation", "NUMBER", "SetSqrefDropList", "sqrefDropList", "true", "set", "the", "data", "on", "other", "cells", "and", "hide", "the", "cell", "that", "contain", "the", "data", "use", "xlsx", "NUMBER", "SetRowVisible", "sheet", "hcell", "vcell", "false", "NUMBER", "But", "something", "strange", "happen", "NUMBER", "After", "open", "and", "saving", "the", "file", "the", "excel", "file", "now", "contain", "empty", "rows", "that", "can", "be", "read", "and", "cause", "an", "error", "in", "my", "program", "because", "there", "be", "an", "extra", "rows", "that", "be", "not", "hidden", "but", "contains", "empty", "value", "NUMBER", "TAG", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "Set", "a", "dropdown", "use", "validation", "NUMBER", "SetSqrefDropList", "sqrefDropList", "true", "NUMBER", "Hide", "the", "row", "that", "contain", "the", "data", "for", "dropdown", "go", "for", "index", "val", "range", "valSplit", "val", "strings", "NUMBER", "Replace", "val", "NUMBER", "file", "NUMBER", "SetCellValue", "sheetName", "NUMBER", "Slug", "collumnOption", "strconv", "NUMBER", "Itoa", "collumnRow", "index", "val", "file", "NUMBER", "SetRowVisible", "sheetName", "NUMBER", "Slug", "collumnRow", "NUMBER", "index", "false", "sqrefDropList", "fmt", "NUMBER", "Sprintf", "s", "d", "s", "d", "collumnOption", "collumnRow", "collumnOption", "collumnRow", "len", "valSplit", "NUMBER", "collumnRow", "len", "valSplit", "validation", "NUMBER", "SetSqrefDropList", "sqrefDropList", "true", "NUMBER", "Open", "the", "file", "use", "Microsft", "Excel", "and", "save", "it", "NUMBER", "NUMBER", "Check", "the", "XML", "of", "the", "sheet", "Describe", "the", "results", "you", "received", "Rows", "properly", "hidden", "and", "excel", "file", "not", "containing", "any", "extra", "empty", "rows", "xml", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "this", "row", "contain", "the", "data", "TAG", "TAG", "TAG", "TAG", "TAG", "Describe", "the", "results", "you", "expected", "Rows", "be", "hidden", "but", "there", "s", "an", "extra", "empty", "rows", "that", "can", "be", "read", "NUMBER", "xml", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "extra", "empty", "rows", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "Output", "of", "go", "version", "text", "go", "version", "go", "NUMBER", "linux", "amd", "NUMBER", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "text", "Microsoft", "Excel", "version", "NUMBER", "I", "really", "hope", "you", "can", "tell", "me", "what", "be", "the", "problem", "whether", "it", "be", "because", "of", "the", "excelize", "or", "not", "NUMBER", "Thank", "you", "NUMBER", "Hi", "xuri", "thank", "you", "for", "answering", "my", "question", "but", "i", "be", "still", "not", "sure", "about", "why", "the", "problem", "only", "happen", "when", "i", "tried", "to", "hide", "the", "rows", "NUMBER", "Can", "you", "elaborate", "me", "more", "about", "the", "possible", "cause", "of", "that", "because", "there", "s", "no", "extra", "cell", "add", "when", "i", "did", "not", "try", "to", "hide", "the", "cell", "NUMBER", "TAG", "Description", "I", "m", "generating", "an", "excel", "file", "with", "only", "NUMBER", "rows", "and", "NUMBER", "columns", "NUMBER", "Two", "columns", "have", "hyperlink", "which", "I", "set", "up", "as", "in", "docs", "said", "NUMBER", "The", "problem", "be", "that", "this", "task", "be", "taking", "so", "long", "almost", "NUMBER", "minutes", "NUMBER", "The", "problem", "be", "that", "If", "I", "remove", "the", "hyperlinks", "then", "everything", "work", "fine", "between", "NUMBER", "NUMBER", "seconds", "NUMBER", "Is", "there", "anyway", "that", "I", "can", "set", "hyperlinks", "withou", "the", "name", "or", "convert", "a", "range", "of", "rows", "to", "hyperlinks", "TAG", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "Loop", "NUMBER", "items", "NUMBER", "NUMBER", "Set", "rows", "values", "NUMBER", "NUMBER", "Set", "hyperlink", "row", "values", "NUMBER", "Describe", "the", "results", "you", "received", "NUMBER", "minutes", "of", "waiting", "for", "the", "excel", "file", "NUMBER", "Describe", "the", "results", "you", "expected", "Less", "time", "generating", "the", "excel", "NUMBER", "Output", "of", "go", "version", "go", "version", "go", "NUMBER", "windows", "amd", "NUMBER", "text", "paste", "your", "output", "here", "Excelize", "version", "or", "commit", "ID", "NUMBER", "text", "paste", "here", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "Maybe", "a", "temporary", "solution", "would", "it", "make", "sense", "to", "do", "the", "everything", "except", "hyperlink", "first", "and", "then", "generate", "hyperlink", "actually", "in", "Excel", "use", "the", "HYPERLINK", "function", "LINK", "us", "article", "hyperlink", "function", "NUMBER", "c", "NUMBER", "ce", "NUMBER", "c", "NUMBER", "ae", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "de", "NUMBER", "b", "NUMBER", "f", "NUMBER", "f", "Its", "not", "a", "good", "solution", "since", "there", "be", "more", "than", "NUMBER", "rows", "NUMBER", "I", "can", "t", "just", "write", "the", "links", "manually", "NUMBER", "For", "now", "Im", "just", "write", "those", "links", "as", "plain", "text", "you", "can", "generate", "the", "url", "and", "the", "name", "programmatically", "as", "helper", "columns", "and", "then", "simply", "pass", "them", "to", "the", "HYPERLINK", "and", "fill", "all", "the", "rows", "That", "probably", "only", "take", "a", "minute", "NUMBER", "So", "be", "this", "issue", "about", "the", "performance", "of", "the", "SetCellHyperlink", "LINK", "Skylar", "excelize", "File", "NUMBER", "SetCellHyperLink", "method", "Looks", "like", "a", "duplicate", "of", "NUMBER", "Yes", "be", "about", "the", "performance", "about", "that", "function", "TAG", "Description", "when", "I", "use", "the", "version", "higher", "v", "NUMBER", "to", "generate", "a", "XLSX", "file", "the", "onlyoffice", "will", "show", "the", "error", "A", "error", "accurred", "when", "open", "the", "file", "TAG", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "open", "a", "xlsx", "template", "file", "temp", "NUMBER", "xlsx", "NUMBER", "save", "as", "a", "new", "file", "data", "NUMBER", "xlsx", "NUMBER", "open", "it", "by", "onlyoffice", "web", "office", "server", "Describe", "the", "results", "you", "received", "Describe", "the", "results", "you", "expected", "Output", "of", "go", "version", "text", "paste", "your", "output", "here", "Excelize", "version", "or", "commit", "ID", "text", "paste", "here", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "When", "I", "copy", "the", "sheet", "the", "onlyoffice", "will", "open", "the", "file", "failure", "NUMBER", "I", "don", "t", "know", "why", "\u5f53\u6211\u590d\u5236\u5de5\u4f5c\u8868\u65f6", "onlyoffice\u5c06\u6253\u5f00\u6587\u4ef6\u5931\u8d25", "\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48", "\u60a8\u597d", "\u4f60\u7684\u95ee\u9898\u89e3\u51b3\u4e86\u5417", "\u6211\u4e5f\u9047\u5230\u4e86\u548c\u60a8\u4e00\u6837\u7684\u95ee\u9898", "\u964d\u5230", "NUMBER", "\u7248\u672c", "how", "to", "set", "date", "of", "struct", "into", "cell", "by", "SetCellValue", "or", "other", "way", "i", "dont", "konw", "how", "to", "do", "it", "NUMBER", "PR", "Details", "TAG", "Description", "TAG", "Related", "Issue", "TAG", "TAG", "TAG", "TAG", "Motivation", "and", "Context", "TAG", "How", "Has", "This", "Been", "Tested", "TAG", "TAG", "TAG", "Types", "of", "change", "TAG", "x", "Docs", "change", "refactoring", "dependency", "upgrade", "x", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "x", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "x", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "x", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "x", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "x", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "x", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "d", "NUMBER", "dc", "NUMBER", "b", "NUMBER", "c", "NUMBER", "af", "NUMBER", "febb", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "src", "pr", "el", "desc", "will", "increase", "coverage", "by", "NUMBER", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "lib", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "bGliLmdv", "NUMBER", "TAG", "NUMBER", "arrow_up", "sheet", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "c", "NUMBER", "hlZXQuZ", "NUMBER", "NUMBER", "TAG", "NUMBER", "arrow_down", "picture", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "cGljdHVyZS", "NUMBER", "nbw", "NUMBER", "TAG", "NUMBER", "arrow_up", "cell", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "Y", "NUMBER", "VsbC", "NUMBER", "nbw", "NUMBER", "TAG", "NUMBER", "arrow_up", "excelize", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "ZXhjZWxpemUuZ", "NUMBER", "NUMBER", "TAG", "NUMBER", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "d", "NUMBER", "ad", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "how", "to", "flush", "data", "to", "file", "partially", "I", "want", "to", "write", "NUMBER", "records", "into", "excel", "when", "i", "call", "SetCellValue", "i", "find", "the", "file", "size", "not", "rose", "until", "i", "call", "Save", "method", "the", "file", "size", "change", "NUMBER", "How", "can", "i", "flush", "the", "data", "to", "file", "when", "set", "the", "cell", "value", "Just", "call", "Save", "every", "time", "you", "want", "to", "flush", "NUMBER", "Else", "change", "only", "happen", "in", "the", "process", "memory", "NUMBER", "Just", "call", "Save", "every", "time", "you", "want", "to", "flush", "NUMBER", "Else", "change", "only", "happen", "in", "the", "process", "memory", "NUMBER", "Do", "you", "mean", "Save", "could", "keep", "appending", "new", "rows", "to", "the", "same", "file", "Hi", "conquer", "NUMBER", "I", "don", "t", "understand", "what", "you", "mean", "please", "describe", "it", "in", "detail", "NUMBER", "I", "have", "the", "same", "problem", "NUMBER", "If", "the", "file", "ends", "up", "get", "really", "big", "it", "would", "take", "up", "a", "lot", "of", "memory", "NUMBER", "Therefore", "we", "all", "want", "to", "be", "able", "to", "keep", "appending", "the", "generate", "xlsx", "rows", "to", "a", "file", "and", "free", "up", "the", "memory", "NUMBER", "Hi", "conquer", "NUMBER", "I", "don", "t", "understand", "what", "you", "mean", "please", "describe", "it", "in", "detail", "NUMBER", "I", "have", "the", "same", "problem", "NUMBER", "If", "the", "file", "ends", "up", "get", "really", "big", "it", "would", "take", "up", "a", "lot", "of", "memory", "NUMBER", "Therefore", "we", "all", "want", "to", "be", "able", "to", "keep", "appending", "the", "generate", "xlsx", "rows", "to", "a", "file", "and", "free", "up", "the", "memory", "NUMBER", "me", "too", "\u6211\u4e5f\u662f", "Description", "I", "m", "having", "trouble", "to", "parse", "a", "date", "in", "file", "do", "with", "LibreOffice", "NUMBER", "Here", "there", "be", "the", "file", "XLSX", "file", "LINK", "NUMBER", "W", "NUMBER", "btCsMKLSNeWGhEjuwwh", "NUMBER", "EFzpaE", "NUMBER", "AeU", "Steps", "to", "reproduce", "the", "issue", "xl", "err", "excelize", "NUMBER", "OpenFile", "testdata", "cheques", "NUMBER", "xlsx", "if", "err", "nil", "panic", "err", "hoja", "Hoja", "NUMBER", "style", "_", "xl", "NUMBER", "NewStyle", "number_format", "NUMBER", "xl", "NUMBER", "SetCellStyle", "hoja", "a", "NUMBER", "a", "NUMBER", "style", "xl", "NUMBER", "SetCellStyle", "hoja", "a", "NUMBER", "a", "NUMBER", "style", "date", "NUMBER", "xl", "NUMBER", "GetCellValue", "hoja", "a", "NUMBER", "date", "NUMBER", "xl", "NUMBER", "GetCellValue", "hoja", "a", "NUMBER", "fmt", "NUMBER", "Printf", "a", "NUMBER", "v", "na", "NUMBER", "v", "n", "date", "NUMBER", "date", "NUMBER", "Both", "dates", "A", "NUMBER", "and", "A", "NUMBER", "be", "type", "date", "NUMBER", "NUMBER", "Date", "in", "cell", "A", "NUMBER", "be", "copied", "from", "a", "date", "from", "an", "Excel", "file", "NUMBER", "Date", "in", "cell", "A", "NUMBER", "was", "typed", "directly", "with", "the", "keyboard", "Describe", "the", "results", "you", "received", "a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "The", "second", "one", "be", "read", "as", "a", "number", "NUMBER", "Describe", "the", "results", "you", "expected", "Output", "of", "go", "version", "text", "go", "version", "go", "NUMBER", "linux", "amd", "NUMBER", "Excelize", "version", "or", "commit", "ID", "text", "github", "NUMBER", "com", "xuri", "excelize", "v", "NUMBER", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "LibreOffice", "Versi\u00f3n", "NUMBER", "Id", "NUMBER", "de", "compilaci\u00f3n", "libreoffice", "NUMBER", "snap", "NUMBER", "Allow", "me", "to", "post", "this", "issue", "although", "it", "be", "not", "a", "bug", "report", "or", "feature", "request", "NUMBER", "I", "be", "the", "convenor", "of", "an", "ISO", "committe", "ISO", "IEC", "JTC", "NUMBER", "SC", "NUMBER", "WG", "NUMBER", "which", "maintains", "OOXML", "ISO", "IEC", "NUMBER", "NUMBER", "We", "be", "revising", "Open", "Packaging", "Conventions", "of", "OOXML", "ISO", "IEC", "NUMBER", "NUMBER", "very", "thoroughly", "NUMBER", "The", "biggest", "motivation", "for", "this", "revision", "be", "to", "address", "issue", "around", "part", "names", "references", "pack", "URIs", "base", "URIs", "resolution", "of", "relative", "references", "and", "non", "ASCII", "characters", "NUMBER", "We", "be", "aware", "that", "lack", "of", "clarity", "in", "the", "currently", "publish", "ISO", "IEC", "NUMBER", "NUMBER", "has", "cause", "interoperability", "problem", "NUMBER", "We", "hope", "that", "this", "revision", "helps", "imlementations", "including", "excelize", "and", "that", "it", "do", "not", "cause", "any", "troubles", "NUMBER", "But", "we", "be", "not", "NUMBER", "sure", "NUMBER", "We", "be", "thus", "very", "interested", "in", "feedbacks", "from", "you", "NUMBER", "We", "have", "a", "public", "review", "and", "an", "open", "teleconference", "NUMBER", "More", "about", "this", "see", "our", "wiki", "page", "LINK", "review", "of", "a", "work", "draft", "for", "the", "revision", "of", "ISO", "IEC", "NUMBER", "NUMBER", "Open", "Packaging", "Conventions", "NUMBER", "Thanks", "Regards", "Makoto", "ISO", "IEC", "JTC", "NUMBER", "SC", "NUMBER", "WG", "NUMBER", "convenor", "PR", "Details", "TAG", "Description", "TAG", "Related", "Issue", "TAG", "TAG", "TAG", "TAG", "Motivation", "and", "Context", "TAG", "How", "Has", "This", "Been", "Tested", "TAG", "TAG", "TAG", "Types", "of", "change", "TAG", "Docs", "change", "refactoring", "dependency", "upgrade", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "x", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "TAG", "TAG", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "x", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "x", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "x", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "bdd", "NUMBER", "f", "NUMBER", "e", "NUMBER", "fa", "NUMBER", "edd", "NUMBER", "db", "NUMBER", "src", "pr", "el", "desc", "will", "decrease", "coverage", "by", "NUMBER", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "sheet", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "c", "NUMBER", "hlZXQuZ", "NUMBER", "NUMBER", "TAG", "NUMBER", "arrow_down", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "bdd", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "\u8fd9\u4e2a\u6587\u4ef6", "\u5185\u90e8\u7684\u8868\u540d\u8bfb\u4e0d\u51fa\u6765", "\u662f\u4e0d\u662f\u5f88\u5947\u602a", "\u56e0\u4e3axml\u5728parse\u7684\u65f6\u5019\u5931\u8d25\u4e86", "\u4e34\u6e05", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "default", "NUMBER", "xlsx", "All", "the", "version", "of", "go", "can", "t", "read", "the", "sheetname", "of", "this", "file", "Good", "work", "Processing", "be", "very", "fast", "But", "when", "I", "tried", "to", "read", "this", "file", "another", "problem", "arises", "NUMBER", "The", "func", "GetRows", "return", "wrong", "code", "I", "checked", "this", "it", "like", "cause", "by", "the", "func", "sharedStringsReader", "in", "the", "NUMBER", "line", "of", "row", "NUMBER", "go", "byte", "ss", "maybe", "the", "end", "\u6309\u4e0b\u846b\u82a6\u8d77\u6765\u74e2", "\u8fd8\u662f\u6709\u70b9\u5c0f\u95ee\u9898", "ps", "I", "get", "another", "file", "which", "may", "cause", "the", "Memory", "leak", "NUMBER", "My", "computer", "get", "stuck", "when", "it", "read", "this", "file", "by", "excelize", "NUMBER", "Though", "I", "knew", "there", "was", "some", "useless", "form", "in", "this", "file", "that", "made", "it", "so", "big", "I", "can", "open", "it", "correctly", "by", "office", "NUMBER", "So", "I", "think", "this", "file", "should", "be", "treated", "as", "a", "normal", "document", "and", "the", "problem", "should", "be", "belongs", "to", "excelize", "NUMBER", "file", "\u534e\u6da6\u83cf\u6cfd", "NUMBER", "zip", "LINK", "Skylar", "excelize", "file", "NUMBER", "default", "NUMBER", "zip", "xuri", "xuri", "That", "explains", "a", "lot", "Thank", "you", "very", "much", "NUMBER", "PR", "Details", "export", "a", "new", "function", "that", "people", "can", "get", "byte", "NUMBER", "buffer", "with", "all", "of", "file", "content", "Description", "In", "some", "situation", "we", "have", "to", "save", "the", "excel", "to", "a", "cloud", "storage", "service", "such", "as", "the", "Ali", "OSS", "NUMBER", "Some", "of", "the", "SDK", "that", "be", "support", "by", "the", "cloud", "doesn", "t", "support", "write", "action", "NUMBER", "So", "we", "need", "to", "give", "it", "a", "reader", "that", "can", "read", "all", "of", "the", "excel", "file", "s", "content", "NUMBER", "Related", "Issue", "Motivation", "and", "Context", "How", "Has", "This", "Been", "Tested", "Types", "of", "change", "Docs", "change", "refactoring", "dependency", "upgrade", "Bug", "fix", "non", "breaking", "change", "which", "fix", "an", "issue", "x", "New", "feature", "non", "breaking", "change", "which", "add", "functionality", "Breaking", "change", "fix", "or", "feature", "that", "would", "cause", "exist", "functionality", "to", "change", "Checklist", "x", "My", "code", "follows", "the", "code", "style", "of", "this", "project", "NUMBER", "My", "change", "requires", "a", "change", "to", "the", "documentation", "NUMBER", "I", "have", "update", "the", "documentation", "accordingly", "NUMBER", "I", "have", "read", "the", "CONTRIBUTING", "document", "NUMBER", "I", "have", "add", "test", "to", "cover", "my", "change", "NUMBER", "All", "new", "and", "exist", "test", "pass", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "d", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "e", "NUMBER", "src", "pr", "el", "desc", "will", "increase", "coverage", "by", "TAG", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "TAG", "NUMBER", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "f", "NUMBER", "e", "NUMBER", "be", "NUMBER", "d", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "xuri", "already", "fix", "the", "review", "idea", "NUMBER", "Here", "s", "another", "question", "How", "to", "test", "std", "lib", "error", "such", "as", "go", "zw", "zip", "NUMBER", "NewWriter", "buf", "fi", "err", "zw", "NUMBER", "Create", "path", "xuri", "thx", "for", "the", "review", "that", "s", "a", "good", "idea", "NUMBER", "xuri", "down", "TAG", "Description", "When", "I", "tried", "to", "insert", "thousands", "of", "images", "into", "a", "xlsx", "file", "It", "was", "very", "slow", "NUMBER", "It", "took", "hundreds", "milliseconds", "per", "item", "NUMBER", "TAG", "Steps", "to", "reproduce", "the", "issue", "go", "package", "main", "import", "fmt", "_", "image", "jpeg", "log", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "xlsx", "excelize", "NUMBER", "NewFile", "for", "i", "NUMBER", "i", "TAG", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "ce", "NUMBER", "b", "NUMBER", "a", "NUMBER", "ac", "NUMBER", "f", "NUMBER", "cfef", "NUMBER", "aec", "NUMBER", "a", "NUMBER", "b", "NUMBER", "d", "NUMBER", "fdd", "src", "pr", "el", "desc", "will", "decrease", "coverage", "by", "NUMBER", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "datavalidation", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "ZGF", "NUMBER", "YXZhbGlkYXRpb", "NUMBER", "uZ", "NUMBER", "NUMBER", "TAG", "\u00f8", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "ce", "NUMBER", "b", "NUMBER", "a", "NUMBER", "ba", "NUMBER", "dc", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "What", "about", "the", "compatibility", "for", "NUMBER", "xls", "excel", "file", "which", "generate", "before", "MS", "excel", "NUMBER", "TAG", "Description", "TAG", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "NUMBER", "NUMBER", "Describe", "the", "results", "you", "received", "Describe", "the", "results", "you", "expected", "Output", "of", "go", "version", "text", "paste", "your", "output", "here", "Excelize", "version", "or", "commit", "ID", "text", "paste", "here", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "OK", "My", "target", "be", "to", "draw", "lines", "in", "xlsx", "but", "I", "don", "t", "know", "how", "to", "set", "line", "scale", "NUMBER", "qq", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "c", "NUMBER", "f", "NUMBER", "png", "xlsx", "NUMBER", "AddShape", "Sheet", "NUMBER", "G", "NUMBER", "type", "line", "scale", "NUMBER", "color", "line", "NUMBER", "F", "NUMBER", "fill", "NUMBER", "eb", "NUMBER", "ff", "width", "NUMBER", "height", "NUMBER", "not", "work", "TAG", "Description", "TAG", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "OpenFile", "NUMBER", "AddPicture", "NUMBER", "loss", "of", "the", "excel", "style", "bug", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ab", "NUMBER", "NUMBER", "af", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "ba", "dfd", "NUMBER", "afbc", "NUMBER", "png", "result", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "af", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "b", "NUMBER", "d", "NUMBER", "af", "NUMBER", "png", "Describe", "the", "results", "you", "received", "Describe", "the", "results", "you", "expected", "Output", "of", "go", "version", "text", "skipping", "unsupported", "element", "on", "Workbook", "LINK", "compatibility", "NUMBER", "AlternateContent", "unsupported", "relationship", "xl", "worksheets", "NUMBER", "printerSettings", "printerSettings", "NUMBER", "bin", "LINK", "unsupported", "relationship", "xl", "worksheets", "NUMBER", "printerSettings", "printerSettings", "NUMBER", "bin", "LINK", "unsupported", "relationship", "xl", "worksheets", "NUMBER", "printerSettings", "printerSettings", "NUMBER", "bin", "LINK", "Excelize", "version", "or", "commit", "ID", "text", "paste", "here", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "Win", "NUMBER", "Source", "code", "package", "Test", "import", "fmt", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "type", "Test", "struct", "Test", "string", "func", "obj", "Test", "Excel", "path", "string", "xlsx", "err", "excelize", "NUMBER", "OpenFile", "NUMBER", "Test", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "return", "err", "xlsx", "NUMBER", "AddPicture", "\u571f\u65b9", "A", "NUMBER", "NUMBER", "timg", "NUMBER", "jpg", "x_scale", "NUMBER", "y_scale", "NUMBER", "hyperlink", "Sheet", "NUMBER", "D", "NUMBER", "hyperlink_type", "Location", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "err", "xlsx", "NUMBER", "SaveAs", "path", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "Att", "Test", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "Test", "NUMBER", "xlsx", "timg", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "a", "NUMBER", "dbc", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "d", "NUMBER", "d", "NUMBER", "bf", "NUMBER", "d", "NUMBER", "jpg", "xuri", "Thank", "you", "go", "version", "go", "NUMBER", "windows", "amd", "NUMBER", "xuri", "It", "seems", "like", "The", "AddPicture", "function", "of", "excelize", "will", "loss", "the", "excel", "style", "under", "The", "SetValue", "function", "of", "baliance", "NUMBER", "com", "gooxml", "spreadsheet", "NUMBER", "Sheet", "\u571f\u65b9", "be", "the", "sheet", "in", "last", "Test", "NUMBER", "xlsx", "Test", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "Test", "NUMBER", "xlsx", "TAG", "Description", "Please", "refer", "the", "code", "below", "TAG", "Steps", "to", "reproduce", "the", "issue", "package", "main", "import", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "xlsx", "excelize", "NUMBER", "NewFile", "xlsx", "NUMBER", "SetRowHeight", "SHEET", "NUMBER", "NUMBER", "NUMBER", "xlsx", "NUMBER", "SetColWidth", "SHEET", "NUMBER", "A", "A", "NUMBER", "xlsx", "NUMBER", "SaveAs", "NUMBER", "Book", "NUMBER", "xlsx", "Describe", "the", "results", "you", "received", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "e", "NUMBER", "cf", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "a", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "png", "Describe", "the", "results", "you", "expected", "I", "expected", "it", "to", "be", "a", "NUMBER", "x", "NUMBER", "cell", "Output", "of", "go", "version", "text", "go", "version", "go", "NUMBER", "darwin", "amd", "NUMBER", "Excelize", "version", "or", "commit", "ID", "text", "projects", "name", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "package", "NUMBER", "revision", "eb", "NUMBER", "d", "NUMBER", "c", "NUMBER", "ce", "NUMBER", "efbba", "NUMBER", "c", "NUMBER", "b", "NUMBER", "d", "version", "v", "NUMBER", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "mac", "os", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "aa", "NUMBER", "cf", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "ac", "NUMBER", "a", "NUMBER", "d", "NUMBER", "png", "Thank", "you", "for", "your", "reply", "NUMBER", "I", "ve", "tried", "the", "code", "below", "go", "xlsx", "NUMBER", "SetRowHeight", "SHEET", "NUMBER", "NUMBER", "NUMBER", "get", "NUMBER", "inch", "height", "row", "xlsx", "NUMBER", "SetColWidth", "SHEET", "NUMBER", "A", "A", "NUMBER", "get", "NUMBER", "inch", "width", "column", "May", "I", "ask", "why", "it", "be", "NUMBER", "Hi", "has", "this", "library", "include", "the", "features", "above", "set", "clear", "print", "area", "and", "export", "to", "pdf", "format", "Thank", "you", "NUMBER", "thanks", "for", "the", "info", "NUMBER", "The", "cell", "color", "how", "to", "set", "Can", "give", "a", "simple", "example", "xuri", "how", "to", "update", "style", "instead", "of", "replace", "For", "example", "i", "have", "cell", "with", "borders", "and", "i", "want", "to", "fill", "it", "by", "color", "NUMBER", "With", "xlsx", "NUMBER", "NewStyle", "xlsx", "NUMBER", "SetCellStyle", "border", "styles", "be", "lost", "NUMBER", "l", "NUMBER", "a", "have", "you", "find", "the", "solution", "chachora", "switched", "to", "gooxml", "because", "there", "be", "no", "support", "Fixes", "NUMBER", "Please", "let", "me", "know", "if", "there", "s", "another", "preferred", "approach", "for", "these", "additional", "unit", "test", "NUMBER", "I", "needed", "to", "access", "internal", "methods", "and", "structs", "to", "write", "the", "test", "the", "way", "I", "have", "but", "I", "did", "not", "readily", "see", "another", "approach", "in", "exist", "test", "NUMBER", "I", "have", "maintained", "exist", "behavior", "if", "mid_value", "max_value", "or", "min_value", "be", "omitted", "but", "these", "change", "could", "impact", "any", "exist", "code", "where", "these", "values", "were", "provide", "in", "format", "strings", "as", "they", "previously", "had", "no", "effect", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "a", "NUMBER", "ee", "NUMBER", "bec", "NUMBER", "d", "NUMBER", "d", "NUMBER", "a", "NUMBER", "aed", "NUMBER", "f", "NUMBER", "db", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "src", "pr", "el", "desc", "will", "increase", "coverage", "by", "TAG", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "height", "NUMBER", "src", "pr", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "TAG", "\u00f8", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "a", "NUMBER", "ee", "NUMBER", "db", "NUMBER", "a", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "Hi", "I", "m", "work", "with", "very", "large", "excel", "file", "and", "i", "would", "like", "to", "read", "specific", "columns", "only", "not", "all", "of", "them", "be", "there", "a", "workaround", "Sorry", "if", "this", "exists", "or", "was", "already", "request", "i", "search", "but", "find", "nothing", "NUMBER", "thanks", "I", "would", "like", "to", "know", "if", "this", "be", "possible", "as", "well", "NUMBER", "\u7528excelize\u6253\u5f00\u5b58\u5728\u7684", "xlsx\u6587\u4ef6", "\u91cc\u9762\u5df2\u7ecf\u5b58\u5728\u591a\u4e2aworksheet\u65f6", "\u518d\u6b21\u4f7f\u7528NewSheet\u51fd\u6570\u589e\u52a0\u65b0\u7684\u5de5\u4f5c\u8868\u662f", "xl", "workbook", "NUMBER", "xml\u539f\u6570\u636e\u4e2d\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5b58\u5728\u76f8\u540c\u7684sheetId", "\u6570\u503c", "\u4f8b\u5982", "\u65b0\u589eICT_DT_SRC\u540d\u79f0\u7684worksheet\u4e4b\u540e", "\u53d1\u73b0sheetId", "NUMBER", "\u7684\u5b58\u5728\u4e24\u4e2a", "Excel", "NUMBER", "\u6253\u5f00\u65f6\u63d0\u793a\u9519\u8bef", "\u867d\u7136\u53ef\u4ee5\u81ea\u52a8\u4fee\u590d", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "\u4ee3\u7801\u4e3autf", "NUMBER", "\u5b57\u7b26\u96c6", "\u9519\u8bef\u95ee\u9898\u91cd\u73b0\u6d4b\u8bd5\u4ee3\u7801", "package", "main", "import", "os", "fmt", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "\u8fd9\u4e2a\u6587\u4ef6\u5728\u4e0b\u9762\u7684\u6d4b\u8bd5\u6587\u4ef6\u4e2d", "\u662f\u7528Excel\u6253\u5f00\u65b0\u5efa\u591a\u4e2asheet\u4e4b\u540e\u5220\u9664\u4e4b\u540e\u518d\u65b0\u5efa", "\u8fbe\u5230\u6a21\u62dfsheetid\u88ab\u5360\u7528\u7684\u76ee\u7684", "exist_xlsx", "C", "Temp", "test", "NUMBER", "xlsx", "xlsx", "err", "excelize", "NUMBER", "OpenFile", "exist_xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "os", "NUMBER", "Exit", "NUMBER", "sheet_name", "\u65b0\u5efasheet", "index", "xlsx", "NUMBER", "NewSheet", "sheet_name", "fmt", "NUMBER", "Println", "fmt", "NUMBER", "Sprintf", "NEW", "SHEET", "ID", "d", "index", "sheets_info", "xlsx", "NUMBER", "GetSheetMap", "for", "s", "range", "sheets_info", "fmt", "NUMBER", "Println", "fmt", "NUMBER", "Sprintf", "d", "t", "s", "s", "sheets_info", "s", "xlsx", "NUMBER", "SetActiveSheet", "index", "for", "i", "NUMBER", "i", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "TAG", "test", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "test", "NUMBER", "xlsx", "test_bad", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "test_bad", "NUMBER", "xlsx", "\u6211\u7684\u6c34\u5e73\u6709\u9650", "\u4f46\u4fee\u6539\u4ee3\u7801\u4e4b\u540eExcel\u6253\u5f00\u6ca1\u6709\u62a5\u9519\u4e86", "FileName", "sheet", "NUMBER", "go", "setWorkbook", "update", "workbook", "property", "of", "XLSX", "NUMBER", "Maximum", "NUMBER", "characters", "be", "allow", "in", "sheet", "title", "NUMBER", "\u901a\u8fc7\u679a\u4e3e\u5b58\u5728\u7684\u5de5\u4f5c\u8868", "\u67e5\u627e\u5230\u6700\u5927\u7684SheetID", "\u7136\u540e\u65b0\u589e\u7684\u65f6\u5019SheetID", "NUMBER", "\u7684\u7ed3\u679c\u5e26\u5165\u65b0\u751f\u6210\u7684SheetID", "\u9632\u6b62workbook", "NUMBER", "xml\u7684SheetID\u51b2\u7a81", "\u8bf7\u5b98\u65b9\u7684\u5927\u795e\u6700\u4f73\u5316\u4ee3\u7801", "\u6211\u662f\u65b0\u624b", "func", "f", "File", "setWorkbook", "name", "string", "rid", "int", "content", "f", "NUMBER", "workbookReader", "max_sheetid", "NUMBER", "for", "c", "range", "content", "NUMBER", "Sheets", "NUMBER", "Sheet", "tmp_sheetid", "_", "strconv", "NUMBER", "Atoi", "content", "NUMBER", "Sheets", "NUMBER", "Sheet", "c", "NUMBER", "SheetID", "if", "max_sheetid", "TAG", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "cb", "NUMBER", "e", "NUMBER", "b", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "b", "NUMBER", "c", "NUMBER", "af", "NUMBER", "fa", "NUMBER", "e", "NUMBER", "b", "NUMBER", "src", "pr", "el", "desc", "will", "increase", "coverage", "by", "TAG", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "src", "pr", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "TAG", "\u00f8", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "cb", "NUMBER", "e", "NUMBER", "a", "NUMBER", "b", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "can", "you", "just", "squash", "it", "at", "the", "merge", "Cheers", "Radomirs", "Cirskis", "MCDBA", "MCAD", "C", "MCSD", "NUMBER", "NET", "C", "ZCE", "PHP", "NUMBER", "MCSD", "VB", "NUMBER", "NUMBER", "M", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "E", "RAD", "nowITworks", "NUMBER", "eu", "TAG", "image", "View", "my", "profile", "on", "LinkedIn", "TAG", "On", "Sun", "Jul", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "xuri", "TAG", "write", "Thanks", "for", "your", "PR", "could", "you", "squash", "the", "commit", "and", "refine", "the", "commit", "message", "you", "can", "copy", "the", "description", "of", "the", "PR", "to", "the", "squashed", "commit", "in", "this", "case", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "\u5173\u4e8e\u5355\u5143\u683c\u6587\u5b57\u6837\u5f0f", "\u5982\u4e00\u53e5\u8bdd\u5206\u6210\u4e0d\u540c\u7684\u989c\u8272\u5927\u5c0f\u5c55\u793a", "\u6211", "\u662f", "\u6d4b", "\u8bd5\u7684", "Is", "xlsxWorksheet", "NUMBER", "DataValidations", "NUMBER", "DataValidation", "not", "reserved", "for", "data", "validation", "Why", "type", "be", "string", "be", "not", "an", "array", "NUMBER", "Similar", "to", "the", "following", "structure", "golang", "type", "xlsxCellDataValidation", "struct", "AllowBlank", "string", "xml", "allowBlank", "attr", "allow", "empty", "ShowInputMessage", "string", "xml", "showInputMessage", "attr", "NUMBER", "true", "NUMBER", "false", "select", "cell", "Whether", "the", "input", "message", "be", "display", "ShowErrorMessage", "string", "xml", "showErrorMessage", "attr", "NUMBER", "true", "NUMBER", "false", "input", "error", "value", "Whether", "the", "error", "message", "be", "display", "ErrorStyle", "string", "xml", "errorStyle", "attr", "error", "icon", "style", "warning", "infomation", "stop", "ErrorTitle", "string", "xml", "errorTitle", "attr", "error", "title", "Operator", "string", "xml", "operator", "attr", "Error", "string", "xml", "error", "attr", "input", "error", "value", "notice", "message", "PromptTitle", "string", "xml", "promptTitle", "Prompt", "string", "xml", "prompt", "attr", "Type", "string", "xml", "type", "attr", "data", "type", "none", "custom", "date", "decimal", "list", "textLength", "time", "whole", "Sqref", "string", "xml", "sqref", "attr", "Validity", "of", "data", "validation", "rules", "cell", "and", "range", "eg", "A", "NUMBER", "OR", "A", "NUMBER", "A", "NUMBER", "Formula", "NUMBER", "string", "xml", "formula", "NUMBER", "data", "validation", "role", "Formula", "NUMBER", "string", "xml", "formula", "NUMBER", "data", "validation", "role", "I", "can", "understand", "that", "this", "field", "be", "not", "use", "now", "NUMBER", "Can", "I", "modify", "his", "type", "without", "regard", "to", "compatibility", "I", "see", "Golangs", "time", "NUMBER", "Duration", "uses", "nanoseconds", "thus", "it", "be", "limited", "to", "approximately", "NUMBER", "years", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "db", "NUMBER", "d", "NUMBER", "d", "NUMBER", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "aa", "NUMBER", "edd", "NUMBER", "cc", "NUMBER", "src", "pr", "el", "desc", "will", "increase", "coverage", "by", "TAG", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "height", "NUMBER", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "TAG", "\u00f8", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "db", "NUMBER", "d", "NUMBER", "c", "NUMBER", "e", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "Sorry", "NUMBER", "Done", "NUMBER", "TAG", "Description", "I", "m", "receiving", "NUMBER", "E", "NUMBER", "instead", "of", "of", "NUMBER", "Documentation", "Add", "information", "about", "return", "value", "of", "NewSheet", "Minor", "documentation", "language", "fix", "Samples", "Added", "sample", "go", "file", "for", "dumping", "a", "XLSX", "file", "to", "the", "console", "xuri", "The", "sample", "requires", "an", "input", "XLSX", "file", "NUMBER", "That", "s", "why", "it", "can", "t", "be", "run", "on", "godoc", "NUMBER", "Just", "wanted", "to", "give", "some", "feedback", "sorry", "if", "this", "be", "the", "wrong", "format", "NUMBER", "I", "be", "NOT", "a", "professional", "programmer", "by", "any", "means", "but", "I", "have", "two", "program", "NUMBER", "that", "works", "to", "query", "mysql", "in", "a", "way", "that", "be", "secure", "for", "my", "company", "and", "now", "it", "can", "excelize", "the", "data", "directly", "into", "excel", "spreadsheet", "NUMBER", "NUMBER", "TCP", "Port", "Scanner", "that", "accepts", "a", "list", "of", "NUMBER", "hosts", "now", "can", "excelize", "the", "data", "and", "provide", "a", "report", "in", "Excel", "NUMBER", "Excelize", "be", "well", "documented", "and", "was", "just", "easy", "to", "get", "work", "NUMBER", "Thanks", "We", "have", "the", "following", "tags", "in", "the", "repo", "v", "NUMBER", "NUMBER", "v", "NUMBER", "NUMBER", "This", "inconsistent", "naming", "be", "not", "helpful", "when", "upgrading", "dependencies", "references", "from", "an", "external", "project", "NUMBER", "I", "propose", "to", "use", "semver", "with", "a", "v", "prefix", "example", "v", "NUMBER", "as", "this", "be", "the", "direction", "that", "the", "Go", "community", "be", "taking", "with", "the", "VGO", "proposal", "NUMBER", "LINK", "import", "It", "looks", "like", "that", "tag", "v", "NUMBER", "has", "disappeared", "and", "no", "v", "NUMBER", "appeared", "NUMBER", "xuri", "Could", "you", "follow", "the", "established", "best", "pratices", "in", "Git", "commit", "message", "That", "would", "help", "external", "contributors", "to", "follow", "change", "happening", "NUMBER", "LINK", "commit", "Commit", "d", "NUMBER", "edc", "NUMBER", "e", "NUMBER", "ec", "NUMBER", "c", "NUMBER", "e", "NUMBER", "f", "NUMBER", "a", "NUMBER", "ad", "NUMBER", "breaks", "many", "rules", "many", "unrelated", "change", "in", "a", "single", "commit", "commit", "messge", "do", "not", "follow", "the", "standard", "format", "NUMBER", "summary", "line", "NUMBER", "empty", "line", "details", "In", "fact", "I", "just", "expect", "that", "the", "content", "of", "CONTRIBUTING", "NUMBER", "md", "to", "be", "followed", "by", "project", "maintainers", "NUMBER", "LINK", "Skylar", "excelize", "blob", "master", "CONTRIBUTING", "NUMBER", "md", "commit", "message", "Hey", "I", "do", "have", "an", "issue", "with", "a", "document", "NUMBER", "It", "do", "contain", "v", "this", "in", "sheets", "NUMBER", "xml", "NUMBER", "rels", "but", "it", "has", "no", "relationship", "for", "the", "comments", "d", "NUMBER", "xml", "xml", "TAG", "NUMBER", "I", "open", "this", "file", "with", "excelize", "it", "sets", "LegacyDrawing", "to", "this", "relationship", "for", "sheet", "NUMBER", "the", "sheet", "do", "not", "contain", "any", "comments", "yet", "NUMBER", "NUMBER", "I", "add", "a", "comment", "to", "sheet", "NUMBER", "cell", "doesn", "t", "matter", "NUMBER", "xl", "comments", "d", "NUMBER", "xml", "gets", "add", "to", "file", "list", "containing", "the", "correct", "data", "NUMBER", "since", "LegacyDrawing", "be", "already", "set", "the", "comments", "relationship", "be", "not", "add", "to", "the", "sheets", "relationships", "NUMBER", "I", "save", "the", "file", "to", "disk", "NUMBER", "As", "expected", "excel", "warns", "me", "about", "a", "corrupt", "file", "and", "that", "some", "comments", "could", "not", "be", "display", "NUMBER", "I", "guess", "there", "needs", "to", "be", "another", "check", "to", "see", "if", "relationships", "contains", "a", "valid", "reference", "to", "the", "a", "comments", "NUMBER", "xml", "for", "sheet", "x", "NUMBER", "Btw", "NUMBER", "the", "source", "file", "be", "not", "considered", "corrupt", "by", "excel", "NUMBER", "Libreoffice", "silently", "ignores", "the", "issue", "and", "the", "comments", "be", "miss", "there", "too", "NUMBER", "If", "you", "need", "more", "info", "please", "feel", "free", "to", "contact", "me", "NUMBER", "I", "was", "able", "to", "figure", "the", "exact", "issue", "out", "Somehow", "a", "file", "might", "contain", "a", "legacyDrawing", "relationship", "but", "be", "miss", "a", "comment", "relationship", "I", "could", "construct", "a", "similar", "file", "structure", "by", "hand", "that", "reproduces", "the", "issue", "NUMBER", "You", "cannot", "open", "and", "save", "this", "constructed", "example", "with", "LibreOffice", "since", "it", "will", "silently", "fix", "that", "problem", "NUMBER", "I", "m", "not", "sure", "about", "Excel", "however", "NUMBER", "I", "get", "the", "source", "file", "from", "a", "client", "use", "M", "Office", "Excel", "so", "could", "be", "that", "there", "be", "differences", "NUMBER", "Note", "Even", "though", "the", "issue", "might", "be", "fixable", "by", "saving", "the", "file", "with", "LibOff", "NUMBER", "Opening", "the", "file", "do", "not", "show", "any", "error", "or", "warnings", "about", "a", "corrupt", "repaired", "file", "NUMBER", "And", "I", "m", "not", "sure", "about", "M", "it", "might", "even", "keep", "the", "structure", "as", "be", "NUMBER", "So", "I", "guess", "a", "sanity", "check", "on", "the", "comment", "relationships", "should", "not", "be", "too", "much", "work", "and", "it", "might", "resolve", "other", "issue", "NUMBER", "You", "should", "be", "able", "to", "see", "the", "problem", "with", "your", "current", "approach", "in", "AddComment", "NUMBER", "issue", "NUMBER", "zip", "LINK", "Skylar", "excelize", "file", "NUMBER", "issue", "NUMBER", "zip", "I", "m", "not", "sure", "however", "how", "to", "ideally", "approach", "this", "NUMBER", "Fix", "on", "load", "Change", "the", "internal", "structures", "to", "track", "the", "validity", "of", "legacyDrawing", "Don", "t", "fix", "would", "break", "add", "comment", "on", "some", "file", "Additionally", "while", "you", "re", "at", "it", "NUMBER", "After", "use", "the", "tool", "on", "the", "xlsx", "file", "it", "creates", "a", "new", "file", "the", "visible", "comments", "positions", "be", "reset", "and", "a", "random", "box", "appears", "NUMBER", "Those", "seem", "to", "be", "error", "too", "NUMBER", "Hey", "the", "xlsx", "file", "be", "include", "in", "the", "link", "i", "posted", "in", "the", "last", "message", "NUMBER", "Just", "try", "to", "add", "a", "comment", "to", "any", "cell", "in", "the", "second", "sheet", "named", "Why", "be", "this", "so", "sheety", "NUMBER", "It", "will", "not", "show", "up", "NUMBER", "I", "notice", "one", "of", "my", "formulas", "was", "not", "get", "returned", "through", "this", "package", "so", "looked", "into", "it", "and", "find", "that", "GetCellFormula", "LINK", "Skylar", "excelize", "blob", "master", "cell", "NUMBER", "go", "L", "NUMBER", "only", "works", "for", "simple", "formulas", "not", "shared", "like", "the", "example", "below", "TAG", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "TAG", "In", "my", "example", "C", "NUMBER", "s", "formula", "be", "simply", "B", "NUMBER", "so", "it", "s", "not", "really", "clear", "to", "me", "what", "si", "NUMBER", "even", "means", "NUMBER", "Are", "there", "any", "plan", "to", "support", "shared", "formula", "types", "Hi", "I", "need", "to", "add", "rows", "to", "an", "excel", "sheet", "which", "might", "contain", "formulas", "NUMBER", "I", "know", "that", "I", "can", "use", "the", "dedicated", "function", "to", "add", "formulas", "SetCellFormula", "but", "I", "d", "like", "to", "be", "able", "to", "write", "rows", "by", "rows", "instead", "of", "cell", "by", "cell", "NUMBER", "Is", "this", "possible", "with", "SetSheetRow", "For", "example", "could", "I", "write", "this", "row", "NUMBER", "NUMBER", "A", "NUMBER", "A", "NUMBER", "product_name", "Thanks", "TAG", "Description", "I", "be", "able", "to", "insert", "new", "values", "into", "specified", "cells", "and", "able", "to", "fetch", "the", "values", "from", "a", "specified", "cell", "NUMBER", "In", "my", "excel", "sheet", "few", "cells", "have", "formulas", "in", "it", "so", "depending", "on", "my", "input", "the", "cell", "which", "has", "the", "formula", "should", "return", "the", "calculated", "value", "NUMBER", "But", "here", "the", "excel", "be", "able", "to", "take", "my", "values", "as", "input", "and", "store", "it", "in", "excel", "sheet", "but", "it", "be", "not", "giving", "the", "calculated", "values", "of", "new", "entries", "it", "be", "always", "giving", "the", "calculated", "values", "of", "old", "entries", "NUMBER", "For", "example", "I", "have", "manually", "give", "NUMBER", "NUMBER", "NUMBER", "values", "in", "B", "NUMBER", "B", "NUMBER", "B", "NUMBER", "cells", "respectively", "and", "B", "NUMBER", "has", "the", "formula", "to", "add", "them", "NUMBER", "expected", "output", "be", "a", "sum", "of", "these", "cells", "i", "NUMBER", "e", "NUMBER", "When", "I", "programmatically", "try", "to", "fetch", "the", "value", "of", "B", "NUMBER", "then", "I", "be", "able", "to", "get", "the", "correct", "output", "as", "NUMBER", "Now", "I", "be", "trying", "to", "insert", "the", "values", "programmatically", "to", "B", "NUMBER", "B", "NUMBER", "B", "NUMBER", "and", "tried", "to", "get", "the", "output", "from", "B", "NUMBER", "At", "this", "point", "I", "be", "able", "to", "save", "new", "values", "to", "B", "NUMBER", "B", "NUMBER", "B", "NUMBER", "as", "NUMBER", "NUMBER", "NUMBER", "but", "B", "NUMBER", "be", "still", "giving", "me", "NUMBER", "instead", "of", "NUMBER", "TAG", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "B", "NUMBER", "NUMBER", "for", "setting", "the", "value", "to", "cell", "NUMBER", "xlsx", "NUMBER", "GetCellValue", "Sheet", "NUMBER", "B", "NUMBER", "for", "get", "the", "value", "of", "a", "cell", "NUMBER", "Describe", "the", "results", "you", "received", "Describe", "the", "results", "you", "expected", "Output", "of", "go", "version", "text", "paste", "your", "output", "here", "Excelize", "version", "or", "commit", "ID", "text", "paste", "here", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "Windows", "NUMBER", "Microsoft", "Excel", "version", "NUMBER", "There", "be", "also", "a", "slightly", "different", "workflow", "that", "be", "not", "work", "and", "I", "don", "t", "know", "of", "any", "sensible", "workaround", "if", "I", "have", "an", "Excel", "with", "some", "formulas", "already", "in", "it", "and", "I", "add", "only", "the", "numbers", "then", "when", "I", "open", "Excel", "I", "don", "t", "see", "the", "formulas", "computed", "with", "the", "actual", "value", "I", "input", "NUMBER", "Even", "if", "I", "click", "on", "Calculate", "now", "or", "Calculate", "sheet", "in", "Excel", "this", "do", "not", "recompute", "the", "formulas", "and", "the", "only", "bad", "workaround", "I", "find", "to", "date", "be", "to", "edit", "the", "formula", "and", "place", "the", "exact", "same", "formula", "so", "F", "NUMBER", "ENTER", "NUMBER", "This", "actually", "recomputes", "it", "but", "it", "s", "not", "clear", "why", "Excel", "do", "not", "recompute", "them", "even", "if", "I", "do", "a", "Calculate", "now", "or", "Calculate", "sheet", "NUMBER", "Does", "anybody", "have", "a", "workaround", "on", "this", "Wow", "great", "This", "be", "indeed", "the", "case", "NUMBER", "Working", "like", "charm", "NUMBER", "Thank", "you", "very", "much", "for", "this", "style", "_", "f", "NUMBER", "NewStyle", "number_format", "NUMBER", "f", "NUMBER", "SetCellStyle", "sheet", "axis", "axis", "style", "not", "work", "for", "date", "format", "style", "_", "xlsx", "NUMBER", "NewStyle", "custom_number_format", "yyyy", "mm", "dd", "f", "NUMBER", "SetCellStyle", "sheet", "axis", "axis", "style", "this", "code", "be", "work", "right", "xuri", "Oh", "Thanks", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "eb", "NUMBER", "d", "NUMBER", "c", "NUMBER", "ce", "NUMBER", "efbba", "NUMBER", "c", "NUMBER", "b", "NUMBER", "d", "src", "pr", "el", "desc", "will", "not", "change", "coverage", "NUMBER", "The", "diff", "coverage", "be", "n", "a", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "src", "pr", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "width", "NUMBER", "height", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "chart", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "Y", "NUMBER", "hhcnQuZ", "NUMBER", "NUMBER", "TAG", "\u00f8", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "eb", "NUMBER", "fe", "NUMBER", "f", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "TAG", "I", "did", "not", "see", "anyone", "ask", "about", "how", "font", "family", "worked", "NUMBER", "TAG", "I", "have", "this", "line", "to", "set", "my", "style", "but", "my", "output", "be", "always", "in", "Calibri", "NUMBER", "go", "style", "err", "xlsx", "NUMBER", "NewStyle", "alignment", "vertical", "top", "horizontal", "left", "font", "bold", "true", "family", "Arial", "size", "NUMBER", "Describe", "the", "results", "you", "received", "Document", "was", "generate", "but", "the", "cells", "have", "a", "font", "of", "Calibri", "NUMBER", "Describe", "the", "results", "you", "expected", "I", "expected", "document", "to", "be", "in", "Arial", "Output", "of", "go", "version", "go", "version", "go", "NUMBER", "windows", "amd", "NUMBER", "Excelize", "version", "or", "commit", "ID", "version", "NUMBER", "revision", "NUMBER", "d", "NUMBER", "ca", "NUMBER", "acca", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "c", "NUMBER", "d", "NUMBER", "ed", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "Windows", "NUMBER", "Excel", "NUMBER", "Thank", "you", "That", "worked", "NUMBER", "Will", "you", "be", "issue", "a", "new", "release", "or", "should", "I", "just", "pin", "to", "this", "revision", "Just", "a", "nice", "addition", "to", "set", "the", "chart", "size", "upon", "inserting", "NUMBER", "It", "s", "rather", "too", "small", "and", "insignificant", "to", "create", "an", "enhancement", "issue", "for", "it", "first", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "aa", "NUMBER", "ffe", "NUMBER", "f", "NUMBER", "be", "NUMBER", "c", "NUMBER", "b", "NUMBER", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "b", "src", "pr", "el", "desc", "will", "increase", "coverage", "by", "TAG", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "height", "NUMBER", "src", "pr", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "TAG", "\u00f8", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "aa", "NUMBER", "c", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "Added", "some", "unit", "test", "just", "to", "ensure", "that", "the", "chart", "works", "as", "expected", "NUMBER", "Should", "be", "good", "now", "Those", "be", "more", "like", "optional", "parameters", "that", "in", "fact", "be", "the", "vararg", "of", "function", "to", "set", "the", "properties", "NUMBER", "This", "be", "something", "that", "be", "considered", "as", "one", "of", "the", "best", "practices", "now", "I", "guess", "NUMBER", "So", "if", "the", "client", "app", "doesn", "t", "specify", "anything", "it", "will", "use", "the", "defaults", "for", "the", "chart", "size", "that", "means", "it", "won", "t", "break", "the", "exist", "API", "NUMBER", "I", "would", "rather", "set", "the", "chart", "metadata", "in", "this", "way", "instead", "of", "parsing", "the", "format", "string", "for", "the", "width", "height", "or", "complicate", "the", "chart", "struct", "NUMBER", "IMHO", "NUMBER", "Sounds", "like", "a", "good", "thing", "to", "have", "NUMBER", "Do", "you", "mind", "sharing", "which", "properties", "we", "can", "extract", "from", "the", "current", "style", "and", "use", "in", "the", "new", "way", "I", "assume", "that", "it", "implies", "renaming", "of", "chartOptions", "in", "sort", "of", "chartStyle", "and", "provide", "more", "properties", "that", "could", "be", "extracted", "from", "the", "style", "itself", "NUMBER", "Moved", "the", "chart", "dimension", "into", "the", "format", "string", "pls", "take", "a", "look", "NUMBER", "I", "have", "an", "excel", "template", "that", "I", "be", "manipulating", "and", "I", "have", "pivot", "tables", "referring", "to", "a", "named", "table", "If", "I", "add", "table", "to", "the", "sheet", "where", "an", "exist", "table", "be", "then", "the", "data", "may", "expand", "beyond", "the", "length", "of", "the", "exist", "table", "and", "the", "pivot", "tables", "miss", "it", "NUMBER", "the", "next", "bet", "i", "have", "be", "to", "add", "a", "table", "to", "the", "data", "I", "be", "add", "but", "I", "don", "t", "have", "the", "ability", "to", "set", "the", "name", "of", "the", "table", "and", "so", "the", "pivot", "tables", "lose", "the", "reference", "NUMBER", "Basically", "i", "just", "want", "to", "be", "able", "to", "send", "in", "a", "parameter", "to", "this", "line", "here", "instead", "of", "it", "be", "auto", "created", "LINK", "Skylar", "excelize", "blob", "master", "table", "NUMBER", "go", "L", "NUMBER", "thanks", "so", "much", "for", "jumping", "on", "this", "it", "do", "exactly", "what", "i", "asked", "for", "but", "unfortunately", "doesn", "t", "solve", "my", "problem", "creating", "the", "new", "table", "doesn", "t", "seem", "to", "keep", "the", "link", "to", "the", "pivot", "tables", "in", "the", "document", "NUMBER", "Would", "be", "nice", "to", "be", "able", "to", "alter", "the", "range", "of", "an", "exist", "table", "maybe", "NUMBER", "Some", "of", "this", "excel", "internal", "link", "seems", "like", "magic", "NUMBER", "Description", "I", "m", "annotating", "an", "exist", "Excel", "file", "by", "add", "comments", "to", "cells", "that", "contain", "invalid", "data", "NUMBER", "While", "doing", "so", "I", "realized", "that", "add", "huge", "amount", "of", "comments", "to", "an", "excel", "file", "be", "extremely", "slow", "NUMBER", "For", "comparison", "I", "set", "the", "style", "for", "a", "cell", "via", "conditional", "formating", "cell", "value", "NUMBER", "NUMBER", "This", "takes", "about", "NUMBER", "seconds", "NUMBER", "Adding", "a", "comment", "to", "all", "these", "field", "increases", "runtime", "to", "NUMBER", "minutes", "for", "the", "same", "amount", "of", "cells", "edit", "NUMBER", "So", "the", "question", "actually", "be", "NUMBER", "Why", "do", "add", "a", "comment", "take", "so", "much", "time", "Is", "it", "the", "duplicate", "serialize", "deserialization", "needed", "And", "I", "might", "open", "another", "issue", "cause", "the", "file", "created", "be", "shown", "as", "containing", "error", "and", "needs", "repairs", "Excel", "only", "Libreoffice", "et", "al", "NUMBER", "say", "everything", "be", "ok", "but", "comments", "be", "miss", "on", "some", "of", "the", "sheets", "NUMBER", "So", "I", "guess", "there", "be", "an", "issue", "I", "was", "confused", "with", "the", "api", "tbh", "NUMBER", "I", "did", "this", "which", "imho", "be", "useless", "object", "json", "object", "xml", "But", "I", "couldn", "t", "find", "a", "direct", "approach", "to", "just", "hand", "the", "object", "in", "NUMBER", "go", "type", "xlsxComment", "struct", "Author", "string", "json", "author", "Text", "string", "json", "text", "errorComment", "xlsxComment", "Author", "Linter", "Text", "strings", "NUMBER", "Join", "string", "Wow", "much", "error", "such", "time", "many", "performance", "n", "commentSerialized", "err", "json", "NUMBER", "Marshal", "errorComment", "xlsx", "NUMBER", "AddComment", "sheetName", "cellName", "string", "commentSerialized", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "Create", "or", "open", "file", "NUMBER", "Add", "many", "comments", "NUMBER", "Wait", "Describe", "the", "results", "you", "received", "see", "description", "Describe", "the", "results", "you", "expected", "see", "description", "Output", "of", "go", "version", "go", "version", "go", "NUMBER", "linux", "amd", "NUMBER", "Excelize", "version", "or", "commit", "ID", "NUMBER", "b", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "b", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ef", "NUMBER", "e", "NUMBER", "a", "NUMBER", "at", "time", "of", "write", "HEAD", "NUMBER", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "Yeah", "guess", "that", "solve", "itself", "NUMBER", "How", "many", "comments", "did", "you", "add", "Excelize", "needs", "to", "do", "some", "checks", "to", "ensure", "file", "compatibility", "that", "will", "impact", "on", "performance", "NUMBER", "I", "add", "NUMBER", "k", "comments", "I", "find", "that", "the", "cost", "time", "of", "every", "comments", "will", "increase", "with", "the", "comments", "increase", "NUMBER", "Why", "this", "happen", "As", "far", "as", "I", "understood", "that", "the", "issue", "be", "the", "constant", "serialization", "and", "de", "serialization", "needed", "for", "modifying", "comments", "NUMBER", "Comments", "be", "stored", "in", "a", "separate", "file", "and", "only", "referenced", "in", "the", "column", "data", "xml", "file", "NUMBER", "So", "if", "you", "add", "a", "comment", "you", "need", "to", "find", "a", "unique", "reference", "identifier", "and", "add", "that", "reference", "in", "the", "column", "data", "and", "additionally", "add", "the", "comment", "itself", "to", "the", "iirc", "drawings", "file", "NUMBER", "Sorry", "it", "s", "some", "time", "ago", "now", "NUMBER", "I", "m", "trying", "to", "recall", "this", "from", "memory", "NUMBER", "I", "guess", "yuri", "can", "tell", "you", "more", "about", "this", "however", "NUMBER", "Hi", "Obbi", "NUMBER", "xuri", "sry", "about", "reply", "so", "late", "NUMBER", "I", "limit", "the", "amount", "of", "comment", "to", "solve", "this", "problem", "NUMBER", "because", "when", "I", "use", "the", "latest", "version", "it", "seems", "work", "as", "usual", "NUMBER", "Description", "If", "I", "add", "an", "picture", "I", "would", "like", "to", "lock", "it", "inside", "the", "cell", "NUMBER", "Within", "Excel", "you", "would", "select", "the", "picture", "RMB", "Size", "and", "Properties", "Properties", "Move", "and", "size", "with", "cells", "NUMBER", "How", "must", "I", "set", "the", "FormatString", "in", "AddPicture", "Thx", "Hi", "I", "can", "draw", "a", "stacked", "bar", "chart", "now", "but", "I", "want", "to", "set", "the", "bar", "s", "color", "be", "any", "way", "to", "do", "it", "xuri", "Thanks", "for", "your", "quick", "response", "appreciate", "your", "help", "NUMBER", "Description", "When", "I", "add", "an", "image", "to", "an", "exist", "spreadsheet", "a", "png", "in", "my", "case", "whose", "size", "perfectly", "matches", "the", "size", "in", "cm", "of", "the", "area", "in", "which", "I", "want", "it", "to", "display", "it", "gets", "display", "scaled", "display", "incorrectly", "too", "small", "NUMBER", "I", "think", "the", "calculation", "for", "to", "NUMBER", "col", "to", "NUMBER", "row", "calculated", "in", "positionObjectPixels", "be", "somehow", "going", "wrong", "when", "use", "the", "col", "row", "dimensions", "or", "image", "dimensions", "NUMBER", "I", "also", "think", "that", "if", "there", "was", "an", "option", "to", "use", "TAG", "see", "here", "LINK", "oneCell", "NUMBER", "php", "it", "may", "fix", "the", "image", "display", "by", "avoiding", "having", "to", "do", "the", "calculations", "NUMBER", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "Create", "an", "exist", "template", "spreadsheet", "in", "excel", "with", "the", "first", "NUMBER", "column", "widths", "sized", "as", "follows", "to", "hold", "the", "image", "a", "NUMBER", "cm", "b", "NUMBER", "c", "NUMBER", "d", "NUMBER", "e", "NUMBER", "f", "NUMBER", "g", "NUMBER", "h", "NUMBER", "total", "NUMBER", "cm", "or", "as", "Excel", "prefers", "to", "measure", "them", "A", "NUMBER", "B", "NUMBER", "c", "NUMBER", "d", "NUMBER", "e", "NUMBER", "f", "NUMBER", "g", "NUMBER", "h", "NUMBER", "NUMBER", "Use", "func", "File", "AddPicture", "NUMBER", "with", "the", "aspect", "ratio", "locked", "no", "offset", "no", "link", "and", "scaling", "set", "to", "NUMBER", "I", "have", "also", "tried", "without", "these", "to", "insert", "a", "png", "of", "size", "NUMBER", "cm", "high", "and", "NUMBER", "wide", "Describe", "the", "results", "you", "received", "The", "image", "be", "inserted", "constrained", "to", "the", "width", "of", "NUMBER", "cols", "a", "b", "c", "NUMBER", "It", "s", "aspect", "ratio", "be", "wrong", "NUMBER", "In", "Excel", "going", "to", "the", "image", "size", "properties", "and", "choosing", "Reset", "scales", "it", "as", "it", "should", "be", "to", "NUMBER", "scale", "and", "col", "H", "Describe", "the", "results", "you", "expected", "The", "image", "be", "inserted", "constrained", "within", "the", "width", "of", "NUMBER", "cols", "a", "b", "c", "d", "e", "f", "g", "h", "NUMBER", "It", "s", "aspect", "ratio", "should", "be", "maintained", "NUMBER", "In", "Excel", "going", "to", "the", "image", "size", "properties", "should", "show", "it", "scaled", "to", "NUMBER", "Output", "of", "go", "version", "go", "NUMBER", "Excelize", "version", "or", "commit", "ID", "NUMBER", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "OS", "NUMBER", "Win", "NUMBER", "MacOS", "NUMBER", "physical", "Excel", "NUMBER", "earlier", "Thanks", "do", "you", "think", "this", "TAG", "be", "the", "only", "way", "to", "get", "the", "image", "to", "display", "at", "it", "s", "intended", "size", "Do", "you", "have", "any", "idea", "why", "the", "to", "NUMBER", "col", "to", "NUMBER", "row", "calculated", "in", "positionObjectPixels", "be", "somehow", "going", "wrong", "for", "the", "exist", "TAG", "implementation", "I", "had", "a", "look", "but", "couldn", "t", "see", "anything", "obvious", "NUMBER", "I", "ve", "attached", "a", "sample", "case", "to", "illustrate", "the", "issue", "Excelizeissue", "NUMBER", "zip", "LINK", "Skylar", "excelize", "file", "NUMBER", "Excelizeissue", "NUMBER", "zip", "Added", "ZoomScale", "SheetViewOption", "Accessible", "value", "between", "NUMBER", "NUMBER", "Used", "as", "xlsx", "NUMBER", "SetSheetViewOptions", "sheet", "NUMBER", "excelize", "NUMBER", "ZoomScale", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "b", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "b", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "ef", "NUMBER", "e", "NUMBER", "a", "NUMBER", "src", "pr", "el", "desc", "will", "increase", "coverage", "by", "TAG", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "src", "pr", "width", "NUMBER", "height", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "TAG", "\u00f8", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "b", "NUMBER", "c", "NUMBER", "b", "NUMBER", "eb", "NUMBER", "ec", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "TAG", "Description", "TAG", "The", "function", "xlsx", "NUMBER", "SetCellHyperLink", "create", "link", "without", "display", "text", "the", "cell", "be", "empty", "but", "link", "be", "created", "NUMBER", "It", "can", "be", "fix", "by", "additionaly", "use", "xlsx", "NUMBER", "SetCellStr", "function", "Nevertheless", "it", "look", "likes", "as", "imperfection", "because", "the", "struct", "xlsxHyperlink", "has", "Display", "field", "for", "this", "purpose", "but", "xlsx", "NUMBER", "SetCellHyperLink", "do", "not", "use", "it", "type", "xlsxHyperlink", "struct", "Ref", "string", "xml", "ref", "attr", "Location", "string", "xml", "location", "attr", "omitempty", "Display", "string", "xml", "display", "attr", "omitempty", "RID", "string", "xml", "LINK", "id", "attr", "omitempty", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "use", "xlsx", "NUMBER", "SetCellHyperLink", "Describe", "the", "results", "you", "received", "TAG", "TAG", "TAG", "TAG", "Describe", "the", "results", "you", "expected", "If", "we", "be", "use", "MS", "Excel", "TAG", "TAG", "TAG", "Output", "of", "go", "version", "go", "version", "go", "NUMBER", "windows", "amd", "NUMBER", "Description", "Excel", "file", "with", "inlineStr", "cell", "types", "read", "empty", "value", "here", "be", "the", "sample", "file", "output", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "output", "NUMBER", "xlsx", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "download", "the", "sample", "file", "and", "read", "it", "with", "sample", "code", "as", "belong", "NUMBER", "xlsx", "err", "excelize", "NUMBER", "OpenFile", "NUMBER", "output", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "return", "rows", "xlsx", "NUMBER", "GetRows", "test", "for", "_", "row", "range", "rows", "for", "_", "colCell", "range", "row", "fmt", "NUMBER", "Print", "colCell", "t", "fmt", "NUMBER", "Println", "Describe", "the", "results", "you", "received", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Describe", "the", "results", "you", "expected", "col", "NUMBER", "col", "NUMBER", "col", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Output", "of", "go", "version", "any", "Excelize", "version", "or", "commit", "ID", "Excelize", "version", "NUMBER", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "any", "Thanks", "for", "your", "support", "really", "fast", "and", "terrific", "NUMBER", "wps", "I", "be", "also", "get", "an", "error", "when", "I", "try", "to", "load", "this", "xlsx", "file", "NUMBER", "err", "zip", "not", "a", "valid", "zip", "file", "package", "PBCONVxlsx", "NUMBER", "csv", "NUMBER", "package", "main", "import", "fmt", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "excelFileName", "EPlan_AP_LastSixMonths", "NUMBER", "xlsx", "excelFileName", "NUMBER", "EPlan_AP_LastSixMonths", "NUMBER", "xlsx", "excelFileName", "EPlan_SubmitRequest_LastSixMonths", "NUMBER", "xlsx", "excelFileName", "NUMBER", "EPlan_SubmitRequest_LastSixMonths", "NUMBER", "xlsx", "xlsx", "err", "excelize", "NUMBER", "OpenFile", "NUMBER", "Book", "NUMBER", "xlsx", "xlsx", "err", "excelize", "NUMBER", "OpenFile", "excelFileName", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "fmt", "NUMBER", "Println", "err", "return", "Get", "value", "from", "cell", "by", "given", "worksheet", "name", "and", "axis", "NUMBER", "cell", "xlsx", "NUMBER", "GetCellValue", "Sheet", "NUMBER", "B", "NUMBER", "fmt", "NUMBER", "Println", "cell", "Get", "all", "the", "rows", "in", "the", "Sheet", "NUMBER", "rows", "xlsx", "NUMBER", "GetRows", "Sheet", "NUMBER", "for", "_", "row", "range", "rows", "for", "_", "colCell", "range", "row", "fmt", "NUMBER", "Print", "colCell", "t", "fmt", "NUMBER", "Println", "Users", "vyoumans", "Documents", "PBeachChallenge", "EPlan_AP_LastSixMonths", "NUMBER", "xlsx", "EPlan_AP_LastSixMonths", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "EPlan_AP_LastSixMonths", "NUMBER", "xlsx", "EPlan_AP_LastSixMonths", "NUMBER", "xlsx", "EPlan_AP_LastSixMonths", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "EPlan_AP_LastSixMonths", "NUMBER", "xlsx", "I", "be", "also", "have", "the", "same", "problem", "NUMBER", "OS", "win", "NUMBER", "NUMBER", "Go", "NUMBER", "Excelize", "master", "OpenFile", "xls", "file", "get", "zip", "not", "a", "valid", "zip", "file", "error", "NUMBER", "I", "copy", "the", "file", "content", "to", "a", "new", "xlsx", "file", "the", "OpenFile", "successes", "NUMBER", "binary", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "c", "NUMBER", "c", "NUMBER", "NUMBER", "ae", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "b", "NUMBER", "f", "NUMBER", "PNG", "\u5bf9\u6bd4\u4e86\u4e0b", "xls", "\u548c", "xlsx", "\u6587\u4ef6", "\u53d1\u73b0\u5b83\u4eec\u7684\u6587\u4ef6\u8d77\u59cb\u7684\u683c\u5f0f\u4e0d\u4e00\u6837", "zip", "\u5305\u7684", "findSignatureInBlock", "\u4f1a\u53bb\u5224\u65ad\u524d\u9762\u7684\u5b57\u7b26\u6765\u786e\u8ba4\u6587\u4ef6\u683c\u5f0f", "\u6240\u4ee5\u5bfc\u81f4\u52a0\u8f7d", "xls", "\u5931\u8d25", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "NUMBER", "xlsx", "\u4e0a\u9762", "NUMBER", "xlsx", "\u662fOffice", "NUMBER", "\u751f\u6210\u7684", "\u5728\u4e0a\u4f20", "xls", "\u7684\u8fc7\u7a0b\u4e2d", "\u5c45\u7136\u4e5f\u51fa\u73b0\u4e86\u4e0b\u9762\u7684\u683c\u5f0f\u4e0d\u6b63\u786e\u7684\u9519\u8bef", "error", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "ae", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "ff", "NUMBER", "d", "NUMBER", "dbcc", "NUMBER", "PNG", "navono", "thanks", "for", "your", "info", "so", "what", "be", "your", "way", "to", "workaround", "it", "calvinchankf", "for", "now", "copy", "the", "content", "to", "a", "new", "NUMBER", "xls", "or", "xlsx", "file", "by", "hand", "NUMBER", "Lol", "thanks", "for", "sharing", "I", "will", "request", "my", "clients", "to", "export", "a", "xlsx", "On", "Wed", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "Darkness", "TAG", "write", "calvinchankf", "TAG", "for", "now", "copy", "the", "content", "to", "a", "new", "NUMBER", "xls", "file", "by", "hand", "NUMBER", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "calvinchankf", "You", "re", "welcome", "NUMBER", "If", "you", "find", "a", "better", "way", "please", "let", "me", "know", "NUMBER", "I", "also", "meet", "this", "problem", "I", "just", "copy", "the", "content", "to", "a", "new", "NUMBER", "xls", "or", "xlsx", "file", "by", "hand", "NUMBER", "need", "help", "If", "you", "have", "a", "lot", "file", "NUMBER", "xls", "file", "may", "be", "can", "write", "a", "script", "to", "transfer", "all", "file", "extension", "to", "NUMBER", "xlsx", "NUMBER", "I", "haven", "t", "test", "the", "solution", "just", "a", "thought", "NUMBER", "TAG", "Description", "when", "I", "open", "a", "excel", "exist", "merge", "cell", "I", "find", "there", "be", "a", "unmerged", "cell", "in", "the", "xlsx", "NUMBER", "MergeCells", "NUMBER", "Cells", "panic", "runtime", "error", "index", "out", "of", "range", "goroutine", "NUMBER", "run", "github", "NUMBER", "com", "Luxurioust", "excelize", "NUMBER", "checkCellInArea", "NUMBER", "xc", "NUMBER", "d", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "xc", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "xc", "NUMBER", "d", "NUMBER", "C", "Users", "Administrator", "go", "src", "github", "NUMBER", "com", "Luxurioust", "excelize", "cell", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "github", "NUMBER", "com", "Luxurioust", "excelize", "NUMBER", "File", "NUMBER", "mergeCellsParser", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "NUMBER", "xc", "NUMBER", "NUMBER", "x", "NUMBER", "ebd", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "xc", "NUMBER", "de", "NUMBER", "NUMBER", "x", "NUMBER", "b", "NUMBER", "dae", "C", "Users", "Administrator", "go", "src", "github", "NUMBER", "com", "Luxurioust", "excelize", "cell", "NUMBER", "go", "NUMBER", "NUMBER", "xc", "NUMBER", "github", "NUMBER", "com", "Luxurioust", "excelize", "NUMBER", "File", "NUMBER", "SetCellStr", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "xc", "NUMBER", "x", "NUMBER", "ebd", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "fa", "NUMBER", "NUMBER", "x", "NUMBER", "C", "Users", "Administrator", "go", "src", "github", "NUMBER", "com", "Luxurioust", "excelize", "cell", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "github", "NUMBER", "com", "Luxurioust", "excelize", "NUMBER", "File", "NUMBER", "SetCellValue", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "xc", "NUMBER", "x", "NUMBER", "ebd", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "c", "NUMBER", "aa", "NUMBER", "C", "Users", "Administrator", "go", "src", "github", "NUMBER", "com", "Luxurioust", "excelize", "cell", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "TAG", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "xlsx", "err", "excelize", "NUMBER", "OpenFile", "filename", "NUMBER", "xlsx", "NUMBER", "SetCellValue", "Sheel", "NUMBER", "a", "NUMBER", "weiwei", "NUMBER", "run", "it", "Describe", "the", "results", "you", "received", "Describe", "the", "results", "you", "expected", "Output", "of", "go", "version", "Go", "SDK", "NUMBER", "Excelize", "version", "or", "commit", "ID", "master", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "xuri", "user", "case", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "user", "case", "NUMBER", "xlsx", "xuri", "\u975e\u5e38\u611f\u8c22", "package", "main", "import", "fmt", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "xlsx", "excelize", "NUMBER", "NewFile", "sheetName", "sheet", "NUMBER", "currentRow", "NUMBER", "currentLetter", "A", "xlsx", "NUMBER", "SetCellValue", "sheetName", "fmt", "NUMBER", "Sprintf", "s", "d", "currentLetter", "currentRow", "test", "NUMBER", "ntest", "NUMBER", "test", "NUMBER", "xlsx", "NUMBER", "SetRowHeight", "sheetName", "currentRow", "NUMBER", "xlsx", "NUMBER", "SaveAs", "tmp", "NUMBER", "xlsx", "I", "was", "thiinking", "this", "code", "will", "sets", "text", "value", "to", "A", "NUMBER", "cell", "and", "change", "NUMBER", "row", "s", "height", "NUMBER", "But", "result", "be", "like", "on", "the", "screenshot", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "df", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "f", "NUMBER", "a", "NUMBER", "b", "NUMBER", "png", "Thank", "you", "for", "quick", "fix", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "dc", "NUMBER", "f", "NUMBER", "NUMBER", "a", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "dc", "NUMBER", "c", "NUMBER", "eb", "NUMBER", "png", "NUMBER", "Autofit", "height", "be", "very", "useful", "future", "NUMBER", "I", "think", "it", "ll", "be", "very", "comfortable", "and", "will", "minimize", "error", "not", "to", "generate", "style", "json", "by", "hands", "but", "at", "least", "marshal", "it", "for", "default", "struct", "NUMBER", "I", "would", "also", "like", "to", "see", "this", "change", "NUMBER", "I", "had", "to", "dig", "into", "the", "source", "code", "to", "figure", "out", "what", "style", "properties", "to", "set", "in", "order", "to", "align", "font", "for", "example", "NUMBER", "If", "the", "struct", "was", "pubic", "it", "would", "have", "be", "a", "lot", "easier", "to", "figure", "out", "and", "it", "would", "also", "help", "prevent", "typo", "NUMBER", "I", "also", "think", "this", "would", "be", "a", "big", "improvement", "NUMBER", "There", "be", "nothing", "to", "lose", "by", "make", "it", "available", "and", "in", "fact", "I", "think", "it", "will", "make", "discovering", "how", "to", "interact", "with", "this", "library", "much", "simpler", "NUMBER", "How", "to", "set", "the", "orientation", "of", "the", "chart", "MaxMin", "TAG", "Description", "Chinese", "name", "of", "sheet", "will", "cause", "GetRows", "return", "empty", "array", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "Create", "a", "sheet", "with", "a", "Chinese", "name", "like", "\u8868", "NUMBER", "NUMBER", "GetRows", "\u8868", "NUMBER", "NUMBER", "Won", "t", "work", "Describe", "the", "results", "you", "received", "Describe", "the", "results", "you", "expected", "Output", "of", "go", "version", "go", "version", "go", "NUMBER", "darwin", "amd", "NUMBER", "Excelize", "version", "or", "commit", "ID", "master", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "MacOS", "sample", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "sample", "NUMBER", "xlsx", "go", "x", "err", "excelize", "NUMBER", "OpenFile", "tmp", "sample", "NUMBER", "xlsx", "log", "NUMBER", "Printf", "file", "opened", "v", "x", "NUMBER", "Path", "if", "err", "nil", "panic", "err", "rows", "x", "NUMBER", "GetRows", "\u8868", "NUMBER", "here", "be", "the", "file", "and", "the", "code", "to", "reproduce", "this", "issue", "My", "bad", "I", "forget", "to", "update", "the", "library", "for", "a", "while", "thanks", "for", "your", "time", "have", "a", "nice", "day", "I", "have", "a", "use", "case", "for", "my", "business", "scenario", "where", "I", "need", "to", "password", "protect", "my", "generate", "excel", "file", "before", "I", "can", "email", "them", "to", "the", "client", "NUMBER", "It", "would", "be", "great", "if", "we", "can", "have", "a", "password", "protection", "feature", "in", "the", "library", "NUMBER", "Thank", "you", "Would", "it", "for", "now", "be", "possbile", "to", "expose", "the", "xlsxWorkbookProtection", "struct", "in", "the", "public", "API", "That", "way", "I", "could", "implement", "password", "protection", "on", "the", "application", "side", "for", "now", "NUMBER", "Any", "progress", "on", "this", "This", "feature", "be", "essential", "NUMBER", "Hi", "Ri", "Xu", "that", "you", "for", "your", "good", "work", "on", "this", "library", "NUMBER", "Using", "it", "every", "week", "NUMBER", "Would", "like", "to", "report", "a", "possible", "issue", "with", "reading", "values", "NUMBER", "I", "be", "use", "the", "latest", "version", "of", "the", "library", "NUMBER", "OK", "and", "fail", "excels", "be", "shared", "due", "to", "sensitive", "nature", "to", "Ri", "Xu", "via", "email", "NUMBER", "In", "Nok", "excel", "GetCellValue", "returns", "in", "ok", "excel", "return", "the", "correct", "value", "NUMBER", "Simple", "test", "program", "below", "package", "main", "import", "fmt", "strconv", "github", "NUMBER", "com", "xuri", "excelize", "func", "main", "xlsxNok", "err", "excelize", "NUMBER", "OpenFile", "file_nok", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Print", "err", "xlsxOk", "err", "excelize", "NUMBER", "OpenFile", "file_ok", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Print", "err", "fmt", "NUMBER", "Printf", "file_nok", "NUMBER", "xls", "M", "NUMBER", "v", "L", "NUMBER", "v", "n", "xlsxNok", "NUMBER", "GetCellValue", "Sheet", "NUMBER", "M", "NUMBER", "xlsxNok", "NUMBER", "GetCellValue", "Sheet", "NUMBER", "L", "NUMBER", "fmt", "NUMBER", "Printf", "file_ok", "NUMBER", "xls", "M", "NUMBER", "v", "L", "NUMBER", "v", "n", "xlsxOk", "NUMBER", "GetCellValue", "Sheet", "NUMBER", "M", "NUMBER", "xlsxOk", "NUMBER", "GetCellValue", "Sheet", "NUMBER", "L", "NUMBER", "for", "row", "NUMBER", "row", "TAG", "file_nok", "NUMBER", "xls", "M", "NUMBER", "L", "NUMBER", "NUMBER", "file_ok", "NUMBER", "xls", "M", "NUMBER", "NUMBER", "L", "NUMBER", "NUMBER", "NUMBER", "Thank", "you", "NUMBER", "Workaround", "LINK", "Skylar", "excelize", "issue", "NUMBER", "issuecomment", "NUMBER", "in", "issue", "NUMBER", "update", "to", "handle", "space", "in", "xlsx", "path", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ff", "NUMBER", "d", "NUMBER", "d", "NUMBER", "a", "NUMBER", "c", "NUMBER", "f", "NUMBER", "fb", "NUMBER", "src", "pr", "el", "desc", "will", "decrease", "coverage", "by", "NUMBER", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "src", "pr", "height", "NUMBER", "width", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "sheet", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "c", "NUMBER", "hlZXQuZ", "NUMBER", "NUMBER", "TAG", "NUMBER", "arrow_down", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "e", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "d", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "Hello", "I", "would", "like", "to", "know", "if", "there", "be", "an", "alternative", "function", "to", "GetRows", "that", "will", "only", "return", "cells", "with", "content", "Example", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "c", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "c", "NUMBER", "ae", "NUMBER", "ac", "NUMBER", "fe", "NUMBER", "png", "If", "I", "do", "a", "len", "GetRows", "sheet", "NUMBER", "on", "the", "sheet", "in", "example", "the", "len", "function", "will", "return", "NUMBER", "instead", "of", "NUMBER", "I", "use", "Google", "Sheets", "and", "export", "to", "NUMBER", "xlsx", "NUMBER", "example", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "example", "NUMBER", "xlsx", "There", "should", "be", "a", "helper", "function", "for", "inserting", "a", "new", "row", "but", "instead", "of", "empty", "I", "should", "be", "able", "to", "provide", "a", "slice", "containing", "row", "data", "NUMBER", "The", "function", "will", "create", "the", "row", "with", "cells", "populated", "with", "data", "maybe", "assuming", "all", "be", "strings", "NUMBER", "There", "may", "also", "be", "an", "offset", "column", "parameter", "NUMBER", "Is", "there", "a", "way", "to", "set", "a", "cell", "value", "instead", "of", "use", "A", "NUMBER", "B", "NUMBER", "etc", "Something", "like", "SetCellValue", "x", "y", "value", "Using", "A", "NUMBER", "B", "NUMBER", "etc", "be", "not", "really", "convenient", "when", "inserting", "data", "with", "loops", "or", "at", "least", "I", "dont", "know", "how", "to", "do", "it", "right", "Thanks", "this", "works", "However", "I", "wish", "there", "was", "a", "more", "transparent", "and", "obvious", "API", "for", "this", "I", "will", "submit", "a", "PR", "if", "you", "like", "As", "the", "title", "says", "it", "would", "be", "great", "if", "the", "InsertRow", "functionality", "returns", "a", "reference", "to", "the", "row", "NUMBER", "I", "was", "thinking", "that", "it", "can", "be", "useful", "for", "make", "change", "to", "that", "row", "if", "a", "reference", "be", "returned", "NUMBER", "Not", "really", "necessary", "NUMBER", "It", "was", "like", "that", "in", "tealeg", "xlsx", "so", "I", "was", "expecting", "it", "but", "I", "find", "another", "way", "Thank", "you", "Hi", "Why", "do", "the", "cell", "become", "protected", "when", "use", "SetCellStyle", "style", "err", "xlsx", "NUMBER", "NewStyle", "font", "color", "FF", "NUMBER", "size", "NUMBER", "border", "type", "right", "color", "NUMBER", "b", "style", "NUMBER", "alignment", "horizontal", "right", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "xlsx", "NUMBER", "SetCellStyle", "sheetFull", "cell", "cell", "style", "Advance", "thanks", "Please", "look", "file", "before", "and", "after", "NUMBER", "Sheet", "NUMBER", "Cell", "F", "NUMBER", "func", "SetDate", "xlsx", "excelize", "NUMBER", "File", "sheet", "int", "cell", "string", "data", "time", "NUMBER", "Time", "isError", "bool", "sheetString", "strconv", "NUMBER", "Itoa", "sheet", "sheetFull", "sheet", "sheetString", "defaultTime", "_", "time", "NUMBER", "Parse", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LMT", "if", "data", "NUMBER", "Format", "NUMBER", "NUMBER", "NUMBER", "defaultTime", "NUMBER", "Format", "NUMBER", "NUMBER", "NUMBER", "xlsx", "NUMBER", "SetCellValue", "sheetFull", "cell", "\u0414\u0414", "NUMBER", "\u041c\u041c", "NUMBER", "\u0413\u0413\u0413\u0413", "style", "err", "xlsx", "NUMBER", "NewStyle", "font", "color", "FF", "NUMBER", "size", "NUMBER", "border", "type", "right", "color", "NUMBER", "b", "style", "NUMBER", "alignment", "horizontal", "right", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "xlsx", "NUMBER", "SetCellStyle", "sheetFull", "cell", "cell", "style", "isError", "true", "else", "xlsx", "NUMBER", "SetCellValue", "sheetFull", "cell", "data", "NUMBER", "Format", "NUMBER", "before", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "before", "NUMBER", "xlsx", "after", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "after", "NUMBER", "xlsx", "Thank", "You", "Hi", "How", "to", "draw", "a", "bar", "clustered", "bar", "clustered", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "cd", "NUMBER", "de", "NUMBER", "png", "It", "s", "great", "NUMBER", "Thank", "you", "From", "issue", "NUMBER", "I", "know", "how", "to", "format", "numbers", "to", "currency", "but", "how", "do", "I", "format", "them", "to", "Accounting", "format", "Thanks", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "a", "NUMBER", "e", "NUMBER", "e", "NUMBER", "png", "pic", "from", "NUMBER", "TAG", "when", "i", "try", "to", "read", "the", "file", "i", "get", "the", "following", "error", "panic", "runtime", "error", "index", "out", "of", "range", "goroutine", "NUMBER", "run", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "xlsxC", "NUMBER", "getValueFrom", "NUMBER", "xc", "NUMBER", "dc", "NUMBER", "c", "NUMBER", "NUMBER", "xc", "NUMBER", "NUMBER", "xc", "NUMBER", "a", "NUMBER", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "c", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "C", "Users", "adm_Palyanichka", "go", "src", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "rows", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "d", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "File", "NUMBER", "GetRows", "NUMBER", "xc", "NUMBER", "NUMBER", "xc", "NUMBER", "e", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "C", "Users", "adm_Palyanichka", "go", "src", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "rows", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "b", "NUMBER", "main", "NUMBER", "writeFile", "NUMBER", "xc", "NUMBER", "b", "NUMBER", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "NUMBER", "x", "NUMBER", "C", "Users", "adm_Palyanichka", "go", "src", "carmoney", "NUMBER", "com", "xlsx", "converter", "xlsxConverter", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "main", "NUMBER", "main", "C", "Users", "adm_Palyanichka", "go", "src", "carmoney", "NUMBER", "com", "xlsx", "converter", "xlsxConverter", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "exit", "status", "NUMBER", "Output", "of", "go", "version", "NUMBER", "Hi", "tmp", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "tmp", "NUMBER", "xlsx", "This", "file", "was", "created", "by", "NUMBER", "C", "software", "very", "controversial", "software", "TAG", "Description", "default", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "d", "NUMBER", "c", "NUMBER", "fde", "NUMBER", "e", "NUMBER", "NUMBER", "bcd", "NUMBER", "be", "NUMBER", "PNG", "TAG", "Steps", "to", "reproduce", "the", "issue", "Does", "the", "function", "AddChart", "only", "support", "microsoft", "office", "Because", "when", "I", "use", "the", "AddChart", "example", "and", "get", "NUMBER", "xlsx", "file", "the", "chart", "be", "blank", "if", "open", "by", "WPS", "Excel", "but", "it", "be", "ok", "if", "open", "by", "microsoft", "office", "Excel", "Describe", "the", "results", "you", "received", "In", "the", "AddChart", "example", "s", "NUMBER", "xlsx", "file", "the", "chart", "be", "blank", "if", "open", "by", "WPS", "Excel", "but", "it", "be", "ok", "if", "open", "by", "microsoft", "office", "default", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "ba", "NUMBER", "c", "NUMBER", "a", "NUMBER", "fdd", "NUMBER", "e", "NUMBER", "NUMBER", "ea", "NUMBER", "ca", "NUMBER", "f", "NUMBER", "b", "NUMBER", "PNG", "Describe", "the", "results", "you", "expected", "The", "chart", "can", "open", "by", "WPS", "Excel", "correctly", "NUMBER", "Output", "of", "go", "version", "go", "NUMBER", "paste", "your", "output", "here", "Excelize", "version", "or", "commit", "ID", "Excelize", "NUMBER", "paste", "here", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "Win", "NUMBER", "WPS", "office", "Oh", "if", "I", "really", "want", "to", "open", "by", "WPS", "do", "you", "have", "any", "idea", "Thank", "you", "very", "aery", "much", "By", "the", "way", "how", "soon", "will", "you", "commit", "the", "latest", "version", "May", "I", "have", "the", "your", "time", "because", "I", "m", "really", "in", "a", "hurry", "THX", "too", "much", "TAG", "Description", "TAG", "Excel", "broken", "when", "create", "new", "file", "Steps", "to", "reproduce", "the", "issue", "TAG", "xlsx", "excelize", "NUMBER", "NewFile", "xlsx", "NUMBER", "NewSheet", "Sheet", "NUMBER", "xlsx", "NUMBER", "SaveAs", "test", "NUMBER", "xlsx", "TAG", "Describe", "the", "results", "you", "received", "Just", "trival", "process", "but", "when", "open", "test", "NUMBER", "xlsx", "excel", "NUMBER", "compained", "\u53d1\u73b0\u90e8\u5206\u5185\u5bb9\u6709\u95ee\u9898", "\u662f\u5426\u8ba9\u6211\u4eec\u5c3d\u91cf\u5c1d\u8bd5\u4fee\u590d", "Describe", "the", "results", "you", "expected", "excel", "NUMBER", "keep", "quilt", "as", "do", "before", "Output", "of", "go", "version", "go", "version", "go", "NUMBER", "windows", "amd", "NUMBER", "Excelize", "version", "or", "commit", "ID", "NUMBER", "latest", "commit", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "window", "NUMBER", "professional", "excel", "NUMBER", "Thank", "you", "I", "did", "not", "notice", "the", "example", "TAG", "xlsx", "excelize", "NUMBER", "NewFile", "Create", "a", "new", "sheet", "NUMBER", "index", "xlsx", "NUMBER", "NewSheet", "Sheet", "NUMBER", "TAG", "I", "think", "this", "be", "FEATURE", "REQUEST", "NUMBER", "Description", "I", "be", "add", "images", "to", "spreadsheet", "cell", "and", "want", "to", "add", "a", "hyperlink", "on", "that", "image", "NUMBER", "I", "couldn", "t", "find", "a", "way", "with", "this", "library", "so", "I", "add", "hyperlink", "to", "a", "cell", "NUMBER", "However", "some", "cells", "have", "two", "images", "or", "more", "hence", "add", "hyperlink", "to", "a", "cell", "doesn", "t", "always", "produce", "a", "needed", "result", "NUMBER", "Is", "it", "even", "possible", "to", "add", "a", "hyperlink", "to", "an", "image", "by", "code", "I", "know", "it", "s", "possible", "from", "Excel", "and", "Calc", "NUMBER", "Thanks", "for", "creating", "this", "library", "I", "think", "that", "s", "very", "awesome", "NUMBER", "Thank", "you", "NUMBER", "However", "when", "I", "create", "a", "simple", "spreadsheet", "or", "a", "spreadsheet", "with", "image", "hyperlink", "there", "be", "an", "Excel", "NUMBER", "error", "when", "open", "that", "spreadsheet", "Excel", "was", "able", "to", "open", "the", "file", "by", "repairing", "or", "remove", "the", "unreadable", "content", "NUMBER", "Repaired", "Records", "Worksheet", "properties", "from", "xl", "workbook", "NUMBER", "xml", "part", "Workbook", "TAG", "TAG", "TAG", "error", "NUMBER", "_", "NUMBER", "xml", "TAG", "TAG", "Errors", "were", "detected", "in", "file", "C", "NUMBER", "Workbook", "NUMBER", "xlsx", "TAG", "TAG", "TAG", "Repaired", "Records", "Worksheet", "properties", "from", "xl", "workbook", "NUMBER", "xml", "part", "Workbook", "TAG", "TAG", "TAG", "There", "be", "also", "an", "extra", "Sheet", "be", "created", "Recovered_Sheet", "NUMBER", "Workbook", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "Workbook", "NUMBER", "xlsx", "error", "NUMBER", "_", "NUMBER", "xml", "NUMBER", "txt", "LINK", "Skylar", "excelize", "file", "NUMBER", "error", "NUMBER", "_", "NUMBER", "xml", "NUMBER", "txt", "please", "see", "attached", "NUMBER", "Workbook", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "Workbook", "NUMBER", "xlsx", "error", "NUMBER", "_", "NUMBER", "xml", "NUMBER", "txt", "LINK", "Skylar", "excelize", "file", "NUMBER", "error", "NUMBER", "_", "NUMBER", "xml", "NUMBER", "txt", "Here", "excel", "NUMBER", "zip", "LINK", "Skylar", "excelize", "file", "NUMBER", "excel", "NUMBER", "zip", "It", "s", "work", "without", "error", "now", "NUMBER", "Thank", "you", "The", "recent", "improvement", "to", "SetCellStyle", "still", "loops", "over", "all", "the", "rows", "this", "be", "more", "concise", "and", "faster", "NUMBER", "Since", "the", "area", "check", "be", "now", "do", "by", "the", "loop", "the", "inner", "loop", "check", "checkCellInArea", "be", "no", "longer", "needed", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ef", "NUMBER", "be", "NUMBER", "a", "NUMBER", "f", "NUMBER", "aa", "NUMBER", "dda", "NUMBER", "f", "NUMBER", "dc", "NUMBER", "cb", "NUMBER", "src", "pr", "el", "desc", "will", "decrease", "coverage", "by", "TAG", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "width", "NUMBER", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "styles", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "c", "NUMBER", "R", "NUMBER", "bGVzLmdv", "NUMBER", "TAG", "\u00f8", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "c", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "Squashed", "on", "top", "of", "latest", "master", "NUMBER", "Here", "s", "a", "pull", "request", "addressing", "issue", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "d", "NUMBER", "f", "NUMBER", "b", "NUMBER", "bfc", "NUMBER", "c", "NUMBER", "a", "NUMBER", "d", "NUMBER", "fca", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "src", "pr", "el", "desc", "will", "decrease", "coverage", "by", "NUMBER", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "cell", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "Y", "NUMBER", "VsbC", "NUMBER", "nbw", "NUMBER", "TAG", "NUMBER", "arrow_down", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "d", "NUMBER", "f", "NUMBER", "b", "NUMBER", "ec", "NUMBER", "e", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "No", "problem", "NUMBER", "Thanks", "for", "this", "great", "library", "cell", "xlsx", "NUMBER", "GetCellValue", "Sheet", "NUMBER", "B", "NUMBER", "fmt", "NUMBER", "Println", "cell", "rows", "xlsx", "NUMBER", "GetRows", "Sheet", "NUMBER", "fmt", "NUMBER", "Println", "rows", "\u539f\u5bbf\u8ff7\u5f69\u5916\u5957\u5973\u77ed\u6b3e\u51ac\u97e9\u7248\u5b66\u751f\u52a0\u539a\u60c5\u4fa3\u68c9\u8863bf\u5bbd\u677echic\u68c9\u670d\u5973\u65b0\u6b3e", "Running", "into", "the", "same", "error", "use", "excelize", "NUMBER", "Golang", "NUMBER", "Use", "the", "following", "test", "case", "to", "reproduce", "func", "TestGetRows", "t", "test", "NUMBER", "T", "excel", "excelize", "NUMBER", "NewFile", "sheet", "excel", "NUMBER", "GetSheetName", "NUMBER", "axis", "A", "NUMBER", "excel", "NUMBER", "SetCellValue", "sheet", "axis", "NUMBER", "rows", "excel", "NUMBER", "GetRows", "sheet", "want", "NUMBER", "get", "len", "rows", "if", "want", "get", "t", "NUMBER", "Fatalf", "want", "d", "but", "get", "d", "want", "get", "Running", "the", "test", "case", "fail", "the", "cell", "be", "stored", "but", "GetRows", "returns", "NUMBER", "A", "NUMBER", "NUMBER", "FAIL", "TestGetRows", "NUMBER", "s", "main_test", "NUMBER", "go", "NUMBER", "want", "NUMBER", "but", "get", "NUMBER", "FAIL", "I", "m", "just", "trying", "to", "add", "an", "image", "file", "but", "when", "I", "generate", "the", "excel", "an", "error", "shows", "up", "NUMBER", "I", "m", "just", "following", "the", "examples", "NUMBER", "There", "be", "a", "one", "NUMBER", "jpg", "file", "in", "the", "same", "directory", "that", "the", "NUMBER", "exe", "generate", "by", "golang", "NUMBER", "NUMBER", "I", "use", "the", "command", "go", "build", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "c", "NUMBER", "c", "NUMBER", "cc", "NUMBER", "fa", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "b", "NUMBER", "fa", "NUMBER", "fe", "NUMBER", "f", "NUMBER", "png", "xlsx", "excelize", "NUMBER", "NewFile", "sheet", "Sheet", "NUMBER", "xlsx", "NUMBER", "SetCellValue", "sheet", "A", "NUMBER", "Picture", "errx", "xlsx", "NUMBER", "AddPicture", "sheet", "A", "NUMBER", "LINK", "if", "errx", "nil", "fmt", "NUMBER", "Println", "errx", "err", "xlsx", "NUMBER", "SaveAs", "NUMBER", "test", "NUMBER", "xlsx", "I", "have", "be", "imported", "_", "image", "gif", "_", "image", "jpeg", "_", "image", "png", "excelFilePath", "model", "NUMBER", "GetExcelFilePath", "file", "openFileError", "excelize", "NUMBER", "OpenFile", "excelFilePath", "if", "openFileError", "nil", "logginghelper", "NUMBER", "LogError", "writeQuestionDataToExcel", "openFileError", "openFileError", "return", "openFileError", "sh", "file", "NUMBER", "Sheet", "NUMBER", "rowCounter", "_", "strconv", "NUMBER", "ParseInt", "rowno", "NUMBER", "NUMBER", "rowCounter", "_", "strconv", "NUMBER", "Atoi", "rowno", "logginghelper", "NUMBER", "LogDebug", "file", "NUMBER", "GetSheetName", "NUMBER", "file", "NUMBER", "RemoveRow", "file", "NUMBER", "GetSheetName", "NUMBER", "NUMBER", "logginghelper", "NUMBER", "LogDebug", "row", "file", "NUMBER", "GetRows", "file", "NUMBER", "GetSheetName", "NUMBER", "logginghelper", "NUMBER", "LogDebug", "row", "rowCounter", "NUMBER", "logginghelper", "NUMBER", "LogDebug", "row", "file", "NUMBER", "GetRows", "file", "NUMBER", "GetSheetName", "NUMBER", "file", "NUMBER", "RemoveRow", "file", "NUMBER", "GetSheetName", "NUMBER", "rowCounter", "NUMBER", "return", "nil", "which", "file", "NUMBER", "u", "mean", "excel", "xlsx", "file", "containing", "pictures", "text", "only", "NUMBER", "for", "example", "image", "NUMBER", "jpg", "image", "NUMBER", "png", "NUMBER", "I", "want", "to", "get", "cell", "value", "with", "zh", "cn", "numberformat", "NUMBER", "m", "\u6708", "d", "\u65e5", "style", "_", "xlsx", "NUMBER", "NewStyle", "number_format", "NUMBER", "lang", "zh", "cn", "xlsx", "NUMBER", "SetCellStyle", "Sheet", "NUMBER", "A", "NUMBER", "A", "NUMBER", "style", "fmt", "NUMBER", "Println", "xlsx", "NUMBER", "GetCellValue", "Sheet", "NUMBER", "A", "NUMBER", "the", "cell", "value", "be", "NUMBER", "NUMBER", "NUMBER", "but", "I", "get", "NUMBER", "NUMBER", "and", "I", "want", "to", "write", "cell", "value", "use", "the", "same", "format", "get", "NUMBER", "too", "NUMBER", "thanks", "a", "lot", "NUMBER", "The", "function", "SetCellValue", "already", "support", "time", "NUMBER", "Time", "which", "can", "be", "then", "formated", "NUMBER", "But", "if", "I", "have", "just", "time", "NUMBER", "Duration", "like", "some", "diff", "of", "start", "and", "end", "time", "I", "can", "t", "add", "it", "to", "the", "cell", "so", "that", "excel", "will", "treat", "it", "like", "time", "NUMBER", "I", "want", "it", "to", "be", "an", "time", "value", "with", "h", "mm", "ss", "format", "which", "can", "be", "use", "in", "formulae", "NUMBER", "If", "I", "add", "only", "the", "time", "NUMBER", "Duration", "it", "be", "the", "textual", "representation", "eg", "NUMBER", "h", "NUMBER", "m", "NUMBER", "s", "if", "I", "add", "an", "formated", "output", "from", "time", "NUMBER", "Duration", "eg", "NUMBER", "NUMBER", "NUMBER", "excel", "takes", "it", "just", "like", "an", "escaped", "string", "use", "SetCellDefault", "also", "doesn", "t", "set", "the", "cell", "to", "be", "a", "time", "value", "Thanks", "this", "works", "but", "it", "would", "be", "great", "if", "SetCellValue", "would", "do", "it", "for", "me", "NUMBER", "Or", "not", "But", "SetCellValue", "also", "uses", "the", "default", "date", "format", "m", "d", "yy", "h", "mm", "for", "time", "NUMBER", "Time", "so", "why", "not", "use", "h", "mm", "ss", "for", "time", "NUMBER", "Duration", "That", "was", "fast", "thanks", "great", "Description", "reading", "error", "if", "xlsx", "file", "has", "the", "data", "below", "tealeg", "be", "ok", "NUMBER", "e", "NUMBER", "g", "NUMBER", "data", "NUMBER", "xlsx", "a", "NUMBER", "row", "NUMBER", "column", "xlsx", "file", "NUMBER", "where", "col", "NUMBER", "NUMBER", "NUMBER", "in", "row", "NUMBER", "be", "empty", "write", "nil", "just", "to", "format", "code", "INT", "INT", "INT", "INT", "INT", "nil", "nil", "a", "b", "nil", "when", "xlsx", "NUMBER", "GetRows", "it", "returns", "a", "len", "NUMBER", "row", "the", "NUMBER", "cell", "be", "NUMBER", "If", "all", "cell", "has", "value", "it", "s", "right", "return", "a", "len", "NUMBER", "row", "NUMBER", "xuri", "auto", "fill", "be", "ok", "NUMBER", "what", "make", "me", "confused", "be", "a", "max", "NUMBER", "column", "xlsx", "return", "a", "NUMBER", "column", "data", "with", "all", "the", "NUMBER", "column", "NUMBER", "test", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "test", "NUMBER", "xlsx", "that", "s", "it", "Description", "I", "use", "office", "NUMBER", "mac", "os", "Excel", "open", "the", "minimal", "example", "code", "generate", "XLSX", "file", "NUMBER", "but", "There", "s", "no", "data", "Steps", "to", "reproduce", "the", "issue", "NUMBER", "copy", "the", "minimal", "example", "code", "NUMBER", "run", "the", "program", "package", "main", "import", "fmt", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "xlsx", "excelize", "NUMBER", "NewFile", "Create", "a", "new", "sheet", "NUMBER", "index", "xlsx", "NUMBER", "NewSheet", "Sheet", "NUMBER", "Set", "value", "of", "a", "cell", "NUMBER", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "A", "NUMBER", "Hello", "world", "NUMBER", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "B", "NUMBER", "NUMBER", "Set", "active", "sheet", "of", "the", "workbook", "NUMBER", "xlsx", "NUMBER", "SetActiveSheet", "index", "Save", "xlsx", "file", "by", "the", "given", "path", "NUMBER", "err", "xlsx", "NUMBER", "SaveAs", "NUMBER", "Workbook", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "Describe", "the", "results", "you", "received", "Describe", "the", "results", "you", "expected", "Output", "of", "go", "version", "shencan", "MacBook", "Goscript", "go", "run", "write_excel", "NUMBER", "go", "shencan", "MacBook", "Goscript", "ls", "l", "Workbook", "NUMBER", "xlsx", "rw", "r", "r", "NUMBER", "shencan", "staff", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Workbook", "NUMBER", "xlsx", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "d", "NUMBER", "b", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "fbdf", "NUMBER", "a", "NUMBER", "c", "NUMBER", "png", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "bd", "NUMBER", "f", "NUMBER", "c", "NUMBER", "eb", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "c", "NUMBER", "b", "NUMBER", "e", "NUMBER", "b", "NUMBER", "png", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "mac", "os", "office", "NUMBER", "Excel", "I", "have", "an", "exist", "xlsx", "file", "and", "I", "want", "to", "format", "a", "sheet", "of", "it", "as", "a", "worksheet", "table", "i", "NUMBER", "e", "NUMBER", "I", "want", "thr", "sheet", "to", "have", "zebra", "stripes", "NUMBER", "However", "I", "get", "no", "relief", "when", "trying", "to", "add", "it", "to", "my", "exist", "code", "My", "code", "looks", "like", "the", "following", "Open", "exist", "file", "xlsx", "err", "excelize", "NUMBER", "OpenFile", "filePath", "if", "err", "nil", "fmt", "NUMBER", "Printf", "err", "NUMBER", "Error", "return", "Add", "table", "format", "If", "the", "following", "line", "be", "remove", "excel", "be", "fine", "xlsx", "NUMBER", "AddTable", "SheetName", "A", "NUMBER", "C", "NUMBER", "table_style", "TableStyleMedium", "NUMBER", "show_first_column", "true", "show_last_column", "true", "show_row_stripes", "false", "show_column_stripes", "true", "headerStyle", "err", "xlsx", "NUMBER", "NewStyle", "fill", "type", "pattern", "color", "NUMBER", "pattern", "NUMBER", "font", "bold", "true", "family", "Calibri", "size", "NUMBER", "color", "FFFFFF", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "Add", "header", "styling", "xlsx", "NUMBER", "SetCellStyle", "SheetName", "A", "NUMBER", "C", "NUMBER", "headerStyle", "err", "xlsx", "NUMBER", "Save", "if", "err", "nil", "fmt", "NUMBER", "Printf", "err", "NUMBER", "Error", "return", "Results", "The", "file", "be", "created", "but", "MS", "Excel", "cannot", "open", "it", "properly", "and", "warns", "that", "the", "file", "be", "broken", "NUMBER", "go", "version", "go", "NUMBER", "windows", "amd", "NUMBER", "Excelize", "commit", "ID", "NUMBER", "f", "NUMBER", "fcf", "NUMBER", "fcba", "NUMBER", "ae", "NUMBER", "ae", "NUMBER", "c", "NUMBER", "eb", "NUMBER", "Environment", "details", "OS", "Microsoft", "Excel", "version", "physical", "etc", "NUMBER", "OS", "Windows", "NUMBER", "Enterprise", "Service", "Pack", "NUMBER", "Microsoft", "Excel", "version", "NUMBER", "Standard", "Sure", "since", "attachments", "do", "not", "support", "NUMBER", "go", "file", "extensions", "I", "add", "it", "as", "a", "NUMBER", "txt", "When", "line", "NUMBER", "be", "commented", "out", "the", "resulting", "excel", "be", "fine", "NUMBER", "When", "run", "as", "it", "be", "attached", "excel", "cannot", "open", "it", "properly", "NUMBER", "P", "NUMBER", "S", "Btw", "as", "you", "can", "see", "it", "be", "a", "hybrid", "with", "tealeg", "s", "xlsx", "NUMBER", "main", "NUMBER", "txt", "LINK", "Skylar", "excelize", "file", "NUMBER", "main", "NUMBER", "txt", "Hallelujah", "Didn", "t", "notice", "AddTable", "inserts", "filtering", "by", "itself", "NUMBER", "Thanks", "a", "lot", "for", "make", "life", "easier", "and", "helping", "get", "rid", "of", "VisualBasic", "scripts", "Hi", "first", "thanks", "creating", "for", "this", "library", "it", "s", "very", "useful", "NUMBER", "I", "would", "like", "to", "know", "if", "it", "s", "possible", "to", "have", "rich", "text", "inside", "a", "cell", "What", "I", "mean", "by", "rich", "text", "be", "text", "with", "a", "rich", "format", "for", "instance", "Hello", "world", "where", "world", "be", "bold", "but", "Hello", "isn", "t", "NUMBER", "I", "have", "tried", "to", "dabble", "with", "SetCellStr", "and", "SetCellDefault", "with", "content", "such", "as", "Hello", "TAG", "world", "TAG", "I", "don", "t", "know", "a", "lot", "about", "XLSX", "format", "so", "my", "example", "may", "be", "wrong", "but", "the", "cell", "value", "ends", "up", "escaped", "with", "SetCellDefault", "too", "NUMBER", "Thanks", "Thanks", "Do", "you", "think", "there", "be", "a", "lot", "of", "work", "required", "to", "complete", "this", "feature", "and", "do", "you", "already", "have", "a", "clear", "idea", "of", "how", "to", "implement", "it", "Maybe", "I", "could", "lend", "you", "a", "hand", "depending", "on", "what", "s", "needed", "Hi", "sorry", "I", "m", "quite", "busy", "these", "days", "so", "I", "m", "not", "able", "to", "work", "on", "this", "NUMBER", "If", "someone", "else", "wants", "to", "do", "it", "feel", "free", "NUMBER", "Otherwise", "I", "ll", "let", "you", "know", "if", "I", "have", "time", "again", "to", "do", "it", "NUMBER", "When", "creating", "an", "excel", "file", "if", "I", "call", "SetColWidth", "and", "save", "the", "file", "NUMBER", "Then", "if", "I", "open", "the", "file", "on", "office", "it", "report", "the", "file", "was", "broken", "and", "need", "fix", "NUMBER", "style", "_", "input", "NUMBER", "NewStyle", "custom_number_format", "d", "mmm", "yy", "input", "NUMBER", "SetCellStyle", "inputActiveSheet", "targetCol", "targetCol", "style", "val", "input", "NUMBER", "GetCellValue", "inputActiveSheet", "targetCol", "val", "gives", "me", "raw", "cell", "value", "oh", "I", "see", "NUMBER", "I", "find", "it", "some", "where", "in", "doc", "comments", "and", "tried", "to", "use", "NUMBER", "There", "be", "big", "issue", "in", "date", "parsing", "with", "formats", "like", "m", "d", "yy", "NUMBER", "actually", "go", "parses", "year", "NUMBER", "as", "NUMBER", "instead", "of", "NUMBER", "so", "many", "confussion", "may", "occur", "NUMBER", "Excuse", "me", "but", "be", "there", "any", "plan", "to", "support", "such", "kinda", "usage", "When", "i", "use", "formulas", "in", "a", "document", "and", "i", "open", "it", "after", "with", "Excell", "or", "libreoffice", "i", "need", "to", "do", "a", "full", "replace", "of", "sum", "to", "SUM", "for", "the", "formula", "to", "work", "NUMBER", "Same", "for", "vlookup", "to", "replace", "with", "VLOOKUP", "NUMBER", "In", "xml", "file", "the", "SUM", "be", "in", "uppercase", "but", "when", "opened", "in", "libreoffice", "or", "microsof", "Excell", "it", "appear", "in", "lowercase", "NUMBER", "I", "haven", "t", "find", "any", "way", "to", "prevent", "this", "and", "it", "might", "be", "long", "for", "huge", "documents", "to", "replace", "formulas", "in", "the", "whole", "document", "NUMBER", "For", "information", "i", "m", "on", "v", "NUMBER", "of", "Excelize", "under", "linux", "mint", "NUMBER", "NUMBER", "and", "go", "NUMBER", "or", "NUMBER", "My", "libreoffice", "version", "be", "NUMBER", "but", "do", "the", "same", "on", "other", "version", "NUMBER", "The", "strange", "thing", "be", "that", "if", "i", "look", "in", "the", "XML", "File", "all", "seems", "OK", "a", "formula", "writen", "with", "LibreOffice", "and", "saved", "as", "Excell", "format", "looks", "like", "the", "Excelize", "formula", "NUMBER", "When", "i", "replace", "sum", "with", "SUM", "in", "LibreOffice", "and", "save", "except", "it", "can", "now", "be", "read", "by", "Microsoft", "Excell", "NUMBER", "on", "windows", "NUMBER", "where", "it", "couldn", "t", "before", "be", "that", "all", "NUMBER", "be", "replaced", "by", "quote", "for", "exemple", "NUMBER", "I", "really", "don", "t", "undestand", "what", "do", "that", "strange", "thing", "NUMBER", "May", "i", "add", "an", "example", "file", "Ok", "get", "some", "better", "results", "on", "SUM", "by", "change", "NUMBER", "with", "for", "area", "and", "by", "as", "separator", "NUMBER", "NUMBER", "and", "be", "those", "that", "appear", "in", "LibreOffice", "French", "and", "SUM", "be", "converted", "to", "SOMME", "NUMBER", "Looking", "at", "VLOOKUP", "now", "and", "change", "same", "and", "NUMBER", "to", "and", "in", "my", "go", "code", "the", "generate", "file", "keep", "get", "column", "letter", "in", "lowercase", "where", "Excell", "ibreOffice", "expect", "uppercase", "as", "you", "can", "see", "here", "TAG", "VLOOKUP", "B", "NUMBER", "zones", "A", "NUMBER", "B", "NUMBER", "NUMBER", "NUMBER", "TAG", "TAG", "France", "TAG", "TAG", "TAG", "TAG", "NUMBER", "TAG", "TAG", "TAG", "TAG", "VLOOKUP", "E", "NUMBER", "zones", "d", "NUMBER", "E", "NUMBER", "NUMBER", "NUMBER", "TAG", "The", "first", "VLOOKUP", "be", "one", "correct", "change", "a", "to", "A", "in", "formula", "and", "gives", "a", "good", "result", "NUMBER", "The", "second", "one", "shows", "Err", "NUMBER", "because", "of", "the", "lowercase", "d", "NUMBER", "Really", "close", "now", "because", "i", "get", "some", "error", "in", "the", "way", "i", "write", "formulas", "but", "this", "lowercase", "problem", "still", "gives", "problem", "when", "reading", "file", "with", "Office", "and", "LibreOffice", "s", "Ok", "i", "finally", "get", "it", "work", "in", "libreOffice", "but", "still", "not", "in", "Microsoft", "Office", "but", "i", "think", "there", "s", "still", "some", "king", "of", "issue", "because", "i", "had", "to", "remove", "all", "leading", "on", "the", "first", "column", "in", "ranges", "NUMBER", "excellFile", "NUMBER", "SetCellFormula", "sheetName", "B", "NUMBER", "fmt", "NUMBER", "Sprintf", "VLOOKUP", "s", "d", "zones", "D", "NUMBER", "E", "NUMBER", "NUMBER", "NUMBER", "tool", "NUMBER", "ColNumToStr", "colNum", "NUMBER", "rowNum", "be", "write", "in", "xml", "file", "as", "VLOOKUP", "A", "NUMBER", "zones", "d", "NUMBER", "E", "NUMBER", "NUMBER", "NUMBER", "note", "that", "D", "became", "d", "if", "i", "change", "my", "code", "to", "excellFile", "NUMBER", "SetCellFormula", "sheetName", "B", "NUMBER", "fmt", "NUMBER", "Sprintf", "VLOOKUP", "s", "d", "zones", "D", "NUMBER", "E", "NUMBER", "NUMBER", "NUMBER", "tool", "NUMBER", "ColNumToStr", "colNum", "NUMBER", "rowNum", "the", "xml", "file", "contains", "now", "VLOOKUP", "A", "NUMBER", "zones", "D", "NUMBER", "E", "NUMBER", "NUMBER", "NUMBER", "and", "it", "works", "very", "well", "now", "This", "be", "a", "big", "deal", "because", "aftre", "generating", "the", "file", "i", "give", "it", "to", "our", "accountant", "that", "add", "some", "stuff", "and", "duplicate", "formulas", "and", "sheets", "NUMBER", "Then", "when", "showing", "the", "formula", "be", "broken", "because", "the", "leading", "meaning", "not", "to", "change", "column", "when", "copying", "no", "longer", "lock", "the", "column", "to", "it", "s", "value", "and", "D", "becomes", "E", "if", "you", "copy", "formula", "to", "the", "right", "for", "example", "NUMBER", "i", "change", "the", "title", "to", "match", "the", "real", "problem", "Last", "thing", "to", "get", "it", "work", "in", "Microsoft", "Office", "be", "i", "had", "to", "open", "the", "file", "in", "LibreOffice", "then", "save", "the", "file", "under", "Office", "NUMBER", "NUMBER", "format", "NUMBER", "The", "effect", "on", "the", "xml", "file", "composing", "the", "document", "be", "the", "one", "i", "notice", "earlier", "NUMBER", "be", "replaced", "by", "apos", "etc", "NUMBER", "So", "as", "a", "resume", "leading", "area", "column", "letter", "in", "formulas", "be", "writen", "in", "lowercase", "in", "xml", "file", "when", "there", "be", "a", "char", "before", "AND", "file", "be", "writen", "with", "wrong", "escaping", "characters", "format", "for", "latest", "version", "of", "Microsoft", "Office", "NUMBER", "instead", "of", "apos", "and", "so", "on", "NUMBER", "Both", "issue", "can", "be", "solve", "by", "remove", "leading", "and", "open", "then", "saving", "the", "file", "under", "LibreOffice", "NUMBER", "I", "use", "this", "library", "to", "write", "dozens", "of", "Sheet", "and", "then", "delete", "several", "of", "the", "Sheet", "NUMBER", "If", "len", "members", "NUMBER", "Xlsx", "NUMBER", "DeleteSheet", "Sheet", "NUMBER", "Xlsx", "NUMBER", "UpdateLinkedValue", "ErrDelSheet", "NUMBER", "xlsx", "NUMBER", "Save", "If", "errDelSheet", "NUMBER", "nil", "Logs", "NUMBER", "Error", "errDelSheet", "NUMBER", "Xlsx", "NUMBER", "DeleteSheet", "Sheet", "NUMBER", "ErrDelSheet", "NUMBER", "xlsx", "NUMBER", "Save", "If", "errDelSheet", "NUMBER", "nil", "Logs", "NUMBER", "Error", "errDelSheet", "NUMBER", "Then", "open", "the", "Excel", "file", "suggesting", "that", "some", "of", "the", "contents", "of", "Excel", "be", "not", "readable", "NUMBER", "Whether", "or", "not", "to", "repair", "it", "NUMBER", "I", "can", "open", "the", "file", "after", "I", "fix", "it", "NUMBER", "If", "the", "above", "be", "not", "call", "NUMBER", "e", "NUMBER", "b", "NUMBER", "NUMBER", "eea", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "fcaba", "NUMBER", "defd", "NUMBER", "png", "NUMBER", "e", "NUMBER", "dbe", "NUMBER", "b", "NUMBER", "NUMBER", "bcf", "a", "NUMBER", "NUMBER", "c", "NUMBER", "e", "NUMBER", "e", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "b", "NUMBER", "f", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "png", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "f", "a", "NUMBER", "d", "NUMBER", "NUMBER", "b", "NUMBER", "e", "NUMBER", "a", "NUMBER", "cf", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "d", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "d", "NUMBER", "f", "NUMBER", "d", "NUMBER", "png", "contact", "me", "NUMBER", "NUMBER", "or", "QQ", "NUMBER", "or", "email", "hwf", "NUMBER", "NUMBER", "com", "if", "len", "members", "NUMBER", "xlsx", "NUMBER", "DeleteSheet", "Sheet", "NUMBER", "errDelSheet", "NUMBER", "xlsx", "NUMBER", "Save", "if", "errDelSheet", "NUMBER", "nil", "logs", "NUMBER", "Error", "errDelSheet", "NUMBER", "xlsx", "NUMBER", "DeleteSheet", "Sheet", "NUMBER", "errDelSheet", "NUMBER", "xlsx", "NUMBER", "Save", "if", "errDelSheet", "NUMBER", "nil", "logs", "NUMBER", "Error", "errDelSheet", "NUMBER", "\u5982\u679c\u8fd9\u6bb5\u5220\u9664Sheet\u7684\u4ee3\u7801\u6ca1\u6709\u8c03\u7528", "\u6587\u4ef6\u6253\u5f00\u6b63\u5e38", "I", "ve", "also", "meet", "this", "problem", "NUMBER", "Hello", "yesterday", "I", "just", "made", "the", "bug", "you", "quickly", "completed", "the", "repair", "I", "have", "verify", "this", "afternoon", "your", "efficiency", "be", "very", "fast", "NUMBER", "Like", "for", "you", "NUMBER", "I", "can", "t", "get", "to", "iterate", "rows", "beacause", "GetRows", "returns", "an", "empty", "slice", "NUMBER", "Here", "s", "the", "code", "NUMBER", "xlsx", "err", "excelize", "NUMBER", "OpenFile", "filePath", "if", "err", "nil", "panic", "err", "hoja", "xlsx", "NUMBER", "GetSheetName", "NUMBER", "log", "NUMBER", "Printf", "Reading", "sheet", "v", "n", "hoja", "rows", "xlsx", "NUMBER", "GetRows", "hoja", "log", "NUMBER", "Printf", "Rows", "length", "v", "n", "len", "rows", "log", "NUMBER", "Printf", "Rows", "v", "n", "rows", "Output", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Reading", "sheet", "Productos", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Rows", "length", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Rows", "I", "m", "add", "the", "file", "to", "recreate", "the", "situation", "NUMBER", "productos", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "productos", "NUMBER", "xlsx", "go", "version", "go", "NUMBER", "linux", "amd", "NUMBER", "Thanks", "Yes", "you", "be", "rigtht", "I", "had", "update", "the", "package", "but", "I", "had", "forgotten", "to", "update", "the", "dependency", "in", "the", "vendor", "directory", "NUMBER", "Thanks", "The", "value", "in", "cell", "B", "NUMBER", "be", "NUMBER", "NUMBER", "NUMBER", "but", "the", "value", "parsed", "be", "NUMBER", "NUMBER", "NUMBER", "cell", "xlsx", "NUMBER", "GetCellValue", "Sheet", "NUMBER", "B", "NUMBER", "I", "take", "a", "try", "to", "fix", "it", "as", "follows", "but", "NUMBER", "hour", "time", "be", "not", "support", "in", "this", "way", "NUMBER", "func", "parseTime", "i", "int", "v", "string", "string", "f", "err", "strconv", "NUMBER", "ParseFloat", "v", "NUMBER", "if", "err", "nil", "return", "v", "val", "timeFromExcelTime", "f", "false", "format", "builtInNumFmt", "i", "h", "mm", "ss", "replacements", "struct", "xltime", "gotime", "string", "yyyy", "NUMBER", "yy", "NUMBER", "mmmm", "dddd", "dd", "NUMBER", "d", "NUMBER", "mmm", "Jan", "mmss", "NUMBER", "ss", "NUMBER", "hh", "NUMBER", "h", "NUMBER", "h", "NUMBER", "mm", "NUMBER", "mm", "NUMBER", "mm", "NUMBER", "be", "pm", "pm", "m", "NUMBER", "January", "Monday", "for", "_", "repl", "range", "replacements", "format", "strings", "NUMBER", "Replace", "format", "repl", "NUMBER", "xltime", "repl", "NUMBER", "gotime", "NUMBER", "If", "the", "hour", "be", "optional", "strip", "it", "out", "along", "with", "the", "possible", "dangling", "colon", "that", "would", "remain", "NUMBER", "if", "val", "NUMBER", "Hour", "TAG", "val", "NUMBER", "Hour", "be", "NUMBER", "format", "strings", "NUMBER", "Replace", "format", "NUMBER", "format", "strings", "NUMBER", "Replace", "format", "NUMBER", "NUMBER", "format", "strings", "NUMBER", "Replace", "format", "NUMBER", "NUMBER", "else", "format", "strings", "NUMBER", "Replace", "format", "NUMBER", "NUMBER", "NUMBER", "format", "strings", "NUMBER", "Replace", "format", "NUMBER", "NUMBER", "NUMBER", "return", "val", "NUMBER", "Format", "format", "The", "xlsx", "file", "be", "attached", "NUMBER", "If", "it", "be", "a", "new", "issue", "can", "you", "give", "a", "formal", "workaround", "for", "it", "Thanks", "NUMBER", "time", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "time", "NUMBER", "xlsx", "barstacked", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ad", "NUMBER", "ced", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "fd", "NUMBER", "png", "Haven", "t", "update", "documentation", "NUMBER", "Let", "me", "know", "and", "I", "ll", "update", "README", "and", "go", "docs", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "d", "NUMBER", "cb", "NUMBER", "a", "NUMBER", "be", "NUMBER", "a", "NUMBER", "b", "NUMBER", "d", "NUMBER", "e", "NUMBER", "f", "NUMBER", "src", "pr", "el", "desc", "will", "increase", "coverage", "by", "TAG", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "height", "NUMBER", "width", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "TAG", "NUMBER", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "d", "NUMBER", "cb", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "Cool", "NUMBER", "I", "ll", "get", "these", "do", "NUMBER", "Just", "curious", "though", "as", "to", "why", "you", "wouldn", "t", "want", "a", "NUMBER", "gitignore", "NUMBER", "It", "helps", "to", "keep", "the", "project", "clean", "especially", "with", "various", "editors", "IDEs", "trying", "to", "stick", "a", "config", "file", "in", "NUMBER", "Also", "it", "makes", "for", "a", "difficult", "workflow", "manually", "choosing", "which", "file", "to", "add", "or", "not", "NUMBER", "LINK", "us", "media", "NUMBER", "ca", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "a", "NUMBER", "c", "NUMBER", "d", "NUMBER", "dbe", "NUMBER", "a", "NUMBER", "jpg", "It", "be", "not", "friendly", "to", "git", "NUMBER", "Everty", "time", "i", "run", "the", "code", "i", "get", "a", "modify", "in", "git", "NUMBER", "Is", "there", "any", "way", "to", "solve", "it", "for", "example", "go", "func", "TestWrite", "t", "test", "NUMBER", "T", "xlsx", "excelize", "NUMBER", "NewFile", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "B", "NUMBER", "NUMBER", "err", "xlsx", "NUMBER", "SaveAs", "NUMBER", "Write", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "first", "time", "data", "like", "this", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "d", "NUMBER", "cec", "NUMBER", "cf", "NUMBER", "fdb", "NUMBER", "c", "NUMBER", "ef", "fb", "NUMBER", "b", "NUMBER", "de", "NUMBER", "c", "NUMBER", "NUMBER", "f", "NUMBER", "c", "NUMBER", "NUMBER", "b", "NUMBER", "e", "NUMBER", "NUMBER", "b", "d", "NUMBER", "NUMBER", "ddb", "a", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "c", "NUMBER", "bda", "d", "NUMBER", "e", "NUMBER", "second", "time", "data", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "f", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "f", "NUMBER", "f", "NUMBER", "b", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "c", "NUMBER", "cf", "NUMBER", "edb", "NUMBER", "c", "c", "NUMBER", "ef", "NUMBER", "b", "NUMBER", "a", "NUMBER", "f", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "c", "NUMBER", "b", "NUMBER", "d", "cb", "NUMBER", "NUMBER", "b", "NUMBER", "ae", "NUMBER", "d", "NUMBER", "b", "NUMBER", "NUMBER", "d", "NUMBER", "d", "NUMBER", "f", "NUMBER", "NUMBER", "be", "NUMBER", "ed", "NUMBER", "NUMBER", "d", "e", "NUMBER", "a", "NUMBER", "NUMBER", "c", "NUMBER", "f", "NUMBER", "f", "NUMBER", "be", "there", "any", "plan", "to", "fix", "it", "i", "need", "add", "the", "generate", "xlsx", "in", "git", "NUMBER", "\u597d\u7684", "Open", "an", "xlsx", "file", "update", "one", "or", "more", "values", "NUMBER", "If", "excel", "has", "function", "you", "should", "use", "UpdateLinkedValue", "function", "NUMBER", "But", "If", "call", "UpdateLinkedValue", "all", "calls", "use", "GetCellValue", "returns", "NUMBER", "When", "I", "update", "excel", "and", "do", "not", "use", "UpdateLinkedValue", "values", "be", "update", "and", "I", "can", "use", "excelize", "to", "read", "data", "without", "any", "issue", "NUMBER", "I", "test", "this", "case", "NUMBER", "Using", "Open", "XML", "SDK", "Tools", "I", "have", "find", "differences", "in", "all", "sheet", "xmls", "NUMBER", "Example", "diff", "from", "sheet", "xml", "file", "TAG", "TAG", "IF", "WEEKDAY", "E", "NUMBER", "NUMBER", "E", "NUMBER", "N", "A", "TAG", "TAG", "N", "A", "TAG", "TAG", "vs", "TAG", "TAG", "IF", "WEEKDAY", "E", "NUMBER", "NUMBER", "E", "NUMBER", "N", "A", "TAG", "TAG", "or", "TAG", "TAG", "IF", "H", "NUMBER", "N", "A", "IF", "WEEKDAY", "E", "NUMBER", "NUMBER", "E", "NUMBER", "N", "A", "H", "NUMBER", "NUMBER", "TAG", "TAG", "NUMBER", "TAG", "TAG", "vs", "TAG", "TAG", "IF", "H", "NUMBER", "N", "A", "IF", "WEEKDAY", "E", "NUMBER", "NUMBER", "E", "NUMBER", "N", "A", "H", "NUMBER", "NUMBER", "TAG", "TAG", "xuri", "relevant", "file", "sent", "via", "email", "NUMBER", "OK", "I", "this", "case", "I", "be", "closing", "an", "issue", "as", "a", "duplicate", "to", "LINK", "Skylar", "excelize", "issue", "NUMBER", "Big", "thank", "for", "answer", "NUMBER", "Use", "github", "NUMBER", "com", "mohae", "deepcopy", "LINK", "Copy", "license", "MIT", "to", "deep", "copy", "worksheets", "with", "package", "reflect", "instead", "of", "the", "internal", "deepcopy", "function", "LINK", "Skylar", "excelize", "blob", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "f", "NUMBER", "a", "NUMBER", "f", "NUMBER", "dec", "NUMBER", "b", "NUMBER", "lib", "NUMBER", "go", "L", "NUMBER", "L", "NUMBER", "that", "was", "use", "encoding", "gob", "serialization", "and", "deserialization", "NUMBER", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "NUMBER", "e", "NUMBER", "b", "NUMBER", "b", "NUMBER", "ddc", "NUMBER", "b", "NUMBER", "fedd", "NUMBER", "d", "NUMBER", "ce", "NUMBER", "fb", "NUMBER", "src", "pr", "el", "desc", "will", "increase", "coverage", "by", "NUMBER", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "height", "NUMBER", "src", "pr", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "lib", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "bGliLmdv", "NUMBER", "TAG", "NUMBER", "arrow_down", "sheet", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "diff", "src", "pr", "el", "tree", "diff", "c", "NUMBER", "hlZXQuZ", "NUMBER", "NUMBER", "TAG", "NUMBER", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "e", "NUMBER", "b", "NUMBER", "a", "NUMBER", "b", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "Could", "this", "PR", "get", "a", "review", "NUMBER", "use", "encoding", "gob", "be", "much", "slower", "than", "mohae", "deepcopy", "LINK", "NUMBER", "When", "build", "an", "application", "this", "implementation", "of", "deepcopy", "drags", "the", "encoding", "gob", "package", "into", "the", "binary", "which", "be", "otherwise", "not", "linked", "NUMBER", "And", "this", "package", "be", "much", "bigger", "NUMBER", "x", "than", "mohae", "deepcopy", "which", "only", "depends", "on", "time", "and", "reflect", "NUMBER", "LC_ALL", "C", "stat", "f", "NUMBER", "z", "N", "go", "env", "GOPATH", "pkg", "go", "env", "GOOS", "_", "go", "env", "GOARCH", "github", "NUMBER", "com", "mohae", "deepcopy", "NUMBER", "a", "go", "env", "GOROOT", "pkg", "go", "env", "GOOS", "_", "go", "env", "GOARCH", "encoding", "gob", "NUMBER", "a", "NUMBER", "NUMBER", "pkg", "darwin_amd", "NUMBER", "github", "NUMBER", "com", "mohae", "deepcopy", "NUMBER", "a", "NUMBER", "NUMBER", "pkg", "darwin_amd", "NUMBER", "encoding", "gob", "NUMBER", "a", "NUMBER", "encoding", "gob", "drags", "many", "more", "dependencies", "go", "list", "f", "printf", "NUMBER", "s", "NUMBER", "ImportPath", "NUMBER", "Imports", "encoding", "gob", "github", "NUMBER", "com", "mohae", "deepcopy", "encoding", "gob", "bufio", "encoding", "encoding", "binary", "error", "fmt", "io", "math", "math", "bits", "os", "reflect", "sync", "sync", "atomic", "unicode", "unicode", "utf", "NUMBER", "github", "NUMBER", "com", "mohae", "deepcopy", "reflect", "time", "Thanks", "for", "merge", "Thank", "you", "for", "your", "great", "work", "on", "excelize", "NUMBER", "Reading", "works", "like", "a", "charm", "NUMBER", "But", "I", "have", "an", "issue", "with", "write", "NUMBER", "I", "update", "one", "cell", "save", "and", "XLSX", "file", "be", "corrupted", "NUMBER", "Input", "file", "source_file", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "source_file", "NUMBER", "xlsx", "Output", "corrupted", "file", "Workbook", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "Workbook", "NUMBER", "xlsx", "How", "I", "be", "write", "to", "the", "file", "xlsx", "err", "excelize", "NUMBER", "OpenFile", "path", "xlsx", "NUMBER", "SetCellInt", "Sheet", "NUMBER", "I", "NUMBER", "NUMBER", "err", "xlsx", "NUMBER", "SaveAs", "NUMBER", "Workbook", "NUMBER", "xlsx", "Erro", "message", "during", "open", "Workbook", "NUMBER", "xlsx", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "de", "c", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "c", "NUMBER", "e", "NUMBER", "png", "And", "error", "if", "I", "try", "to", "recover", "the", "workbook", "Replaced", "Part", "xl", "worksheets", "sheet", "NUMBER", "xml", "part", "with", "XML", "error", "NUMBER", "Load", "error", "NUMBER", "Line", "NUMBER", "column", "NUMBER", "Removed", "Records", "Formula", "from", "xl", "calcChain", "NUMBER", "xml", "part", "Calculation", "properties", "go", "env", "set", "GOARCH", "amd", "NUMBER", "set", "GOBIN", "set", "GOEXE", "NUMBER", "exe", "set", "GOHOSTARCH", "amd", "NUMBER", "set", "GOHOSTOS", "windows", "set", "GOOS", "windows", "set", "GOPATH", "C", "Users", "stanislav", "NUMBER", "valasek", "go", "set", "GORACE", "set", "GOROOT", "C", "Go", "set", "GOTOOLDIR", "C", "Go", "pkg", "tool", "windows_amd", "NUMBER", "set", "GCCGO", "gccgo", "set", "CC", "gcc", "set", "GOGCCFLAGS", "m", "NUMBER", "mthreads", "fmessage", "length", "NUMBER", "set", "CXX", "g", "set", "CGO_ENABLED", "NUMBER", "set", "CGO_CFLAGS", "g", "O", "NUMBER", "set", "CGO_CPPFLAGS", "set", "CGO_CXXFLAGS", "g", "O", "NUMBER", "set", "CGO_FFLAGS", "g", "O", "NUMBER", "set", "CGO_LDFLAGS", "g", "O", "NUMBER", "set", "PKG_CONFIG", "pkg", "config", "Have", "you", "tried", "use", "SetCellValue", "Yes", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "I", "NUMBER", "NUMBER", "But", "if", "I", "understand", "SetCellValue", "correctly", "it", "only", "switches", "based", "on", "data", "type", "and", "in", "this", "case", "it", "should", "call", "SetCellInt", "or", "be", "I", "miss", "something", "Result", "it", "the", "same", "NUMBER", "Output", "file", "Workbook", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "Workbook", "NUMBER", "xlsx", "Output", "file", "be", "smaller", "by", "NUMBER", "Kb", "and", "corrupted", "NUMBER", "xuri", "thank", "you", "NUMBER", "I", "have", "update", "the", "package", "and", "test", "NUMBER", "Works", "better", "than", "before", "NUMBER", "I", "be", "still", "get", "Removed", "Feature", "View", "from", "xl", "worksheets", "sheet", "NUMBER", "xml", "part", "but", "after", "I", "hit", "Repair", "my", "excel", "I", "can", "see", "a", "content", "NUMBER", "Output", "file", "size", "be", "similar", "from", "NUMBER", "NUMBER", "Kb", "to", "NUMBER", "NUMBER", "Kb", "NUMBER", "I", "will", "do", "some", "more", "test", "and", "let", "you", "know", "NUMBER", "xuri", "I", "made", "a", "diff", "of", "extracted", "xlsx", "file", "input", "and", "output", "before", "any", "change", "repairs", "NUMBER", "Found", "a", "difference", "in", "file", "styles", "NUMBER", "xml", "workbook", "NUMBER", "xml", "workbook", "NUMBER", "xml", "NUMBER", "rels", "sheet", "NUMBER", "xml", "NUMBER", "Attached", "be", "a", "diff", "of", "relevant", "file", "diff", "NUMBER", "txt", "LINK", "Skylar", "excelize", "file", "NUMBER", "diff", "NUMBER", "txt", "Which", "contact", "can", "I", "use", "to", "share", "it", "directly", "I", "have", "use", "your", "gmail", "NUMBER", "xuri", "thank", "you", "NUMBER", "I", "have", "update", "the", "package", "and", "test", "NUMBER", "Now", "I", "can", "open", "a", "sheet", "where", "one", "cell", "was", "update", "use", "excelize", "without", "a", "warning", "NUMBER", "Based", "on", "the", "above", "I", "consider", "this", "issue", "as", "solve", "NUMBER", "I", "do", "not", "want", "to", "close", "the", "issue", "directly", "without", "your", "confirmation", "NUMBER", "If", "I", "find", "any", "other", "issue", "I", "will", "report", "NUMBER", "_Side", "note", "output", "file", "be", "still", "smaller", "and", "I", "have", "sent", "you", "the", "input", "and", "output", "file", "via", "email", "NUMBER", "_", "Based", "on", "my", "test", "update", "excel", "file", "be", "readable", "and", "give", "any", "further", "warnings", "NUMBER", "Closing", "the", "issue", "NUMBER", "Thank", "you", "for", "fix", "NUMBER", "How", "can", "I", "get", "the", "text", "of", "cell", "s", "comment", "by", "refer", "to", "a", "cell", "s", "index", "for", "example", "something", "like", "GetCellComment", "sheet", "NUMBER", "A", "NUMBER", "I", "have", "checked", "the", "excelize", "godoc", "and", "it", "seems", "we", "can", "just", "Add", "comments", "to", "cell", "but", "not", "Read", "from", "it", "NUMBER", "Btw", "excelize", "be", "so", "good", "and", "I", "really", "like", "it", "NUMBER", "The", "testsuite", "uses", "almost", "only", "t", "NUMBER", "Log", "instead", "of", "validating", "assertions", "and", "fail", "with", "t", "NUMBER", "Error", "LINK", "T", "NUMBER", "Error", "t", "NUMBER", "Fatal", "LINK", "T", "NUMBER", "Fatal", "or", "t", "NUMBER", "Fail", "LINK", "T", "NUMBER", "Error", "grep", "E", "c", "Error", "Fatal", "Fail", "panic", "_test", "NUMBER", "go", "excelize_test", "NUMBER", "go", "NUMBER", "sheet_test", "NUMBER", "go", "NUMBER", "This", "means", "that", "only", "code", "coverage", "be", "verify", "but", "regressions", "be", "not", "checked", "automatically", "humans", "have", "to", "read", "the", "go", "test", "v", "output", "and", "have", "to", "know", "what", "be", "expected", "that", "s", "not", "helpful", "for", "external", "contributors", "NUMBER", "It", "seems", "that", "most", "if", "err", "nil", "blocks", "in", "_test", "NUMBER", "go", "file", "that", "call", "t", "NUMBER", "Log", "could", "call", "t", "NUMBER", "Fatal", "instead", "NUMBER", "Before", "go", "if", "err", "nil", "t", "NUMBER", "Log", "err", "After", "go", "if", "err", "nil", "t", "NUMBER", "Fatal", "err", "xuri", "Would", "you", "accept", "a", "patch", "that", "fix", "this", "issue", "in", "the", "way", "I", "suggest", "in", "previous", "comment", "issuecomment", "NUMBER", "I", "have", "implement", "NUMBER", "Add", "support", "for", "setting", "SheetView", "NUMBER", "showGridLines", "by", "add", "two", "new", "methods", "SetSheetViewOptions", "sheetName", "string", "viewIndex", "int", "opts", "NUMBER", "SheetViewOption", "error", "GetSheetViewOptions", "sheetName", "string", "viewIndex", "int", "opts", "NUMBER", "SheetViewOptionPtr", "error", "The", "options", "value", "be", "given", "by", "the", "user", "through", "types", "that", "have", "privates", "methods", "that", "implement", "the", "private", "SheetViewOption", "and", "SheetViewOptionPtr", "interfaces", "DefaultGridColor", "bool", "RightToLeft", "bool", "ShowFormulas", "bool", "ShowGridLines", "bool", "ShowRowColHeaders", "bool", "Examples", "go", "err", "xl", "NUMBER", "SetSheetViewOptions", "Sheet", "NUMBER", "NUMBER", "excelize", "NUMBER", "ShowGridLines", "true", "go", "var", "showGridLines", "excelize", "NUMBER", "ShowGridLines", "err", "xl", "NUMBER", "GetSheetViewOptions", "Sheet", "NUMBER", "NUMBER", "showGridLines", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "eb", "NUMBER", "cadaa", "NUMBER", "ddf", "NUMBER", "caf", "NUMBER", "d", "NUMBER", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "b", "NUMBER", "a", "src", "pr", "el", "desc", "will", "increase", "coverage", "by", "NUMBER", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "width", "NUMBER", "height", "NUMBER", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "sheetview", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "c", "NUMBER", "hlZXR", "NUMBER", "aWV", "NUMBER", "Lmdv", "NUMBER", "TAG", "\u00f8", "lib", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "bGliLmdv", "NUMBER", "TAG", "NUMBER", "arrow_up", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "eb", "NUMBER", "e", "NUMBER", "e", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "Ready", "for", "review", "NUMBER", "xuri", "I", "have", "more", "improvement", "on", "other", "subjects", "printing", "in", "particular", "on", "which", "I", "m", "work", "NUMBER", "Could", "you", "give", "me", "some", "feedback", "on", "this", "one", "Squash", "do", "NUMBER", "I", "want", "to", "create", "a", "GET", "endpoint", "where", "the", "user", "downloads", "the", "xlxs", "file", "created", "with", "excelize", "NUMBER", "How", "can", "I", "achive", "such", "thing", "without", "actually", "creating", "a", "FS", "file", "NUMBER", "The", "below", "works", "but", "its", "far", "from", "ideal", "NUMBER", "func", "GenerateExcel", "w", "http", "NUMBER", "ResponseWriter", "r", "http", "NUMBER", "Request", "xlsx", "excelize", "NUMBER", "NewFile", "xlsx", "NUMBER", "NewSheet", "NUMBER", "Sheet", "NUMBER", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "A", "NUMBER", "Hello", "world", "NUMBER", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "B", "NUMBER", "NUMBER", "xlsx", "NUMBER", "SetActiveSheet", "NUMBER", "err", "xlsx", "NUMBER", "SaveAs", "NUMBER", "Workbook", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "os", "NUMBER", "Exit", "NUMBER", "data", "err", "ioutil", "NUMBER", "ReadFile", "NUMBER", "Workbook", "NUMBER", "xlsx", "if", "err", "nil", "log", "NUMBER", "Fatal", "err", "w", "NUMBER", "Header", "NUMBER", "Set", "Content", "Type", "application", "octet", "stream", "w", "NUMBER", "Header", "NUMBER", "Set", "Content", "Disposition", "attachment", "filename", "Workbook", "NUMBER", "xlsx", "w", "NUMBER", "Header", "NUMBER", "Set", "Content", "Transfer", "Encoding", "binary", "w", "NUMBER", "Header", "NUMBER", "Set", "Expires", "NUMBER", "http", "NUMBER", "ServeContent", "w", "r", "Workbook", "NUMBER", "xlxs", "time", "NUMBER", "Now", "bytes", "NUMBER", "NewReader", "data", "xuri", "Thanks", "I", "off", "work", "today", "NUMBER", "Will", "try", "this", "asap", "NUMBER", "Do", "I", "still", "need", "to", "xlxs", "NUMBER", "SaveAs", "xuri", "yeap", "that", "did", "it", "There", "be", "no", "need", "to", "SaveAs", "just", "Write", "w", "works", "NUMBER", "How", "about", "go", "func", "f", "File", "SendThroughHTTP", "w", "http", "NUMBER", "ResponseWriter", "filename", "string", "w", "NUMBER", "Header", "NUMBER", "Set", "Content", "Type", "application", "octet", "stream", "w", "NUMBER", "Header", "NUMBER", "Set", "Content", "Disposition", "attachment", "filename", "filename", "NUMBER", "xlsx", "w", "NUMBER", "Header", "NUMBER", "Set", "Content", "Transfer", "Encoding", "binary", "f", "NUMBER", "Write", "w", "cescoferraro", "That", "would", "add", "an", "unnecessary", "dependency", "of", "excelize", "on", "net", "http", "NUMBER", "cescoferraro", "as", "you", "mention", "in", "above", "comment", "we", "can", "achieve", "it", "without", "calling", "saveAs", "function", "NUMBER", "I", "have", "executed", "the", "above", "code", "after", "remove", "saveAs", "function", "NUMBER", "When", "i", "did", "HTTP", "request", "it", "give", "me", "Response", "in", "Binary", "format", "NUMBER", "func", "GenerateExcel", "w", "http", "NUMBER", "ResponseWriter", "r", "http", "NUMBER", "Request", "xlsx", "excelize", "NUMBER", "NewFile", "xlsx", "NUMBER", "NewSheet", "Sheet", "NUMBER", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "A", "NUMBER", "Hello", "world", "NUMBER", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "B", "NUMBER", "NUMBER", "xlsx", "NUMBER", "SetActiveSheet", "NUMBER", "w", "NUMBER", "Header", "NUMBER", "Set", "Content", "Type", "application", "octet", "stream", "w", "NUMBER", "Header", "NUMBER", "Set", "Content", "Disposition", "attachment", "filename", "Workbook", "NUMBER", "xlsx", "w", "NUMBER", "Header", "NUMBER", "Set", "Content", "Transfer", "Encoding", "binary", "w", "NUMBER", "Header", "NUMBER", "Set", "Expires", "NUMBER", "xlsx", "NUMBER", "Write", "w", "How", "can", "i", "save", "it", "as", "file", "with", "xlsx", "extension", "after", "make", "http", "request", "Please", "let", "me", "know", "if", "you", "need", "more", "detail", "NUMBER", "When", "saving", "the", "file", "directly", "to", "disk", "with", "xlsx", "NUMBER", "SaveAs", "NUMBER", "Workbook", "NUMBER", "xlsx", "the", "file", "opens", "properly", "and", "all", "be", "good", "NUMBER", "However", "when", "write", "to", "http", "NUMBER", "ResponseWriter", "as", "shown", "in", "sourabhkheterpal", "s", "example", "the", "file", "when", "saved", "isn", "t", "recognized", "and", "I", "cannot", "open", "it", "with", "an", "xlsx", "compatible", "application", "like", "Numbers", "NUMBER", "Now", "I", "m", "use", "the", "github", "NUMBER", "com", "awslabs", "aws", "lambda", "go", "api", "proxy", "handlerfunc", "github", "NUMBER", "com", "awslabs", "aws", "lambda", "go", "api", "proxy", "handlerfunc", "library", "which", "uses", "the", "base", "NUMBER", "StdEncoding", "NUMBER", "EncodeToString", "method", "to", "encode", "the", "body", "NUMBER", "Am", "I", "right", "in", "assuming", "this", "encoding", "be", "the", "problem", "as", "you", "mention", "xuri", "use", "write", "function", "return", "file", "instream", "the", "xlsx", "file", "downloaded", "open", "it", "isn", "t", "recognized", "and", "need", "to", "repair", "NUMBER", "can", "you", "tell", "me", "the", "problem", "Guys", "any", "solution", "for", "it", "Could", "you", "make", "getTotalRowsCols", "in", "row", "NUMBER", "go", "as", "public", "method", "Thank", "you", "I", "did", "not", "notice", "that", "NUMBER", "I", "think", "you", "could", "provide", "GetTotalRowsCols", "sheetName", "string", "w", "int", "h", "int", "use", "sheetName", "instead", "of", "internal", "XML", "file", "path", "NUMBER", "I", "can", "t", "find", "a", "solution", "to", "sort", "the", "excel", "based", "on", "a", "column", "NUMBER", "I", "have", "this", "file", "with", "NUMBER", "rows", "and", "I", "need", "to", "sort", "it", "based", "on", "the", "column", "content", "I", "have", "the", "rows", "xlsx", "NUMBER", "GetRows", "Sheet", "NUMBER", "which", "I", "have", "sorted", "myself", "but", "now", "I", "m", "looking", "for", "something", "like", "xlsx", "NUMBER", "SetRows", "rows", "Is", "there", "a", "way", "to", "inject", "such", "a", "rowset", "in", "one", "commando", "or", "do", "I", "have", "to", "write", "it", "myself", "too", "I", "tried", "searching", "the", "docs", "and", "the", "github", "sources", "but", "I", "didn", "t", "find", "an", "example", "with", "more", "separation", "of", "functionality", "NUMBER", "So", "I", "try", "to", "keep", "my", "main", "clean", "and", "I", "have", "this", "main", "snippet", "var", "fileName", "myfile", "NUMBER", "xlsx", "xlsx", "err", "excelize", "NUMBER", "OpenFile", "fileName", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "os", "NUMBER", "Exit", "NUMBER", "checkSheetName", "xlsx", "NUMBER", "MySheetname", "and", "in", "the", "same", "file", "func", "checkSheetName", "xlsx", "File", "sheetNr", "int", "sheetName", "string", "xlsx", "NUMBER", "SetActiveSheet", "NUMBER", "sheetName", "xlsx", "NUMBER", "GetSheetName", "NUMBER", "fmt", "NUMBER", "Println", "Sheetname", "sheetName", "but", "somehow", "it", "doesn", "t", "recognize", "the", "File", "part", "NUMBER", "Can", "you", "give", "me", "and", "the", "rest", "of", "us", "a", "hint", "in", "how", "to", "use", "this", "because", "I", "don", "t", "want", "to", "write", "one", "big", "main", "routine", "Nice", "thanks", "NUMBER", "Code", "be", "much", "more", "readable", "now", "Webservers", "which", "need", "to", "generate", "and", "serve", "excel", "file", "on", "the", "fly", "use", "the", "std", "golang", "http", "ServeContent", "now", "need", "to", "use", "an", "extra", "buffer", "to", "serve", "an", "excel", "file", "from", "memory", "NUMBER", "The", "File", "NUMBER", "Write", "function", "accepts", "a", "writer", "but", "often", "we", "want", "a", "reader", "NUMBER", "In", "the", "case", "of", "http", "NUMBER", "ServeContent", "we", "need", "a", "ReaderSeeker", "needs", "to", "know", "total", "size", "etc", "so", "you", "can", "t", "use", "an", "io", "NUMBER", "Pipe", "to", "connect", "an", "excelize", "writer", "to", "a", "reader", "it", "do", "not", "support", "seeking", "NUMBER", "SInce", "the", "File", "NUMBER", "Write", "function", "already", "makes", "use", "of", "an", "intermediate", "buffer", "provide", "a", "function", "which", "returns", "a", "ReaderSeeker", "be", "easy", "and", "could", "benefit", "many", "uses", "NUMBER", "PHPEXCEL\u56e0\u4e3a\u6709\u5185\u5b58\u6cc4\u6f0f\u7684\u539f\u56e0", "\u6240\u4ee5\u6211\u4eec\u51c6\u5907\u6362\u5e93", "\u8fd9\u4e2ago\u8bed\u8a00\u5f00\u53d1\u7684\u7c7b\u5e93", "\u6709\u505a\u8fc7\u538b\u6d4b\u5417", "\u751f\u6210", "NUMBER", "W\u4e2axlsx", "\u9700\u8981\u5927\u6982\u591a\u4e45", "\u53e6\u5916", "\u4e0d\u4f1a\u53d1\u751f\u5185\u5b58\u6cc4\u6f0f\u5427", "NUMBER", "\u4e2a\u4eba\u4f7f\u7528\u7684\u60c5\u51b5", "\u5982\u679c\u5bf9\u6027\u80fd\u6709\u6781\u5176\u4e25\u683c\u8981\u6c42", "\u5efa\u8bae\u4e0d\u8981\u4f7f\u7528", "NUMBER", "\u6682\u65f6\u6ca1\u6709\u53d1\u751f\u5185\u5b58\u6cc4\u9732\u60c5\u51b5", "NUMBER", "\u8fd9\u4e2a\u5e93\u7684\u7279\u70b9\u662f\u5bf9excel\u7684\u4e00\u4e9b\u529f\u80fd\u4e0a\u7684\u652f\u6301\u6bd4\u5176\u4ed6\u5e93\u8981\u4e30\u5bcc\u7684\u591a", "NUMBER", "\u4e2a\u4eba\u8ba4\u4e3a", "\u5982\u679c\u4f60\u7684\u8981\u6c42\u5f88\u4e25\u683c", "\u5c31\u662fjava\u7684poi", "\u8fd9\u4e2a\u5e94\u8be5\u662f\u516c\u8ba4\u7684\u5404\u65b9\u9762\u7ecf\u5f97\u4f4f\u8003\u9a8c\u7684\u5e93", "\u6211\u5bfc\u5165\u7684excel\u7684\u65e5\u671f\u4e3a", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "\u4f46\u662f\u8bfb\u53d6\u51fa\u5566\u7684\u5374\u662f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "\u683c\u5f0f\u53d8\u4e86", "\u79d2\u4e5f\u6ca1\u4e86", "go", "env", "GOARCH", "amd", "NUMBER", "GOBIN", "GOEXE", "GOHOSTARCH", "amd", "NUMBER", "GOHOSTOS", "linux", "GOOS", "linux", "GOPATH", "home", "mario", "src", "go", "GORACE", "GOROOT", "usr", "lib", "go", "GOTOOLDIR", "usr", "lib", "go", "pkg", "tool", "linux_amd", "NUMBER", "GCCGO", "gccgo", "CC", "gcc", "GOGCCFLAGS", "fPIC", "m", "NUMBER", "pthread", "fmessage", "length", "NUMBER", "fdebug", "prefix", "map", "tmp", "go", "build", "NUMBER", "tmp", "go", "build", "gno", "record", "gcc", "switches", "CXX", "g", "CGO_ENABLED", "NUMBER", "CGO_CFLAGS", "g", "O", "NUMBER", "CGO_CPPFLAGS", "CGO_CXXFLAGS", "g", "O", "NUMBER", "CGO_FFLAGS", "g", "O", "NUMBER", "CGO_LDFLAGS", "g", "O", "NUMBER", "PKG_CONFIG", "pkg", "config", "Error", "panic", "runtime", "error", "index", "out", "of", "range", "goroutine", "NUMBER", "run", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "File", "NUMBER", "SetCellStr", "NUMBER", "xc", "NUMBER", "NUMBER", "x", "NUMBER", "db", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "xc", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "xc", "NUMBER", "NUMBER", "x", "NUMBER", "home", "mario", "src", "go", "src", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "cell", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "NUMBER", "File", "NUMBER", "SetCellValue", "NUMBER", "xc", "NUMBER", "NUMBER", "x", "NUMBER", "db", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "xc", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "dc", "NUMBER", "NUMBER", "xc", "NUMBER", "f", "NUMBER", "home", "mario", "src", "go", "src", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "cell", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "main", "NUMBER", "main", "home", "mario", "src", "go", "src", "github", "NUMBER", "com", "nuveo", "main", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "f", "NUMBER", "exit", "status", "NUMBER", "code", "go", "package", "main", "import", "bufio", "fmt", "os", "strings", "github", "NUMBER", "com", "NUMBER", "EntSecGroup", "Skylar", "excelize", "func", "main", "f", "err", "os", "NUMBER", "Open", "data", "csv_tmp_file", "NUMBER", "csv", "if", "err", "nil", "panic", "err", "NUMBER", "Error", "defer", "f", "NUMBER", "Close", "var", "count", "int", "xlsx", "excelize", "NUMBER", "NewFile", "Create", "a", "new", "sheet", "NUMBER", "sc", "bufio", "NUMBER", "NewScanner", "f", "sc", "NUMBER", "Split", "bufio", "NUMBER", "ScanLines", "for", "sc", "NUMBER", "Scan", "if", "count", "NUMBER", "headerTextSplited", "strings", "NUMBER", "Split", "sc", "NUMBER", "Text", "for", "i", "header", "range", "headerTextSplited", "fmt", "NUMBER", "Printf", "s", "s", "n", "excelize", "NUMBER", "ToAlphaString", "i", "header", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "excelize", "NUMBER", "ToAlphaString", "i", "header", "count", "continue", "valuesTextSplited", "strings", "NUMBER", "Split", "sc", "NUMBER", "Text", "for", "i", "value", "range", "valuesTextSplited", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "fmt", "NUMBER", "Sprintf", "s", "s", "excelize", "NUMBER", "ToAlphaString", "i", "count", "value", "count", "Save", "xlsx", "file", "by", "the", "given", "path", "NUMBER", "err", "xlsx", "NUMBER", "SaveAs", "NUMBER", "teste_excelize", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "os", "NUMBER", "Exit", "NUMBER", "\u82f1\u8bed\u4e0d\u597d", "\u89c1\u8c05", "\u7248\u672c", "NUMBER", "\u4ee3\u7801\u7528\u7684readme\u5b9e\u4f8b", "excel\u4e3a", "NUMBER", "\u521b\u5efa\u7684excel\u6253\u5f00\u62a5\u9519", "excel\u65e0\u6cd5\u6253\u5f00\u6587\u4ef6", "\u56e0\u4e3a\u6587\u4ef6\u683c\u5f0f\u6216\u6587\u4ef6\u6269\u5c55\u540d\u65e0\u6548", "\u8bf7\u786e\u5b9a\u6587\u4ef6\u672a\u635f\u574f", "\u5e76\u4e14\u6587\u4ef6\u6269\u5c55\u540d\u4e0e\u6587\u4ef6\u7684\u683c\u5f0f\u5339\u914d", "So", "I", "ve", "tried", "this", "func", "ExportarExcel", "path", "string", "error", "file", "excelize", "NUMBER", "NewFile", "detalle", "Detalle", "file", "NUMBER", "NewSheet", "NUMBER", "detalle", "file", "NUMBER", "SetCellValue", "detalle", "A", "NUMBER", "ID", "file", "NUMBER", "SetActiveSheet", "NUMBER", "err", "file", "NUMBER", "SaveAs", "path", "if", "err", "nil", "log", "NUMBER", "Fatal", "err", "return", "nil", "I", "get", "a", "file", "with", "the", "sheet", "created", "but", "has", "nothing", "in", "A", "NUMBER", "cell", "NUMBER", "None", "error", "be", "returned", "NUMBER", "salida", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "salida", "NUMBER", "xlsx", "Oh", "You", "change", "the", "API", "That", "s", "why", "my", "program", "doesn", "t", "work", "correctly", "I", "stumbled", "upon", "a", "bug", "NUMBER", "If", "you", "pass", "a", "float", "NUMBER", "to", "SetCellValue", "and", "it", "be", "NaN", "it", "causes", "a", "corrupt", "NUMBER", "xlsm", "file", "NUMBER", "I", "simply", "use", "math", "NUMBER", "IsNaN", "to", "check", "prior", "to", "SetCellValue", "and", "that", "the", "solve", "problem", "NUMBER", "just", "not", "use", "double", "for", "NUMBER", "range", "NUMBER", "Thank", "you", "very", "much", "get", "it", "Hi", "there", "my", "xlsx", "file", "like", "A", "NUMBER", "NUMBER", "A", "NUMBER", "abc", "I", "use", "xlsx", "NUMBER", "GetCellValue", "Sheet", "NUMBER", "A", "NUMBER", "the", "value", "be", "but", "the", "axis", "set", "A", "NUMBER", "can", "get", "NUMBER", "Hi", "When", "I", "change", "the", "sheet", "name", "from", "sheet", "NUMBER", "to", "T", "NUMBER", "in", "the", "sample", "code", "I", "find", "that", "there", "was", "no", "data", "in", "the", "generate", "excel", "also", "I", "could", "not", "get", "the", "data", "use", "T", "NUMBER", "NUMBER", "Look", "at", "the", "source", "code", "in", "the", "sheet", "NUMBER", "go", "file", "setContentTypes", "method", "the", "xml", "name", "has", "be", "fix", "to", "sheet", "index", "NUMBER", "So", "I", "use", "sheet", "index", "when", "set", "cell", "value", "but", "when", "I", "want", "to", "obtain", "sheetIndex", "I", "must", "use", "T", "NUMBER", "NUMBER", "This", "be", "too", "inconvenient", "Is", "there", "any", "way", "to", "solve", "this", "question", "Thx", "o", "that", "s", "very", "good", "thank", "you", "sir", "input_campinas", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "input_campinas", "NUMBER", "xlsx", "package", "main", "import", "bytes", "fmt", "io", "ioutil", "os", "strconv", "github", "NUMBER", "com", "xuri", "excelize", "func", "main", "f", "_", "ioutil", "NUMBER", "ReadFile", "input_campinas", "NUMBER", "xlsx", "xlsx", "err", "excelize", "NUMBER", "OpenReader", "bytes", "NUMBER", "NewReader", "f", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "os", "NUMBER", "Exit", "NUMBER", "for", "sheetIndex", "_", "range", "xlsx", "NUMBER", "GetSheetMap", "fmt", "NUMBER", "Println", "NUMBER", "xlsx", "NUMBER", "GetRowVisible", "sheet", "strconv", "NUMBER", "Itoa", "sheetIndex", "NUMBER", "rows", "xlsx", "NUMBER", "GetRows", "sheet", "strconv", "NUMBER", "Itoa", "sheetIndex", "fmt", "NUMBER", "Println", "len", "rows", "for", "_", "row", "range", "rows", "for", "_", "colCell", "range", "row", "fmt", "NUMBER", "Print", "colCell", "t", "I", "d", "be", "one", "of", "the", "first", "to", "contribute", "Very", "very", "good", "xuri", "thanks", "xuri", "more", "case", "not", "read", "input", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "input", "NUMBER", "xlsx", "ops", "sorry", "NUMBER", "xuri", "Thanks", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "http", "panic", "serving", "NUMBER", "NUMBER", "runtime", "error", "index", "out", "of", "range", "goroutine", "NUMBER", "run", "net", "http", "NUMBER", "conn", "NUMBER", "serve", "NUMBER", "func", "NUMBER", "NUMBER", "xc", "NUMBER", "da", "NUMBER", "D", "work", "golang", "NUMBER", "src", "net", "http", "server", "NUMBER", "go", "NUMBER", "NUMBER", "xd", "NUMBER", "panic", "NUMBER", "x", "NUMBER", "ed", "NUMBER", "e", "NUMBER", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "D", "work", "golang", "NUMBER", "src", "runtime", "panic", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "github", "NUMBER", "com", "xuri", "excelize", "NUMBER", "File", "NUMBER", "GetCellValue", "NUMBER", "xc", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "b", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "xc", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "xf", "NUMBER", "xa", "NUMBER", "D", "work", "everything", "goLang", "package", "src", "github", "NUMBER", "com", "xuri", "excelize", "cell", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "cd", "xuri", "I", "have", "the", "same", "problem", "when", "I", "use", "the", "function", "GetCellValue", "it", "works", "when", "the", "cell", "value", "be", "number", "but", "it", "can", "t", "work", "when", "the", "cell", "value", "be", "English", "or", "Chinese", "NUMBER", "My", "go", "version", "be", "NUMBER", "too", "the", "same", "code", "can", "work", "well", "at", "version", "NUMBER", "the", "reason", "it", "can", "t", "work", "be", "runtime", "error", "index", "out", "of", "range", "github", "NUMBER", "com", "xuri", "excelize", "NUMBER", "File", "NUMBER", "GetCellValue", "NUMBER", "xc", "NUMBER", "a", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "xc", "NUMBER", "de", "NUMBER", "NUMBER", "xa", "NUMBER", "xuri", "Thanks", "We", "have", "find", "the", "bug", "of", "go", "NUMBER", "because", "the", "font", "size", "we", "set", "be", "NUMBER", "but", "when", "we", "set", "it", "to", "NUMBER", "it", "works", "the", "xml", "NUMBER", "Unmarshal", "byte", "f", "NUMBER", "readXML", "xl", "sharedStrings", "NUMBER", "xml", "sharedStrings", "should", "return", "err", "and", "check", "and", "the", "err", "be", "strconv", "NUMBER", "ParseInt", "parsing", "NUMBER", "invalid", "syntax", "xuri", "Thanks", "the", "file", "be", "here", "test", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "test", "NUMBER", "xlsx", "and", "the", "test", "file", "be", "import", "test", "fmt", "github", "NUMBER", "com", "xuri", "excelize", "func", "TestBug", "t", "test", "NUMBER", "T", "xlsx", "err", "excelize", "NUMBER", "OpenFile", "NUMBER", "test", "NUMBER", "xlsx", "if", "err", "nil", "t", "NUMBER", "Error", "err", "fmt", "NUMBER", "Println", "xlsx", "NUMBER", "GetCellValue", "sheet", "NUMBER", "A", "NUMBER", "How", "to", "upload", "excel", "file", "to", "database", "by", "read", "header", "column", "name", "first", "row", "as", "index", "Now", "my", "problem", "be", "when", "I", "import", "data", "form", "excel", "sheet", "to", "the", "database", "in", "particular", "format", "NUMBER", "Like", "Table", "name", "Mytable", "id", "name", "surname", "email", "date", "and", "the", "excel", "file", "I", "be", "use", "to", "import", "have", "a", "same", "format", "NUMBER", "But", "a", "format", "can", "change", "Like", "id", "surname", "name", "date", "email", "how", "can", "I", "map", "the", "columns", "from", "excel", "file", "to", "the", "database", "table", "so", "that", "correct", "data", "should", "enter", "into", "the", "data", "table", "NUMBER", "Yes", "column", "name", "be", "same", "with", "database", "how", "to", "specify", "column", "coordinates", "with", "column", "name", "not", "use", "number", "So", "be", "it", "possible", "to", "upload", "for", "_", "sheet", "range", "xlFile", "NUMBER", "Sheets", "for", "a", "_", "range", "sheet", "NUMBER", "Rows", "if", "a", "NUMBER", "var", "profile_refid", "sheet", "NUMBER", "Cell", "a", "NUMBER", "NUMBER", "Value", "sheet", "NUMBER", "Cell", "a", "profile_refid", "NUMBER", "Value", "var", "profile_extid", "sheet", "NUMBER", "Cell", "a", "NUMBER", "NUMBER", "Value", "sheet", "NUMBER", "Cell", "a", "profile_extid", "NUMBER", "Value", "var", "profile_salutation", "sheet", "NUMBER", "Cell", "a", "NUMBER", "NUMBER", "Value", "sheet", "NUMBER", "Cell", "a", "profile_salutation", "NUMBER", "Value", "var", "profile_name", "sheet", "NUMBER", "Cell", "a", "NUMBER", "NUMBER", "Value", "sheet", "NUMBER", "Cell", "a", "profile_name", "NUMBER", "Value", "because", "my", "column", "name", "excel", "below", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "fca", "NUMBER", "ba", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "af", "NUMBER", "f", "NUMBER", "c", "NUMBER", "png", "But", "field", "in", "my", "table", "like", "this", "profile_salutation", "profile_name", "profile_refid", "profile_extid", "so", "not", "equal", "position", "with", "excel", "column", "Adjust", "could", "be", "automatically", "identification", "with", "header", "table", "name", "Like", "this", "row", "profile_refid", "row", "profile_extid", "row", "profile_salutation", "row", "profile_name", "Something", "like", "this", "LINK", "sharpcorner", "NUMBER", "com", "UploadFile", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "inserting", "excel", "file", "records", "into", "sql", "server", "database", "use", "Yes", "xuri", "thank", "you", "I", "have", "solve", "it", "i", "use", "API", "demo", "but", "get", "chart", "be", "blank", "categories", "map", "string", "string", "A", "NUMBER", "Small", "A", "NUMBER", "Normal", "A", "NUMBER", "Large", "B", "NUMBER", "Apple", "C", "NUMBER", "Orange", "D", "NUMBER", "Pear", "values", "map", "string", "int", "B", "NUMBER", "NUMBER", "C", "NUMBER", "NUMBER", "D", "NUMBER", "NUMBER", "B", "NUMBER", "NUMBER", "C", "NUMBER", "NUMBER", "D", "NUMBER", "NUMBER", "B", "NUMBER", "NUMBER", "C", "NUMBER", "NUMBER", "D", "NUMBER", "NUMBER", "xlsx", "excelize", "NUMBER", "NewFile", "for", "k", "v", "range", "categories", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "k", "v", "for", "k", "v", "range", "values", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "k", "v", "xlsx", "NUMBER", "AddChart", "Sheet", "NUMBER", "F", "NUMBER", "type", "bar", "NUMBER", "D", "series", "name", "Sheet", "NUMBER", "A", "NUMBER", "categories", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "values", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "name", "Sheet", "NUMBER", "A", "NUMBER", "categories", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "values", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "name", "Sheet", "NUMBER", "A", "NUMBER", "categories", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "values", "Sheet", "NUMBER", "B", "NUMBER", "D", "NUMBER", "format", "x_scale", "NUMBER", "y_scale", "NUMBER", "x_offset", "NUMBER", "y_offset", "NUMBER", "print_obj", "true", "lock_aspect_ratio", "false", "locked", "false", "legend", "position", "bottom", "show_legend_key", "false", "title", "name", "Fruit", "Line", "Chart", "plotarea", "show_bubble_size", "true", "show_cat_name", "false", "show_leader_lines", "false", "show_percent", "true", "show_series_name", "true", "show_val", "true", "show_blanks_as", "zero", "err", "xlsx", "NUMBER", "SaveAs", "NUMBER", "Workbook", "NUMBER", "xlsx", "I", "find", "the", "reason", "I", "didn", "t", "use", "office", "to", "open", "it", "NUMBER", "I", "hava", "another", "question", "Can", "I", "save", "this", "chart", "as", "picture", "in", "local", "Nice", "work", "thank", "you", "When", "be", "the", "release", "Travis", "will", "fail", "because", "of", "usage", "of", "github", "NUMBER", "com", "xuri", "excelize", "format", "package", "NUMBER", "xlsx", "excelize", "NUMBER", "NewFile", "xlsx", "NUMBER", "SetColWidth", "Sheet", "NUMBER", "A", "A", "NUMBER", "for", "i", "NUMBER", "i", "TAG", "Merging", "NUMBER", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "desc", "into", "master", "LINK", "Skylar", "excelize", "commit", "bbed", "NUMBER", "f", "NUMBER", "dc", "NUMBER", "d", "NUMBER", "bb", "NUMBER", "ab", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "acdafa", "NUMBER", "cd", "NUMBER", "src", "pr", "el", "desc", "will", "decrease", "coverage", "by", "NUMBER", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "Impacted", "file", "tree", "graph", "LINK", "Skylar", "excelize", "pull", "NUMBER", "graphs", "tree", "NUMBER", "svg", "width", "NUMBER", "height", "NUMBER", "token", "NUMBER", "yoenXP", "NUMBER", "JO", "src", "pr", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "Coverage", "\u0394", "cell", "NUMBER", "go", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "tree", "diff", "Y", "NUMBER", "VsbC", "NUMBER", "nbw", "NUMBER", "TAG", "NUMBER", "arrow_down", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "footer", "NUMBER", "Last", "update", "bbed", "NUMBER", "f", "NUMBER", "a", "NUMBER", "d", "LINK", "Skylar", "excelize", "pull", "NUMBER", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "Hi", "This", "be", "my", "first", "commit", "in", "open", "source", "community", "NUMBER", "I", "may", "not", "be", "familiar", "with", "the", "rules", "of", "this", "community", "NUMBER", "If", "you", "have", "things", "about", "my", "commit", "I", "would", "like", "to", "ask", "you", "for", "any", "advices", "NUMBER", "Hello", "I", "be", "use", "your", "lib", "in", "read", "in", "some", "xlsx", "file", "NUMBER", "But", "I", "fount", "that", "excelize", "cannot", "read", "in", "the", "content", "for", "every", "xlsx", "file", "NUMBER", "I", "attached", "an", "example", "file", "which", "I", "tried", "out", "by", "tealeg", "xlsx", "NUMBER", "Can", "you", "help", "me", "finding", "out", "the", "problem", "s", "There", "be", "NUMBER", "sheets", "in", "the", "example", "xlsx", "file", "But", "only", "two", "can", "be", "read", "out", "by", "excelize", "NUMBER", "errorin", "NUMBER", "EntSecGroup", "Skylar", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "errorin", "NUMBER", "EntSecGroup", "Skylar", "NUMBER", "xlsx", "Thanks", "NUMBER", "It", "works", "by", "your", "code", "NUMBER", "I", "write", "the", "following", "code", "NUMBER", "And", "it", "didn", "t", "work", "in", "some", "unsure", "case", "NUMBER", "Did", "I", "use", "it", "in", "a", "wrong", "way", "TAG", "TAG", "sheets", "xlsx", "NUMBER", "GetSheetMap", "for", "i", "range", "sheets", "fmt", "NUMBER", "Println", "i", "sheets", "i", "rows", "xlsx", "NUMBER", "GetRows", "sheets", "i", "for", "_", "row", "range", "rows", "for", "_", "colCell", "range", "row", "fmt", "NUMBER", "Print", "colCell", "t", "fmt", "NUMBER", "Println", "TAG", "TAG", "Thanks", "xuri", "NUMBER", "It", "works", "well", "NUMBER", "input", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "input", "NUMBER", "xlsx", "package", "main", "import", "log", "time", "github", "NUMBER", "com", "xuri", "excelize", "var", "check", "func", "err", "error", "if", "err", "nil", "panic", "err", "func", "main", "xlsx", "err", "excelize", "NUMBER", "OpenFile", "input", "NUMBER", "xlsx", "check", "err", "v", "err", "time", "NUMBER", "Parse", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "check", "err", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "A", "NUMBER", "v", "err", "xlsx", "NUMBER", "SaveAs", "NUMBER", "output", "NUMBER", "xlsx", "if", "err", "nil", "log", "NUMBER", "Fatalln", "err", "Bug", "open", "output", "NUMBER", "xlsx", "in", "excel", "and", "the", "D", "NUMBER", "should", "be", "NUMBER", "In", "this", "example", "code", "it", "be", "wrong", "NUMBER", "package", "main", "import", "fmt", "log", "github", "NUMBER", "com", "xuri", "excelize", "func", "main", "xlsx", "excelize", "NUMBER", "NewFile", "sRow", "NUMBER", "for", "i", "NUMBER", "i", "TAG", "NUMBER", "digit", "x", "NUMBER", "NUMBER", "colName", "string", "int", "A", "digit", "colName", "x", "x", "NUMBER", "digit", "NUMBER", "return", "colName", "xuri", "I", "find", "there", "be", "SetCellStyle", "v", "A", "NUMBER", "A", "NUMBER", "number_format", "NUMBER", "method", "to", "setup", "time", "value", "NUMBER", "But", "I", "can", "not", "save", "as", "format", "like", "yyyy", "mm", "dd", "or", "yyyy", "m", "d", "NUMBER", "Is", "it", "possible", "to", "support", "a", "custom", "format", "method", "like", "this", "DBNum", "NUMBER", "NUMBER", "e", "\u5e74", "m", "\u6708", "d", "\u65e5", "LINK", "dates", "display", "in", "different", "languages", "What", "s", "the", "difference", "between", "zh", "tw", "NUMBER", "NUMBER", "e", "m", "d", "and", "zh", "tw", "NUMBER", "NUMBER", "e", "m", "d", "I", "guess", "that", "be", "mapping", "to", "\u897f\u66c6", "NUMBER", "\u4e2d\u83ef\u6c11\u570b\u66c6", "NUMBER", "NUMBER", "NUMBER", "so", "it", "require", "a", "year", "subtract", "function", "when", "convert", "the", "number", "into", "string", "NUMBER", "BTW", "have", "you", "ever", "read", "this", "document", "LINK", "_jones", "NUMBER", "NUMBER", "NUMBER", "simple", "spreadsheetml", "file", "part", "NUMBER", "format", "maybe", "it", "be", "useful", "for", "customized", "format", "xuri", "NUMBER", "could", "you", "put", "example", "of", "builtin", "custom", "number", "format", "in", "README", "NUMBER", "md", "NUMBER", "In", "my", "Excel", "NUMBER", "zh_TW", "the", "number_format", "NUMBER", "will", "set", "the", "output", "as", "yyyy", "mm", "dd", "NUMBER", "But", "in", "excelize", "s", "document", "it", "be", "m", "d", "yy", "NUMBER", "I", "be", "trying", "to", "hide", "the", "columns", "of", "a", "spreadsheet", "from", "my", "debian", "ubuntu", "gnome", "NUMBER", "I", "m", "use", "the", "xlsx", "NUMBER", "SetColVisible", "Sheet", "NUMBER", "N", "false", "method", "however", "when", "I", "reopen", "the", "xlsx", "in", "Libre", "Office", "nothing", "has", "change", "NUMBER", "When", "I", "uploaded", "the", "xlsx", "document", "to", "google", "docs", "it", "hid", "the", "N", "Column", "properly", "NUMBER", "When", "I", "opened", "the", "xlsx", "document", "on", "a", "windows", "vm", "with", "MS", "Excel", "the", "column", "was", "hidden", "successfully", "NUMBER", "Is", "there", "a", "config", "or", "something", "I", "be", "miss", "in", "the", "code", "to", "ensure", "it", "hides", "on", "linux", "s", "Libre", "Office", "I", "be", "run", "go", "NUMBER", "and", "use", "ubuntu", "gnome", "NUMBER", "LTS", "Please", "assist", "Hi", "This", "be", "the", "file", "after", "be", "edit", "through", "the", "go", "program", "Please", "see", "attached", "NB", "I", "have", "remove", "critical", "data", "from", "spreadsheet", "sample", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "sample", "NUMBER", "xlsx", "Apologies", "for", "miscommunication", "NUMBER", "This", "be", "a", "copy", "of", "the", "spreadsheet", "and", "in", "this", "copy", "I", "ve", "hidden", "L", "as", "you", "have", "said", "NUMBER", "Please", "see", "update", "xlsx", "document", "sample", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "sample", "NUMBER", "xlsx", "Also", "Please", "see", "the", "following", "screenshots", "from", "Libre", "Office", "google", "sheets", "NUMBER", "I", "have", "the", "same", "template", "open", "googlesheets", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "c", "NUMBER", "babbfc", "NUMBER", "e", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "fcdfa", "NUMBER", "c", "NUMBER", "png", "libreoffice", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "c", "NUMBER", "bc", "NUMBER", "ac", "NUMBER", "e", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "a", "NUMBER", "dc", "NUMBER", "d", "NUMBER", "f", "NUMBER", "png", "I", "be", "run", "Libre", "Office", "Version", "NUMBER", "I", "have", "but", "I", "see", "that", "there", "s", "be", "recent", "change", "as", "well", "NUMBER", "I", "m", "going", "to", "update", "test", "and", "get", "back", "to", "you", "No", "luck", "yet", "NUMBER", "I", "be", "going", "to", "uninstall", "go", "and", "the", "xuri", "package", "NUMBER", "Would", "having", "both", "the", "xuri", "and", "the", "previous", "Luxurioust", "package", "influence", "the", "program", "in", "any", "way", "even", "though", "I", "m", "importing", "the", "xuri", "package", "in", "my", "program", "There", "s", "be", "no", "difference", "NUMBER", "The", "customer", "s", "I", "m", "creating", "this", "for", "won", "t", "be", "in", "use", "of", "linux", "so", "I", "ll", "leave", "it", "as", "be", "for", "now", "NUMBER", "Thanks", "for", "your", "assistance", "though", "Hello", "Ri", "NUMBER", "Under", "Linux", "I", "test", "on", "Astra", "Linux", "the", "library", "writes", "an", "incorrect", "xlsx", "file", "NUMBER", "Help", "please", "this", "be", "very", "important", "for", "me", "NUMBER", "package", "main", "import", "github", "NUMBER", "com", "Luxurioust", "excelize", "func", "main", "xlsx", "_", "excelize", "NUMBER", "OpenFile", "NUMBER", "xlsx", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "A", "NUMBER", "NUMBER", "xlsx", "NUMBER", "SaveAs", "NUMBER", "xlsx", "Attachment", "NUMBER", "xlsx", "file", "created", "for", "windows", "NUMBER", "xlsx", "file", "created", "for", "windows", "NUMBER", "_linux", "NUMBER", "xlsx", "file", "created", "for", "linux", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "NUMBER", "xlsx", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "NUMBER", "xlsx", "NUMBER", "_linux", "NUMBER", "xlsx", "LINK", "Skylar", "excelize", "file", "NUMBER", "NUMBER", "_linux", "NUMBER", "xlsx", "Thank", "you", "I", "ll", "check", "NUMBER", "Yes", "I", "have", "NUMBER", "I", "understand", "everything", "I", "ll", "update", "the", "Go", "NUMBER", "Many", "thanks", "Hi", "I", "be", "use", "pre", "created", "NUMBER", "xlsx", "file", "as", "a", "report", "template", "NUMBER", "Sometimes", "I", "need", "repeat", "set", "of", "rows", "NUMBER", "Would", "be", "nice", "to", "have", "a", "method", "what", "can", "receive", "startRow", "endRow", "and", "be", "able", "to", "insert", "that", "rows", "before", "nRow", "NUMBER", "What", "do", "you", "think", "Is", "it", "possible", "now", "Thx", "Regards", "Robert", "Hi", "xuri", "NUMBER", "Could", "you", "please", "give", "your", "wechat", "or", "QQ", "It", "will", "be", "easy", "to", "communicate", "with", "wechat", "or", "QQ", "NUMBER", "I", "want", "to", "contribute", "the", "project", "NUMBER", "I", "think", "Insert", "Delete", "and", "Copy", "Row", "be", "very", "nice", "to", "have", "NUMBER", "thank", "you", "very", "much", "NUMBER", "It", "seems", "that", "neither", "InsertRowAfter", "rn", "int", "nor", "InsertRowBefore", "rn", "int", "function", "be", "support", "NUMBER", "and", "neither", "InsertColumnAfter", "cn", "int", "nor", "InsertColumnBefore", "cn", "int", "function", "be", "support", "NUMBER", "It", "s", "useful", "when", "combining", "a", "template", "with", "dynamic", "data", "varied", "rows", "or", "columns", "NUMBER", "Any", "suggestion", "Thank", "you", "Thank", "you", "I", "ve", "tried", "InsertRow", "and", "it", "works", "NUMBER", "NUMBER", "open", "xlsx", "quite", "complex", "format", "styles", "and", "etc", "NUMBER", "copy", "from", "Col", "A", "into", "Col", "B", "NUMBER", "set", "Col", "A", "equal", "NUMBER", "NUMBER", "save", "as", "a", "new", "file", "file", "looks", "different", "some", "cells", "at", "each", "row", "can", "be", "merge", "BUT", "Col", "A", "and", "Col", "B", "be", "simple", "only", "style", "format", "NUMBER", "More", "overs", "some", "rows", "quite", "a", "lot", "that", "I", "m", "not", "update", "after", "saving", "looks", "different", "NUMBER", "Let", "s", "recap", "I", "only", "update", "some", "simple", "cells", "at", "some", "rows", "NUMBER", "Why", "rows", "that", "I", "m", "not", "touching", "looks", "different", "hi", "NUMBER", "I", "will", "try", "to", "remove", "critical", "data", "and", "prepare", "file", "for", "you", "NUMBER", "Btw", "NUMBER", "what", "edition", "be", "your", "library", "based", "on", "LINK", "international", "NUMBER", "org", "publications", "standards", "Ecma", "NUMBER", "htm", "ok", "here", "be", "file", "before", "update", "LINK", "NUMBER", "after", "update", "LINK", "NUMBER", "What", "steps", "to", "reproduce", "NUMBER", "open", "before", "NUMBER", "at", "sheet", "NUMBER", "set", "NUMBER", "values", "row", "NUMBER", "NUMBER", "at", "sheet", "NUMBER", "set", "NUMBER", "values", "row", "NUMBER", "NUMBER", "save", "as", "a", "new", "file", "Open", "a", "new", "file", "and", "you", "will", "see", "that", "at", "sheet", "NUMBER", "we", "have", "broken", "format", "NUMBER", "I", "can", "t", "provide", "any", "data", "to", "much", "to", "cleanup", "but", "right", "now", "looks", "like", "only", "format", "on", "this", "page", "breaks", "NUMBER", "NUMBER", "looks", "fine", "NUMBER", "P", "NUMBER", "S", "NUMBER", "file", "size", "of", "after", "be", "much", "lesser", "about", "NUMBER", "k", "xuri", "Probably", "it", "s", "a", "good", "idea", "to", "write", "at", "Readme", "about", "ECMA", "NUMBER", "NUMBER", "edition", "Well", "it", "s", "much", "better", "now", "but", "still", "looks", "different", "NUMBER", "before", "NUMBER", "Mb", "file", "LINK", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "png", "dl", "NUMBER", "after", "NUMBER", "Mb", "file", "LINK", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "png", "dl", "NUMBER", "have", "no", "ideas", "why", "And", "file", "be", "still", "lesser", "by", "NUMBER", "kb", "after", "saving", "NUMBER", "Kb", "somewhere", "gone", "NUMBER", "If", "it", "s", "important", "look", "for", "G", "NUMBER", "at", "NUMBER", "sheet", "NUMBER", "I", "m", "talking", "about", "these", "cells", "lost", "their", "format", "after", "saving", "LINK", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "png", "dl", "NUMBER", "xuri", "do", "you", "mean", "that", "somewhere", "completeCol", "do", "something", "with", "cell", "that", "I", "didn", "t", "touch", "P", "NUMBER", "S", "NUMBER", "about", "performance", "impact", "be", "not", "so", "high", "at", "least", "for", "my", "case", "about", "NUMBER", "K", "rows", "I", "checked", "generate", "file", "visually", "looks", "same", "Huh", "NUMBER", "anks", "man", "I", "start", "to", "afraid", "that", "I", "did", "a", "bad", "choice", "to", "choose", "Go", "without", "test", "saving", "ability", "of", "xls", "libs", "NUMBER", "I", "will", "get", "feedback", "from", "end", "user", "next", "week", "probably", "maybe", "I", "miss", "something", "NUMBER", "Hope", "everything", "be", "fine", "now", "I", "get", "another", "problem", "NUMBER", "After", "add", "a", "new", "Sheet", "at", "that", "file", "I", "m", "get", "Corrupted", "file", "and", "sometimes", "Excel", "can", "t", "repair", "it", "NUMBER", "I", "need", "to", "prepare", "data", "NUMBER", "But", "at", "least", "one", "issue", "be", "steps", "NUMBER", "file", "was", "saved", "at", "osx", "Excel", "NUMBER", "year", "NUMBER", "opened", "that", "file", "at", "osx", "Excel", "NUMBER", "and", "he", "asks", "to", "fix", "corrupted", "file", "after", "successful", "fix", "save", "it", "NUMBER", "open", "at", "osx", "Excel", "NUMBER", "he", "asks", "to", "fix", "corrupted", "file", "NUMBER", "Looks", "like", "there", "be", "something", "that", "break", "file", "Probably", "original", "issue", "was", "because", "of", "that", "NUMBER", "Ok", "looks", "like", "it", "has", "nothing", "with", "starter", "issue", "so", "i", "m", "closing", "it", "and", "will", "create", "a", "new", "one", "if", "required", "NUMBER", "Cant", "figure", "out", "how", "to", "do", "currency", "format", "NUMBER", "Does", "anyone", "know", "which", "number_format", "I", "can", "use", "in", "SetStyle", "TAG", "I", "scanned", "the", "doc", "reference", "NUMBER", "I", "could", "not", "find", "the", "func", "for", "reading", "a", "merge", "cell", "NUMBER", "Even", "the", "GetRows", "can", "give", "the", "content", "of", "the", "xlsx", "file", "only", "the", "first", "cell", "original", "cell", "of", "the", "big", "merge", "cell", "both", "merge", "row", "and", "column", "can", "get", "the", "content", "in", "the", "merge", "cell", "NUMBER", "Is", "there", "any", "methods", "can", "I", "distinguish", "the", "merge", "cell", "and", "the", "blank", "cell", "in", "black", "box", "xuri", "Thanks", "for", "your", "prompt", "response", "NUMBER", "It", "works", "now", "NUMBER", "xuri", "How", "to", "get", "merge", "cell", "info", "as", "github", "NUMBER", "com", "tealeg", "xlsx", "do", "cell", "GetCellInfo", "cell", "contains", "HMerge", "and", "VMerge", "and", "other", "info", "NUMBER", "I", "want", "to", "merge", "cells", "in", "column", "B", "C", "D", "etc", "according", "to", "column", "A", "grouped", "marking", "by", "merge", "cells", "NUMBER", "Thanks", "Hi", "guys", "Is", "there", "any", "way", "to", "remove", "row", "I", "m", "trying", "to", "use", "next", "way", "cycleXLSX", "NUMBER", "Sheet", "xl", "worksheets", "sheet", "NUMBER", "xml", "NUMBER", "SheetData", "NUMBER", "Row", "append", "cycleXLSX", "NUMBER", "Sheet", "xl", "worksheets", "sheet", "NUMBER", "xml", "NUMBER", "SheetData", "NUMBER", "Row", "irow", "cycleXLSX", "NUMBER", "Sheet", "xl", "worksheets", "sheet", "NUMBER", "xml", "NUMBER", "SheetData", "NUMBER", "Row", "irow", "NUMBER", "NUMBER", "But", "the", "meta", "data", "should", "be", "recalculated", "NUMBER", "Fantastic", "library", "Hoping", "to", "invoice", "a", "bit", "more", "for", "excel", "format", "for", "up", "come", "project", "and", "I", "d", "like", "a", "way", "to", "donate", "some", "of", "that", "back", "to", "you", "NUMBER", "Get", "a", "donate", "button", "somewhere", "Do", "you", "plan", "to", "read", "write", "Conditional", "Formatting", "add", "Thnks", "NUMBER", "How", "be", "the", "progress", "in", "implementation", "Well", "thank", "you", "NUMBER", "Will", "wait", "NUMBER", "\u0423\u0441\u043f\u0435\u0445\u043e\u0432", "Nice", "nice", "NUMBER", "Now", "let", "s", "try", "It", "nice", "NUMBER", "Perfect", "work", "NUMBER", "When", "support", "of", "the", "type", "formula", "expression", "Thnks", "How", "to", "add", "multiple", "rules", "cfRule", "with", "different", "priority", "to", "one", "conditional", "format", "declaration", "Example", "TAG", "TAG", "TAG", "AND", "G", "NUMBER", "NUMBER", "G", "NUMBER", "MIN", "H", "NUMBER", "J", "NUMBER", "MIN", "H", "NUMBER", "J", "NUMBER", "NUMBER", "TAG", "TAG", "TAG", "TAG", "AND", "G", "NUMBER", "NUMBER", "G", "NUMBER", "TAG", "TAG", "TAG", "TAG", "AND", "G", "NUMBER", "NUMBER", "G", "NUMBER", "MIN", "H", "NUMBER", "J", "NUMBER", "TAG", "TAG", "TAG", "Yes", "thank", "you", "NUMBER", "I", "create", "such", "an", "object", "either", "the", "last", "value", "or", "nothing", "at", "all", "in", "the", "file", "NUMBER", "Or", "be", "I", "doing", "something", "wrong", "xlFile", "NUMBER", "SetConditionalFormat", "Sheet", "NUMBER", "fmt", "NUMBER", "Sprintf", "G", "d", "G", "d", "start_position", "rows", "fmt", "NUMBER", "Sprintf", "type", "cell", "criteria", "TAG", "format", "d", "value", "H", "d", "format_green", "start_position", "format_red", "start_position", "\u6211\u4eec\u60f3\u77e5\u9053\u66f4\u6539api\u7684\u539f\u56e0", "\u4e3a\u4ec0\u4e48\u6ca1\u6709\u4fdd\u7559\u65e7\u7684api", "\u53ef\u4ee5\u6ce8\u91ca\u5e9f\u5f03\u7684\u554a", "It", "be", "better", "to", "mark", "a", "tag", "or", "version", "if", "it", "be", "not", "compatible", "with", "old", "API", "How", "to", "correctly", "read", "the", "date", "time", "from", "the", "cell", "I", "will", "explain", "the", "problem", "In", "the", "Excel", "file", "there", "be", "a", "cell", "E", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Format", "NUMBER", "Mar", "NUMBER", "I", "m", "trying", "to", "get", "it", "NUMBER", "e", "NUMBER", "xlsx", "NUMBER", "GetCellValue", "Sheet", "NUMBER", "e", "NUMBER", "println", "e", "NUMBER", "Output", "NUMBER", "xlsx", "NUMBER", "_", "NUMBER", "NUMBER", "NUMBER", "xlsx", "LINK", "_", "NUMBER", "NUMBER", "NUMBER", "xlsx", "Now", "it", "be", "clear", "NUMBER", "Thank", "you", "It", "be", "really", "useful", "when", "developers", "want", "to", "set", "the", "style", "of", "a", "new", "cell", "as", "same", "as", "an", "existent", "cell", "format", "painter", "NUMBER", "I", "join", "the", "request", "NUMBER", "In", "our", "project", "too", "there", "be", "such", "a", "need", "NUMBER", "We", "need", "this", "for", "integration", "with", "a", "xlsx", "js", "library", "NUMBER", "Thank", "you", "It", "will", "be", "useful", "NUMBER", "I", "hope", "that", "GetCellStyle", "will", "also", "appear", "NUMBER", "Reading", "a", "NUMBER", "xlsx", "file", "with", "a", "sheet", "of", "NUMBER", "rows", "and", "NUMBER", "columns", "Using", "function", "GetRows", "less", "that", "NUMBER", "second", "NUMBER", "Using", "function", "GetCellValue", "with", "looping", "construct", "about", "NUMBER", "seconds", "NUMBER", "Environment", "golang", "NUMBER", "darwin", "amd", "NUMBER", "Macbook", "Air", "NUMBER", "GHz", "CPU", "NUMBER", "GB", "RAM", "Thanks", "NUMBER", "PS", "it", "be", "quite", "strange", "to", "communicate", "with", "another", "Chinese", "by", "use", "English", "NUMBER", "Test", "Code", "go", "package", "main", "import", "fmt", "github", "NUMBER", "com", "Luxurioust", "excelize", "func", "main", "read", "xlsx", "err", "excelize", "NUMBER", "OpenFile", "test", "before", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Printf", "s", "n", "err", "NUMBER", "Error", "return", "table", "xlsx", "NUMBER", "GetRows", "sheet", "NUMBER", "fmt", "NUMBER", "Printf", "n", "fmt", "NUMBER", "Printf", "Before", "n", "for", "i", "NUMBER", "i", "TAG", "Can", "I", "extract", "NUMBER", "Got", "it", "NUMBER", "Is", "it", "a", "laborious", "functional", "Is", "it", "difficult", "to", "implement", "it", "Maybe", "it", "can", "be", "ported", "from", "tealeg", "xlsx", "Yes", "indeed", "this", "be", "not", "the", "easiest", "task", "NUMBER", "In", "tealeg", "xlsx", "it", "be", "possible", "to", "read", "the", "already", "calculated", "value", "NUMBER", "Example", "NUMBER", "xlsx", "A", "NUMBER", "NUMBER", "A", "NUMBER", "NUMBER", "A", "NUMBER", "SUM", "A", "NUMBER", "A", "NUMBER", "excelFileName", "NUMBER", "xlsx", "xlFile", "_", "xlsx", "NUMBER", "OpenFile", "excelFileName", "a", "NUMBER", "xlFile", "NUMBER", "Sheets", "NUMBER", "NUMBER", "Rows", "NUMBER", "NUMBER", "Cells", "NUMBER", "a", "NUMBER", "SetInt", "NUMBER", "a", "NUMBER", "xlFile", "NUMBER", "Sheets", "NUMBER", "NUMBER", "Rows", "NUMBER", "NUMBER", "Cells", "NUMBER", "println", "a", "NUMBER", "Value", "Output", "NUMBER", "There", "be", "no", "recalculation", "here", "but", "the", "calculated", "value", "can", "be", "read", "NUMBER", "Maybe", "it", "s", "easier", "to", "implement", "Such", "a", "functional", "would", "also", "be", "useful", "NUMBER", "Ok", "NUMBER", "So", "I", "miss", "something", "NUMBER", "But", "NUMBER", "Here", "s", "the", "script", "I", "m", "interested", "in", "NUMBER", "xlsx", "A", "NUMBER", "NUMBER", "A", "NUMBER", "NUMBER", "A", "NUMBER", "SUM", "A", "NUMBER", "A", "NUMBER", "xlsx", "_", "excelize", "NUMBER", "OpenFile", "NUMBER", "xlsx", "a", "NUMBER", "xlsx", "NUMBER", "GetCellValue", "Sheet", "NUMBER", "A", "NUMBER", "a", "NUMBER", "xlsx", "NUMBER", "GetCellValue", "Sheet", "NUMBER", "A", "NUMBER", "a", "NUMBER", "xlsx", "NUMBER", "GetCellValue", "Sheet", "NUMBER", "A", "NUMBER", "println", "a", "NUMBER", "a", "NUMBER", "a", "NUMBER", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "A", "NUMBER", "NUMBER", "xlsx", "NUMBER", "WriteTo", "NUMBER", "xlsx", "xlsx", "_", "excelize", "NUMBER", "OpenFile", "NUMBER", "xlsx", "a", "NUMBER", "xlsx", "NUMBER", "GetCellValue", "Sheet", "NUMBER", "A", "NUMBER", "a", "NUMBER", "xlsx", "NUMBER", "GetCellValue", "Sheet", "NUMBER", "A", "NUMBER", "a", "NUMBER", "xlsx", "NUMBER", "GetCellValue", "Sheet", "NUMBER", "A", "NUMBER", "println", "a", "NUMBER", "a", "NUMBER", "a", "NUMBER", "Output", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Is", "it", "possible", "to", "somehow", "get", "NUMBER", "That", "be", "I", "just", "want", "Excel", "to", "recalculate", "the", "values", "I", "ve", "entered", "and", "saved", "NUMBER", "Maybe", "I", "want", "too", "much", "because", "it", "s", "just", "an", "xml", "file", "NUMBER", "Well", "all", "right", "NUMBER", "Life", "goes", "on", "NUMBER", "Thank", "you", "very", "much", "for", "the", "clarification", "Here", "be", "a", "test", "workaround", "how", "to", "invoke", "MS", "Excel", "recalculation", "engine", "from", "MS", "Power", "Shell", "NUMBER", "Create", "poweshell", "script", "with", "a", "name", "excel", "NUMBER", "ps", "NUMBER", "param", "string", "ExcelFile", "Write", "Host", "Updating", "calculated", "values", "for", "ExcelFile", "excl", "New", "Object", "ComObject", "Excel", "NUMBER", "Application", "excl", "NUMBER", "Visible", "true", "wrkb", "excl", "NUMBER", "Workbooks", "NUMBER", "Open", "ExcelFile", "excl", "NUMBER", "DisplayAlerts", "TRUE", "Excel", "NUMBER", "Calculation", "NUMBER", "excl", "NUMBER", "CalculateBeforeSave", "true", "wrkb", "NUMBER", "Save", "wrkb", "NUMBER", "Close", "excl", "NUMBER", "Quit", "System", "NUMBER", "Runtime", "NUMBER", "Interopservices", "NUMBER", "Marshal", "ReleaseComObject", "excl", "In", "your", "go", "program", "create", "a", "new", "function", "func", "invokeExcelCalculationEngine", "file", "os", "NUMBER", "FileInfo", "fullFileName", "string", "log", "NUMBER", "Debugln", "Entering", "invokeExcelCalculationEngine", "script", "NUMBER", "excel", "NUMBER", "ps", "NUMBER", "fullFileName", "cmdOut", "err", "exec", "NUMBER", "Command", "powershell", "NUMBER", "exe", "script", "NUMBER", "Output", "if", "err", "nil", "log", "NUMBER", "Fatal", "err", "log", "NUMBER", "Debugf", "Command", "output", "v", "string", "cmdOut", "And", "in", "your", "go", "program", "where", "you", "be", "saving", "the", "excel", "file", "use", "the", "folowing", "code", "to", "save", "it", "and", "to", "force", "external", "recalculation", "fullFileName", "output_excel", "NUMBER", "xslx", "xlsx", "NUMBER", "UpdateLinkedValue", "err", "xlsx", "NUMBER", "SaveAs", "fullFileName", "if", "err", "nil", "log", "NUMBER", "Debugln", "err", "update", "calculated", "field", "with", "workaround", "fullFileName", "fullFileName", "invokeExcelCalculationEngine", "file", "fullFileName", "Enjoy", "NUMBER", "Simplification", "of", "this", "code", "be", "welcomed", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "e", "NUMBER", "bb", "NUMBER", "a", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "ce", "NUMBER", "f", "NUMBER", "dd", "NUMBER", "e", "NUMBER", "png", "thx", "\u6211\u518d\u8bd5\u4e00\u4e0b", "\u5df2\u7ecfOK", "\u8bfb\u53d6\u901f\u5ea6\u548c\u4e4b\u524d\u7684\u7248\u672c\u4e00\u6837\u4e86", "NUMBER", "Q", "Maybe", "it", "will", "come", "in", "handy", "for", "someone", "else", "NUMBER", "I", "did", "not", "have", "enough", "function", "in", "the", "library", "to", "convert", "arbitrary", "coordinates", "i", "k", "x", "y", "to", "the", "address", "of", "the", "cell", "NUMBER", "I", "took", "advantage", "of", "this", "decision", "LINK", "Golang", "func", "toCell", "i", "int", "string", "if", "i", "TAG", "titleToNumber", "provides", "function", "to", "convert", "Excel", "sheet", "column", "title", "to", "int", "NUMBER", "If", "I", "understood", "correctly", "then", "this", "be", "an", "inverse", "function", "NUMBER", "Can", "it", "also", "be", "export", "Excellent", "NUMBER", "Thank", "you", "Hello", "NUMBER", "Please", "help", "me", "with", "date", "substitution", "and", "format", "NUMBER", "There", "be", "an", "xlsx", "file", "template", "it", "has", "a", "field", "of", "type", "Date", "it", "has", "a", "format", "for", "example", "NUMBER", "Mar", "NUMBER", "Using", "the", "library", "I", "substitute", "my", "date", "value", "for", "example", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "expect", "that", "the", "inserted", "date", "will", "be", "of", "the", "specified", "format", "but", "it", "be", "not", "NUMBER", "The", "inserted", "value", "be", "display", "unchanged", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "If", "start", "Excel", "open", "the", "saved", "file", "and", "double", "click", "on", "this", "field", "it", "be", "converted", "according", "to", "the", "specified", "format", "NUMBER", "How", "to", "do", "this", "with", "your", "library", "Is", "there", "an", "analog", "UpdateLinkedValue", "to", "update", "the", "date", "according", "to", "the", "format", "specified", "in", "the", "template", "Thank", "you", "Excellent", "great", "thanks", "Our", "project", "be", "rescued", "NUMBER", "On", "Monday", "at", "work", "I", "ll", "try", "a", "new", "version", "NUMBER", "P", "NUMBER", "S", "NUMBER", "Wonderful", "library", "How", "to", "set", "the", "date", "correctly", "If", "I", "use", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "D", "NUMBER", "time", "NUMBER", "Now", "I", "get", "Excuse", "me", "in", "Excel", "I", "m", "a", "noob", "NUMBER", "Everything", "worked", "out", "NUMBER", "Thank", "you", "Hi", "Luxurioust", "when", "passing", "time", "NUMBER", "Time", "it", "indeed", "works", "but", "when", "later", "I", "do", "a", "setCellStyle", "for", "a", "very", "big", "range", "where", "some", "not", "all", "columns", "have", "date", "values", "xlsx", "NUMBER", "SetCellStyle", "Sheet", "NUMBER", "A", "NUMBER", "ZZ", "NUMBER", "alignment", "wrap_text", "true", "I", "lose", "the", "date", "format", "NUMBER", "Is", "there", "a", "way", "how", "I", "can", "ADD", "extra", "format", "the", "wrap_text", "in", "this", "case", "rather", "than", "OVERWRITING", "them", "how", "to", "know", "the", "sheet", "or", "cell", "be", "hiden", "Luxurioust", "thank", "you", "NUMBER", "and", "be", "there", "a", "function", "with", "column", "thank", "you", "Hi", "Luxurioust", "when", "I", "want", "to", "apply", "a", "style", "to", "a", "larger", "but", "not", "huge", "amount", "of", "cells", "it", "takes", "more", "than", "a", "minute", "see", "code", "below", "err", "xlsx", "NUMBER", "SetCellStyle", "Sheet", "NUMBER", "A", "NUMBER", "A", "NUMBER", "alignment", "wrap_text", "true", "Is", "there", "a", "way", "to", "improve", "this", "FYI", "I", "want", "to", "apply", "this", "style", "to", "the", "whole", "spreadsheet", "so", "if", "there", "be", "a", "more", "performant", "way", "to", "do", "this", "shoot", "Sidenote", "NUMBER", "write", "the", "file", "be", "also", "A", "LOT", "slower", "when", "these", "cell", "styles", "have", "be", "applied", "Also", "I", "m", "calling", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "laxis", "value", "NUMBER", "times", "NUMBER", "This", "be", "do", "quite", "quickly", "but", "could", "it", "not", "be", "faster", "if", "we", "pass", "a", "interface", "or", "interface", "to", "something", "like", "SetCellValueArea", "Greetings", "PJ", "This", "be", "indeed", "fix", "NUMBER", "Thanks", "My", "second", "question", "be", "still", "open", "be", "there", "no", "more", "efficient", "way", "to", "pass", "a", "an", "array", "of", "NUMBER", "D", "array", "of", "data", "instead", "of", "calling", "xlsx", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "laxis", "value", "a", "very", "large", "number", "of", "times", "Well", "for", "me", "it", "s", "still", "quite", "slow", "I", "have", "NUMBER", "k", "rows", "with", "NUMBER", "cols", "and", "each", "row", "has", "at", "least", "NUMBER", "cell", "with", "style", "red", "background", "to", "mark", "a", "bad", "cell", "NUMBER", "Without", "styles", "it", "takes", "about", "NUMBER", "sec", "to", "generate", "but", "with", "styles", "NUMBER", "min", "Is", "there", "any", "way", "to", "optimize", "it", "Hi", "Luxurioust", "first", "of", "all", "AWESOME", "library", "NUMBER", "Got", "it", "up", "and", "run", "in", "no", "time", "thanks", "through", "the", "great", "documentation", "NUMBER", "You", "know", "what", "would", "make", "excelize", "even", "better", "Having", "a", "way", "to", "enable", "auto", "filter", "NUMBER", "I", "ve", "search", "around", "and", "it", "should", "be", "possible", "NUMBER", "See", "LINK", "_with_autofilters", "NUMBER", "html", "I", "dug", "around", "a", "bit", "in", "the", "python", "source", "code", "and", "most", "of", "the", "logic", "be", "defined", "here", "LINK", "L", "NUMBER", "however", "I", "don", "t", "understand", "a", "whole", "lot", "of", "it", "NUMBER", "Hopefully", "you", "do", "I", "m", "not", "an", "advance", "enough", "go", "developer", "to", "create", "a", "good", "PR", "but", "would", "be", "very", "grateful", "if", "you", "could", "add", "this", "feature", "to", "excelize", "NUMBER", "Luxurioust", "Wow", "great", "work", "Thanks", "a", "lot", "NUMBER", "I", "start", "to", "use", "it", "just", "as", "err", "xlsx", "NUMBER", "AutoFilter", "Sheet", "NUMBER", "A", "NUMBER", "D", "NUMBER", "without", "any", "extra", "filters", "NUMBER", "Is", "this", "production", "ready", "Because", "you", "write", "I", "have", "initialized", "NUMBER", "do", "this", "mean", "this", "be", "work", "in", "progress", "On", "my", "side", "everything", "seems", "to", "work", "NUMBER", "AWESOME", "When", "I", "open", "an", "exist", "xlsx", "file", "and", "try", "to", "add", "a", "picture", "to", "a", "sheet", "which", "already", "has", "some", "pictures", "in", "it", "exist", "pictures", "will", "be", "corrupted", "or", "remove", "and", "the", "picture", "I", "m", "trying", "to", "add", "be", "not", "add", "to", "the", "sheet", "NUMBER", "My", "code", "go", "func", "main", "xlsx", "err", "excelize", "NUMBER", "OpenFile", "NUMBER", "tmp", "NUMBER", "xlsx", "if", "err", "nil", "log", "NUMBER", "Println", "err", "if", "err", "xlsx", "NUMBER", "AddPicture", "Sheet", "NUMBER", "E", "NUMBER", "NUMBER", "test", "NUMBER", "jpg", "x_scale", "NUMBER", "y_scale", "NUMBER", "err", "nil", "log", "NUMBER", "Println", "err", "err", "xlsx", "NUMBER", "WriteTo", "NUMBER", "Workbook", "NUMBER", "xlsx", "if", "err", "nil", "log", "NUMBER", "Println", "err", "os", "NUMBER", "Exit", "NUMBER", "Base", "xlsx", "file", "tmp", "NUMBER", "xlsx", "LINK", "After", "add", "the", "picture", "Workbook", "NUMBER", "xlsx", "LINK", "I", "have", "set", "the", "cells", "approx", "NUMBER", "NUMBER", "as", "text", "i", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "and", "the", "NUMBER", "xlsx", "file", "it", "saves", "in", "seconds", "NUMBER", "When", "I", "set", "the", "cells", "to", "a", "Go", "Time", "type", "and", "save", "the", "NUMBER", "xlsx", "file", "it", "takes", "almost", "a", "minute", "Anyhow", "it", "s", "a", "Great", "package", "Thanks", "for", "sharing", "Thank", "you", "for", "the", "awesome", "package", "NUMBER", "You", "should", "have", "a", "Donate", "Now", "button", "somewhere", "NUMBER", "I", "would", "gladly", "send", "you", "a", "beer", "Hello", "NUMBER", "First", "of", "all", "I", "really", "grateful", "for", "your", "work", "NUMBER", "Found", "some", "strange", "behaviour", "of", "func", "UpdateLinkedValue", "NUMBER", "I", "have", "two", "sheets", "first", "with", "real", "data", "and", "second", "with", "linked", "data", "from", "first", "one", "NUMBER", "On", "the", "second", "sheet", "with", "linked", "data", "I", "use", "auto", "format", "rules", "NUMBER", "In", "my", "situation", "it", "be", "add", "background", "color", "to", "cell", "depends", "on", "percentage", "for", "example", "red", "background", "if", "NUMBER", "and", "more", "NUMBER", "If", "I", "don", "t", "use", "UpdateLinkedValues", "I", "don", "t", "loose", "auto", "format", "but", "linked", "data", "doesn", "t", "update", "NUMBER", "If", "I", "use", "UpdateLinkedValues", "I", "loose", "auto", "format", "but", "linked", "data", "update", "NUMBER", "Cool", "NUMBER", "Thanks", "NUMBER", "Work", "really", "better", "NUMBER", "But", "still", "one", "moment", "NUMBER", "If", "I", "have", "multiple", "rules", "for", "one", "cell", "I", "suppose", "it", "s", "because", "of", "that", "they", "don", "t", "apply", "as", "expect", "NUMBER", "For", "example", "I", "have", "an", "auto", "rule", "NUMBER", "red", "color", "NUMBER", "NUMBER", "yellow", "color", "less", "then", "NUMBER", "green", "color", "NUMBER", "After", "use", "UpdateLinkedValue", "linked", "cells", "update", "but", "value", "in", "source", "cell", "be", "for", "example", "NUMBER", "but", "color", "in", "linked", "cell", "be", "red", "for", "some", "reasons", "I", "don", "t", "know", "why", "NUMBER", "If", "I", "after", "that", "in", "Excel", "change", "value", "in", "source", "cell", "from", "NUMBER", "to", "for", "example", "NUMBER", "I", "see", "yellow", "color", "in", "linked", "cell", "as", "expected", "NUMBER", "In", "attachment", "two", "file", "First", "be", "a", "template", "which", "be", "use", "for", "add", "data", "Second", "be", "the", "result", "file", "after", "add", "data", "to", "cells", "and", "use", "UpdateLinkedValue", "Sheet", "NUMBER", "be", "the", "result", "aggregated", "file", "with", "linked", "cells", "and", "auto", "format", "rules", "NUMBER", "result", "NUMBER", "xlsx", "LINK", "template", "NUMBER", "xlsx", "LINK", "I", "tried", "your", "variant", "but", "with", "no", "success", "I", "attache", "an", "example", "similar", "to", "what", "I", "use", "NUMBER", "First", "I", "find", "that", "I", "become", "to", "loose", "format", "suppose", "because", "of", "that", "fix", "NUMBER", "Second", "I", "still", "can", "t", "reach", "need", "result", "percent", "on", "source", "sheet", "NUMBER", "and", "linked", "sheet", "NUMBER", "And", "colors", "of", "course", "NUMBER", "Suppose", "I", "use", "your", "code", "not", "correctly", "NUMBER", "But", "where", "You", "can", "repeat", "what", "I", "do", "by", "rename", "template", "NUMBER", "xlsx", "to", "result", "NUMBER", "xlsx", "and", "apply", "the", "code", "NUMBER", "Just", "add", "that", "previously", "I", "use", "xlsx", "NUMBER", "SetCellStr", "sheet", "cell", "strconv", "NUMBER", "Itoa", "int", "value", "in", "WriteToXlsxPrc", "func", "NUMBER", "temp", "NUMBER", "go", "NUMBER", "txt", "LINK", "For", "some", "reasons", "after", "run", "temp", "NUMBER", "go", "file", "result", "be", "like", "an", "attached", "file", "NUMBER", "Formatting", "on", "Sheet", "NUMBER", "in", "column", "G", "be", "lost", "I", "mean", "borders", "NUMBER", "If", "I", "checkout", "to", "NUMBER", "c", "NUMBER", "f", "NUMBER", "ada", "NUMBER", "fca", "NUMBER", "c", "NUMBER", "caae", "NUMBER", "b", "NUMBER", "d", "NUMBER", "and", "run", "code", "again", "borders", "be", "on", "their", "places", "NUMBER", "result", "NUMBER", "xlsx", "LINK", "Perfectly", "well", "I", "suppose", "this", "issue", "can", "be", "marked", "as", "close", "NUMBER", "Also", "I", "should", "say", "that", "percent", "cell", "also", "work", "as", "expected", "NUMBER", "For", "me", "number_format", "NUMBER", "in", "SetCellStyle", "and", "SetCellValue", "sheet", "cell", "value", "NUMBER", "were", "the", "solution", "NUMBER", "May", "be", "it", "be", "the", "normal", "behaivour", "of", "Excel", "to", "make", "percents", "in", "cell", "as", "Value", "NUMBER", "but", "for", "me", "it", "was", "really", "surprised", "NUMBER", "May", "be", "it", "will", "be", "helpful", "for", "others", "if", "you", "add", "some", "demo", "code", "how", "to", "work", "with", "percent", "cells", "NUMBER", "Again", "thanks", "for", "your", "work", "NUMBER", "Hello", "NUMBER", "First", "of", "all", "I", "really", "grateful", "for", "your", "work", "NUMBER", "Don", "t", "know", "bug", "or", "not", "but", "I", "find", "some", "strange", "behavior", "of", "func", "SetCellStyle", "NUMBER", "If", "I", "already", "have", "some", "formating", "for", "example", "borders", "and", "I", "try", "to", "add", "for", "example", "red", "color", "to", "cell", "I", "loosing", "borders", "NUMBER", "May", "be", "it", "be", "normal", "but", "in", "this", "way", "it", "would", "be", "useful", "to", "have", "func", "like", "AddCellStyle", "or", "something", "similar", "NUMBER", "seconded", "Hi", "hope", "all", "be", "well", "NUMBER", "Great", "work", "that", "i", "m", "benefiting", "from", "so", "thanks", "very", "much", "NUMBER", "With", "NUMBER", "SetCellValue", "NUMBER", "SetCellStr", "and", "NUMBER", "SetCellInt", "they", "make", "decisions", "about", "the", "alignment", "of", "the", "result", "which", "be", "not", "bad", "per", "se", "NUMBER", "I", "know", "i", "can", "use", "NUMBER", "SetCellStyle", "afterwards", "NUMBER", "But", "it", "would", "be", "very", "handy", "to", "have", "a", "function", "that", "respects", "the", "exist", "style", "NUMBER", "I", "wish", "to", "be", "able", "to", "set", "all", "the", "styles", "i", "need", "within", "an", "Excel", "file", "as", "a", "kind", "of", "report", "template", "outside", "of", "Go", "then", "use", "Go", "to", "populate", "it", "and", "not", "even", "need", "to", "know", "what", "the", "styles", "be", "within", "my", "Go", "code", "NUMBER", "For", "example", "a", "column", "that", "be", "already", "center", "aligned", "would", "be", "great", "if", "a", "function", "that", "can", "keep", "it", "center", "aligned", "or", "whatever", "the", "style", "might", "be", "including", "font", "color", "date", "format", "currency", "etc", "NUMBER", "Something", "like", "a", "NUMBER", "SetCellValueWithStyleRetention", "NUMBER", "Or", "be", "there", "already", "a", "way", "to", "achieve", "this", "with", "the", "exist", "function", "Thanks", "for", "the", "quick", "response", "NUMBER", "Attached", "be", "Book", "NUMBER", "xlsx", "and", "Book", "NUMBER", "xlsx", "NUMBER", "I", "created", "Book", "NUMBER", "xlsx", "outside", "of", "Go", "then", "made", "a", "copy", "of", "it", "which", "be", "Book", "NUMBER", "xlsx", "NUMBER", "Then", "i", "run", "the", "Go", "code", "so", "to", "speak", "on", "Book", "NUMBER", "xlsx", "NUMBER", "You", "be", "correct", "when", "the", "cells", "have", "exist", "content", "but", "when", "the", "cells", "do", "not", "have", "exist", "content", "that", "s", "when", "the", "function", "appear", "to", "make", "those", "decisions", "NUMBER", "Book", "NUMBER", "xlsx", "LINK", "Book", "NUMBER", "xlsx", "LINK", "test_excel", "NUMBER", "go", "NUMBER", "txt", "LINK", "_excel", "NUMBER", "go", "NUMBER", "txt", "I", "m", "use", "Excel", "NUMBER", "in", "case", "that", "might", "be", "relevant", "NUMBER", "Thanks", "so", "much", "xuri", "you", "re", "the", "best", "NUMBER", "when", "calling", "NUMBER", "Token", "function", "of", "type", "xml", "NUMBER", "Decoder", "error", "returned", "be", "ignored", "when", "it", "should", "be", "handle", "NUMBER", "line", "token", "err", "decoder", "NUMBER", "Token", "inside", "function", "getTotalRowsCols", "When", "read", "a", "xlsx", "file", "with", "complex", "border", "Inserted", "picture", "shows", "error", "NUMBER", "NUMBER", "LINK", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "cc", "NUMBER", "cd", "NUMBER", "d", "NUMBER", "png", "NUMBER", "LINK", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "f", "NUMBER", "cc", "NUMBER", "png", "Workbook", "NUMBER", "xlsx", "LINK", "func", "main", "xlsx", "_", "excelize", "NUMBER", "OpenFile", "NUMBER", "Workbook", "NUMBER", "xlsx", "err", "xlsx", "NUMBER", "AddPicture", "Sheet", "NUMBER", "A", "NUMBER", "NUMBER", "NUMBER", "jpg", "x_offset", "NUMBER", "y_offset", "NUMBER", "print_obj", "true", "lock_aspect_ratio", "false", "locked", "false", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "err", "xlsx", "NUMBER", "WriteTo", "NUMBER", "Workbook", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "os", "NUMBER", "Exit", "NUMBER", "xuri", "It", "works", "Error", "because", "I", "test", "it", "in", "an", "old", "go", "version", "Hi", "If", "I", "open", "a", "xlsx", "file", "and", "want", "to", "write", "to", "some", "cells", "in", "sheet", "where", "sheet", "name", "be", "not", "in", "format", "of", "SheetX", "after", "xlsx", "file", "be", "saved", "there", "be", "no", "entry", "in", "the", "cell", "if", "you", "open", "a", "file", "with", "Excel", "NUMBER", "Another", "thing", "be", "if", "I", "use", "xlsx", "NUMBER", "CreateFile", "I", "m", "aware", "that", "I", "get", "only", "one", "sheet", "with", "name", "Sheet", "NUMBER", "and", "I", "can", "write", "to", "the", "cells", "of", "Sheet", "NUMBER", "NUMBER", "When", "I", "do", "xlsx", "NUMBER", "NewSheet", "NUMBER", "Sheet", "NUMBER", "I", "can", "write", "to", "cells", "in", "Sheet", "NUMBER", "NUMBER", "But", "if", "instead", "od", "Sheet", "NUMBER", "I", "put", "Test_", "NUMBER", "for", "example", "then", "if", "I", "write", "to", "some", "cells", "in", "this", "sheet", "this", "cannot", "be", "seen", "in", "Excel", "NUMBER", "Only", "workaround", "I", "find", "be", "to", "create", "new", "sheets", "with", "name", "SheetX", "then", "do", "whatever", "you", "need", "and", "before", "saving", "use", "xslx", "NUMBER", "SetSheetName", "Sheet", "NUMBER", "Test_", "NUMBER", "for", "example", "NUMBER", "Ok", "NUMBER", "Thank", "you", "for", "the", "explanation", "NUMBER", "panic", "runtime", "error", "invalid", "memory", "address", "or", "nil", "pointer", "dereference", "signal", "SIGSEGV", "segmentation", "violation", "code", "NUMBER", "x", "NUMBER", "addr", "NUMBER", "x", "NUMBER", "pc", "NUMBER", "x", "NUMBER", "d", "NUMBER", "f", "NUMBER", "goroutine", "NUMBER", "run", "github", "NUMBER", "com", "Luxurioust", "excelize", "NUMBER", "File", "NUMBER", "formattedValue", "NUMBER", "xc", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "xc", "NUMBER", "f", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "home", "dlin", "go", "src", "github", "NUMBER", "com", "Luxurioust", "excelize", "cell", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "github", "NUMBER", "com", "Luxurioust", "excelize", "NUMBER", "xlsxC", "NUMBER", "getValueFrom", "NUMBER", "xc", "NUMBER", "edd", "NUMBER", "NUMBER", "xc", "NUMBER", "b", "NUMBER", "NUMBER", "xc", "NUMBER", "NUMBER", "xc", "NUMBER", "d", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "home", "dlin", "go", "src", "github", "NUMBER", "com", "Luxurioust", "excelize", "rows", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "b", "github", "NUMBER", "com", "Luxurioust", "excelize", "NUMBER", "File", "NUMBER", "GetRows", "NUMBER", "xc", "NUMBER", "b", "NUMBER", "NUMBER", "xc", "NUMBER", "edea", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "xc", "NUMBER", "c", "NUMBER", "x", "NUMBER", "NUMBER", "xc", "NUMBER", "edea", "NUMBER", "home", "dlin", "go", "src", "github", "NUMBER", "com", "Luxurioust", "excelize", "rows", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "e", "NUMBER", "main", "NUMBER", "updateSheet", "NUMBER", "xc", "NUMBER", "b", "NUMBER", "NUMBER", "x", "NUMBER", "NUMBER", "x", "NUMBER", "home", "dlin", "tmp", "bug", "bug", "NUMBER", "go", "NUMBER", "NUMBER", "xd", "NUMBER", "main", "NUMBER", "main", "home", "dlin", "tmp", "bug", "bug", "NUMBER", "go", "NUMBER", "NUMBER", "x", "NUMBER", "f", "t", "NUMBER", "xlsx", "LINK", "package", "main", "import", "fmt", "log", "strconv", "github", "NUMBER", "com", "Luxurioust", "excelize", "bug", "Date", "format", "can", "t", "insert", "value", "func", "main", "log", "NUMBER", "SetFlags", "log", "NUMBER", "Lshortfile", "xl", "err", "excelize", "NUMBER", "OpenFile", "t", "NUMBER", "xlsx", "updateSheet", "xl", "Fut", "err", "xl", "NUMBER", "Save", "if", "err", "nil", "log", "NUMBER", "Fatalln", "err", "func", "updateSheet", "xl", "excelize", "NUMBER", "File", "sheetName", "string", "idxSheet", "xl", "NUMBER", "GetSheetIndex", "sheetName", "if", "idxSheet", "NUMBER", "log", "NUMBER", "Fatalln", "Can", "t", "find", "correct", "sheetName", "sheetName", "rows", "xl", "NUMBER", "GetRows", "sheet", "strconv", "NUMBER", "Itoa", "idxSheet", "fmt", "NUMBER", "Println", "rows", "func", "GetColStr", "x", "int", "string", "colName", "oldX", "x", "for", "x", "NUMBER", "digit", "x", "NUMBER", "NUMBER", "colName", "string", "int", "A", "digit", "colName", "x", "x", "NUMBER", "digit", "NUMBER", "log", "NUMBER", "Println", "oldX", "colName", "return", "colName", "xl", "NUMBER", "SetCellValue", "Sheet", "NUMBER", "A", "NUMBER", "time", "NUMBER", "Now", "The", "excel", "file", "will", "show", "empty", "xuri", "the", "same", "issue", "exists", "NUMBER", "For", "example", "tealeg", "xlsx", "display", "the", "same", "cell", "as", "TAG", "NUMBER", "NUMBER", "xc", "NUMBER", "mm", "dd", "yy", "false", "false", "NUMBER", "NUMBER", "NUMBER", "throught", "it", "s", "NUMBER", "String", "will", "convert", "to", "NUMBER", "NUMBER", "NUMBER", "Luxurioust", "excelize", "just", "display", "as", "NUMBER", "already", "converted", "to", "string", "go", "version", "go", "version", "go", "NUMBER", "windows", "amd", "NUMBER", "Code", "go", "package", "main", "import", "fmt", "os", "github", "NUMBER", "com", "Luxurioust", "excelize", "func", "main", "xlsx", "excelize", "NUMBER", "CreateFile", "Create", "a", "new", "sheet", "NUMBER", "xlsx", "NUMBER", "NewSheet", "NUMBER", "List", "xlsx", "NUMBER", "DeleteSheet", "Sheet", "NUMBER", "Set", "value", "of", "a", "cell", "NUMBER", "xlsx", "NUMBER", "SetCellValue", "List", "A", "NUMBER", "NUMBER", "xlsx", "NUMBER", "SetCellValue", "List", "B", "NUMBER", "NUMBER", "xlsx", "NUMBER", "SetCellFormula", "List", "C", "NUMBER", "A", "NUMBER", "A", "NUMBER", "Set", "active", "sheet", "of", "the", "workbook", "NUMBER", "xlsx", "NUMBER", "SetActiveSheet", "NUMBER", "Save", "xlsx", "file", "by", "the", "given", "path", "NUMBER", "err", "xlsx", "NUMBER", "WriteTo", "NUMBER", "dummy", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "os", "NUMBER", "Exit", "NUMBER", "I", "change", "Create", "XLSX", "file", "Example", "But", "Cell", "be", "Empty", "NUMBER", "dummy", "NUMBER", "xlsx", "LINK", "I", "Tested", "MS", "Office", "NUMBER", "Does", "that", "mean", "we", "should", "use", "S", "heet", "index", "in", "this", "API", "NUMBER", "uppercase", "But", "we", "should", "s", "heet", "index", "in", "GetRows", "API", "lowercase", "Luxurioust", "Thankyou", "for", "replay", "I", "will", "try", "I", "test", "this", "problem", "too", "NUMBER", "I", "find", "the", "sheet", "name", "MUST", "in", "Sheetn", "and", "the", "n", "MUST", "equals", "xlsx", "NUMBER", "NewSheet", "n", "Sheetn", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LiaoBin", "\u53d1\u4ef6\u4eba", "dohq", "TAG", "\u53d1\u9001\u65f6\u95f4", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "\u4e3b\u9898", "Luxurioust", "excelize", "Newsheet", "Disable", "SetCellValue", "NUMBER", "\u6536\u4ef6\u4eba", "Luxurioust", "excelize", "TAG", "\u6284\u9001", "Subscribed", "TAG", "go", "version", "go", "version", "go", "NUMBER", "windows", "amd", "NUMBER", "Code", "package", "main", "import", "fmt", "os", "github", "NUMBER", "com", "Luxurioust", "excelize", "func", "main", "xlsx", "excelize", "NUMBER", "CreateFile", "Create", "a", "new", "sheet", "NUMBER", "xlsx", "NUMBER", "NewSheet", "NUMBER", "List", "xlsx", "NUMBER", "DeleteSheet", "Sheet", "NUMBER", "Set", "value", "of", "a", "cell", "NUMBER", "xlsx", "NUMBER", "SetCellValue", "List", "A", "NUMBER", "NUMBER", "xlsx", "NUMBER", "SetCellValue", "List", "B", "NUMBER", "NUMBER", "xlsx", "NUMBER", "SetCellFormula", "List", "C", "NUMBER", "A", "NUMBER", "A", "NUMBER", "Set", "active", "sheet", "of", "the", "workbook", "NUMBER", "xlsx", "NUMBER", "SetActiveSheet", "NUMBER", "Save", "xlsx", "file", "by", "the", "given", "path", "NUMBER", "err", "xlsx", "NUMBER", "WriteTo", "NUMBER", "dummy", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "os", "NUMBER", "Exit", "NUMBER", "I", "change", "Create", "XLSX", "file", "Example", "But", "Cell", "be", "Empty", "NUMBER", "dummy", "NUMBER", "xlsx", "I", "Tested", "MS", "Office", "NUMBER", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "or", "mute", "the", "thread", "NUMBER", "Luxurioust", "I", "test", "createsheet", "after", "GetSeheetIndex", "I", "have", "test", "the", "program", "and", "confirmed", "that", "it", "works", "as", "designed", "NUMBER", "Thank", "you", "cell", "xlsx", "NUMBER", "GetCellValue", "Sheet", "NUMBER", "B", "NUMBER", "fmt", "NUMBER", "Println", "cell", "Get", "all", "the", "rows", "in", "a", "sheet", "NUMBER", "rows", "xlsx", "NUMBER", "GetRows", "sheet", "NUMBER", "fmt", "NUMBER", "Println", "rows", "in", "windows", "it", "works", "normal", "but", "in", "macOS", "rows", "be", "empty", "cell", "can", "get", "value", "I", "met", "this", "issue", "too", "NUMBER", "I", "just", "use", "the", "sample", "code", "in", "the", "repo", "s", "readme", "page", "to", "read", "the", "xlsx", "file", "Workbook", "NUMBER", "xlsx", "which", "provide", "in", "the", "repo", "s", "test", "folder", "NUMBER", "Then", "I", "met", "the", "same", "issue", "NUMBER", "When", "I", "run", "this", "code", "in", "macOS", "Sierra", "Version", "NUMBER", "with", "go", "version", "go", "NUMBER", "darwin", "amd", "NUMBER", "only", "the", "GetCellValue", "func", "worked", "NUMBER", "The", "GetRows", "func", "doesn", "t", "work", "NUMBER", "The", "output", "in", "macOS", "be", "below", "excelize", "output", "maco", "LINK", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "c", "NUMBER", "fb", "NUMBER", "png", "I", "have", "try", "this", "code", "and", "sample", "xlsx", "file", "in", "Windows", "NUMBER", "with", "go", "version", "go", "NUMBER", "windows", "amd", "NUMBER", "the", "output", "in", "Win", "NUMBER", "be", "below", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "be", "NUMBER", "e", "NUMBER", "jpg", "The", "sample", "code", "go", "package", "main", "import", "fmt", "os", "strconv", "github", "NUMBER", "com", "Luxurioust", "excelize", "func", "main", "xlsx", "err", "excelize", "NUMBER", "OpenFile", "NUMBER", "samples", "Workbook", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "os", "NUMBER", "Exit", "NUMBER", "Get", "value", "from", "cell", "by", "given", "sheet", "index", "and", "axis", "NUMBER", "cell", "xlsx", "NUMBER", "GetCellValue", "Sheet", "NUMBER", "B", "NUMBER", "fmt", "NUMBER", "Println", "cell", "Get", "sheet", "index", "NUMBER", "index", "xlsx", "NUMBER", "GetSheetIndex", "Sheet", "NUMBER", "Get", "all", "the", "rows", "in", "a", "sheet", "NUMBER", "rows", "xlsx", "NUMBER", "GetRows", "sheet", "strconv", "NUMBER", "Itoa", "index", "for", "_", "row", "range", "rows", "for", "_", "colCell", "range", "row", "fmt", "NUMBER", "Print", "colCell", "t", "fmt", "NUMBER", "Println", "The", "sample", "xlsx", "file", "be", "in", "the", "attachments", "NUMBER", "Workbook", "NUMBER", "xlsx", "LINK", "Luxurioust", "I", "have", "update", "the", "library", "with", "go", "get", "u", "github", "NUMBER", "com", "Luxurioust", "excelize", "NUMBER", "The", "func", "GetRows", "doesn", "t", "work", "on", "macOS", "as", "well", "NUMBER", "Luxurioust", "This", "be", "the", "output", "NUMBER", "excelize", "output", "after", "update", "library", "LINK", "NUMBER", "c", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "aa", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "NUMBER", "png", "Luxurioust", "When", "I", "debug", "by", "stepping", "into", "I", "just", "find", "that", "getTotalRowsCols", "func", "just", "return", "tr", "and", "tc", "both", "with", "NUMBER", "excelize", "debug", "NUMBER", "LINK", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "df", "NUMBER", "c", "NUMBER", "dd", "NUMBER", "png", "excelize", "debug", "NUMBER", "LINK", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "NUMBER", "aae", "NUMBER", "ea", "NUMBER", "cb", "NUMBER", "a", "NUMBER", "png", "xuri", "If", "you", "want", "me", "to", "do", "more", "debug", "steps", "please", "just", "make", "it", "clear", "NUMBER", "Luxurioust", "decoder", "NUMBER", "Token", "in", "rows", "NUMBER", "go", "line", "NUMBER", "has", "executed", "NUMBER", "times", "in", "the", "loop", "NUMBER", "Yes", "but", "I", "can", "t", "view", "the", "err", "value", "in", "the", "debug", "NUMBER", "excelize", "debug", "NUMBER", "LINK", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "png", "I", "have", "run", "the", "same", "code", "in", "my", "home", "MacBook", "Pro", "with", "macOS", "Sierra", "Version", "NUMBER", "NUMBER", "D", "NUMBER", "with", "go", "version", "go", "NUMBER", "darwin", "amd", "NUMBER", "it", "worked", "well", "NUMBER", "The", "output", "be", "TAG", "In", "my", "home", "MacBook", "Pro", "I", "have", "a", "NUMBER", "profile", "file", "with", "some", "config", "for", "go", "like", "this", "shell", "export", "GOPATH", "Users", "helihua", "go", "export", "GOROOT", "usr", "local", "go", "export", "PATH", "PATH", "GOROOT", "bin", "GOPATH", "bin", "And", "I", "use", "zsh", "in", "my", "home", "MacBook", "Pro", "too", "and", "I", "source", "the", "NUMBER", "profile", "in", "the", "first", "line", "of", "NUMBER", "zsh", "NUMBER", "rc", "like", "this", "shell", "source", "NUMBER", "profile", "I", "ll", "check", "the", "env", "setting", "on", "my", "office", "MacBook", "Pro", "tomorrow", "and", "then", "post", "here", "to", "make", "something", "clear", "NUMBER", "This", "be", "the", "NUMBER", "profile", "on", "my", "office", "MacBook", "Pro", "shell", "export", "GOROOT", "usr", "local", "go", "export", "GOPATH", "Users", "helihua", "go", "export", "PATH", "usr", "local", "go", "bin", "PATH", "And", "in", "my", "NUMBER", "zshrc", "file", "there", "be", "source", "NUMBER", "profile", "like", "this", "shell", "Example", "aliases", "alias", "zshconfig", "mate", "NUMBER", "zshrc", "alias", "ohmyzsh", "mate", "NUMBER", "oh", "my", "zsh", "source", "NUMBER", "profile", "export", "PATH", "bin", "PATH", "export", "ANDROID_SDK_HOME", "Users", "helihua", "Library", "Android", "sdk", "And", "I", "had", "change", "my", "shell", "to", "bash", "in", "the", "Terminal", "then", "run", "go", "run", "my_script", "NUMBER", "go", "the", "GetRows", "Func", "just", "doesn", "t", "work", "as", "well", "NUMBER", "GOARCH", "amd", "NUMBER", "GOBIN", "GOEXE", "GOHOSTARCH", "amd", "NUMBER", "GOHOSTOS", "darwin", "GOOS", "darwin", "GOPATH", "Users", "helihua", "go", "GORACE", "GOROOT", "usr", "local", "go", "GOTOOLDIR", "usr", "local", "go", "pkg", "tool", "darwin_amd", "NUMBER", "GCCGO", "gccgo", "CC", "clang", "GOGCCFLAGS", "fPIC", "m", "NUMBER", "pthread", "fno", "caret", "diagnostics", "Qunused", "argument", "fmessage", "length", "NUMBER", "fdebug", "prefix", "map", "var", "folders", "NUMBER", "_", "d", "NUMBER", "fvf", "NUMBER", "j", "NUMBER", "j", "NUMBER", "dk", "NUMBER", "g", "NUMBER", "z", "NUMBER", "y", "NUMBER", "m", "NUMBER", "gp", "T", "go", "build", "NUMBER", "tmp", "go", "build", "gno", "record", "gcc", "switches", "fno", "common", "CXX", "clang", "CGO_ENABLED", "NUMBER", "PKG_CONFIG", "pkg", "config", "CGO_CFLAGS", "g", "O", "NUMBER", "CGO_CPPFLAGS", "CGO_CXXFLAGS", "g", "O", "NUMBER", "CGO_FFLAGS", "g", "O", "NUMBER", "CGO_LDFLAGS", "g", "O", "NUMBER", "You", "mean", "that", "I", "should", "reinstall", "the", "Golang", "runtime", "with", "homebrew", "I", "had", "reinstall", "the", "Golang", "runtime", "pkg", "downloaded", "from", "the", "official", "website", "of", "Golang", "and", "then", "it", "worked", "NUMBER", "This", "be", "the", "output", "shell", "NUMBER", "Monitor", "Brand", "NUMBER", "Inch", "NUMBER", "HP", "NUMBER", "NUMBER", "NUMBER", "Inch", "NUMBER", "DELL", "NUMBER", "NUMBER", "NUMBER", "Inch", "NUMBER", "Lenove", "NUMBER", "TAG", "write", "Regarding", "low", "hanging", "fruit", "for", "performance", "I", "was", "having", "issue", "outputting", "a", "few", "thousand", "rows", "with", "roughly", "NUMBER", "NUMBER", "columns", "each", "in", "any", "sort", "of", "reasonable", "time", "NUMBER", "I", "narrowed", "it", "down", "and", "it", "appears", "the", "performance", "problem", "be", "come", "from", "change", "made", "in", "this", "commit", "fix", "miss", "hyperlink", "NUMBER", "e", "NUMBER", "a", "diff", "ec", "NUMBER", "fd", "NUMBER", "ab", "NUMBER", "c", "NUMBER", "a", "NUMBER", "efb", "NUMBER", "d", "NUMBER", "That", "change", "causes", "the", "entire", "spreadsheet", "data", "structure", "to", "be", "fully", "rebuilt", "every", "time", "cell", "data", "be", "set", "instead", "of", "appending", "new", "rows", "when", "needed", "NUMBER", "I", "haven", "t", "had", "time", "to", "dive", "into", "exactly", "what", "was", "fix", "with", "that", "issue", "which", "be", "why", "I", "m", "not", "submit", "a", "pull", "request", "right", "now", "but", "if", "I", "use", "a", "version", "of", "completeRow", "similar", "to", "the", "one", "prior", "to", "that", "commit", "my", "time", "for", "xslx", "generation", "goes", "from", "upwards", "of", "a", "couple", "minutes", "to", "about", "NUMBER", "seconds", "with", "identical", "output", "NUMBER", "NUMBER", "rows", "NUMBER", "columns", "NUMBER", "It", "still", "slows", "down", "quite", "a", "bit", "at", "higher", "numbers", "but", "it", "s", "a", "target", "for", "massive", "improvement", "in", "the", "lower", "ranges", "as", "a", "starting", "point", "NUMBER", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "or", "mute", "the", "thread", "NUMBER", "NUMBER", "to", "this", "NUMBER", "Is", "there", "a", "way", "to", "send", "the", "result", "by", "row", "I", "experienced", "around", "NUMBER", "NUMBER", "minutes", "creating", "and", "downloading", "a", "NUMBER", "MB", "xlsx", "file", "having", "NUMBER", "rows", "NUMBER", "Hey", "xuri", "any", "update", "Thanks", "Will", "give", "it", "a", "shot", "NUMBER", "Hi", "xuri", "I", "ve", "gone", "through", "the", "multiple", "github", "issue", "relate", "to", "performance", "memory", "management", "NUMBER", "However", "I", "did", "not", "figure", "out", "if", "the", "following", "be", "already", "possible", "NUMBER", "Situation", "Having", "to", "write", "NUMBER", "lines", "NUMBER", "Solution", "A", "have", "an", "io", "interface", "which", "periodically", "will", "write", "to", "disk", "so", "that", "memory", "consumption", "do", "go", "through", "the", "roof", "NUMBER", "Solution", "B", "Write", "to", "different", "xlsx", "file", "and", "then", "have", "a", "way", "to", "merge", "them", "together", "but", "again", "without", "having", "to", "use", "big", "amounts", "of", "memory", "Does", "this", "exist", "and", "give", "you", "a", "snippet", "demonstrating", "this", "Would", "also", "be", "nice", "for", "the", "standard", "documentation", "NUMBER", "xuri", "Can", "you", "check", "my", "comment", "above", "pjmuller", "maybe", "LINK", "will", "works", "for", "your", "need", "the", "lib", "uses", "buffered", "input", "output", "and", "custom", "tailored", "to", "handle", "large", "simple", "xlsx", "file", "NUMBER", "This", "be", "really", "cause", "issue", "NUMBER", "Memory", "usage", "goes", "off", "the", "roof", "Any", "update", "Any", "update", "Added", "data", "validation", "types", "in", "attached", "xlsxWorksheet", "NUMBER", "go", "NUMBER", "xmlWorkbook", "NUMBER", "zip", "LINK", "With", "this", "change", "cell", "data", "validations", "be", "preserved", "when", "calling", "OpenFile", "excel", "NUMBER", "xlsx", "and", "then", "WriteTo", "excel", "NUMBER", "xlsx", "NUMBER", "Thanks", "Greetings", "Ri", "Xu", "Sorry", "I", "attached", "the", "wrong", "source", "NUMBER", "Here", "be", "xlsxWorksheet", "NUMBER", "go", "NUMBER", "Regards", "C", "NUMBER", "Huff", "________________________________", "From", "Ri", "Xu", "notifications", "at", "github", "NUMBER", "com", "github", "Example", "Shred", "TAG", "Sent", "Friday", "March", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "AM", "To", "Luxurioust", "excelize", "Cc", "cehuff", "Mention", "Subject", "Re", "Luxurioust", "excelize", "Adding", "Excel", "data", "validation", "to", "type", "xlsxWorksheet", "NUMBER", "cehuff", "TAG", "Thanks", "for", "your", "issue", "NUMBER", "But", "sorry", "I", "didn", "t", "understand", "what", "you", "meant", "NUMBER", "I", "can", "t", "find", "any", "differences", "in", "the", "attachments", "NUMBER", "Will", "not", "be", "lost", "exist", "data", "validation", "properties", "after", "saving", "by", "calling", "WriteTo", "NUMBER", "Do", "you", "mean", "if", "you", "want", "to", "add", "additional", "feature", "to", "support", "set", "data", "validation", "for", "a", "cell", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "When", "printing", "file", "inserted", "pictures", "be", "hidden", "NUMBER", "I", "find", "a", "property", "setting", "NUMBER", "_", "NUMBER", "LINK", "fd", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "f", "NUMBER", "aafb", "NUMBER", "png", "When", "setting", "value", "repeatedly", "with", "many", "cols", "it", "runs", "very", "slow", "col", "A", "for", "i", "NUMBER", "i", "col", "A", "xlsx", "NUMBER", "SetCellStr", "Sheet", "NUMBER", "col", "NUMBER", "a", "fmt", "NUMBER", "Println", "set", "value", "Hi", "I", "want", "to", "use", "custom", "names", "for", "my", "sheets", "NUMBER", "But", "I", "can", "t", "because", "it", "need", "to", "name", "Sheet", "index", "NUMBER", "It", "s", "critical", "bug", "I", "think", "NUMBER", "LINK", "L", "NUMBER", "LINK", "L", "NUMBER", "LINK", "L", "NUMBER", "Luxurioust", "how", "to", "progress", "Luxurioust", "there", "be", "still", "a", "bug", "the", "sheet", "name", "must", "be", "modify", "after", "cells", "were", "write", "to", "it", "otherwise", "the", "generate", "excel", "file", "be", "invalid", "NUMBER", "Feel", "free", "to", "delete", "if", "off", "topic", "NUMBER", "I", "see", "two", "reasonably", "popular", "XLSX", "go", "package", "this", "and", "tealeg", "xlsx", "NUMBER", "Is", "it", "worth", "trying", "to", "merge", "to", "one", "unified", "effort", "By", "passing", "this", "test", "data", "data", "NUMBER", "xlsx", "LINK", "The", "myread", "NUMBER", "go", "package", "main", "Build", "go", "build", "o", "myread", "myread", "NUMBER", "go", "run", "NUMBER", "my_read", "data", "NUMBER", "xlsx", "import", "fmt", "log", "os", "github", "NUMBER", "com", "Luxurioust", "excelize", "func", "main", "inF", "err", "excelize", "NUMBER", "OpenFile", "os", "NUMBER", "Args", "NUMBER", "if", "err", "nil", "log", "NUMBER", "Fatalln", "err", "sheet", "inF", "NUMBER", "GetRows", "inF", "NUMBER", "GetSheetName", "NUMBER", "for", "_", "row", "range", "sheet", "fmt", "NUMBER", "Println", "len", "row", "row", "expect", "get", "NUMBER", "\u65e5\u76e4", "NUMBER", "\u591c\u76e4\u4ea4\u6613\u884c\u60c5\u8f49\u5165", "NUMBER", "\u6e2c", "NUMBER", "\u884c\u60c5\u8f49\u5165", "but", "get", "NUMBER", "\u6e2c", "NUMBER", "\u884c\u60c5\u8f49\u5165", "NUMBER", "\u6e2c", "NUMBER", "\u884c\u60c5\u8f49\u5165", "Referring", "to", "NUMBER", "and", "what", "stengaard", "suggested", "I", "have", "implement", "io", "NUMBER", "Reader", "and", "io", "NUMBER", "Writer", "interfaces", "NUMBER", "The", "exist", "API", "hasn", "t", "change", "at", "all", "there", "be", "now", "additional", "options", "for", "reading", "and", "write", "the", "file", "NUMBER", "We", "now", "have", "func", "OpenReader", "r", "io", "NUMBER", "Reader", "File", "error", "func", "f", "File", "Write", "w", "io", "NUMBER", "Writer", "error", "Codecov", "LINK", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "pr", "el", "desc", "into", "master", "LINK", "pr", "el", "desc", "will", "decrease", "coverage", "by", "NUMBER", "NUMBER", "The", "diff", "coverage", "be", "NUMBER", "NUMBER", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "pr", "el", "tree", "Coverage", "\u0394", "lib", "NUMBER", "go", "LINK", "pr", "el", "tree", "diff", "bGliLmdv", "NUMBER", "TAG", "NUMBER", "x", "excelize", "NUMBER", "go", "LINK", "pr", "el", "tree", "diff", "ZXhjZWxpemUuZ", "NUMBER", "NUMBER", "TAG", "NUMBER", "x", "file", "NUMBER", "go", "LINK", "pr", "el", "tree", "diff", "ZmlsZS", "NUMBER", "nbw", "NUMBER", "TAG", "NUMBER", "white_check_mark", "cell", "NUMBER", "go", "LINK", "pr", "el", "tree", "diff", "Y", "NUMBER", "VsbC", "NUMBER", "nbw", "NUMBER", "TAG", "NUMBER", "x", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "pr", "el", "footer", "NUMBER", "Last", "update", "NUMBER", "a", "NUMBER", "d", "NUMBER", "bd", "NUMBER", "ea", "LINK", "pr", "el", "footer", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "Setting", "border", "for", "selected", "cells", "be", "a", "practical", "requirement", "NUMBER", "As", "well", "as", "in", "LINK", "this", "library", "suffers", "from", "memory", "eating", "while", "trying", "to", "parse", "large", "file", "NUMBER", "For", "example", "I", "have", "NUMBER", "mb", "file", "NUMBER", "k", "rows", "with", "NUMBER", "columns", "for", "each", "row", "which", "parsed", "with", "tealeg", "xlsx", "into", "NUMBER", "mb", "of", "RAM", "while", "this", "library", "eats", "almost", "whole", "gigabyte", "NUMBER", "Any", "plan", "to", "provide", "an", "iterator", "which", "will", "be", "memory", "friendly", "Hey", "and", "thanks", "I", "think", "it", "s", "still", "too", "high", "especially", "if", "you", "ll", "parse", "large", "file", "NUMBER", "What", "about", "streamlined", "interface", "There", "should", "be", "three", "columns", "in", "the", "output", "first", "and", "third", "column", "be", "Chinese", "characters", "NUMBER", "data", "NUMBER", "xlsx", "LINK", "package", "main", "import", "fmt", "log", "github", "NUMBER", "com", "Luxurioust", "excelize", "func", "main", "inF", "err", "excelize", "NUMBER", "OpenFile", "data", "NUMBER", "xlsx", "if", "err", "nil", "log", "NUMBER", "Fatalln", "err", "sheet", "inF", "NUMBER", "GetRows", "inF", "NUMBER", "GetSheetName", "NUMBER", "for", "_", "row", "range", "sheet", "fmt", "NUMBER", "Println", "len", "row", "row", "Needed", "this", "function", "for", "one", "of", "my", "projects", "but", "didn", "t", "find", "it", "in", "your", "lib", "so", "I", "decided", "to", "contribute", "NUMBER", "Tell", "me", "if", "any", "change", "be", "needed", "NUMBER", "Ps", "Thanks", "for", "this", "great", "lib", "It", "s", "helping", "me", "a", "lot", "Codecov", "LINK", "pr", "el", "h", "NUMBER", "Report", "Merging", "NUMBER", "LINK", "pr", "el", "desc", "into", "master", "LINK", "pr", "el", "desc", "will", "increase", "coverage", "by", "NUMBER", "NUMBER", "diff", "Coverage", "Diff", "master", "NUMBER", "Coverage", "NUMBER", "NUMBER", "NUMBER", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "Impacted", "Files", "LINK", "pr", "el", "tree", "Coverage", "\u0394", "rows", "NUMBER", "go", "LINK", "pr", "el", "tree", "diff", "cm", "NUMBER", "cy", "NUMBER", "nbw", "NUMBER", "TAG", "NUMBER", "white_check_mark", "Continue", "to", "review", "full", "report", "at", "Codecov", "LINK", "pr", "el", "continue", "NUMBER", "Legend", "Click", "here", "to", "learn", "more", "LINK", "delta", "\u0394", "absolute", "TAG", "impact", "\u00f8", "not", "affected", "miss", "data", "Powered", "by", "Codecov", "LINK", "pr", "el", "footer", "NUMBER", "Last", "update", "a", "NUMBER", "e", "NUMBER", "ce", "NUMBER", "b", "NUMBER", "LINK", "footer", "src", "pr", "el", "lastupdated", "NUMBER", "Read", "the", "comment", "docs", "LINK", "request", "comments", "NUMBER", "You", "re", "welcome", "Workbook", "NUMBER", "xlsx", "LINK", "I", "attached", "my", "test", "file", "NUMBER", "I", "made", "that", "file", "and", "run", "homepage", "s", "Reading", "XLSX", "file", "sample", "code", "I", "expected", "test", "text", "NUMBER", "NUMBER", "NUMBER", "But", "i", "get", "NUMBER", "NUMBER", "NUMBER", "But", "when", "I", "input", "some", "values", "to", "A", "of", "Sheet", "NUMBER", "I", "get", "the", "expected", "result", "NUMBER", "I", "think", "cell", "NUMBER", "go", "s", "line", "NUMBER", "if", "rows", "TAG", "Merging", "NUMBER", "LINK", "pr", "into", "master", "LINK", "pr", "will", "increase", "coverage", "by", "NUMBER", "diff", "master", "NUMBER", "diff", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Methods", "NUMBER", "NUMBER", "Messages", "NUMBER", "NUMBER", "Branches", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "Powered", "by", "Codecov", "LINK", "pr", "NUMBER", "Last", "update", "NUMBER", "ccb", "NUMBER", "fc", "NUMBER", "LINK", "pr", "Thank", "you", "for", "the", "library", "\u53ea\u6709\u6574\u5f62\u548c\u5b57\u7b26\u4e32\u7684\u63d2\u5165\u6ca1\u6709\u56fe\u7247\u7684\u63d2\u5165\u529f\u80fd", "Thank", "you", "for", "your", "library", "Great", "work", "Do", "you", "have", "a", "roadmap", "for", "future", "development", "I", "ve", "add", "a", "looping", "functionality", "on", "rows", "and", "columns", "this", "will", "ease", "when", "scanning", "over", "a", "table", "for", "ex", "NUMBER", "let", "the", "code", "talk", "NUMBER", "go", "package", "main", "import", "fmt", "github", "NUMBER", "com", "NaySoftware", "excelize", "os", "func", "main", "xlsx", "err", "excelize", "NUMBER", "OpenFile", "WorkBook", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "os", "NUMBER", "Exit", "NUMBER", "rows", "err", "xlsx", "NUMBER", "GetRows", "Sheet", "NUMBER", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "for", "_", "row", "range", "rows", "for", "_", "colCell", "range", "row", "NUMBER", "C", "val", "_", "colCell", "NUMBER", "GetValueFrom", "xlsx", "fmt", "NUMBER", "Print", "val", "t", "t", "cols", "fmt", "NUMBER", "Println", "rows", "fmt", "NUMBER", "Println", "main", "Current", "coverage", "LINK", "pr", "be", "NUMBER", "diff", "NUMBER", "Merging", "NUMBER", "LINK", "pr", "into", "master", "LINK", "pr", "will", "decrease", "coverage", "by", "NUMBER", "diff", "master", "NUMBER", "diff", "Files", "NUMBER", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "NUMBER", "Methods", "NUMBER", "NUMBER", "Messages", "NUMBER", "NUMBER", "Branches", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "NUMBER", "Powered", "by", "Codecov", "LINK", "pr", "NUMBER", "Last", "update", "NUMBER", "cd", "NUMBER", "bbc", "NUMBER", "d", "LINK", "pr", "I", "will", "update", "the", "code", "and", "make", "a", "new", "pull", "request", "Current", "coverage", "LINK", "pr", "be", "NUMBER", "diff", "NUMBER", "Merging", "NUMBER", "LINK", "pr", "into", "master", "LINK", "pr", "will", "not", "change", "coverage", "diff", "master", "NUMBER", "diff", "Files", "NUMBER", "NUMBER", "Lines", "NUMBER", "NUMBER", "Methods", "NUMBER", "NUMBER", "Messages", "NUMBER", "NUMBER", "Branches", "NUMBER", "NUMBER", "Hits", "NUMBER", "NUMBER", "Misses", "NUMBER", "NUMBER", "Partials", "NUMBER", "NUMBER", "Powered", "by", "Codecov", "LINK", "pr", "NUMBER", "Last", "update", "db", "NUMBER", "f", "NUMBER", "dda", "NUMBER", "d", "LINK", "pr", "package", "main", "import", "fmt", "github", "NUMBER", "com", "Luxurioust", "excelize", "func", "main", "xlsx", "err", "excelize", "NUMBER", "OpenFile", "home", "Workbook", "NUMBER", "xlsx", "if", "err", "nil", "fmt", "NUMBER", "Println", "err", "cell", "xlsx", "NUMBER", "GetCellValue", "Sheet", "NUMBER", "D", "NUMBER", "fmt", "NUMBER", "Println", "cell", "Is", "there", "any", "way", "to", "read", "excel", "by", "rows", "like", "in", "tealeg", "s", "case", "go", "for", "_", "row", "range", "sheet", "NUMBER", "Rows", "in", "case", "I", "don", "t", "know", "how", "many", "rows", "be", "there", "the", "question", "be", "the", "same", "as", "the", "above", "NUMBER", "I", "ve", "submitted", "a", "pull", "request", "solving", "this", "issue", "NUMBER"], "text_count": [0, 18381, 4635, 2882, 2011, 81, 2381, 7, 36, 1749, 2844, 4517, 2506, 1893, 1871, 738, 0, 0, 0, 0, 6223, 1632, 712, 527, 1244, 1032, 0, 0, 0, 0, 13783, 8663, 5743, 199, 3363, 675, 0, 0, 0, 0, 17696, 66, 7472, 7286, 4974, 0, 0, 0, 0, 0, 3621, 1330, 2233, 846, 1228, 774, 1470, 0, 0, 0, 12169, 690, 9902, 863, 0, 0, 0, 0, 0, 0, 10026, 2046, 6501, 2937, 927, 0, 0, 0, 0, 0, 20417, 8565, 2397, 10084, 802, 422, 0, 0, 0, 0, 782, 4239, 329, 0, 0, 0, 0, 0, 0, 0, 12546, 3268, 7556, 2398, 0, 0, 0, 0, 0, 0, 35459, 56272, 913, 2334, 658, 1038, 0, 0, 0, 0, 75887, 359, 55795, 1155, 13333, 16567]}]