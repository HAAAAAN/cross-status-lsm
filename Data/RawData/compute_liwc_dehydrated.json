[{"repo": "dehydrated", "type": "elite", "title": "", "number of text": 625, "text": "  Mh... @bortzmeyer what OS are you running dehydrated on? Can you please post the output of `dehydrated -v`?  Mh... Are you using the `--signcsr` function combined with `--domain` parameters? Those are not designed to be used with this function and seem to be the trigger for this bug.  You (or ideally a script) have to create a _acme-challenge.yourdomain.tld TXT-record. The value for that will be generated by the Let's Encrypt server and dehydrated will call a hook-script with those values so they can be deployed. You should have a look at the example hook script which has an example deployment using nsupdate, or you could have a look at the project wiki where you can find a big list of user-provided hook-scripts for a ton of DNS providers / APIs.  Wat.  This looks weird. You should take a look at your domains.txt, maybe some weird zero-width-space unicode character got in the middle of your hostname or something similar. Otherwise please post the output of `dehydrated -v` and the content of your domains.txt.  Dehydrated doesn't refresh your certificate because from its view it's a completely valid certificate.\r\nYou can use `--force` to force dehydrated to refresh all certificates.  Yea, like others already said: The hook-script is responsible for waiting for propagation before handing control back to dehydrated. There are various reasons why dehydrated doesn't do this by itself (additional dependencies, unknown network-situation on users systems, anycast can become a problem, etc.).  Dehydrated could generate tls-alpn verification certificates as another way of verification, those should be easily deployable using a new hook.\r\n\r\nShort explanation on tls-alpn verification after reading the specs:\r\n\r\n> ALPN is a protocol extension for TLS which allows multiple protocols to be hosted on the same port (e.g. HTTP/2 and HTTP/1.1 on port 443)\r\n> \r\n> tls-alpn verification uses this with a new protocol \"acme-tls/1\" and a specially crafted self-signed certificate containing the verification code and the dns name of the to-be-validated domain.\r\n> \r\n> ca connects with the custom protocol, retrieves the certificate and does several checks on it, if everything matches the domain is validated\r\n> \r\n> because of the used dns name it's no longer possible to generate certificates for other domains on a shared host, which was the reason for tls-sni being disabled\r\n> \r\n> since alpn is required by http2 basically every modern webserver will support this\r\n\r\nTechnical specs for the required certificate extension:\r\n\r\n> The client prepares for validation by constructing a self-signed\r\n>    certificate which MUST contain a acmeValidation-v1 extension and a\r\n>    subjectAlternativeName extension [RFC5280].  The\r\n>    subjectAlternativeName extension MUST contain a single dNSName entry\r\n>    where the value is the domain name being validated.  The\r\n>    acmeValidation-v1 extension MUST contain the SHA-256 digest\r\n>    [FIPS180-4] of the key authorization [I-D.ietf-acme-acme] for the\r\n>    challenge.  The acmeValidation extension MUST be critical so that the\r\n>    certificate isn't inadvertently used by non-ACME software.\r\n\r\n```\r\nid-pe-acmeIdentifier OBJECT IDENTIFIER ::=  { id-pe 30 }\r\nid-pe-acmeIdentifier-v1 OBJECT IDENTIFIER ::=  { id-pe-acmeIdentifier 1 }\r\nacmeValidation-v1 ::= OCTET STRING (SIZE (32))\r\n``` So, I experimented a bit with this.\r\n\r\nGenerating the certificate seems very easy; The changes to dehydrated itself are minimal, I'm actually generating the verification certificate inside my hook-script for now.\r\n\r\nThe hard part is actually using it...\r\n\r\nAs far as I can see there is absolutely no support for working with custom ALPNs in any better-known webserver, and I think that kinda makes sense, after all they are made to reply to web-requests, not anything else.\r\n\r\nI was able to use nginx's ssl_preread module on my load-balancer to at least forward those requests to a different port, this should be a good starting point.\r\n\r\nI guess I'll try to find or write a simple responder... With fba49ba28eb746eae127aa36e7f515beeaf0bbae dehydrated now supports tls-alpn-01 verification. I added my example responder and load-balancer config to the docs directory, please handle with care.  Yea you can create multiple config files and set the path to your domain list in there, then you can run dehydrated with `--config /path/to/config/file` and it will use that config with the defined domain list.\r\n\r\nThere is no intended cli parameter to just set a different domains.txt, please see https://github.com/lukas2511/dehydrated/pull/463 for the reasoning behind that.  @RandieM sorry, i was closing this after @txr13's feedback.\r\n\r\nYes the parameter will be read from config, like tons of other variables and even functions (that's part of what makes dehydrated so adaptable), but it's not an intended config parameter and I don't want it to be one.\r\n\r\nI don't really like making skipping of errors configurable, if you are using it in a cron you can always just add the parameter so it doesn't disturb anything, but when run by hand I actually want issues like this to be seen and not accidentally be ignored. @RandieM It's probably better to add the command line switch to a cronjob, that way when you run the script manually for debugging it will still halt on errors. Otherwise there shouldn't be any harm, but there is no guarantee that it will keep on working in the future.  Please have a look at https://github.com/lukas2511/dehydrated/blob/master/docs/troubleshooting.md#dns-invalid-challenge-since-dehydrated-060--why-are-dns-challenges-deployed-first-and-verified-later  Well, the import script is kinda deprecated, that was used back when dehydrated didn't support registration itself (early 2016). If certbot hasn't change the format of their keyfiles you should get a valid key back, which you should be able to configure as `ACCOUNT_KEY`. `ACCOUNT_KEY_JSON` can be left empty, dehydrated will automatically try to fetch the account information and will use the path of your account key with an appended json ending.\r\n\r\n`ERROR: Certificate authority doesn't allow certificate signing` appears if a certain json key is missing from the CA directory. That can happen if you set a wrong `CA` variable, or the CA doesn't deliver that key because signing is disabled for maintenance or whatever, or some other kind of error, maybe even a rate-limiting notice instead of the usual json dictionary, you can check that easily using something like `curl https://acme-v02.api.letsencrypt.org/directory` (you should see JSON with a `new-authz` and `new-cert` key.\r\n\r\nSorry for the late reply, probably way too late, but I didn't want to just silently close this issue.  Alpine uses busybox for awk, sed, mktemp, grep, diff and everything else, and those are all just implemented with their very basic feature-set which in some cases just isn't enough. If i remember correctly there are coreutils-$whatever packages on alpine which should replace those busybox symlinks and with those everything should work normally. Could you run `bash -x ./dehydrated -c` and post the last few lines?  Since IDNs are stored as punycode this shouldn't be a problem, just enter the corresponding punycode domains in your config and you should be good to go.  Using sudo does allow for a user switch without the need for a password (if configured). Also the group option might be needed by some people. Nobody forces you to use the dehydrated integrated sudo operation, you could always just use `su` yourself.\r\n  Merged in e4e712c03ad70bd5100af1333c2801f4b5baa89a. Thanks.  Like @txr13 already said this should happen inside the `deploy_challenge` hook call. If you want to delay that you could always use `HOOK_CHAIN` for deploying the challenges and verifying all of them at once. Thanks for the suggestion anyway.  Like @jobe1986 said you can already extract that from the path and you could also just use the environment variable as it's exported.  This was fixed in 0.6.2.  Some DNS providers only allow a single TXT record per domain. This can currently result in problems when trying to use domain sets like `example.org *.example.org` where two challenges are verified on the same domain.\r\n\r\n!!!!!!!!!!!!!!!!!!!!!\r\nRead [the troubleshooting guide](https://github.com/lukas2511/dehydrated/blob/master/docs/troubleshooting.md#dns-invalid-challenge-since-dehydrated-060--why-are-dns-challenges-deployed-first-and-verified-later) before commenting on this thread!!!!!!!\r\n!!!!!!!!!!!!!!!!!!!!!\r\n\r\nIf (and only if!) you are using one of those providers and there is no way to fix your hook-script, your DNS-provider doesn't want to change their API and you can't easily change to a different DNS provider please leave a comment on this thread containing your DNS provider and a link to the API documentation so I can verify the issue.\r\n\r\nPlease also check if somebody else already commented with that provider and in that case just give that post a thumbs-up or something.\r\n\r\n(This ticket is closed intentionally as this is not really a dehydrated bug, I just want to get some feedback)  Here we go again... please check for duplicate issues/pull-requests in the future.\r\n\r\nShort explanation on why it is necessary to do it the way it currently is: Wildcard domain validations together with their upper level domain will fail if done like this (no way to tell which challenge is which) and I don't want to maintain two different loops for (non-)wildcard domains.\r\n\r\nMy suggestion would be to look for a different DNS provider or better yet: Talk to the DNS provider and explain to them that their API should be improved. There are lots of reasons why someone would want multiple TXT records. @txr13 sorry it was late at night and I was confused and a bit annoyed, the real problem is dns caching on CA side. If I deploy one challenge after another the CA keeps the old record up to 300 seconds in cache (min. depending on your own dns ttl), so if somebody would want to validate *.example.org and example.org (which both will be validated on example.org) this would fail basically everytime, in some cases maybe even if your ttl would be set to 1. I was thinking about changing the behaviour depending on \"duplicate\" authorization names (and with some delay-options for dns-caching), but I'd rather avoid it, and up to now basically everybody who screamed \"change it back to the old way!1\" just had to modify their hook script to get it back working.\r\n\r\nDuck DNS seems to me like a very odd provider, but I guess if somebody would contact them and explain them the situation they'd probably just implement multiple txt records. I added a section about this to [the troubleshooting guide](https://github.com/lukas2511/dehydrated/blob/master/docs/troubleshooting.md#dns-invalid-challenge-since-dehydrated-060--why-are-dns-challenges-deployed-first-and-verified-later) and [created a ticket/thread](https://github.com/lukas2511/dehydrated/issues/554) for a more centralized place for feedback about bad DNS provider APIs.  This works as intended. Because of problems with wildcard validations there isn't really any choice but to deploy all tokens before doing anything else. Since I wanted to avoid having multiple different behaviours this now is the way it works. Hook-Chaining is different in that it deploys all tokens in one hook-call, without chaining it's still one after another, just the validation is delayed. I don't really have any experience with Netscaler, but from a quick glance over your code you could just add multiple rules, or maybe there is a way to set up a reverse proxy or something? Otherwise you could maybe validate tokens over DNS-01 instead.  This is an issue with your webserver (probably Apache) configuration, not an issue with dehydrated. Fix your SSL redirect by adding a `/` to the end. @tjharman don't worry, I got used to this by now ;) @tjharman hehe, apology accepted ;)  Duplicate of #515 and #548. Update and try again. This should be fixed since over a month. @geomunion can you give me some feedback after trying the current master version? I'm preparing a release with the fix and would like to know if it really works. @yibfozzy just update, that is already fixed in the 0.6.2 release. @yibfozzy oh wait it actually seems to be a completely different issue. are you using dns validation? this seems like a dns ttl/caching issue to me.  Can you please update your version of dehydrated? This really seems to be a duplicate of #515 and has been fixed since over a month. @jreinert can you give me some feedback after trying the current master version? I'm preparing a release with the fix and would like to know if it really works.  Mh that is weird, I never encountered that issue... A nonce timeout seems unlikely to me as dehydrated retrieves a nonce for every signed request and immediately uses it.\r\n\r\nIf you encounter this issue often you could help me identify the issue by adding an `echo \"Nonce: ${nonce}\" >&2` after the whole code-block marked as `# Retrieve nonce from acme-server`.\r\nIf it happens again compare the nonce to the previous working ones and see if it is somehow shorter or looks completely different, has a special character the other nonces don't have, whatever it could be. This is a really hard issue to debug... I'm running dehydrated in a loop right now but I'm not able to get it to fail even once. I'll try to implement retries using the nonce send back by the server, but it's really really hard for me to test as I just can't get it to fail. @CliffS @legsak1mbo do you by any chance have multiple egress ip addresses or a dual stack (ipv4+ipv6) setup? can you verify if the issue goes away if you set `IP_VERSION=6` in your config file? @legsak1mbo are you sure? no NAT or something that could result in the request coming from a different IP? that's basically the only way I'm able to reproduce this issue. @legsak1mbo can you do a few `curl https://my-ipv4.kurz.pw` requests and see if the result changes between runs? just to make sure. @legsak1mbo yea.. meh. in that case even retries wouldn't do you any good as it would be basically luck-based if the request goes through cleanly...  Since a recent commit dehydrated works fine with filesystem ACLs and those can be applied as defaults to a directory. Using those ACLs you can already pre-define who should have access to the files while letting your main dehydrated user (or root) keep full control over the files.\r\n\r\ne.g.\r\n```\r\nsetfacl -m u::rwX,g::0,o::0 -m g:dehydrated:rX certs\r\nsetfacl -d -m u::rwX,g::0,o::0 -m g:dehydrated:rX certs\r\n```\r\nwould give every user in the `dehydrated` group read-access to the certificates.\r\n\r\nYou can also define multiple groups and you can set defaults for certain certificate directory (e.g. `setfacl -d -m u::rwX,g::0,o::0 -m g:www-data:rX certs/www.example.com`)\r\n\r\nSo basically everything you need already exists, and if you are using a filesystem that has no ACL support... well... use a hook script \u00af\\\\_(\u30c4)_/\u00af  Haha thanks, but I actually wanted the \"logo\" to be like it currently is. It took too much space in the readme and I might actually remove the \"logo\" from there in the near future when the new website and documentation is finished. On the website will be a place for a higher resolution \"logo\" ;)  Sorry, but real privilege separation in dehydrated is nothing I'm planning to work on.\r\n\r\nMost of the tasks would probably work without any root access:\r\n- Writing certificate files: Most services start as root anyway, give only dehydrated access to the certificate folder, the service will be able to read the files\r\n- Restarting/Reloading services: At least systemd has policykit support for giving users access to certain systemctl controls without direct root access (other init systems may have this as well, never tried)\r\n- DNS hooks and serving of challenge files shouldn't be much of a problem as well\r\n- For special cases you could always just use sudo in your hook script with special rules allowing only certain commands to be executed as root  Thanks, since this is so small I'll merge it with a few other minor changes in a future commit.  Your IPv6 seems to be broken and the CA is running into a timeout trying to access your page.  Whoopsie. Thanks! Merged in 53c458c318c04a287eb9e786a29e8d056e88e432.  Sorry but this is not a dehydrated bug-report so I'm closing this. Your best bet would be to look around on the Let's Encrypt community forums, other clients require very similar configuration so you might find some help over there.  I recently restructured the loop because it left challenges in place after an invalid validation and I mistakenly added a check for dns-01 validations for the hook-call. Removed that check and everything should be fine now.  @jobe1986 and then add a variable for a path to the sed binary? and for awk and grep? mktemp and diff would also be great... really i don't think this is necessary or even a good idea, that's exactly what the PATH variable was designed to solve. \"openssl\" binary can be set mostly for compatibility with libressl (but wouldn't even really be necessary, I just won't revert it as it would break some existing setups).\r\n\r\n@thegushi you have to make sure that your PATH variable is actually exported, otherwise dehydrated won't see or use it.\r\n\r\nIf for whatever reason you are having problems with this you could in theory override either \"curl\" in your config (something like `curl() { /usr/bin/curl ${*}`) or export a correct PATH variable in there (it's just a shell script that is sourced by dehydrated)\r\n\r\nAlso isn't curl normally installed under /usr/local/bin on FreeBSD? That isn't in your PATH, that may be your problem.  The privkey option was designed to allow use of an existing pre-registered key, there is no registration logic if a custom key is defined.\r\nDehydrated fails when it tries to receive additional information for the registered account for that key (well, because there is no account registered with that key).\r\n\r\nNot really a dehydrated bug, but the error message may be a bit confusing. This actually seems more like a boulder bug. I'll investigate the error message a bit more and may open an issue with boulder. Well, okay, two things:\r\n\r\n1) I now allowed the register command to also work with keys specified that way, so now registering custom keys should work, but what you are doing using `--privkey example.com.key` is wrong, that shouldn't be your domain key, that should be an account key and usually wouldn't be needed to specify as dehydrated handles account-management itself.\r\n\r\n2) Any error messages about ToS not being accepted actually seem to be a boulder issue because boulder doesn't implement the `only-return-existing` flag for account registration/information. I won't change anything about this in dehydrated as it actually follows the protocol specification and the CA should return a different error in this case. @cpu https://github.com/letsencrypt/boulder/blob/aff1d64605bc0f766e1a98ff34f93981e250f145/docs/acme-divergences.md#section-731 wasn't \"onlyReturnExisting\" acme-v1 and \"only-return-existing\" acme-v2? Or did I swap the two protocol versions around in my code? Or was it changed between drafts? I'm not entirely sure, I'm always confused which document is for which API version :see_no_evil: Is there a link where I can always get the most recent version of v1 / v2 specs? @cpu ok thanks, I uhm \"fixed\" that in ba5928776f9d2e42b73da816daacce180ca6f26c now, seems to be working fine.  This definitively is not a dehydrated bug. As @jobe1986 said this is an issue with your DNS host or with Let's Encrypt's servers. If you don't think your dns host is at fault (you can easily test that using something like `dig caa yourdomain.tld`) you can ask the community or open an issue at https://github.com/letsencrypt/boulder/issues.  This non-dehydrated-issue has been reported multiple times and generally just waiting some time (especially hardcoded 2+ minutes...) is not a good idea.\r\n\r\nYour hook-script should (after deploying the challenge) verify that all authoritative nameservers are serving the challenge. If waiting 2+ minutes works for you fine, go ahead and just add the `sleep 130` to your hook script, but this definitively doesn't belong into dehydrated.  Closed. See #528 for details.  I don't want to add this feature, most software can handle separate files and I think that should be encouraged. If you need something like this you can easily create a hookscript to cat those files together. Thanks for the suggestion anyway!  Duplicate of #499. Thanks for the suggestion anyway! I'll be working on this very soon!  Dehydrated can't really do anything about this. The CA is trying to access your server, and there are no options to be set. You probably have configured something wrong with your firewall.  Please take a look at the documentation before opening issues like this: https://github.com/lukas2511/dehydrated/blob/master/docs/dns-verification.md  @JavaScriptDude There is an issue with both ways of deploying challenges. Deploying both at the same time could potentially be problematic with some APIs, deploying one after another might result in cached DNS entries on ACME Server-Side which would result in the second challenge to simply fail (as it still sees only the first entry, basically becoming an ugly race-condition).\r\nSo trying to get around one issue (mostly the hook-script not working correctly) would just end up in the next issue (cached dns entries on server-side).\r\n\r\nTechnically it shouldn't be a problem to have multiple records set. Up to now every ticket/mail/twitter- and irc-question similar to this could be solved by just patching the hook-script, and this one seems to be exactly the same.\r\nIntroducing a different behaviors with a config-option or whatever would just end up with people tinkering around until it somehow works and then creating a ticket here 60 days later when their certificate is going to be renewed but everything fails since it was never set up correctly to begin with.\r\nUnless somebody comes up with an unavoidable scenario which _really_ requires the different behavior I don't want to implement that again (this was actually the old behavior until the caching issues became obvious).\r\n\r\nAbout the last part with the \"dangerous\" delete option. May I suggest to simply use the original \"erroneous\" replacement function and instead of deleting the TXT record replace it with a dummy record? I'd suggest setting it to `dehydrated was here!` :smirk: Of course only do this if the deletion really is that problematic, I don't know their API.  Well, that isn't something I can really help you with, sorry.\r\n\r\nMaybe you can find a DNS service which supports aliases like `_acme-challenge.*.example.net`, or create yourself a more trusted gateway API for your DNS setup that has whitelists for `_acme-challenge` subdomains (that's what I'm going to do for my systems), but otherwise I don't really know how to solve this.\r\n\r\nAbout the last paragraph: Well, at least with dns-01 this probably will never change. Think about delegated subdomains, e.g. `customer01.example.com` could be under control by a customer who wants to get a SSL certificate but has absolutely no control over `_acme-challenge.example.com`. Changing this would break existing behaviour, that would be really bad.\r\nMaybe this will change in the future with something like dns-02 validation, but I don't really think so. You are supposed to prove that you are controlling DNS, so prove it ;)\r\n\r\nAlso if you are using ftp01 to ftp99 subdomains you could still use http based validation or use a wildcard certificate ;)  Out of interest I just googled when pipefail was introduced. It seems it was introduced with bash version 3 which was released July 2004. Wow. But okay, you are running a powerpc setup, so I guess it's quite an old OS X version.\r\n\r\nInstalling bash from brew or ports definitively is the best solution for this, but I'm kinda wondering if the pre-installed zsh would work with dehydrated... mhm...  Mhm, do you have a config file in that certificate directory and is there the slightest possibility that dehydrated was somehow executed inside of that directory?\r\n\r\n`accounts` gets appended to `BASEDIR`, which normally comes from the config location, which (if there is nothing in `/etc/dehydrated` and `/usr/local/etc/dehydrated`) will be the current working directory\r\n\r\nBut if that happened it shouldn't have continued as it would basically have used a broken config and/or an empty `accounts` directory... but there is no other way, the word `accounts` doesn't occur anywhere else in the script and `ACCOUNTDIR` is only really used in the beginning of the script... I'm closing this for now as I can't reproduce this other than by running dehydrated directly in a certificate directory (any possibility that your hook-script somehow ran dehydrated?).\r\n\r\nI might change the (preferred) name for that config file in the future so dehydrated doesn't ever get confused by this...  merged  Currently dehydrated has very rudimentary JSON parsing which often results in issues with similarly-named values (like the recent #515 where dehydrated used the `url` string from a sub-dictionary instead of the root).\r\n\r\nAll JSON parsing should be replaced by something that actually \"understands\" the JSON structure instead of greping for values inside of it.\r\n\r\nI had a look at JSON.sh which looks promising and I actually started stripping it down to only the required functionality and making it compatible with all the bash/zsh options set in dehydrated.\r\n\r\nI also looked at some other \"libraries\" which used awk or sed for the parsing, but those seemed to be problematic on BSD and older GNU/Lunix systems.\r\n\r\nSo for now I'm planning on integrating JSON.sh, but if anybody knows about similar projects feel free to comment.  This is really weird... dehydrated shouldn't try to access the `http://whatever/.well-known/...` URL itself, especially not with a post request... The only way I see this would be possible is if challenge_uris somehow contains that url... which would be really weird... Can you please modify the code a bit and show me the result:\r\n\r\n```bash\r\n    # Gather challenge information\r\n    echo \"${challenge}\" # <---- ADD THIS\r\n    challenge_names[${idx}]=\"${identifier}\"\r\n    challenge_tokens[${idx}]=\"$(echo \"${challenge}\" | get_json_string_value token)\"\r\n    if [[ ${API} -eq 2 ]]; then\r\n      challenge_uris[${idx}]=\"$(echo \"${challenge}\" | get_json_string_value url)\"\r\n    else\r\n      challenge_uris[${idx}]=\"$(echo \"${challenge}\" | get_json_string_value uri)\"\r\n    fi\r\n``` And please post the output of `dehydrated --version` so I can get an idea about the environment you are running dehydrated in. Aww crap I don't think i've ever seen that validationRecord before, dehydrated matches on that, that's why the url is broken...\r\n\r\nCan you try this patch?\r\n\r\n```diff\r\ndiff --git a/dehydrated b/dehydrated\r\nindex 473bbf1..b9a8922 100755\r\n--- a/dehydrated\r\n+++ b/dehydrated\r\n@@ -735,9 +735,9 @@ sign_csr() {\r\n     challenge_names[${idx}]=\"${identifier}\"\r\n     challenge_tokens[${idx}]=\"$(echo \"${challenge}\" | get_json_string_value token)\"\r\n     if [[ ${API} -eq 2 ]]; then\r\n-      challenge_uris[${idx}]=\"$(echo \"${challenge}\" | get_json_string_value url)\"\r\n+      challenge_uris[${idx}]=\"$(echo \"${challenge}\" | _sed 's/\"validationRecord\": ?\\[[^]]+\\]//g' | get_json_string_value url)\"\r\n     else\r\n-      challenge_uris[${idx}]=\"$(echo \"${challenge}\" | get_json_string_value uri)\"\r\n+      challenge_uris[${idx}]=\"$(echo \"${challenge}\" | _sed 's/\"validationRecord\": ?\\[[^]]+\\]//g' | get_json_string_value uri)\"\r\n     fi\r\n \r\n     # Prepare challenge tokens and deployment parameters\r\n```\r\n\r\nI'm going to soon replace all the JSON parsing in dehydrated with parts of JSON.sh, that should avoid issues like this in the future... Btw. this issue should only occur while using the `--force (-x)` parameter, normal operation shouldn't be affected.  I merged your pull-request but extended it in 8ba56a8048a15b8f80eb46fd9f95e2e98147f935. Basically renamed the hook to deploy_ocsp (to be similar to deploy_cert) and exported altnames for use inside the hook. Thanks for the suggestion and the initial pull-request!  Hey, there already is a pullrequest open in #502 which adds an example and improves the documentation. Thanks anyway!  Thanks for reporting, I fixed the issue and tested with zsh on Debian, I guess it should work on FreeBSD too.  I'm thinking about dropping ACMEv1 support. Not today, not tomorrow, rather in a few months, with limited support in the meantime.\r\n\r\nACMEv2 has (or will?) become an official RFC and will be the most likely protocol to ever be supported by other CAs, ACMEv1 on the other hand was just really implemented by Let's Encrypt and their own API endpoint will probably be disabled in the foreseeable future.\r\n\r\nDehydrated has quite a bit of code that just deals with ACMEv1 behaviour. A rough count gave me over 150 lines of code (there probably is even more). There are a few open bugs which are only really relevant for ACMEv1 and there were bugs like the recent 301 redirect failure which wouldn't affect ACMEv2 to begin with, so I'm guessing there could be other issues with ACMEv1 and those will be harder to find in the future as the ACMEv1 userbase shrinks.\r\n\r\nWhat do you internet-people think? Is there any good reason supporting it in the long run? @txr13 I was thinking about six months, less if Let's Encrypts disables their API endpoint earlier. After all it's basically the only one in existence, so if it gets disabled there isn't much more I can break removing support for it.\r\n\r\nAnd I guess you are right, downgrading always is an option if people really need this and they could always just cherry-pick or easily backport newer features. I decided to close tickets with v1-only minor issues and will no longer work an any bigger v1 improvements. I'll still merge or work on smaller fixes, but nothing that isn't really necessary or would require bigger changes without much benefit for v2 users. @colin-stubbs there shouldn't really be any problems with the wildcards anywhere in the script and for directory names i'm enforcing aliases to be set so no path with '*' will ever be accessed  Well, it probably was an accident, but I'll argue against removing the required suffix.\r\n\r\nI know this behaviour from a lot of software, e.g. nginx includes `*.conf` files, uwsgi includes `*.ini` (or has a systemd service with wildcard for that), other software does similar things.\r\n\r\nRequiring this file ending does a few things: Editor tmp/backup files like `myconfig.sh~` will not be included, \"archived\" files like `myconfig.sh.old` will be ignored, etc. It also allows for files like `put_config_here`, or `README`.\r\n\r\nThe other config files have static names, there is just one file in that directory, so the name doesn't really matter that much. In my opinion removing the suffix from the wildcard would be a bad move, but so would be renaming those config files (it was `config.sh` before 0.3.0, and was renamed to just `config` to make it clear that it's not intended to be a executable script).\r\n\r\nMaybe a good move would be to use `*.conf` instead, which makes this more like other software and a bit more clear that those are \"just\" config files. But people are using `.sh` files now, supporting both is a bit redundant, so I guess the best thing would be to just leave it like is.\r\n\r\nAny other opinions on this? I'm always open for suggestions. And obviously a solution to this issue would be better documentation... which I'll be working on... soon...ish... I promise! ;)  I also don't see how that code would be invalid, it only deletes exactly what it should delete.  Can you run `bash -x dehydrated -c` and post the last few lines before it exits? @TB1234 please run it like this: `bash -x /opt/dehydrated/dehydrated -c -o /etc/ssl/reksys -a secp384r1 -d domain.de >> /var/log/dehydrated/dehydrated.log 2>&1` @TB1234 please just run it exactly like this: `bash -x /opt/dehydrated/dehydrated -c -o /etc/ssl/reksys -a secp384r1 -d domain.de`\r\n\r\nyour output is unusable since you are passing your actual command as parameter, which makes no sense Hu, that looks really weird...\r\n\r\nCan you look for this section in the code (end of `http_request` method)...\r\n\r\n```\r\n  if { true >&4; } 2>/dev/null; then \r\n    cat \"${tempheaders}\" >&4\r\n  fi\r\n  cat \"${tempcont}\"\r\n  rm -f \"${tempcont}\"\r\n  rm -f \"${tempheaders}\"\r\n```\r\n\r\n...and add some debug code like this...\r\n\r\n```\r\n  echo \"checking pipe 4\" >&2\r\n  if { true >&4; } 2>/dev/null; then \r\n    echo \"using pipe 4\" >&2\r\n    cat \"${tempheaders}\" >&4\r\n  fi\r\n  echo \"getting curl output\" >&2\r\n  cat \"${tempcont}\"\r\n  echo \"deleting temp files\" >&2\r\n  rm -f \"${tempcont}\"\r\n  rm -f \"${tempheaders}\"\r\n```\r\n\r\n... and tell me what the result is?\r\n\r\nAlso the output of `dehydrated --version` would be helpful. My best guess is that somehow filedescriptor 4 is open when the script starts and closes on first operation (which would be the check if it's open...)\r\n\r\nCould you try placing something like `{ true >&4; } 2>/dev/null || true` right at the beginning of the script (above `set -e`) and see if that changes anything?  Can you try adding...\r\n\r\n```\r\n# Close weird external file descriptors\r\nexec 3>&-\r\nexec 4>&-\r\n```\r\n\r\n... above `set -e` and see if that changes anything? Merged into master, will be in the next release unless somebody screams that this breaks lots of other stuff \u00af\\\\_(\u30c4)_/\u00af  Please have a look at the documentation (https://github.com/lukas2511/dehydrated/blob/master/docs/dns-verification.md) and/or search for existing tutorials on the web.\r\nBasically instead of uploading/copying a file to a webserver there are certain DNS entries that have to be set for validation. @Falseee you'll need to use a hook script and an api provided by your dns provider (if there is any), there are also ways to do this by hand and there are ton of examples and tutorials over in the wiki: https://github.com/lukas2511/dehydrated/wiki/Examples-for-DNS-01-hooks  Yea, like @txr13 said this is an issue with the dns hook script, for hook-chaining with certificates like `example.com *.example.com` you'll need to have multiple txt records with corresponding challenge tokens on the same domain at the same time.\r\n\r\nWithout chaining it would in theory work, but keep in mind that Let's Encrypt caches DNS entries for up \r\nto 5 minutes, so you may run into validation issues. After validating one of the two names it doesn't need to be validated again, so only the second one gets validated, and since now there is only one record it will obviously succeed.\r\n\r\nBest way is to just improve the dns hook-script. @bviktor things can get a bit confusing with two authorizations having the same human-readable name combined with dns caching and other stuff\r\n\r\nYour zone should look something like this after all challenges have been deployed:\r\n\r\n```\r\n_acme-challenge.example.com. 300 TXT \"foo\"\r\n_acme-challenge.example.com. 300 TXT \"bar\"\r\n```\r\n\r\nWithout hook-chaining the process should look something like this:\r\n\r\n```\r\n# INFO: Using main config file /etc/dehydrated/config-v2\r\nHOOK: this_hookscript_is_broken__dehydrated_is_working_fine__please_ignore_unknown_hooks_in_your_script\r\nHOOK: startup_hook\r\nProcessing dehydrated.de with alternative names: *.dehydrated.de\r\n + Creating new directory /etc/dehydrated/certs/dehydrated.de ...\r\nHOOK: this_hookscript_is_broken__dehydrated_is_working_fine__please_ignore_unknown_hooks_in_your_script\r\nHOOK: generate_csr dehydrated.de /etc/dehydrated/certs/dehydrated.de dehydrated.de *.dehydrated.de\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting new certificate order from CA...\r\n + Received 2 authorizations URLs from the CA\r\n + Handling authorization for dehydrated.de\r\n + Handling authorization for dehydrated.de\r\n + 2 pending challenge(s)\r\n + Deploying challenge tokens...\r\nHOOK: deploy_challenge dehydrated.de x1 y1\r\nHOOK_LOG: + Deploying challenge token for dehydrated.de.........\r\nHOOK: deploy_challenge dehydrated.de x2 y2\r\nHOOK_LOG: + Deploying challenge token for dehydrated.de.........\r\n + Responding to challenge for dehydrated.de authorization...\r\nHOOK: clean_challenge dehydrated.de x1 y1\r\nHOOK_LOG: + Removing challenge token on dehydrated.de.........\r\n + Challenge is valid!\r\n + Responding to challenge for dehydrated.de authorization...\r\nHOOK: clean_challenge dehydrated.de x2 y2\r\nHOOK_LOG: + Removing challenge token on dehydrated.de.........\r\n + Challenge is valid!\r\n + Requesting certificate...\r\n + Checking certificate...\r\n + Done!\r\n + Creating fullchain.pem...\r\n + Using cached chain!\r\nHOOK: deploy_cert dehydrated.de /etc/dehydrated/certs/dehydrated.de/privkey.pem /etc/dehydrated/certs/dehydrated.de/cert.pem /etc/dehydrated/certs/dehydrated.de/fullchain.pem /etc/dehydrated/certs/dehydrated.de/chain.pem 1521047586\r\n + Done!\r\n + Updating OCSP stapling file\r\nHOOK: exit_hook\r\n``` @bviktor dehydrated has a mode where it basically puts everything that has to be deployed to dns (for a single certificate) into a single hook-call (see https://github.com/lukas2511/dehydrated/blob/master/docs/hook_chain.md).\r\nIt's especially useful for people with lots of domains, but it could also make logic for a hook a bit easier (deploy everything, delete verything, instead of deploying and removing one by one)  Do you mean for wildcard certificates? Have a look at https://github.com/lukas2511/dehydrated/blob/master/docs/per-certificate-config.md, no need to switch to dns-01 globally.  I took a quick glance at your changes, looks good and I'll probably merge it later today or tomorrow.\r\n\r\nBetter documentation is something I'm going to be working on a lot more in the near(ish) future :wink: Thanks, I merged your changes in 7c40c727a0e933382d72fa689ff3bea294895326 :+1:   Whoopsie. The easiest solution for this would be to just completely ignore the old `chain.pem` and just write the certificate directly to `fullchain.pem`, but that may break some setups...\r\nI'll need to figure out how to extract just issuer certificates from a file with multiple certificates... I guess since they are in order I could just sed and grep my way to those certificates, but does anybody know a cleaner way? Should be fixed with 2533931cf1311e33252bc2492975afae71bd447f, thanks for reporting this issue.  As @jobe1986 said Let's Encrypt strips those parameters, only CN will be set.\r\n\r\nReason is that only the domain is validated, the CAs don't want to sign any other (unvalidated) information like an organizations name. @nova-2nd like i said: \"Reason is that only the domain is validated, the CAs don't want to sign any other (unvalidated) information like an organizations name.\"  It would be great if dehydrated would (ideally by default) allow for a multi-cert configuration with RSA and elliptic curves like suggested in the [Let's Encryption Integration Guide](https://letsencrypt.org/docs/integration-guide/). This would allow for modern and fast cryptography with a fallback for older clients.\r\n\r\nThis would basically affect the `sign_domain` and `command_sign_domain` functions, a few filenames would change but backwards compatibility will be a priority.\r\n\r\nI think the ideal output would be a directory structure like this:\r\n\r\n```\r\ncerts/example.com/cert.rsa.pem -> cert-1234.rsa.pem\r\ncerts/example.com/fullchain.rsa.pem -> fullchain-1234.rsa.pem\r\n...\r\ncerts/example.com/cert.secp384r1.pem -> cert-1234.secp384r1.pem\r\ncerts/example.com/fullchain.secp384r1.pem -> fullchain-1234.secp384r1.pem\r\n...\r\ncerts/example.com/cert.pem -> cert-1234.rsa.pem\r\ncerts/example.com/fullchain.pem -> fullchain-1234.rsa.pem\r\n```\r\n\r\nI'm thinking about having the config look something like this: `KEY_ALGO=\"rsa secp384r1\"`\r\n\r\nThe main symlinks like `fullchain.pem` would point to the first given algorithm, which will make the new scheme fully compatible with the old one (where only one was set, default being \"rsa\").\r\n\r\nThe certificates will be generated fully independent of each other, but double-authorization of domains shouldn't be required as the authorizations are \"cached\" by the CA, so this wouldn't really make the script much slower and for bigger setups there always will be the option to just choose an algorithm by setting the config variable. @twrist great to hear that people are actually using setups like this. does haproxy really need those file-endings or are they configurable?  Set default config variables according to new acme endpoint addresses when it becomes available. Done in master :) Release v0.6.1 will follow very soon!  Yea, dehydrated doesn't control any ports, I didn't even know that something is using port 8123 \u00af\\\\_(\u30c4)_/\u00af  LE had problems for a while, \"Internal Server Error\" is never a dehydrated issue, thanks for reporting anyway.  This issue is kinda resolved and/or not really dehydrated specific. I opened #498 for a better approach of dealing with issues like this.\r\n\r\n@cpu thanks, i created #497 and will probably implement this behaviour for the 0.6.1 release  It's fixed now, thank you. Domain was missed in my cronjob \ud83d\ude48  Thanks, this should be fixed with the commit mentioned above.  Dehydrated is constantly extended with new hook calls and existing hook scripts constantly break and I get tons of bug reports that dehydrated is broken while it's actually just the hook script that breaks everything.\r\n\r\nHook scripts should just ignore unknown hooks, that's why this hook breaker has been implemented.\r\nIt should make it clear to hook script authors to simply please_ignore_unknown_hooks to be compatible with future dehydrated versions.\r\n\r\nIf you are using somebody elses hook script please contact them to ignore all unknown hook calls. If this is your script please make sure that you ignore unknown hooks.\r\n\r\nSee the example hook for an example implementation on how to ignore unknown hook calls:\r\nhttps://github.com/lukas2511/dehydrated/blob/2eedd69ee9420db11cd9b542a37ca2f2266adb7e/docs/examples/hook.sh#L164-L166  Are you using the newest version from git? This should already be fixed since 7a0e71c6c2ccc6e98abca5ea1c7de28053e90c02.\r\n\r\nEdit: dehydrated 0.6.0 will be released in the next few days and will include this fix  Wildcard certificates are validated at the upper level of domain (e.g. `*.example.com` validates at `example.com`).\r\n\r\nYou can see that the script is actually trying to handle two authorizations for `example.com`, one is for the wildcard certificate, the other for the normal domain, and there is no way for dehydrated to know which one is which.\r\nThe corresponding tokens have to be in your DNS zone at the same time, or possibly one after another with very short TTLs or a 5 minute delay in the hook script, otherwise you'll have DNS caching issues.\r\nMy best guess would be that your hook-script is replacing the TXT record instead of appending new ones, this will result in a missing token.\r\n\r\nIt's confusing but there isn't really a good way around this, neither from the CA standpoint, nor inside dehydrated.  Well... the reason is as follows:\r\n\r\n```\r\n\u039e ~ \u2192 curl https://acme-staging-v02.api.letsencrypt.org/directory -A \"curl/7.58.0 dehydrated/0.5.0\" \r\n<HTML><HEAD>\r\n<TITLE>Access Denied</TITLE>\r\n```\r\n\r\nBut...\r\n\r\n```\r\n\u039e ~ \u2192 curl https://acme-staging-v02.api.letsencrypt.org/directory -A \"curl/7.58.0 dehyd/0.5.0\"  \r\n{\r\n  \"9vyBT0DoJ8E\": \"https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417\",\r\n  \"keyChange\": \"https://acme-staging-v02.api.letsencrypt.org/acme/key-change\",\r\n  \"meta\": {\r\n```\r\n\r\nI'm not sure what's going on there, but it seems that `hydra` is somehow blacklisted in the WAF... So I can't possible include the name of my client without everything breaking ;) I added a temporary user agent with letter replacement (68274646bbb40e733d9fb5f3b0590d124a3aaea9). I guess this makes dehydr4ted the most 1337 client option available.\r\n\r\n@cpu any update on this? @cpu Mh, I just checked, it works for the ACMEv2 staging environment, but not for production and the old staging environment :-/ @cpu Is this something Akamai has in their default blacklist? If that's the case I guess it would be better to just stay with the 31337 spelling... It would be really bad if in the future somebody re-enables a default blacklist and slightly outdated dehydrated versions (*cough* debian sta*b*le *cough*) would stop working. @cpu btw. i'm guessing you are generating some kind of internal stats over those user agents, will those ever be published? i'd be really interested in having a good idea about how many people actually use dehydrated for their certificates :smile: @cpu I checked again and it seems to be working on all environments now, un-1337-ed in 981179a7709aa64c951a4ba293f7a9c3db49e1c0, thanks!  Thx, merged in a6a07779ad54f06fd75826bc357fafec2047cea2  Currently certificates which have a wildcard domains as CN and no defined alias will be stored in `*.example.com` directories.\r\n\r\nThis should work fine under any *nix system, but might be error-prone when used by hook-scripts or especially when typed on the shell (imagine something like `rm -r certs/*.example.com`, which will erase all certificates for example.com-subdomains, not just the wildcard certificate).\r\n\r\nA solution I have in mind would be to store `*.example.com` as `wildcard_example.com`. Since `_` is not part of a valid hostname this should not conflict with any possible domain.\r\n\r\nAn alternative would be to just fail and ask the user to set an alias for the certificate. This would have the added benefit of having a possible way about warning users not to over-use wildcard certificates and they'd know exactly where their new certificates would be stored. I'd love to know how certbot is going to tackle this... The original naming scheme was basically copied from certbot and it would be great to keep some \"compatibility\" if their solution seems nice. Does anybody know something about that?\r\n\r\nOtherwise I think I'll just be going with the alias-route.\r\n\r\nI'll decide in the following days when I have time to continue working on the changes for the next release. @bmw mhm... i don't like that. for most of my own use-cases i'd like to have separate certificates for the subdomains and the main domain, so having it remap on the main domain will be a conflict... but thanks for the insight.\r\n\r\nI'll go with the alias, easiest solution \u00af\\\\_(\u30c4)_/\u00af  This is not an issue with dehydrated, just an issue with your logging setup. You can easily pipe dehydrated output to something like `logger` to set a syslog facility, or instead of a simple cronjob use a systemd service and timer which will take care of usable logging by default. Sorry but for that I'd need to prefix basically any line of log output from dehydrated with its name. Just adding the prefix to the last error would be very inconsistent and you'd have thousands of lines of log with warnings and basic information without knowing where they are coming from.\r\nName just one widespread tool that does that and I might consider adding an option for that. \r\n\r\nYou are setting dehydrated up on your system, you are running the code, you should think about how you want your logging to be handled when you are setting things up. At some point you would have added a dehydrated cronjob or something similar, at that point you should have thought about how to handle its output, being it a pipe to `logger`, appending its output to a logfile, or using one of the hundreds of cron logging wrappers available out there.  I did one more change in dcdb2940fbc4b8468cbbe75ea7725cf0a3306262, if that doesn't fix your problem your hook script probably is broken. It should ignore unknown hooks and exit cleanly, otherwise dehydrated won't work. I think I know what is going on... should be fixed in a6e6aa74457c146e3a7de95c135b98e690dc0d41.  Mh... Can you run something like `bash -x dehydrated -c` and post the last few lines before it exits? I think this is related to the recent addition of the \"hook-bricker\". I did one more change in dcdb2940fbc4b8468cbbe75ea7725cf0a3306262, if that doesn't fix your problem your hook script probably is broken. It should ignore unknown hooks and exit cleanly, otherwise dehydrated won't work. Sorry i think I found the issue. Should be fixed in a6e6aa74457c146e3a7de95c135b98e690dc0d41.  I'd rather like people reading the actual documentation than just copying commands and creating tickets that it didn't work... Besides the getting started section in the readme basically tells you what to look for and running with `--help` gives you a descriptive list of all possible commands and parameters.  @joeydc again: not a dehydrated issue, the hook script is broken. i replied to your ticket over on le-godaddy-dns to let the author know and dehydrated now tries to make it clear what's going on.  Hook scripts should just ignore any hooks they don't know. This is a bug in the mentioned hook script and not in dehydrated. I added a random hook call in 9ebab3e026569e79971fd7be14c522b22025150d to make it extremely clear that unknown hooks should just be ignored.  A new hook will be implemented which allows for external CSR generation or fetching, this should make it possible to use dehydrated to e.g. sign certificates for routers or similar more closed systems without handling their private keys. The hook will be called `generate_csr`, and will have the name of the certificate as listed in domains.txt as single parameter. Domain altnames and timestamp can be read from the environment.\r\n\r\nAll names for the certificate order will be extracted from the generated / fetched CSR, so domains.txt can basically contain a simple alias and doesn't need the correct domain-set in this case. Implemented in 63854b752ba7745dff3dc459f700bd594d25686e. @Gnarfoz at least DNS has to be resolvable from outside so you can use DNS-01, you need to verify ownership of the hostnames in some way  Can you provide any more information on this? Is there a weird exit code? Are you running dehydrated with bash or zsh? Can you post the output of `dehydrated -v` please? Mh, can you check if it works when disabling `OCSP_FETCH`? And please run `bash -x dehydrated -c -g` and paste the last few dozen lines, that would show where it stops. `IP_VERSION` is only for communication with the CA not the other way around, so it doesn't make sense on a per-certificate basis.\r\n\r\n`registration_info.json` is only created in more recent versions of dehydrated, if you have a very old account key that file just was never generated\r\n\r\nUnfortunately I kinda posted you the directions in the wrong order so now I see only the trace of a fully working run. Could you try removing `ocsp.der` for one of your certificates and run the debug command again? I'm guessing it fails on the openssl command... which openssl version are you using? Meh... I kinda guessed that would be the problem, the syntax probably is a bit different...\r\n\r\nWould you mind going into the script, look for the line containing `if grep -qE \"^(0|(1\\.0))\\.\" <<< \"$(${OPENSSL} version | awk '{print $2}')\"; then` and replace the whole line with a `if true; then`. It should then use the syntax for the old OpenSSL version, I'm wondering if that might actually do the trick... Since c0bcf91410a57f292416ac911440c606524f16e6 dehydrated will show an error message if fetching of the ocsp stapling file fails. Since enabling this kinda shows that the user needs and may rely on it I'll keep this as a hard failure.  Ooops... missed that one... Thanks!  Nice hook script, but please add it to the wiki. I'm keeping examples inside the repository at a bare minimum for now.  Hey, which version of openssl were you using? I just tried this with 1.1.0(f,g) and the output had the correct acl set. I'd rather not implement any more wrappers if this just affects outdated openssl versions anyway... Ok sorry you are right, something weird is going on with the file permissions. I'll have a look at your patch in the next days and it will probably make it into the 0.6.1 release. @intelfx sorry, lost track of this, can you verify that the patch below is working fine with acls? I didn't like the wrapper so I'm working with temporary files, should do the trick...\r\n\r\n```\r\ndiff --git a/dehydrated b/dehydrated\r\nindex 2738495..80014e2 100755\r\n--- a/dehydrated\r\n+++ b/dehydrated\r\n@@ -340,7 +340,10 @@ init_system() {\r\n       fi\r\n \r\n       echo \"+ Generating account key...\"\r\n-      _openssl genrsa -out \"${ACCOUNT_KEY}\" \"${KEYSIZE}\"\r\n+      local tmp_account_key=\"$(_mktemp)\"\r\n+      _openssl genrsa -out \"${tmp_account_key}\" \"${KEYSIZE}\"\r\n+      cat \"${tmp_account_key}\" > \"${ACCOUNT_KEY}\"\r\n+      rm \"${tmp_account_key}\"\r\n       register_new_key=\"yes\"\r\n     fi\r\n   fi\r\n@@ -929,10 +932,13 @@ sign_domain() {\r\n     if [[ ! -r \"${certdir}/privkey.pem\" ]] || [[ \"${PRIVATE_KEY_RENEW}\" = \"yes\" ]]; then\r\n       echo \" + Generating private key...\"\r\n       privkey=\"privkey-${timestamp}.pem\"\r\n+      local tmp_privkey=\"$(_mktemp)\"\r\n       case \"${KEY_ALGO}\" in\r\n-        rsa) _openssl genrsa -out \"${certdir}/privkey-${timestamp}.pem\" \"${KEYSIZE}\";;\r\n-        prime256v1|secp384r1) _openssl ecparam -genkey -name \"${KEY_ALGO}\" -out \"${certdir}/privkey-${timestamp}.pem\";;\r\n+        rsa) _openssl genrsa -out \"${tmp_privkey}\" \"${KEYSIZE}\";;\r\n+        prime256v1|secp384r1) _openssl ecparam -genkey -name \"${KEY_ALGO}\" -out \"${tmp_privkey}\";;\r\n       esac\r\n+      cat \"${tmp_privkey}\" > \"${certdir}/privkey-${timestamp}.pem\"\r\n+      rm \"${tmp_privkey}\"\r\n     fi\r\n     # move rolloverkey into position (if any)\r\n     if [[ -r \"${certdir}/privkey.pem\" && -r \"${certdir}/privkey.roll.pem\" && \"${PRIVATE_KEY_RENEW}\" = \"yes\" && \"${PRIVATE_KEY_ROLLOVER}\" = \"yes\" ]]; then\r\n``` I tested it myself and found one more bug (chain files were missing the attributes), it's now commited with 52c2c199945bd59a6f659f2aaff4c06bc6959c94. If you find anything else that's missing the attributes please let me know. @intelfx well, functionality wise i think your approach makes more sense, mine has really unnecessary tempfiles, but I think it's more readable and it duplicates less functionality. I'll eventually work on this in the future, but for now this does the job.  merged in 742c0ad176f173118d8d4b19d19cec962741f99b  Closing this pullrequest as commits are mashed up. I'll implement something very similar for the next release, basically a quick nagios-check feature. Suggestions and further discussion should move to the original ticket #108.  Since there were no more reports of this happening (and the relevant code has been restructured anyway) I consider this issue solved.  @belliash should be fixed with 45f5c17260a7a76a392f11c8a4c762c355476ba0 @belliash nothing wrong, that's exactly how it's supposed to be, wildcards are validated at the upper level domain (and there is no way to differentiate which authorization is for which domain, so I can't make it more verbose). the issue you are running into seems to be the boulder bug that was already mentioned in this discussion: https://github.com/letsencrypt/boulder/issues/3333. it's fixed now, but I guess it isn't yet deployed to the staging environment. as a workaround you can delete your account key and register a new one, that should work. I'm closing this as ACME v2 support seems to be quite stable by now \ud83c\udf89 \r\n\r\nThere are still a few things that might be implemented before the next release (e.g. order-reuse after certain failures would be nice), but main support for the new protocol and wildcard certificates is there and seems to be working fine \ud83d\ude04 \r\n\r\nIf you are having issues with ACME v2 please create new issues instead of replying to this one. @bviktor *.domain.com in domains.txt, just like every other domain. but keep in mind that it only works with ACMEv2, so currently only with the staging api. thanks @txr13, and @jangrewe yes, my wishlist is always up to date ;)\r\n\r\nI'm going to lock this conversation so that new issues will land in their own tickets instead of this big collection, makes it easier for me (and others) to find duplicates :smile:   Can you give an example for when this would be really useful? I can't think of anything... closing this for now, thanks anyway. Yea but in that case wouldn't it be best to use a deployment hook anyway, and in there you could always just use readlink to resolve the real file and create a hard-link yourself, in any way you like, with correct permissions and everything... Still don't really see a reason in adding this to dehydrated itself.  Thanks, this was an oversight, I just added it to the example config.  @taylorotwell can you please test with the newest version? this should be fixed now  @it-can mh for me this works fine without an additional host argument... can you please post the output of `dehydrated --version`? Just interested on why this fails, not meaning that this will not be fixed.\r\n\r\nOtherwise (as @txr13 stated) this pull-request is LE-specific and it also will probably only work with that specific sub-CA and will break in the near(ish) future. I'll rewrite this to take the existing parameter, closing this pullrequest. Please see e339b28159a86720898ad60bb90207ca68977192, this should fix your issue.  @it-can did you actually try it? `_sed` in the code is an alias for `sed -r` or `sed -E` (depending on OS), and with that this works:\r\n\r\n```\r\n\u039e ~ \u2192 echo \"http://ocsp.int-x3.letsencrypt.org\" | sed -r 's/^http(s?):\\/\\///'\r\nocsp.int-x3.letsencrypt.org                                                  \r\n\u039e ~ \u2192 echo \"https://ocsp.int-x3.letsencrypt.org\" | sed -r 's/^http(s?):\\/\\///'\r\nocsp.int-x3.letsencrypt.org\r\n``` I can reproduce the issue now, it seems that openssl has changed the syntax for the header parameter from version 1.0.x to 1.1.x... Meh... :disappointed: Please see 2b76d038d374acc9b4237da7e224be9e48ac2439, does this work for you?  This should just be a problem with your hook script, please see the newer example hook for someting that won't fail every time I add a new hook...  Thanks for reporting this! I removed the short option for --account.  Please, if you gonna ask these questions read the documentation first. I'll answer anyway, but these already answered questions are annoying...\r\n\r\nBasically you can use two hooks, one would be the `deploy_cert` hook which gets called after a new certificate has been issued (normally to copy it somewhere, but you don't need to do that, you can just reload your webserver), or you could use the `exit_hook` which gets called after every run (for a small webserver which probably is only used for some webmail and the challenge tokens a reload a week probably won't hurt anybody). @petarkozic sorry I'll not be holding your hand going through this, I'd recommend reading the documentation and looking at howtos and examples that other people already published  For me it seems that you didn't list your CSRs Common Name in the Subject Alternative Name section, which you should do since browsers nowadays don't really care about a certificates Common Name.\r\n\r\nCan you please check that and report back? Please add vi-server.org as Subject Alternative Name for this to work, this is how it is supposed to work (in dehydrated as well as in the intended usage for this x509v3 extension).\r\n\r\nIf you want to know more about Common Name being ignored I'd suggest looking for the security changes of Chrome 58 or Firefox 48.\r\n\r\nCN will only be parsed by dehydrated when there is no SNI extension in the csr, and is actually only meant to be a fallback, this feature may be removed in the future.  Merged in 33c77e6daa27b6e2d82534b2e4b2ecdfc0ccf50a, thx.  Mh... I've just implemented caching for certificate chains (see d685463673919ba4f9d2035d021293f241a66055), with that you could at least write the file manually and have the script working on the next run (error message gives instructions on where to get and place files).\r\n\r\nMoving the certificate in place before everything else is ready is no option for me, I (and probably most of the scripts users) always use the fullchain.pem in combination with privkey.pem, so if cert.pem and privkey.pem would have been moved in position before fullchain.pem was generated this would result in tons of broken systems.\r\n\r\nDoes the cache fix your issue? Otherwise we might think about implementing a fixup-command, that looks for unlinked certs and keys, verifies that they are valid (ocsp), generates the chain and puts them into place, but this would be quite a lot of work for an edgecase like this...  For me it seems that dehydrated is using a different config / path than when you initially ran it.\r\n\r\nI'd recommend setting the paths in a config file and tell your cronjob which config to use, just to be sure. \r\n\r\nNormally this isn't necessary, but without any more information I have no idea what is wrong with your specific setup. Closing this issue for now since this seems like just a user error to me.  I'd do what @txr13 suggested, this is really worth implementing in dehydrated itself.\r\n\r\nIf you split to multiple certificates you can always define other hook-scripts (see [per-certificate-config](https://github.com/lukas2511/dehydrated/blob/master/docs/per-certificate-config.md)), but for a single certificate using a \"master\" script that splits to the corresponding sub-hooks is your only option.  Merged in 875c1f74e51fc1b6ba57091c9bc1488b0deb289c, thanks.  I see your problem, I like the idea, but I really don't like this implementation.\r\n\r\nAlso, like I posted as response to #367:\r\n\r\n> Since other parameters may as well be changed I'd suggest just using a separate configuration file. Should be easy to implement, if you really want to you could have a main config that is sourced by other configs just for this, a few tiny files which will replace a ton of not really required functionality.\r\n\r\nIn your case you would have a config for ecdsa certs, one for rsa certs, probably different output directories for the certificates, every other parameter could just be shared.  See discussion in #400. @typingArtist From what I see the only need for aliases is for dual-key/cert setups, and I really think it would be the easiest way to just have two separate domains.txt files and cert directories for RSA and other keytypes. The only thing you would need to maintain in your setup would be the two domains.txt files. If you want a cert with both key types add it two both files, if you only need one just add it to the corresponding one.\r\n\r\nSince having two keys for the same domain combination seems like an edge-case to me I don't really know if it's worth implementing this or if it's just easier to tell the two people who really need it to create two config files, maybe even add a paragraph about how easy that is to do in the documentation.\r\n\r\nIf you'd really like to see this feature I think the best way would be to have the alias as a parameter for the per-cert-config-files instead of adding it to the domains.txt file.\r\n\r\nAnd sorry for closing this ticket, I just meant to move the discussion over to the other ticket, but since that is a (now rejected) pull-request you are right that this is a better place for the discussion. Not sure what exactly I was thinking when I originally did that... @typingArtist Your commit cd03e2a8d71939cf03442f3ed7c2d92b6a8f31cd is now in my local staging and will be published soon (need to test it first, probably tomorrow evening or on monday).\r\n\r\nI'm not happy with 3116fe0 since it changes the name of the `altnames` variable. I think `altnames` is a fitting name since it stands (short) for Subject-Alternative-Names, which (at least for the biggest use case - https) is mandatory to contain all domain names (Browsers completely ignore commonName in newer versions).\r\n\r\nChanging the name of the `domain` variable may be considered, but I don't like to merge it with other changes in a single commit, I'll look into this after testing your other changes. If you'd like you could split those commits for me to make it a bit easier to merge (just reply with a link to your branch, no need for a pull-request, I'll merge them on console anyway). > I would be really happy if it was easy to specify the alias name in the certificate\u2019s config file in domains.d/, but, well, the alias should already be the key to that config file \u2026 that\u2019s why there is this unpleasant --alias thing in domains.txt.\r\n\r\n@typingArtist You know the feeling when you facepalm so hard it really hurts?... I now do.\r\n\r\nOkay then let's do it in domains.txt, but I really dislike the --alias stuff, I'd prefer something like this:\r\n\r\n```\r\nexample.org www.example.org\r\n>alias1 example.org mail.example.org\r\nwhatever.com\r\n>alias2 example.org xmpp.example.org\r\n```\r\n\r\nCould easily be made position independent and would look a bit like an output redirect on a shell, so it should be easy to remember how to use it.\r\n\r\nWhat do you think about this? @typingArtist I think that shouldn't be too hard to parse, just look for the next \"token\" after the redirect character.\r\n\r\nI'm going to work on this beginning of next month, I have to do some other work first... If you want you can have a go at it.  I'm not sure how well this will work, but I guess you have tested it and since it doesn't seem to interfere when it's unused I merged this in bd57777c6206ce991739b2681d09fee2b55b4afe.  Merged in 9ea75e7cfbcdfe30be2934fd293012c66677b7db, but please be aware that I won't really care if this breaks in the future.  Mh this won't easily work when you are using the same domain for both services. You could in theory easily run multiple instances of dehydrated, since the account key is part of the verification filename it should even be easy to forward a request to a different server, or you could use dns verification. That way you could run a dehydrated cronjob with hooks and everything on your jabber server and benefit from automatic reloading on certificate renewal and stuff.  Mh... I see this more or less as intended behaviour. If you tell it to do nothing it just does nothing \u00af\\_(\u30c4)_/\u00af  I implemented a feature for this in e6d6882c78c3f91ad6e296c058063a01a35c1a3d. Just set `AUTO_CLEANUP=\"yes\"` in your config and it will run the cleanup routine before `exit_hook`. Otherwise (if you really need to do it manually) you can force dehydrated to use a different lockfile, but I don't recommend doing that.  Thanks for the feature, I just merged it in commit ec1599e3b66582da471a70e0fb02fecdeaae4b31. Sorry that this took so long...  This is no longer relevant, authorizations should now be automatically re-used on serverside, any further (DNS or other) caching issues are outside the scope of dehydrated.  I tried to implement this in ee75c5dca7ea6a9f2500137683077a89fb444717, not sure how well this works, feel free to play around with it. Set `OCSP_FETCH=\"yes\"` in config to enable, it should write `ocsp-$timestamp.der` files and link the newest version to `ocsp.der`.  Fixed in dc600e39b8643767bcaa265c0e0ad3039c757073.  Caching of chain certificates is now implemented. If you run into any issues you can just create the chain manually and continue using dehydrated. The core issue is of identrust only supporting legacy ip is not really related to dehydrated, so I'm closing this ticket.  Merged, thanks.  I'd recommend using a wrapper like cronic (which also seems to be just a shell-script).\r\n\r\nRewriting the logging code is not something I'll be working on any time soon since for me using a wrapper works perfectly and on most systems I actually just let cron send me the whole output because it only runs once a month anyway (and could be run even less often if it spams too much).\r\n\r\nIf anybody really wants this feature feel free to implement it and open a pullrequest. If i think that it's good I'll merge it.  For what exactly would this be useful? The cron-mode is not really designed for custom CSRs, and I don't see the reason for reusing an old CSR. Feel free to reopen if there is a important use-case for this. I'll be implementing this as a hook so it can be used a bit more dynamically. Closing this pull-request in favor of #475.  Just use a master-script that distributes the hooks to other scripts, no need to implement this in dehydrated.  Hu, `The subject starts with a /, so MSYS will assume it's a path` they seem to have done a great job with that \ud83d\ude48\r\n\r\nSince this doesn't seem to intefere with anything else I have merged it in ba31a505d29d115ff4d268dc43d23e21ab8f5006.  I'd recommend using the `deploy_cert` hook for this like @txr13 already mentioned.  Mh, sorry, but if you need to test a hook just call it manually with the corresponding parameters or use different subdomains to force validation.  Thanks for the suggestions, I commited this manually (see d1f215b652aa843d5104c5a1201acfd866db383e) since there were some conflicts and it was easier to just do the changes by hand instead of solving for merge conflicts...  For integration you can use a `deploy_cert` hook, this hook is exactly intended for that purpose. Just write a simple script that copies the certificates to where you want them.  Since other parameters may as well be changed I'd suggest just using a separate configuration file. Should be easy to implement, if you really want to you could have a main config that is sourced by other configs just for this, a few tiny files which will replace a ton of not really required functionality.  I have no idea about this device and I don't think this issue belongs here. I hope you have found a way to get stuff working.  This shouldn't be necessary anymore since dehydrated now checks if domains are already verified.  This shouldn't happen anymore since dehydrated now checks if a domain is already verified.  This has been implemented in ec1599e3b66582da471a70e0fb02fecdeaae4b31  Since 367ef574f154ad60acfeaa0101917f6da898cb24 `altnames` should be exposed as environment variable, you can take the names from there.  Merged in 0dcf94dd3d6d97387479595c0c2f8bb6c277cff8  I don't understand, where does this `othername:` come from? The only thing I found that mentioned this was for arbitrary data which doesn't really make sense for altnames... This looks like something which would be stripped by Let's Encrypt / Boulder anyway, or is this supported? Have you tried this using a custom csr? Okay, I merged your changes since they shouldn't interfere with anything else and if that makes dehydrated work for you (and probably a few other people) that's great :smile: Thanks for the suggestion.  I'd like this too but I didn't really find a nice way to do this. It would be possible to split the line at a predefined marker (like `bar.com foo.bar.com | CHALLENGETYPE=dns-01`) and just execute that, but I really don't want to add even more ugly config parsing code... the current \"parser\" is ugly enough for one bash script...\r\n\r\nFor now you can partly solve this with a small wrapper script which sets the parameters, like this one:\r\n\r\n```\r\n#!/bin/sh\r\ndehydrated -c -d 'foo.com bar.foo.com' -t dns-01\r\ndehydrated -c -d 'bar.com foo.bar.com'\r\n```\r\n\r\nYou could easily make a few helper functions to make it a bit more readable, maybe something like this (untested):\r\n\r\n```\r\n#!/bin/sh\r\nHTTP() { dehydrated -c -d \"${@}\" }\r\nDNS() { dehydrated -c -d \"${@}\" -t dns-01 }\r\n\r\nDNS foo.com bar.foo.com\r\nHTTP bar.com foo.bar.com\r\n```\r\n\r\nI want to put a bit more work into command line options since they make the script really powerful, especially in combination with automation tools like Ansible and Puppet, but even with small wrapper scripts like the examples above.  dehydrated has a ton of command line options so you can easily write wrapper scripts and run it for specific domains with different hooks and whatever you like, completely without using any domains.txt\r\n\r\nAlso I think this change is a lot more complicated than it really needs to be... I mean your whole code could be replaced by this wrapper:\r\n\r\n```bash\r\n#!/bin/sh\r\ngenerate-domains-txt.sh > /etc/dehydrated/domains.txt\r\ndehydrated -c\r\n```\r\n\r\nI really think this is a lot more beautiful than adding new config parameters, new checks, new methods and everything to dehydrated just to call `generate-domains-txt.sh`...\r\n\r\nEven if you are arguing about running it inside a cronjob and not wanting another executable script file on your system for whatever reason, you could easily write that inside your crontab.\r\n\r\nIf you really wrap your code around dehydrated you can even define what hook script to use, which challenge type to use (e.g. dns-01), and even a path to a custom config just for that particular call.\r\n\r\nI might reconsider this if you give me a really good reason why this has to be a hook, but from what I see it just doesn't make sense so I'm closing this pullrequest, sorry.  Implemented in d685463673919ba4f9d2035d021293f241a66055, thanks for the suggestion.  Mh yes, was thinking about this too, but I see a problem with people using versions directly from the git repository, I'd have to constantly update the version number in the script to make it \"correct\" in those cases... I've implemented this with some additional information (OS and used software versions) in f2b589430c55b01c03e382bd58e82ae6c961d175. Thanks for the suggestion.  @jmandel i did implement your change with aed4272e973bb691b66ffa59fb9b90b952803c01 but i had to change it a little bit because it was causing syntax errors, sorry for not giving any comment on it  The problem is in the hook script, I'm planning on making the example hook better, ignoring unknown hooks instead of throwing errors, but for now the best fix is to just add the exit_hook from the example script to your own script. This fix of course doesn't magically fix old modified example hook scripts, you'll have to add the change yourself, but it will ensure this problem doesn't occur again in the future. Switching to a directory and run-parts would change everything completely, and this pattern list is just part of the example hook, other hook scripts probably never had any problems, and this way I can add new hooks without the example script failing again, I think this is a good and easy solution for this problem. If you ever want to make use of a new hook you just have to add it to the list and write a handler function, don't see any problem with that.  Yea I guess having the root cert in the chain is kinda redundant (but only redundant, this shouldn't break anything), I'll have to figure out a nice way to detect it being the root cert and excluding it from the chain, I basically wanted this new \"walk\" functionality so that stuff doesn't break if Let's Encrypt ever reorganizes their internal CA structure. This should do the trick: ee65261ea833a234d9d7402f87a6803fa945ae12\r\n\r\nWriting each intermediate certificate to a file doesn't seem useful for me, with this change it just stops when it detects the root of the chain.  Currently users are basically accepting the Let's Encrypt terms of service the moment they run dehydrated for the first time, this is a bit ugly and since it's missing any hint on that it may not even be fully legal...\r\n\r\nTo make this better dehydrated should query boulder for the required license url and ask the user to set this URL in config on first use.\r\nThis way everything can still be fully automated by just adding the LICENSE variable to the configuration file, but for normal use it will make the user aware of the terms of service.\r\n\r\nThis ticket replaces #249 and #248. Implemented in 6a32f20e004b9d835cd02de9d78300be02784cf1 Until now License only seems to be verified on registration, not entirely sure if there is some kind of account-update for future license changes, I'll have to look into that, but otherwise nothing is required to be changed.  I've signed the latest release and from now on I'll sign all my commits using `3C2F2605E078A1E18F4793909C4DBE6CF438F333`, but I can't promise to remember to always upload a signature when I release a new version. My workflow is to just tag a specific commit and copy the changelog to the release, if you know of any way to completely automate this I'm open for suggestions.  This is weird, I can't remember fixing anything like that after the v0.3.1 release, do you know which commit solved your problem?\r\n\r\nAnyway... A new version will be released soon(ish), I'm getting back into the mood of working on this project and I want to get rid of a few older issues first. If that is what \"solved\" your issue you may run into trouble soon, the only change with that is that it skips verification if that already happened for each altname. v0.4.0 released :)  Duplicate of #305, please see my comments in that thread.  dehydrated is already in the debian package tree (stretch and sid) and I won't add package files to this repository, thanks anyway.  See https://github.com/lukas2511/dehydrated/blob/master/docs/per-certificate-config.md, this should help you. @txr13 i don't want to overload the script with switches, i think that just makes it more complicated to use  Are you using hook scripts? \"Error when trying to get nonce\" is not an error message of dehydrated but after just googling it I found it's an error of `pdns-client`. I'm closing this ticket as it's not an issue with dehydrated itself.  From your introduction of the concept of a \"SERVERROOT\" I see that you are making a few assumptions about the system this script is running on:\r\n\r\n- Has a Webserver running, reachable from the outside\r\n- Has a single root from which all websites are served (e.g. `/var/www`)\r\n- The script is able to write to a directory that can be accessed from the outside\r\n\r\nThis might not be true in a lot of cases, there are a lot of setups with distributed servers and central certificate management out there, using hook scripts to actually deploy challenges and certificates, \"WELLKNOWN\" in those cases is not a directory that is directly accessible over the internet but more like a working directory for different systems.\r\n\r\nIntroducing the concept of a \"SERVERROOT\" conflicts with more complex setups, so this is not good for this script, also it introduces a completely unused variable to the config file, which doesn't really make sense.\r\nI also read your modifications to the documentation and I think they make it even more confusing, that doesn't really help.\r\n\r\nThank you for trying, but I'm closing this since I don't think these changes are a good idea.  This is not a bug, this is a feature: https://github.com/lukas2511/dehydrated/blob/master/docs/wellknown.md In that document I state multiple times how files are stored, and there even is example configuration for probably every popular webserver, I'm really not sure what else I can do.\r\n\r\nIf you have a suggestion on how to make the documentation better feel free to send in a pull-request.  This normally happens when WELLKNOWN isn't configured correctly, it should point directly to the directory you are serving under /.well-known/acme-challenge.\r\nThere also can't be a timing problem, the script creates the files before the checks and doesn't remove them until after everything is completed.\r\n\r\nI'm closing this for now as it really just seems to be a configuration issue.  That is already implemented, see `docs/examples/config`:\r\n\r\n```\r\n# File containing the list of domains to request certificates for (default: $BASEDIR/domains.txt)\r\n#DOMAINS_TXT=\"${BASEDIR}/domains.txt\"\r\n```\r\n\r\nIf you want to select by CLI parameter you could just add a second config file, sourcing everything from your original config and just changing DOMAINS_TXT, and then just specify the path to the alternative config file. e.g.:\r\n\r\n```\r\nsource /etc/dehydrated/config\r\nDOMAINS_TXT=\"/etc/dehydrated/domains_route53.txt\"\r\n```\r\n\r\nAnother option would be to call dehydrated using `dehydrated -d your.domain -d www.your.domain` to directly sign certain domains instead of using domains.txt for that.  I don't really see the point in this, if you want mail with log on errors there are already a lot of tools out there that do exactly this (e.g. http://habilis.net/cronic/), and there are similar tools that will look for certain keywords in the output.\r\nAlso if you want to get notified on changed certificates you could as well do that in the `deploy_cert` hook, it has all the information you'll probably ever want to mail to yourself about your new certificates. Most of the time it's better to have multiple tools each doing one job really good instead of having one tool that does everything okayish. And the moment you are running dehydrated in cron to send an email you are already using a ton of tools, each one doing more or less one job (openssl, curl, sendmail/postfix, crond, bash, mktemp, diffutils, ...). I'm not entirely sure what the `done_dehydrated` hook should be supposed to do, I added a `exit_hook` for a different use-case, which gets executed if the script ran fine without any issues, is that what you want?\r\n\r\nI mean you can't really do anything in there except for maybe a few more cleanup tasks, if it is called you basically just know that everything went fine, but you already know that because the exit code will be 0...  This would result in more load on the Let's Encrypt servers and I don't think it would really do anything good for you. Your certificates and keys should be stored in a secure location anyway, so it wouldn't make much of a difference.\r\nIf you really want this you could easily create a hook-script that revokes old certificate files, but I don't think it would be a good idea as a main feature of dehydrated.\r\nClosing this for now, if there are more people out there who want this feel free to comment here, and I may reconsider it.  dehydrated doesn't configure your webserver for you, it only tries to get certificates signed, like @txr13 already said.  Duplicate of #239, closing this.  Actually it can by anywhere you want it to be:\r\n\r\n```\r\n# File containing the list of domains to request certificates for (default: $BASEDIR/domains.txt)\r\n#DOMAINS_TXT=\"${BASEDIR}/domains.txt\"\r\n```\r\n\r\n(see `docs/examples/config`)  Commited that in 81eecedc5af058dc69b14331088aa2f69c60c554 because your pull-request got poisoned by other commits. Please use branches for pull-requests in the future so this doesn't happen again :)  I don't think this is necessary: CERTDIR is exported and the certificate name is given for all important hooks, so you could easily just create a custom config file and source it inside your hook, no need to modify dehydrated for this and I think it's actually cleaner because you have your separate config file for your hook script.  I exported a few variables in 57197306d7d19d87b3b6b5deadd640d72cbe5f31, you should now be able to just pull them from the environment variables in your hooks, no changes to the existing hooks required.  Commenting the \"continue\" line would completely disable the feature to skip already validated domains, I'm working on a fix right now.  I've merged #321, this should be fixed now. Thanks. I tested a few ways of checking if the array is empty / the variables are undefined, and I think I found the most compatible way over multiple versions of bash, can you please try again?  If they don't work out of the box I won't add support for them, unicode is hard and it's way too easy to make mistakes, especially when systems are using different versions of the tools with different localization.\r\n\r\nIf i understand this correctly you can still use the ascii \"punycode\" representation of the domain and it should work anyway.  This is a duplicate of #148, which I just closed.\r\nSee https://github.com/lukas2511/dehydrated/pull/148#issuecomment-275918581\r\n\r\nSummary: Do more or less what @CRCinAU said, I just added a new hook to make this work without an actual wrapper script (298a7e9aafaa0b05c3f6ab6ca6538661f6b5feb8).  Not yet, sorry.  Well this is a bit more complicated to \"fix\", I need to verify the config because there are parameters which may influence loading of additional config files, and I don't really want to split it up. Since the additional config files were intended to only be used in special cases I still see the requirement of the main configuration being valid.  You can use `deploy_challenge` and `clean_challenge` hooks to upload and delete challenges to your web-server via FTP or something similar.  I don't think it's worth merging this, that part of the example hook script should be written a lot cleaner anyway (like using a case-statement instead of just executing whatever is given as first parameter), thanks anyway.  Passing all names for all certificates into a hook is not possible with the way this script is currently working as it is only parsing stuff for one certificate at a time, sorry.  This looks like you are doing a redirect on your webserver, and it is missing the '/' on the redirected path, nothing to do with this script or Let's Encrypt. @cdarken you can clearly see that it first tries the http:// url with correct path and only tries the broken path afterwards, and that only happens if your server is sending a redirect. none of my example configs do redirects, so this has to be something else in your configuration.\r\nsince i did this mistake myself a few times i know how easy it is to make, check using curl or something else, your browser might not be a good debugging tool if you have/had hsts enabled, it will do its own redirect and not ask the server on what to do.\r\n\r\nJust an example with apache:\r\n```\r\n# this will result in broken urls\r\nRedirect permanent / https://example.org\r\n\r\n# this will work\r\nRedirect permanent / https://example.org/\r\n```  The `--out` parameter is only used for normal operation.\r\n\r\nWhen you are signing a CSR you have to handle everything else yourself, the script only does the validation and asks Let's Encrypt to sign your CSR.  Duplicate of quite a lot of other tickets. There are a lot of reasons not to implement this: If Let's Encrypt is under heavy load it definitively won't help if tons of clients retry and retry and retry, also error handling in bash is hard enough, retrying stuff will only result in quite complicated code, carrying failure flags and everything. At the moment the script often just hardly exits on errors.\r\n\r\nWhat I will implement soon(ish): Caching of requested verifications. This will help with the rate limiting, and should speed things up if you really wanted to retry running the script.  Thanks, I moved it up and have actually rewritten it to give a bit more insight on what is going on, see https://github.com/lukas2511/dehydrated#config  I agree that shellcheck is useful and cleaning the code should be done, but I don't want any tiny false-positive resulting in tests failing, so I won't merge this into the test environment.  I also think this is fixed now, feel free to comment if this is still an issue.  Error handling is kinda hard in itself, and (at least for me) even harder in bash. So unless somebody starts paying me for work on this script I don't really want to implement retries and stuff, sorry.\r\n\r\nBut: I just implemented a cache for certificate chains which at least should lower the amount of http requests and with that lower the chance of one of them failing...  See example hook script section `deploy_cert`, it should be very easy to just `cat` those files together and even reload lighttpd when it's done.  Thanks for this, looks fine to me but I want to do some tests on FreeBSD and ZSH, just to make sure it works, but this will definitively get merged!\n Just gonna merge this now, can still fix it later anyway if there are any problems, thanks!  Just to clarify: I don't have nothing specific against a Dockerfile (although in this case I really don't see the point of running a simple script like this inside a container), I just don't want any kind of packaging files inside this repository for now.\n\nIf I'd start merging stuff like this I'd end up with a repository with Dockerfiles, Vagrantfiles, puppet playbooks, chef cookbooks, Debian package files, rpm package files, PKGBUILD for archlinux, ebuild file for gentoo, lxc example config, freebsd package files, nixos package files, ... and I don't want that. Especially because I'd have to update most of them every time I do a new release.\n  Sorry, but I don't really see the point in doing this inside of dehydrated, this could easily be done by a hook-script, all required parameters should be available at that point, or is there anything I'm missing about this? Also please keep your commits cleaner, in the current state I would not want to merge this...\n  Not sure what was going on here, but it seems to me that Let's Encrypt just locked you out for some reason, this doesn't seem to have anything to do with dehydrated.  There already is a package in the Debian repository (https://packages.debian.org/jessie-backports/letsencrypt.sh), it just hasn't been renamed yet.\n  Mh, I don't think this has a good place in this script so I'm closing this issue.\n\nWhat will be coming (hopefully kinda soonish) is private key rollover for use with HPKP, would this maybe also solve the problem with TLSA records?\n  No, sorry, I don't want this in this repository. Feel free to create a wiki page on how to use Docker for deploying SSL certificates.\n  Interesting, I'll have a look at this, would be cool to have support on some embedded devices.\n I just pushed a few changes and dehydrated now works fine under OpenWrt after installing bash, openssl-util and diffutils.  Uff... support for linux distributions from the stone age...\n\nYou could try deleting the accounts directory, maybe there just is a broken account key, but I have a feeling that if this one line results in a problem some others might too...\n\nI'll leave this open for now, but keeping compatibility with bash versions from probably over ten years ago is definitively not something I want to spend too much time on.\n Not going to fix this, sorry.\r\nI'd suggest trying to update your version of Bash, or better: Update your whole OS, does that thing even get security updates anymore?...  Closing this in favor of #293, thanks anyway!\n  @ixdy Mh... weird... that change shouldn't really make it longer... if any it should be shorter... What OS are you running this on?\n Closing this ticket as this was solved by reverting the changes for #275.  Thanks, I'll let these slip in with the next bigger change to the README.\n  @wibimaster can you check if that fixed your problem?\n @wibimaster Since you are doing dns validation the temporary error was probably because the dns entry didn't propagate fast enough.\n  I don't really think I want this in here.\n\nHaving to create the directory manually (or by Ansible/Puppet/whatever) isn't really much work, doing it automatically just adds unnecessary code for a one-off operation, and it adds another option making readability of the usage instructions a bit more complicated...\n\nIn cases where you have a dynamic challenges-directory you probably have something for generating the call to begin with, let that create the directories.\n  The certificates generated by this script are using 4096 bit RSA keys by default, the 2048 bit key ist the root CA key which was generated by Let's Encrypt.\n  @cpu hey, can you check if that commit fixed the problem?\n Commit was reverted in a316a094df8d3d4b25673cfbb1197f646781e48f because of problems with freebsd, reopening this ticket for now\n I wasn't ever able to reproduce any issues with this myself and it seems to be working fine... I'll close this issue until I have a reliable way of testing this. For the (seemingly very rare) case of people having this problem I'd suggest just trying to delete the key in question (or better: send it to me for testing! \u2013 of course only if there isn't anything validated with that yet) and let the script generate a new one.  People can try the staging CA if they want to, it's documented in [docs/staging.md](https://github.com/lukas2511/dehydrated/blob/master/docs/staging.md).\n\nI don't want to always have to configure the production CA when using this and it may (again) break a lot of setups, so this won't be changed.\n  dehydrated boulder, just add water, baam.\n  There already is a package (even in the debian repository!) https://packages.debian.org/jessie-backports/letsencrypt.sh\nI contacted one of the package maintainers about renaming the package, and at some point I'll probably merge the debian control/rules/whatever files into this repository.\n\nThanks anyway.\n  I don't think it's worth the trouble, whoever needs this can easily build a simple wrapper using run-parts or whatever is available. If you want you can create a wiki-page for an example script, but having it as part of the main script... na..\n The `conf.d` was mainly for package maintainers who ship a default config which can be changed in `conf.d` files. Yea it wasn't really necessary, but removing it now would also be bad, but I want to avoid adding more things that aren't necessary.\n  Can you please have a look at what you have done with docs/hook_chain.md, looks like you duplicated some of the text.\n The diff shows that you readded the whole block with your change, but the old one is still there, so now the text is duplicated.\n The commits with this pull request got way to messed up. Can you please clean up your commits and also please create a separate pullrequest for the second hook? In this current state I don't want to merge it.\n  Not sure what was causing this, closing this ticket since it seemed to be a one-off issue.  Meh. Okay. Was hoping to get some stuff done before the next release but I see that it's taking too long... Open a PR, I'll merge it.\n  Currently the function also checks for some parameters used in later curl calls, so it can't just be skipped. Since you had to get to the point of signing a certificate before revoking anything it's most likely you have a valid config already, and even if not, creating a valid config is so easy that I'd suggest just doing that instead of skipping config verification in dehydrated.  In this case copy and edit your openssl config and set OPENSSL_CNF to the new location, this should not be handled by dehydrated.  Hey there, I decided against merging/implementing this feature for various reasons, one is that the major cause of failure will be Let's Encrypt having server load issues, where thousands of retrying clients definitively won't help.\r\n\r\nInstead I will implement verification caching so if somebody really wanted to they could rerun the whole script without going through hundreds of challenge verification requests again.  I agree with @seefood, retrying in most cases wont change that your challenge is invalid and this may only lead to more load on the letsencrypt servers, maybe even resulting in more invalid challenges because of overload ;)\n\nIf you have a special case where you _know_ that your challenge will take some time to be available you can always add a hook script which waits for the challenge to be seen before letting the script continue.\n Normally you would do this in the deploy_challenge hook, which can be used to deploy to DNS, other Webservers or CDNs, and whatever is in use, and this is also the place for waiting until a local deployment has finished before letting the script talk to letsencrypt for verification.\n\nMaybe parsing the error message and looking for indications for a timeout may be a possibility, also local caching for already done validations should be possible and is already something in my todo, so rerunning the script won't add additional overload for subdomains in the future.\n\nAlso I won't merge your commit in this form because you are duplicating a lot of code and you put your domain name in the middle of the script.\n @extremeshok sorry, i still think that it is your or your systems responsiblity to know when the deployment of files to your servers has happened. if you have no way of knowing if your deployments finished something else in your network needs fixing. i agree that in some situations there should be retries (e.g. on timeouts), but if you have a 404 because your file isn't available yet that is your problem and you should handle that before letting the script (and with that the verification) continue.\n @extremeshok ok, then we are on the same point, should retry on timeouts. there needs to be code that checks for the actual error that happened (parsing error message and reading curls return code), i don't want the script to retry on user errors.\n  I don't know what exactly you want, the `deploy_challenge` and `clean_challenge` hooks would be the ideal place for starting and stopping a web-server as they are really only called when there is work to do and they are always called in that case, only exception is on errors in the communication with Let's Encrypt, and there is a different hook for that (see `request_failure`).\r\n\r\nWhat you could also do to maybe spare some start/stop cycles is to just start the server in the `deploy_challenge` hook if it's not running yet, and just always stop it after dehydrated did its job...\r\n\r\nAnd just to make this clear: For me using a wrapper script is not a workaround, it's more or less the intended usage of this tool, that is one of the reasons why there are so many options on this script, hooks should only be for things that can't easily be solved in a different (clean) way.  @to-kn thanks, this should be fixed now @to-kn i did unterstand that, i was able to reproduce it using mawk, i changed how awk is used in this case and it should work with mawk now too, please test the change i made in 3d8d320c9f5a8dbd2621de28cd02f8ba15be5dbf  going to change this to automatically detect license agreement url in the future, but thanks anyway\n  There are still a few things that I see as important for the next release, so... sorry, but this has to wait. Packagers can cherrypick this commit and most people use a fixed commit id or just master anyway.\n  I think this warning should exist and be big, people should at least know that there is a config, and maybe set a few important parameters so future updates don't break stuff if defaults ever change again. Making it smaller like this makes it too easy to ignore.  Not a problem of this script... my guess: dns didn't have enough time to update.\n  Closing in favor of #346, thanks for your hints.  Yup, I just pushed the commit updating the license agreement, should work now.\n  The comment is obsolete since letsencrypt.sh now supports multiple accounts. Removed in ca0249c. Thanks.\n  I just implemented `--register` in 6a32f20e004b9d835cd02de9d78300be02784cf1  letsencrypt.sh mainly doesn't allow parallel calling because it's a lot easier to just stop if another instance in general is running than to check if another instance is running that is trying to modify the same files (account key generation / registration, private key (re)generation, csr generation, storing of new certificates, moving of old files to archive, hook stuff, ..., a lot of locations in the script where files are written or read)\n\nI added an option in bd9cc5b to disable locks completely, be careful when using this.\n  Bad idea to make it more open by default. Since config is sourced you should in theory be able to just redefine umask in your config file. Didn't try it, but it should work.\n  Interesting thing is that I can't yet push an update with the new agreement as boulder doesn't accept a registration with that url... Also this will lead to another wave of stupid issues \"letsencrypt.sh is not working\" \"did you try updating?\" \"oh now it works\"... meh.\n  thx\n  Yea everything that has to do with rolling out these challenges should be done in the hook script, even the waiting for DNS updates. There are way to many different setups out there to do this cleanly within letsencrypt.sh. Closing this issue.\n  This feature is now implemented, thanks to @lukavia!  Since the revoke command can also be used with certificates that have been installed somewhere else or certificates that have been generated using the `--signcsr` command it would be a bit complicated to do this, and in some rare cases it may even break something. Also I don't really see a requirement for this, if you are revoking cert.pem and running the script again it will notice the cert missing, will sign it again, and will rotate all other files as well.  Yes, this is because the error message isn't (yet) parsed in any way, and without any knowledge on why revocation failed it doesn't make sense to move certificates around.\n  Should be next to the account key in the accounts directory.\n https://github.com/lukas2511/letsencrypt.sh/blob/master/letsencrypt.sh#L242-L246\n Please keep in mind that the json file only gets generated on registration. If you already had an account key it can't generate the json file.\n  I'm not really sure how this should work, but as an alternative there now are per-certificate configuration files and you can set different hook scripts for some domains, this should open up a lot more flexibility in what can be done with those hooks, everything else should easily be done based on that change.  https://github.com/lukas2511/letsencrypt.sh/blob/master/docs/per-certificate-config.md\n  normally nginxs master process is running with root privileges and is able to bind to privileged ports (<1024) and load certificates, only workers are running with the user specified in nginx config, and those don't need (and should never have) direct access to certificate files.\n\nif you are running a setup where nginx is never started as root i suggest to create a special group for cert-access or set up a hook script to set permissions\n  For what exactly is this useful? This really sounds like your network configuration is broken and this should not be fixed inside this script but rather in your network config...\n Mhkay.\n  Not going to fix this, if this is really necessary I suggest putting your certificate in fullchain.pem, as that is what you'd want to use later anyway and the script should work fine that way.  `--cleanup (-gc)                  Move unused certificate files to archive directory`\n  But... why? Just use a script to call letsencrypt.sh and don't run it in parallel?!\n  Port options are listed under \"The following flags are meant for testing purposes only!\", I think this only works with specially configured boulder instances and not with anything official. If somebody needs this for testing purposes i'd accept a pull request.\n  I don't think this is a good idea to just implement this for WELLKNOWN. \nEither do it for all config variables (and with a clear prefix to avoid confusion), or none.\n  Can't reproduce this (tested on staging and production) and your change is incomplete and breaks the check if certificate names have changed.\n  @txr13 yup, thanks, i updated the example config in 2042b177c7c81bee5b83debb201758ba411a873d\n  I don't really understand what this should do. From what i see it would always fall back to the \"$@\" rule, basically changing nothing at all. Also the parameter is only used in one place (version checking) and doesn't ever get passed any spaces. Closing this as I don't think this change is useful.\n  No, if you set `WELLKNOWN=/var/www/letsencrypt` the example should work.\n If you read the readme you'll find out how WELLKNOWN works, and then you'll know why the example should work.\n\nBasically: challenge file gets saved as /var/www/letsencrypt/challengefile, gets queries at http://example.org/.well-known/acme-challenge/challengefile, nginx sees location /.well-known/acme-challenge, sets alias to /var/www/letsencrypt, resulting in nginx delivering /var/www/letsencrypt/challengefile.\n @WoLpH you should set the variable in the config file, letsencrypt.sh doesn't really work with environment variables\n  This probably has something to do with `tr '[:upper:]' '[:lower:]'` which should convert all domain names to lowercase letters. Can you tell me what version of `tr` QNAP is using?\n Well I don't really support busybox binaries as they are lacking a lot of features, that should be the problem.\n  Thanks for bringing this up, I changed the check (similar to what you suggested), can you test if it is working fine for you now?\n  Mh... This is weird, the first thing that happens in the clean_json function is that all newlines are removed. Also it's weird because I'm actually doing most of my local testing on OS X where most of the tools actually do come from BSD, and here everything was working fine. Guess I have to look into this a bit more...\n  ACME allows deletion of accounts, this may be implemented in letsencrypt.sh in the future\n  You also could just have downloaded the newest version which also includes a similar change. Thanks anyway.\n  OPENSSL_CNF should not be the path to your openssl binary / wrapper, it should be the path to a base openssl config. Maybe you just had a typo since your wrapper seems to refer to `/opt/bitnami/common/openssl/openssl.cnf` while you used `/opt/bitnami/common/bin/openssl` in the config.\n Set `/opt/bitnami/common/openssl/openssl.cnf`\n  thx\n  This is planned, see discussion for #148\n  Use the latest version and this problem will go away.\n  This is not a problem with this script.\n\n`DNS problem: NXDOMAIN looking up A for some.pl`: letsencrypt can't resolve your domain name and can't access your page for receiving the challenge response\n Do you have the newest version of this script? There have been important changes.\n  Are you both running the latest version (master branch) of letsencrypt.sh? In 561f0626b855ec4ee94856884e2f1eff9ade2d88 i made changes for letsencrypt.sh to be compatible with the newer json format.\n I just released version 0.2.0 that contains this patch among a few other changes (see changelog). Hoping this will make its way into all those ports/packages soon.\n  From what I see your problem is solved, so I'm closing this issue.\n  Thanks for bringing this up, I wrote my own fix since yours didn't work under BSD and I took the chance to clean up a bit more of the incoming json.\n  I'm not entirely sure if this option makes sense... It adds a lot of code that could just be replaced by a few lines of config... And I don't find this very practical either since it may resign perfectly fine valid certificates with staging ones if used incorrectly.\n  Not yet, sorry. The idea to have per-domain settings has been around for a while (see #105), but it hasn't been implemented yet.\n\nWorkaround for now would be to do something like `./letsencrypt.sh -c -t dns-01 -d roundrobin.example.com -d more.roundrobin.example.com`. \nThis would have the same effect as if you'd have a line `roundrobin.example.com more.roundrobin.example.com` in domains.txt and dns-01 set in config.sh.\n  Hey, yes sure, in the current state the wiki is meant to be open for everybody, go ahead and add your hook script!\n  I don't want any more formats of keys and certs so this would have to be done with a hook script.\n\nIn theory something like this should work (untested):\n\n```\n#!/usr/bin/env bash\n\nfunction deploy_cert {\n    local DOMAIN=\"${1}\" KEYFILE=\"${2}\" CERTFILE=\"${3}\" FULLCHAINFILE=\"${4}\" CHAINFILE=\"${5}\" TIMESTAMP=\"${6}\"\n\n    cat \"${KEYFILE}\" \"${FULLCHAINFILE}\" > \"${BASEDIR}/certs/${DOMAIN}/combined.pem\"\n}\n```\n @domenpk and then you are missing the chain certificates, which are important too \u00af_(\u30c4)_/\u00af\n Interesting... don't even want to know how it came to this.\n\nAnyway, with hooks this can easily be done :)\n  The hook script gets called with a parameter which tells it what to do, see https://github.com/lukas2511/letsencrypt.sh/blob/master/docs/examples/hook.sh.example.\n\nWith that I don't see any reason why to make this script more complicated with dozens of hook parameters for any case where a hook could be called.\n  \ud83d\udc4d\n  This is a problem with your hook script and not with letsencrypt.sh. I don't maintain any hook scripts.\n  I agree that documentation may be a bit confusing, I'll have to work on that.\n\nFor now I hope this is easy to understand:\n\nLet's say you have a page `http://example.org`. In that case the ACME server will look under `http://example.org/.well-known/acme-challenge/[...]` for challenge responses.\n\nIf you have a simple setup with basically just one webpage you could do something like `WELLKNOWN=/var/www/.well-known/acme-challenge`, so letsencrypt.sh will store the challenge responses directly in that directory.\n\nIf you have a more complicated setup it's easier to add an Alias or location or whatever part to your webserver config telling it to serve `/.well-known/acme-challenge` on your domain from a different directory.\n\nWith that in mind you'd probably do something like `location /.well-known/acme-challenge { alias /var/www/letsencrypt; }`, and in that case you obviously don't need to add the `.well-known/[...]` part to your actual path.\n As i already said there is some work to be done about documentation.\n\nIf you use the simple approach I explained in my last response you'll have to set `WELLKNOWN=/var/www/.well-known/acme-challenge` and it will create files like `/var/www/.well-known/acme-challenge/TOKEN`, that can then be served as `http://example.org/.well-known/acme-challenge/TOKEN`.\n\nIf you define an alias you'll have `WELLKNOWN=/var/www/letsencrypt` with `/var/www/letsencrypt/TOKEN` and still everything served as `http://example.org/.well-known/acme-challenge/TOKEN`.\n @mortenf since you shouldn't expose your basedir to the web anyway this shouldn't make much of a difference. i think i'll change the default value to something completely different to make this a bit clearer.\n  @pgnd this syntax is not exactly stable and not defined by acme, this is custom to this script only. if it changes in the future i'll add an entry to the changelog.\n\nclosing this issue as your problem seems to be solved by using HOOK_CHAIN.\n @pgnd i actually don't know how the official client works or is supposed to work, but from what i read on irc it seems that it just prints instructions\n  Write your own hook? If they have an API it shouldn't be too hard.\n\nThe hook system is meant to be written by others so letsencrypt.sh can become compatible with a whole lot of custom setups, I didn't write any of those hook scripts mentioned in the wiki.\n  Hey. First: Please don't call my script le.sh, that is the name of a completely different script.\n\nThis probably is a timing issue. Shortly after sending the dns update the dns server might not yet deliver the response, there can be a short window with invalid or no response, especially if you use the dns api of some dns provider.\n\nThe `read -s -r -e < /dev/tty` command is meant to pause your hook until manual confirmation on terminal is given that the dns record is actually set. It's kinda ugly...\n\nOther ways to do this would just be a `sleep $time` command, or to actually add some logic that queries the dns servers you are using until the record can be seen.\n  Did you check if you are running an old version of the script? The output on errors should be similar to `Challenge is invalid! (returned: invalid) (result: [...]json here[...])`.\n\nAlso \"returned: invalid\" actually gets parsed from the json response, it's impossible for the script to just invent a status \"invalid\" at that point. As long as the status is \"pending\" it tries again and again until it's no longer \"pending\".\n\nClosing this bug as it doesn't seem like an actual bug in the script.\n  Hey, I wouldn't have anything against a generic hook example, but in this specific form this doesn't yet fit into this repository. Feel free to add it to the wiki!\n  You should be able to use `#` at the beginning of a line to start a comment:\n\n```\n# cool domains\nexample.org www.example.org\n# example.net www.example.net\n```\n  It's a feature. See #172.\n  Current way to do this would be `letsencrypt.sh -c -d test.net -d www.test.net -x`.\n\nSince I see this as more like an edge-case (you'd basically only need to do this in case you lost a private key) I don't think I'll add another option to make this easier.\n  Thanks. Just wondering: you wrote `must not have a trailing slash`, is this a problem you experienced? from what i see it shouldn't really make a difference, but maybe i'm forgetting something...\n Would you change that section to `should not have a trailing slash` and also add the missing quotes at the end of the example paths? Otherwise it's OK.\n  I agree, changed this in the mentioned commit. Thanks.\n @Robby- I'd like to avoid that since this would silently impact a lot of setups... :-/\n  letsencrypt.sh is looking for `cert.pem`, which still is pointing to a valid place and seems valid, it doesn't check with the server if the certificate has been revoked.\n\nif you run the revoke command on `cert-1459249840.pem` (or just delete it, or run the command with `-x` to force renew) it should work.\n  Currently there is no way for a per-domain configuration of this path.\n\nI'd suggest creating a symlink if that is possible, or create a hook script that moves the files to the correct directory using the `deploy_challenge` hook.\n\nIn the future this may change, kinda related to #105.\n  Hey, thanks for this, but unfortunately I don't think this has a place inside this repository in its current form, but if you want to you can create a page on the wiki for now.\n\nIn the near future I want to add example hook scripts to this repository, and I see that most of the stuff in your pull-request is actually very generic, so maybe it would be best to wait a bit and resubmit your pull-request in parts (stunnel-deployment-example, dns instructions + wait example, ...) after I decided on a structure of examples for this repository.\n  Should be fixed now, can you check again?\n  Sorry, this doesn't belong into this repo (yet), and especially not in the main example hook template.\n  The `-d` option is designed for use in combination with other tools (e.g. Ansible).\n\nIf you want your domains to be refreshed automatically please configure them in domains.txt.\n  I'm sorry but I don't think this has a place in this repository. \nIf i'd add Debian package-build files i'd feel obliged to also add stuff for other distributions and this would really clutter this repository.\n\nOther people packaged letsencrypt.sh outside of this repository (there are at least ports for freebsd and a package for suse/centos/fedora), so you might be able to do the same for a Debian package, I guess there are mechanisms for doing this as I doubt every piece of software in the Debian repositories has added this clutter to their main repository.\n related to #96 \n @ipartola if you have a service that works with a github webhook i would add that\n @seefood \n<img width=\"745\" alt=\"screen shot 2016-04-01 at 15 09 56\" src=\"https://cloud.githubusercontent.com/assets/85965/14207668/de0d1fe0-f81b-11e5-9213-20779517b604.png\">\n @ipartola if you want to write better tests for letsencrypt.sh feel free to do so. currently there are only a few tests which are basically just enough to show if something went horribly wrong in a commit.\n btw. this already is released as a package in freebsd and now in opensuse\n  that should have been `alias` to begin with, fixed it, thanks.\n  @pwallner as @Lukas0907 said the contact email is only used for registration (and reminders from Let's Encrypt, which hasn't directly to do with this script).\n\ni don't think it's possible to include that email in your certificate if that is what you want to know, boulder only keeps CN.\n  at which point do you get silent errors? on any errors i experience i always got the message printed on screen by my script, it's set up to print the full json on any hard errors\n Closing this as this problem should actually be solved for quite a while now...\n  Yes you should be able to use the `HOOK_CHAIN` config option like @welwood08 suggested.\n\nI tried documenting this feature here: https://github.com/lukas2511/letsencrypt.sh/blob/master/docs/hook_chain.md\n  duplicate, see #163 or #2 or #92 or ...\n\ndeleting account key solves the problem.\n @RobertSchuster great you got this solved. hoping this issue will be fully solved in the near future as from time to time a few people fall into this trap (it actually also happens to me, like all the time, only difference is that i already know how to fix it)...\n  I reran the tests and everything looks fine. Currently don't really have the time to look over bigger changes, so that'll have to wait until next week, but thanks for bringing this up!\n Hey, I just had a look at your changes.\n\nThe only issue I see is that your sed based replacements return the whole input when there is no match:\n\n```\n\u039e (serenity) ~ \u2192 echo '\"bla\":\"test\",\"challenges\":[]' | sed 's/.*\\(\"challenges\":[^\\[]*\\[[^]]*]\\).*/\\1/'\n\"challenges\":[]\n\u039e (serenity) ~ \u2192 echo '\"bla\":\"test\",\"nochallengesforyou\":[]' | sed 's/.*\\(\"challenges\":[^\\[]*\\[[^]]*]\\).*/\\1/'\n\"bla\":\"test\",\"nochallengesforyou\":[]\n\u039e (serenity) ~ \u2192 echo '\"foo\":\"bar\"' | sed 's/.*\"foo\": *\"\\([^\"]*\\)\".*/\\1/'\nbar\n\u039e (serenity) ~ \u2192 echo '\"nofoo\":\"bar\"' | sed 's/.*\"foo\": *\"\\([^\"]*\\)\".*/\\1/'\n\"nofoo\":\"bar\"\n```\n\nIf you can fix this issue I don't see any problem with merging it.\n @bahamat but now it doesn't return anything, even on those were it should return something. that's why the tests are failing.\n\n`\"foo\":\"bar\"` should return `bar` if asked for `foo` \n`\"nofoo\":\"bar\"` should be empty\n\nbut both are empty, which is understandable since '-n' on sed disables the default print command\n\nadding a `p` at the end seems to work:\n\n```\n\u039e (serenity) ~ \u2192 echo '\"bla\":\"test\",\"challenges\":[]' | sed -n 's/.*\\(\"challenges\":[^\\[]*\\[[^]]*]\\).*/\\1/p'\n\"challenges\":[]\n\u039e (serenity) ~ \u2192 echo '\"bla\":\"test\",\"nochallengesforyou\":[]' | sed -n 's/.*\\(\"challenges\":[^\\[]*\\[[^]]*]\\).*/\\1/p'\n\u039e (serenity) ~ \u2192 echo '\"foo\":\"bar\"' | sed -n 's/.*\"foo\": *\"\\([^\"]*\\)\".*/\\1/p'\nbar\n\u039e (serenity) ~ \u2192 echo '\"nofoo\":\"bar\"' | sed -n 's/.*\"foo\": *\"\\([^\"]*\\)\".*/\\1/p'\n```\n  also slightly related to #92\n  You should be able to just set normal proxy environment variables, curl should see and use them.\n\nSee `man curl` under \"Environment\".\n @phaidros7 you can configure it in config, just use `export HTTP_PROXY=...` or whatever in config.sh, it should work\n  Mh... since there is already a hook for successfully renewed certs and a pull-request for unchanged ones we may as well just add a hook for failed renewal. \nWith that hook it should be very easy to do this in an external script, which I think is better than integrating it into the main script (trying to keep it simple to reduce chance of bugs).\n I'm closing this since it's a lot better to do this with hooks.\n\nFeel free to open issues for missing hooks, but please take a look at currently open pull-requests first since there are a few new hooks will soon be merged.\n @bviktor yes, if you want to be notified when a certificate changes you'd add your code as a deploy_cert hook. i'd also suggest using something like cronwrap so you can catch any kind of error when using the script as a cronjob.\n @bviktor read https://github.com/lukas2511/letsencrypt.sh/blob/master/docs/examples/hook.sh\n  Can you change it to just say `Skipping renew!`? Otherwise it's fine.\n  Actually I think we should reduce this to just the timestamp argument and export KEY_ALGO like some other config values are exported:\n\n```\n# Export some environment variables to be used in hook script\nexport WELLKNOWN BASEDIR CONFIG\n```\n\nWe may want to move that new export to the actual signing loop for future-compatiblity with per-cert configurations.\n timestamp is now a parameter of the `deploy_cert`-hook and KEY_ALGO is exported as environment variable\n @clydeclements done, thanks.\n  Hmpf... I like the idea, but this should only continue on the \"too many certs\" error, not in any other case. Also it should still return with an errorcode in the end.\n Merged in 34565c193d0360dd4abbe1e630e5cad1396e81ca and 117d5d622846e8f8efd62c112ab7e8976a0b36a7. For now I'm considering this as experimental as especially with hundreds of domains it may be easy to miss an error. Maybe adding a hook in case of an error or something similar would be nice to catch any problems.\n  I think this would be great in combination with a `failed_sign` hook (open for better names), which would make things like #160 easier.\n @Cyborgscode\n\n1) we may add a pre-sign hook so you can do checks in a hook before anything else happens, this won't become a part of letsencrypt itself.\n2) related to #160, there will be more hooks making this easier to implement\n3) yes, by now i agree that continuing would be a good idea in most cases\n4) i'm not sure about this one, may be implemented at a later point\n  @abishai yea this is a known issue, see #92 \n  In normal operation this script creates `fullchain.pem` files for each certificate, containing intermediate(s) and your certificate.\n Yea, for the signcsr command this is actually missing, might be a good idea to add that in there too.\n i changed it so now it only prints the full certificate chain if --full-chain/-fc is set\n  Can you check if the mentioned commit fixes your problem?\n  @onovy i think the name `DOMAIN_FILE` in example hook may be a bit confusing, and i think this is going to have problems when `BASEDIR` has spaces in its path, would be great if you could find a solution for that, but otherwise i think it's fine.\n @kroimon No, the problem is that you may have stuff like `\"/path/to/file1.pem\" \"/path/with spaces/file2.pem\"`. As parameters to a command this will be no problem (shell will handle this for us), but written to a file this looks like `/path/to/file1.pem /path/with spaces/file2.pem`, which will basically split our second path into two wrong paths `/path/with` and `spaces/file2.pem`.\n @kroimon that may work, it's unlikely that quotes will appear in the actual paths, and adding commas it would become a csv file, which should be rather easy to parse. i guess i'll implement something replacing this pullrequest very soon since i need something like this myself.\n I'm closing this since I think that this is actually something that can easily be handled outside of dehydrated (using hooks and wrappers) and will only result in complications (especially with per-certificate configuration which allows for different hook scripts per certificate).\r\n\r\nIf you need something like this I'd suggest doing the following:\r\nIn the `deploy_cert` hook touch a file, e.g. `/tmp/restart_apache`, then use the new `exit_hook`-hook I just added (298a7e9) or a wrapper around dehydrated that looks for this file, reloads Apache, and removes the file.\r\nYou can do a lot more in the `deploy_cert` hook like actually appending domains to a certain file if you need that for some reason.  No. Especially with CONTACT_EMAIL this will never be an option since that address is per account and not per certificate.\n  I think it would be better to define an alias instead of changing every call for the openssl binary. \nYou actually should be able to do that in your config file without any changes to the script itself, but making it a bit cleaner by using a config variable would totally be okay.\n Thanks @Sp1l. Closing this pull-request as the changes are not really necessary.\n  Using `[[` instead of `[` because `[[` is a shell built-in while `[` (in theory) is a command, making the script (in theory) a bit cleaner.\n\nUsing `${var}` instead of `$var` just as a habit and to never ever run into any problems. Also it feels good to have it consistent.\n @bittorf yes, i would be okay with that if you can work out the other stuff to make it posix compatible.\n I'm closing this ticket now. Doesn't look like anybody is working on this and I don't really have a personal interest at doing this migration. If somebody still wants letsencrypt.sh to be POSIX sh compatible please feel free to open pull-requests.\n  @mapreri it's not really required in config, but it also doesn't hurt having it there\n  oh yea, spaces do exist, i always forget.\n @K2rool just use `hooks/cloudflare/hook.py`, add a shebang to the first line of your script `#!/usr/bin/env python` and make it executable (`chmod +x hooks/cloudflare/hook.py`).\n @bviktor I think a passthrough/wrapper script would be better than a new option. It's simple, it doesn't add much weight and it can handle all kind of edgecases.\n  Can you change it to use `-f` instead of `-e`? Then I'll merge it.\n  Sorry, I don't want any package-manager specific stuff in this repository.\n  I'm not sure, this way you'd always have your verification \"files\" in place, and an attacker having control of your account-key or a key with identical fingerprint (if that is possible) could sign certificates for all your domains.\n There were already issues involving left-over signatures: https://github.com/letsencrypt/boulder/issues/604 \nProbably just a conceptional issue and nothing that was really exploited, but I really dislike that it would have worked in theory.\n\nAlso leaking private keys by accident is nothing new, people accidentally hosted private keys on their websites, on GitHub, or got them stolen through software exploits. \nFrom some of the issues I've read on this repository I actually think some people are using this script inside of `/var/www/letsencrypt`, basically having their private key a web-server configuration issue apart from being public...\n\nI agree that it would look cleaner, and be a lot easier since there is nothing that has to be moved around, but I really don't want to take this risk. \nIf you want to do this nothing stops you from doing this, you'd just have to extract your fingerprint once, but I dislike this as a \"feature\" (or configuration suggestion) for this script.\n  wat.\n  I recently merged changes to allow \"chaining\" hooks, which basically calls all the hooks for distributing those challenges first before talking to letsencrypt.sh again. The hook syntax changes a bit and there isn't really documentation for this feature yet, but basically it just adds more parameters to the deploy_challenge hook (see https://github.com/lukas2511/letsencrypt.sh/blob/master/letsencrypt.sh#L394)\n\nYou should be able to use that (+ a sleep in your hook script) to have it working like you want it to work.\n Yes that is true, but sorry, won't change that, would require too many changes.\n  I think this should be handled in-place. Curl should return a connection-problem specific return code that should just be captured in http_request()\n The mentioned commit should print an error if curl can't connect to the server instead of failing in silence.\nThis way it should also work for temporary connection problems.\n  I am against changing the return code as \"0\" is for success, and that is what should be used when the script ends successfully.\n\nSome people wanted a feature that only checks if all certificates are still valid.  \nI have an idea on how to implement this without duplicating a lot of code and will do that soon.\n  Your script wasn't executable, this is not a bug in letsencrypt.sh, closing this ticket.\n  related to #80.\nthere will definitively be a feature for this in the future, but i kinda want to just move them to some kind of archive directory and not delete them directly.\n I've implemented a solution in e60682c06c52cc52799f1eeecc178dbc3618ffdc.\n  You should be able to do that inside the deploy_cert hook. I don't really see any benefit of having this directly inside of this script.\n And create that file in every config format for every webserver out there? No thanks.\n The config file format for every webserver out there is different. \nIf this would be a feature I'd either have to decide on which servers to support or support them all. \nA few config-syntax examples are listed in the url you posted in the first message of this conversation:\n\n```\n## apache configuration\nHeader set public-key-pins \"pin-sha256=\\\"FdFOH8lP8ipUaas4cnj92Ifk81feECxL/RGDps3otfw=\\\"; pin-sha256=\\\"LeSTjTfnibfKHJmDfIGoWrE7JwFWMUy/+3Ft55sBTGs=\\\"; max-age=604800; includeSubDomains\"\n\n## nginx configuration\nadd_header public-key-pins 'pin-sha256=\"FdFOH8lP8ipUaas4cnj92Ifk81feECxL/RGDps3otfw=\"; pin-sha256=\"LeSTjTfnibfKHJmDfIGoWrE7JwFWMUy/+3Ft55sBTGs=\"; max-age=604800; includeSubDomains';\n\n## h2o configuration\nheader.add: \"public-key-pins: pin-sha256=\\\"FdFOH8lP8ipUaas4cnj92Ifk81feECxL/RGDps3otfw=\\\"; pin-sha256=\\\"LeSTjTfnibfKHJmDfIGoWrE7JwFWMUy/+3Ft55sBTGs=\\\"; max-age=604800; includeSubDomains\"\n```\n\nYou should easily be able to do that for your specific webserver configuration in a hook script, but this will never be a feature of this script.\n Just use hook scripts... doing it this way just makes everything a lot more complicated.\n creating a textfile like this would be okay.\n\non the deploy_cert hook i'd then like to just have the timestamp added, so that it can be used for future features and we don't need to add more options all the time.\n This should be doable in the `deploy_cert` hook by now, everything that is needed for generating those config entries is exported and there even is support for key rollover now, making this actually useful.  Certificate keys are per certificate, the only shared part is the account key.\n\nGenerating entropy shouldn't be the job of this script, if you are running low on entropy you should run haveged or configure some other way of generating entropy.\n  I'll have a look at that problem, thanks for reporting.\n\nJust wondering: Are you using the script under BSD/OSX?\n @stonie08 i didn't write that part of the code, and roughly reading over it i found parts that looked like they might be incompatible with bsd sed, that's why i asked. will probably have to test with both bsd and gnu/linux.\n  Take a look at the wiki: https://github.com/lukas2511/letsencrypt.sh/wiki/Examples-for-DNS-01-hooks\n  Documentation in general should be worked on....\n- domains.txt is searched for in `$BASEDIR`, which is by default the directory with your config file\n- naming scheme is a bit different, where the official client had `/etc/letsencrypt/live/example.org/...` this script uses `$BASEDIR/certs/example.org/...`.\n\nLeaving this ticket open as a reminder to work on better documentation.\n @seefood how about reading README, which states that the file has to be reachable via `http`?\n\nedit: sorry for maybe sounding a bit agressive. i'm just slightly annoyed when people don't even read what i already provide as documentation... :-/\n @seefood the account-key (`private_key.pem`, outside of the certs directory) has to be registered at the configured CA, and that happens in letsencrypt.sh only after generating that key.\n\nthis will change in the (hopefully near) future. \ntemporary fix is to delete the old account-key and let letsencrypt.sh generate a new one.\n\nup to now i didn't really find any downsides to just generating a new account-key. \nas far as i know the only feature depending on it is revoking of a certificate you lost the key for.\n I just commited reorganized docs, added a tiny troubleshooting guide with the most common issues, and added a getting started section to readme.\n\nDefinitively needs more work, but I think it's a good starting point.\n This should all be documented now, finally closing this ticket :)  Is that bad in any way?\n  I think the correct solution would be to use `openssl dgst -sha256` in the script. `openssl sha` seems to be a legacy command. This will be fixed soon.\n  @germeier the wiki is now writable (again), if you want you can add some examples\n Added a wiki page with links to those examples: https://github.com/lukas2511/letsencrypt.sh/wiki/Examples-for-DNS-01-hooks\n  This is related to #109.\n\nI think it's best trying to get this script somewhat posix compliant as this way it should work in quite a lot of shells.\n Initial zsh compatiblity was added in da2eeda97d04817b895a6c85e72d5c5d53e32241.\n\nWill continue working on compatibility with some other shells.\n\nI think busybox ash (as you suggest) would be a good next target so this script works on embedded systems with openwrt, angstrom, alpine, etc.\n I just had a look at busybox ash and I don't think porting this script is worth it.\nAsh really lacks a lot of features, which would require a ton of workarounds....\n\nI'm closing this ticket now since there already is support for at least one other shell (zsh), and I guess it would work in some others too.\nIf there are (minor) issues with other shells there should be new tickets created instead of adding to this.\n  Since this duplicates quite a lot of code I don't want to merge it, please find a better solution.\n  merged in 6e048f7fe028217ec415709a15019737f9db6d8d\n  I don't really like this, it looks ugly, but up to now this is the best solution so i'll merge it.\n  thx\n  better workaround merged in #113\n  I think CI also had this problem, it shows a timeout after quite a lot of time. Can't merge it as is, also didn't really look at the changes since it's not working correctly.\n I'll still have to look at it, hopefully will get around to it this weekend or early next week.\n\nI don't really like this shell-switchie-thingie, I want this to \"just work\" in most shells, but I see that at least some of your commits are going in the right direction.\n I really dislike that this contains so much more than just making it compatible with zsh. I'll manually pick out the important parts for now, the rest of the functionality may be added later.\n Initial zsh compatibility is now provided since da2eeda97d04817b895a6c85e72d5c5d53e32241, closing this pullrequest as I don't want that automatic shell selection and some of the other stuff was already fixed.\n  Sounds like a good idea.\n\nI will implement something:\n- Having output that shows domains with status (most likely in form of \"domain.tld [valid|expiring|expired]\")\n- Using exit-level 0 if everything is valid and nothing expiring soon\n- Using exit-level 1 if a cert is expiring soon\n- Using exit-level 2 if something actually expired\n I'm going to finally spend some time implementing this...\r\n\r\nOriginal idea basically still stands, I'm trying to build this nagios-check-like so it can easily be used with tons of monitoring suites.\r\n\r\nAny further suggestions?  It would be nice to have additional config files per-certificate to allow for certificate-specific options like RENEW_DAYS and PRIVATE_KEY_RENEW.\n\nThis replaces issue #34.\n Yea, I was thinking to allow for `config.sh` next to the certificates in the target directory.\n\nFor implementation I guess the best thing would be to move certificate-specific code to a new function and use `local` variables, but this has to be implemented clean, variables should never be carried over to the next call of the function, because that would mess with other certificates.\n Yes, idea was to have those specific configs as optional config files overriding some parameters for a single certificate, not having them as a requirement.\n Well, you could always use symlinks to have a shared config for multiple certs.\n\nBut maybe this could also be implemented with the help of a hook script so that people could script this...\n This is now implemented in ec48906992ca9e1238dbcc9659e576cdd6bbeb07. See https://github.com/lukas2511/letsencrypt.sh/blob/master/docs/per-certificate-config.md for more information\n  You can use hooks to move certificates to other directories or even upload them to other servers, whatever you need.\n @the-solipsist there are some examples in the wiki, i may add more, but in the repository i want to keep the hook example as clean as possible\n  I actually have no idea what you are asking for.\n\nHooks are just called as simple commands in the script with all data passed as arguments, there is no need to read from anywhere.\n I see what you mean, but I'm not entirely sure why this happens...\n  I'll merge this now, but I think hooks should actually be explained in their own readme-section. This has to be worked on.\n Yea maybe also add some comments explaining a bit when a hook gets called, that would be great.\n  I find it really hard to decide at which point I'd want a new version release.\n\nThings are changing all the time and it now slowly starts becoming a bit more structured and stable, but i still don't feel like marking the code as \"released\".\n\nAt some point I may give it a version number, but at the moment it just doesn't feel right...\n I've just released version 0.1.0 of this script.\n  Thanks, this is something I actually wanted to add to this project at some point, so this is great!\n\nI didn't yet have time to look at the code, but if it's fine I'll merge it. I'll try to do that tomorrow.\n  I'm personally using `location /.well-known/acme-challenge { alias /var/www/letsencrypt; }`, and I don't have any problems with that. Seems to be a problem with your configuration.\n  yea... i know... i kinda hate changing paths now, as it has been like this for quite some time... but i guess something has to be done...\n  Before creating issues please read `README.md`.\n  The alias in the nginx config should exist so that nginx can deliver the challenge responses. \nIf you didn't configure it properly you should at least see a 404 or something similar in your webservers access-log.\n\nChallenge responses get cleaned up even after errors, so you will not see any files there after the script stopped. \n\nYou can use the possibility to configure hooks to upload a file over ftp or something else, but you'll have to write a function or script for that. \nThere is a little bit more information about how to use hooks in `config.sh.example`.\n\nSince this doesn't seem to be a problem with letsencrypt.sh I'll close this issue for now.\n  Mh, looks like your `sed` version is too old to support the `-E (Interpret regular expressions as extended (modern) regular expressions rather than basic regular expressions (BRE's).)` option. \nI added that option to the scripts dependency checks in 63ab72a5217c51bb0b04607626b5f6f7284db38b.\n\nUnfortunately I kinda need to use that option to get support for BSD and GNU versions of `sed` at the same time without duplicate code all over the place...\n\nI'd suggest getting a newer version of `sed`. About the curl problem... I don't really understand why the check fails... Does `curl -V` return with an exit-code != 0 on your system? That seems a bit odd.\n Exit code 2 should be given if the initialization of libcurl failed, which should never happen on just asking for the version... i could probably build a workaround for this, but this seems weird.\n\nYou could just build `sed` from source, place it anywhere you like and set the `PATH` environment variable for letsencrypt.sh to use this location.\n `sed -r` doesn't work on BSD versions of `sed` while `sed -E` works on both GNU and BSD versions, at least on newer versions of both.\n I'm working on the sed issue, about the curl issue i'll see later...\n The sed issue should be fixed f7c7d8c5991d78e5666de3b69ee63844266eaf21\n The curl issue should also be fixed 0af7f388d6e63e74920e5f0cc9ae21f717d223d1\n Moved OSTYPE check (was executed after dependency-checks) in c3c9ff4c75643e0b878aa0f71ea39b6020b06ef6, try again.\n  Yea this happens if no command is given but only arguments (e.g. `./letsencrypt.sh -x`), thanks.\n  This seems to be fixed by now, script now exits after printing the error message.\n  Default command has changed, you have to provide `-c` or `--cron` to actually get it to do anything.\n\nAlso the `Unknown parameter detected:` message is a bug, it should just show the help text without any errors, I'll fix that.\n  Yea i think a bit of cleanup logic would be nice, but i would prefer to only delete expired (and unlinked) certificates, and not everything that just isn't in use anymore. Also I don't know about the way you implemented the check for used files with that array/list and stuff... I mean I guess it will work, but for some reason I just don't feel comfortable with it near my kinda important certificates.\n I've implemented a solution in e60682c06c52cc52799f1eeecc178dbc3618ffdc.\n\nMy solution moves unused files to the (new) `archive` directory and ignores files that probably weren't created by the script itself so it doesn't accidentally delete user-created files.\n  I see why this would be useful, but it seems that quite a lot would have to be written differently to support this...\n\nDidn't really take a look at the DNS verification, but I think you actually should be able to generate your challenge response in advance and just add it as some kind of wildcard in your zonefile.\n @TerraTech if you use `HOOK_CHAIN=yes` in your config all challenge deployments and cleanups (for 1 certificate) are done within one hook call each, and this should be relatively easy to parse within your hook script. see [docs/hook_chain.md](https://github.com/lukas2511/letsencrypt.sh/blob/master/docs/hook_chain.md)\n  Yea good idea to implement this, but i don't like the hook being part of the repository.\nMaybe we should add a section to the wiki for example hooks...\n\nI have a larger set of changes i'll push in a minute, this pull-request will probably break while doing that, but i'll have a look at manually merging it in the next days.\n On the rest of the pull-request: I'd split this into two pull-requests or at least commits to have the change with the \"--hook\" parameter separate from the rest, also I'd change testing for the challenge-type to use a switch statement instead of multiple ifs, but otherwise it looks fine.\n\nAlso: When you do the PARAM_HOOK thingy, please make sure that it works with the new load_config method and works in command_env.\n  Really? FreeBSD 5.5?... Isn't that completely unsupported since 2008?\n\nI won't change this since the behaviour of `-t param` is different for BSD and GNU `mktemp` (on BSD it's a prefix, on GNU it's a template) and it would really over-complicate things to add a helper function just for supporting ancient systems.\n\nI suggest you write a simple wrapper and put it into `config.sh` which gets sourced by `letsencrypt.sh`, that should allow you to redefine how the real `mktemp` is called.\n Looks like this was changed around Oct 2012 (in https://github.com/freebsd/freebsd/commit/a0bfe4edc64ac8e7cca69aaf01caad11bba39724), so probably was first released in FreeBSD 9.1 or 9.2.\n\nI think most people are using either 9.1+ or have already updated to FreeBSD 10, but if more people report this problem I may implement a workaround.\n I now replaced all mktemp calls with `mktemp -t XXXXXX`.\n\nThis results in BSD tmpfiles to have a \"XXXXXX\" prefix, and GNU tmpfiles to have a random name with 6 characters.  \nA bit weird but whatever, it shouldn't cause any problems.\n @morganwdavis nope, this option will stay, qnap users will have to look for workarounds. sorry @Rycochet.\n @bittorf i f****ng hate things like this. changed in f096c62. this will probably break this script for a few people, but whatever.\n\nedit: thanks anyway.\n  I don't know, where does this end? You'd probably also need a privfullchain.pem or something. I think using a hook for this is a better idea than making this part of the script.\n  I want this thing to kinda work out-of-the-box, and changing it to staging would probably confuse a lot of users why their new certificates are not working (anymore), so i will not do that. Sorry.\n  This should be fixed in a7934fe72d066746a830475b757a18fac569d837.\n  I completely removed using the config from a home directory in ff11639624047e0b697d42ee06d1e93132310447, but thanks for explaining the workaround.\n\nUsers who still want to use this can add an alias to their shells config to call the script with `--config /path/to/config`.\n  Interesting. I somehow assumed this to be a builtin, mh.\nI'll probably just replace it with a simple printf statement in the next few days.\n This should be fixed in 7727f5ea61d7993793517d4fcb72a1bde609eef2.\n  I let this slip in with 92a822e0b88e57f6dd4c559f1f08cb6125e71306, thanks.\n  already have this in my local version of the script, will commit&push soon, thanks anyway!\n  It kinda feels wrong to add a license to a simple bash script, also I can't decide on which one to use...\n this one should be good enough\n  Hey, the new way of setting default parameters doesn't seem to work, i tested these changes and PRIVATE_KEY is empty as set in the beginning of the script.\n\nAlso if using `[[` (shell-builtin) works for you please use that instead of `[` (external command `/bin/[`).\n This pull-request has become quite dirty with all those merge commits...\n\nSome parts of this have become unnecessary with some of the changes i just pushed (especially setting default config values), some have been merged in one of my last commits, and I'll merge some more with later cleanup commits, so i'll close this pull-request now.\n  I don't think this has a place inside this repository, sorry.\n  I don't really think this belongs inside this projects README file, the nginx example is just to demonstrate basic usage, I don't want to add examples for every webserver software out there.\n  thx\n  slightly modified merge in 0ed6a25795efed36b1bc7968425dbc84924834d5\n  ``` text\nProcessing e9e88ffd.ngrok.io\n + Checking domain name(s) of existing cert...\n + domain name(s) are not matching!\n + cert  names: e9e88ffd.ngrok.io\n + given names:  e9e88ffd.ngrok.io\n + forcing renew\n```\n slightly modified version merged in 2d097c928cddd9ae6c917fab9dfee2951e921a28, thanks\n  It seemed sane for me to automatically set the command to `sign_domains` with `--domain` specified, because it isn't used anywhere else, but I guess you are right.\n\nI think this also needs to be changed a little bit, at the moment `--domain example.org --domain example.net` would result in a single certificate for both domains, would be great if we could fix that so that it behaves the same per domain parameter as it does per line in domains.txt.\n  Looks like it would leave the symlink dangling around, we may want to remove that after renaming the real certificate.\n slightly modified version merged in c70180364b75fca01a3a299b17c5b6f67dccd26c (modified to allow links with absolute target)\n  From nginx documentation:\n\n`A special wildcard name in the form \u201c.example.org\u201d can be used to match both the exact name \u201cexample.org\u201d and the wildcard name \u201c*.example.org\u201d.`\n\nSince letsencrypt doesn't provide wildcard certificates (yet) i think this would be more confusing than helpful.\n I think it's more confusing than helpful, only thing that might be nice would be a syntax like this:\n\n``` text\nexample.org {www,wiki,docs}.example.org\n```\n\nBut still, even though it would be useful, I think it's harder to read than just to write them all out.\nAnd if you have too many domains for one certificate i'd suggest splitting it into multiple certificates anyway... so yea... dunno.\n\nEdit: changed example to be more like bash syntax and not like a regex, this actually made it a lot more readable, I may actually implement this.\n I'm not sure if I want this on the first parameter since that is used as path for the certificate and may result in some problems\n Defaulting to generic domain is a bad idea, since there could be multiple certificates with very similar domains, and that could result in a conflict.\n\nUsing the first generated value may be an option, but I'll have to see how to implement this. Parsing of domains.txt will be reimplemented at some point in time anyway because of #34.\n  i kinda fixed this by removing the functionality to automatically create the directory in 5a29d1853efcfda2e3880f8a5a56931701a1ae07\n\nsince the default path is useless anyway i think this is better for now, may reimplement this when #34 is done.\n  In 311112654a98b0edcbc6eeeeb603215c8bc4489e I to get all error messages to stderr, so in theory you could just pipe stdout to /dev/null or something, and would still get messages on errors.\n\nI'll leave this ticket open since I think --quiet (-q) and --verbose (-v) options would be nice to have.\n @germeier:\n\ni was thinking more about _debug, _info, _warn, _error functions, so it's a bit more readable than \"msg 3 whatever\", those can also handle writing to a logfile or whatever, and maybe should also format output so that every line begins with \"$(date) WARN: \", \"$(date) INFO: \", etc.\n\nand i changed default command to help in 1ca883dee241d6edd1e885233aec8eab94af8e41\n I don't want to implement mail functionality in this script, but it should be very easy to build a wrapper around this script to send some mails, either by parsing stdout&stderr or by checking for modifications in certs directory.\n Yes this will probably be done at some point.\n Sure, you can have a go at this, I don't think anybody is working on this right now.\n This whole thing gets a lot more complicated than i first thought...\n\nThe problem is that normally you wouldn't want to see lines like \"Processing example.com\" in your command output, because it may not be relevant, but it becomes relevant the moment something happens to that certificate.\n\nThat may be solved by actually including the certificate / domain names in every single line of output, but that would make this whole thing really ugly...\n\nI'm thinking about ditching the idea about log-levels, because this makes it way to complicated...\n There are already exit codes in place for error cases, and \"0\" should be returned on success. \nYou can easily set up a cron that only prints messages on errors, or grep for renewal statements or whatever... It's hard to do this in a clean way inside the script itself.\n\nYea sure it's great for automation if it would have that, but on the other hand it shouldn't be much work to build a wrapper for this job... \nMaybe I'll add a wrapper to the repository at some point.\n @germeier but this doesn't solve the problem: `_info \"Processing ${domain}\"` while having `_error \"ERROR: ${1}\"` would result in an error message without the name of the certificate\n Yes buffering the output and replaying it when necessary would work, but it seems ugly :-/\n @rossnick `--quiet` doesn't exist (yet). I'm still hoping on solving this problem at some point, but I still don't feel comfortable with any of the suggestions I got so far.\n I'm closing this issue. I think that using a wrapper is a lot more elegant than doing the logging inside the script itself.\n  The parsing of domains.txt is ugly enough as it is right now, and you can implement that behaviour for yourself by using the command-line options of the script (passing domain names with `--domain \"example.com www.example.com\")`.\n  Mh... tiny problem with this: BSD version of sed behaves different than GNU version...\nThe original line worked fine with GNU sed but had problems with BSD sed,\nthe \"fixed\" line is exactly the other way round...\nNeed to find a solution for this :-/\n Oops well actually, the \"fixed\" version actually just doesn't work at all, it doesn't remove the whitespace, it just passes the line as is.\n  Just to clarify: I was using shasum because sha256sum doesn't seem to be available on bsd systems. Now i switched it to use openssl for generating the hash, which hopefully works everywhere.\n  I don't want to merge this.\n\nThe default challenge location is more like a dummy location, that can be used with the configurable hook script. If you want a different location you can set that in config.\n\nI'd rather change the README to include instructions on where to best create the output directory, how to configure it and where to place the config snippet in nginx config.\n\nAlso if you are using this and the exact snippet i posted in README it looks like you have your private key very near to a directory that is used as webroot. You should fix that.\n  Thank you. I agree that having this as a fallback seems like a bad idea.\n\nAbout your other suggestions:\n\nUsing only one location may seem like a good idea, but on different systems that location may be somewhere completely different.\n\n1) On a lot of BSD systems user installed software is located in `/usr/local` with configs in `/usr/local/etc`, the same is true for OSX\n2) A lot of linux based systems use `/etc` as their config directory\n3) A non-root user may want to use this, so loading config from user home is also a requirement\n4) There are actually users managing multiple installations who want to use the config relative to the current working directory.\n\nSo yea, removing this code to load the config from multiple locations (using first found) would break some users workflow. To make it a bit more secure i changed the order of directories to check in 5120dfb5f33917dc83f6a6a4bd80d8d07e7c0722.\n\nThe other thing about the default config... yea well... i don't know. I don't think this will ever really break anything except when you are really trying to, and since it's all relative to the script directory it makes testing this software out really easy, you basically just have to create domains.txt and decide on a delivery for your challenge responses (which could just be a symlink to `.acme-challenges`) to get started.\n  Can you please squash your commits and fix the travis script? Otherwise it's okay to merge.\n  Fixed with 1ab6a436c0c8b3588a6a398f32dcafa14560700b and 62037de04169ca36c49c581c37d0cffbce86e401.\n  Mh.. i don't really want to fill the repo with hooks, especially since the script is not yet in a stable form and hook handling may change at any time, requiring to update all example hooks...\n\nMaybe later we can add an \"example_hooks\" directory, but i'd keep it to 1 script-file per hook.\n Closing this for now. If you want to feel free to create a page in the wiki of this repository for your hooks.\n  reworked this a tiny bit and merged it in 81882a64c2a18df97327980101a547322b70c604.\n\ni think it needs a bit more work, especially on detecting wrong parameters, but it seems to be working for now.\n  I like the idea, but i don't like the format.\n\nMaybe something more like this which allows those parameters to be optional:\n\n```\nexample.org www.example.org WEBROOT=/var/www/example.org USERINFO=apache\nexample.net www.example.net WEBROOT=/var/www/example.net\nexample.mx www.example.mx USERINFO=mail\nexample.com www.example.com\n```\n\nBut maybe someone has an even better idea...\n @LynxChaus from reading your parser it looks like it just supports things like `VAR=value`, but i'd like to also see support for `VAR=\"value value value\"` and/or escaped values like `VAR=value\\ value\\ value`.\nI think splitting the line at the right point and just passing it through declare would solve this.\n This actually could be replaced by putting extra config files into the certificates directory. This may actually also be useful for storing per-certificate options like RENEW_DAYS and PRIVATE_KEY_RENEW. That would make this a lot easier to implement and it wouldn't have the whitespace issue.\n Closing this, see #105 for a replacement for this.\n  Installed bash on pfsense, got this message:\n\n![screen shot 2015-12-08 at 19 35 54](https://cloud.githubusercontent.com/assets/85965/11664588/eeb7bd16-9de2-11e5-96ab-f7bf36bd57e8.png)\n\nI tried it, but mounting doesn't work. No idea why.\n\nClosing this issue since this is basically just pfsense not supporting bash properly, and that isn't our problem, sorry.\n\nEdit: I tried again, this time it worked, maybe I had a typo. So this is not even a pfsense bug but a user problem.\n  If this script is used inside a cronjob it may interfere with a user using the script, so i think it would be a good idea to have some sort of lock-file to make sure it's at least not signing the same domain at the same time, or maybe even that it's not running at the same time.\n  merged in ea5b70a3d91d9ed211b8e8e4d641b8fe5c1c2093\n  I cleaned this up a bit and merged it in c24843c666a9316ede2d6c37b5052dc8a5ddaeb8\n  yea something like that, structure looks fine to me, but i'd prefer the usage of getopts instead of parsing commandline manually\n would suggest following parameters:\n\n### Modes:\n\n``` text\n-c (cron operation: default)\n\n-h (help)\n\n-s [domain] (force-sign specific domain)\n\n-r [path/to/cert.pem] (revoke certificate)\n```\n\n### Parameters:\n\n``` text\n-f [path/to/config.sh] (use specific config file)\n\n-k [path/to/privatekey.pem] (use specific private key for given operation, especially useful for certificate revocation)\n```\n @germeier \nI'd design the '-c'/cron mode to be basically what the normal operation is right now, but only renewing not signing new certificates.\n  Can you please clean up your commits, this is horrible to merge.\n  seems to be working, merged in 063d28a6dcc755d339b05cb55880347a8c6c7b4a, thanks.\n\ni think we may need a better way to handle script arguments, and also implement something like \"--help\", but for now this is good enough\n  Should be fixed in f343dc11e82760b741676b57de59f46b8b25ac78\n  Revocation of certificates would be a really nice feature to have.\n @germeier If you want you can give it a try, shouldn't be too hard.\n implemented with #21 in 063d28a6dcc755d339b05cb55880347a8c6c7b4a\n  Currently if you add or remove a domain from a line in domains.txt the script doesn't recognize the change and you'll just keep the existing certificate with the old set of domains. This should be improved.\n For now probably the easiest way would be to just remove the symlink to the existing certificate and start the script\n This is working now.\n  added this in 474f33d2ca79a5852f5a1aa96f0b962ebe267949 with autodetection of default config location\n  merged in 5b29db975528a4eab4c402634aa33c4200a3ddaa\n  merged in 579e231631adfff5c2557c9dbd8958dec11d3d57\n  I removed the '-r' option from sed as it wasn't needed anyway, as far as i can tell it should be compatible with BSD sed now.\n  i merged this in a slightly modified version in b7439a83d6060a1c2c4aee6510c174699f511dbf\n  merged, thanks\n  merged in 5a213f5f6a934c34aed81b62aca92482235b17b2\n  Thanks, i merged e2d7a68 and f85a8f3 manually. 23e520d seems to be breaking functionality and 47762f2 seems to be an empty commit.\n  @einervonvielen please keep in mind that this is not designed to be an easy all-in-one installer and authenticator tool like the original client is. This script is just doing the bare minimum. To get started you'll have to configure your webserver to serve the challenge-response (`$WELLKNOWN`) directory and fill in domains.txt with your domains.\n @thejustsoul i think the email address is designed to be a last way of authentication for recovery, probably if you loose your certificates (including private account key) and want to revoke everything, but i'm not sure. read the spec, it's probably somewhere in there :D\n @einervonvielen\n\n1) yes\n\n2) no, you don't have to move it there, you can configure the output directory for challenge-response files in config.sh (e.g. WELLKNOWN=/var/www/letsencrypt/.well-known/acme-challenge)\n\nSince this script is intended for the more experienced users I don't have any priority of making it easier to use, even though it's actually super easy to use once you get it running.\n\nI'll lock the conversation in this ticket until there is progress to the original questions and issues this ticket was intended for.\n @thejustsoul \n\n##### 1. how to revoke cert? For one domain\\sub-domain. For all domain.\n\nFor now (syntax may change): `./letsencrypt.sh revoke path/to/cert.pem`\n\nWon't implement a command to revoke all certificates at once, this seems more dangerous than practical, especially with current api-limits on letsencrypt.\n\n##### 2. how to renew cert? For one domain\\sub-domain. For all domain.\n\nFor now: `./letsencrypt.sh` will sign all new and near expired cerificates.\n\nI will probably implement a feature to force resigning of a specific certificate.\n\n##### 3. how to use email (to notify about the expiry dates) if already use in official client..\n\nNot sure how that works, if letsencrypt sends the mails you can probably just import your existing key with registered mail and it will continue working\n\n##### 4. need or no need (and how) import account data from official client if before already generate for domain certs?\n\nThere are now two scripts for importing data that are described in the README file\n\n##### 5. crontab - simple add letsencrypt.sh to cron, no need params for script?\n\nSee 2.\n\n##### 6. your client are stable and production ready?\n\nNo.\n\nThis script is hacked together in multiple places, parsing and generating JSON in bash is pretty much impossible, there are several workarounds around how things work, and it will probably never reach the stability of the official letsencrypt client.\n\nI wouldn't recommend relying on this to work, but if you are handling it manually and roll out certificates after additional verification it's more than good enough.\n  This is an error message encoded in base64 m)\n\n\"{\"type\":\"urn:acme:error:unauthorized\",\"detail\":\"Error creating new cert :: Authorizations for these names not found or expired: verbler.com www.verbler.com\",\"status\":403}\"\n\nI think this has to do with issue #3, i'll fix that now.\n Mh no actually this should work. I don't know what is going on here.\n Should work now.\n I'm still working on error handling, so yea at some point this will be detected.\n  At the moment i think the script isn't actually very portable. E.g.: The syntax of the base64 binary differs from system to system, \nI'll change the shebang after I tested that it's actually working under (some) BSD systems.\n\nFor the $*/$@ thing thanks, I'll have a look at that.\n I replaced the shebang with \"#!/usr/bin/env bash\" and the usage of ${*} versus ${@} doesn't make any difference in the places it is used, so I'll leave it as it is now.\n  Yea this still is missing some error handling.\nTo use the staging environment you should set the CA to \"https://acme-staging.api.letsencrypt.org\", without the \"/directory\" at the end, it should work.\n I'm not sure what's going on there, maybe it requires the usage of a different agreement url on registration.\n", "text_all_count": 27373, "text_word_token": ["Mh", "NUMBER", "bortzmeyer", "what", "OS", "be", "you", "run", "dehydrated", "on", "Can", "you", "please", "post", "the", "output", "of", "dehydrated", "v", "Mh", "NUMBER", "Are", "you", "use", "the", "signcsr", "function", "combined", "with", "domain", "parameters", "Those", "be", "not", "designed", "to", "be", "use", "with", "this", "function", "and", "seem", "to", "be", "the", "trigger", "for", "this", "bug", "NUMBER", "You", "or", "ideally", "a", "script", "have", "to", "create", "a", "_acme", "challenge", "NUMBER", "yourdomain", "NUMBER", "tld", "TXT", "record", "NUMBER", "The", "value", "for", "that", "will", "be", "generate", "by", "the", "Let", "s", "Encrypt", "server", "and", "dehydrated", "will", "call", "a", "hook", "script", "with", "those", "values", "so", "they", "can", "be", "deployed", "NUMBER", "You", "should", "have", "a", "look", "at", "the", "example", "hook", "script", "which", "has", "an", "example", "deployment", "use", "nsupdate", "or", "you", "could", "have", "a", "look", "at", "the", "project", "wiki", "where", "you", "can", "find", "a", "big", "list", "of", "user", "provide", "hook", "scripts", "for", "a", "ton", "of", "DNS", "providers", "APIs", "NUMBER", "Wat", "NUMBER", "This", "looks", "weird", "NUMBER", "You", "should", "take", "a", "look", "at", "your", "domains", "NUMBER", "txt", "maybe", "some", "weird", "zero", "width", "space", "unicode", "character", "get", "in", "the", "middle", "of", "your", "hostname", "or", "something", "similar", "NUMBER", "Otherwise", "please", "post", "the", "output", "of", "dehydrated", "v", "and", "the", "content", "of", "your", "domains", "NUMBER", "txt", "NUMBER", "Dehydrated", "doesn", "t", "refresh", "your", "certificate", "because", "from", "its", "view", "it", "s", "a", "completely", "valid", "certificate", "NUMBER", "You", "can", "use", "force", "to", "force", "dehydrated", "to", "refresh", "all", "certificates", "NUMBER", "Yea", "like", "others", "already", "said", "The", "hook", "script", "be", "responsible", "for", "waiting", "for", "propagation", "before", "handing", "control", "back", "to", "dehydrated", "NUMBER", "There", "be", "various", "reasons", "why", "dehydrated", "doesn", "t", "do", "this", "by", "itself", "additional", "dependencies", "unknown", "network", "situation", "on", "users", "systems", "anycast", "can", "become", "a", "problem", "etc", "NUMBER", "NUMBER", "Dehydrated", "could", "generate", "tls", "alpn", "verification", "certificates", "as", "another", "way", "of", "verification", "those", "should", "be", "easily", "deployable", "use", "a", "new", "hook", "NUMBER", "Short", "explanation", "on", "tls", "alpn", "verification", "after", "reading", "the", "specs", "ALPN", "be", "a", "protocol", "extension", "for", "TLS", "which", "allows", "multiple", "protocols", "to", "be", "hosted", "on", "the", "same", "port", "e", "NUMBER", "g", "NUMBER", "HTTP", "NUMBER", "and", "HTTP", "NUMBER", "on", "port", "NUMBER", "tls", "alpn", "verification", "uses", "this", "with", "a", "new", "protocol", "acme", "tls", "NUMBER", "and", "a", "specially", "crafted", "self", "sign", "certificate", "containing", "the", "verification", "code", "and", "the", "dns", "name", "of", "the", "to", "be", "validated", "domain", "NUMBER", "ca", "connects", "with", "the", "custom", "protocol", "retrieves", "the", "certificate", "and", "do", "several", "checks", "on", "it", "if", "everything", "matches", "the", "domain", "be", "validated", "because", "of", "the", "use", "dns", "name", "it", "s", "no", "longer", "possible", "to", "generate", "certificates", "for", "other", "domains", "on", "a", "shared", "host", "which", "was", "the", "reason", "for", "tls", "sni", "be", "disabled", "since", "alpn", "be", "required", "by", "http", "NUMBER", "basically", "every", "modern", "webserver", "will", "support", "this", "Technical", "specs", "for", "the", "required", "certificate", "extension", "The", "client", "prepares", "for", "validation", "by", "constructing", "a", "self", "sign", "certificate", "which", "MUST", "contain", "a", "acmeValidation", "v", "NUMBER", "extension", "and", "a", "subjectAlternativeName", "extension", "RFC", "NUMBER", "NUMBER", "The", "subjectAlternativeName", "extension", "MUST", "contain", "a", "single", "dNSName", "entry", "where", "the", "value", "be", "the", "domain", "name", "be", "validated", "NUMBER", "The", "acmeValidation", "v", "NUMBER", "extension", "MUST", "contain", "the", "SHA", "NUMBER", "digest", "FIPS", "NUMBER", "NUMBER", "of", "the", "key", "authorization", "I", "D", "NUMBER", "ietf", "acme", "acme", "for", "the", "challenge", "NUMBER", "The", "acmeValidation", "extension", "MUST", "be", "critical", "so", "that", "the", "certificate", "isn", "t", "inadvertently", "use", "by", "non", "ACME", "software", "NUMBER", "id", "pe", "acmeIdentifier", "OBJECT", "IDENTIFIER", "id", "pe", "NUMBER", "id", "pe", "acmeIdentifier", "v", "NUMBER", "OBJECT", "IDENTIFIER", "id", "pe", "acmeIdentifier", "NUMBER", "acmeValidation", "v", "NUMBER", "OCTET", "STRING", "SIZE", "NUMBER", "So", "I", "experimented", "a", "bit", "with", "this", "NUMBER", "Generating", "the", "certificate", "seems", "very", "easy", "The", "change", "to", "dehydrated", "itself", "be", "minimal", "I", "m", "actually", "generating", "the", "verification", "certificate", "inside", "my", "hook", "script", "for", "now", "NUMBER", "The", "hard", "part", "be", "actually", "use", "it", "NUMBER", "As", "far", "as", "I", "can", "see", "there", "be", "absolutely", "no", "support", "for", "work", "with", "custom", "ALPNs", "in", "any", "better", "know", "webserver", "and", "I", "think", "that", "kinda", "makes", "sense", "after", "all", "they", "be", "made", "to", "reply", "to", "web", "request", "not", "anything", "else", "NUMBER", "I", "was", "able", "to", "use", "nginx", "s", "ssl_preread", "module", "on", "my", "load", "balancer", "to", "at", "least", "forward", "those", "request", "to", "a", "different", "port", "this", "should", "be", "a", "good", "starting", "point", "NUMBER", "I", "guess", "I", "ll", "try", "to", "find", "or", "write", "a", "simple", "responder", "NUMBER", "With", "fba", "NUMBER", "ba", "NUMBER", "eb", "NUMBER", "eae", "NUMBER", "aa", "NUMBER", "e", "NUMBER", "f", "NUMBER", "beeaf", "NUMBER", "bbae", "dehydrated", "now", "support", "tls", "alpn", "NUMBER", "verification", "NUMBER", "I", "add", "my", "example", "responder", "and", "load", "balancer", "config", "to", "the", "docs", "directory", "please", "handle", "with", "care", "NUMBER", "Yea", "you", "can", "create", "multiple", "config", "file", "and", "set", "the", "path", "to", "your", "domain", "list", "in", "there", "then", "you", "can", "run", "dehydrated", "with", "config", "path", "to", "config", "file", "and", "it", "will", "use", "that", "config", "with", "the", "defined", "domain", "list", "NUMBER", "There", "be", "no", "intended", "cli", "parameter", "to", "just", "set", "a", "different", "domains", "NUMBER", "txt", "please", "see", "LINK", "for", "the", "reasoning", "behind", "that", "NUMBER", "RandieM", "sorry", "i", "was", "closing", "this", "after", "txr", "NUMBER", "s", "feedback", "NUMBER", "Yes", "the", "parameter", "will", "be", "read", "from", "config", "like", "tons", "of", "other", "variables", "and", "even", "function", "that", "s", "part", "of", "what", "makes", "dehydrated", "so", "adaptable", "but", "it", "s", "not", "an", "intended", "config", "parameter", "and", "I", "don", "t", "want", "it", "to", "be", "one", "NUMBER", "I", "don", "t", "really", "like", "make", "skipping", "of", "error", "configurable", "if", "you", "be", "use", "it", "in", "a", "cron", "you", "can", "always", "just", "add", "the", "parameter", "so", "it", "doesn", "t", "disturb", "anything", "but", "when", "run", "by", "hand", "I", "actually", "want", "issue", "like", "this", "to", "be", "seen", "and", "not", "accidentally", "be", "ignored", "NUMBER", "RandieM", "It", "s", "probably", "better", "to", "add", "the", "command", "line", "switch", "to", "a", "cronjob", "that", "way", "when", "you", "run", "the", "script", "manually", "for", "debugging", "it", "will", "still", "halt", "on", "error", "NUMBER", "Otherwise", "there", "shouldn", "t", "be", "any", "harm", "but", "there", "be", "no", "guarantee", "that", "it", "will", "keep", "on", "work", "in", "the", "future", "NUMBER", "Please", "have", "a", "look", "at", "LINK", "dns", "invalid", "challenge", "since", "dehydrated", "NUMBER", "why", "be", "dns", "challenges", "deployed", "first", "and", "verify", "later", "Well", "the", "import", "script", "be", "kinda", "deprecate", "that", "was", "use", "back", "when", "dehydrated", "didn", "t", "support", "registration", "itself", "early", "NUMBER", "NUMBER", "If", "certbot", "hasn", "t", "change", "the", "format", "of", "their", "keyfiles", "you", "should", "get", "a", "valid", "key", "back", "which", "you", "should", "be", "able", "to", "configure", "as", "ACCOUNT_KEY", "NUMBER", "ACCOUNT_KEY_JSON", "can", "be", "left", "empty", "dehydrated", "will", "automatically", "try", "to", "fetch", "the", "account", "information", "and", "will", "use", "the", "path", "of", "your", "account", "key", "with", "an", "appended", "json", "ending", "NUMBER", "ERROR", "Certificate", "authority", "doesn", "t", "allow", "certificate", "signing", "appears", "if", "a", "certain", "json", "key", "be", "miss", "from", "the", "CA", "directory", "NUMBER", "That", "can", "happen", "if", "you", "set", "a", "wrong", "CA", "variable", "or", "the", "CA", "doesn", "t", "deliver", "that", "key", "because", "signing", "be", "disabled", "for", "maintenance", "or", "whatever", "or", "some", "other", "kind", "of", "error", "maybe", "even", "a", "rate", "limiting", "notice", "instead", "of", "the", "usual", "json", "dictionary", "you", "can", "check", "that", "easily", "use", "something", "like", "curl", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "you", "should", "see", "JSON", "with", "a", "new", "authz", "and", "new", "cert", "key", "NUMBER", "Sorry", "for", "the", "late", "reply", "probably", "way", "too", "late", "but", "I", "didn", "t", "want", "to", "just", "silently", "close", "this", "issue", "NUMBER", "Alpine", "uses", "busybox", "for", "awk", "sed", "mktemp", "grep", "diff", "and", "everything", "else", "and", "those", "be", "all", "just", "implement", "with", "their", "very", "basic", "feature", "set", "which", "in", "some", "cases", "just", "isn", "t", "enough", "NUMBER", "If", "i", "remember", "correctly", "there", "be", "coreutils", "whatever", "package", "on", "alpine", "which", "should", "replace", "those", "busybox", "symlinks", "and", "with", "those", "everything", "should", "work", "normally", "NUMBER", "Could", "you", "run", "bash", "x", "NUMBER", "dehydrated", "c", "and", "post", "the", "last", "few", "lines", "Since", "IDNs", "be", "stored", "as", "punycode", "this", "shouldn", "t", "be", "a", "problem", "just", "enter", "the", "corresponding", "punycode", "domains", "in", "your", "config", "and", "you", "should", "be", "good", "to", "go", "NUMBER", "Using", "sudo", "do", "allow", "for", "a", "user", "switch", "without", "the", "need", "for", "a", "password", "if", "configured", "NUMBER", "Also", "the", "group", "option", "might", "be", "needed", "by", "some", "people", "NUMBER", "Nobody", "forces", "you", "to", "use", "the", "dehydrated", "integrated", "sudo", "operation", "you", "could", "always", "just", "use", "su", "yourself", "NUMBER", "Merged", "in", "e", "NUMBER", "e", "NUMBER", "c", "NUMBER", "ad", "NUMBER", "bd", "NUMBER", "af", "NUMBER", "c", "NUMBER", "f", "NUMBER", "b", "NUMBER", "baa", "NUMBER", "a", "NUMBER", "Thanks", "NUMBER", "Like", "txr", "NUMBER", "already", "said", "this", "should", "happen", "inside", "the", "deploy_challenge", "hook", "call", "NUMBER", "If", "you", "want", "to", "delay", "that", "you", "could", "always", "use", "HOOK_CHAIN", "for", "deploying", "the", "challenges", "and", "verifying", "all", "of", "them", "at", "once", "NUMBER", "Thanks", "for", "the", "suggestion", "anyway", "NUMBER", "Like", "jobe", "NUMBER", "said", "you", "can", "already", "extract", "that", "from", "the", "path", "and", "you", "could", "also", "just", "use", "the", "environment", "variable", "as", "it", "s", "export", "NUMBER", "This", "was", "fix", "in", "NUMBER", "Some", "DNS", "providers", "only", "allow", "a", "single", "TXT", "record", "per", "domain", "NUMBER", "This", "can", "currently", "result", "in", "problem", "when", "trying", "to", "use", "domain", "sets", "like", "example", "NUMBER", "org", "NUMBER", "example", "NUMBER", "org", "where", "two", "challenges", "be", "verify", "on", "the", "same", "domain", "NUMBER", "Read", "the", "troubleshooting", "guide", "LINK", "dns", "invalid", "challenge", "since", "dehydrated", "NUMBER", "why", "be", "dns", "challenges", "deployed", "first", "and", "verify", "later", "before", "commenting", "on", "this", "thread", "If", "and", "only", "if", "you", "be", "use", "one", "of", "those", "providers", "and", "there", "be", "no", "way", "to", "fix", "your", "hook", "script", "your", "DNS", "provider", "doesn", "t", "want", "to", "change", "their", "API", "and", "you", "can", "t", "easily", "change", "to", "a", "different", "DNS", "provider", "please", "leave", "a", "comment", "on", "this", "thread", "containing", "your", "DNS", "provider", "and", "a", "link", "to", "the", "API", "documentation", "so", "I", "can", "verify", "the", "issue", "NUMBER", "Please", "also", "check", "if", "somebody", "else", "already", "commented", "with", "that", "provider", "and", "in", "that", "case", "just", "give", "that", "post", "a", "thumbs", "up", "or", "something", "NUMBER", "This", "ticket", "be", "close", "intentionally", "as", "this", "be", "not", "really", "a", "dehydrated", "bug", "I", "just", "want", "to", "get", "some", "feedback", "Here", "we", "go", "again", "NUMBER", "please", "check", "for", "duplicate", "issue", "pull", "request", "in", "the", "future", "NUMBER", "Short", "explanation", "on", "why", "it", "be", "necessary", "to", "do", "it", "the", "way", "it", "currently", "be", "Wildcard", "domain", "validations", "together", "with", "their", "upper", "level", "domain", "will", "fail", "if", "do", "like", "this", "no", "way", "to", "tell", "which", "challenge", "be", "which", "and", "I", "don", "t", "want", "to", "maintain", "two", "different", "loops", "for", "non", "wildcard", "domains", "NUMBER", "My", "suggestion", "would", "be", "to", "look", "for", "a", "different", "DNS", "provider", "or", "better", "yet", "Talk", "to", "the", "DNS", "provider", "and", "explain", "to", "them", "that", "their", "API", "should", "be", "improved", "NUMBER", "There", "be", "lots", "of", "reasons", "why", "someone", "would", "want", "multiple", "TXT", "records", "NUMBER", "txr", "NUMBER", "sorry", "it", "was", "late", "at", "night", "and", "I", "was", "confused", "and", "a", "bit", "annoyed", "the", "real", "problem", "be", "dns", "caching", "on", "CA", "side", "NUMBER", "If", "I", "deploy", "one", "challenge", "after", "another", "the", "CA", "keep", "the", "old", "record", "up", "to", "NUMBER", "seconds", "in", "cache", "min", "NUMBER", "depending", "on", "your", "own", "dns", "ttl", "so", "if", "somebody", "would", "want", "to", "validate", "NUMBER", "example", "NUMBER", "org", "and", "example", "NUMBER", "org", "which", "both", "will", "be", "validated", "on", "example", "NUMBER", "org", "this", "would", "fail", "basically", "everytime", "in", "some", "cases", "maybe", "even", "if", "your", "ttl", "would", "be", "set", "to", "NUMBER", "I", "was", "thinking", "about", "change", "the", "behaviour", "depending", "on", "duplicate", "authorization", "names", "and", "with", "some", "delay", "options", "for", "dns", "caching", "but", "I", "d", "rather", "avoid", "it", "and", "up", "to", "now", "basically", "everybody", "who", "screamed", "change", "it", "back", "to", "the", "old", "way", "NUMBER", "just", "had", "to", "modify", "their", "hook", "script", "to", "get", "it", "back", "work", "NUMBER", "Duck", "DNS", "seems", "to", "me", "like", "a", "very", "odd", "provider", "but", "I", "guess", "if", "somebody", "would", "contact", "them", "and", "explain", "them", "the", "situation", "they", "d", "probably", "just", "implement", "multiple", "txt", "records", "NUMBER", "I", "add", "a", "section", "about", "this", "to", "the", "troubleshooting", "guide", "LINK", "dns", "invalid", "challenge", "since", "dehydrated", "NUMBER", "why", "be", "dns", "challenges", "deployed", "first", "and", "verify", "later", "and", "created", "a", "ticket", "thread", "LINK", "for", "a", "more", "centralized", "place", "for", "feedback", "about", "bad", "DNS", "provider", "APIs", "NUMBER", "This", "works", "as", "intended", "NUMBER", "Because", "of", "problem", "with", "wildcard", "validations", "there", "isn", "t", "really", "any", "choice", "but", "to", "deploy", "all", "tokens", "before", "doing", "anything", "else", "NUMBER", "Since", "I", "wanted", "to", "avoid", "having", "multiple", "different", "behaviours", "this", "now", "be", "the", "way", "it", "works", "NUMBER", "Hook", "Chaining", "be", "different", "in", "that", "it", "deploys", "all", "tokens", "in", "one", "hook", "call", "without", "chaining", "it", "s", "still", "one", "after", "another", "just", "the", "validation", "be", "delayed", "NUMBER", "I", "don", "t", "really", "have", "any", "experience", "with", "Netscaler", "but", "from", "a", "quick", "glance", "over", "your", "code", "you", "could", "just", "add", "multiple", "rules", "or", "maybe", "there", "be", "a", "way", "to", "set", "up", "a", "reverse", "proxy", "or", "something", "Otherwise", "you", "could", "maybe", "validate", "tokens", "over", "DNS", "NUMBER", "instead", "NUMBER", "This", "be", "an", "issue", "with", "your", "webserver", "probably", "Apache", "configuration", "not", "an", "issue", "with", "dehydrated", "NUMBER", "Fix", "your", "SSL", "redirect", "by", "add", "a", "to", "the", "end", "NUMBER", "tjharman", "don", "t", "worry", "I", "get", "use", "to", "this", "by", "now", "tjharman", "hehe", "apology", "accepted", "Duplicate", "of", "NUMBER", "and", "NUMBER", "Update", "and", "try", "again", "NUMBER", "This", "should", "be", "fix", "since", "over", "a", "month", "NUMBER", "geomunion", "can", "you", "give", "me", "some", "feedback", "after", "trying", "the", "current", "master", "version", "I", "m", "preparing", "a", "release", "with", "the", "fix", "and", "would", "like", "to", "know", "if", "it", "really", "works", "NUMBER", "yibfozzy", "just", "update", "that", "be", "already", "fix", "in", "the", "NUMBER", "release", "NUMBER", "yibfozzy", "oh", "wait", "it", "actually", "seems", "to", "be", "a", "completely", "different", "issue", "NUMBER", "be", "you", "use", "dns", "validation", "this", "seems", "like", "a", "dns", "ttl", "caching", "issue", "to", "me", "NUMBER", "Can", "you", "please", "update", "your", "version", "of", "dehydrated", "This", "really", "seems", "to", "be", "a", "duplicate", "of", "NUMBER", "and", "has", "be", "fix", "since", "over", "a", "month", "NUMBER", "jreinert", "can", "you", "give", "me", "some", "feedback", "after", "trying", "the", "current", "master", "version", "I", "m", "preparing", "a", "release", "with", "the", "fix", "and", "would", "like", "to", "know", "if", "it", "really", "works", "NUMBER", "Mh", "that", "be", "weird", "I", "never", "encountered", "that", "issue", "NUMBER", "A", "nonce", "timeout", "seems", "unlikely", "to", "me", "as", "dehydrated", "retrieves", "a", "nonce", "for", "every", "sign", "request", "and", "immediately", "uses", "it", "NUMBER", "If", "you", "encounter", "this", "issue", "often", "you", "could", "help", "me", "identify", "the", "issue", "by", "add", "an", "echo", "Nonce", "nonce", "NUMBER", "after", "the", "whole", "code", "block", "marked", "as", "Retrieve", "nonce", "from", "acme", "server", "NUMBER", "If", "it", "happens", "again", "compare", "the", "nonce", "to", "the", "previous", "work", "ones", "and", "see", "if", "it", "be", "somehow", "shorter", "or", "looks", "completely", "different", "has", "a", "special", "character", "the", "other", "nonces", "don", "t", "have", "whatever", "it", "could", "be", "NUMBER", "This", "be", "a", "really", "hard", "issue", "to", "debug", "NUMBER", "I", "m", "run", "dehydrated", "in", "a", "loop", "right", "now", "but", "I", "m", "not", "able", "to", "get", "it", "to", "fail", "even", "once", "NUMBER", "I", "ll", "try", "to", "implement", "retries", "use", "the", "nonce", "send", "back", "by", "the", "server", "but", "it", "s", "really", "really", "hard", "for", "me", "to", "test", "as", "I", "just", "can", "t", "get", "it", "to", "fail", "NUMBER", "CliffS", "legsak", "NUMBER", "mbo", "do", "you", "by", "any", "chance", "have", "multiple", "egress", "ip", "address", "or", "a", "dual", "stack", "ipv", "NUMBER", "ipv", "NUMBER", "setup", "can", "you", "verify", "if", "the", "issue", "goes", "away", "if", "you", "set", "IP_VERSION", "NUMBER", "in", "your", "config", "file", "legsak", "NUMBER", "mbo", "be", "you", "sure", "no", "NAT", "or", "something", "that", "could", "result", "in", "the", "request", "come", "from", "a", "different", "IP", "that", "s", "basically", "the", "only", "way", "I", "m", "able", "to", "reproduce", "this", "issue", "NUMBER", "legsak", "NUMBER", "mbo", "can", "you", "do", "a", "few", "curl", "LINK", "ipv", "NUMBER", "kurz", "NUMBER", "pw", "request", "and", "see", "if", "the", "result", "change", "between", "runs", "just", "to", "make", "sure", "NUMBER", "legsak", "NUMBER", "mbo", "yea", "NUMBER", "meh", "NUMBER", "in", "that", "case", "even", "retries", "wouldn", "t", "do", "you", "any", "good", "as", "it", "would", "be", "basically", "luck", "based", "if", "the", "request", "goes", "through", "cleanly", "NUMBER", "Since", "a", "recent", "commit", "dehydrated", "works", "fine", "with", "filesystem", "ACLs", "and", "those", "can", "be", "applied", "as", "defaults", "to", "a", "directory", "NUMBER", "Using", "those", "ACLs", "you", "can", "already", "pre", "define", "who", "should", "have", "access", "to", "the", "file", "while", "letting", "your", "main", "dehydrated", "user", "or", "root", "keep", "full", "control", "over", "the", "file", "NUMBER", "e", "NUMBER", "g", "NUMBER", "setfacl", "m", "u", "rwX", "g", "NUMBER", "o", "NUMBER", "m", "g", "dehydrated", "rX", "certs", "setfacl", "d", "m", "u", "rwX", "g", "NUMBER", "o", "NUMBER", "m", "g", "dehydrated", "rX", "certs", "would", "give", "every", "user", "in", "the", "dehydrated", "group", "read", "access", "to", "the", "certificates", "NUMBER", "You", "can", "also", "define", "multiple", "group", "and", "you", "can", "set", "defaults", "for", "certain", "certificate", "directory", "e", "NUMBER", "g", "NUMBER", "setfacl", "d", "m", "u", "rwX", "g", "NUMBER", "o", "NUMBER", "m", "g", "www", "data", "rX", "certs", "www", "NUMBER", "example", "NUMBER", "com", "So", "basically", "everything", "you", "need", "already", "exists", "and", "if", "you", "be", "use", "a", "filesystem", "that", "has", "no", "ACL", "support", "NUMBER", "well", "NUMBER", "use", "a", "hook", "script", "_", "\u30c4", "_", "Haha", "thanks", "but", "I", "actually", "wanted", "the", "logo", "to", "be", "like", "it", "currently", "be", "NUMBER", "It", "took", "too", "much", "space", "in", "the", "readme", "and", "I", "might", "actually", "remove", "the", "logo", "from", "there", "in", "the", "near", "future", "when", "the", "new", "website", "and", "documentation", "be", "finished", "NUMBER", "On", "the", "website", "will", "be", "a", "place", "for", "a", "higher", "resolution", "logo", "Sorry", "but", "real", "privilege", "separation", "in", "dehydrated", "be", "nothing", "I", "m", "planning", "to", "work", "on", "NUMBER", "Most", "of", "the", "tasks", "would", "probably", "work", "without", "any", "root", "access", "Writing", "certificate", "file", "Most", "services", "start", "as", "root", "anyway", "give", "only", "dehydrated", "access", "to", "the", "certificate", "folder", "the", "service", "will", "be", "able", "to", "read", "the", "file", "Restarting", "Reloading", "services", "At", "least", "systemd", "has", "policykit", "support", "for", "giving", "users", "access", "to", "certain", "systemctl", "controls", "without", "direct", "root", "access", "other", "init", "systems", "may", "have", "this", "as", "well", "never", "tried", "DNS", "hooks", "and", "serving", "of", "challenge", "file", "shouldn", "t", "be", "much", "of", "a", "problem", "as", "well", "For", "special", "cases", "you", "could", "always", "just", "use", "sudo", "in", "your", "hook", "script", "with", "special", "rules", "allowing", "only", "certain", "commands", "to", "be", "executed", "as", "root", "Thanks", "since", "this", "be", "so", "small", "I", "ll", "merge", "it", "with", "a", "few", "other", "minor", "change", "in", "a", "future", "commit", "NUMBER", "Your", "IPv", "NUMBER", "seems", "to", "be", "broken", "and", "the", "CA", "be", "run", "into", "a", "timeout", "trying", "to", "access", "your", "page", "NUMBER", "Whoopsie", "NUMBER", "Thanks", "Merged", "in", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "eb", "NUMBER", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "e", "NUMBER", "Sorry", "but", "this", "be", "not", "a", "dehydrated", "bug", "report", "so", "I", "m", "closing", "this", "NUMBER", "Your", "best", "bet", "would", "be", "to", "look", "around", "on", "the", "Let", "s", "Encrypt", "community", "forums", "other", "clients", "require", "very", "similar", "configuration", "so", "you", "might", "find", "some", "help", "over", "there", "NUMBER", "I", "recently", "restructured", "the", "loop", "because", "it", "left", "challenges", "in", "place", "after", "an", "invalid", "validation", "and", "I", "mistakenly", "add", "a", "check", "for", "dns", "NUMBER", "validations", "for", "the", "hook", "call", "NUMBER", "Removed", "that", "check", "and", "everything", "should", "be", "fine", "now", "NUMBER", "jobe", "NUMBER", "and", "then", "add", "a", "variable", "for", "a", "path", "to", "the", "sed", "binary", "and", "for", "awk", "and", "grep", "mktemp", "and", "diff", "would", "also", "be", "great", "NUMBER", "really", "i", "don", "t", "think", "this", "be", "necessary", "or", "even", "a", "good", "idea", "that", "s", "exactly", "what", "the", "PATH", "variable", "was", "designed", "to", "solve", "NUMBER", "openssl", "binary", "can", "be", "set", "mostly", "for", "compatibility", "with", "libressl", "but", "wouldn", "t", "even", "really", "be", "necessary", "I", "just", "won", "t", "revert", "it", "as", "it", "would", "break", "some", "exist", "setups", "NUMBER", "thegushi", "you", "have", "to", "make", "sure", "that", "your", "PATH", "variable", "be", "actually", "export", "otherwise", "dehydrated", "won", "t", "see", "or", "use", "it", "NUMBER", "If", "for", "whatever", "reason", "you", "be", "having", "problem", "with", "this", "you", "could", "in", "theory", "override", "either", "curl", "in", "your", "config", "something", "like", "curl", "usr", "bin", "curl", "or", "export", "a", "correct", "PATH", "variable", "in", "there", "it", "s", "just", "a", "shell", "script", "that", "be", "sourced", "by", "dehydrated", "Also", "isn", "t", "curl", "normally", "install", "under", "usr", "local", "bin", "on", "FreeBSD", "That", "isn", "t", "in", "your", "PATH", "that", "may", "be", "your", "problem", "NUMBER", "The", "privkey", "option", "was", "designed", "to", "allow", "use", "of", "an", "exist", "pre", "registered", "key", "there", "be", "no", "registration", "logic", "if", "a", "custom", "key", "be", "defined", "NUMBER", "Dehydrated", "fail", "when", "it", "try", "to", "receive", "additional", "information", "for", "the", "registered", "account", "for", "that", "key", "well", "because", "there", "be", "no", "account", "registered", "with", "that", "key", "NUMBER", "Not", "really", "a", "dehydrated", "bug", "but", "the", "error", "message", "may", "be", "a", "bit", "confusing", "NUMBER", "This", "actually", "seems", "more", "like", "a", "boulder", "bug", "NUMBER", "I", "ll", "investigate", "the", "error", "message", "a", "bit", "more", "and", "may", "open", "an", "issue", "with", "boulder", "NUMBER", "Well", "okay", "two", "things", "NUMBER", "I", "now", "allow", "the", "register", "command", "to", "also", "work", "with", "keys", "specified", "that", "way", "so", "now", "registering", "custom", "keys", "should", "work", "but", "what", "you", "be", "doing", "use", "privkey", "example", "NUMBER", "com", "NUMBER", "key", "be", "wrong", "that", "shouldn", "t", "be", "your", "domain", "key", "that", "should", "be", "an", "account", "key", "and", "usually", "wouldn", "t", "be", "needed", "to", "specify", "as", "dehydrated", "handles", "account", "management", "itself", "NUMBER", "NUMBER", "Any", "error", "message", "about", "ToS", "not", "be", "accepted", "actually", "seem", "to", "be", "a", "boulder", "issue", "because", "boulder", "doesn", "t", "implement", "the", "only", "return", "exist", "flag", "for", "account", "registration", "information", "NUMBER", "I", "won", "t", "change", "anything", "about", "this", "in", "dehydrated", "as", "it", "actually", "follows", "the", "protocol", "specification", "and", "the", "CA", "should", "return", "a", "different", "error", "in", "this", "case", "NUMBER", "cpu", "LINK", "divergences", "NUMBER", "md", "section", "NUMBER", "wasn", "t", "onlyReturnExisting", "acme", "v", "NUMBER", "and", "only", "return", "exist", "acme", "v", "NUMBER", "Or", "did", "I", "swap", "the", "two", "protocol", "version", "around", "in", "my", "code", "Or", "was", "it", "change", "between", "drafts", "I", "m", "not", "entirely", "sure", "I", "m", "always", "confused", "which", "document", "be", "for", "which", "API", "version", "see_no_evil", "Is", "there", "a", "link", "where", "I", "can", "always", "get", "the", "most", "recent", "version", "of", "v", "NUMBER", "v", "NUMBER", "specs", "cpu", "ok", "thanks", "I", "uhm", "fix", "that", "in", "ba", "NUMBER", "f", "NUMBER", "d", "NUMBER", "e", "NUMBER", "b", "NUMBER", "da", "NUMBER", "daacce", "NUMBER", "ca", "NUMBER", "f", "NUMBER", "c", "now", "seems", "to", "be", "work", "fine", "NUMBER", "This", "definitively", "be", "not", "a", "dehydrated", "bug", "NUMBER", "As", "jobe", "NUMBER", "said", "this", "be", "an", "issue", "with", "your", "DNS", "host", "or", "with", "Let", "s", "Encrypt", "s", "servers", "NUMBER", "If", "you", "don", "t", "think", "your", "dns", "host", "be", "at", "fault", "you", "can", "easily", "test", "that", "use", "something", "like", "dig", "caa", "yourdomain", "NUMBER", "tld", "you", "can", "ask", "the", "community", "or", "open", "an", "issue", "at", "LINK", "This", "non", "dehydrated", "issue", "has", "be", "report", "multiple", "times", "and", "generally", "just", "waiting", "some", "time", "especially", "hardcoded", "NUMBER", "minutes", "NUMBER", "be", "not", "a", "good", "idea", "NUMBER", "Your", "hook", "script", "should", "after", "deploying", "the", "challenge", "verify", "that", "all", "authoritative", "nameservers", "be", "serving", "the", "challenge", "NUMBER", "If", "waiting", "NUMBER", "minutes", "works", "for", "you", "fine", "go", "ahead", "and", "just", "add", "the", "sleep", "NUMBER", "to", "your", "hook", "script", "but", "this", "definitively", "doesn", "t", "belong", "into", "dehydrated", "NUMBER", "Closed", "NUMBER", "See", "NUMBER", "for", "details", "NUMBER", "I", "don", "t", "want", "to", "add", "this", "feature", "most", "software", "can", "handle", "separate", "file", "and", "I", "think", "that", "should", "be", "encourage", "NUMBER", "If", "you", "need", "something", "like", "this", "you", "can", "easily", "create", "a", "hookscript", "to", "cat", "those", "file", "together", "NUMBER", "Thanks", "for", "the", "suggestion", "anyway", "Duplicate", "of", "NUMBER", "Thanks", "for", "the", "suggestion", "anyway", "I", "ll", "be", "work", "on", "this", "very", "soon", "Dehydrated", "can", "t", "really", "do", "anything", "about", "this", "NUMBER", "The", "CA", "be", "trying", "to", "access", "your", "server", "and", "there", "be", "no", "options", "to", "be", "set", "NUMBER", "You", "probably", "have", "configured", "something", "wrong", "with", "your", "firewall", "NUMBER", "Please", "take", "a", "look", "at", "the", "documentation", "before", "open", "issue", "like", "this", "LINK", "verification", "NUMBER", "md", "JavaScriptDude", "There", "be", "an", "issue", "with", "both", "ways", "of", "deploying", "challenges", "NUMBER", "Deploying", "both", "at", "the", "same", "time", "could", "potentially", "be", "problematic", "with", "some", "APIs", "deploying", "one", "after", "another", "might", "result", "in", "cached", "DNS", "entries", "on", "ACME", "Server", "Side", "which", "would", "result", "in", "the", "second", "challenge", "to", "simply", "fail", "as", "it", "still", "sees", "only", "the", "first", "entry", "basically", "becoming", "an", "ugly", "race", "condition", "NUMBER", "So", "trying", "to", "get", "around", "one", "issue", "mostly", "the", "hook", "script", "not", "work", "correctly", "would", "just", "end", "up", "in", "the", "next", "issue", "cached", "dns", "entries", "on", "server", "side", "NUMBER", "Technically", "it", "shouldn", "t", "be", "a", "problem", "to", "have", "multiple", "records", "set", "NUMBER", "Up", "to", "now", "every", "ticket", "mail", "twitter", "and", "irc", "question", "similar", "to", "this", "could", "be", "solve", "by", "just", "patching", "the", "hook", "script", "and", "this", "one", "seems", "to", "be", "exactly", "the", "same", "NUMBER", "Introducing", "a", "different", "behaviors", "with", "a", "config", "option", "or", "whatever", "would", "just", "end", "up", "with", "people", "tinkering", "around", "until", "it", "somehow", "works", "and", "then", "creating", "a", "ticket", "here", "NUMBER", "days", "later", "when", "their", "certificate", "be", "going", "to", "be", "renewed", "but", "everything", "fail", "since", "it", "was", "never", "set", "up", "correctly", "to", "begin", "with", "NUMBER", "Unless", "somebody", "comes", "up", "with", "an", "unavoidable", "scenario", "which", "_really_", "requires", "the", "different", "behavior", "I", "don", "t", "want", "to", "implement", "that", "again", "this", "was", "actually", "the", "old", "behavior", "until", "the", "caching", "issue", "became", "obvious", "NUMBER", "About", "the", "last", "part", "with", "the", "dangerous", "delete", "option", "NUMBER", "May", "I", "suggest", "to", "simply", "use", "the", "original", "erroneous", "replacement", "function", "and", "instead", "of", "deleting", "the", "TXT", "record", "replace", "it", "with", "a", "dummy", "record", "I", "d", "suggest", "setting", "it", "to", "dehydrated", "was", "here", "smirk", "Of", "course", "only", "do", "this", "if", "the", "deletion", "really", "be", "that", "problematic", "I", "don", "t", "know", "their", "API", "NUMBER", "Well", "that", "isn", "t", "something", "I", "can", "really", "help", "you", "with", "sorry", "NUMBER", "Maybe", "you", "can", "find", "a", "DNS", "service", "which", "support", "aliases", "like", "_acme", "challenge", "NUMBER", "NUMBER", "example", "NUMBER", "net", "or", "create", "yourself", "a", "more", "trusted", "gateway", "API", "for", "your", "DNS", "setup", "that", "has", "whitelists", "for", "_acme", "challenge", "subdomains", "that", "s", "what", "I", "m", "going", "to", "do", "for", "my", "systems", "but", "otherwise", "I", "don", "t", "really", "know", "how", "to", "solve", "this", "NUMBER", "About", "the", "last", "paragraph", "Well", "at", "least", "with", "dns", "NUMBER", "this", "probably", "will", "never", "change", "NUMBER", "Think", "about", "delegated", "subdomains", "e", "NUMBER", "g", "NUMBER", "customer", "NUMBER", "example", "NUMBER", "com", "could", "be", "under", "control", "by", "a", "customer", "who", "wants", "to", "get", "a", "SSL", "certificate", "but", "has", "absolutely", "no", "control", "over", "_acme", "challenge", "NUMBER", "example", "NUMBER", "com", "NUMBER", "Changing", "this", "would", "break", "exist", "behaviour", "that", "would", "be", "really", "bad", "NUMBER", "Maybe", "this", "will", "change", "in", "the", "future", "with", "something", "like", "dns", "NUMBER", "validation", "but", "I", "don", "t", "really", "think", "so", "NUMBER", "You", "be", "supposed", "to", "prove", "that", "you", "be", "controlling", "DNS", "so", "prove", "it", "Also", "if", "you", "be", "use", "ftp", "NUMBER", "to", "ftp", "NUMBER", "subdomains", "you", "could", "still", "use", "http", "based", "validation", "or", "use", "a", "wildcard", "certificate", "Out", "of", "interest", "I", "just", "googled", "when", "pipefail", "was", "introduce", "NUMBER", "It", "seems", "it", "was", "introduce", "with", "bash", "version", "NUMBER", "which", "was", "release", "July", "NUMBER", "Wow", "NUMBER", "But", "okay", "you", "be", "run", "a", "powerpc", "setup", "so", "I", "guess", "it", "s", "quite", "an", "old", "OS", "X", "version", "NUMBER", "Installing", "bash", "from", "brew", "or", "ports", "definitively", "be", "the", "best", "solution", "for", "this", "but", "I", "m", "kinda", "wondering", "if", "the", "pre", "install", "zsh", "would", "work", "with", "dehydrated", "NUMBER", "mhm", "NUMBER", "Mhm", "do", "you", "have", "a", "config", "file", "in", "that", "certificate", "directory", "and", "be", "there", "the", "slightest", "possibility", "that", "dehydrated", "was", "somehow", "executed", "inside", "of", "that", "directory", "accounts", "gets", "appended", "to", "BASEDIR", "which", "normally", "comes", "from", "the", "config", "location", "which", "if", "there", "be", "nothing", "in", "etc", "dehydrated", "and", "usr", "local", "etc", "dehydrated", "will", "be", "the", "current", "work", "directory", "But", "if", "that", "happened", "it", "shouldn", "t", "have", "continued", "as", "it", "would", "basically", "have", "use", "a", "broken", "config", "and", "or", "an", "empty", "accounts", "directory", "NUMBER", "but", "there", "be", "no", "other", "way", "the", "word", "accounts", "doesn", "t", "occur", "anywhere", "else", "in", "the", "script", "and", "ACCOUNTDIR", "be", "only", "really", "use", "in", "the", "beginning", "of", "the", "script", "NUMBER", "I", "m", "closing", "this", "for", "now", "as", "I", "can", "t", "reproduce", "this", "other", "than", "by", "run", "dehydrated", "directly", "in", "a", "certificate", "directory", "any", "possibility", "that", "your", "hook", "script", "somehow", "run", "dehydrated", "NUMBER", "I", "might", "change", "the", "preferred", "name", "for", "that", "config", "file", "in", "the", "future", "so", "dehydrated", "doesn", "t", "ever", "get", "confused", "by", "this", "NUMBER", "merge", "Currently", "dehydrated", "has", "very", "rudimentary", "JSON", "parsing", "which", "often", "results", "in", "issue", "with", "similarly", "named", "values", "like", "the", "recent", "NUMBER", "where", "dehydrated", "use", "the", "url", "string", "from", "a", "sub", "dictionary", "instead", "of", "the", "root", "NUMBER", "All", "JSON", "parsing", "should", "be", "replaced", "by", "something", "that", "actually", "understands", "the", "JSON", "structure", "instead", "of", "greping", "for", "values", "inside", "of", "it", "NUMBER", "I", "had", "a", "look", "at", "JSON", "NUMBER", "sh", "which", "looks", "promising", "and", "I", "actually", "start", "stripping", "it", "down", "to", "only", "the", "required", "functionality", "and", "make", "it", "compatible", "with", "all", "the", "bash", "zsh", "options", "set", "in", "dehydrated", "NUMBER", "I", "also", "looked", "at", "some", "other", "libraries", "which", "use", "awk", "or", "sed", "for", "the", "parsing", "but", "those", "seem", "to", "be", "problematic", "on", "BSD", "and", "older", "GNU", "Lunix", "systems", "NUMBER", "So", "for", "now", "I", "m", "planning", "on", "integrating", "JSON", "NUMBER", "sh", "but", "if", "anybody", "knows", "about", "similar", "projects", "feel", "free", "to", "comment", "NUMBER", "This", "be", "really", "weird", "NUMBER", "dehydrated", "shouldn", "t", "try", "to", "access", "the", "LINK", "know", "NUMBER", "URL", "itself", "especially", "not", "with", "a", "post", "request", "NUMBER", "The", "only", "way", "I", "see", "this", "would", "be", "possible", "be", "if", "challenge_uris", "somehow", "contains", "that", "url", "NUMBER", "which", "would", "be", "really", "weird", "NUMBER", "Can", "you", "please", "modify", "the", "code", "a", "bit", "and", "show", "me", "the", "result", "bash", "Gather", "challenge", "information", "echo", "challenge", "TAG", "var", "log", "dehydrated", "dehydrated", "NUMBER", "log", "NUMBER", "NUMBER", "TB", "NUMBER", "please", "just", "run", "it", "exactly", "like", "this", "bash", "x", "opt", "dehydrated", "dehydrated", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "your", "output", "be", "unusable", "since", "you", "be", "passing", "your", "actual", "command", "as", "parameter", "which", "makes", "no", "sense", "Hu", "that", "looks", "really", "weird", "NUMBER", "Can", "you", "look", "for", "this", "section", "in", "the", "code", "end", "of", "http_request", "method", "NUMBER", "if", "true", "NUMBER", "NUMBER", "dev", "null", "then", "cat", "tempheaders", "NUMBER", "fi", "cat", "tempcont", "rm", "f", "tempcont", "rm", "f", "tempheaders", "NUMBER", "and", "add", "some", "debug", "code", "like", "this", "NUMBER", "echo", "checking", "pipe", "NUMBER", "NUMBER", "if", "true", "NUMBER", "NUMBER", "dev", "null", "then", "echo", "use", "pipe", "NUMBER", "NUMBER", "cat", "tempheaders", "NUMBER", "fi", "echo", "get", "curl", "output", "NUMBER", "cat", "tempcont", "echo", "deleting", "temp", "file", "NUMBER", "rm", "f", "tempcont", "rm", "f", "tempheaders", "NUMBER", "and", "tell", "me", "what", "the", "result", "be", "Also", "the", "output", "of", "dehydrated", "version", "would", "be", "helpful", "NUMBER", "My", "best", "guess", "be", "that", "somehow", "filedescriptor", "NUMBER", "be", "open", "when", "the", "script", "starts", "and", "close", "on", "first", "operation", "which", "would", "be", "the", "check", "if", "it", "s", "open", "NUMBER", "Could", "you", "try", "placing", "something", "like", "true", "NUMBER", "NUMBER", "dev", "null", "true", "right", "at", "the", "beginning", "of", "the", "script", "above", "set", "e", "and", "see", "if", "that", "change", "anything", "Can", "you", "try", "add", "NUMBER", "Close", "weird", "external", "file", "descriptors", "exec", "NUMBER", "exec", "NUMBER", "NUMBER", "above", "set", "e", "and", "see", "if", "that", "change", "anything", "Merged", "into", "master", "will", "be", "in", "the", "next", "release", "unless", "somebody", "screams", "that", "this", "breaks", "lots", "of", "other", "stuff", "_", "\u30c4", "_", "Please", "have", "a", "look", "at", "the", "documentation", "LINK", "verification", "NUMBER", "md", "and", "or", "search", "for", "exist", "tutorials", "on", "the", "web", "NUMBER", "Basically", "instead", "of", "uploading", "copying", "a", "file", "to", "a", "webserver", "there", "be", "certain", "DNS", "entries", "that", "have", "to", "be", "set", "for", "validation", "NUMBER", "Falseee", "you", "ll", "need", "to", "use", "a", "hook", "script", "and", "an", "api", "provide", "by", "your", "dns", "provider", "if", "there", "be", "any", "there", "be", "also", "ways", "to", "do", "this", "by", "hand", "and", "there", "be", "ton", "of", "examples", "and", "tutorials", "over", "in", "the", "wiki", "LINK", "for", "DNS", "NUMBER", "hooks", "Yea", "like", "txr", "NUMBER", "said", "this", "be", "an", "issue", "with", "the", "dns", "hook", "script", "for", "hook", "chaining", "with", "certificates", "like", "example", "NUMBER", "com", "NUMBER", "example", "NUMBER", "com", "you", "ll", "need", "to", "have", "multiple", "txt", "records", "with", "corresponding", "challenge", "tokens", "on", "the", "same", "domain", "at", "the", "same", "time", "NUMBER", "Without", "chaining", "it", "would", "in", "theory", "work", "but", "keep", "in", "mind", "that", "Let", "s", "Encrypt", "caches", "DNS", "entries", "for", "up", "to", "NUMBER", "minutes", "so", "you", "may", "run", "into", "validation", "issue", "NUMBER", "After", "validating", "one", "of", "the", "two", "names", "it", "doesn", "t", "need", "to", "be", "validated", "again", "so", "only", "the", "second", "one", "gets", "validated", "and", "since", "now", "there", "be", "only", "one", "record", "it", "will", "obviously", "succeed", "NUMBER", "Best", "way", "be", "to", "just", "improve", "the", "dns", "hook", "script", "NUMBER", "bviktor", "things", "can", "get", "a", "bit", "confusing", "with", "two", "authorizations", "having", "the", "same", "human", "readable", "name", "combined", "with", "dns", "caching", "and", "other", "stuff", "Your", "zone", "should", "look", "something", "like", "this", "after", "all", "challenges", "have", "be", "deployed", "_acme", "challenge", "NUMBER", "example", "NUMBER", "com", "NUMBER", "NUMBER", "TXT", "foo", "_acme", "challenge", "NUMBER", "example", "NUMBER", "com", "NUMBER", "NUMBER", "TXT", "bar", "Without", "hook", "chaining", "the", "process", "should", "look", "something", "like", "this", "INFO", "Using", "main", "config", "file", "etc", "dehydrated", "config", "v", "NUMBER", "HOOK", "this_hookscript_is_broken__dehydrated_is_working_fine__please_ignore_unknown_hooks_in_your_script", "HOOK", "startup_hook", "Processing", "dehydrated", "NUMBER", "de", "with", "alternative", "names", "NUMBER", "dehydrated", "NUMBER", "de", "Creating", "new", "directory", "etc", "dehydrated", "certs", "dehydrated", "NUMBER", "de", "NUMBER", "HOOK", "this_hookscript_is_broken__dehydrated_is_working_fine__please_ignore_unknown_hooks_in_your_script", "HOOK", "generate_csr", "dehydrated", "NUMBER", "de", "etc", "dehydrated", "certs", "dehydrated", "NUMBER", "de", "dehydrated", "NUMBER", "de", "NUMBER", "dehydrated", "NUMBER", "de", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Received", "NUMBER", "authorizations", "URLs", "from", "the", "CA", "Handling", "authorization", "for", "dehydrated", "NUMBER", "de", "Handling", "authorization", "for", "dehydrated", "NUMBER", "de", "NUMBER", "pending", "challenge", "s", "Deploying", "challenge", "tokens", "NUMBER", "HOOK", "deploy_challenge", "dehydrated", "NUMBER", "de", "x", "NUMBER", "y", "NUMBER", "HOOK_LOG", "Deploying", "challenge", "token", "for", "dehydrated", "NUMBER", "de", "NUMBER", "HOOK", "deploy_challenge", "dehydrated", "NUMBER", "de", "x", "NUMBER", "y", "NUMBER", "HOOK_LOG", "Deploying", "challenge", "token", "for", "dehydrated", "NUMBER", "de", "NUMBER", "Responding", "to", "challenge", "for", "dehydrated", "NUMBER", "de", "authorization", "NUMBER", "HOOK", "clean_challenge", "dehydrated", "NUMBER", "de", "x", "NUMBER", "y", "NUMBER", "HOOK_LOG", "Removing", "challenge", "token", "on", "dehydrated", "NUMBER", "de", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "dehydrated", "NUMBER", "de", "authorization", "NUMBER", "HOOK", "clean_challenge", "dehydrated", "NUMBER", "de", "x", "NUMBER", "y", "NUMBER", "HOOK_LOG", "Removing", "challenge", "token", "on", "dehydrated", "NUMBER", "de", "NUMBER", "Challenge", "be", "valid", "Requesting", "certificate", "NUMBER", "Checking", "certificate", "NUMBER", "Done", "Creating", "fullchain", "NUMBER", "pem", "NUMBER", "Using", "cached", "chain", "HOOK", "deploy_cert", "dehydrated", "NUMBER", "de", "etc", "dehydrated", "certs", "dehydrated", "NUMBER", "de", "privkey", "NUMBER", "pem", "etc", "dehydrated", "certs", "dehydrated", "NUMBER", "de", "cert", "NUMBER", "pem", "etc", "dehydrated", "certs", "dehydrated", "NUMBER", "de", "fullchain", "NUMBER", "pem", "etc", "dehydrated", "certs", "dehydrated", "NUMBER", "de", "chain", "NUMBER", "pem", "NUMBER", "Done", "Updating", "OCSP", "stapling", "file", "HOOK", "exit_hook", "bviktor", "dehydrated", "has", "a", "mode", "where", "it", "basically", "puts", "everything", "that", "has", "to", "be", "deployed", "to", "dns", "for", "a", "single", "certificate", "into", "a", "single", "hook", "call", "see", "LINK", "_chain", "NUMBER", "md", "NUMBER", "It", "s", "especially", "useful", "for", "people", "with", "lots", "of", "domains", "but", "it", "could", "also", "make", "logic", "for", "a", "hook", "a", "bit", "easier", "deploy", "everything", "delete", "verything", "instead", "of", "deploying", "and", "remove", "one", "by", "one", "Do", "you", "mean", "for", "wildcard", "certificates", "Have", "a", "look", "at", "LINK", "certificate", "config", "NUMBER", "md", "no", "need", "to", "switch", "to", "dns", "NUMBER", "globally", "NUMBER", "I", "took", "a", "quick", "glance", "at", "your", "change", "looks", "good", "and", "I", "ll", "probably", "merge", "it", "later", "today", "or", "tomorrow", "NUMBER", "Better", "documentation", "be", "something", "I", "m", "going", "to", "be", "work", "on", "a", "lot", "more", "in", "the", "near", "ish", "future", "wink", "Thanks", "I", "merge", "your", "change", "in", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "e", "NUMBER", "d", "NUMBER", "fa", "NUMBER", "ff", "NUMBER", "bea", "NUMBER", "NUMBER", "Whoopsie", "NUMBER", "The", "easiest", "solution", "for", "this", "would", "be", "to", "just", "completely", "ignore", "the", "old", "chain", "NUMBER", "pem", "and", "just", "write", "the", "certificate", "directly", "to", "fullchain", "NUMBER", "pem", "but", "that", "may", "break", "some", "setups", "NUMBER", "I", "ll", "need", "to", "figure", "out", "how", "to", "extract", "just", "issuer", "certificates", "from", "a", "file", "with", "multiple", "certificates", "NUMBER", "I", "guess", "since", "they", "be", "in", "order", "I", "could", "just", "sed", "and", "grep", "my", "way", "to", "those", "certificates", "but", "do", "anybody", "know", "a", "cleaner", "way", "Should", "be", "fix", "with", "NUMBER", "cf", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "afae", "NUMBER", "bd", "NUMBER", "f", "thanks", "for", "report", "this", "issue", "NUMBER", "As", "jobe", "NUMBER", "said", "Let", "s", "Encrypt", "strips", "those", "parameters", "only", "CN", "will", "be", "set", "NUMBER", "Reason", "be", "that", "only", "the", "domain", "be", "validated", "the", "CAs", "don", "t", "want", "to", "sign", "any", "other", "unvalidated", "information", "like", "an", "organizations", "name", "NUMBER", "nova", "NUMBER", "like", "i", "said", "Reason", "be", "that", "only", "the", "domain", "be", "validated", "the", "CAs", "don", "t", "want", "to", "sign", "any", "other", "unvalidated", "information", "like", "an", "organizations", "name", "NUMBER", "It", "would", "be", "great", "if", "dehydrated", "would", "ideally", "by", "default", "allow", "for", "a", "multi", "cert", "configuration", "with", "RSA", "and", "elliptic", "curves", "like", "suggested", "in", "the", "Let", "s", "Encryption", "Integration", "Guide", "LINK", "guide", "NUMBER", "This", "would", "allow", "for", "modern", "and", "fast", "cryptography", "with", "a", "fallback", "for", "older", "clients", "NUMBER", "This", "would", "basically", "affect", "the", "sign_domain", "and", "command_sign_domain", "function", "a", "few", "filenames", "would", "change", "but", "backwards", "compatibility", "will", "be", "a", "priority", "NUMBER", "I", "think", "the", "ideal", "output", "would", "be", "a", "directory", "structure", "like", "this", "certs", "example", "NUMBER", "com", "cert", "NUMBER", "rsa", "NUMBER", "pem", "cert", "NUMBER", "rsa", "NUMBER", "pem", "certs", "example", "NUMBER", "com", "fullchain", "NUMBER", "rsa", "NUMBER", "pem", "fullchain", "NUMBER", "rsa", "NUMBER", "pem", "NUMBER", "certs", "example", "NUMBER", "com", "cert", "NUMBER", "secp", "NUMBER", "r", "NUMBER", "pem", "cert", "NUMBER", "secp", "NUMBER", "r", "NUMBER", "pem", "certs", "example", "NUMBER", "com", "fullchain", "NUMBER", "secp", "NUMBER", "r", "NUMBER", "pem", "fullchain", "NUMBER", "secp", "NUMBER", "r", "NUMBER", "pem", "NUMBER", "certs", "example", "NUMBER", "com", "cert", "NUMBER", "pem", "cert", "NUMBER", "rsa", "NUMBER", "pem", "certs", "example", "NUMBER", "com", "fullchain", "NUMBER", "pem", "fullchain", "NUMBER", "rsa", "NUMBER", "pem", "I", "m", "thinking", "about", "having", "the", "config", "look", "something", "like", "this", "KEY_ALGO", "rsa", "secp", "NUMBER", "r", "NUMBER", "The", "main", "symlinks", "like", "fullchain", "NUMBER", "pem", "would", "point", "to", "the", "first", "given", "algorithm", "which", "will", "make", "the", "new", "scheme", "fully", "compatible", "with", "the", "old", "one", "where", "only", "one", "was", "set", "default", "be", "rsa", "NUMBER", "The", "certificates", "will", "be", "generate", "fully", "independent", "of", "each", "other", "but", "double", "authorization", "of", "domains", "shouldn", "t", "be", "required", "as", "the", "authorizations", "be", "cached", "by", "the", "CA", "so", "this", "wouldn", "t", "really", "make", "the", "script", "much", "slower", "and", "for", "bigger", "setups", "there", "always", "will", "be", "the", "option", "to", "just", "choose", "an", "algorithm", "by", "setting", "the", "config", "variable", "NUMBER", "twrist", "great", "to", "hear", "that", "people", "be", "actually", "use", "setups", "like", "this", "NUMBER", "do", "haproxy", "really", "need", "those", "file", "endings", "or", "be", "they", "configurable", "Set", "default", "config", "variables", "according", "to", "new", "acme", "endpoint", "address", "when", "it", "becomes", "available", "NUMBER", "Done", "in", "master", "Release", "v", "NUMBER", "will", "follow", "very", "soon", "Yea", "dehydrated", "doesn", "t", "control", "any", "ports", "I", "didn", "t", "even", "know", "that", "something", "be", "use", "port", "NUMBER", "_", "\u30c4", "_", "LE", "had", "problem", "for", "a", "while", "Internal", "Server", "Error", "be", "never", "a", "dehydrated", "issue", "thanks", "for", "report", "anyway", "NUMBER", "This", "issue", "be", "kinda", "resolve", "and", "or", "not", "really", "dehydrated", "specific", "NUMBER", "I", "opened", "NUMBER", "for", "a", "better", "approach", "of", "dealing", "with", "issue", "like", "this", "NUMBER", "cpu", "thanks", "i", "created", "NUMBER", "and", "will", "probably", "implement", "this", "behaviour", "for", "the", "NUMBER", "release", "It", "s", "fix", "now", "thank", "you", "NUMBER", "Domain", "was", "miss", "in", "my", "cronjob", "Thanks", "this", "should", "be", "fix", "with", "the", "commit", "mention", "above", "NUMBER", "Dehydrated", "be", "constantly", "extend", "with", "new", "hook", "calls", "and", "exist", "hook", "scripts", "constantly", "break", "and", "I", "get", "tons", "of", "bug", "report", "that", "dehydrated", "be", "broken", "while", "it", "s", "actually", "just", "the", "hook", "script", "that", "breaks", "everything", "NUMBER", "Hook", "scripts", "should", "just", "ignore", "unknown", "hooks", "that", "s", "why", "this", "hook", "breaker", "has", "be", "implement", "NUMBER", "It", "should", "make", "it", "clear", "to", "hook", "script", "authors", "to", "simply", "please_ignore_unknown_hooks", "to", "be", "compatible", "with", "future", "dehydrated", "version", "NUMBER", "If", "you", "be", "use", "somebody", "elses", "hook", "script", "please", "contact", "them", "to", "ignore", "all", "unknown", "hook", "calls", "NUMBER", "If", "this", "be", "your", "script", "please", "make", "sure", "that", "you", "ignore", "unknown", "hooks", "NUMBER", "See", "the", "example", "hook", "for", "an", "example", "implementation", "on", "how", "to", "ignore", "unknown", "hook", "calls", "LINK", "L", "NUMBER", "L", "NUMBER", "Are", "you", "use", "the", "newest", "version", "from", "git", "This", "should", "already", "be", "fix", "since", "NUMBER", "a", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "ccc", "NUMBER", "e", "NUMBER", "abca", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "de", "NUMBER", "e", "NUMBER", "c", "NUMBER", "Edit", "dehydrated", "NUMBER", "will", "be", "release", "in", "the", "next", "few", "days", "and", "will", "include", "this", "fix", "Wildcard", "certificates", "be", "validated", "at", "the", "upper", "level", "of", "domain", "e", "NUMBER", "g", "NUMBER", "NUMBER", "example", "NUMBER", "com", "validates", "at", "example", "NUMBER", "com", "NUMBER", "You", "can", "see", "that", "the", "script", "be", "actually", "trying", "to", "handle", "two", "authorizations", "for", "example", "NUMBER", "com", "one", "be", "for", "the", "wildcard", "certificate", "the", "other", "for", "the", "normal", "domain", "and", "there", "be", "no", "way", "for", "dehydrated", "to", "know", "which", "one", "be", "which", "NUMBER", "The", "corresponding", "tokens", "have", "to", "be", "in", "your", "DNS", "zone", "at", "the", "same", "time", "or", "possibly", "one", "after", "another", "with", "very", "short", "TTLs", "or", "a", "NUMBER", "minute", "delay", "in", "the", "hook", "script", "otherwise", "you", "ll", "have", "DNS", "caching", "issue", "NUMBER", "My", "best", "guess", "would", "be", "that", "your", "hook", "script", "be", "replacing", "the", "TXT", "record", "instead", "of", "appending", "new", "ones", "this", "will", "result", "in", "a", "miss", "token", "NUMBER", "It", "s", "confusing", "but", "there", "isn", "t", "really", "a", "good", "way", "around", "this", "neither", "from", "the", "CA", "standpoint", "nor", "inside", "dehydrated", "NUMBER", "Well", "NUMBER", "the", "reason", "be", "as", "follows", "\u039e", "curl", "LINK", "staging", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "A", "curl", "NUMBER", "dehydrated", "NUMBER", "TAG", "TAG", "TAG", "Access", "Denied", "TAG", "But", "NUMBER", "\u039e", "curl", "LINK", "staging", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "A", "curl", "NUMBER", "dehyd", "NUMBER", "NUMBER", "vyBT", "NUMBER", "DoJ", "NUMBER", "E", "LINK", "random", "entries", "to", "the", "directory", "NUMBER", "keyChange", "LINK", "staging", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "key", "change", "meta", "I", "m", "not", "sure", "what", "s", "going", "on", "there", "but", "it", "seems", "that", "hydra", "be", "somehow", "blacklisted", "in", "the", "WAF", "NUMBER", "So", "I", "can", "t", "possible", "include", "the", "name", "of", "my", "client", "without", "everything", "breaking", "I", "add", "a", "temporary", "user", "agent", "with", "letter", "replacement", "NUMBER", "bbb", "NUMBER", "e", "NUMBER", "d", "NUMBER", "fb", "NUMBER", "f", "NUMBER", "b", "NUMBER", "d", "NUMBER", "a", "NUMBER", "aaea", "NUMBER", "NUMBER", "I", "guess", "this", "makes", "dehydr", "NUMBER", "ted", "the", "most", "NUMBER", "client", "option", "available", "NUMBER", "cpu", "any", "update", "on", "this", "cpu", "Mh", "I", "just", "checked", "it", "works", "for", "the", "ACMEv", "NUMBER", "staging", "environment", "but", "not", "for", "production", "and", "the", "old", "staging", "environment", "cpu", "Is", "this", "something", "Akamai", "has", "in", "their", "default", "blacklist", "If", "that", "s", "the", "case", "I", "guess", "it", "would", "be", "better", "to", "just", "stay", "with", "the", "NUMBER", "spelling", "NUMBER", "It", "would", "be", "really", "bad", "if", "in", "the", "future", "somebody", "re", "enable", "a", "default", "blacklist", "and", "slightly", "outdate", "dehydrated", "version", "cough", "debian", "sta", "b", "le", "cough", "would", "stop", "work", "NUMBER", "cpu", "btw", "NUMBER", "i", "m", "guessing", "you", "be", "generating", "some", "kind", "of", "internal", "stats", "over", "those", "user", "agents", "will", "those", "ever", "be", "publish", "i", "d", "be", "really", "interested", "in", "having", "a", "good", "idea", "about", "how", "many", "people", "actually", "use", "dehydrated", "for", "their", "certificates", "smile", "cpu", "I", "checked", "again", "and", "it", "seems", "to", "be", "work", "on", "all", "environments", "now", "un", "NUMBER", "ed", "in", "NUMBER", "a", "NUMBER", "aa", "NUMBER", "c", "NUMBER", "a", "NUMBER", "ba", "NUMBER", "f", "NUMBER", "a", "NUMBER", "c", "NUMBER", "db", "NUMBER", "e", "NUMBER", "c", "NUMBER", "thanks", "Thx", "merge", "in", "a", "NUMBER", "a", "NUMBER", "ad", "NUMBER", "f", "NUMBER", "fd", "NUMBER", "bc", "NUMBER", "fafec", "NUMBER", "cea", "NUMBER", "Currently", "certificates", "which", "have", "a", "wildcard", "domains", "as", "CN", "and", "no", "defined", "alias", "will", "be", "stored", "in", "NUMBER", "example", "NUMBER", "com", "directories", "NUMBER", "This", "should", "work", "fine", "under", "any", "nix", "system", "but", "might", "be", "error", "prone", "when", "use", "by", "hook", "scripts", "or", "especially", "when", "typed", "on", "the", "shell", "imagine", "something", "like", "rm", "r", "certs", "NUMBER", "example", "NUMBER", "com", "which", "will", "erase", "all", "certificates", "for", "example", "NUMBER", "com", "subdomains", "not", "just", "the", "wildcard", "certificate", "NUMBER", "A", "solution", "I", "have", "in", "mind", "would", "be", "to", "store", "NUMBER", "example", "NUMBER", "com", "as", "wildcard_example", "NUMBER", "com", "NUMBER", "Since", "_", "be", "not", "part", "of", "a", "valid", "hostname", "this", "should", "not", "conflict", "with", "any", "possible", "domain", "NUMBER", "An", "alternative", "would", "be", "to", "just", "fail", "and", "ask", "the", "user", "to", "set", "an", "alias", "for", "the", "certificate", "NUMBER", "This", "would", "have", "the", "add", "benefit", "of", "having", "a", "possible", "way", "about", "warning", "users", "not", "to", "over", "use", "wildcard", "certificates", "and", "they", "d", "know", "exactly", "where", "their", "new", "certificates", "would", "be", "stored", "NUMBER", "I", "d", "love", "to", "know", "how", "certbot", "be", "going", "to", "tackle", "this", "NUMBER", "The", "original", "naming", "scheme", "was", "basically", "copied", "from", "certbot", "and", "it", "would", "be", "great", "to", "keep", "some", "compatibility", "if", "their", "solution", "seems", "nice", "NUMBER", "Does", "anybody", "know", "something", "about", "that", "Otherwise", "I", "think", "I", "ll", "just", "be", "going", "with", "the", "alias", "route", "NUMBER", "I", "ll", "decide", "in", "the", "following", "days", "when", "I", "have", "time", "to", "continue", "work", "on", "the", "change", "for", "the", "next", "release", "NUMBER", "bmw", "mhm", "NUMBER", "i", "don", "t", "like", "that", "NUMBER", "for", "most", "of", "my", "own", "use", "cases", "i", "d", "like", "to", "have", "separate", "certificates", "for", "the", "subdomains", "and", "the", "main", "domain", "so", "having", "it", "remap", "on", "the", "main", "domain", "will", "be", "a", "conflict", "NUMBER", "but", "thanks", "for", "the", "insight", "NUMBER", "I", "ll", "go", "with", "the", "alias", "easiest", "solution", "_", "\u30c4", "_", "This", "be", "not", "an", "issue", "with", "dehydrated", "just", "an", "issue", "with", "your", "logging", "setup", "NUMBER", "You", "can", "easily", "pipe", "dehydrated", "output", "to", "something", "like", "logger", "to", "set", "a", "syslog", "facility", "or", "instead", "of", "a", "simple", "cronjob", "use", "a", "systemd", "service", "and", "timer", "which", "will", "take", "care", "of", "usable", "logging", "by", "default", "NUMBER", "Sorry", "but", "for", "that", "I", "d", "need", "to", "prefix", "basically", "any", "line", "of", "log", "output", "from", "dehydrated", "with", "its", "name", "NUMBER", "Just", "add", "the", "prefix", "to", "the", "last", "error", "would", "be", "very", "inconsistent", "and", "you", "d", "have", "thousands", "of", "lines", "of", "log", "with", "warnings", "and", "basic", "information", "without", "knowing", "where", "they", "be", "come", "from", "NUMBER", "Name", "just", "one", "widespread", "tool", "that", "do", "that", "and", "I", "might", "consider", "add", "an", "option", "for", "that", "NUMBER", "You", "be", "setting", "dehydrated", "up", "on", "your", "system", "you", "be", "run", "the", "code", "you", "should", "think", "about", "how", "you", "want", "your", "logging", "to", "be", "handle", "when", "you", "be", "setting", "things", "up", "NUMBER", "At", "some", "point", "you", "would", "have", "add", "a", "dehydrated", "cronjob", "or", "something", "similar", "at", "that", "point", "you", "should", "have", "thought", "about", "how", "to", "handle", "its", "output", "be", "it", "a", "pipe", "to", "logger", "appending", "its", "output", "to", "a", "logfile", "or", "use", "one", "of", "the", "hundreds", "of", "cron", "logging", "wrappers", "available", "out", "there", "NUMBER", "I", "did", "one", "more", "change", "in", "dcdb", "NUMBER", "fbc", "NUMBER", "b", "NUMBER", "cbbe", "NUMBER", "ea", "NUMBER", "cf", "NUMBER", "a", "NUMBER", "if", "that", "doesn", "t", "fix", "your", "problem", "your", "hook", "script", "probably", "be", "broken", "NUMBER", "It", "should", "ignore", "unknown", "hooks", "and", "exit", "cleanly", "otherwise", "dehydrated", "won", "t", "work", "NUMBER", "I", "think", "I", "know", "what", "be", "going", "on", "NUMBER", "should", "be", "fix", "in", "a", "NUMBER", "e", "NUMBER", "aa", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "de", "NUMBER", "c", "NUMBER", "b", "NUMBER", "e", "NUMBER", "dc", "NUMBER", "d", "NUMBER", "Mh", "NUMBER", "Can", "you", "run", "something", "like", "bash", "x", "dehydrated", "c", "and", "post", "the", "last", "few", "lines", "before", "it", "exits", "I", "think", "this", "be", "relate", "to", "the", "recent", "addition", "of", "the", "hook", "bricker", "NUMBER", "I", "did", "one", "more", "change", "in", "dcdb", "NUMBER", "fbc", "NUMBER", "b", "NUMBER", "cbbe", "NUMBER", "ea", "NUMBER", "cf", "NUMBER", "a", "NUMBER", "if", "that", "doesn", "t", "fix", "your", "problem", "your", "hook", "script", "probably", "be", "broken", "NUMBER", "It", "should", "ignore", "unknown", "hooks", "and", "exit", "cleanly", "otherwise", "dehydrated", "won", "t", "work", "NUMBER", "Sorry", "i", "think", "I", "find", "the", "issue", "NUMBER", "Should", "be", "fix", "in", "a", "NUMBER", "e", "NUMBER", "aa", "NUMBER", "c", "NUMBER", "e", "NUMBER", "a", "NUMBER", "de", "NUMBER", "c", "NUMBER", "b", "NUMBER", "e", "NUMBER", "dc", "NUMBER", "d", "NUMBER", "I", "d", "rather", "like", "people", "reading", "the", "actual", "documentation", "than", "just", "copying", "commands", "and", "creating", "tickets", "that", "it", "didn", "t", "work", "NUMBER", "Besides", "the", "get", "start", "section", "in", "the", "readme", "basically", "tells", "you", "what", "to", "look", "for", "and", "run", "with", "help", "gives", "you", "a", "descriptive", "list", "of", "all", "possible", "commands", "and", "parameters", "NUMBER", "joeydc", "again", "not", "a", "dehydrated", "issue", "the", "hook", "script", "be", "broken", "NUMBER", "i", "replied", "to", "your", "ticket", "over", "on", "le", "godaddy", "dns", "to", "let", "the", "author", "know", "and", "dehydrated", "now", "try", "to", "make", "it", "clear", "what", "s", "going", "on", "NUMBER", "Hook", "scripts", "should", "just", "ignore", "any", "hooks", "they", "don", "t", "know", "NUMBER", "This", "be", "a", "bug", "in", "the", "mention", "hook", "script", "and", "not", "in", "dehydrated", "NUMBER", "I", "add", "a", "random", "hook", "call", "in", "NUMBER", "ebab", "NUMBER", "e", "NUMBER", "e", "NUMBER", "fd", "NUMBER", "be", "NUMBER", "c", "NUMBER", "b", "NUMBER", "d", "to", "make", "it", "extremely", "clear", "that", "unknown", "hooks", "should", "just", "be", "ignored", "NUMBER", "A", "new", "hook", "will", "be", "implement", "which", "allows", "for", "external", "CSR", "generation", "or", "fetching", "this", "should", "make", "it", "possible", "to", "use", "dehydrated", "to", "e", "NUMBER", "g", "NUMBER", "sign", "certificates", "for", "routers", "or", "similar", "more", "close", "systems", "without", "handle", "their", "private", "keys", "NUMBER", "The", "hook", "will", "be", "call", "generate_csr", "and", "will", "have", "the", "name", "of", "the", "certificate", "as", "listed", "in", "domains", "NUMBER", "txt", "as", "single", "parameter", "NUMBER", "Domain", "altnames", "and", "timestamp", "can", "be", "read", "from", "the", "environment", "NUMBER", "All", "names", "for", "the", "certificate", "order", "will", "be", "extracted", "from", "the", "generate", "fetched", "CSR", "so", "domains", "NUMBER", "txt", "can", "basically", "contain", "a", "simple", "alias", "and", "doesn", "t", "need", "the", "correct", "domain", "set", "in", "this", "case", "NUMBER", "Implemented", "in", "NUMBER", "b", "NUMBER", "ba", "NUMBER", "dff", "NUMBER", "dc", "NUMBER", "f", "NUMBER", "bd", "NUMBER", "d", "NUMBER", "e", "NUMBER", "Gnarfoz", "at", "least", "DNS", "has", "to", "be", "resolvable", "from", "outside", "so", "you", "can", "use", "DNS", "NUMBER", "you", "need", "to", "verify", "ownership", "of", "the", "hostnames", "in", "some", "way", "Can", "you", "provide", "any", "more", "information", "on", "this", "Is", "there", "a", "weird", "exit", "code", "Are", "you", "run", "dehydrated", "with", "bash", "or", "zsh", "Can", "you", "post", "the", "output", "of", "dehydrated", "v", "please", "Mh", "can", "you", "check", "if", "it", "works", "when", "disabling", "OCSP_FETCH", "And", "please", "run", "bash", "x", "dehydrated", "c", "g", "and", "paste", "the", "last", "few", "dozen", "lines", "that", "would", "show", "where", "it", "stops", "NUMBER", "IP_VERSION", "be", "only", "for", "communication", "with", "the", "CA", "not", "the", "other", "way", "around", "so", "it", "doesn", "t", "make", "sense", "on", "a", "per", "certificate", "basis", "NUMBER", "registration_info", "NUMBER", "json", "be", "only", "created", "in", "more", "recent", "version", "of", "dehydrated", "if", "you", "have", "a", "very", "old", "account", "key", "that", "file", "just", "was", "never", "generate", "Unfortunately", "I", "kinda", "posted", "you", "the", "directions", "in", "the", "wrong", "order", "so", "now", "I", "see", "only", "the", "trace", "of", "a", "fully", "work", "run", "NUMBER", "Could", "you", "try", "remove", "ocsp", "NUMBER", "der", "for", "one", "of", "your", "certificates", "and", "run", "the", "debug", "command", "again", "I", "m", "guessing", "it", "fail", "on", "the", "openssl", "command", "NUMBER", "which", "openssl", "version", "be", "you", "use", "Meh", "NUMBER", "I", "kinda", "guessed", "that", "would", "be", "the", "problem", "the", "syntax", "probably", "be", "a", "bit", "different", "NUMBER", "Would", "you", "mind", "going", "into", "the", "script", "look", "for", "the", "line", "containing", "if", "grep", "qE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "TAG", "ACCOUNT_KEY", "rm", "tmp_account_key", "register_new_key", "yes", "fi", "fi", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "sign_domain", "if", "r", "certdir", "privkey", "NUMBER", "pem", "PRIVATE_KEY_RENEW", "yes", "then", "echo", "Generating", "private", "key", "NUMBER", "privkey", "privkey", "timestamp", "NUMBER", "pem", "local", "tmp_privkey", "_mktemp", "case", "KEY_ALGO", "in", "rsa", "_openssl", "genrsa", "out", "certdir", "privkey", "timestamp", "NUMBER", "pem", "KEYSIZE", "prime", "NUMBER", "v", "NUMBER", "secp", "NUMBER", "r", "NUMBER", "_openssl", "ecparam", "genkey", "name", "KEY_ALGO", "out", "certdir", "privkey", "timestamp", "NUMBER", "pem", "rsa", "_openssl", "genrsa", "out", "tmp_privkey", "KEYSIZE", "prime", "NUMBER", "v", "NUMBER", "secp", "NUMBER", "r", "NUMBER", "_openssl", "ecparam", "genkey", "name", "KEY_ALGO", "out", "tmp_privkey", "esac", "cat", "tmp_privkey", "certdir", "privkey", "timestamp", "NUMBER", "pem", "rm", "tmp_privkey", "fi", "move", "rolloverkey", "into", "position", "if", "any", "if", "r", "certdir", "privkey", "NUMBER", "pem", "r", "certdir", "privkey", "NUMBER", "roll", "NUMBER", "pem", "PRIVATE_KEY_RENEW", "yes", "PRIVATE_KEY_ROLLOVER", "yes", "then", "I", "test", "it", "myself", "and", "find", "one", "more", "bug", "chain", "file", "were", "miss", "the", "attributes", "it", "s", "now", "commit", "with", "NUMBER", "c", "NUMBER", "c", "NUMBER", "bd", "NUMBER", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "aaff", "NUMBER", "c", "NUMBER", "bc", "NUMBER", "c", "NUMBER", "If", "you", "find", "anything", "else", "that", "s", "miss", "the", "attributes", "please", "let", "me", "know", "NUMBER", "intelfx", "well", "functionality", "wise", "i", "think", "your", "approach", "makes", "more", "sense", "mine", "has", "really", "unnecessary", "tempfiles", "but", "I", "think", "it", "s", "more", "readable", "and", "it", "duplicates", "less", "functionality", "NUMBER", "I", "ll", "eventually", "work", "on", "this", "in", "the", "future", "but", "for", "now", "this", "do", "the", "job", "NUMBER", "merge", "in", "NUMBER", "c", "NUMBER", "ad", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "b", "NUMBER", "d", "NUMBER", "cec", "NUMBER", "f", "NUMBER", "b", "Closing", "this", "pullrequest", "as", "commit", "be", "mashed", "up", "NUMBER", "I", "ll", "implement", "something", "very", "similar", "for", "the", "next", "release", "basically", "a", "quick", "nagios", "check", "feature", "NUMBER", "Suggestions", "and", "further", "discussion", "should", "move", "to", "the", "original", "ticket", "NUMBER", "Since", "there", "were", "no", "more", "report", "of", "this", "happening", "and", "the", "relevant", "code", "has", "be", "restructured", "anyway", "I", "consider", "this", "issue", "solve", "NUMBER", "belliash", "should", "be", "fix", "with", "NUMBER", "f", "NUMBER", "c", "NUMBER", "a", "NUMBER", "a", "NUMBER", "a", "NUMBER", "f", "NUMBER", "c", "NUMBER", "a", "NUMBER", "c", "NUMBER", "c", "NUMBER", "ba", "NUMBER", "belliash", "nothing", "wrong", "that", "s", "exactly", "how", "it", "s", "supposed", "to", "be", "wildcards", "be", "validated", "at", "the", "upper", "level", "domain", "and", "there", "be", "no", "way", "to", "differentiate", "which", "authorization", "be", "for", "which", "domain", "so", "I", "can", "t", "make", "it", "more", "verbose", "NUMBER", "the", "issue", "you", "be", "run", "into", "seems", "to", "be", "the", "boulder", "bug", "that", "was", "already", "mention", "in", "this", "discussion", "LINK", "it", "s", "fix", "now", "but", "I", "guess", "it", "isn", "t", "yet", "deployed", "to", "the", "staging", "environment", "NUMBER", "as", "a", "workaround", "you", "can", "delete", "your", "account", "key", "and", "register", "a", "new", "one", "that", "should", "work", "NUMBER", "I", "m", "closing", "this", "as", "ACME", "v", "NUMBER", "support", "seems", "to", "be", "quite", "stable", "by", "now", "There", "be", "still", "a", "few", "things", "that", "might", "be", "implement", "before", "the", "next", "release", "e", "NUMBER", "g", "NUMBER", "order", "reuse", "after", "certain", "failures", "would", "be", "nice", "but", "main", "support", "for", "the", "new", "protocol", "and", "wildcard", "certificates", "be", "there", "and", "seems", "to", "be", "work", "fine", "If", "you", "be", "having", "issue", "with", "ACME", "v", "NUMBER", "please", "create", "new", "issue", "instead", "of", "replying", "to", "this", "one", "NUMBER", "bviktor", "NUMBER", "domain", "NUMBER", "com", "in", "domains", "NUMBER", "txt", "just", "like", "every", "other", "domain", "NUMBER", "but", "keep", "in", "mind", "that", "it", "only", "works", "with", "ACMEv", "NUMBER", "so", "currently", "only", "with", "the", "staging", "api", "NUMBER", "thanks", "txr", "NUMBER", "and", "jangrewe", "yes", "my", "wishlist", "be", "always", "up", "to", "date", "I", "m", "going", "to", "lock", "this", "conversation", "so", "that", "new", "issue", "will", "land", "in", "their", "own", "tickets", "instead", "of", "this", "big", "collection", "makes", "it", "easier", "for", "me", "and", "others", "to", "find", "duplicates", "smile", "Can", "you", "give", "an", "example", "for", "when", "this", "would", "be", "really", "useful", "I", "can", "t", "think", "of", "anything", "NUMBER", "closing", "this", "for", "now", "thanks", "anyway", "NUMBER", "Yea", "but", "in", "that", "case", "wouldn", "t", "it", "be", "best", "to", "use", "a", "deployment", "hook", "anyway", "and", "in", "there", "you", "could", "always", "just", "use", "readlink", "to", "resolve", "the", "real", "file", "and", "create", "a", "hard", "link", "yourself", "in", "any", "way", "you", "like", "with", "correct", "permissions", "and", "everything", "NUMBER", "Still", "don", "t", "really", "see", "a", "reason", "in", "add", "this", "to", "dehydrated", "itself", "NUMBER", "Thanks", "this", "was", "an", "oversight", "I", "just", "add", "it", "to", "the", "example", "config", "NUMBER", "taylorotwell", "can", "you", "please", "test", "with", "the", "newest", "version", "this", "should", "be", "fix", "now", "it", "can", "mh", "for", "me", "this", "works", "fine", "without", "an", "additional", "host", "argument", "NUMBER", "can", "you", "please", "post", "the", "output", "of", "dehydrated", "version", "Just", "interested", "on", "why", "this", "fail", "not", "meaning", "that", "this", "will", "not", "be", "fix", "NUMBER", "Otherwise", "as", "txr", "NUMBER", "stated", "this", "pull", "request", "be", "LE", "specific", "and", "it", "also", "will", "probably", "only", "work", "with", "that", "specific", "sub", "CA", "and", "will", "break", "in", "the", "near", "ish", "future", "NUMBER", "I", "ll", "rewrite", "this", "to", "take", "the", "exist", "parameter", "closing", "this", "pullrequest", "NUMBER", "Please", "see", "e", "NUMBER", "b", "NUMBER", "a", "NUMBER", "ad", "NUMBER", "bb", "NUMBER", "ca", "NUMBER", "this", "should", "fix", "your", "issue", "NUMBER", "it", "can", "did", "you", "actually", "try", "it", "_sed", "in", "the", "code", "be", "an", "alias", "for", "sed", "r", "or", "sed", "E", "depending", "on", "OS", "and", "with", "that", "this", "works", "\u039e", "echo", "LINK", "x", "NUMBER", "letsencrypt", "NUMBER", "org", "sed", "r", "s", "http", "s", "ocsp", "NUMBER", "int", "x", "NUMBER", "letsencrypt", "NUMBER", "org", "\u039e", "echo", "LINK", "x", "NUMBER", "letsencrypt", "NUMBER", "org", "sed", "r", "s", "http", "s", "ocsp", "NUMBER", "int", "x", "NUMBER", "letsencrypt", "NUMBER", "org", "I", "can", "reproduce", "the", "issue", "now", "it", "seems", "that", "openssl", "has", "change", "the", "syntax", "for", "the", "header", "parameter", "from", "version", "NUMBER", "x", "to", "NUMBER", "x", "NUMBER", "Meh", "NUMBER", "disappointed", "Please", "see", "NUMBER", "b", "NUMBER", "d", "NUMBER", "d", "NUMBER", "acc", "NUMBER", "b", "NUMBER", "da", "NUMBER", "e", "NUMBER", "be", "NUMBER", "e", "NUMBER", "ac", "NUMBER", "do", "this", "work", "for", "you", "This", "should", "just", "be", "a", "problem", "with", "your", "hook", "script", "please", "see", "the", "newer", "example", "hook", "for", "someting", "that", "won", "t", "fail", "every", "time", "I", "add", "a", "new", "hook", "NUMBER", "Thanks", "for", "report", "this", "I", "remove", "the", "short", "option", "for", "account", "NUMBER", "Please", "if", "you", "gonna", "ask", "these", "question", "read", "the", "documentation", "first", "NUMBER", "I", "ll", "answer", "anyway", "but", "these", "already", "answered", "question", "be", "annoying", "NUMBER", "Basically", "you", "can", "use", "two", "hooks", "one", "would", "be", "the", "deploy_cert", "hook", "which", "gets", "call", "after", "a", "new", "certificate", "has", "be", "issue", "normally", "to", "copy", "it", "somewhere", "but", "you", "don", "t", "need", "to", "do", "that", "you", "can", "just", "reload", "your", "webserver", "or", "you", "could", "use", "the", "exit_hook", "which", "gets", "call", "after", "every", "run", "for", "a", "small", "webserver", "which", "probably", "be", "only", "use", "for", "some", "webmail", "and", "the", "challenge", "tokens", "a", "reload", "a", "week", "probably", "won", "t", "hurt", "anybody", "NUMBER", "petarkozic", "sorry", "I", "ll", "not", "be", "holding", "your", "hand", "going", "through", "this", "I", "d", "recommend", "reading", "the", "documentation", "and", "looking", "at", "howtos", "and", "examples", "that", "other", "people", "already", "publish", "For", "me", "it", "seems", "that", "you", "didn", "t", "list", "your", "CSRs", "Common", "Name", "in", "the", "Subject", "Alternative", "Name", "section", "which", "you", "should", "do", "since", "browsers", "nowadays", "don", "t", "really", "care", "about", "a", "certificates", "Common", "Name", "NUMBER", "Can", "you", "please", "check", "that", "and", "report", "back", "Please", "add", "vi", "server", "NUMBER", "org", "as", "Subject", "Alternative", "Name", "for", "this", "to", "work", "this", "be", "how", "it", "be", "supposed", "to", "work", "in", "dehydrated", "as", "well", "as", "in", "the", "intended", "usage", "for", "this", "x", "NUMBER", "v", "NUMBER", "extension", "NUMBER", "If", "you", "want", "to", "know", "more", "about", "Common", "Name", "be", "ignored", "I", "d", "suggest", "looking", "for", "the", "security", "change", "of", "Chrome", "NUMBER", "or", "Firefox", "NUMBER", "CN", "will", "only", "be", "parsed", "by", "dehydrated", "when", "there", "be", "no", "SNI", "extension", "in", "the", "csr", "and", "be", "actually", "only", "meant", "to", "be", "a", "fallback", "this", "feature", "may", "be", "remove", "in", "the", "future", "NUMBER", "Merged", "in", "NUMBER", "c", "NUMBER", "e", "NUMBER", "daa", "NUMBER", "b", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ecdfc", "NUMBER", "ccf", "NUMBER", "a", "thx", "NUMBER", "Mh", "NUMBER", "I", "ve", "just", "implement", "caching", "for", "certificate", "chains", "see", "d", "NUMBER", "ba", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "f", "NUMBER", "a", "NUMBER", "with", "that", "you", "could", "at", "least", "write", "the", "file", "manually", "and", "have", "the", "script", "work", "on", "the", "next", "run", "error", "message", "gives", "instructions", "on", "where", "to", "get", "and", "place", "file", "NUMBER", "Moving", "the", "certificate", "in", "place", "before", "everything", "else", "be", "ready", "be", "no", "option", "for", "me", "I", "and", "probably", "most", "of", "the", "scripts", "users", "always", "use", "the", "fullchain", "NUMBER", "pem", "in", "combination", "with", "privkey", "NUMBER", "pem", "so", "if", "cert", "NUMBER", "pem", "and", "privkey", "NUMBER", "pem", "would", "have", "be", "moved", "in", "position", "before", "fullchain", "NUMBER", "pem", "was", "generate", "this", "would", "result", "in", "tons", "of", "broken", "systems", "NUMBER", "Does", "the", "cache", "fix", "your", "issue", "Otherwise", "we", "might", "think", "about", "implement", "a", "fixup", "command", "that", "looks", "for", "unlinked", "certs", "and", "keys", "verifies", "that", "they", "be", "valid", "ocsp", "generates", "the", "chain", "and", "puts", "them", "into", "place", "but", "this", "would", "be", "quite", "a", "lot", "of", "work", "for", "an", "edgecase", "like", "this", "NUMBER", "For", "me", "it", "seems", "that", "dehydrated", "be", "use", "a", "different", "config", "path", "than", "when", "you", "initially", "run", "it", "NUMBER", "I", "d", "recommend", "setting", "the", "paths", "in", "a", "config", "file", "and", "tell", "your", "cronjob", "which", "config", "to", "use", "just", "to", "be", "sure", "NUMBER", "Normally", "this", "isn", "t", "necessary", "but", "without", "any", "more", "information", "I", "have", "no", "idea", "what", "be", "wrong", "with", "your", "specific", "setup", "NUMBER", "Closing", "this", "issue", "for", "now", "since", "this", "seems", "like", "just", "a", "user", "error", "to", "me", "NUMBER", "I", "d", "do", "what", "txr", "NUMBER", "suggested", "this", "be", "really", "worth", "implement", "in", "dehydrated", "itself", "NUMBER", "If", "you", "split", "to", "multiple", "certificates", "you", "can", "always", "define", "other", "hook", "scripts", "see", "per", "certificate", "config", "LINK", "certificate", "config", "NUMBER", "md", "but", "for", "a", "single", "certificate", "use", "a", "master", "script", "that", "splits", "to", "the", "corresponding", "sub", "hooks", "be", "your", "only", "option", "NUMBER", "Merged", "in", "NUMBER", "c", "NUMBER", "f", "NUMBER", "e", "NUMBER", "fc", "NUMBER", "b", "NUMBER", "ba", "NUMBER", "c", "NUMBER", "bc", "NUMBER", "b", "NUMBER", "deb", "NUMBER", "c", "thanks", "NUMBER", "I", "see", "your", "problem", "I", "like", "the", "idea", "but", "I", "really", "don", "t", "like", "this", "implementation", "NUMBER", "Also", "like", "I", "posted", "as", "response", "to", "NUMBER", "Since", "other", "parameters", "may", "as", "well", "be", "change", "I", "d", "suggest", "just", "use", "a", "separate", "configuration", "file", "NUMBER", "Should", "be", "easy", "to", "implement", "if", "you", "really", "want", "to", "you", "could", "have", "a", "main", "config", "that", "be", "sourced", "by", "other", "configs", "just", "for", "this", "a", "few", "tiny", "file", "which", "will", "replace", "a", "ton", "of", "not", "really", "required", "functionality", "NUMBER", "In", "your", "case", "you", "would", "have", "a", "config", "for", "ecdsa", "certs", "one", "for", "rsa", "certs", "probably", "different", "output", "directories", "for", "the", "certificates", "every", "other", "parameter", "could", "just", "be", "shared", "NUMBER", "See", "discussion", "in", "NUMBER", "typingArtist", "From", "what", "I", "see", "the", "only", "need", "for", "aliases", "be", "for", "dual", "key", "cert", "setups", "and", "I", "really", "think", "it", "would", "be", "the", "easiest", "way", "to", "just", "have", "two", "separate", "domains", "NUMBER", "txt", "file", "and", "cert", "directories", "for", "RSA", "and", "other", "keytypes", "NUMBER", "The", "only", "thing", "you", "would", "need", "to", "maintain", "in", "your", "setup", "would", "be", "the", "two", "domains", "NUMBER", "txt", "file", "NUMBER", "If", "you", "want", "a", "cert", "with", "both", "key", "types", "add", "it", "two", "both", "file", "if", "you", "only", "need", "one", "just", "add", "it", "to", "the", "corresponding", "one", "NUMBER", "Since", "having", "two", "keys", "for", "the", "same", "domain", "combination", "seems", "like", "an", "edge", "case", "to", "me", "I", "don", "t", "really", "know", "if", "it", "s", "worth", "implement", "this", "or", "if", "it", "s", "just", "easier", "to", "tell", "the", "two", "people", "who", "really", "need", "it", "to", "create", "two", "config", "file", "maybe", "even", "add", "a", "paragraph", "about", "how", "easy", "that", "be", "to", "do", "in", "the", "documentation", "NUMBER", "If", "you", "d", "really", "like", "to", "see", "this", "feature", "I", "think", "the", "best", "way", "would", "be", "to", "have", "the", "alias", "as", "a", "parameter", "for", "the", "per", "cert", "config", "file", "instead", "of", "add", "it", "to", "the", "domains", "NUMBER", "txt", "file", "NUMBER", "And", "sorry", "for", "closing", "this", "ticket", "I", "just", "meant", "to", "move", "the", "discussion", "over", "to", "the", "other", "ticket", "but", "since", "that", "be", "a", "now", "rejected", "pull", "request", "you", "be", "right", "that", "this", "be", "a", "better", "place", "for", "the", "discussion", "NUMBER", "Not", "sure", "what", "exactly", "I", "was", "thinking", "when", "I", "originally", "did", "that", "NUMBER", "typingArtist", "Your", "commit", "cd", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "f", "NUMBER", "ed", "NUMBER", "c", "NUMBER", "d", "NUMBER", "b", "NUMBER", "a", "NUMBER", "f", "NUMBER", "cd", "be", "now", "in", "my", "local", "staging", "and", "will", "be", "publish", "soon", "need", "to", "test", "it", "first", "probably", "tomorrow", "evening", "or", "on", "monday", "NUMBER", "I", "m", "not", "happy", "with", "NUMBER", "fe", "NUMBER", "since", "it", "change", "the", "name", "of", "the", "altnames", "variable", "NUMBER", "I", "think", "altnames", "be", "a", "fitting", "name", "since", "it", "stands", "short", "for", "Subject", "Alternative", "Names", "which", "at", "least", "for", "the", "biggest", "use", "case", "https", "be", "mandatory", "to", "contain", "all", "domain", "names", "Browsers", "completely", "ignore", "commonName", "in", "newer", "version", "NUMBER", "Changing", "the", "name", "of", "the", "domain", "variable", "may", "be", "considered", "but", "I", "don", "t", "like", "to", "merge", "it", "with", "other", "change", "in", "a", "single", "commit", "I", "ll", "look", "into", "this", "after", "test", "your", "other", "change", "NUMBER", "If", "you", "d", "like", "you", "could", "split", "those", "commit", "for", "me", "to", "make", "it", "a", "bit", "easier", "to", "merge", "just", "reply", "with", "a", "link", "to", "your", "branch", "no", "need", "for", "a", "pull", "request", "I", "ll", "merge", "them", "on", "console", "anyway", "NUMBER", "I", "would", "be", "really", "happy", "if", "it", "was", "easy", "to", "specify", "the", "alias", "name", "in", "the", "certificate", "s", "config", "file", "in", "domains", "NUMBER", "d", "but", "well", "the", "alias", "should", "already", "be", "the", "key", "to", "that", "config", "file", "that", "s", "why", "there", "be", "this", "unpleasant", "alias", "thing", "in", "domains", "NUMBER", "txt", "NUMBER", "typingArtist", "You", "know", "the", "feeling", "when", "you", "facepalm", "so", "hard", "it", "really", "hurts", "NUMBER", "I", "now", "do", "NUMBER", "Okay", "then", "let", "s", "do", "it", "in", "domains", "NUMBER", "txt", "but", "I", "really", "dislike", "the", "alias", "stuff", "I", "d", "prefer", "something", "like", "this", "example", "NUMBER", "org", "www", "NUMBER", "example", "NUMBER", "org", "alias", "NUMBER", "example", "NUMBER", "org", "mail", "NUMBER", "example", "NUMBER", "org", "whatever", "NUMBER", "com", "alias", "NUMBER", "example", "NUMBER", "org", "xmpp", "NUMBER", "example", "NUMBER", "org", "Could", "easily", "be", "made", "position", "independent", "and", "would", "look", "a", "bit", "like", "an", "output", "redirect", "on", "a", "shell", "so", "it", "should", "be", "easy", "to", "remember", "how", "to", "use", "it", "NUMBER", "What", "do", "you", "think", "about", "this", "typingArtist", "I", "think", "that", "shouldn", "t", "be", "too", "hard", "to", "parse", "just", "look", "for", "the", "next", "token", "after", "the", "redirect", "character", "NUMBER", "I", "m", "going", "to", "work", "on", "this", "beginning", "of", "next", "month", "I", "have", "to", "do", "some", "other", "work", "first", "NUMBER", "If", "you", "want", "you", "can", "have", "a", "go", "at", "it", "NUMBER", "I", "m", "not", "sure", "how", "well", "this", "will", "work", "but", "I", "guess", "you", "have", "test", "it", "and", "since", "it", "doesn", "t", "seem", "to", "interfere", "when", "it", "s", "unuse", "I", "merge", "this", "in", "bd", "NUMBER", "c", "NUMBER", "ce", "NUMBER", "b", "NUMBER", "d", "NUMBER", "fee", "NUMBER", "b", "NUMBER", "b", "NUMBER", "afe", "NUMBER", "Merged", "in", "NUMBER", "ea", "NUMBER", "e", "NUMBER", "cfbcdfe", "NUMBER", "be", "NUMBER", "fd", "NUMBER", "c", "NUMBER", "b", "NUMBER", "db", "but", "please", "be", "aware", "that", "I", "won", "t", "really", "care", "if", "this", "breaks", "in", "the", "future", "NUMBER", "Mh", "this", "won", "t", "easily", "work", "when", "you", "be", "use", "the", "same", "domain", "for", "both", "services", "NUMBER", "You", "could", "in", "theory", "easily", "run", "multiple", "instances", "of", "dehydrated", "since", "the", "account", "key", "be", "part", "of", "the", "verification", "filename", "it", "should", "even", "be", "easy", "to", "forward", "a", "request", "to", "a", "different", "server", "or", "you", "could", "use", "dns", "verification", "NUMBER", "That", "way", "you", "could", "run", "a", "dehydrated", "cronjob", "with", "hooks", "and", "everything", "on", "your", "jabber", "server", "and", "benefit", "from", "automatic", "reloading", "on", "certificate", "renewal", "and", "stuff", "NUMBER", "Mh", "NUMBER", "I", "see", "this", "more", "or", "less", "as", "intended", "behaviour", "NUMBER", "If", "you", "tell", "it", "to", "do", "nothing", "it", "just", "do", "nothing", "_", "\u30c4", "_", "I", "implement", "a", "feature", "for", "this", "in", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "ad", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "a", "NUMBER", "c", "NUMBER", "a", "NUMBER", "d", "NUMBER", "Just", "set", "AUTO_CLEANUP", "yes", "in", "your", "config", "and", "it", "will", "run", "the", "cleanup", "routine", "before", "exit_hook", "NUMBER", "Otherwise", "if", "you", "really", "need", "to", "do", "it", "manually", "you", "can", "force", "dehydrated", "to", "use", "a", "different", "lockfile", "but", "I", "don", "t", "recommend", "doing", "that", "NUMBER", "Thanks", "for", "the", "feature", "I", "just", "merge", "it", "in", "commit", "ec", "NUMBER", "e", "NUMBER", "b", "NUMBER", "da", "NUMBER", "a", "NUMBER", "e", "NUMBER", "fb", "NUMBER", "fecdeaae", "NUMBER", "b", "NUMBER", "Sorry", "that", "this", "took", "so", "long", "NUMBER", "This", "be", "no", "longer", "relevant", "authorizations", "should", "now", "be", "automatically", "re", "use", "on", "serverside", "any", "further", "DNS", "or", "other", "caching", "issue", "be", "outside", "the", "scope", "of", "dehydrated", "NUMBER", "I", "tried", "to", "implement", "this", "in", "ee", "NUMBER", "c", "NUMBER", "dca", "NUMBER", "ea", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "fb", "NUMBER", "not", "sure", "how", "well", "this", "works", "feel", "free", "to", "play", "around", "with", "it", "NUMBER", "Set", "OCSP_FETCH", "yes", "in", "config", "to", "enable", "it", "should", "write", "ocsp", "timestamp", "NUMBER", "der", "file", "and", "link", "the", "newest", "version", "to", "ocsp", "NUMBER", "der", "NUMBER", "Fixed", "in", "dc", "NUMBER", "e", "NUMBER", "b", "NUMBER", "bcaa", "NUMBER", "c", "NUMBER", "e", "NUMBER", "ad", "NUMBER", "c", "NUMBER", "Caching", "of", "chain", "certificates", "be", "now", "implement", "NUMBER", "If", "you", "run", "into", "any", "issue", "you", "can", "just", "create", "the", "chain", "manually", "and", "continue", "use", "dehydrated", "NUMBER", "The", "core", "issue", "be", "of", "identrust", "only", "support", "legacy", "ip", "be", "not", "really", "relate", "to", "dehydrated", "so", "I", "m", "closing", "this", "ticket", "NUMBER", "Merged", "thanks", "NUMBER", "I", "d", "recommend", "use", "a", "wrapper", "like", "cronic", "which", "also", "seems", "to", "be", "just", "a", "shell", "script", "NUMBER", "Rewriting", "the", "logging", "code", "be", "not", "something", "I", "ll", "be", "work", "on", "any", "time", "soon", "since", "for", "me", "use", "a", "wrapper", "works", "perfectly", "and", "on", "most", "systems", "I", "actually", "just", "let", "cron", "send", "me", "the", "whole", "output", "because", "it", "only", "runs", "once", "a", "month", "anyway", "and", "could", "be", "run", "even", "less", "often", "if", "it", "spams", "too", "much", "NUMBER", "If", "anybody", "really", "wants", "this", "feature", "feel", "free", "to", "implement", "it", "and", "open", "a", "pullrequest", "NUMBER", "If", "i", "think", "that", "it", "s", "good", "I", "ll", "merge", "it", "NUMBER", "For", "what", "exactly", "would", "this", "be", "useful", "The", "cron", "mode", "be", "not", "really", "designed", "for", "custom", "CSRs", "and", "I", "don", "t", "see", "the", "reason", "for", "reusing", "an", "old", "CSR", "NUMBER", "Feel", "free", "to", "reopen", "if", "there", "be", "a", "important", "use", "case", "for", "this", "NUMBER", "I", "ll", "be", "implement", "this", "as", "a", "hook", "so", "it", "can", "be", "use", "a", "bit", "more", "dynamically", "NUMBER", "Closing", "this", "pull", "request", "in", "favor", "of", "NUMBER", "Just", "use", "a", "master", "script", "that", "distributes", "the", "hooks", "to", "other", "scripts", "no", "need", "to", "implement", "this", "in", "dehydrated", "NUMBER", "Hu", "The", "subject", "starts", "with", "a", "so", "MSYS", "will", "assume", "it", "s", "a", "path", "they", "seem", "to", "have", "do", "a", "great", "job", "with", "that", "Since", "this", "doesn", "t", "seem", "to", "intefere", "with", "anything", "else", "I", "have", "merge", "it", "in", "ba", "NUMBER", "a", "NUMBER", "d", "NUMBER", "d", "NUMBER", "ff", "NUMBER", "d", "NUMBER", "dc", "NUMBER", "d", "NUMBER", "e", "NUMBER", "ab", "NUMBER", "f", "NUMBER", "I", "d", "recommend", "use", "the", "deploy_cert", "hook", "for", "this", "like", "txr", "NUMBER", "already", "mention", "NUMBER", "Mh", "sorry", "but", "if", "you", "need", "to", "test", "a", "hook", "just", "call", "it", "manually", "with", "the", "corresponding", "parameters", "or", "use", "different", "subdomains", "to", "force", "validation", "NUMBER", "Thanks", "for", "the", "suggestions", "I", "commit", "this", "manually", "see", "d", "NUMBER", "f", "NUMBER", "b", "NUMBER", "aa", "NUMBER", "d", "NUMBER", "c", "NUMBER", "a", "NUMBER", "acfd", "NUMBER", "db", "NUMBER", "e", "since", "there", "were", "some", "conflict", "and", "it", "was", "easier", "to", "just", "do", "the", "change", "by", "hand", "instead", "of", "solving", "for", "merge", "conflict", "NUMBER", "For", "integration", "you", "can", "use", "a", "deploy_cert", "hook", "this", "hook", "be", "exactly", "intended", "for", "that", "purpose", "NUMBER", "Just", "write", "a", "simple", "script", "that", "copies", "the", "certificates", "to", "where", "you", "want", "them", "NUMBER", "Since", "other", "parameters", "may", "as", "well", "be", "change", "I", "d", "suggest", "just", "use", "a", "separate", "configuration", "file", "NUMBER", "Should", "be", "easy", "to", "implement", "if", "you", "really", "want", "to", "you", "could", "have", "a", "main", "config", "that", "be", "sourced", "by", "other", "configs", "just", "for", "this", "a", "few", "tiny", "file", "which", "will", "replace", "a", "ton", "of", "not", "really", "required", "functionality", "NUMBER", "I", "have", "no", "idea", "about", "this", "device", "and", "I", "don", "t", "think", "this", "issue", "belongs", "here", "NUMBER", "I", "hope", "you", "have", "find", "a", "way", "to", "get", "stuff", "work", "NUMBER", "This", "shouldn", "t", "be", "necessary", "anymore", "since", "dehydrated", "now", "checks", "if", "domains", "be", "already", "verify", "NUMBER", "This", "shouldn", "t", "happen", "anymore", "since", "dehydrated", "now", "checks", "if", "a", "domain", "be", "already", "verify", "NUMBER", "This", "has", "be", "implement", "in", "ec", "NUMBER", "e", "NUMBER", "b", "NUMBER", "da", "NUMBER", "a", "NUMBER", "e", "NUMBER", "fb", "NUMBER", "fecdeaae", "NUMBER", "b", "NUMBER", "Since", "NUMBER", "ef", "NUMBER", "f", "NUMBER", "ad", "NUMBER", "acfeaa", "NUMBER", "f", "NUMBER", "da", "NUMBER", "cb", "NUMBER", "altnames", "should", "be", "expose", "as", "environment", "variable", "you", "can", "take", "the", "names", "from", "there", "NUMBER", "Merged", "in", "NUMBER", "dcf", "NUMBER", "dd", "NUMBER", "d", "NUMBER", "d", "NUMBER", "c", "NUMBER", "c", "NUMBER", "f", "NUMBER", "bb", "NUMBER", "c", "NUMBER", "cff", "NUMBER", "I", "don", "t", "understand", "where", "do", "this", "othername", "come", "from", "The", "only", "thing", "I", "find", "that", "mention", "this", "was", "for", "arbitrary", "data", "which", "doesn", "t", "really", "make", "sense", "for", "altnames", "NUMBER", "This", "looks", "like", "something", "which", "would", "be", "stripped", "by", "Let", "s", "Encrypt", "Boulder", "anyway", "or", "be", "this", "support", "Have", "you", "tried", "this", "use", "a", "custom", "csr", "Okay", "I", "merge", "your", "change", "since", "they", "shouldn", "t", "interfere", "with", "anything", "else", "and", "if", "that", "makes", "dehydrated", "work", "for", "you", "and", "probably", "a", "few", "other", "people", "that", "s", "great", "smile", "Thanks", "for", "the", "suggestion", "NUMBER", "I", "d", "like", "this", "too", "but", "I", "didn", "t", "really", "find", "a", "nice", "way", "to", "do", "this", "NUMBER", "It", "would", "be", "possible", "to", "split", "the", "line", "at", "a", "predefined", "marker", "like", "bar", "NUMBER", "com", "foo", "NUMBER", "bar", "NUMBER", "com", "CHALLENGETYPE", "dns", "NUMBER", "and", "just", "execute", "that", "but", "I", "really", "don", "t", "want", "to", "add", "even", "more", "ugly", "config", "parsing", "code", "NUMBER", "the", "current", "parser", "be", "ugly", "enough", "for", "one", "bash", "script", "NUMBER", "For", "now", "you", "can", "partly", "solve", "this", "with", "a", "small", "wrapper", "script", "which", "sets", "the", "parameters", "like", "this", "one", "bin", "sh", "dehydrated", "c", "d", "foo", "NUMBER", "com", "bar", "NUMBER", "foo", "NUMBER", "com", "t", "dns", "NUMBER", "dehydrated", "c", "d", "bar", "NUMBER", "com", "foo", "NUMBER", "bar", "NUMBER", "com", "You", "could", "easily", "make", "a", "few", "helper", "function", "to", "make", "it", "a", "bit", "more", "readable", "maybe", "something", "like", "this", "untested", "bin", "sh", "HTTP", "dehydrated", "c", "d", "DNS", "dehydrated", "c", "d", "t", "dns", "NUMBER", "DNS", "foo", "NUMBER", "com", "bar", "NUMBER", "foo", "NUMBER", "com", "HTTP", "bar", "NUMBER", "com", "foo", "NUMBER", "bar", "NUMBER", "com", "I", "want", "to", "put", "a", "bit", "more", "work", "into", "command", "line", "options", "since", "they", "make", "the", "script", "really", "powerful", "especially", "in", "combination", "with", "automation", "tool", "like", "Ansible", "and", "Puppet", "but", "even", "with", "small", "wrapper", "scripts", "like", "the", "examples", "above", "NUMBER", "dehydrated", "has", "a", "ton", "of", "command", "line", "options", "so", "you", "can", "easily", "write", "wrapper", "scripts", "and", "run", "it", "for", "specific", "domains", "with", "different", "hooks", "and", "whatever", "you", "like", "completely", "without", "use", "any", "domains", "NUMBER", "txt", "Also", "I", "think", "this", "change", "be", "a", "lot", "more", "complicated", "than", "it", "really", "needs", "to", "be", "NUMBER", "I", "mean", "your", "whole", "code", "could", "be", "replaced", "by", "this", "wrapper", "bash", "bin", "sh", "generate", "domains", "txt", "NUMBER", "sh", "etc", "dehydrated", "domains", "NUMBER", "txt", "dehydrated", "c", "I", "really", "think", "this", "be", "a", "lot", "more", "beautiful", "than", "add", "new", "config", "parameters", "new", "checks", "new", "methods", "and", "everything", "to", "dehydrated", "just", "to", "call", "generate", "domains", "txt", "NUMBER", "sh", "NUMBER", "Even", "if", "you", "be", "arguing", "about", "run", "it", "inside", "a", "cronjob", "and", "not", "wanting", "another", "executable", "script", "file", "on", "your", "system", "for", "whatever", "reason", "you", "could", "easily", "write", "that", "inside", "your", "crontab", "NUMBER", "If", "you", "really", "wrap", "your", "code", "around", "dehydrated", "you", "can", "even", "define", "what", "hook", "script", "to", "use", "which", "challenge", "type", "to", "use", "e", "NUMBER", "g", "NUMBER", "dns", "NUMBER", "and", "even", "a", "path", "to", "a", "custom", "config", "just", "for", "that", "particular", "call", "NUMBER", "I", "might", "reconsider", "this", "if", "you", "give", "me", "a", "really", "good", "reason", "why", "this", "has", "to", "be", "a", "hook", "but", "from", "what", "I", "see", "it", "just", "doesn", "t", "make", "sense", "so", "I", "m", "closing", "this", "pullrequest", "sorry", "NUMBER", "Implemented", "in", "d", "NUMBER", "ba", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "f", "NUMBER", "a", "NUMBER", "thanks", "for", "the", "suggestion", "NUMBER", "Mh", "yes", "was", "thinking", "about", "this", "too", "but", "I", "see", "a", "problem", "with", "people", "use", "version", "directly", "from", "the", "git", "repository", "I", "d", "have", "to", "constantly", "update", "the", "version", "number", "in", "the", "script", "to", "make", "it", "correct", "in", "those", "cases", "NUMBER", "I", "ve", "implement", "this", "with", "some", "additional", "information", "OS", "and", "use", "software", "version", "in", "f", "NUMBER", "b", "NUMBER", "c", "NUMBER", "b", "NUMBER", "c", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "c", "NUMBER", "d", "NUMBER", "Thanks", "for", "the", "suggestion", "NUMBER", "jmandel", "i", "did", "implement", "your", "change", "with", "aed", "NUMBER", "e", "NUMBER", "bb", "NUMBER", "b", "NUMBER", "ffa", "NUMBER", "fb", "NUMBER", "b", "NUMBER", "b", "NUMBER", "c", "NUMBER", "but", "i", "had", "to", "change", "it", "a", "little", "bit", "because", "it", "was", "cause", "syntax", "error", "sorry", "for", "not", "giving", "any", "comment", "on", "it", "The", "problem", "be", "in", "the", "hook", "script", "I", "m", "planning", "on", "make", "the", "example", "hook", "better", "ignoring", "unknown", "hooks", "instead", "of", "throw", "error", "but", "for", "now", "the", "best", "fix", "be", "to", "just", "add", "the", "exit_hook", "from", "the", "example", "script", "to", "your", "own", "script", "NUMBER", "This", "fix", "of", "course", "doesn", "t", "magically", "fix", "old", "modify", "example", "hook", "scripts", "you", "ll", "have", "to", "add", "the", "change", "yourself", "but", "it", "will", "ensure", "this", "problem", "doesn", "t", "occur", "again", "in", "the", "future", "NUMBER", "Switching", "to", "a", "directory", "and", "run", "parts", "would", "change", "everything", "completely", "and", "this", "pattern", "list", "be", "just", "part", "of", "the", "example", "hook", "other", "hook", "scripts", "probably", "never", "had", "any", "problem", "and", "this", "way", "I", "can", "add", "new", "hooks", "without", "the", "example", "script", "fail", "again", "I", "think", "this", "be", "a", "good", "and", "easy", "solution", "for", "this", "problem", "NUMBER", "If", "you", "ever", "want", "to", "make", "use", "of", "a", "new", "hook", "you", "just", "have", "to", "add", "it", "to", "the", "list", "and", "write", "a", "handler", "function", "don", "t", "see", "any", "problem", "with", "that", "NUMBER", "Yea", "I", "guess", "having", "the", "root", "cert", "in", "the", "chain", "be", "kinda", "redundant", "but", "only", "redundant", "this", "shouldn", "t", "break", "anything", "I", "ll", "have", "to", "figure", "out", "a", "nice", "way", "to", "detect", "it", "be", "the", "root", "cert", "and", "excluding", "it", "from", "the", "chain", "I", "basically", "wanted", "this", "new", "walk", "functionality", "so", "that", "stuff", "doesn", "t", "break", "if", "Let", "s", "Encrypt", "ever", "reorganizes", "their", "internal", "CA", "structure", "NUMBER", "This", "should", "do", "the", "trick", "ee", "NUMBER", "ea", "NUMBER", "a", "NUMBER", "d", "NUMBER", "d", "NUMBER", "f", "NUMBER", "a", "NUMBER", "fa", "NUMBER", "ae", "NUMBER", "Writing", "each", "intermediate", "certificate", "to", "a", "file", "doesn", "t", "seem", "useful", "for", "me", "with", "this", "change", "it", "just", "stops", "when", "it", "detects", "the", "root", "of", "the", "chain", "NUMBER", "Currently", "users", "be", "basically", "accepting", "the", "Let", "s", "Encrypt", "terms", "of", "service", "the", "moment", "they", "run", "dehydrated", "for", "the", "first", "time", "this", "be", "a", "bit", "ugly", "and", "since", "it", "s", "miss", "any", "hint", "on", "that", "it", "may", "not", "even", "be", "fully", "legal", "NUMBER", "To", "make", "this", "better", "dehydrated", "should", "query", "boulder", "for", "the", "required", "license", "url", "and", "ask", "the", "user", "to", "set", "this", "URL", "in", "config", "on", "first", "use", "NUMBER", "This", "way", "everything", "can", "still", "be", "fully", "automate", "by", "just", "add", "the", "LICENSE", "variable", "to", "the", "configuration", "file", "but", "for", "normal", "use", "it", "will", "make", "the", "user", "aware", "of", "the", "terms", "of", "service", "NUMBER", "This", "ticket", "replaces", "NUMBER", "and", "NUMBER", "Implemented", "in", "NUMBER", "a", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "cd", "NUMBER", "de", "NUMBER", "d", "NUMBER", "be", "NUMBER", "cf", "NUMBER", "Until", "now", "License", "only", "seems", "to", "be", "verify", "on", "registration", "not", "entirely", "sure", "if", "there", "be", "some", "kind", "of", "account", "update", "for", "future", "license", "change", "I", "ll", "have", "to", "look", "into", "that", "but", "otherwise", "nothing", "be", "required", "to", "be", "change", "NUMBER", "I", "ve", "sign", "the", "latest", "release", "and", "from", "now", "on", "I", "ll", "sign", "all", "my", "commit", "use", "NUMBER", "C", "NUMBER", "F", "NUMBER", "E", "NUMBER", "A", "NUMBER", "E", "NUMBER", "F", "NUMBER", "C", "NUMBER", "DBE", "NUMBER", "CF", "NUMBER", "F", "NUMBER", "but", "I", "can", "t", "promise", "to", "remember", "to", "always", "upload", "a", "signature", "when", "I", "release", "a", "new", "version", "NUMBER", "My", "workflow", "be", "to", "just", "tag", "a", "specific", "commit", "and", "copy", "the", "changelog", "to", "the", "release", "if", "you", "know", "of", "any", "way", "to", "completely", "automate", "this", "I", "m", "open", "for", "suggestions", "NUMBER", "This", "be", "weird", "I", "can", "t", "remember", "fix", "anything", "like", "that", "after", "the", "v", "NUMBER", "release", "do", "you", "know", "which", "commit", "solve", "your", "problem", "Anyway", "NUMBER", "A", "new", "version", "will", "be", "release", "soon", "ish", "I", "m", "get", "back", "into", "the", "mood", "of", "work", "on", "this", "project", "and", "I", "want", "to", "get", "rid", "of", "a", "few", "older", "issue", "first", "NUMBER", "If", "that", "be", "what", "solve", "your", "issue", "you", "may", "run", "into", "trouble", "soon", "the", "only", "change", "with", "that", "be", "that", "it", "skips", "verification", "if", "that", "already", "happened", "for", "each", "altname", "NUMBER", "v", "NUMBER", "release", "Duplicate", "of", "NUMBER", "please", "see", "my", "comments", "in", "that", "thread", "NUMBER", "dehydrated", "be", "already", "in", "the", "debian", "package", "tree", "stretch", "and", "sid", "and", "I", "won", "t", "add", "package", "file", "to", "this", "repository", "thanks", "anyway", "NUMBER", "See", "LINK", "certificate", "config", "NUMBER", "md", "this", "should", "help", "you", "NUMBER", "txr", "NUMBER", "i", "don", "t", "want", "to", "overload", "the", "script", "with", "switches", "i", "think", "that", "just", "makes", "it", "more", "complicated", "to", "use", "Are", "you", "use", "hook", "scripts", "Error", "when", "trying", "to", "get", "nonce", "be", "not", "an", "error", "message", "of", "dehydrated", "but", "after", "just", "googling", "it", "I", "find", "it", "s", "an", "error", "of", "pdns", "client", "NUMBER", "I", "m", "closing", "this", "ticket", "as", "it", "s", "not", "an", "issue", "with", "dehydrated", "itself", "NUMBER", "From", "your", "introduction", "of", "the", "concept", "of", "a", "SERVERROOT", "I", "see", "that", "you", "be", "make", "a", "few", "assumptions", "about", "the", "system", "this", "script", "be", "run", "on", "Has", "a", "Webserver", "run", "reachable", "from", "the", "outside", "Has", "a", "single", "root", "from", "which", "all", "websites", "be", "served", "e", "NUMBER", "g", "NUMBER", "var", "www", "The", "script", "be", "able", "to", "write", "to", "a", "directory", "that", "can", "be", "accessed", "from", "the", "outside", "This", "might", "not", "be", "true", "in", "a", "lot", "of", "cases", "there", "be", "a", "lot", "of", "setups", "with", "distributed", "servers", "and", "central", "certificate", "management", "out", "there", "use", "hook", "scripts", "to", "actually", "deploy", "challenges", "and", "certificates", "WELLKNOWN", "in", "those", "cases", "be", "not", "a", "directory", "that", "be", "directly", "accessible", "over", "the", "internet", "but", "more", "like", "a", "work", "directory", "for", "different", "systems", "NUMBER", "Introducing", "the", "concept", "of", "a", "SERVERROOT", "conflict", "with", "more", "complex", "setups", "so", "this", "be", "not", "good", "for", "this", "script", "also", "it", "introduces", "a", "completely", "unuse", "variable", "to", "the", "config", "file", "which", "doesn", "t", "really", "make", "sense", "NUMBER", "I", "also", "read", "your", "modifications", "to", "the", "documentation", "and", "I", "think", "they", "make", "it", "even", "more", "confusing", "that", "doesn", "t", "really", "help", "NUMBER", "Thank", "you", "for", "trying", "but", "I", "m", "closing", "this", "since", "I", "don", "t", "think", "these", "change", "be", "a", "good", "idea", "NUMBER", "This", "be", "not", "a", "bug", "this", "be", "a", "feature", "LINK", "In", "that", "document", "I", "state", "multiple", "times", "how", "file", "be", "stored", "and", "there", "even", "be", "example", "configuration", "for", "probably", "every", "popular", "webserver", "I", "m", "really", "not", "sure", "what", "else", "I", "can", "do", "NUMBER", "If", "you", "have", "a", "suggestion", "on", "how", "to", "make", "the", "documentation", "better", "feel", "free", "to", "send", "in", "a", "pull", "request", "NUMBER", "This", "normally", "happens", "when", "WELLKNOWN", "isn", "t", "configured", "correctly", "it", "should", "point", "directly", "to", "the", "directory", "you", "be", "serving", "under", "NUMBER", "well", "know", "acme", "challenge", "NUMBER", "There", "also", "can", "t", "be", "a", "timing", "problem", "the", "script", "creates", "the", "file", "before", "the", "checks", "and", "doesn", "t", "remove", "them", "until", "after", "everything", "be", "completed", "NUMBER", "I", "m", "closing", "this", "for", "now", "as", "it", "really", "just", "seems", "to", "be", "a", "configuration", "issue", "NUMBER", "That", "be", "already", "implement", "see", "docs", "examples", "config", "File", "containing", "the", "list", "of", "domains", "to", "request", "certificates", "for", "default", "BASEDIR", "domains", "NUMBER", "txt", "DOMAINS_TXT", "BASEDIR", "domains", "NUMBER", "txt", "If", "you", "want", "to", "select", "by", "CLI", "parameter", "you", "could", "just", "add", "a", "second", "config", "file", "sourcing", "everything", "from", "your", "original", "config", "and", "just", "change", "DOMAINS_TXT", "and", "then", "just", "specify", "the", "path", "to", "the", "alternative", "config", "file", "NUMBER", "e", "NUMBER", "g", "NUMBER", "source", "etc", "dehydrated", "config", "DOMAINS_TXT", "etc", "dehydrated", "domains_route", "NUMBER", "txt", "Another", "option", "would", "be", "to", "call", "dehydrated", "use", "dehydrated", "d", "your", "NUMBER", "domain", "d", "www", "NUMBER", "your", "NUMBER", "domain", "to", "directly", "sign", "certain", "domains", "instead", "of", "use", "domains", "NUMBER", "txt", "for", "that", "NUMBER", "I", "don", "t", "really", "see", "the", "point", "in", "this", "if", "you", "want", "mail", "with", "log", "on", "error", "there", "be", "already", "a", "lot", "of", "tool", "out", "there", "that", "do", "exactly", "this", "e", "NUMBER", "g", "NUMBER", "LINK", "and", "there", "be", "similar", "tool", "that", "will", "look", "for", "certain", "keywords", "in", "the", "output", "NUMBER", "Also", "if", "you", "want", "to", "get", "notified", "on", "change", "certificates", "you", "could", "as", "well", "do", "that", "in", "the", "deploy_cert", "hook", "it", "has", "all", "the", "information", "you", "ll", "probably", "ever", "want", "to", "mail", "to", "yourself", "about", "your", "new", "certificates", "NUMBER", "Most", "of", "the", "time", "it", "s", "better", "to", "have", "multiple", "tool", "each", "doing", "one", "job", "really", "good", "instead", "of", "having", "one", "tool", "that", "do", "everything", "okayish", "NUMBER", "And", "the", "moment", "you", "be", "run", "dehydrated", "in", "cron", "to", "send", "an", "email", "you", "be", "already", "use", "a", "ton", "of", "tool", "each", "one", "doing", "more", "or", "less", "one", "job", "openssl", "curl", "sendmail", "postfix", "crond", "bash", "mktemp", "diffutils", "NUMBER", "NUMBER", "I", "m", "not", "entirely", "sure", "what", "the", "done_dehydrated", "hook", "should", "be", "supposed", "to", "do", "I", "add", "a", "exit_hook", "for", "a", "different", "use", "case", "which", "gets", "executed", "if", "the", "script", "run", "fine", "without", "any", "issue", "be", "that", "what", "you", "want", "I", "mean", "you", "can", "t", "really", "do", "anything", "in", "there", "except", "for", "maybe", "a", "few", "more", "cleanup", "tasks", "if", "it", "be", "call", "you", "basically", "just", "know", "that", "everything", "went", "fine", "but", "you", "already", "know", "that", "because", "the", "exit", "code", "will", "be", "NUMBER", "This", "would", "result", "in", "more", "load", "on", "the", "Let", "s", "Encrypt", "servers", "and", "I", "don", "t", "think", "it", "would", "really", "do", "anything", "good", "for", "you", "NUMBER", "Your", "certificates", "and", "keys", "should", "be", "stored", "in", "a", "secure", "location", "anyway", "so", "it", "wouldn", "t", "make", "much", "of", "a", "difference", "NUMBER", "If", "you", "really", "want", "this", "you", "could", "easily", "create", "a", "hook", "script", "that", "revokes", "old", "certificate", "file", "but", "I", "don", "t", "think", "it", "would", "be", "a", "good", "idea", "as", "a", "main", "feature", "of", "dehydrated", "NUMBER", "Closing", "this", "for", "now", "if", "there", "be", "more", "people", "out", "there", "who", "want", "this", "feel", "free", "to", "comment", "here", "and", "I", "may", "reconsider", "it", "NUMBER", "dehydrated", "doesn", "t", "configure", "your", "webserver", "for", "you", "it", "only", "try", "to", "get", "certificates", "sign", "like", "txr", "NUMBER", "already", "said", "NUMBER", "Duplicate", "of", "NUMBER", "closing", "this", "NUMBER", "Actually", "it", "can", "by", "anywhere", "you", "want", "it", "to", "be", "File", "containing", "the", "list", "of", "domains", "to", "request", "certificates", "for", "default", "BASEDIR", "domains", "NUMBER", "txt", "DOMAINS_TXT", "BASEDIR", "domains", "NUMBER", "txt", "see", "docs", "examples", "config", "Commited", "that", "in", "NUMBER", "eecedc", "NUMBER", "af", "NUMBER", "dc", "NUMBER", "b", "NUMBER", "aa", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "because", "your", "pull", "request", "get", "poisoned", "by", "other", "commit", "NUMBER", "Please", "use", "branch", "for", "pull", "request", "in", "the", "future", "so", "this", "doesn", "t", "happen", "again", "I", "don", "t", "think", "this", "be", "necessary", "CERTDIR", "be", "export", "and", "the", "certificate", "name", "be", "given", "for", "all", "important", "hooks", "so", "you", "could", "easily", "just", "create", "a", "custom", "config", "file", "and", "source", "it", "inside", "your", "hook", "no", "need", "to", "modify", "dehydrated", "for", "this", "and", "I", "think", "it", "s", "actually", "cleaner", "because", "you", "have", "your", "separate", "config", "file", "for", "your", "hook", "script", "NUMBER", "I", "export", "a", "few", "variables", "in", "NUMBER", "d", "NUMBER", "d", "NUMBER", "d", "NUMBER", "b", "NUMBER", "b", "NUMBER", "b", "NUMBER", "deadd", "NUMBER", "d", "NUMBER", "cbe", "NUMBER", "f", "NUMBER", "you", "should", "now", "be", "able", "to", "just", "pull", "them", "from", "the", "environment", "variables", "in", "your", "hooks", "no", "change", "to", "the", "exist", "hooks", "required", "NUMBER", "Commenting", "the", "continue", "line", "would", "completely", "disable", "the", "feature", "to", "skip", "already", "validated", "domains", "I", "m", "work", "on", "a", "fix", "right", "now", "NUMBER", "I", "ve", "merge", "NUMBER", "this", "should", "be", "fix", "now", "NUMBER", "Thanks", "NUMBER", "I", "test", "a", "few", "ways", "of", "checking", "if", "the", "array", "be", "empty", "the", "variables", "be", "undefined", "and", "I", "think", "I", "find", "the", "most", "compatible", "way", "over", "multiple", "version", "of", "bash", "can", "you", "please", "try", "again", "If", "they", "don", "t", "work", "out", "of", "the", "box", "I", "won", "t", "add", "support", "for", "them", "unicode", "be", "hard", "and", "it", "s", "way", "too", "easy", "to", "make", "mistakes", "especially", "when", "systems", "be", "use", "different", "version", "of", "the", "tool", "with", "different", "localization", "NUMBER", "If", "i", "understand", "this", "correctly", "you", "can", "still", "use", "the", "ascii", "punycode", "representation", "of", "the", "domain", "and", "it", "should", "work", "anyway", "NUMBER", "This", "be", "a", "duplicate", "of", "NUMBER", "which", "I", "just", "close", "NUMBER", "See", "LINK", "issuecomment", "NUMBER", "Summary", "Do", "more", "or", "less", "what", "CRCinAU", "said", "I", "just", "add", "a", "new", "hook", "to", "make", "this", "work", "without", "an", "actual", "wrapper", "script", "NUMBER", "a", "NUMBER", "e", "NUMBER", "aafaa", "NUMBER", "b", "NUMBER", "c", "NUMBER", "f", "NUMBER", "ab", "NUMBER", "ca", "NUMBER", "f", "NUMBER", "b", "NUMBER", "feb", "NUMBER", "NUMBER", "Not", "yet", "sorry", "NUMBER", "Well", "this", "be", "a", "bit", "more", "complicated", "to", "fix", "I", "need", "to", "verify", "the", "config", "because", "there", "be", "parameters", "which", "may", "influence", "loading", "of", "additional", "config", "file", "and", "I", "don", "t", "really", "want", "to", "split", "it", "up", "NUMBER", "Since", "the", "additional", "config", "file", "were", "intended", "to", "only", "be", "use", "in", "special", "cases", "I", "still", "see", "the", "requirement", "of", "the", "main", "configuration", "be", "valid", "NUMBER", "You", "can", "use", "deploy_challenge", "and", "clean_challenge", "hooks", "to", "upload", "and", "delete", "challenges", "to", "your", "web", "server", "via", "FTP", "or", "something", "similar", "NUMBER", "I", "don", "t", "think", "it", "s", "worth", "merge", "this", "that", "part", "of", "the", "example", "hook", "script", "should", "be", "write", "a", "lot", "cleaner", "anyway", "like", "use", "a", "case", "statement", "instead", "of", "just", "executing", "whatever", "be", "given", "as", "first", "parameter", "thanks", "anyway", "NUMBER", "Passing", "all", "names", "for", "all", "certificates", "into", "a", "hook", "be", "not", "possible", "with", "the", "way", "this", "script", "be", "currently", "work", "as", "it", "be", "only", "parsing", "stuff", "for", "one", "certificate", "at", "a", "time", "sorry", "NUMBER", "This", "looks", "like", "you", "be", "doing", "a", "redirect", "on", "your", "webserver", "and", "it", "be", "miss", "the", "on", "the", "redirected", "path", "nothing", "to", "do", "with", "this", "script", "or", "Let", "s", "Encrypt", "NUMBER", "cdarken", "you", "can", "clearly", "see", "that", "it", "first", "try", "the", "LINK", "url", "with", "correct", "path", "and", "only", "try", "the", "broken", "path", "afterwards", "and", "that", "only", "happens", "if", "your", "server", "be", "sending", "a", "redirect", "NUMBER", "none", "of", "my", "example", "configs", "do", "redirects", "so", "this", "has", "to", "be", "something", "else", "in", "your", "configuration", "NUMBER", "since", "i", "did", "this", "mistake", "myself", "a", "few", "times", "i", "know", "how", "easy", "it", "be", "to", "make", "check", "use", "curl", "or", "something", "else", "your", "browser", "might", "not", "be", "a", "good", "debugging", "tool", "if", "you", "have", "had", "hsts", "enable", "it", "will", "do", "its", "own", "redirect", "and", "not", "ask", "the", "server", "on", "what", "to", "do", "NUMBER", "Just", "an", "example", "with", "apache", "this", "will", "result", "in", "broken", "urls", "Redirect", "permanent", "LINK", "this", "will", "work", "Redirect", "permanent", "LINK", "The", "out", "parameter", "be", "only", "use", "for", "normal", "operation", "NUMBER", "When", "you", "be", "signing", "a", "CSR", "you", "have", "to", "handle", "everything", "else", "yourself", "the", "script", "only", "do", "the", "validation", "and", "asks", "Let", "s", "Encrypt", "to", "sign", "your", "CSR", "NUMBER", "Duplicate", "of", "quite", "a", "lot", "of", "other", "tickets", "NUMBER", "There", "be", "a", "lot", "of", "reasons", "not", "to", "implement", "this", "If", "Let", "s", "Encrypt", "be", "under", "heavy", "load", "it", "definitively", "won", "t", "help", "if", "tons", "of", "clients", "retry", "and", "retry", "and", "retry", "also", "error", "handle", "in", "bash", "be", "hard", "enough", "retrying", "stuff", "will", "only", "result", "in", "quite", "complicated", "code", "carrying", "failure", "flags", "and", "everything", "NUMBER", "At", "the", "moment", "the", "script", "often", "just", "hardly", "exits", "on", "error", "NUMBER", "What", "I", "will", "implement", "soon", "ish", "Caching", "of", "request", "verifications", "NUMBER", "This", "will", "help", "with", "the", "rate", "limiting", "and", "should", "speed", "things", "up", "if", "you", "really", "wanted", "to", "retry", "run", "the", "script", "NUMBER", "Thanks", "I", "moved", "it", "up", "and", "have", "actually", "rewritten", "it", "to", "give", "a", "bit", "more", "insight", "on", "what", "be", "going", "on", "see", "LINK", "config", "I", "agree", "that", "shellcheck", "be", "useful", "and", "cleaning", "the", "code", "should", "be", "do", "but", "I", "don", "t", "want", "any", "tiny", "false", "positive", "resulting", "in", "test", "fail", "so", "I", "won", "t", "merge", "this", "into", "the", "test", "environment", "NUMBER", "I", "also", "think", "this", "be", "fix", "now", "feel", "free", "to", "comment", "if", "this", "be", "still", "an", "issue", "NUMBER", "Error", "handle", "be", "kinda", "hard", "in", "itself", "and", "at", "least", "for", "me", "even", "harder", "in", "bash", "NUMBER", "So", "unless", "somebody", "starts", "paying", "me", "for", "work", "on", "this", "script", "I", "don", "t", "really", "want", "to", "implement", "retries", "and", "stuff", "sorry", "NUMBER", "But", "I", "just", "implement", "a", "cache", "for", "certificate", "chains", "which", "at", "least", "should", "lower", "the", "amount", "of", "http", "request", "and", "with", "that", "lower", "the", "chance", "of", "one", "of", "them", "fail", "NUMBER", "See", "example", "hook", "script", "section", "deploy_cert", "it", "should", "be", "very", "easy", "to", "just", "cat", "those", "file", "together", "and", "even", "reload", "lighttpd", "when", "it", "s", "do", "NUMBER", "Thanks", "for", "this", "looks", "fine", "to", "me", "but", "I", "want", "to", "do", "some", "test", "on", "FreeBSD", "and", "ZSH", "just", "to", "make", "sure", "it", "works", "but", "this", "will", "definitively", "get", "merge", "Just", "gonna", "merge", "this", "now", "can", "still", "fix", "it", "later", "anyway", "if", "there", "be", "any", "problem", "thanks", "Just", "to", "clarify", "I", "don", "t", "have", "nothing", "specific", "against", "a", "Dockerfile", "although", "in", "this", "case", "I", "really", "don", "t", "see", "the", "point", "of", "run", "a", "simple", "script", "like", "this", "inside", "a", "container", "I", "just", "don", "t", "want", "any", "kind", "of", "packaging", "file", "inside", "this", "repository", "for", "now", "NUMBER", "If", "I", "d", "start", "merge", "stuff", "like", "this", "I", "d", "end", "up", "with", "a", "repository", "with", "Dockerfiles", "Vagrantfiles", "puppet", "playbooks", "chef", "cookbooks", "Debian", "package", "file", "rpm", "package", "file", "PKGBUILD", "for", "archlinux", "ebuild", "file", "for", "gentoo", "lxc", "example", "config", "freebsd", "package", "file", "nixos", "package", "file", "NUMBER", "and", "I", "don", "t", "want", "that", "NUMBER", "Especially", "because", "I", "d", "have", "to", "update", "most", "of", "them", "every", "time", "I", "do", "a", "new", "release", "NUMBER", "Sorry", "but", "I", "don", "t", "really", "see", "the", "point", "in", "doing", "this", "inside", "of", "dehydrated", "this", "could", "easily", "be", "do", "by", "a", "hook", "script", "all", "required", "parameters", "should", "be", "available", "at", "that", "point", "or", "be", "there", "anything", "I", "m", "miss", "about", "this", "Also", "please", "keep", "your", "commit", "cleaner", "in", "the", "current", "state", "I", "would", "not", "want", "to", "merge", "this", "NUMBER", "Not", "sure", "what", "was", "going", "on", "here", "but", "it", "seems", "to", "me", "that", "Let", "s", "Encrypt", "just", "locked", "you", "out", "for", "some", "reason", "this", "doesn", "t", "seem", "to", "have", "anything", "to", "do", "with", "dehydrated", "NUMBER", "There", "already", "be", "a", "package", "in", "the", "Debian", "repository", "LINK", "backports", "letsencrypt", "NUMBER", "sh", "it", "just", "hasn", "t", "be", "renamed", "yet", "NUMBER", "Mh", "I", "don", "t", "think", "this", "has", "a", "good", "place", "in", "this", "script", "so", "I", "m", "closing", "this", "issue", "NUMBER", "What", "will", "be", "come", "hopefully", "kinda", "soonish", "be", "private", "key", "rollover", "for", "use", "with", "HPKP", "would", "this", "maybe", "also", "solve", "the", "problem", "with", "TLSA", "records", "No", "sorry", "I", "don", "t", "want", "this", "in", "this", "repository", "NUMBER", "Feel", "free", "to", "create", "a", "wiki", "page", "on", "how", "to", "use", "Docker", "for", "deploying", "SSL", "certificates", "NUMBER", "Interesting", "I", "ll", "have", "a", "look", "at", "this", "would", "be", "cool", "to", "have", "support", "on", "some", "embedded", "devices", "NUMBER", "I", "just", "push", "a", "few", "change", "and", "dehydrated", "now", "works", "fine", "under", "OpenWrt", "after", "installing", "bash", "openssl", "util", "and", "diffutils", "NUMBER", "Uff", "NUMBER", "support", "for", "linux", "distributions", "from", "the", "stone", "age", "NUMBER", "You", "could", "try", "deleting", "the", "accounts", "directory", "maybe", "there", "just", "be", "a", "broken", "account", "key", "but", "I", "have", "a", "feeling", "that", "if", "this", "one", "line", "results", "in", "a", "problem", "some", "others", "might", "too", "NUMBER", "I", "ll", "leave", "this", "open", "for", "now", "but", "keep", "compatibility", "with", "bash", "version", "from", "probably", "over", "ten", "years", "ago", "be", "definitively", "not", "something", "I", "want", "to", "spend", "too", "much", "time", "on", "NUMBER", "Not", "going", "to", "fix", "this", "sorry", "NUMBER", "I", "d", "suggest", "trying", "to", "update", "your", "version", "of", "Bash", "or", "better", "Update", "your", "whole", "OS", "do", "that", "thing", "even", "get", "security", "update", "anymore", "NUMBER", "Closing", "this", "in", "favor", "of", "NUMBER", "thanks", "anyway", "ixdy", "Mh", "NUMBER", "weird", "NUMBER", "that", "change", "shouldn", "t", "really", "make", "it", "longer", "NUMBER", "if", "any", "it", "should", "be", "shorter", "NUMBER", "What", "OS", "be", "you", "run", "this", "on", "Closing", "this", "ticket", "as", "this", "was", "solve", "by", "revert", "the", "change", "for", "NUMBER", "Thanks", "I", "ll", "let", "these", "slip", "in", "with", "the", "next", "bigger", "change", "to", "the", "README", "NUMBER", "wibimaster", "can", "you", "check", "if", "that", "fix", "your", "problem", "wibimaster", "Since", "you", "be", "doing", "dns", "validation", "the", "temporary", "error", "was", "probably", "because", "the", "dns", "entry", "didn", "t", "propagate", "fast", "enough", "NUMBER", "I", "don", "t", "really", "think", "I", "want", "this", "in", "here", "NUMBER", "Having", "to", "create", "the", "directory", "manually", "or", "by", "Ansible", "Puppet", "whatever", "isn", "t", "really", "much", "work", "doing", "it", "automatically", "just", "add", "unnecessary", "code", "for", "a", "one", "off", "operation", "and", "it", "add", "another", "option", "make", "readability", "of", "the", "usage", "instructions", "a", "bit", "more", "complicated", "NUMBER", "In", "cases", "where", "you", "have", "a", "dynamic", "challenges", "directory", "you", "probably", "have", "something", "for", "generating", "the", "call", "to", "begin", "with", "let", "that", "create", "the", "directories", "NUMBER", "The", "certificates", "generate", "by", "this", "script", "be", "use", "NUMBER", "bit", "RSA", "keys", "by", "default", "the", "NUMBER", "bit", "key", "ist", "the", "root", "CA", "key", "which", "was", "generate", "by", "Let", "s", "Encrypt", "NUMBER", "cpu", "hey", "can", "you", "check", "if", "that", "commit", "fix", "the", "problem", "Commit", "was", "revert", "in", "a", "NUMBER", "a", "NUMBER", "df", "NUMBER", "d", "NUMBER", "d", "NUMBER", "b", "NUMBER", "cfbb", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "because", "of", "problem", "with", "freebsd", "reopening", "this", "ticket", "for", "now", "I", "wasn", "t", "ever", "able", "to", "reproduce", "any", "issue", "with", "this", "myself", "and", "it", "seems", "to", "be", "work", "fine", "NUMBER", "I", "ll", "close", "this", "issue", "until", "I", "have", "a", "reliable", "way", "of", "test", "this", "NUMBER", "For", "the", "seemingly", "very", "rare", "case", "of", "people", "having", "this", "problem", "I", "d", "suggest", "just", "trying", "to", "delete", "the", "key", "in", "question", "or", "better", "send", "it", "to", "me", "for", "test", "of", "course", "only", "if", "there", "isn", "t", "anything", "validated", "with", "that", "yet", "and", "let", "the", "script", "generate", "a", "new", "one", "NUMBER", "People", "can", "try", "the", "staging", "CA", "if", "they", "want", "to", "it", "s", "documented", "in", "docs", "staging", "NUMBER", "md", "LINK", "NUMBER", "I", "don", "t", "want", "to", "always", "have", "to", "configure", "the", "production", "CA", "when", "use", "this", "and", "it", "may", "again", "break", "a", "lot", "of", "setups", "so", "this", "won", "t", "be", "change", "NUMBER", "dehydrated", "boulder", "just", "add", "water", "baam", "NUMBER", "There", "already", "be", "a", "package", "even", "in", "the", "debian", "repository", "LINK", "backports", "letsencrypt", "NUMBER", "sh", "I", "contacted", "one", "of", "the", "package", "maintainers", "about", "renaming", "the", "package", "and", "at", "some", "point", "I", "ll", "probably", "merge", "the", "debian", "control", "rules", "whatever", "file", "into", "this", "repository", "NUMBER", "Thanks", "anyway", "NUMBER", "I", "don", "t", "think", "it", "s", "worth", "the", "trouble", "whoever", "needs", "this", "can", "easily", "build", "a", "simple", "wrapper", "use", "run", "parts", "or", "whatever", "be", "available", "NUMBER", "If", "you", "want", "you", "can", "create", "a", "wiki", "page", "for", "an", "example", "script", "but", "having", "it", "as", "part", "of", "the", "main", "script", "NUMBER", "na", "NUMBER", "The", "conf", "NUMBER", "d", "was", "mainly", "for", "package", "maintainers", "who", "ship", "a", "default", "config", "which", "can", "be", "change", "in", "conf", "NUMBER", "d", "file", "NUMBER", "Yea", "it", "wasn", "t", "really", "necessary", "but", "remove", "it", "now", "would", "also", "be", "bad", "but", "I", "want", "to", "avoid", "add", "more", "things", "that", "aren", "t", "necessary", "NUMBER", "Can", "you", "please", "have", "a", "look", "at", "what", "you", "have", "do", "with", "docs", "hook_chain", "NUMBER", "md", "looks", "like", "you", "duplicate", "some", "of", "the", "text", "NUMBER", "The", "diff", "shows", "that", "you", "readded", "the", "whole", "block", "with", "your", "change", "but", "the", "old", "one", "be", "still", "there", "so", "now", "the", "text", "be", "duplicate", "NUMBER", "The", "commit", "with", "this", "pull", "request", "get", "way", "to", "messed", "up", "NUMBER", "Can", "you", "please", "clean", "up", "your", "commit", "and", "also", "please", "create", "a", "separate", "pullrequest", "for", "the", "second", "hook", "In", "this", "current", "state", "I", "don", "t", "want", "to", "merge", "it", "NUMBER", "Not", "sure", "what", "was", "cause", "this", "closing", "this", "ticket", "since", "it", "seem", "to", "be", "a", "one", "off", "issue", "NUMBER", "Meh", "NUMBER", "Okay", "NUMBER", "Was", "hoping", "to", "get", "some", "stuff", "do", "before", "the", "next", "release", "but", "I", "see", "that", "it", "s", "taking", "too", "long", "NUMBER", "Open", "a", "PR", "I", "ll", "merge", "it", "NUMBER", "Currently", "the", "function", "also", "checks", "for", "some", "parameters", "use", "in", "later", "curl", "calls", "so", "it", "can", "t", "just", "be", "skipped", "NUMBER", "Since", "you", "had", "to", "get", "to", "the", "point", "of", "signing", "a", "certificate", "before", "revoking", "anything", "it", "s", "most", "likely", "you", "have", "a", "valid", "config", "already", "and", "even", "if", "not", "creating", "a", "valid", "config", "be", "so", "easy", "that", "I", "d", "suggest", "just", "doing", "that", "instead", "of", "skipping", "config", "verification", "in", "dehydrated", "NUMBER", "In", "this", "case", "copy", "and", "edit", "your", "openssl", "config", "and", "set", "OPENSSL_CNF", "to", "the", "new", "location", "this", "should", "not", "be", "handle", "by", "dehydrated", "NUMBER", "Hey", "there", "I", "decided", "against", "merge", "implement", "this", "feature", "for", "various", "reasons", "one", "be", "that", "the", "major", "cause", "of", "failure", "will", "be", "Let", "s", "Encrypt", "having", "server", "load", "issue", "where", "thousands", "of", "retrying", "clients", "definitively", "won", "t", "help", "NUMBER", "Instead", "I", "will", "implement", "verification", "caching", "so", "if", "somebody", "really", "wanted", "to", "they", "could", "rerun", "the", "whole", "script", "without", "going", "through", "hundreds", "of", "challenge", "verification", "request", "again", "NUMBER", "I", "agree", "with", "seefood", "retrying", "in", "most", "cases", "wont", "change", "that", "your", "challenge", "be", "invalid", "and", "this", "may", "only", "lead", "to", "more", "load", "on", "the", "letsencrypt", "servers", "maybe", "even", "resulting", "in", "more", "invalid", "challenges", "because", "of", "overload", "If", "you", "have", "a", "special", "case", "where", "you", "_know_", "that", "your", "challenge", "will", "take", "some", "time", "to", "be", "available", "you", "can", "always", "add", "a", "hook", "script", "which", "waits", "for", "the", "challenge", "to", "be", "seen", "before", "letting", "the", "script", "continue", "NUMBER", "Normally", "you", "would", "do", "this", "in", "the", "deploy_challenge", "hook", "which", "can", "be", "use", "to", "deploy", "to", "DNS", "other", "Webservers", "or", "CDNs", "and", "whatever", "be", "in", "use", "and", "this", "be", "also", "the", "place", "for", "waiting", "until", "a", "local", "deployment", "has", "finished", "before", "letting", "the", "script", "talk", "to", "letsencrypt", "for", "verification", "NUMBER", "Maybe", "parsing", "the", "error", "message", "and", "looking", "for", "indications", "for", "a", "timeout", "may", "be", "a", "possibility", "also", "local", "caching", "for", "already", "do", "validations", "should", "be", "possible", "and", "be", "already", "something", "in", "my", "todo", "so", "rerunning", "the", "script", "won", "t", "add", "additional", "overload", "for", "subdomains", "in", "the", "future", "NUMBER", "Also", "I", "won", "t", "merge", "your", "commit", "in", "this", "form", "because", "you", "be", "duplicating", "a", "lot", "of", "code", "and", "you", "put", "your", "domain", "name", "in", "the", "middle", "of", "the", "script", "NUMBER", "extremeshok", "sorry", "i", "still", "think", "that", "it", "be", "your", "or", "your", "systems", "responsiblity", "to", "know", "when", "the", "deployment", "of", "file", "to", "your", "servers", "has", "happened", "NUMBER", "if", "you", "have", "no", "way", "of", "knowing", "if", "your", "deployments", "finished", "something", "else", "in", "your", "network", "needs", "fix", "NUMBER", "i", "agree", "that", "in", "some", "situations", "there", "should", "be", "retries", "e", "NUMBER", "g", "NUMBER", "on", "timeouts", "but", "if", "you", "have", "a", "NUMBER", "because", "your", "file", "isn", "t", "available", "yet", "that", "be", "your", "problem", "and", "you", "should", "handle", "that", "before", "letting", "the", "script", "and", "with", "that", "the", "verification", "continue", "NUMBER", "extremeshok", "ok", "then", "we", "be", "on", "the", "same", "point", "should", "retry", "on", "timeouts", "NUMBER", "there", "needs", "to", "be", "code", "that", "checks", "for", "the", "actual", "error", "that", "happened", "parsing", "error", "message", "and", "reading", "curls", "return", "code", "i", "don", "t", "want", "the", "script", "to", "retry", "on", "user", "error", "NUMBER", "I", "don", "t", "know", "what", "exactly", "you", "want", "the", "deploy_challenge", "and", "clean_challenge", "hooks", "would", "be", "the", "ideal", "place", "for", "starting", "and", "stopping", "a", "web", "server", "as", "they", "be", "really", "only", "call", "when", "there", "be", "work", "to", "do", "and", "they", "be", "always", "call", "in", "that", "case", "only", "exception", "be", "on", "error", "in", "the", "communication", "with", "Let", "s", "Encrypt", "and", "there", "be", "a", "different", "hook", "for", "that", "see", "request_failure", "NUMBER", "What", "you", "could", "also", "do", "to", "maybe", "spare", "some", "start", "stop", "cycles", "be", "to", "just", "start", "the", "server", "in", "the", "deploy_challenge", "hook", "if", "it", "s", "not", "run", "yet", "and", "just", "always", "stop", "it", "after", "dehydrated", "did", "its", "job", "NUMBER", "And", "just", "to", "make", "this", "clear", "For", "me", "use", "a", "wrapper", "script", "be", "not", "a", "workaround", "it", "s", "more", "or", "less", "the", "intended", "usage", "of", "this", "tool", "that", "be", "one", "of", "the", "reasons", "why", "there", "be", "so", "many", "options", "on", "this", "script", "hooks", "should", "only", "be", "for", "things", "that", "can", "t", "easily", "be", "solve", "in", "a", "different", "clean", "way", "NUMBER", "to", "kn", "thanks", "this", "should", "be", "fix", "now", "to", "kn", "i", "did", "unterstand", "that", "i", "was", "able", "to", "reproduce", "it", "use", "mawk", "i", "change", "how", "awk", "be", "use", "in", "this", "case", "and", "it", "should", "work", "with", "mawk", "now", "too", "please", "test", "the", "change", "i", "made", "in", "NUMBER", "d", "NUMBER", "d", "NUMBER", "c", "NUMBER", "f", "NUMBER", "a", "NUMBER", "dbd", "NUMBER", "de", "NUMBER", "cd", "NUMBER", "f", "NUMBER", "ba", "NUMBER", "be", "NUMBER", "dbf", "going", "to", "change", "this", "to", "automatically", "detect", "license", "agreement", "url", "in", "the", "future", "but", "thanks", "anyway", "There", "be", "still", "a", "few", "things", "that", "I", "see", "as", "important", "for", "the", "next", "release", "so", "NUMBER", "sorry", "but", "this", "has", "to", "wait", "NUMBER", "Packagers", "can", "cherrypick", "this", "commit", "and", "most", "people", "use", "a", "fix", "commit", "id", "or", "just", "master", "anyway", "NUMBER", "I", "think", "this", "warning", "should", "exist", "and", "be", "big", "people", "should", "at", "least", "know", "that", "there", "be", "a", "config", "and", "maybe", "set", "a", "few", "important", "parameters", "so", "future", "update", "don", "t", "break", "stuff", "if", "defaults", "ever", "change", "again", "NUMBER", "Making", "it", "smaller", "like", "this", "makes", "it", "too", "easy", "to", "ignore", "NUMBER", "Not", "a", "problem", "of", "this", "script", "NUMBER", "my", "guess", "dns", "didn", "t", "have", "enough", "time", "to", "update", "NUMBER", "Closing", "in", "favor", "of", "NUMBER", "thanks", "for", "your", "hints", "NUMBER", "Yup", "I", "just", "push", "the", "commit", "update", "the", "license", "agreement", "should", "work", "now", "NUMBER", "The", "comment", "be", "obsolete", "since", "letsencrypt", "NUMBER", "sh", "now", "support", "multiple", "accounts", "NUMBER", "Removed", "in", "ca", "NUMBER", "c", "NUMBER", "Thanks", "NUMBER", "I", "just", "implement", "register", "in", "NUMBER", "a", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "cd", "NUMBER", "de", "NUMBER", "d", "NUMBER", "be", "NUMBER", "cf", "NUMBER", "letsencrypt", "NUMBER", "sh", "mainly", "doesn", "t", "allow", "parallel", "calling", "because", "it", "s", "a", "lot", "easier", "to", "just", "stop", "if", "another", "instance", "in", "general", "be", "run", "than", "to", "check", "if", "another", "instance", "be", "run", "that", "be", "trying", "to", "modify", "the", "same", "file", "account", "key", "generation", "registration", "private", "key", "re", "generation", "csr", "generation", "storing", "of", "new", "certificates", "moving", "of", "old", "file", "to", "archive", "hook", "stuff", "NUMBER", "a", "lot", "of", "locations", "in", "the", "script", "where", "file", "be", "write", "or", "read", "I", "add", "an", "option", "in", "bd", "NUMBER", "cc", "NUMBER", "b", "to", "disable", "locks", "completely", "be", "careful", "when", "use", "this", "NUMBER", "Bad", "idea", "to", "make", "it", "more", "open", "by", "default", "NUMBER", "Since", "config", "be", "sourced", "you", "should", "in", "theory", "be", "able", "to", "just", "redefine", "umask", "in", "your", "config", "file", "NUMBER", "Didn", "t", "try", "it", "but", "it", "should", "work", "NUMBER", "Interesting", "thing", "be", "that", "I", "can", "t", "yet", "push", "an", "update", "with", "the", "new", "agreement", "as", "boulder", "doesn", "t", "accept", "a", "registration", "with", "that", "url", "NUMBER", "Also", "this", "will", "lead", "to", "another", "wave", "of", "stupid", "issue", "letsencrypt", "NUMBER", "sh", "be", "not", "work", "did", "you", "try", "update", "oh", "now", "it", "works", "NUMBER", "meh", "NUMBER", "thx", "Yea", "everything", "that", "has", "to", "do", "with", "rolling", "out", "these", "challenges", "should", "be", "do", "in", "the", "hook", "script", "even", "the", "waiting", "for", "DNS", "update", "NUMBER", "There", "be", "way", "to", "many", "different", "setups", "out", "there", "to", "do", "this", "cleanly", "within", "letsencrypt", "NUMBER", "sh", "NUMBER", "Closing", "this", "issue", "NUMBER", "This", "feature", "be", "now", "implement", "thanks", "to", "lukavia", "Since", "the", "revoke", "command", "can", "also", "be", "use", "with", "certificates", "that", "have", "be", "install", "somewhere", "else", "or", "certificates", "that", "have", "be", "generate", "use", "the", "signcsr", "command", "it", "would", "be", "a", "bit", "complicated", "to", "do", "this", "and", "in", "some", "rare", "cases", "it", "may", "even", "break", "something", "NUMBER", "Also", "I", "don", "t", "really", "see", "a", "requirement", "for", "this", "if", "you", "be", "revoking", "cert", "NUMBER", "pem", "and", "run", "the", "script", "again", "it", "will", "notice", "the", "cert", "miss", "will", "sign", "it", "again", "and", "will", "rotate", "all", "other", "file", "as", "well", "NUMBER", "Yes", "this", "be", "because", "the", "error", "message", "isn", "t", "yet", "parsed", "in", "any", "way", "and", "without", "any", "knowledge", "on", "why", "revocation", "fail", "it", "doesn", "t", "make", "sense", "to", "move", "certificates", "around", "NUMBER", "Should", "be", "next", "to", "the", "account", "key", "in", "the", "accounts", "directory", "NUMBER", "LINK", "L", "NUMBER", "L", "NUMBER", "Please", "keep", "in", "mind", "that", "the", "json", "file", "only", "gets", "generate", "on", "registration", "NUMBER", "If", "you", "already", "had", "an", "account", "key", "it", "can", "t", "generate", "the", "json", "file", "NUMBER", "I", "m", "not", "really", "sure", "how", "this", "should", "work", "but", "as", "an", "alternative", "there", "now", "be", "per", "certificate", "configuration", "file", "and", "you", "can", "set", "different", "hook", "scripts", "for", "some", "domains", "this", "should", "open", "up", "a", "lot", "more", "flexibility", "in", "what", "can", "be", "do", "with", "those", "hooks", "everything", "else", "should", "easily", "be", "do", "based", "on", "that", "change", "NUMBER", "LINK", "certificate", "config", "NUMBER", "md", "normally", "nginxs", "master", "process", "be", "run", "with", "root", "privileges", "and", "be", "able", "to", "bind", "to", "privileged", "ports", "TAG", "BASEDIR", "certs", "DOMAIN", "combined", "NUMBER", "pem", "domenpk", "and", "then", "you", "be", "miss", "the", "chain", "certificates", "which", "be", "important", "too", "_", "\u30c4", "_", "Interesting", "NUMBER", "don", "t", "even", "want", "to", "know", "how", "it", "came", "to", "this", "NUMBER", "Anyway", "with", "hooks", "this", "can", "easily", "be", "do", "The", "hook", "script", "gets", "call", "with", "a", "parameter", "which", "tells", "it", "what", "to", "do", "see", "LINK", "With", "that", "I", "don", "t", "see", "any", "reason", "why", "to", "make", "this", "script", "more", "complicated", "with", "dozens", "of", "hook", "parameters", "for", "any", "case", "where", "a", "hook", "could", "be", "call", "NUMBER", "This", "be", "a", "problem", "with", "your", "hook", "script", "and", "not", "with", "letsencrypt", "NUMBER", "sh", "NUMBER", "I", "don", "t", "maintain", "any", "hook", "scripts", "NUMBER", "I", "agree", "that", "documentation", "may", "be", "a", "bit", "confusing", "I", "ll", "have", "to", "work", "on", "that", "NUMBER", "For", "now", "I", "hope", "this", "be", "easy", "to", "understand", "Let", "s", "say", "you", "have", "a", "page", "LINK", "NUMBER", "In", "that", "case", "the", "ACME", "server", "will", "look", "under", "LINK", "know", "acme", "challenge", "NUMBER", "for", "challenge", "responses", "NUMBER", "If", "you", "have", "a", "simple", "setup", "with", "basically", "just", "one", "webpage", "you", "could", "do", "something", "like", "WELLKNOWN", "var", "www", "NUMBER", "well", "know", "acme", "challenge", "so", "letsencrypt", "NUMBER", "sh", "will", "store", "the", "challenge", "responses", "directly", "in", "that", "directory", "NUMBER", "If", "you", "have", "a", "more", "complicated", "setup", "it", "s", "easier", "to", "add", "an", "Alias", "or", "location", "or", "whatever", "part", "to", "your", "webserver", "config", "telling", "it", "to", "serve", "NUMBER", "well", "know", "acme", "challenge", "on", "your", "domain", "from", "a", "different", "directory", "NUMBER", "With", "that", "in", "mind", "you", "d", "probably", "do", "something", "like", "location", "NUMBER", "well", "know", "acme", "challenge", "alias", "var", "www", "letsencrypt", "and", "in", "that", "case", "you", "obviously", "don", "t", "need", "to", "add", "the", "NUMBER", "well", "know", "NUMBER", "part", "to", "your", "actual", "path", "NUMBER", "As", "i", "already", "said", "there", "be", "some", "work", "to", "be", "do", "about", "documentation", "NUMBER", "If", "you", "use", "the", "simple", "approach", "I", "explained", "in", "my", "last", "response", "you", "ll", "have", "to", "set", "WELLKNOWN", "var", "www", "NUMBER", "well", "know", "acme", "challenge", "and", "it", "will", "create", "file", "like", "var", "www", "NUMBER", "well", "know", "acme", "challenge", "TOKEN", "that", "can", "then", "be", "served", "as", "LINK", "know", "acme", "challenge", "TOKEN", "NUMBER", "If", "you", "define", "an", "alias", "you", "ll", "have", "WELLKNOWN", "var", "www", "letsencrypt", "with", "var", "www", "letsencrypt", "TOKEN", "and", "still", "everything", "served", "as", "LINK", "know", "acme", "challenge", "TOKEN", "NUMBER", "mortenf", "since", "you", "shouldn", "t", "expose", "your", "basedir", "to", "the", "web", "anyway", "this", "shouldn", "t", "make", "much", "of", "a", "difference", "NUMBER", "i", "think", "i", "ll", "change", "the", "default", "value", "to", "something", "completely", "different", "to", "make", "this", "a", "bit", "clearer", "NUMBER", "pgnd", "this", "syntax", "be", "not", "exactly", "stable", "and", "not", "defined", "by", "acme", "this", "be", "custom", "to", "this", "script", "only", "NUMBER", "if", "it", "change", "in", "the", "future", "i", "ll", "add", "an", "entry", "to", "the", "changelog", "NUMBER", "closing", "this", "issue", "as", "your", "problem", "seems", "to", "be", "solve", "by", "use", "HOOK_CHAIN", "NUMBER", "pgnd", "i", "actually", "don", "t", "know", "how", "the", "official", "client", "works", "or", "be", "supposed", "to", "work", "but", "from", "what", "i", "read", "on", "irc", "it", "seems", "that", "it", "just", "prints", "instructions", "Write", "your", "own", "hook", "If", "they", "have", "an", "API", "it", "shouldn", "t", "be", "too", "hard", "NUMBER", "The", "hook", "system", "be", "meant", "to", "be", "write", "by", "others", "so", "letsencrypt", "NUMBER", "sh", "can", "become", "compatible", "with", "a", "whole", "lot", "of", "custom", "setups", "I", "didn", "t", "write", "any", "of", "those", "hook", "scripts", "mention", "in", "the", "wiki", "NUMBER", "Hey", "NUMBER", "First", "Please", "don", "t", "call", "my", "script", "le", "NUMBER", "sh", "that", "be", "the", "name", "of", "a", "completely", "different", "script", "NUMBER", "This", "probably", "be", "a", "timing", "issue", "NUMBER", "Shortly", "after", "sending", "the", "dns", "update", "the", "dns", "server", "might", "not", "yet", "deliver", "the", "response", "there", "can", "be", "a", "short", "window", "with", "invalid", "or", "no", "response", "especially", "if", "you", "use", "the", "dns", "api", "of", "some", "dns", "provider", "NUMBER", "The", "read", "s", "r", "e", "TAG", "ipartola", "if", "you", "want", "to", "write", "better", "test", "for", "letsencrypt", "NUMBER", "sh", "feel", "free", "to", "do", "so", "NUMBER", "currently", "there", "be", "only", "a", "few", "test", "which", "be", "basically", "just", "enough", "to", "show", "if", "something", "went", "horribly", "wrong", "in", "a", "commit", "NUMBER", "btw", "NUMBER", "this", "already", "be", "release", "as", "a", "package", "in", "freebsd", "and", "now", "in", "opensuse", "that", "should", "have", "be", "alias", "to", "begin", "with", "fix", "it", "thanks", "NUMBER", "pwallner", "as", "Lukas", "NUMBER", "said", "the", "contact", "email", "be", "only", "use", "for", "registration", "and", "reminders", "from", "Let", "s", "Encrypt", "which", "hasn", "t", "directly", "to", "do", "with", "this", "script", "NUMBER", "i", "don", "t", "think", "it", "s", "possible", "to", "include", "that", "email", "in", "your", "certificate", "if", "that", "be", "what", "you", "want", "to", "know", "boulder", "only", "keep", "CN", "NUMBER", "at", "which", "point", "do", "you", "get", "silent", "error", "on", "any", "error", "i", "experience", "i", "always", "get", "the", "message", "printed", "on", "screen", "by", "my", "script", "it", "s", "set", "up", "to", "print", "the", "full", "json", "on", "any", "hard", "error", "Closing", "this", "as", "this", "problem", "should", "actually", "be", "solve", "for", "quite", "a", "while", "now", "NUMBER", "Yes", "you", "should", "be", "able", "to", "use", "the", "HOOK_CHAIN", "config", "option", "like", "welwood", "NUMBER", "suggested", "NUMBER", "I", "tried", "documenting", "this", "feature", "here", "LINK", "_chain", "NUMBER", "md", "duplicate", "see", "NUMBER", "or", "NUMBER", "or", "NUMBER", "or", "NUMBER", "deleting", "account", "key", "solves", "the", "problem", "NUMBER", "RobertSchuster", "great", "you", "get", "this", "solve", "NUMBER", "hoping", "this", "issue", "will", "be", "fully", "solve", "in", "the", "near", "future", "as", "from", "time", "to", "time", "a", "few", "people", "fall", "into", "this", "trap", "it", "actually", "also", "happens", "to", "me", "like", "all", "the", "time", "only", "difference", "be", "that", "i", "already", "know", "how", "to", "fix", "it", "NUMBER", "I", "reran", "the", "test", "and", "everything", "looks", "fine", "NUMBER", "Currently", "don", "t", "really", "have", "the", "time", "to", "look", "over", "bigger", "change", "so", "that", "ll", "have", "to", "wait", "until", "next", "week", "but", "thanks", "for", "bringing", "this", "up", "Hey", "I", "just", "had", "a", "look", "at", "your", "change", "NUMBER", "The", "only", "issue", "I", "see", "be", "that", "your", "sed", "based", "replacements", "return", "the", "whole", "input", "when", "there", "be", "no", "match", "\u039e", "serenity", "echo", "bla", "test", "challenges", "sed", "s", "NUMBER", "challenges", "NUMBER", "NUMBER", "challenges", "\u039e", "serenity", "echo", "bla", "test", "nochallengesforyou", "sed", "s", "NUMBER", "challenges", "NUMBER", "NUMBER", "bla", "test", "nochallengesforyou", "\u039e", "serenity", "echo", "foo", "bar", "sed", "s", "NUMBER", "foo", "NUMBER", "NUMBER", "bar", "\u039e", "serenity", "echo", "nofoo", "bar", "sed", "s", "NUMBER", "foo", "NUMBER", "NUMBER", "nofoo", "bar", "If", "you", "can", "fix", "this", "issue", "I", "don", "t", "see", "any", "problem", "with", "merge", "it", "NUMBER", "bahamat", "but", "now", "it", "doesn", "t", "return", "anything", "even", "on", "those", "were", "it", "should", "return", "something", "NUMBER", "that", "s", "why", "the", "test", "be", "fail", "NUMBER", "foo", "bar", "should", "return", "bar", "if", "asked", "for", "foo", "nofoo", "bar", "should", "be", "empty", "but", "both", "be", "empty", "which", "be", "understandable", "since", "n", "on", "sed", "disables", "the", "default", "print", "command", "add", "a", "p", "at", "the", "end", "seems", "to", "work", "\u039e", "serenity", "echo", "bla", "test", "challenges", "sed", "n", "s", "NUMBER", "challenges", "NUMBER", "NUMBER", "p", "challenges", "\u039e", "serenity", "echo", "bla", "test", "nochallengesforyou", "sed", "n", "s", "NUMBER", "challenges", "NUMBER", "NUMBER", "p", "\u039e", "serenity", "echo", "foo", "bar", "sed", "n", "s", "NUMBER", "foo", "NUMBER", "NUMBER", "p", "bar", "\u039e", "serenity", "echo", "nofoo", "bar", "sed", "n", "s", "NUMBER", "foo", "NUMBER", "NUMBER", "p", "also", "slightly", "relate", "to", "NUMBER", "You", "should", "be", "able", "to", "just", "set", "normal", "proxy", "environment", "variables", "curl", "should", "see", "and", "use", "them", "NUMBER", "See", "man", "curl", "under", "Environment", "NUMBER", "phaidros", "NUMBER", "you", "can", "configure", "it", "in", "config", "just", "use", "export", "HTTP_PROXY", "NUMBER", "or", "whatever", "in", "config", "NUMBER", "sh", "it", "should", "work", "Mh", "NUMBER", "since", "there", "be", "already", "a", "hook", "for", "successfully", "renewed", "certs", "and", "a", "pull", "request", "for", "unchanged", "ones", "we", "may", "as", "well", "just", "add", "a", "hook", "for", "fail", "renewal", "NUMBER", "With", "that", "hook", "it", "should", "be", "very", "easy", "to", "do", "this", "in", "an", "external", "script", "which", "I", "think", "be", "better", "than", "integrating", "it", "into", "the", "main", "script", "trying", "to", "keep", "it", "simple", "to", "reduce", "chance", "of", "bug", "NUMBER", "I", "m", "closing", "this", "since", "it", "s", "a", "lot", "better", "to", "do", "this", "with", "hooks", "NUMBER", "Feel", "free", "to", "open", "issue", "for", "miss", "hooks", "but", "please", "take", "a", "look", "at", "currently", "open", "pull", "request", "first", "since", "there", "be", "a", "few", "new", "hooks", "will", "soon", "be", "merge", "NUMBER", "bviktor", "yes", "if", "you", "want", "to", "be", "notified", "when", "a", "certificate", "change", "you", "d", "add", "your", "code", "as", "a", "deploy_cert", "hook", "NUMBER", "i", "d", "also", "suggest", "use", "something", "like", "cronwrap", "so", "you", "can", "catch", "any", "kind", "of", "error", "when", "use", "the", "script", "as", "a", "cronjob", "NUMBER", "bviktor", "read", "LINK", "Can", "you", "change", "it", "to", "just", "say", "Skipping", "renew", "Otherwise", "it", "s", "fine", "NUMBER", "Actually", "I", "think", "we", "should", "reduce", "this", "to", "just", "the", "timestamp", "argument", "and", "export", "KEY_ALGO", "like", "some", "other", "config", "values", "be", "export", "Export", "some", "environment", "variables", "to", "be", "use", "in", "hook", "script", "export", "WELLKNOWN", "BASEDIR", "CONFIG", "We", "may", "want", "to", "move", "that", "new", "export", "to", "the", "actual", "signing", "loop", "for", "future", "compatiblity", "with", "per", "cert", "configurations", "NUMBER", "timestamp", "be", "now", "a", "parameter", "of", "the", "deploy_cert", "hook", "and", "KEY_ALGO", "be", "export", "as", "environment", "variable", "clydeclements", "do", "thanks", "NUMBER", "Hmpf", "NUMBER", "I", "like", "the", "idea", "but", "this", "should", "only", "continue", "on", "the", "too", "many", "certs", "error", "not", "in", "any", "other", "case", "NUMBER", "Also", "it", "should", "still", "return", "with", "an", "errorcode", "in", "the", "end", "NUMBER", "Merged", "in", "NUMBER", "c", "NUMBER", "d", "NUMBER", "dd", "NUMBER", "abbe", "NUMBER", "e", "NUMBER", "e", "NUMBER", "cad", "NUMBER", "e", "NUMBER", "ca", "and", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "f", "NUMBER", "efd", "NUMBER", "c", "NUMBER", "ab", "NUMBER", "e", "NUMBER", "a", "NUMBER", "b", "NUMBER", "a", "NUMBER", "For", "now", "I", "m", "considering", "this", "as", "experimental", "as", "especially", "with", "hundreds", "of", "domains", "it", "may", "be", "easy", "to", "miss", "an", "error", "NUMBER", "Maybe", "add", "a", "hook", "in", "case", "of", "an", "error", "or", "something", "similar", "would", "be", "nice", "to", "catch", "any", "problem", "NUMBER", "I", "think", "this", "would", "be", "great", "in", "combination", "with", "a", "failed_sign", "hook", "open", "for", "better", "names", "which", "would", "make", "things", "like", "NUMBER", "easier", "NUMBER", "Cyborgscode", "NUMBER", "we", "may", "add", "a", "pre", "sign", "hook", "so", "you", "can", "do", "checks", "in", "a", "hook", "before", "anything", "else", "happens", "this", "won", "t", "become", "a", "part", "of", "letsencrypt", "itself", "NUMBER", "NUMBER", "relate", "to", "NUMBER", "there", "will", "be", "more", "hooks", "make", "this", "easier", "to", "implement", "NUMBER", "yes", "by", "now", "i", "agree", "that", "continuing", "would", "be", "a", "good", "idea", "in", "most", "cases", "NUMBER", "i", "m", "not", "sure", "about", "this", "one", "may", "be", "implement", "at", "a", "later", "point", "abishai", "yea", "this", "be", "a", "know", "issue", "see", "NUMBER", "In", "normal", "operation", "this", "script", "creates", "fullchain", "NUMBER", "pem", "file", "for", "each", "certificate", "containing", "intermediate", "s", "and", "your", "certificate", "NUMBER", "Yea", "for", "the", "signcsr", "command", "this", "be", "actually", "miss", "might", "be", "a", "good", "idea", "to", "add", "that", "in", "there", "too", "NUMBER", "i", "change", "it", "so", "now", "it", "only", "prints", "the", "full", "certificate", "chain", "if", "full", "chain", "fc", "be", "set", "Can", "you", "check", "if", "the", "mention", "commit", "fix", "your", "problem", "onovy", "i", "think", "the", "name", "DOMAIN_FILE", "in", "example", "hook", "may", "be", "a", "bit", "confusing", "and", "i", "think", "this", "be", "going", "to", "have", "problem", "when", "BASEDIR", "has", "spaces", "in", "its", "path", "would", "be", "great", "if", "you", "could", "find", "a", "solution", "for", "that", "but", "otherwise", "i", "think", "it", "s", "fine", "NUMBER", "kroimon", "No", "the", "problem", "be", "that", "you", "may", "have", "stuff", "like", "path", "to", "file", "NUMBER", "pem", "path", "with", "spaces", "file", "NUMBER", "pem", "NUMBER", "As", "parameters", "to", "a", "command", "this", "will", "be", "no", "problem", "shell", "will", "handle", "this", "for", "us", "but", "write", "to", "a", "file", "this", "looks", "like", "path", "to", "file", "NUMBER", "pem", "path", "with", "spaces", "file", "NUMBER", "pem", "which", "will", "basically", "split", "our", "second", "path", "into", "two", "wrong", "paths", "path", "with", "and", "spaces", "file", "NUMBER", "pem", "NUMBER", "kroimon", "that", "may", "work", "it", "s", "unlikely", "that", "quotes", "will", "appear", "in", "the", "actual", "paths", "and", "add", "commas", "it", "would", "become", "a", "csv", "file", "which", "should", "be", "rather", "easy", "to", "parse", "NUMBER", "i", "guess", "i", "ll", "implement", "something", "replacing", "this", "pullrequest", "very", "soon", "since", "i", "need", "something", "like", "this", "myself", "NUMBER", "I", "m", "closing", "this", "since", "I", "think", "that", "this", "be", "actually", "something", "that", "can", "easily", "be", "handle", "outside", "of", "dehydrated", "use", "hooks", "and", "wrappers", "and", "will", "only", "result", "in", "complications", "especially", "with", "per", "certificate", "configuration", "which", "allows", "for", "different", "hook", "scripts", "per", "certificate", "NUMBER", "If", "you", "need", "something", "like", "this", "I", "d", "suggest", "doing", "the", "following", "In", "the", "deploy_cert", "hook", "touch", "a", "file", "e", "NUMBER", "g", "NUMBER", "tmp", "restart_apache", "then", "use", "the", "new", "exit_hook", "hook", "I", "just", "add", "NUMBER", "a", "NUMBER", "e", "NUMBER", "or", "a", "wrapper", "around", "dehydrated", "that", "looks", "for", "this", "file", "reloads", "Apache", "and", "remove", "the", "file", "NUMBER", "You", "can", "do", "a", "lot", "more", "in", "the", "deploy_cert", "hook", "like", "actually", "appending", "domains", "to", "a", "certain", "file", "if", "you", "need", "that", "for", "some", "reason", "NUMBER", "No", "NUMBER", "Especially", "with", "CONTACT_EMAIL", "this", "will", "never", "be", "an", "option", "since", "that", "address", "be", "per", "account", "and", "not", "per", "certificate", "NUMBER", "I", "think", "it", "would", "be", "better", "to", "define", "an", "alias", "instead", "of", "change", "every", "call", "for", "the", "openssl", "binary", "NUMBER", "You", "actually", "should", "be", "able", "to", "do", "that", "in", "your", "config", "file", "without", "any", "change", "to", "the", "script", "itself", "but", "make", "it", "a", "bit", "cleaner", "by", "use", "a", "config", "variable", "would", "totally", "be", "okay", "NUMBER", "Thanks", "Sp", "NUMBER", "l", "NUMBER", "Closing", "this", "pull", "request", "as", "the", "change", "be", "not", "really", "necessary", "NUMBER", "Using", "instead", "of", "because", "be", "a", "shell", "build", "in", "while", "in", "theory", "be", "a", "command", "make", "the", "script", "in", "theory", "a", "bit", "cleaner", "NUMBER", "Using", "var", "instead", "of", "var", "just", "as", "a", "habit", "and", "to", "never", "ever", "run", "into", "any", "problem", "NUMBER", "Also", "it", "feels", "good", "to", "have", "it", "consistent", "NUMBER", "bittorf", "yes", "i", "would", "be", "okay", "with", "that", "if", "you", "can", "work", "out", "the", "other", "stuff", "to", "make", "it", "posix", "compatible", "NUMBER", "I", "m", "closing", "this", "ticket", "now", "NUMBER", "Doesn", "t", "look", "like", "anybody", "be", "work", "on", "this", "and", "I", "don", "t", "really", "have", "a", "personal", "interest", "at", "doing", "this", "migration", "NUMBER", "If", "somebody", "still", "wants", "letsencrypt", "NUMBER", "sh", "to", "be", "POSIX", "sh", "compatible", "please", "feel", "free", "to", "open", "pull", "request", "NUMBER", "mapreri", "it", "s", "not", "really", "required", "in", "config", "but", "it", "also", "doesn", "t", "hurt", "having", "it", "there", "oh", "yea", "spaces", "do", "exist", "i", "always", "forget", "NUMBER", "K", "NUMBER", "rool", "just", "use", "hooks", "cloudflare", "hook", "NUMBER", "py", "add", "a", "shebang", "to", "the", "first", "line", "of", "your", "script", "usr", "bin", "env", "python", "and", "make", "it", "executable", "chmod", "x", "hooks", "cloudflare", "hook", "NUMBER", "py", "NUMBER", "bviktor", "I", "think", "a", "passthrough", "wrapper", "script", "would", "be", "better", "than", "a", "new", "option", "NUMBER", "It", "s", "simple", "it", "doesn", "t", "add", "much", "weight", "and", "it", "can", "handle", "all", "kind", "of", "edgecases", "NUMBER", "Can", "you", "change", "it", "to", "use", "f", "instead", "of", "e", "Then", "I", "ll", "merge", "it", "NUMBER", "Sorry", "I", "don", "t", "want", "any", "package", "manager", "specific", "stuff", "in", "this", "repository", "NUMBER", "I", "m", "not", "sure", "this", "way", "you", "d", "always", "have", "your", "verification", "file", "in", "place", "and", "an", "attacker", "having", "control", "of", "your", "account", "key", "or", "a", "key", "with", "identical", "fingerprint", "if", "that", "be", "possible", "could", "sign", "certificates", "for", "all", "your", "domains", "NUMBER", "There", "were", "already", "issue", "involving", "left", "over", "signatures", "LINK", "Probably", "just", "a", "conceptional", "issue", "and", "nothing", "that", "was", "really", "exploited", "but", "I", "really", "dislike", "that", "it", "would", "have", "worked", "in", "theory", "NUMBER", "Also", "leaking", "private", "keys", "by", "accident", "be", "nothing", "new", "people", "accidentally", "hosted", "private", "keys", "on", "their", "websites", "on", "GitHub", "or", "get", "them", "stolen", "through", "software", "exploits", "NUMBER", "From", "some", "of", "the", "issue", "I", "ve", "read", "on", "this", "repository", "I", "actually", "think", "some", "people", "be", "use", "this", "script", "inside", "of", "var", "www", "letsencrypt", "basically", "having", "their", "private", "key", "a", "web", "server", "configuration", "issue", "apart", "from", "be", "public", "NUMBER", "I", "agree", "that", "it", "would", "look", "cleaner", "and", "be", "a", "lot", "easier", "since", "there", "be", "nothing", "that", "has", "to", "be", "moved", "around", "but", "I", "really", "don", "t", "want", "to", "take", "this", "risk", "NUMBER", "If", "you", "want", "to", "do", "this", "nothing", "stops", "you", "from", "doing", "this", "you", "d", "just", "have", "to", "extract", "your", "fingerprint", "once", "but", "I", "dislike", "this", "as", "a", "feature", "or", "configuration", "suggestion", "for", "this", "script", "NUMBER", "wat", "NUMBER", "I", "recently", "merge", "change", "to", "allow", "chaining", "hooks", "which", "basically", "calls", "all", "the", "hooks", "for", "distributing", "those", "challenges", "first", "before", "talking", "to", "letsencrypt", "NUMBER", "sh", "again", "NUMBER", "The", "hook", "syntax", "change", "a", "bit", "and", "there", "isn", "t", "really", "documentation", "for", "this", "feature", "yet", "but", "basically", "it", "just", "add", "more", "parameters", "to", "the", "deploy_challenge", "hook", "see", "LINK", "L", "NUMBER", "You", "should", "be", "able", "to", "use", "that", "a", "sleep", "in", "your", "hook", "script", "to", "have", "it", "work", "like", "you", "want", "it", "to", "work", "NUMBER", "Yes", "that", "be", "true", "but", "sorry", "won", "t", "change", "that", "would", "require", "too", "many", "change", "NUMBER", "I", "think", "this", "should", "be", "handle", "in", "place", "NUMBER", "Curl", "should", "return", "a", "connection", "problem", "specific", "return", "code", "that", "should", "just", "be", "captured", "in", "http_request", "The", "mention", "commit", "should", "print", "an", "error", "if", "curl", "can", "t", "connect", "to", "the", "server", "instead", "of", "fail", "in", "silence", "NUMBER", "This", "way", "it", "should", "also", "work", "for", "temporary", "connection", "problem", "NUMBER", "I", "be", "against", "change", "the", "return", "code", "as", "NUMBER", "be", "for", "success", "and", "that", "be", "what", "should", "be", "use", "when", "the", "script", "ends", "successfully", "NUMBER", "Some", "people", "wanted", "a", "feature", "that", "only", "checks", "if", "all", "certificates", "be", "still", "valid", "NUMBER", "I", "have", "an", "idea", "on", "how", "to", "implement", "this", "without", "duplicating", "a", "lot", "of", "code", "and", "will", "do", "that", "soon", "NUMBER", "Your", "script", "wasn", "t", "executable", "this", "be", "not", "a", "bug", "in", "letsencrypt", "NUMBER", "sh", "closing", "this", "ticket", "NUMBER", "relate", "to", "NUMBER", "there", "will", "definitively", "be", "a", "feature", "for", "this", "in", "the", "future", "but", "i", "kinda", "want", "to", "just", "move", "them", "to", "some", "kind", "of", "archive", "directory", "and", "not", "delete", "them", "directly", "NUMBER", "I", "ve", "implement", "a", "solution", "in", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "cc", "NUMBER", "f", "NUMBER", "eeecc", "NUMBER", "dbc", "NUMBER", "ffdc", "NUMBER", "You", "should", "be", "able", "to", "do", "that", "inside", "the", "deploy_cert", "hook", "NUMBER", "I", "don", "t", "really", "see", "any", "benefit", "of", "having", "this", "directly", "inside", "of", "this", "script", "NUMBER", "And", "create", "that", "file", "in", "every", "config", "format", "for", "every", "webserver", "out", "there", "No", "thanks", "NUMBER", "The", "config", "file", "format", "for", "every", "webserver", "out", "there", "be", "different", "NUMBER", "If", "this", "would", "be", "a", "feature", "I", "d", "either", "have", "to", "decide", "on", "which", "servers", "to", "support", "or", "support", "them", "all", "NUMBER", "A", "few", "config", "syntax", "examples", "be", "listed", "in", "the", "url", "you", "posted", "in", "the", "first", "message", "of", "this", "conversation", "apache", "configuration", "Header", "set", "public", "key", "pins", "pin", "sha", "NUMBER", "FdFOH", "NUMBER", "lP", "NUMBER", "ipUaas", "NUMBER", "cnj", "NUMBER", "Ifk", "NUMBER", "feECxL", "RGDps", "NUMBER", "otfw", "pin", "sha", "NUMBER", "LeSTjTfnibfKHJmDfIGoWrE", "NUMBER", "JwFWMUy", "NUMBER", "Ft", "NUMBER", "sBTGs", "max", "age", "NUMBER", "includeSubDomains", "nginx", "configuration", "add_header", "public", "key", "pins", "pin", "sha", "NUMBER", "FdFOH", "NUMBER", "lP", "NUMBER", "ipUaas", "NUMBER", "cnj", "NUMBER", "Ifk", "NUMBER", "feECxL", "RGDps", "NUMBER", "otfw", "pin", "sha", "NUMBER", "LeSTjTfnibfKHJmDfIGoWrE", "NUMBER", "JwFWMUy", "NUMBER", "Ft", "NUMBER", "sBTGs", "max", "age", "NUMBER", "includeSubDomains", "h", "NUMBER", "o", "configuration", "header", "NUMBER", "add", "public", "key", "pins", "pin", "sha", "NUMBER", "FdFOH", "NUMBER", "lP", "NUMBER", "ipUaas", "NUMBER", "cnj", "NUMBER", "Ifk", "NUMBER", "feECxL", "RGDps", "NUMBER", "otfw", "pin", "sha", "NUMBER", "LeSTjTfnibfKHJmDfIGoWrE", "NUMBER", "JwFWMUy", "NUMBER", "Ft", "NUMBER", "sBTGs", "max", "age", "NUMBER", "includeSubDomains", "You", "should", "easily", "be", "able", "to", "do", "that", "for", "your", "specific", "webserver", "configuration", "in", "a", "hook", "script", "but", "this", "will", "never", "be", "a", "feature", "of", "this", "script", "NUMBER", "Just", "use", "hook", "scripts", "NUMBER", "doing", "it", "this", "way", "just", "makes", "everything", "a", "lot", "more", "complicated", "NUMBER", "creating", "a", "textfile", "like", "this", "would", "be", "okay", "NUMBER", "on", "the", "deploy_cert", "hook", "i", "d", "then", "like", "to", "just", "have", "the", "timestamp", "add", "so", "that", "it", "can", "be", "use", "for", "future", "features", "and", "we", "don", "t", "need", "to", "add", "more", "options", "all", "the", "time", "NUMBER", "This", "should", "be", "doable", "in", "the", "deploy_cert", "hook", "by", "now", "everything", "that", "be", "needed", "for", "generating", "those", "config", "entries", "be", "export", "and", "there", "even", "be", "support", "for", "key", "rollover", "now", "make", "this", "actually", "useful", "NUMBER", "Certificate", "keys", "be", "per", "certificate", "the", "only", "shared", "part", "be", "the", "account", "key", "NUMBER", "Generating", "entropy", "shouldn", "t", "be", "the", "job", "of", "this", "script", "if", "you", "be", "run", "low", "on", "entropy", "you", "should", "run", "haveged", "or", "configure", "some", "other", "way", "of", "generating", "entropy", "NUMBER", "I", "ll", "have", "a", "look", "at", "that", "problem", "thanks", "for", "report", "NUMBER", "Just", "wondering", "Are", "you", "use", "the", "script", "under", "BSD", "OSX", "stonie", "NUMBER", "i", "didn", "t", "write", "that", "part", "of", "the", "code", "and", "roughly", "reading", "over", "it", "i", "find", "parts", "that", "looked", "like", "they", "might", "be", "incompatible", "with", "bsd", "sed", "that", "s", "why", "i", "asked", "NUMBER", "will", "probably", "have", "to", "test", "with", "both", "bsd", "and", "gnu", "linux", "NUMBER", "Take", "a", "look", "at", "the", "wiki", "LINK", "for", "DNS", "NUMBER", "hooks", "Documentation", "in", "general", "should", "be", "worked", "on", "NUMBER", "domains", "NUMBER", "txt", "be", "search", "for", "in", "BASEDIR", "which", "be", "by", "default", "the", "directory", "with", "your", "config", "file", "naming", "scheme", "be", "a", "bit", "different", "where", "the", "official", "client", "had", "etc", "letsencrypt", "live", "example", "NUMBER", "org", "NUMBER", "this", "script", "uses", "BASEDIR", "certs", "example", "NUMBER", "org", "NUMBER", "NUMBER", "Leaving", "this", "ticket", "open", "as", "a", "reminder", "to", "work", "on", "better", "documentation", "NUMBER", "seefood", "how", "about", "reading", "README", "which", "state", "that", "the", "file", "has", "to", "be", "reachable", "via", "http", "edit", "sorry", "for", "maybe", "sounding", "a", "bit", "agressive", "NUMBER", "i", "m", "just", "slightly", "annoyed", "when", "people", "don", "t", "even", "read", "what", "i", "already", "provide", "as", "documentation", "NUMBER", "seefood", "the", "account", "key", "private_key", "NUMBER", "pem", "outside", "of", "the", "certs", "directory", "has", "to", "be", "registered", "at", "the", "configured", "CA", "and", "that", "happens", "in", "letsencrypt", "NUMBER", "sh", "only", "after", "generating", "that", "key", "NUMBER", "this", "will", "change", "in", "the", "hopefully", "near", "future", "NUMBER", "temporary", "fix", "be", "to", "delete", "the", "old", "account", "key", "and", "let", "letsencrypt", "NUMBER", "sh", "generate", "a", "new", "one", "NUMBER", "up", "to", "now", "i", "didn", "t", "really", "find", "any", "downsides", "to", "just", "generating", "a", "new", "account", "key", "NUMBER", "as", "far", "as", "i", "know", "the", "only", "feature", "depending", "on", "it", "be", "revoking", "of", "a", "certificate", "you", "lost", "the", "key", "for", "NUMBER", "I", "just", "commit", "reorganized", "docs", "add", "a", "tiny", "troubleshooting", "guide", "with", "the", "most", "common", "issue", "and", "add", "a", "get", "start", "section", "to", "readme", "NUMBER", "Definitively", "needs", "more", "work", "but", "I", "think", "it", "s", "a", "good", "starting", "point", "NUMBER", "This", "should", "all", "be", "documented", "now", "finally", "closing", "this", "ticket", "Is", "that", "bad", "in", "any", "way", "I", "think", "the", "correct", "solution", "would", "be", "to", "use", "openssl", "dgst", "sha", "NUMBER", "in", "the", "script", "NUMBER", "openssl", "sha", "seems", "to", "be", "a", "legacy", "command", "NUMBER", "This", "will", "be", "fix", "soon", "NUMBER", "germeier", "the", "wiki", "be", "now", "writable", "again", "if", "you", "want", "you", "can", "add", "some", "examples", "Added", "a", "wiki", "page", "with", "links", "to", "those", "examples", "LINK", "for", "DNS", "NUMBER", "hooks", "This", "be", "relate", "to", "NUMBER", "I", "think", "it", "s", "best", "trying", "to", "get", "this", "script", "somewhat", "posix", "compliant", "as", "this", "way", "it", "should", "work", "in", "quite", "a", "lot", "of", "shells", "NUMBER", "Initial", "zsh", "compatiblity", "was", "add", "in", "da", "NUMBER", "eeda", "NUMBER", "d", "NUMBER", "b", "NUMBER", "a", "NUMBER", "c", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "d", "NUMBER", "e", "NUMBER", "Will", "continue", "work", "on", "compatibility", "with", "some", "other", "shells", "NUMBER", "I", "think", "busybox", "ash", "as", "you", "suggest", "would", "be", "a", "good", "next", "target", "so", "this", "script", "works", "on", "embedded", "systems", "with", "openwrt", "angstrom", "alpine", "etc", "NUMBER", "I", "just", "had", "a", "look", "at", "busybox", "ash", "and", "I", "don", "t", "think", "porting", "this", "script", "be", "worth", "it", "NUMBER", "Ash", "really", "lacks", "a", "lot", "of", "features", "which", "would", "require", "a", "ton", "of", "workarounds", "NUMBER", "I", "m", "closing", "this", "ticket", "now", "since", "there", "already", "be", "support", "for", "at", "least", "one", "other", "shell", "zsh", "and", "I", "guess", "it", "would", "work", "in", "some", "others", "too", "NUMBER", "If", "there", "be", "minor", "issue", "with", "other", "shells", "there", "should", "be", "new", "tickets", "created", "instead", "of", "add", "to", "this", "NUMBER", "Since", "this", "duplicates", "quite", "a", "lot", "of", "code", "I", "don", "t", "want", "to", "merge", "it", "please", "find", "a", "better", "solution", "NUMBER", "merge", "in", "NUMBER", "e", "NUMBER", "f", "NUMBER", "fe", "NUMBER", "ec", "NUMBER", "a", "NUMBER", "f", "NUMBER", "db", "NUMBER", "d", "NUMBER", "d", "I", "don", "t", "really", "like", "this", "it", "looks", "ugly", "but", "up", "to", "now", "this", "be", "the", "best", "solution", "so", "i", "ll", "merge", "it", "NUMBER", "thx", "better", "workaround", "merge", "in", "NUMBER", "I", "think", "CI", "also", "had", "this", "problem", "it", "shows", "a", "timeout", "after", "quite", "a", "lot", "of", "time", "NUMBER", "Can", "t", "merge", "it", "as", "be", "also", "didn", "t", "really", "look", "at", "the", "change", "since", "it", "s", "not", "work", "correctly", "NUMBER", "I", "ll", "still", "have", "to", "look", "at", "it", "hopefully", "will", "get", "around", "to", "it", "this", "weekend", "or", "early", "next", "week", "NUMBER", "I", "don", "t", "really", "like", "this", "shell", "switchie", "thingie", "I", "want", "this", "to", "just", "work", "in", "most", "shells", "but", "I", "see", "that", "at", "least", "some", "of", "your", "commit", "be", "going", "in", "the", "right", "direction", "NUMBER", "I", "really", "dislike", "that", "this", "contains", "so", "much", "more", "than", "just", "make", "it", "compatible", "with", "zsh", "NUMBER", "I", "ll", "manually", "pick", "out", "the", "important", "parts", "for", "now", "the", "rest", "of", "the", "functionality", "may", "be", "add", "later", "NUMBER", "Initial", "zsh", "compatibility", "be", "now", "provide", "since", "da", "NUMBER", "eeda", "NUMBER", "d", "NUMBER", "b", "NUMBER", "a", "NUMBER", "c", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "d", "NUMBER", "e", "NUMBER", "closing", "this", "pullrequest", "as", "I", "don", "t", "want", "that", "automatic", "shell", "selection", "and", "some", "of", "the", "other", "stuff", "was", "already", "fix", "NUMBER", "Sounds", "like", "a", "good", "idea", "NUMBER", "I", "will", "implement", "something", "Having", "output", "that", "shows", "domains", "with", "status", "most", "likely", "in", "form", "of", "domain", "NUMBER", "tld", "valid", "expiring", "expired", "Using", "exit", "level", "NUMBER", "if", "everything", "be", "valid", "and", "nothing", "expiring", "soon", "Using", "exit", "level", "NUMBER", "if", "a", "cert", "be", "expiring", "soon", "Using", "exit", "level", "NUMBER", "if", "something", "actually", "expired", "I", "m", "going", "to", "finally", "spend", "some", "time", "implement", "this", "NUMBER", "Original", "idea", "basically", "still", "stands", "I", "m", "trying", "to", "build", "this", "nagios", "check", "like", "so", "it", "can", "easily", "be", "use", "with", "tons", "of", "monitoring", "suite", "NUMBER", "Any", "further", "suggestions", "It", "would", "be", "nice", "to", "have", "additional", "config", "file", "per", "certificate", "to", "allow", "for", "certificate", "specific", "options", "like", "RENEW_DAYS", "and", "PRIVATE_KEY_RENEW", "NUMBER", "This", "replaces", "issue", "NUMBER", "Yea", "I", "was", "thinking", "to", "allow", "for", "config", "NUMBER", "sh", "next", "to", "the", "certificates", "in", "the", "target", "directory", "NUMBER", "For", "implementation", "I", "guess", "the", "best", "thing", "would", "be", "to", "move", "certificate", "specific", "code", "to", "a", "new", "function", "and", "use", "local", "variables", "but", "this", "has", "to", "be", "implement", "clean", "variables", "should", "never", "be", "carried", "over", "to", "the", "next", "call", "of", "the", "function", "because", "that", "would", "mess", "with", "other", "certificates", "NUMBER", "Yes", "idea", "was", "to", "have", "those", "specific", "configs", "as", "optional", "config", "file", "overriding", "some", "parameters", "for", "a", "single", "certificate", "not", "having", "them", "as", "a", "requirement", "NUMBER", "Well", "you", "could", "always", "use", "symlinks", "to", "have", "a", "shared", "config", "for", "multiple", "certs", "NUMBER", "But", "maybe", "this", "could", "also", "be", "implement", "with", "the", "help", "of", "a", "hook", "script", "so", "that", "people", "could", "script", "this", "NUMBER", "This", "be", "now", "implement", "in", "ec", "NUMBER", "ca", "NUMBER", "e", "NUMBER", "dbcc", "NUMBER", "e", "NUMBER", "cdd", "NUMBER", "bbeb", "NUMBER", "See", "LINK", "certificate", "config", "NUMBER", "md", "for", "more", "information", "You", "can", "use", "hooks", "to", "move", "certificates", "to", "other", "directories", "or", "even", "upload", "them", "to", "other", "servers", "whatever", "you", "need", "NUMBER", "the", "solipsist", "there", "be", "some", "examples", "in", "the", "wiki", "i", "may", "add", "more", "but", "in", "the", "repository", "i", "want", "to", "keep", "the", "hook", "example", "as", "clean", "as", "possible", "I", "actually", "have", "no", "idea", "what", "you", "be", "ask", "for", "NUMBER", "Hooks", "be", "just", "call", "as", "simple", "commands", "in", "the", "script", "with", "all", "data", "pass", "as", "argument", "there", "be", "no", "need", "to", "read", "from", "anywhere", "NUMBER", "I", "see", "what", "you", "mean", "but", "I", "m", "not", "entirely", "sure", "why", "this", "happens", "NUMBER", "I", "ll", "merge", "this", "now", "but", "I", "think", "hooks", "should", "actually", "be", "explained", "in", "their", "own", "readme", "section", "NUMBER", "This", "has", "to", "be", "worked", "on", "NUMBER", "Yea", "maybe", "also", "add", "some", "comments", "explaining", "a", "bit", "when", "a", "hook", "gets", "call", "that", "would", "be", "great", "NUMBER", "I", "find", "it", "really", "hard", "to", "decide", "at", "which", "point", "I", "d", "want", "a", "new", "version", "release", "NUMBER", "Things", "be", "change", "all", "the", "time", "and", "it", "now", "slowly", "starts", "becoming", "a", "bit", "more", "structured", "and", "stable", "but", "i", "still", "don", "t", "feel", "like", "marking", "the", "code", "as", "release", "NUMBER", "At", "some", "point", "I", "may", "give", "it", "a", "version", "number", "but", "at", "the", "moment", "it", "just", "doesn", "t", "feel", "right", "NUMBER", "I", "ve", "just", "release", "version", "NUMBER", "of", "this", "script", "NUMBER", "Thanks", "this", "be", "something", "I", "actually", "wanted", "to", "add", "to", "this", "project", "at", "some", "point", "so", "this", "be", "great", "I", "didn", "t", "yet", "have", "time", "to", "look", "at", "the", "code", "but", "if", "it", "s", "fine", "I", "ll", "merge", "it", "NUMBER", "I", "ll", "try", "to", "do", "that", "tomorrow", "NUMBER", "I", "m", "personally", "use", "location", "NUMBER", "well", "know", "acme", "challenge", "alias", "var", "www", "letsencrypt", "and", "I", "don", "t", "have", "any", "problem", "with", "that", "NUMBER", "Seems", "to", "be", "a", "problem", "with", "your", "configuration", "NUMBER", "yea", "NUMBER", "i", "know", "NUMBER", "i", "kinda", "hate", "change", "paths", "now", "as", "it", "has", "be", "like", "this", "for", "quite", "some", "time", "NUMBER", "but", "i", "guess", "something", "has", "to", "be", "do", "NUMBER", "Before", "creating", "issue", "please", "read", "README", "NUMBER", "md", "NUMBER", "The", "alias", "in", "the", "nginx", "config", "should", "exist", "so", "that", "nginx", "can", "deliver", "the", "challenge", "responses", "NUMBER", "If", "you", "didn", "t", "configure", "it", "properly", "you", "should", "at", "least", "see", "a", "NUMBER", "or", "something", "similar", "in", "your", "webservers", "access", "log", "NUMBER", "Challenge", "responses", "get", "cleaned", "up", "even", "after", "error", "so", "you", "will", "not", "see", "any", "file", "there", "after", "the", "script", "stopped", "NUMBER", "You", "can", "use", "the", "possibility", "to", "configure", "hooks", "to", "upload", "a", "file", "over", "ftp", "or", "something", "else", "but", "you", "ll", "have", "to", "write", "a", "function", "or", "script", "for", "that", "NUMBER", "There", "be", "a", "little", "bit", "more", "information", "about", "how", "to", "use", "hooks", "in", "config", "NUMBER", "sh", "NUMBER", "example", "NUMBER", "Since", "this", "doesn", "t", "seem", "to", "be", "a", "problem", "with", "letsencrypt", "NUMBER", "sh", "I", "ll", "close", "this", "issue", "for", "now", "NUMBER", "Mh", "looks", "like", "your", "sed", "version", "be", "too", "old", "to", "support", "the", "E", "Interpret", "regular", "expressions", "as", "extend", "modern", "regular", "expressions", "rather", "than", "basic", "regular", "expressions", "BRE", "s", "NUMBER", "option", "NUMBER", "I", "add", "that", "option", "to", "the", "scripts", "dependency", "checks", "in", "NUMBER", "ab", "NUMBER", "a", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "b", "NUMBER", "b", "NUMBER", "f", "NUMBER", "f", "NUMBER", "db", "NUMBER", "b", "NUMBER", "Unfortunately", "I", "kinda", "need", "to", "use", "that", "option", "to", "get", "support", "for", "BSD", "and", "GNU", "version", "of", "sed", "at", "the", "same", "time", "without", "duplicate", "code", "all", "over", "the", "place", "NUMBER", "I", "d", "suggest", "get", "a", "newer", "version", "of", "sed", "NUMBER", "About", "the", "curl", "problem", "NUMBER", "I", "don", "t", "really", "understand", "why", "the", "check", "fail", "NUMBER", "Does", "curl", "V", "return", "with", "an", "exit", "code", "NUMBER", "on", "your", "system", "That", "seems", "a", "bit", "odd", "NUMBER", "Exit", "code", "NUMBER", "should", "be", "given", "if", "the", "initialization", "of", "libcurl", "fail", "which", "should", "never", "happen", "on", "just", "ask", "for", "the", "version", "NUMBER", "i", "could", "probably", "build", "a", "workaround", "for", "this", "but", "this", "seems", "weird", "NUMBER", "You", "could", "just", "build", "sed", "from", "source", "place", "it", "anywhere", "you", "like", "and", "set", "the", "PATH", "environment", "variable", "for", "letsencrypt", "NUMBER", "sh", "to", "use", "this", "location", "NUMBER", "sed", "r", "doesn", "t", "work", "on", "BSD", "version", "of", "sed", "while", "sed", "E", "works", "on", "both", "GNU", "and", "BSD", "version", "at", "least", "on", "newer", "version", "of", "both", "NUMBER", "I", "m", "work", "on", "the", "sed", "issue", "about", "the", "curl", "issue", "i", "ll", "see", "later", "NUMBER", "The", "sed", "issue", "should", "be", "fix", "f", "NUMBER", "c", "NUMBER", "d", "NUMBER", "c", "NUMBER", "d", "NUMBER", "e", "NUMBER", "de", "NUMBER", "b", "NUMBER", "ee", "NUMBER", "eaf", "NUMBER", "The", "curl", "issue", "should", "also", "be", "fix", "NUMBER", "af", "NUMBER", "f", "NUMBER", "d", "NUMBER", "e", "NUMBER", "e", "NUMBER", "e", "NUMBER", "f", "NUMBER", "cc", "NUMBER", "ae", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "Moved", "OSTYPE", "check", "was", "executed", "after", "dependency", "checks", "in", "c", "NUMBER", "c", "NUMBER", "ff", "NUMBER", "c", "NUMBER", "e", "NUMBER", "b", "NUMBER", "aa", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "b", "NUMBER", "ef", "NUMBER", "try", "again", "NUMBER", "Yea", "this", "happens", "if", "no", "command", "be", "given", "but", "only", "argument", "e", "NUMBER", "g", "NUMBER", "NUMBER", "letsencrypt", "NUMBER", "sh", "x", "thanks", "NUMBER", "This", "seems", "to", "be", "fix", "by", "now", "script", "now", "exits", "after", "printing", "the", "error", "message", "NUMBER", "Default", "command", "has", "change", "you", "have", "to", "provide", "c", "or", "cron", "to", "actually", "get", "it", "to", "do", "anything", "NUMBER", "Also", "the", "Unknown", "parameter", "detected", "message", "be", "a", "bug", "it", "should", "just", "show", "the", "help", "text", "without", "any", "error", "I", "ll", "fix", "that", "NUMBER", "Yea", "i", "think", "a", "bit", "of", "cleanup", "logic", "would", "be", "nice", "but", "i", "would", "prefer", "to", "only", "delete", "expired", "and", "unlinked", "certificates", "and", "not", "everything", "that", "just", "isn", "t", "in", "use", "anymore", "NUMBER", "Also", "I", "don", "t", "know", "about", "the", "way", "you", "implement", "the", "check", "for", "use", "file", "with", "that", "array", "list", "and", "stuff", "NUMBER", "I", "mean", "I", "guess", "it", "will", "work", "but", "for", "some", "reason", "I", "just", "don", "t", "feel", "comfortable", "with", "it", "near", "my", "kinda", "important", "certificates", "NUMBER", "I", "ve", "implement", "a", "solution", "in", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "cc", "NUMBER", "f", "NUMBER", "eeecc", "NUMBER", "dbc", "NUMBER", "ffdc", "NUMBER", "My", "solution", "moves", "unuse", "file", "to", "the", "new", "archive", "directory", "and", "ignores", "file", "that", "probably", "weren", "t", "created", "by", "the", "script", "itself", "so", "it", "doesn", "t", "accidentally", "delete", "user", "created", "file", "NUMBER", "I", "see", "why", "this", "would", "be", "useful", "but", "it", "seems", "that", "quite", "a", "lot", "would", "have", "to", "be", "write", "differently", "to", "support", "this", "NUMBER", "Didn", "t", "really", "take", "a", "look", "at", "the", "DNS", "verification", "but", "I", "think", "you", "actually", "should", "be", "able", "to", "generate", "your", "challenge", "response", "in", "advance", "and", "just", "add", "it", "as", "some", "kind", "of", "wildcard", "in", "your", "zonefile", "NUMBER", "TerraTech", "if", "you", "use", "HOOK_CHAIN", "yes", "in", "your", "config", "all", "challenge", "deployments", "and", "cleanups", "for", "NUMBER", "certificate", "be", "do", "within", "one", "hook", "call", "each", "and", "this", "should", "be", "relatively", "easy", "to", "parse", "within", "your", "hook", "script", "NUMBER", "see", "docs", "hook_chain", "NUMBER", "md", "LINK", "_chain", "NUMBER", "md", "Yea", "good", "idea", "to", "implement", "this", "but", "i", "don", "t", "like", "the", "hook", "be", "part", "of", "the", "repository", "NUMBER", "Maybe", "we", "should", "add", "a", "section", "to", "the", "wiki", "for", "example", "hooks", "NUMBER", "I", "have", "a", "larger", "set", "of", "change", "i", "ll", "push", "in", "a", "minute", "this", "pull", "request", "will", "probably", "break", "while", "doing", "that", "but", "i", "ll", "have", "a", "look", "at", "manually", "merge", "it", "in", "the", "next", "days", "NUMBER", "On", "the", "rest", "of", "the", "pull", "request", "I", "d", "split", "this", "into", "two", "pull", "request", "or", "at", "least", "commit", "to", "have", "the", "change", "with", "the", "hook", "parameter", "separate", "from", "the", "rest", "also", "I", "d", "change", "test", "for", "the", "challenge", "type", "to", "use", "a", "switch", "statement", "instead", "of", "multiple", "ifs", "but", "otherwise", "it", "looks", "fine", "NUMBER", "Also", "When", "you", "do", "the", "PARAM_HOOK", "thingy", "please", "make", "sure", "that", "it", "works", "with", "the", "new", "load_config", "method", "and", "works", "in", "command_env", "NUMBER", "Really", "FreeBSD", "NUMBER", "NUMBER", "Isn", "t", "that", "completely", "unsupported", "since", "NUMBER", "I", "won", "t", "change", "this", "since", "the", "behaviour", "of", "t", "param", "be", "different", "for", "BSD", "and", "GNU", "mktemp", "on", "BSD", "it", "s", "a", "prefix", "on", "GNU", "it", "s", "a", "template", "and", "it", "would", "really", "over", "complicate", "things", "to", "add", "a", "helper", "function", "just", "for", "support", "ancient", "systems", "NUMBER", "I", "suggest", "you", "write", "a", "simple", "wrapper", "and", "put", "it", "into", "config", "NUMBER", "sh", "which", "gets", "sourced", "by", "letsencrypt", "NUMBER", "sh", "that", "should", "allow", "you", "to", "redefine", "how", "the", "real", "mktemp", "be", "call", "NUMBER", "Looks", "like", "this", "was", "change", "around", "Oct", "NUMBER", "in", "LINK", "so", "probably", "was", "first", "release", "in", "FreeBSD", "NUMBER", "or", "NUMBER", "I", "think", "most", "people", "be", "use", "either", "NUMBER", "or", "have", "already", "update", "to", "FreeBSD", "NUMBER", "but", "if", "more", "people", "report", "this", "problem", "I", "may", "implement", "a", "workaround", "NUMBER", "I", "now", "replaced", "all", "mktemp", "calls", "with", "mktemp", "t", "XXXXXX", "NUMBER", "This", "results", "in", "BSD", "tmpfiles", "to", "have", "a", "XXXXXX", "prefix", "and", "GNU", "tmpfiles", "to", "have", "a", "random", "name", "with", "NUMBER", "characters", "NUMBER", "A", "bit", "weird", "but", "whatever", "it", "shouldn", "t", "cause", "any", "problem", "NUMBER", "morganwdavis", "nope", "this", "option", "will", "stay", "qnap", "users", "will", "have", "to", "look", "for", "workarounds", "NUMBER", "sorry", "Rycochet", "NUMBER", "bittorf", "i", "f", "ng", "hate", "things", "like", "this", "NUMBER", "change", "in", "f", "NUMBER", "c", "NUMBER", "this", "will", "probably", "break", "this", "script", "for", "a", "few", "people", "but", "whatever", "NUMBER", "edit", "thanks", "anyway", "NUMBER", "I", "don", "t", "know", "where", "do", "this", "end", "You", "d", "probably", "also", "need", "a", "privfullchain", "NUMBER", "pem", "or", "something", "NUMBER", "I", "think", "use", "a", "hook", "for", "this", "be", "a", "better", "idea", "than", "make", "this", "part", "of", "the", "script", "NUMBER", "I", "want", "this", "thing", "to", "kinda", "work", "out", "of", "the", "box", "and", "change", "it", "to", "staging", "would", "probably", "confuse", "a", "lot", "of", "users", "why", "their", "new", "certificates", "be", "not", "work", "anymore", "so", "i", "will", "not", "do", "that", "NUMBER", "Sorry", "NUMBER", "This", "should", "be", "fix", "in", "a", "NUMBER", "fe", "NUMBER", "d", "NUMBER", "a", "NUMBER", "b", "NUMBER", "a", "NUMBER", "fac", "NUMBER", "d", "NUMBER", "I", "completely", "remove", "use", "the", "config", "from", "a", "home", "directory", "in", "ff", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "ee", "NUMBER", "d", "NUMBER", "e", "NUMBER", "but", "thanks", "for", "explaining", "the", "workaround", "NUMBER", "Users", "who", "still", "want", "to", "use", "this", "can", "add", "an", "alias", "to", "their", "shells", "config", "to", "call", "the", "script", "with", "config", "path", "to", "config", "NUMBER", "Interesting", "NUMBER", "I", "somehow", "assumed", "this", "to", "be", "a", "builtin", "mh", "NUMBER", "I", "ll", "probably", "just", "replace", "it", "with", "a", "simple", "printf", "statement", "in", "the", "next", "few", "days", "NUMBER", "This", "should", "be", "fix", "in", "NUMBER", "f", "NUMBER", "ea", "NUMBER", "d", "NUMBER", "d", "NUMBER", "fcb", "NUMBER", "a", "NUMBER", "bde", "NUMBER", "eef", "NUMBER", "I", "let", "this", "slip", "in", "with", "NUMBER", "a", "NUMBER", "e", "NUMBER", "b", "NUMBER", "e", "NUMBER", "f", "NUMBER", "dd", "NUMBER", "c", "NUMBER", "f", "NUMBER", "f", "NUMBER", "cb", "NUMBER", "e", "NUMBER", "thanks", "NUMBER", "already", "have", "this", "in", "my", "local", "version", "of", "the", "script", "will", "commit", "push", "soon", "thanks", "anyway", "It", "kinda", "feels", "wrong", "to", "add", "a", "license", "to", "a", "simple", "bash", "script", "also", "I", "can", "t", "decide", "on", "which", "one", "to", "use", "NUMBER", "this", "one", "should", "be", "good", "enough", "Hey", "the", "new", "way", "of", "setting", "default", "parameters", "doesn", "t", "seem", "to", "work", "i", "test", "these", "change", "and", "PRIVATE_KEY", "be", "empty", "as", "set", "in", "the", "beginning", "of", "the", "script", "NUMBER", "Also", "if", "use", "shell", "builtin", "works", "for", "you", "please", "use", "that", "instead", "of", "external", "command", "bin", "NUMBER", "This", "pull", "request", "has", "become", "quite", "dirty", "with", "all", "those", "merge", "commit", "NUMBER", "Some", "parts", "of", "this", "have", "become", "unnecessary", "with", "some", "of", "the", "change", "i", "just", "push", "especially", "setting", "default", "config", "values", "some", "have", "be", "merge", "in", "one", "of", "my", "last", "commit", "and", "I", "ll", "merge", "some", "more", "with", "later", "cleanup", "commit", "so", "i", "ll", "close", "this", "pull", "request", "now", "NUMBER", "I", "don", "t", "think", "this", "has", "a", "place", "inside", "this", "repository", "sorry", "NUMBER", "I", "don", "t", "really", "think", "this", "belongs", "inside", "this", "projects", "README", "file", "the", "nginx", "example", "be", "just", "to", "demonstrate", "basic", "usage", "I", "don", "t", "want", "to", "add", "examples", "for", "every", "webserver", "software", "out", "there", "NUMBER", "thx", "slightly", "modify", "merge", "in", "NUMBER", "ed", "NUMBER", "a", "NUMBER", "efed", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "dbc", "NUMBER", "d", "NUMBER", "text", "Processing", "e", "NUMBER", "e", "NUMBER", "ffd", "NUMBER", "ngrok", "NUMBER", "io", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "domain", "name", "s", "be", "not", "matching", "cert", "names", "e", "NUMBER", "e", "NUMBER", "ffd", "NUMBER", "ngrok", "NUMBER", "io", "given", "names", "e", "NUMBER", "e", "NUMBER", "ffd", "NUMBER", "ngrok", "NUMBER", "io", "forcing", "renew", "slightly", "modify", "version", "merge", "in", "NUMBER", "d", "NUMBER", "c", "NUMBER", "cddd", "NUMBER", "ae", "NUMBER", "c", "NUMBER", "fab", "NUMBER", "dfee", "NUMBER", "e", "NUMBER", "a", "NUMBER", "thanks", "It", "seem", "sane", "for", "me", "to", "automatically", "set", "the", "command", "to", "sign_domains", "with", "domain", "specified", "because", "it", "isn", "t", "use", "anywhere", "else", "but", "I", "guess", "you", "be", "right", "NUMBER", "I", "think", "this", "also", "needs", "to", "be", "change", "a", "little", "bit", "at", "the", "moment", "domain", "example", "NUMBER", "org", "domain", "example", "NUMBER", "net", "would", "result", "in", "a", "single", "certificate", "for", "both", "domains", "would", "be", "great", "if", "we", "could", "fix", "that", "so", "that", "it", "behaves", "the", "same", "per", "domain", "parameter", "as", "it", "do", "per", "line", "in", "domains", "NUMBER", "txt", "NUMBER", "Looks", "like", "it", "would", "leave", "the", "symlink", "dangling", "around", "we", "may", "want", "to", "remove", "that", "after", "renaming", "the", "real", "certificate", "NUMBER", "slightly", "modify", "version", "merge", "in", "c", "NUMBER", "b", "NUMBER", "fca", "NUMBER", "a", "NUMBER", "a", "NUMBER", "b", "NUMBER", "c", "NUMBER", "b", "NUMBER", "f", "NUMBER", "dccd", "NUMBER", "c", "modify", "to", "allow", "links", "with", "absolute", "target", "From", "nginx", "documentation", "A", "special", "wildcard", "name", "in", "the", "form", "NUMBER", "example", "NUMBER", "org", "can", "be", "use", "to", "match", "both", "the", "exact", "name", "example", "NUMBER", "org", "and", "the", "wildcard", "name", "NUMBER", "example", "NUMBER", "org", "NUMBER", "Since", "letsencrypt", "doesn", "t", "provide", "wildcard", "certificates", "yet", "i", "think", "this", "would", "be", "more", "confusing", "than", "helpful", "NUMBER", "I", "think", "it", "s", "more", "confusing", "than", "helpful", "only", "thing", "that", "might", "be", "nice", "would", "be", "a", "syntax", "like", "this", "text", "example", "NUMBER", "org", "www", "wiki", "docs", "NUMBER", "example", "NUMBER", "org", "But", "still", "even", "though", "it", "would", "be", "useful", "I", "think", "it", "s", "harder", "to", "read", "than", "just", "to", "write", "them", "all", "out", "NUMBER", "And", "if", "you", "have", "too", "many", "domains", "for", "one", "certificate", "i", "d", "suggest", "splitting", "it", "into", "multiple", "certificates", "anyway", "NUMBER", "so", "yea", "NUMBER", "dunno", "NUMBER", "Edit", "change", "example", "to", "be", "more", "like", "bash", "syntax", "and", "not", "like", "a", "regex", "this", "actually", "made", "it", "a", "lot", "more", "readable", "I", "may", "actually", "implement", "this", "NUMBER", "I", "m", "not", "sure", "if", "I", "want", "this", "on", "the", "first", "parameter", "since", "that", "be", "use", "as", "path", "for", "the", "certificate", "and", "may", "result", "in", "some", "problem", "Defaulting", "to", "generic", "domain", "be", "a", "bad", "idea", "since", "there", "could", "be", "multiple", "certificates", "with", "very", "similar", "domains", "and", "that", "could", "result", "in", "a", "conflict", "NUMBER", "Using", "the", "first", "generate", "value", "may", "be", "an", "option", "but", "I", "ll", "have", "to", "see", "how", "to", "implement", "this", "NUMBER", "Parsing", "of", "domains", "NUMBER", "txt", "will", "be", "reimplemented", "at", "some", "point", "in", "time", "anyway", "because", "of", "NUMBER", "i", "kinda", "fix", "this", "by", "remove", "the", "functionality", "to", "automatically", "create", "the", "directory", "in", "NUMBER", "a", "NUMBER", "d", "NUMBER", "efcfda", "NUMBER", "e", "NUMBER", "f", "NUMBER", "a", "NUMBER", "a", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "since", "the", "default", "path", "be", "useless", "anyway", "i", "think", "this", "be", "better", "for", "now", "may", "reimplement", "this", "when", "NUMBER", "be", "do", "NUMBER", "In", "NUMBER", "a", "NUMBER", "b", "NUMBER", "edcbc", "NUMBER", "eeeeb", "NUMBER", "c", "NUMBER", "bc", "NUMBER", "e", "I", "to", "get", "all", "error", "message", "to", "stderr", "so", "in", "theory", "you", "could", "just", "pipe", "stdout", "to", "dev", "null", "or", "something", "and", "would", "still", "get", "message", "on", "error", "NUMBER", "I", "ll", "leave", "this", "ticket", "open", "since", "I", "think", "quiet", "q", "and", "verbose", "v", "options", "would", "be", "nice", "to", "have", "NUMBER", "germeier", "i", "was", "thinking", "more", "about", "_debug", "_info", "_warn", "_error", "function", "so", "it", "s", "a", "bit", "more", "readable", "than", "msg", "NUMBER", "whatever", "those", "can", "also", "handle", "write", "to", "a", "logfile", "or", "whatever", "and", "maybe", "should", "also", "format", "output", "so", "that", "every", "line", "begins", "with", "date", "WARN", "date", "INFO", "etc", "NUMBER", "and", "i", "change", "default", "command", "to", "help", "in", "NUMBER", "ca", "NUMBER", "dee", "NUMBER", "d", "NUMBER", "edd", "NUMBER", "e", "NUMBER", "aec", "NUMBER", "eab", "NUMBER", "af", "NUMBER", "e", "NUMBER", "I", "don", "t", "want", "to", "implement", "mail", "functionality", "in", "this", "script", "but", "it", "should", "be", "very", "easy", "to", "build", "a", "wrapper", "around", "this", "script", "to", "send", "some", "mails", "either", "by", "parsing", "stdout", "stderr", "or", "by", "checking", "for", "modifications", "in", "certs", "directory", "NUMBER", "Yes", "this", "will", "probably", "be", "do", "at", "some", "point", "NUMBER", "Sure", "you", "can", "have", "a", "go", "at", "this", "I", "don", "t", "think", "anybody", "be", "work", "on", "this", "right", "now", "NUMBER", "This", "whole", "thing", "gets", "a", "lot", "more", "complicated", "than", "i", "first", "thought", "NUMBER", "The", "problem", "be", "that", "normally", "you", "wouldn", "t", "want", "to", "see", "lines", "like", "Processing", "example", "NUMBER", "com", "in", "your", "command", "output", "because", "it", "may", "not", "be", "relevant", "but", "it", "becomes", "relevant", "the", "moment", "something", "happens", "to", "that", "certificate", "NUMBER", "That", "may", "be", "solve", "by", "actually", "including", "the", "certificate", "domain", "names", "in", "every", "single", "line", "of", "output", "but", "that", "would", "make", "this", "whole", "thing", "really", "ugly", "NUMBER", "I", "m", "thinking", "about", "ditching", "the", "idea", "about", "log", "levels", "because", "this", "makes", "it", "way", "to", "complicated", "NUMBER", "There", "be", "already", "exit", "code", "in", "place", "for", "error", "cases", "and", "NUMBER", "should", "be", "returned", "on", "success", "NUMBER", "You", "can", "easily", "set", "up", "a", "cron", "that", "only", "prints", "message", "on", "error", "or", "grep", "for", "renewal", "statements", "or", "whatever", "NUMBER", "It", "s", "hard", "to", "do", "this", "in", "a", "clean", "way", "inside", "the", "script", "itself", "NUMBER", "Yea", "sure", "it", "s", "great", "for", "automation", "if", "it", "would", "have", "that", "but", "on", "the", "other", "hand", "it", "shouldn", "t", "be", "much", "work", "to", "build", "a", "wrapper", "for", "this", "job", "NUMBER", "Maybe", "I", "ll", "add", "a", "wrapper", "to", "the", "repository", "at", "some", "point", "NUMBER", "germeier", "but", "this", "doesn", "t", "solve", "the", "problem", "_info", "Processing", "domain", "while", "having", "_error", "ERROR", "NUMBER", "would", "result", "in", "an", "error", "message", "without", "the", "name", "of", "the", "certificate", "Yes", "buffering", "the", "output", "and", "replaying", "it", "when", "necessary", "would", "work", "but", "it", "seems", "ugly", "rossnick", "quiet", "doesn", "t", "exist", "yet", "NUMBER", "I", "m", "still", "hoping", "on", "solving", "this", "problem", "at", "some", "point", "but", "I", "still", "don", "t", "feel", "comfortable", "with", "any", "of", "the", "suggestions", "I", "get", "so", "far", "NUMBER", "I", "m", "closing", "this", "issue", "NUMBER", "I", "think", "that", "use", "a", "wrapper", "be", "a", "lot", "more", "elegant", "than", "doing", "the", "logging", "inside", "the", "script", "itself", "NUMBER", "The", "parsing", "of", "domains", "NUMBER", "txt", "be", "ugly", "enough", "as", "it", "be", "right", "now", "and", "you", "can", "implement", "that", "behaviour", "for", "yourself", "by", "use", "the", "command", "line", "options", "of", "the", "script", "passing", "domain", "names", "with", "domain", "example", "NUMBER", "com", "www", "NUMBER", "example", "NUMBER", "com", "NUMBER", "Mh", "NUMBER", "tiny", "problem", "with", "this", "BSD", "version", "of", "sed", "behaves", "different", "than", "GNU", "version", "NUMBER", "The", "original", "line", "worked", "fine", "with", "GNU", "sed", "but", "had", "problem", "with", "BSD", "sed", "the", "fix", "line", "be", "exactly", "the", "other", "way", "round", "NUMBER", "Need", "to", "find", "a", "solution", "for", "this", "Oops", "well", "actually", "the", "fix", "version", "actually", "just", "doesn", "t", "work", "at", "all", "it", "doesn", "t", "remove", "the", "whitespace", "it", "just", "pass", "the", "line", "as", "be", "NUMBER", "Just", "to", "clarify", "I", "was", "use", "shasum", "because", "sha", "NUMBER", "sum", "doesn", "t", "seem", "to", "be", "available", "on", "bsd", "systems", "NUMBER", "Now", "i", "switched", "it", "to", "use", "openssl", "for", "generating", "the", "hash", "which", "hopefully", "works", "everywhere", "NUMBER", "I", "don", "t", "want", "to", "merge", "this", "NUMBER", "The", "default", "challenge", "location", "be", "more", "like", "a", "dummy", "location", "that", "can", "be", "use", "with", "the", "configurable", "hook", "script", "NUMBER", "If", "you", "want", "a", "different", "location", "you", "can", "set", "that", "in", "config", "NUMBER", "I", "d", "rather", "change", "the", "README", "to", "include", "instructions", "on", "where", "to", "best", "create", "the", "output", "directory", "how", "to", "configure", "it", "and", "where", "to", "place", "the", "config", "snippet", "in", "nginx", "config", "NUMBER", "Also", "if", "you", "be", "use", "this", "and", "the", "exact", "snippet", "i", "posted", "in", "README", "it", "looks", "like", "you", "have", "your", "private", "key", "very", "near", "to", "a", "directory", "that", "be", "use", "as", "webroot", "NUMBER", "You", "should", "fix", "that", "NUMBER", "Thank", "you", "NUMBER", "I", "agree", "that", "having", "this", "as", "a", "fallback", "seems", "like", "a", "bad", "idea", "NUMBER", "About", "your", "other", "suggestions", "Using", "only", "one", "location", "may", "seem", "like", "a", "good", "idea", "but", "on", "different", "systems", "that", "location", "may", "be", "somewhere", "completely", "different", "NUMBER", "NUMBER", "On", "a", "lot", "of", "BSD", "systems", "user", "install", "software", "be", "located", "in", "usr", "local", "with", "configs", "in", "usr", "local", "etc", "the", "same", "be", "true", "for", "OSX", "NUMBER", "A", "lot", "of", "linux", "based", "systems", "use", "etc", "as", "their", "config", "directory", "NUMBER", "A", "non", "root", "user", "may", "want", "to", "use", "this", "so", "loading", "config", "from", "user", "home", "be", "also", "a", "requirement", "NUMBER", "There", "be", "actually", "users", "managing", "multiple", "installations", "who", "want", "to", "use", "the", "config", "relative", "to", "the", "current", "work", "directory", "NUMBER", "So", "yea", "remove", "this", "code", "to", "load", "the", "config", "from", "multiple", "locations", "use", "first", "find", "would", "break", "some", "users", "workflow", "NUMBER", "To", "make", "it", "a", "bit", "more", "secure", "i", "change", "the", "order", "of", "directories", "to", "check", "in", "NUMBER", "dfb", "NUMBER", "f", "NUMBER", "dc", "NUMBER", "f", "NUMBER", "a", "NUMBER", "a", "NUMBER", "bd", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "c", "NUMBER", "The", "other", "thing", "about", "the", "default", "config", "NUMBER", "yea", "well", "NUMBER", "i", "don", "t", "know", "NUMBER", "I", "don", "t", "think", "this", "will", "ever", "really", "break", "anything", "except", "when", "you", "be", "really", "trying", "to", "and", "since", "it", "s", "all", "relative", "to", "the", "script", "directory", "it", "makes", "test", "this", "software", "out", "really", "easy", "you", "basically", "just", "have", "to", "create", "domains", "NUMBER", "txt", "and", "decide", "on", "a", "delivery", "for", "your", "challenge", "responses", "which", "could", "just", "be", "a", "symlink", "to", "NUMBER", "acme", "challenges", "to", "get", "start", "NUMBER", "Can", "you", "please", "squash", "your", "commit", "and", "fix", "the", "travis", "script", "Otherwise", "it", "s", "okay", "to", "merge", "NUMBER", "Fixed", "with", "NUMBER", "ab", "NUMBER", "a", "NUMBER", "c", "NUMBER", "c", "NUMBER", "b", "NUMBER", "a", "NUMBER", "a", "NUMBER", "f", "NUMBER", "dcafa", "NUMBER", "b", "and", "NUMBER", "de", "NUMBER", "ca", "NUMBER", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "d", "NUMBER", "cffbce", "NUMBER", "e", "NUMBER", "Mh", "NUMBER", "i", "don", "t", "really", "want", "to", "fill", "the", "repo", "with", "hooks", "especially", "since", "the", "script", "be", "not", "yet", "in", "a", "stable", "form", "and", "hook", "handle", "may", "change", "at", "any", "time", "requiring", "to", "update", "all", "example", "hooks", "NUMBER", "Maybe", "later", "we", "can", "add", "an", "example_hooks", "directory", "but", "i", "d", "keep", "it", "to", "NUMBER", "script", "file", "per", "hook", "NUMBER", "Closing", "this", "for", "now", "NUMBER", "If", "you", "want", "to", "feel", "free", "to", "create", "a", "page", "in", "the", "wiki", "of", "this", "repository", "for", "your", "hooks", "NUMBER", "reworked", "this", "a", "tiny", "bit", "and", "merge", "it", "in", "NUMBER", "a", "NUMBER", "c", "NUMBER", "a", "NUMBER", "df", "NUMBER", "a", "NUMBER", "b", "NUMBER", "c", "NUMBER", "i", "think", "it", "needs", "a", "bit", "more", "work", "especially", "on", "detecting", "wrong", "parameters", "but", "it", "seems", "to", "be", "work", "for", "now", "NUMBER", "I", "like", "the", "idea", "but", "i", "don", "t", "like", "the", "format", "NUMBER", "Maybe", "something", "more", "like", "this", "which", "allows", "those", "parameters", "to", "be", "optional", "example", "NUMBER", "org", "www", "NUMBER", "example", "NUMBER", "org", "WEBROOT", "var", "www", "example", "NUMBER", "org", "USERINFO", "apache", "example", "NUMBER", "net", "www", "NUMBER", "example", "NUMBER", "net", "WEBROOT", "var", "www", "example", "NUMBER", "net", "example", "NUMBER", "mx", "www", "NUMBER", "example", "NUMBER", "mx", "USERINFO", "mail", "example", "NUMBER", "com", "www", "NUMBER", "example", "NUMBER", "com", "But", "maybe", "someone", "has", "an", "even", "better", "idea", "NUMBER", "LynxChaus", "from", "reading", "your", "parser", "it", "looks", "like", "it", "just", "support", "things", "like", "VAR", "value", "but", "i", "d", "like", "to", "also", "see", "support", "for", "VAR", "value", "value", "value", "and", "or", "escaped", "values", "like", "VAR", "value", "value", "value", "NUMBER", "I", "think", "splitting", "the", "line", "at", "the", "right", "point", "and", "just", "passing", "it", "through", "declare", "would", "solve", "this", "NUMBER", "This", "actually", "could", "be", "replaced", "by", "putting", "extra", "config", "file", "into", "the", "certificates", "directory", "NUMBER", "This", "may", "actually", "also", "be", "useful", "for", "storing", "per", "certificate", "options", "like", "RENEW_DAYS", "and", "PRIVATE_KEY_RENEW", "NUMBER", "That", "would", "make", "this", "a", "lot", "easier", "to", "implement", "and", "it", "wouldn", "t", "have", "the", "whitespace", "issue", "NUMBER", "Closing", "this", "see", "NUMBER", "for", "a", "replacement", "for", "this", "NUMBER", "Installed", "bash", "on", "pfsense", "get", "this", "message", "screen", "shot", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "NUMBER", "LINK", "NUMBER", "de", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "ab", "f", "NUMBER", "bf", "NUMBER", "bd", "NUMBER", "e", "NUMBER", "png", "I", "tried", "it", "but", "mounting", "doesn", "t", "work", "NUMBER", "No", "idea", "why", "NUMBER", "Closing", "this", "issue", "since", "this", "be", "basically", "just", "pfsense", "not", "support", "bash", "properly", "and", "that", "isn", "t", "our", "problem", "sorry", "NUMBER", "Edit", "I", "tried", "again", "this", "time", "it", "worked", "maybe", "I", "had", "a", "typo", "NUMBER", "So", "this", "be", "not", "even", "a", "pfsense", "bug", "but", "a", "user", "problem", "NUMBER", "If", "this", "script", "be", "use", "inside", "a", "cronjob", "it", "may", "interfere", "with", "a", "user", "use", "the", "script", "so", "i", "think", "it", "would", "be", "a", "good", "idea", "to", "have", "some", "sort", "of", "lock", "file", "to", "make", "sure", "it", "s", "at", "least", "not", "signing", "the", "same", "domain", "at", "the", "same", "time", "or", "maybe", "even", "that", "it", "s", "not", "run", "at", "the", "same", "time", "NUMBER", "merge", "in", "ea", "NUMBER", "b", "NUMBER", "a", "NUMBER", "d", "NUMBER", "d", "NUMBER", "ed", "NUMBER", "b", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "fe", "NUMBER", "c", "NUMBER", "c", "NUMBER", "I", "cleaned", "this", "up", "a", "bit", "and", "merge", "it", "in", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "ede", "NUMBER", "d", "NUMBER", "c", "NUMBER", "b", "NUMBER", "dc", "NUMBER", "a", "NUMBER", "ddaeb", "NUMBER", "yea", "something", "like", "that", "structure", "looks", "fine", "to", "me", "but", "i", "d", "prefer", "the", "usage", "of", "getopts", "instead", "of", "parsing", "commandline", "manually", "would", "suggest", "following", "parameters", "Modes", "text", "c", "cron", "operation", "default", "h", "help", "s", "domain", "force", "sign", "specific", "domain", "r", "path", "to", "cert", "NUMBER", "pem", "revoke", "certificate", "Parameters", "text", "f", "path", "to", "config", "NUMBER", "sh", "use", "specific", "config", "file", "k", "path", "to", "privatekey", "NUMBER", "pem", "use", "specific", "private", "key", "for", "given", "operation", "especially", "useful", "for", "certificate", "revocation", "germeier", "I", "d", "design", "the", "c", "cron", "mode", "to", "be", "basically", "what", "the", "normal", "operation", "be", "right", "now", "but", "only", "renewing", "not", "signing", "new", "certificates", "NUMBER", "Can", "you", "please", "clean", "up", "your", "commit", "this", "be", "horrible", "to", "merge", "NUMBER", "seems", "to", "be", "work", "merge", "in", "NUMBER", "d", "NUMBER", "a", "NUMBER", "dcc", "NUMBER", "d", "NUMBER", "b", "NUMBER", "cb", "NUMBER", "a", "NUMBER", "c", "NUMBER", "c", "NUMBER", "b", "NUMBER", "a", "thanks", "NUMBER", "i", "think", "we", "may", "need", "a", "better", "way", "to", "handle", "script", "argument", "and", "also", "implement", "something", "like", "help", "but", "for", "now", "this", "be", "good", "enough", "Should", "be", "fix", "in", "f", "NUMBER", "dc", "NUMBER", "e", "NUMBER", "b", "NUMBER", "b", "NUMBER", "de", "NUMBER", "f", "NUMBER", "b", "NUMBER", "b", "NUMBER", "ac", "NUMBER", "Revocation", "of", "certificates", "would", "be", "a", "really", "nice", "feature", "to", "have", "NUMBER", "germeier", "If", "you", "want", "you", "can", "give", "it", "a", "try", "shouldn", "t", "be", "too", "hard", "NUMBER", "implement", "with", "NUMBER", "in", "NUMBER", "d", "NUMBER", "a", "NUMBER", "dcc", "NUMBER", "d", "NUMBER", "b", "NUMBER", "cb", "NUMBER", "a", "NUMBER", "c", "NUMBER", "c", "NUMBER", "b", "NUMBER", "a", "Currently", "if", "you", "add", "or", "remove", "a", "domain", "from", "a", "line", "in", "domains", "NUMBER", "txt", "the", "script", "doesn", "t", "recognize", "the", "change", "and", "you", "ll", "just", "keep", "the", "exist", "certificate", "with", "the", "old", "set", "of", "domains", "NUMBER", "This", "should", "be", "improved", "NUMBER", "For", "now", "probably", "the", "easiest", "way", "would", "be", "to", "just", "remove", "the", "symlink", "to", "the", "exist", "certificate", "and", "start", "the", "script", "This", "be", "work", "now", "NUMBER", "add", "this", "in", "NUMBER", "f", "NUMBER", "d", "NUMBER", "ca", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "aa", "NUMBER", "f", "NUMBER", "b", "NUMBER", "ebe", "NUMBER", "with", "autodetection", "of", "default", "config", "location", "merge", "in", "NUMBER", "b", "NUMBER", "db", "NUMBER", "a", "NUMBER", "eab", "NUMBER", "c", "NUMBER", "aa", "NUMBER", "c", "NUMBER", "a", "NUMBER", "ddaa", "merge", "in", "NUMBER", "e", "NUMBER", "adfff", "NUMBER", "c", "NUMBER", "c", "NUMBER", "dbd", "NUMBER", "dec", "NUMBER", "d", "NUMBER", "d", "NUMBER", "I", "remove", "the", "r", "option", "from", "sed", "as", "it", "wasn", "t", "needed", "anyway", "as", "far", "as", "i", "can", "tell", "it", "should", "be", "compatible", "with", "BSD", "sed", "now", "NUMBER", "i", "merge", "this", "in", "a", "slightly", "modify", "version", "in", "b", "NUMBER", "a", "NUMBER", "d", "NUMBER", "a", "NUMBER", "c", "NUMBER", "c", "NUMBER", "aee", "NUMBER", "c", "NUMBER", "f", "NUMBER", "dbf", "merge", "thanks", "merge", "in", "NUMBER", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "a", "NUMBER", "c", "NUMBER", "aed", "NUMBER", "b", "NUMBER", "aca", "NUMBER", "b", "NUMBER", "b", "NUMBER", "Thanks", "i", "merge", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "and", "f", "NUMBER", "a", "NUMBER", "f", "NUMBER", "manually", "NUMBER", "NUMBER", "e", "NUMBER", "d", "seems", "to", "be", "breaking", "functionality", "and", "NUMBER", "f", "NUMBER", "seems", "to", "be", "an", "empty", "commit", "NUMBER", "einervonvielen", "please", "keep", "in", "mind", "that", "this", "be", "not", "designed", "to", "be", "an", "easy", "all", "in", "one", "installer", "and", "authenticator", "tool", "like", "the", "original", "client", "be", "NUMBER", "This", "script", "be", "just", "doing", "the", "bare", "minimum", "NUMBER", "To", "get", "start", "you", "ll", "have", "to", "configure", "your", "webserver", "to", "serve", "the", "challenge", "response", "WELLKNOWN", "directory", "and", "fill", "in", "domains", "NUMBER", "txt", "with", "your", "domains", "NUMBER", "thejustsoul", "i", "think", "the", "email", "address", "be", "designed", "to", "be", "a", "last", "way", "of", "authentication", "for", "recovery", "probably", "if", "you", "loose", "your", "certificates", "including", "private", "account", "key", "and", "want", "to", "revoke", "everything", "but", "i", "m", "not", "sure", "NUMBER", "read", "the", "spec", "it", "s", "probably", "somewhere", "in", "there", "D", "einervonvielen", "NUMBER", "yes", "NUMBER", "no", "you", "don", "t", "have", "to", "move", "it", "there", "you", "can", "configure", "the", "output", "directory", "for", "challenge", "response", "file", "in", "config", "NUMBER", "sh", "e", "NUMBER", "g", "NUMBER", "WELLKNOWN", "var", "www", "letsencrypt", "NUMBER", "well", "know", "acme", "challenge", "Since", "this", "script", "be", "intended", "for", "the", "more", "experienced", "users", "I", "don", "t", "have", "any", "priority", "of", "make", "it", "easier", "to", "use", "even", "though", "it", "s", "actually", "super", "easy", "to", "use", "once", "you", "get", "it", "run", "NUMBER", "I", "ll", "lock", "the", "conversation", "in", "this", "ticket", "until", "there", "be", "progress", "to", "the", "original", "question", "and", "issue", "this", "ticket", "was", "intended", "for", "NUMBER", "thejustsoul", "NUMBER", "how", "to", "revoke", "cert", "For", "one", "domain", "sub", "domain", "NUMBER", "For", "all", "domain", "NUMBER", "For", "now", "syntax", "may", "change", "NUMBER", "letsencrypt", "NUMBER", "sh", "revoke", "path", "to", "cert", "NUMBER", "pem", "Won", "t", "implement", "a", "command", "to", "revoke", "all", "certificates", "at", "once", "this", "seems", "more", "dangerous", "than", "practical", "especially", "with", "current", "api", "limits", "on", "letsencrypt", "NUMBER", "NUMBER", "how", "to", "renew", "cert", "For", "one", "domain", "sub", "domain", "NUMBER", "For", "all", "domain", "NUMBER", "For", "now", "NUMBER", "letsencrypt", "NUMBER", "sh", "will", "sign", "all", "new", "and", "near", "expired", "cerificates", "NUMBER", "I", "will", "probably", "implement", "a", "feature", "to", "force", "resigning", "of", "a", "specific", "certificate", "NUMBER", "NUMBER", "how", "to", "use", "email", "to", "notify", "about", "the", "expiry", "dates", "if", "already", "use", "in", "official", "client", "NUMBER", "Not", "sure", "how", "that", "works", "if", "letsencrypt", "sends", "the", "mails", "you", "can", "probably", "just", "import", "your", "exist", "key", "with", "registered", "mail", "and", "it", "will", "continue", "work", "NUMBER", "need", "or", "no", "need", "and", "how", "import", "account", "data", "from", "official", "client", "if", "before", "already", "generate", "for", "domain", "certs", "There", "be", "now", "two", "scripts", "for", "importing", "data", "that", "be", "describe", "in", "the", "README", "file", "NUMBER", "crontab", "simple", "add", "letsencrypt", "NUMBER", "sh", "to", "cron", "no", "need", "params", "for", "script", "See", "NUMBER", "NUMBER", "your", "client", "be", "stable", "and", "production", "ready", "No", "NUMBER", "This", "script", "be", "hacked", "together", "in", "multiple", "places", "parsing", "and", "generating", "JSON", "in", "bash", "be", "pretty", "much", "impossible", "there", "be", "several", "workarounds", "around", "how", "things", "work", "and", "it", "will", "probably", "never", "reach", "the", "stability", "of", "the", "official", "letsencrypt", "client", "NUMBER", "I", "wouldn", "t", "recommend", "relying", "on", "this", "to", "work", "but", "if", "you", "be", "handle", "it", "manually", "and", "roll", "out", "certificates", "after", "additional", "verification", "it", "s", "more", "than", "good", "enough", "NUMBER", "This", "be", "an", "error", "message", "encoded", "in", "base", "NUMBER", "m", "type", "urn", "acme", "error", "unauthorized", "detail", "Error", "creating", "new", "cert", "Authorizations", "for", "these", "names", "not", "find", "or", "expired", "verbler", "NUMBER", "com", "www", "NUMBER", "verbler", "NUMBER", "com", "status", "NUMBER", "I", "think", "this", "has", "to", "do", "with", "issue", "NUMBER", "i", "ll", "fix", "that", "now", "NUMBER", "Mh", "no", "actually", "this", "should", "work", "NUMBER", "I", "don", "t", "know", "what", "be", "going", "on", "here", "NUMBER", "Should", "work", "now", "NUMBER", "I", "m", "still", "work", "on", "error", "handle", "so", "yea", "at", "some", "point", "this", "will", "be", "detected", "NUMBER", "At", "the", "moment", "i", "think", "the", "script", "isn", "t", "actually", "very", "portable", "NUMBER", "E", "NUMBER", "g", "NUMBER", "The", "syntax", "of", "the", "base", "NUMBER", "binary", "differs", "from", "system", "to", "system", "I", "ll", "change", "the", "shebang", "after", "I", "test", "that", "it", "s", "actually", "work", "under", "some", "BSD", "systems", "NUMBER", "For", "the", "thing", "thanks", "I", "ll", "have", "a", "look", "at", "that", "NUMBER", "I", "replaced", "the", "shebang", "with", "usr", "bin", "env", "bash", "and", "the", "usage", "of", "versus", "doesn", "t", "make", "any", "difference", "in", "the", "places", "it", "be", "use", "so", "I", "ll", "leave", "it", "as", "it", "be", "now", "NUMBER", "Yea", "this", "still", "be", "miss", "some", "error", "handle", "NUMBER", "To", "use", "the", "staging", "environment", "you", "should", "set", "the", "CA", "to", "LINK", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "without", "the", "directory", "at", "the", "end", "it", "should", "work", "NUMBER", "I", "m", "not", "sure", "what", "s", "going", "on", "there", "maybe", "it", "requires", "the", "usage", "of", "a", "different", "agreement", "url", "on", "registration", "NUMBER"], "text_count": [0, 13128, 3425, 1331, 661, 15, 1063, 0, 69, 2090, 1631, 3165, 2061, 1644, 1323, 332, 0, 0, 0, 0, 3975, 1232, 700, 431, 827, 724, 0, 0, 0, 0, 6124, 4044, 2186, 76, 1062, 537, 0, 0, 0, 0, 7373, 20, 2960, 2673, 1930, 0, 0, 0, 0, 0, 2496, 759, 1152, 816, 1230, 446, 1026, 0, 0, 0, 6276, 396, 5282, 330, 0, 0, 0, 0, 0, 0, 3883, 556, 2640, 1224, 387, 0, 0, 0, 0, 0, 7074, 3278, 816, 2600, 405, 325, 0, 0, 0, 0, 502, 2758, 312, 0, 0, 0, 0, 0, 0, 0, 6881, 1551, 4012, 1456, 0, 0, 0, 0, 0, 0, 11367, 24000, 329, 874, 300, 584, 0, 0, 0, 0, 32292, 145, 24996, 368, 5691, 6569]}, {"repo": "dehydrated", "type": "nonelite", "title": "", "number of text": 1263, "text": "  I can use `dehydrated --cron --domain www.bortzmeyer.org` for my domain and it works. Now, I want to use my own CSR and I try `--signcsr`:\r\n\r\n```\r\n% sudo dehydrated --signcsr ./blog.csr --domain www.bortzmeyer.org\r\n# INFO: Using main config file /etc/dehydrated/config                        \r\n# !! WARNING !! Extra configuration directory /etc/dehydrated/conf.d exists, but no configuration found in it.\r\n + Requesting challenge for Subject:...\r\n  + ERROR: An error occurred while sending post-request to https://acme-v01.api.letsencrypt.org/acme/new-authz (Status 400)\r\n\r\nDetails:\r\n{\r\n  \"type\": \"urn:acme:error:malformed\",\r\n  \"detail\": \"Error creating new authz :: Invalid character in DNS name\",\r\n  \"status\": 400\r\n}\r\n\r\nrm: cannot remove '/etc/dehydrated/domains.txt': No such file or directory\r\n```\r\nThe domain name seems perfectly OK (and it works with `--cron`). In the CSR:\r\n\r\n```\r\n% openssl req -text -in blog.csr                                                              \r\nCertificate Request:                   \r\n    Data:\r\n        Version: 1 (0x0)\r\n        Subject: CN = www.bortzmeyer.org\r\n...\r\n```\r\nIt seems the same subject as in the CSR generated by `dehydrated --cron`.\r\n\r\nI tried with a ECDSA CSR and a RSA one, same result.\r\n\r\nI'm not sure it is a dehydrated bug, of course, it can be a Let's Encrypt one, or a fault on my side but I cannot find it.\r\n :wave: @bortzmeyer \r\n\r\nCan you share the full CSR? Are the Subject Alternate Names well formed?\r\n\r\n> I'm not sure it is a dehydrated bug, of course, it can be a Let's Encrypt one, or a fault on my side but I cannot find it.\r\n\r\nI can at least rule out that its a bug with Let's Encrypt :-) \r\n\r\nIn the server side logs I can see that Dehydrated POSTed new-authz with an invalid domain identifier in the authenticated JWS body:\r\n> \"identifier\": {\"type\": \"dns\", \"value\": \"Subject:\"}\r\n\r\nI can't tell where the `\"Subject:\"` value came from: a bug with Dehydrated, a problem with the CSR, or both. It should be a domain name instead.\r\n\r\n Oh, yes, I should have send the full CSR. Here it is:\r\n\r\n```\r\n-----BEGIN CERTIFICATE REQUEST-----\r\nMIHWMH8CAQAwHTEbMBkGA1UEAwwSd3d3LmJvcnR6bWV5ZXIub3JnMFkwEwYHKoZI\r\nzj0CAQYIKoZIzj0DAQcDQgAE+i8wLn3mwWMJ1S8zw+lIyiWvpZ9iNVZ3aiq4omoG\r\nZpUtF0blitUXKhYLUOmofQwrFqb7YNFZ0qHFXIWQJRMXA6AAMAoGCCqGSM49BAMC\r\nA0cAMEQCIGffhXFGK4TrqkQ5P0lGzwTRJQA8qCMkE9UOWgZ9gdx1AiAgU+ilYgTG\r\n510OonzEqJ0izvfwRwiglGZ8yaZHun1+Zg==\r\n-----END CERTIFICATE REQUEST-----\r\n```\r\n\r\nThis is the ECDSA one, but the RSA one triggers the same error.\r\n This CSR has no SAN(s) defined. At the very least, have one SAN equal to the CN and I bet you\u2019ll be good. \n\n> On Sep 25, 2018, at 13:02, St\u00e9phane Bortzmeyer <notifications@github.com> wrote:\n> \n> Oh, yes, I should have send the full CSR. Here it is:\n> \n> -----BEGIN CERTIFICATE REQUEST-----\n> MIHWMH8CAQAwHTEbMBkGA1UEAwwSd3d3LmJvcnR6bWV5ZXIub3JnMFkwEwYHKoZI\n> zj0CAQYIKoZIzj0DAQcDQgAE+i8wLn3mwWMJ1S8zw+lIyiWvpZ9iNVZ3aiq4omoG\n> ZpUtF0blitUXKhYLUOmofQwrFqb7YNFZ0qHFXIWQJRMXA6AAMAoGCCqGSM49BAMC\n> A0cAMEQCIGffhXFGK4TrqkQ5P0lGzwTRJQA8qCMkE9UOWgZ9gdx1AiAgU+ilYgTG\n> 510OonzEqJ0izvfwRwiglGZ8yaZHun1+Zg==\n> -----END CERTIFICATE REQUEST-----\n> This is the ECDSA one, but the RSA one triggers the same error.\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n @bllfr0g That part of the CSR @bortzmeyer shared stands out to me as well, but it does appear based on a quick skim of the Dehydrated source that this case _should_ be handled: https://github.com/lukas2511/dehydrated/blob/fba49ba28eb746eae127aa36e7f515beeaf0bbae/dehydrated#L644-L648\r\n\r\nI'm afraid we're outside of my depth now. It seems to me to be a Dehydrated bug so I'm going to drop off this thread with the hope a maintainer can take over from here.\r\n\r\nGood luck! I don\u2019t think dehydrated is balking on the CSR, I think LetsEncrypt is.  Nothing dehydrated can do to fix that. \n\n> On Sep 25, 2018, at 13:20, Daniel McCarney <notifications@github.com> wrote:\n> \n> @bllfr0g That part of the CSR @bortzmeyer shared stands out to me as well, but it does appear based on a quick skim of the Dehydrated source that this case should be handled: https://github.com/lukas2511/dehydrated/blob/fba49ba28eb746eae127aa36e7f515beeaf0bbae/dehydrated#L644-L648\n> \n> I'm afraid we're outside of my depth now. It seems to me to be a Dehydrated bug so I'm going to drop off this thread with the hope a maintainer can take over from here.\n> \n> Good luck!\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n > I don\u2019t think dehydrated is balking on the CSR, I think LetsEncrypt is.  Nothing dehydrated can do to fix that.\r\n\r\n@bllfr0g Sorry, I should have made my affiliation clearer. I work for Let's Encrypt and verified from the server-side Let's Encrypt logs that this is not the case. \r\n\r\nDehydrated is processing the CSR and something strange happens that results in an ACME request to the Let's Encrypt ACME server's new-authz endpoint with an invalid identifier value. The CSR isn't sent to Let's Encrypt (in the ACME v1 world) until the new-cert POST and the error is occurring before then so we can say with double confidence it isn't Let's Encrypt rejecting the CSR. > Mh... @bortzmeyer what OS are you running dehydrated on? Can you please post the output of `dehydrated -v`?\r\n\r\n```\r\n% cat /etc/debian_version \r\n9.5\r\n\r\n% dehydrated -v\r\nUnknown parameter detected: -v\r\n\r\nUsage: /usr/bin/dehydrated [-h] [command [argument]] [parameter [argument]] [parameter [argument]] ...\r\n\r\nDefault command: help\r\n\r\nCommands:\r\n --cron (-c)                      Sign/renew non-existant/changed/expiring certificates.\r\n --signcsr (-s) path/to/csr.pem   Sign a given CSR, output CRT on stdout (advanced usage)\r\n --revoke (-r) path/to/cert.pem   Revoke specified certificate\r\n --cleanup (-gc)                  Move unused certificate files to archive directory\r\n --help (-h)                      Show help text\r\n --env (-e)                       Output configuration variables for use in other scripts\r\n\r\nParameters:\r\n --full-chain (-fc)               Print full chain when using --signcsr\r\n --ipv4 (-4)                      Resolve names to IPv4 addresses only\r\n --ipv6 (-6)                      Resolve names to IPv6 addresses only\r\n --domain (-d) domain.tld         Use specified domain name(s) instead of domains.txt entry (one certificate!)\r\n --keep-going (-g)                Keep going after encountering an error while creating/renewing multiple certificates in cron mode\r\n --force (-x)                     Force renew of certificate even if it is longer valid than value in RENEW_DAYS\r\n --no-lock (-n)                   Don't use lockfile (potentially dangerous!)\r\n --ocsp                           Sets option in CSR indicating OCSP stapling to be mandatory\r\n --privkey (-p) path/to/key.pem   Use specified private key instead of account key (useful for revocation)\r\n --config (-f) path/to/config     Use specified config file\r\n --hook (-k) path/to/hook.sh      Use specified script for hooks\r\n --out (-o) certs/directory       Output certificates into the specified directory\r\n --challenge (-t) http-01|dns-01  Which challenge should be used? Currently http-01 and dns-01 are supported\r\n --algo (-a) rsa|prime256v1|secp384r1 Which public key algorithm should be used? Supported: rsa, prime256v1 and secp384r1\r\n``` OK, I regenerated the CSR with:\r\n\r\n```\r\nopenssl req -new -key blog.pem  -nodes -days 1000 -subj '/CN=www.bortzmeyer.org' -reqexts SAN -config <(cat /etc/ssl/openssl.cnf <(printf \"[SAN]\\nsubjectAltName=DNS:www.bortzmeyer.org\")) -out blog.csr\r\n```\r\n\r\nNow, there is a SAN:\r\n\r\n```\r\n        Attributes:\r\n        Requested Extensions:\r\n            X509v3 Subject Alternative Name: \r\n                DNS:www.bortzmeyer.org\r\n```\r\n\r\nAnd this time, dehydrated makes a correct request and Let's Encrypt signs the certificate. Hooray. \r\n\r\nSuggestion: dehydrated should produce a proper error message such as \"Missing Subject Alternative Name in the CSR\" (or generate the domain name from the CN if there is no SAN). @bortzmeyer You\u2019re using a really, really old version of dehydrated, if it doesn\u2019t even support the \u201cversion\u201d command. You really should consider using the current version instead, which has obviously fixed many bugs (and added some new features).\r\n\r\nEdit: Yeah, Debian Stretch has dehydrated 0.3.1 packaged, while dehydrated is currently on 0.6.2. Like @txr13 said this issue was already fixed quite a while ago.\r\nPlease update your version of dehydrated, it's just a shell-script so it shouldn't be much of a problem to \"install\" manually.  I ran dehydrated and there was a error in my request (\"status\": 400). As a result, dehydrated removed domains.txt.\r\n\r\nRunning it again, same issue with my request, it tries again to remove it and prints:\r\n`\r\nrm: cannot remove '/etc/dehydrated/domains.txt': No such file or directory\r\n` > Mh... Are you using the `--signcsr` function combined with `--domain` parameters? Those are not designed to be used with this function and seem to be the trigger for this bug.\r\n\r\nI do. OK,  I'll try without `--domain` (it is in the CSR after all) but the bug is still really damaging.  Hi;\r\n\r\nI know it's not related to dehydrated and/or the hooks but I miss understood something;\r\n\r\ndo I have to create the `TXT _acme-challenge.` ?\r\nif yes where I found the `VALUE`\r\nmay I have a concrete example ?\r\n\r\nRegards!\r\n\r\nJonathan You need to create a TXT record of the form:\r\n\r\n_acme-challenge.certificatedomain.tld.\r\n\r\nFor example, if my certificate name was \u201ccertify-me.example.org\u201d my TXT record would be \u201c_acme-challenge.certify-me.example.org.\u201d The value of that record will be given by the ACME CA server.   Why would you delete the changelog? :thinking:  Im getting this when trying to renew cert\r\n\r\npi@hassbian:/home/homeassistant/dehydrated $ sudo ./dehydrated -c\r\n# INFO: Using main config file /home/homeassistant/dehydrated/config\r\nUnknown hook this_hookscript_is_broken__dehydrated_is_working_fine__please_ignore_unknown_hooks_in_your_script\r\nProcessing homehub05139.duckdns.org\r\nUnknown hook this_hookscript_is_broken__dehydrated_is_working_fine__please_ignore_unknown_hooks_in_your_script\r\n + Checking domain name(s) of existing cert... unchanged.\r\n + Checking expire date of existing cert...\r\n + Valid till Jul 21 01:42:55 2018 GMT (Less than 30 days). Renewing!\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting new certificate order from CA...\r\n + Received 1 authorizations URLs from the CA\r\n + Handling authorization for <myaddress>.duckdns.org\r\n + 1 pending challenge(s)\r\n + Deploying challenge tokens...\r\nOK\r\n + Responding to challenge for <myaddress>.duckdns.org authorization...\r\nUnknown hook invalid_challenge\r\n + Cleaning challenge tokens...\r\nOK\r\n + Challenge validation has failed :(\r\nERROR: Challenge is invalid! (returned: invalid) (result: {\r\n  \"type\": \"http-01\",\r\n  \"status\": \"invalid\",\r\n  \"error\": {\r\n    \"type\": \"urn:ietf:params:acme:error:connection\",\r\n    \"detail\": \"Fetching http://<myaddress>.duckdns.org/.well-known/acme-challenge/lTWkfYPlqBF-29Um4MCCUrjjWJw7ti-fmUEtUK8aiTA: Connection refused\",\r\n    \"status\": 400\r\n  },\r\n  \"url\": \"https://acme-v02.api.letsencrypt.org/acme/challenge/u8O0vLkYh1_uORor2xZOhtnQyqtnB6glBOBAmT2xng4/5999407215\",\r\n  \"token\": \"lTWkfYPlqBF-29Um4MCCUrjjWJw7ti-fmUEtUK8aiTA\",\r\n  \"validationRecord\": [\r\n    {\r\n      \"url\": \"http://<myaddress>.duckdns.org/.well-known/acme-challenge/lTWkfYPlqBF-29Um4MCCUrjjWJw7ti-fmUEtUK8aiTA\",\r\n      \"hostname\": \"<myaddress>.duckdns.org\",\r\n      \"port\": \"80\",\r\n      \"addressesResolved\": [\r\n        \"<mypublicIP>\"\r\n      ],\r\n      \"addressUsed\": \"<mypublicIP>\"\r\n    }\r\n  ]\r\n})\r\n You\u2019re using http-01 validation, but the CA cannot resolve the name you are attempting to verify (addressesResolved is empty) and therefore cannot connect to do the validation.\r\n\r\nMore specifically, it looks like you have a broken domains.txt file. The CN is fine, but there\u2019s a spurious \u201c.duckdns.org\u201d SAN with no subdomain on it. This is what cannot be validated. # INFO: Using main config file /home/homeassistant/dehydrated/config\r\nDehydrated by Lukas Schauer\r\nhttps://dehydrated.de\r\n\r\nDehydrated version: git-master-after-0.6.1\r\nGIT-Revision: 52c2c199945bd59a6f659f2aaff4c06bc6959c94\r\n\r\nOS: Raspbian GNU/Linux 8\r\nUsed software:\r\n bash: 4.3.30(1)-release\r\n curl: curl 7.38.0\r\n awk: mawk 1.3.3 Nov 1996, Copyright (C) Michael D. Brennan\r\n sed: sed (GNU sed) 4.2.2\r\n mktemp: mktemp (GNU coreutils) 8.23\r\n grep: grep (GNU grep) 2.20\r\n diff: diff (GNU diffutils) 3.3\r\n openssl: OpenSSL 1.0.1t  3 May 2016\r\n\r\ndomains.txt has only one line \r\nhomehub05139.duckdns.org  As part of the (scripted) process of setting up my webserver, I try to request LE certs using the staging CA, and only then try to request certs with the live CA if this is successful (in order to try to prevent any configuration mistakes from triggering rate limits).\r\n\r\nI am using dehydrated 0.3.1 (as that's what comes with my distro) and therefore ACME v1.\r\n\r\nOnce I have my dehydrated configuration setup, I run `dehydrated -c`, and then once again after I have commented out the staging CA.\r\n\r\nHowever, dehydrated seems to think that my existing cert has not yet expired and so does not renew it.\r\n\r\nWhat would I need to do in order to let dehydrated know that I do genuinely need to request a new cert in this situation?\r\n\r\nThanks for any advice.  My ISP recently blocked all inbound traffic on port 80, so I had to switch from getting my cert the old-fashioned way to this new-fangled DNS-01 business. I switched my nameservers over to Cloudflare because the company I leased the domain names through doesn't have a suitable API.\r\n\r\nI had no luck getting dehydrated to work until I added a 10-second delay into the script in between uploading the challenge string and the verification step. Is this something that could be added as a command line option in the future?\r\n\r\nThanks Honestly given that it is an issue limited to some hook script implementations, I would personally see it as more of something that should be dealt with within the hook script rather then within dehydrated itself.\r\n\r\nFor example a good DNS setup handling low volumes of domains shouldn't need more then half a second delay. However a larger volume DNS setup may have to rely on other propagation methods such as database mirroring which results in larger propagation delays. Hook scripts should check to ensure the changes have propagated before returning. @txr13 In `deploy_challenge` you mean, I think. Right? Correct. The deploy_challenge hook should not return until the challenge has actually been fully deployed (propagated). I'm investigating the issue got the user with mine script: it writes DNS on Cloudflare and returns the ID.\r\n\r\nI found this answer: https://community.letsencrypt.org/t/i-have-to-wait-until-dns-propagate-for-issuing-certificate/18573/5  \r\n\r\nI read \"_you need to ensure all Authoritative DNS servers for the name you want a certificate for are updated, this is not \u201cpropagation\u201d and is purely under the control of your or your hosting supplier. Once the servers are updated, you don\u2019t have to wait for any \u201cpropagation\u201d, the Let\u2019s Encrypt systems will interrogate these Authoritative servers themselves directly about the new domain._\"\r\n\r\nIn effect never got an issue.\r\n\r\nBut, I will try to got \"inspired\" by your email hook: I see you did implement the check ;-)\r\n\r\n You (and the commenter) are technically correct\u2014we\u2019re not technically waiting for master/slave propagation. :) I used that term for simplicity\u2019s sake, but yes, the only thing you really have to check is that all authoritative servers have the challenge live. The code I helped write for the email hook does that, so please borrow away if it helps!   Is it possible to have multiple domains.txt files on different locations? This solves my use case. Thank you! (8  It would be nice, if the keep_going parameter were listed in the example config file, otherwise it is pretty difficult to find. This PR should not be accepted. The variable `PARAM_KEEP_GOING` is not read from the config file--there's no code to do so. Also, variables of the type `PARAM*` are not used for config-file settings. Those are used for command-line switches only.\r\n\r\nAs keep-going is set by a command-line switch (and only by a command-line switch), it is not appropriate or effective to add this to the example config file. The switch is well-documented already (in the README.md, in the man page, and in the built-in help readout). That's funny, though, because putting this parameter in the config actually does the trick. Some feedback would be nice, instead of simply closing the request. OK, thanks a lot, @lukas2511, for your feedback; this was much more helpful in understanding why you do not wish to include this in the config.\r\n\r\nJust one question though; could it harm in any way if somebody does choose to include it in their own config?\r\nI am asking this, because from a hosting provider's point of view, it is much better to have one customer complaining about one website's SSL that did not get automatically renewed, than have 20 customers complaining for 20 different websites. OK, understood. Thanks a lot for all your clarifications. Feel free to close this.  Hello Gentlemen.\r\n\r\nAfter upgrading from ver 0.4.0 to 0.6.2 I've faced out that HOOK_CHAIN=\"no\" changed behaviour. In past it performed challenges deploy/validation in loop one by one:\r\n```\r\nHOOK: deploy_challenge for\r\n + Responding to challenge for \r\nHOOK: clean_challenge for\r\n + Challenge is valid!\r\nHOOK: deploy_challenge \r\n...\r\n```\r\nBut as I noticed in newer version it is simply performs at first either batch or one by one but consecutive all challenges deployment. Then at next stage performs all challenges validation. And finaly ether at once or one by one challenges removal.\r\n\r\nMy setup is dependent on the original behavior of the HOOK_CHAIN=\"no\" option, i.e. deploy/validation sequence for each domain/cert.\r\n\r\nHave I to correct it myself as it was? Or may I expect clarifications and some additional setting for original behavior?\r\n\r\nThank You.\r\n\r\nP.S.\r\nIf my setup is stupid or incorrectly based on misunderstanding but it made in past as documented at https://github.com/lukas2511/dehydrated/blob/master/docs/hook_chain.md\r\n  I used certbot, and follow instructions [how to import accaunt](https://github.com/lukas2511/dehydrated/wiki/Import-from-official-letsencrypt-client#import-account-key).  \r\nIt is very unclear. I wanted to see there such things:\r\n - how to name output file for default settings (account_key.pem ?)\r\n - how to name sub folder for dehydrated account\r\n - what to do with ACCOUNT_KEY_JSON / registration_info.json\r\n\r\nAfter my attempts to guess I've been banned :(  \r\nOr maybe not... who knows, I want to see some debug / verbose mode option, to understand, why I got\r\n```txt\r\n + Signing domains...\r\nERROR: Certificate authority doesn't allow certificate signing\r\n```  Hi \r\nI'm trying to use dehydrated on alpine i got my inflammations form [https://pdnsmanager.lmitsystems.de/documentation/letsencrypt/](url) and installed the needed packages.\r\nOn Ubuntu it is working perfectly, but on my alpine VM I get the error \"ERROR: Parsing error in config file.\" when I'm using this command \"./dehydrated -c\"\r\n\r\nI can't find any information/documentation  on this error, the config file works on Ubuntu.\r\n\r\nI tied to find a solution with google an co. but I can't find any.\r\n\r\nFrom the Ubuntu System:\r\n\r\n```\r\n./dehydrated -v\r\n# INFO: Using main config file /dehydrated/config\r\nDehydrated by Lukas Schauer\r\nhttps://dehydrated.de\r\n\r\nDehydrated version: git-master-after-0.6.1\r\nGIT-Revision: 537877a0e2fa39b16676a22aa3069730f5ba0ee4\r\n\r\nOS: Debian GNU/Linux 9\r\nUsed software:\r\n bash: 4.4.12(1)-release\r\n curl: curl 7.52.1\r\n awk: GNU Awk 4.1.4, API: 1.1 (GNU MPFR 3.1.5, GNU MP 6.1.2)\r\n sed: sed (GNU sed) 4.4\r\n mktemp: mktemp (GNU coreutils) 8.26\r\n grep: grep (GNU grep) 2.27\r\n diff: diff (GNU diffutils) 3.5\r\n openssl: OpenSSL 1.1.0f  25 May 2017\r\n```\r\nFrom the Alpine System\r\n```\r\n./dehydrated -v\r\n# INFO: Using main config file /dehydrated/config\r\nDehydrated by Lukas Schauer\r\nhttps://dehydrated.io\r\n\r\nDehydrated version: git-master-after-0.6.2\r\nGIT-Revision: 10d4b98e7f1e2c5e0e5b16b0896aa7180e5a88f5\r\n\r\nOS: Welcome to Alpine Linux 3.7\r\nUsed software:\r\n bash: 4.4.19(1)-release\r\n curl: curl 7.59.0\r\n awk: awk: warning: option -W is ignored\r\n sed: This is not GNU sed version 4.0\r\n mktemp: mktemp: unrecognized option: version\r\n grep: grep: unrecognized option: version\r\n diff: diff: unrecognized option: version\r\n openssl: OpenSSL 1.0.2o  27 Mar 2018\r\n```\r\nThanks\r\niGlaedr\r\nsorry for the bad grammar\r\n\r\n  First thanks for the fast reply\r\n\r\nI've created a new VM and it dose not work with the coreutils installed and a few other to replace  busybox .\r\nStill the the same error.\r\n\r\n```\r\n ls -la /usr/lib/bash /usr/bin/curl /usr/bin/awk /bin/sed /bin/mktemp /usr/bin/grep /usr/bin/diff /usr/bin/openssl\r\n-rwxr-xr-x 1 root root  38880 Oct 31  2017 /bin/mktemp\r\n-rwxr-xr-x 1 root root 145584 Oct 31  2017 /bin/sed\r\nlrwxrwxrwx 1 root root      4 May 20 13:46 /usr/bin/awk -> gawk\r\n-rwxr-xr-x 1 root root 206776 Mar 19 15:23 /usr/bin/curl\r\n-rwxr-xr-x 1 root root 170040 Oct 31  2017 /usr/bin/diff\r\n-rwxr-xr-x 1 root root 174096 Oct 31  2017 /usr/bin/grep\r\n-rwxr-xr-x 1 root root 504952 Apr  1 23:04 /usr/bin/openssl\r\n\r\n/usr/lib/bash:\r\ntotal 256\r\ndrwxr-xr-x 2 root root  4096 May 20 13:18 .\r\ndrwxr-xr-x 8 root root  4096 May 20 13:46 ..\r\n-rw-r--r-- 1 root root  2696 Feb  7 20:18 Makefile.inc\r\n-rwxr-xr-x 1 root root  5840 Feb  7 20:18 basename\r\n-rwxr-xr-x 1 root root  5832 Feb  7 20:18 dirname\r\n-rwxr-xr-x 1 root root 14208 Feb  7 20:18 finfo\r\n-rwxr-xr-x 1 root root  9936 Feb  7 20:18 head\r\n-rwxr-xr-x 1 root root  9896 Feb  7 20:18 id\r\n-rwxr-xr-x 1 root root  9952 Feb  7 20:18 ln\r\n-rwxr-xr-x 1 root root  5840 Feb  7 20:18 logname\r\n-rwxr-xr-x 1 root root 10008 Feb  7 20:18 mkdir\r\n-rwxr-xr-x 1 root root  5832 Feb  7 20:18 mypid\r\n-rwxr-xr-x 1 root root  9944 Feb  7 20:18 pathchk\r\n-rwxr-xr-x 1 root root  9936 Feb  7 20:18 print\r\n-rwxr-xr-x 1 root root  5824 Feb  7 20:18 printenv\r\n-rwxr-xr-x 1 root root  9944 Feb  7 20:18 push\r\n-rwxr-xr-x 1 root root  9952 Feb  7 20:18 realpath\r\n-rwxr-xr-x 1 root root  5832 Feb  7 20:18 rmdir\r\n-rwxr-xr-x 1 root root  5848 Feb  7 20:18 setpgid\r\n-rwxr-xr-x 1 root root  5800 Feb  7 20:18 sleep\r\n-rwxr-xr-x 1 root root  5848 Feb  7 20:18 strftime\r\n-rwxr-xr-x 1 root root  5800 Feb  7 20:18 sync\r\n-rwxr-xr-x 1 root root  9944 Feb  7 20:18 tee\r\n-rwxr-xr-x 1 root root  5920 Feb  7 20:18 truefalse\r\n-rwxr-xr-x 1 root root  5848 Feb  7 20:18 tty\r\n-rwxr-xr-x 1 root root  5824 Feb  7 20:18 uname\r\n-rwxr-xr-x 1 root root  5824 Feb  7 20:18 unlink\r\n-rwxr-xr-x 1 root root  5824 Feb  7 20:18 whoami\r\nmidgard:/cert/dehydrated# bash ./dehydrated -c\r\n# INFO: Using main config file /cert/dehydrated/config\r\nERROR: Parsing error in config file.\r\n```\r\n\r\n```\r\nbash ./dehydrated -v\r\n# INFO: Using main config file /cert/dehydrated/config\r\nDehydrated by Lukas Schauer\r\nhttps://dehydrated.io\r\n\r\nDehydrated version: git-master-after-0.6.2\r\nGIT-Revision: 10d4b98e7f1e2c5e0e5b16b0896aa7180e5a88f5\r\n\r\nOS: Welcome to Alpine Linux 3.7\r\nUsed software:\r\n bash: 4.4.19(1)-release\r\n curl: curl 7.59.0\r\n awk: GNU Awk 4.2.0, API: 2.0\r\n sed: sed (GNU sed) 4.4\r\n mktemp: mktemp (GNU coreutils) 8.28\r\n grep: grep (GNU grep) 3.1\r\n diff: diff (GNU diffutils) 3.6\r\n openssl: OpenSSL 1.0.2o  27 Mar 2018\r\n``` I've found the problem myself it was a Problem with the ads-acm client config.\r\nThanks for the help \r\n  Does dehydrated fully support IDN's 'Internationalized Domain Names)?\r\n\r\nLet's Encrypt does as of Oct 20, 2016, but we still don't have this functionality with Aegir (Drupal) BOA. Is this working, please?\r\n\r\nBest,\r\n\r\nEd  I noticed that dehydrated refuses to run without `sudo` installed if `DEHYDRATED_USER` is set - why is that?\r\nThe same feature (restarting the script as a different user) is also perfectly doable using the `su` command: `su $DEHYDRATED_USER -s /bin/bash -c \"${0} ${ORIGARGS}\"`; the only difference I can see immediately is the option to explicitly specify the group to run as.\r\n\r\nWhile `sudo` may be more feature-complete in some respects, `su` is \"guaranteed\" to be present in mostly any system you would run on and IMO should at least be provided as a fallback if `sudo` is not found.\r\n\r\nI can probably make a PR for it if you want me to. go\r\nUsing sudo does allow for a user switch without the need for a password (if configured). Also the group option might be needed by some people. Nobody forces you to use the dehydrated integrated sudo operation, you could always just use su yourself.\r\n\r\n  When HTTP/2 is used, header names are lower case.  After adding/removing resource records on ClouDNS (and probably other authoritative DNS providers, I guess) you have to wait while the new zone is propagated across all of their servers. This is a time-consuming process and it isn't really predictable, luckily ClouDNS offers a way to check if the zone [is updated](https://www.cloudns.net/wiki/article/54/).\r\n\r\nNow that `deploy_challenge` is done for all `-d domain`s in sequence it would be great to have a hook that is called after all `deploy_challenge`s but before these challenges are validated. That way we can make `deploy_challenge` add all TXT records asynchronously and call just one loop in `before_challenge_validation` to wait while the zone isn't updated across all ClouDNS servers. You could achieve this by using HOOK_CHAIN=\"yes\" and then simply having your hook wait and test after deploying the challenges before returning from the hook. I know that but I think it makes sense to have a hook where you can check the challenges yourself before telling the CA to do it, even when `HOOK_CHAIN=\"yes\"` is set. It is the responsibility of the `deploy_challenge` hook to ensure that the challenge is successfully deployed and ready for validation. This includes verifying that it has propagated to all authoritative nameservers. Whether that involves `HOOK_CHAIN` or not.\r\n\r\nIf you need to verify that the challenge has been deployed successfully, that should be done before the hook returns.  Right now the deploy_cert receives domain name, key, cert, fullchain path and date but not the alias (e.g. for wildcard certs)\r\n\r\nSince `alias` variable is already exported, the change would be as simple as adding it to the end of command, and would not break any existing implementations:\r\n\r\n`  [[ -n \"${HOOK}\" ]] && \"${HOOK}\" \"deploy_cert\" \"${domain}\" \"${certdir}/privkey.pem\" \"${certdir}/cert.pem\" \"${certdir}/fullchain.pem\" \"${certdir}/chain.pem\" \"${timestamp}\" \"${alias}\"` You can also use a combination of the dirname and basename commands to extract the alias name from the key, cert, fullchain or chain paths.\r\n\r\nI found this out when I considered making a similar request for the $certdir path to be added to the same hook but found I could work them out myself.  i'm trying to set up dehydrated on a new server and ran into this problem:\r\n\r\nthe initial request to register and issue a letsencrypt.org staging certificate wen though fine. however, when i try to test the renewal, it fails:\r\n```\r\n# dehydrated -c -x\r\n# INFO: Using main config file /etc/dehydrated/config\r\n# INFO: Using additional config file /etc/dehydrated/config.d/00_gentoo.sh\r\nProcessing [***redacted***].org\r\n + Checking domain name(s) of existing cert... unchanged.\r\n + Checking expire date of existing cert...\r\n + Valid till Jul 31 15:57:02 2018 GMT (Longer than 30 days). Ignoring because renew was forced!\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting new certificate order from CA...\r\n + Received 1 authorizations URLs from the CA\r\n + Handling authorization for [***redacted***].org\r\n + 1 pending challenge(s)\r\n + Deploying challenge tokens...\r\n + Responding to challenge for [***redacted***].org authorization...\r\n  + ERROR: An error occurred while sending post-request to http://[***redacted***].org.org/.well-known/acme-challenge/vZFIDLSvENKWsyVkfzfiEbMi8Gf1ZRtQFFMtGMsHAnM (Status 417)\r\n\r\nDetails:\r\nHTTP/1.1 417 Expectation Failed\r\nContent-Type: text/html\r\nContent-Length: 363\r\nConnection: close\r\nDate: Wed, 02 May 2018 17:28:51 GMT\r\nServer: httpd/42\r\n\r\n<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\r\n         \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\r\n <head>\r\n  <title>417 - Expectation Failed</title>\r\n </head>\r\n <body>\r\n  <h1>417 - Expectation Failed</h1>\r\n </body>\r\n</html>\r\n```\r\nrequest as logged by the server (note the `Expect: 100-continue` part)\r\n```\r\n2018-05-02 17:28:51: (request.c.436) fd: 9 request-len: 249 \\nPOST /.well-known/acme-challenge/vZFIDLSvENKWsyVkfzfiEbMi8Gf1ZRtQFFMtGMsHAnM HTTP/1.1\\r\\nHost: spook.alerik.org\\r\\nUser-Agent: dehydr4ted/0.6.1 curl/7.59.0\\r\\nAccept: */*\\r\\nContent-Type: application/jose+json\\r\\nContent-Length: 1214\\r\\nExpect: 100-continue\\r\\n\\r\\n\r\n2018-05-02 17:28:51: (response.c.122) Response-Header: \\nHTTP/1.1 417 Expectation Failed\\r\\nContent-Type: text/html\\r\\nContent-Length: 363\\r\\nConnection: close\\r\\nDate: Wed, 02 May 2018 17:28:51 GMT\\r\\nServer: httpd/42\\r\\n\\r\\n \r\n```\r\ncurl 7.59.0, bash 4.4_p12, lighttpd/1.4.45\r\n\r\nis this a bug? am i doing something wrong? aw, thank you! i've requested version bump from gentoo.   Certain DNS services (Duck DNS) only allow a single TXT record for a\r\ndomain and all subdomains.  So the last TXT value will overwrite all\r\nearly values.  To support such a service, setting TXT records\r\nmust be done in the challenge loop.  That way the TXT record is set and\r\nimmediately checked before going on to the next one. Having just checked Duck DNS' documentation I would concur that it is the case that you can only set one TXT record at a time.\r\n\r\nFor those interested the API in question is documented at https://www.duckdns.org/spec.jsp @lukas2511 I'm curious about this from a purely technical / theoretical standpoint. Would something like the following not be workable?\r\n\r\n```\r\nif hook_chain\r\n  request all authorization tokens\r\n  deploy all tokens\r\n  validate all tokens\r\nelse\r\n  for each SAN\r\n    request authorization token\r\n    deploy token\r\n    validate token\r\n  end for\r\nend if\r\n```\r\n\r\nI would be hesitant to make that sort of change to the flow, as it needlessly burdens the CA with much more traffic. And really, a DNS provider that only allows a single TXT record for a domain and all subdomains is not standards-compliant, so I see no reason to double or triple the CA's burden for the sake of supporting a non-compliant DNS provider. Again, I'm just interested in the theory here.  Recently Dehydrated seems to be validating challenges only after all my deploy challenges have been run causing issues on approval.  Seems like HOOK_CHAIN value is being seen as YES.\r\n\r\nI have **hook_chain** set to no in my config\r\n\r\ndomains are listed as \r\nmysub.domain.com mysub1.domain.com mysub2.domain.com\r\n\r\n```\r\nDehydrated by Lukas Schauer\r\nhttps://dehydrated.io\r\n\r\nDehydrated version: git-master-after-0.6.2\r\nGIT-Revision: b5dddd7a2b64b1e035a1bd27aa5e699a304bdbca\r\n\r\nOS: Ubuntu 16.04.3 LTS\r\nUsed software:\r\n bash: 4.3.48(1)-release\r\n curl: curl 7.47.0\r\n awk: GNU Awk 4.1.3, API: 1.1 (GNU MPFR 3.1.4, GNU MP 6.1.0)\r\n sed: sed (GNU sed) 4.2.2\r\n mktemp: mktemp (GNU coreutils) 8.25\r\n grep: grep (GNU grep) 2.25\r\n diff: diff (GNU diffutils) 3.3\r\n openssl: OpenSSL 1.0.2g  1 Mar 2016\r\n```\r\n Oh bummer.  I had a process that would use the token to edit the same netscaler policy with the challenge token for every domain.  Any other options you can think of to mimic this behavior? It's possible to create multiple rules but will take some re-work.  Will try to figure something out.  Thanks for the help.  I am using this command to update my certificates:\r\n\r\n`/usr/local/dehydrated/dehydrated -c -x -k ./beaker-ecc.sh -d muppetz.com -d beaker.muppetz.com -d www.muppetz.com -d tjharman.com -d www.tjharman.com -d old.tjharman.com -d lice.muppetz.com -d gallery.tjharman.com -d matchboxdigital.co.nz -d www.matchboxdigital.co.nz -o /etc/letsencrypt/ecc -a secp384r1`\r\n\r\nThis is the log:\r\n\r\n```\r\n + 10 pending challenge(s)\r\n + Deploying challenge tokens...\r\n + Responding to challenge for beaker.muppetz.com authorization...\r\n + Challenge is valid!\r\n + Responding to challenge for gallery.tjharman.com authorization...\r\n + Challenge is valid!\r\n + Responding to challenge for lice.muppetz.com authorization...\r\n + Challenge is valid!\r\n + Responding to challenge for matchboxdigital.co.nz authorization...\r\n + Challenge is valid!\r\n + Responding to challenge for muppetz.com authorization...\r\n + Challenge is valid!\r\n + Responding to challenge for old.tjharman.com authorization...\r\n + Challenge is valid!\r\n + Responding to challenge for www.matchboxdigital.co.nz authorization...\r\n + Challenge is valid!\r\n + Responding to challenge for www.muppetz.com authorization...\r\n + Challenge is valid!\r\n + Responding to challenge for www.tjharman.com authorization...\r\n + Cleaning challenge tokens...\r\n + Challenge validation has failed :(\r\nERROR: Challenge is invalid! (returned: invalid) (result: {\r\n  \"type\": \"http-01\",\r\n  \"status\": \"invalid\",\r\n  \"error\": {\r\n    \"type\": \"urn:ietf:params:acme:error:connection\",\r\n    \"detail\": \"Fetching https://tjharman.com.well-known/acme-challenge/FnaK7v52ZkQn43VitAr9Vav9SriOxC4bFrg_RdvvHWg: Error getting validation data\",\r\n    \"status\": 400\r\n  },\r\n  \"url\": \"https://acme-v02.api.letsencrypt.org/acme/challenge/Gzt4EWQlA-3N1gF5m5RnL--1l-C431PLk2sJmgY-bRE/4389580035\",\r\n  \"token\": \"FnaK7v52ZkQn43VitAr9Vav9SriOxC4bFrg_RdvvHWg\",\r\n  \"validationRecord\": [\r\n    {\r\n      \"url\": \"https://tjharman.com.well-known/acme-challenge/FnaK7v52ZkQn43VitAr9Vav9SriOxC4bFrg_RdvvHWg\",\r\n      \"hostname\": \"tjharman.com.well-known\",\r\n      \"port\": \"443\"\r\n    },\r\n    {\r\n      \"url\": \"http://www.tjharman.com/.well-known/acme-challenge/FnaK7v52ZkQn43VitAr9Vav9SriOxC4bFrg_RdvvHWg\",\r\n      \"hostname\": \"www.tjharman.com\",\r\n      \"port\": \"80\",\r\n      \"addressesResolved\": [\r\n        \"103.247.152.88\"\r\n      ],\r\n      \"addressUsed\": \"103.247.152.88\"\r\n    }\r\n  ]\r\n})\r\n```\r\n\r\n\r\nFor some reason my URL is http://tjharman.com.well-known  ?\r\n\r\nIs there a parsing error here?\r\n\r\nI am using commit 89de83c99428481d880aac6f9702f4ecea38fa53 OMG I was missing a /\r\n\r\nI am so, so sorry for wasting your time. I'm sure, but I still made another small donation by way of apology.  Hi, i'm having some trouble to force the renewing of a certificate with version 0.6.1.\r\n\r\nRequesting a new certificate (`./dehydrated -c -d test.example.com`) works fine,\r\nbut an second run with `./dehydraded -c -x -d test.example.com` fails.\r\n````text\r\n + Responding to challenge for text.example.com authorization...\r\nERROR: Problem connecting to server (post for http://test.example.com/.well-known/acme....\r\n````\r\n\r\nAfter some debugging i think there is a problem in `get_json_string_value()` function or json is'nt proper grepped ....\r\n\r\n````bash\r\nchallenge_uris[${idx}]=\"$(echo \"${challenge}\" | get_json_string_value url)\"\r\n````\r\n\r\nThe \"renew\" JSON  from `${challenge}`  contains a second 'url' and looks truncated:\r\n````json\r\n{\"type\": \"http-01\", \"status\": \"valid\", \"url\": \"https://acme-staging-v02.api.letsencrypt.org/acme/chal....\", \"token\": \"......\", \"validationRecord\": [{\"url\": \"http://test.example.com/.well-known/acme-challenge/...\", \"hostname\": \"test.example.com\", \"port\": \"80\", \"addressesResolved\": [\".....\"], \"addressUsed\": \"...\"}\r\n````\r\n\r\nThe JSON for a new cert-request didn't contains an `validationRecord` - no second url:\r\n````json\r\n {\"type\": \"http-01\", \"status\": \"pending\", \"url\": \"https://acme-staging-v02.api.letsencrypt.org/acme/chal...\", \"token\": \"....\"}\r\n````\r\n\r\nAnybody having same issue?\r\n Hi, we are facing similar issue:\r\n\r\ndehydrated -c  -x  -d example.com -d www.example.com\r\n\r\nERROR: Challenge is invalid! (returned: ) (result: wClXT0e2KS5ALWrs1sKsQoxzYUA8VQxxHai5TBvvdNA.NMCeBkC_6N-Gq1Z4PrGrUd-9noP83HtpQBuqhKlUAZ0)\r\n\"dehydrated -c  -x  -d example.com -d www.example.com\" unexpectedly returned exit value 1 at /opt/perl/5.26/share/site/App/Cmd.pm line 468.\r\n\r\nDehydrated version: 0.6.1\r\nopenssl: OpenSSL 1.0.1e-fips 11 Feb 2013\r\nOS: CloudLinux Server release 6.9 (Igor Volk) @lukas2511 yep, my bad, didn't pay attention that error was a bit different. We do not use dns validation, though this error does not appear with 0.6.2 version, so everything is ok now \ud83d\udc4d   Lately I've come across this bug:\r\n\r\n```\r\n(Longer than 30 days). Ignoring because renew was forced!\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting new certificate order from CA...\r\n + Received 1 authorizations URLs from the CA\r\n + Handling authorization for my.domain\r\n + 1 pending challenge(s)\r\n + Deploying challenge tokens...\r\nConfiguring nginx for acme challenge (my.domain)\r\n + Responding to challenge for my.domain authorization...\r\n  + ERROR: An error occurred while sending post-request to http://my.domain/.well-known/acme-challenge/Qu6DxevKnvFIksMVVIU6mGeaKpgXxoPv_stj_HNg0WQ (Status 405)\r\n\r\nDetails:\r\nHTTP/1.1 405 Not Allowed\r\nServer: nginx\r\nDate: Wed, 25 Apr 2018 17:20:56 GMT\r\nContent-Type: text/html\r\nContent-Length: 166\r\nConnection: keep-alive\r\nStrict-Transport-Security: max-age=15768000; includeSubDomains; preload\r\n\r\n<html>\r\n<head><title>405 Not Allowed</title></head>\r\n<body bgcolor=\"white\">\r\n<center><h1>405 Not Allowed</h1></center>\r\n<hr><center>nginx</center>\r\n</body>\r\n</html>\r\n```\r\n\r\nI'm super confused why dehydrated tries to send a POST request to .well-known...  I'm getting this error with increasing frequency. The response looks something like:-\r\n\r\n```\r\n{\"type\":\"urn:acme:error:badNonce\",\"detail\":\"JWS has invalid anti-replay nonce **NONCE**\",\"status\":400}\r\n```\r\n\r\nThe only \"fix\" appears to be re-running dehydrated, sometimes several times, until it succeeds.\r\n\r\nIn https://github.com/diafygi/gethttpsforfree/issues/150#issuecomment-380361381 they suggest that \"nonce timeouts are becoming more common\". I assume that's what I'm seeing here too? I am also seeing this.  Example output:\r\n\r\n```\r\nProcessing demidamson.org with alternative names: *.demidamson.org\r\n + Checking domain name(s) of existing cert... changed!\r\n + Domain name(s) are not matching!\r\n + Names in old certificate: cliff.demidamson.org demidamson.org mail.demidamson.org proof.demidamson.org www.demidamson.org\r\n + Configured names: *.demidamson.org demidamson.org\r\n + Forcing renew.\r\n + Checking expire date of existing cert...\r\n + Valid till Jun  5 18:02:05 2018 GMT (Longer than 30 days). Ignoring because renew was forced!\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting new certificate order from CA...\r\nNonce: kSCHApAbf9-DzROJ2tDz5PHWQ6415Wt_NjqPB3tw41E\r\n + Received 2 authorizations URLs from the CA\r\n + Handling authorization for demidamson.org\r\n + Handling authorization for demidamson.org\r\n + 2 pending challenge(s)\r\n + Deploying challenge tokens...\r\n + Responding to challenge for demidamson.org authorization...\r\nNonce: 24xRxskZFAvH6TLV8h9E0xgE82Ozx3GeTbIizm0Gt0A\r\n + Challenge is valid!\r\n + Responding to challenge for demidamson.org authorization...\r\nNonce: 274clr42IKJTC3MUNPPdaxVaBGJDK88AknJ_Yv8K7PM\r\n + Challenge is valid!\r\n + Cleaning challenge tokens...\r\n + Requesting certificate...\r\nNonce: LhkvE7j-vosfFHtkjQ5EVFIZhuH5DAaBtMKL0-LULwU\r\n  + ERROR: An error occurred while sending post-request to https://acme-v02.api.letsencrypt.org/acme/finalize/9161467/3737048 (Status 400)\r\n\r\nDetails:\r\nHTTP/1.1 100 Continue\r\nExpires: Thu, 26 Apr 2018 17:10:25 GMT\r\nCache-Control: max-age=0, no-cache, no-store\r\nPragma: no-cache\r\n\r\nHTTP/1.1 400 Bad Request\r\nServer: nginx\r\nContent-Type: application/problem+json\r\nContent-Length: 169\r\nBoulder-Requester: 9161467\r\nReplay-Nonce: 2Gb7gCvUgTvEc1kbUca5bZpiLj5iNdecPXPMoY9GDYQ\r\nExpires: Thu, 26 Apr 2018 17:10:25 GMT\r\nCache-Control: max-age=0, no-cache, no-store\r\nPragma: no-cache\r\nDate: Thu, 26 Apr 2018 17:10:25 GMT\r\nConnection: close\r\n\r\n{\r\n  \"type\": \"urn:ietf:params:acme:error:badNonce\",\r\n  \"detail\": \"JWS has an invalid anti-replay nonce: \\\"LhkvE7j-vosfFHtkjQ5EVFIZhuH5DAaBtMKL0-LULwU\\\"\",\r\n  \"status\": 400\r\n}\r\n\r\nRequest failure: 400 {\r\n  \"type\": \"urn:ietf:params:acme:error:badNonce\",\r\n  \"detail\": \"JWS has an invalid anti-replay nonce: \\\"LhkvE7j-vosfFHtkjQ5EVFIZhuH5DAaBtMKL0-LULwU\\\"\",\r\n  \"status\": 400\r\n}\r\n```\r\n In case it helps, my config file contains:\r\n\r\n```\r\nCHALLENGETYPE=\"dns-01\"\r\nWELLKNOWN=\"${BASEDIR}/wellknown\"\r\nHOOK=\"${BASEDIR}/hook2.pl\"\r\nHOOK_CHAIN=\"yes\"\r\nCONTACT_EMAIL=\"cliff@might.be\"\r\n``` OK, so it fails first time on every machine I'm trying it on.\r\n\r\nOutput (with echo) is below...\r\n\r\n```\r\nNonce: UawgckMjzaYcfL8ic2bQRQLjBs0VKqAhzY7GOxSwvzc\r\nNonce: 3fYLEt90kzqRapD-wg3VTmnMufWboHwO4ux0Iid0Qgg\r\nNonce: Bv-Juf5kr281OAdl_bR9NcwRYKyPdxQxEy0tsNbeqg0\r\n  + ERROR: An error occurred while sending post-request to https://acme-v02.api.letsencrypt.org/acme/finalize/5474087/3738618 (Status 400)\r\n\r\nDetails:\r\nHTTP/1.1 100 Continue\r\nExpires: Thu, 26 Apr 2018 17:41:29 GMT\r\nCache-Control: max-age=0, no-cache, no-store\r\nPragma: no-cache\r\n\r\nHTTP/1.1 400 Bad Request\r\nServer: nginx\r\nContent-Type: application/problem+json\r\nContent-Length: 169\r\nBoulder-Requester: 5474087\r\nReplay-Nonce: 6bYt73P6LBAu0R2dNcCxJ7xBJCOK2B_sVIPdP4d0h2M\r\nExpires: Thu, 26 Apr 2018 17:41:30 GMT\r\nCache-Control: max-age=0, no-cache, no-store\r\nPragma: no-cache\r\nDate: Thu, 26 Apr 2018 17:41:30 GMT\r\nConnection: close\r\n\r\n{\r\n  \"type\": \"urn:ietf:params:acme:error:badNonce\",\r\n  \"detail\": \"JWS has an invalid anti-replay nonce: \\\"Bv-Juf5kr281OAdl_bR9NcwRYKyPdxQxEy0tsNbeqg0\\\"\",\r\n  \"status\": 400\r\n}\r\n``` Not using multiple egress addresses or IPv6 here. I don't believe so. Certainly nothing that would change between requests in the same run. Well heck, it certainly does!\r\n\r\nTime to get on the phone to my ISP... @lukas2511 Fixing it to IPv6 appears to have solved the problem for me. We encountered the same problem today.  It appears that a customer has changed the DNS configuration of one of the domains of the certificate failing to renew to a previous configuration where the A record was the IP address of an old shared hosting by OVH and no AAAA record was set.\r\n\r\nBecause OVH can do TLS for shared hosting through letsencrypt, my guess is that when the letsencrypt validation server tries to fetch a token it gets one from OVH (maybe an old one, and of course it's not what the validation server expects so the renewal fail\u2026 and the \"invalid anti-replay nonce\" message makes sense).\r\n\r\n@CliffS Maye it's worth double-checking that both IPv4 and IPv6 resolves to the same server for your domain: that would explain why renewing over IPv4 would work if accessing through IPv6 brings you somewhere else? @smortex Interestingly there was no reverse DNS for the IPv6 address, though IPv4 reverse was correct.  I have fixed the IPv6 reverse and I will retest without forcing the IPv6. @CliffS I don't think reverse DNS has an impact here. I was thinking about the IPv4 address and the IPv6 address not being served by the same machine.\r\n\r\nJust like for example http://www.kame.net/ is not the same site over IPv4 and IPv6\u2026 Static image in one case, animated gif otherwise \ud83d\ude09  I had this issue today on a certificate with 6 alternative names: it was failing randomly on one of them.\r\n\r\nAfter talking about it on irc with @lukas2511 and reading this thread, setting `IP_VERSION=6` did indeed fix the issue for me. The server in question has 2 IPv4 addresses and 1 IPv6 address, but never had the issue before.\r\n\r\nChecking with `curl https://my-ipv4.kurz.pw`, I always see the same IPv4 address, so I don't think it flickers.\r\n\r\nI'll try to test that by creating a certificate with a lot of alternative name and run tcpdump to capture the result and see what exactly is going on. I was having this same problem today and found that setting `IP_VERSION=4` fixed the issue. My laptop has an IPv4 and IPv6 address. I had this issue today, but unfortunately the ISP won't change its behavior. \r\n@lukas2511 looking around the forums at LetsEncrypt there was a suggestion that the client retry the request with the nonce from the response a few(reasonable) times before giving up. \r\nWould it be hard to implement this in dehydrated? @lukavia i want to implement two things in the not-too-far future:\r\n\r\nI want to try to find a way to resolve the api hostname only once, so that every further curl call uses the same server, this will solve this bug.\r\n\r\nI also want to add retries, but those are a lower priority for me as use-cases with hundreds of domains per single certificate are low and everything else can quickly be solved by just running the script again. @lukas2511 Unfortunately even if you resolve the api hostname only once, the problem will persist since the provider route would still be different every time. Here is an example: \r\nI have 2 internet providers with pfSense router installed. pfSense is making load balance one on one. That means that on every request to the same ip each time it goes through the other provider and the originator (your) ip is different. \r\n\r\nSo I think retry feature should be higher priority. \r\n\r\nP.S. Since you use curl, you can just make \"host\" command the first time to get the ip, and then use the ip with Host header for each request @lukavia you can simply program a pfsense rule to route traffic to letsencrypt through one provider (i.e do not load balance it).\r\nThat's what I did when I I had the same issue. This was an example of the problem. When the provider does the same you don't have access to those settings. I also have the same issue, it seems to happen randomly, I have to launch dehydrated in a loop until it succeeds\u2026 We're also seeing this, probably related to being behind NAT (so outgoing IP changes all the time). It's not clear to me why this should matter - is the source IP encoded in the Nonce somehow, or is it stateless at the server and and you're just getting a different remote server each time?\r\nIn any case, having dehydrated be able to retry with the new Nonce each time would be better, but perhaps this is a problem with Boulder itself?\r\n From my side when I've added `IP_VERSION=6` nonce error disappeared\r\n Just to chime in, as I encountered this issue on a completely unrelated system and Googling brought me here.\r\n\r\nThis issue is essentially caused by LE being unable to get the ACME challenge from the specified domain name. It's clearly not as simple as DNS not being set up correctly, as it's more nuanced than this.\r\n\r\nA lot of the people in this thread have found out that when you have multiple IP addresses, they don't always route to the same endpoint. Likewise if you're on a shared IP of any kind, there's no way to guarantee that you'll get the right host either. This is why a lot of people setting IP_VERSION=6 or IP_VERSION=4 \"fixes\" the issue, it's simply removing the \"other\" IP Addresses. Essentially, it boils down to your local configuration/network/setup and that's why there's no single thing that will \"fix\" it.\r\n\r\nIn _my_ case, IP addresses weren't the issue but rather a redirect was redirecting .well-known incorrectly, causing it to return a 200 with content, just not the content of the ACME challenge - hence \"bad nonce\". Had it returned a 404, you'd have got the much more useful error that contains the link to the renewal failure report.\r\n\r\nI was able to figure this out by simply trying to navigate to <my-site>.com/.well-known/acme-challenge/<nonce> - it should return the nonce directly and not anything else.\r\n\r\nTo sum up, if you're getting this error:\r\n\r\n- Check how many IP addresses you have and ensure they all route to the same place\r\n- Ensure you're not using a shared IP address\r\n- Ensure you haven't got any redirects affecting .well-known\r\n- Make sure you can do a GET on the .well-known/acme-config/<nonce> from external sources I'm running `dehydrated` as part of an integration-test on Travis. I did run into this issue since some of their test workers are [behind a NAT](https://blog.travis-ci.com/2018-07-23-the-tale-of-ftp-at-travis-ci). First thing i tried was to find forward proxy software which implements connection pooling/reuse for HTTPS. The closest thing I've found is some adventurous [nginx/lua approach](https://www.kik.com/blog/nginx-as-an-https-connection-pool-manager/).\r\n\r\nI ended up tunneling all `curl` requests through `tor` when running the `dehydrated` test on Travis. This might not be acceptable in production though.  I know the usual answer to this kind of questions is to add a hook setting permissions to whatever the admin wants, but to me it seems such a normal situation that I believe dehydrated should support configuring this options in the cof file(s).\r\n\r\nIt would be best if this was support both in the main configuration file (for the whole $CERTDIR) and for single domains (so it affects only $CERTDIR/$DOMAIN)\r\n\r\nI'm imaging this set of variables with these defaults:\r\n```\r\nCERTOWNER=\"$DEHYDRATED_USER\"\r\nCERTGROUP=\"$DEHYDRATED_GROUP\"\r\nCERTPERM=\"u=rwX,go=\"\r\n```\r\nThis should be equal to what dehydrated is doing right now.\r\n\r\nThen I as admin who wants to make the certs readable to a whole group I would add e.g.\r\n```\r\nCERTGROUP=ssl-certs\r\nCERTPERM=\"ug=rX,o=\"\r\n```\r\n\r\n(Yes, this proposal doesn't distinguish between public certs and keys, I'm fine with the public certs not being readable by local users *shrugs*)  Carefully cut from the as RAW as possible ~~totally not pirate~~ RIP :)  The hooks mechanism of dehydrated has a significant usability problem: there is no way to execute hooks with higher privileges than dehydrated itself. For example, I do not want dehydrated to run as root (which I hope is understandable), but I need root privileges to deploy the resulting keys.\r\n\r\nLocally, I have worked around this with a sort of \"playbook\" mechanism: I have a catch-all deployment hook that records all its invocations in a text file and after dehydrated is done, a \"real\" hook is run that reads the text file and executes recorded actions with elevated privileges.\r\n\r\nCan we have something similar in dehydrated? Or at least a kind of internal privilege separation when dehydrated starts as root, forks, then the child process drops privileges, performs network operations and communicates back to the parent when a hook needs to be run. setuid / setgid could help here, although unsupported for scripts.   So will open it again then?  I didn't find any other place to ask for support, so sorry if this isn't the right place to ask this question.\r\n\r\nI'm trying to set up dehydrated and get rid of the official letsencrypt client. I've done so successfully on one server and I'm hitting problems doing it on another one.\r\n\r\nThe error message I get is this:\r\n```\r\n$ dehydrated/dehydrated -c\r\n# INFO: Using main config file /etc/dehydrated/config\r\nProcessing nuee.schlueter.is\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting new certificate order from CA...\r\n + Received 1 authorizations URLs from the CA\r\n + Handling authorization for nuee.schlueter.is\r\n + 1 pending challenge(s)\r\n + Deploying challenge tokens...\r\n + Responding to challenge for nuee.schlueter.is authorization...\r\n + Cleaning challenge tokens...\r\n + Challenge validation has failed :(\r\nERROR: Challenge is invalid! (returned: invalid) (result: {\r\n  \"type\": \"http-01\",\r\n  \"status\": \"invalid\",\r\n  \"error\": {\r\n    \"type\": \"urn:ietf:params:acme:error:connection\",\r\n    \"detail\": \"Fetching http://nuee.schlueter.is/.well-known/acme-challenge/current_token: Timeout\",\r\n    \"status\": 400\r\n  },\r\n  \"url\": \"https://acme-staging-v02.api.letsencrypt.org/acme/challenge/QiWcN1U_r-lrL0Mule3SiB6Qgo5Emdkyqgtqs2ezClk/118245333\",\r\n  \"token\": \"current_token\",\r\n  \"validationRecord\": [\r\n    {\r\n      \"url\": \"http://nuee.schlueter.is/.well-known/acme-challenge/current_token\",\r\n      \"hostname\": \"nuee.schlueter.is\",\r\n      \"port\": \"80\",\r\n      \"addressesResolved\": [\r\n        \"46.101.150.180\",\r\n        \"2a03:b0c0:3:d0::2457:3001\"\r\n      ],\r\n      \"addressUsed\": \"2a03:b0c0:3:d0::2457:3001\"\r\n    }\r\n  ]\r\n})\r\n```\r\n\r\nI've set up a `test.txt` in `/var/www/dehydrated` as suggested in the wiki. The file is accessible via .well-known/acme-challenge/test.txt. I'm not sure how to read the `400` error described in the JSON blob above.\r\n\r\nAs I said, I do have a currently still active cert from another client, which I thought might cause problems (even though it shouldn't, because the order is request cert - answer challenge - obtain cert, no?). I have thus disabled ssl redirection, making the folder accessible via plain port 80 http, but had the same result. Any other idea?\r\n\r\nSome environment info:\r\n```\r\n$ dehydrated/dehydrated --version\r\n# INFO: Using main config file /etc/dehydrated/config\r\nDehydrated by Lukas Schauer\r\nhttps://dehydrated.de\r\n\r\nDehydrated version: git-master-after-0.6.1\r\nGIT-Revision: unknown\r\n\r\nOS: Ubuntu 16.04.4 LTS \r\nUsed software:\r\n bash: 4.3.48(1)-release\r\n curl: curl 7.47.0\r\n awk: GNU Awk 4.1.3, API: 1.1 (GNU MPFR 3.1.4, GNU MP 6.1.0)\r\n sed: sed (GNU sed) 4.2.2\r\n mktemp: mktemp (GNU coreutils) 8.25\r\n grep: grep (GNU grep) 2.25\r\n diff: diff (GNU diffutils) 3.3\r\n openssl: OpenSSL 1.1.0h  27 Mar 2018\r\n```\r\n\r\nRelevant nginx log:\r\n```\r\n52.29.173.72 - - [16/Apr/2018:13:10:58 +0200] \"GET /.well-known/acme-challenge/current_tokenHTTP/1.1\" 200 87 \"http://nuee.schlueter.is/.well-known/acme-challenge/current_token\" \"Mozilla/5.0 (compatible; Let's Encrypt validation server; +https://www.letsencrypt.org)\"\r\n13.58.30.69 - - [16/Apr/2018:13:11:01 +0200] \"GET /.well-known/acme-challenge/current_token HTTP/1.1\" 301 194 \"-\" \"Mozilla/5.0 (compatible; Let's Encrypt validation server; +https://www.letsencrypt.org)\"\r\n```\r\n\r\nThe nginx config looks as described in the wiki and, as I said above, the test.txt is accesible.  probably copy-paste from further up, timestamp is parameter 3  Using the config as explained here: https://github.com/lukas2511/dehydrated/blob/master/docs/wellknown.md#apache-example-config\r\n\r\nI am trying to set up the .well-known/acme-challenge to be available under every vhost. But one vhost has for example 'Redirect permanent / https://foo.bar/cms.\r\n\r\nThis config forces a redirect and breaks the config.\r\n\r\nThen there is\r\n<Location> AuthType Basic\u2026 </Location> which also breaks the setting. :(\r\n\r\nThe apache config explains how the later rules take predesence https://httpd.apache.org/docs/2.4/sections.html#merge-examples\r\n\r\nDoes anyone know how to get around this? I could write excluding-rules and adjust every vhost config. But this is anything but pretty. :( True, but if there was some apache config option that would prevent it from being overwritten, it would be a great addition to the docs. :-) But I'll see what I can find out.  i'm using the default HOOK_CHAIN=\"no\" as i'm calling the deploy_challenge and clean_challenge function seperatel and in my case i'm using CHALLENGETYPE=\"http-01\".\r\ni notice that the function \"clean_challenge\" is not being called in such scenario.\r\n\r\ni think that after these 2 lines:\r\n```\r\n      # Clean challenge token using non-chained hook\r\n      [[ \"${CHALLENGETYPE}\" = \"dns-01\" ]] && [[ -n \"${HOOK}\" ]] && [[ \"${HOOK_CHAIN}\" != \"yes\" ]] && \"${HOOK}\" \"clean_challenge\" ${deploy_args[${idx}]}\r\n```\r\nsome like this line should appear\r\n`      [[ \"${CHALLENGETYPE}\" = \"http-01\" ]] && [[ -n \"${HOOK}\" ]] && [[ \"${HOOK_CHAIN}\" != \"yes\" ]] && \"${HOOK}\" \"clean_challenge\" ${deploy_args[${idx}]}`\r\n\r\nis there a problem or am I missing something?  Hey there,\r\n\r\nWhen I run this script under FreeBSD's /etc/crontab, the default path is:\r\n\r\nPATH=/etc:/bin:/sbin:/usr/bin:/usr/sbin\r\n\r\nEven though I'm calling Dehydrated via its full path, it fails to find curl. Adding an override within the script to set the environment, or to specify the full path to curl would be useful.\r\n\r\nThanks. In my own experience I have found it is best practice to be able to specify the full path to executables in scripts run via crontab to avoid issues with $PATH searching.\r\n\r\nAlso there is already an option to allow you to specify the OpenSSL binary (defaults to \"openssl but could be set to a full path) so it makes sense there should be one for curl too.  I keep getting ``Must agree to subscriber agreement before any further actions`` when trying to get a wildcard certificate. I have started with a clean install, only thing I changed is the staging server in the config. Maybe just I am doing something wrong.\r\n\r\nThe hook.sh is [my own hook script](https://github.com/gheja/dns-01-manual) as neither the name server nor the web server is located on this machine.\r\n\r\n(Replaced my domain with ``example.com``. And I think in hindsight that using this private key is not recommended.)\r\n\r\n```\r\n$ openssl genrsa -des3 -out example.com.key 4096\r\n[...]\r\n\r\n$ openssl req -new -key example.com.key -out test4.csr\r\n[...]\r\nCommon Name (e.g. server FQDN or YOUR name) []:example.com\r\n[...]\r\n\r\n$ ./dehydrated --register --privkey example.com.key --accept-terms\r\n# INFO: Using main config file /home/user/dehydrated/config\r\nUsing private key example.com.key instead of account key\r\nEnter pass phrase for example.com.key:\r\nEnter pass phrase for example.com.key:\r\nEnter pass phrase for example.com.key:\r\n+ Account already registered!\r\n\r\n$ ./dehydrated --signcsr test4.csr --privkey example.com.key --out test4.crt --challenge dns-01 --hook ./hook.sh --domain '*.example.com'\r\n# INFO: Using main config file /home/user/dehydrated/config\r\nUsing private key example.com.key instead of account key\r\nEnter pass phrase for example.com.key:\r\nEnter pass phrase for example.com.key:\r\nEnter pass phrase for example.com.key:\r\nFetching missing account information from CA...\r\nEnter pass phrase for example.com.key:\r\nEnter pass phrase for example.com.key:\r\n + Requesting authorization for example.com...\r\nEnter pass phrase for example.com.key:\r\n  + ERROR: An error occurred while sending post-request to https://acme-staging.api.letsencrypt.org/acme/new-authz (Status 403)\r\n\r\nDetails:\r\nHTTP/1.1 100 Continue\r\nExpires: xxx\r\nCache-Control: max-age=0, no-cache, no-store\r\nPragma: no-cache\r\n\r\nHTTP/1.1 403 Forbidden\r\nServer: nginx\r\nContent-Type: application/problem+json\r\nContent-Length: 137\r\nBoulder-Requester: xxx\r\nReplay-Nonce: xxx\r\nExpires: xxx\r\nCache-Control: max-age=0, no-cache, no-store\r\nPragma: no-cache\r\nDate: xxx\r\nConnection: close\r\n\r\n{\r\n  \"type\": \"urn:acme:error:unauthorized\",\r\n  \"detail\": \"Must agree to subscriber agreement before any further actions\",\r\n  \"status\": 403\r\n}\r\n\r\nrm: cannot remove '/home/user/dehydrated/domains.txt': No such file or directory\r\n\r\n``` Hmm, when I am not using ``--privkey`` the script just works fine.\r\n```\r\n$ ./dehydrated --register --accept-terms\r\n# INFO: Using main config file /home/user/dehydrated/config\r\n+ Generating account key...\r\n+ Registering account key with ACME server...\r\n+ Done!\r\n\r\n$ ./dehydrated --signcsr test4.csr --out test4.crt --challenge dns-01 --hook ./hook.sh --domain '*.example.com'\r\n# INFO: Using main config file /home/user/dehydrated/config\r\n + Requesting authorization for example.com...\r\n + 1 pending challenge(s)\r\n + Deploying challenge tokens...\r\n\r\nAdd the following to the zone definition of example.com:\r\n_acme-challenge.example.com. IN TXT \"xxx\"\r\n\r\nPress enter to continue...\r\n\r\n + Responding to challenge for example.com authorization...\r\n + Challenge is valid!\r\n + Cleaning challenge tokens...\r\n\r\nNow you can remove the following from the zone definition of example.com:\r\n_acme-challenge.example.com. IN TXT \"xxx\"\r\n\r\nPress enter to continue...\r\n\r\n + Requesting certificate...\r\n + Checking certificate...\r\n + Done!\r\n# CERT #\r\n-----BEGIN CERTIFICATE-----\r\nxxx\r\n-----END CERTIFICATE-----\r\n```\r\n\r\nSo it looks like when using a private key from file instead of account key the ToS acceptance is not working for some reason. > Any error messages about ToS not being accepted actually seem to be a boulder issue because boulder doesn't implement the only-return-existing flag for account registration/information. I won't change anything about this in dehydrated as it actually follows the protocol specification and the CA should return a different error in this case.\r\n\r\nBoulder [does implement `onlyReturnExisting`](https://github.com/letsencrypt/boulder/blob/1271a15be79b9717ee5b98e707b76e7ac86a9a0e/wfe2/wfe.go#L475-L482) for ACME v2 (It's not something that was initially specified in ACME \"v1\").\r\n\r\nThis is the correct error message for an ACMEv1 request that is using an account that has been created, but that has not posted the `agreement` field. @lukas2511 That divergences doc needs to be clarified - it only applies to the V1 endpoint and was written at the time when we didn't have an ACME v2 implementation. The case was changed from `only-return-existing` to `onlyReturnExisting` in a later draft and that page needs to be caught up with its references. ACME v2 does implement this feature. ACME v2 has no divergences page (there's only the two [mentioned at the end of the announcement](https://community.letsencrypt.org/t/acme-v2-production-environment-wildcards/55578/2)).\r\n\r\nIt's all a bit of a mess with regards to legacy ACME. There's no specific \"v1\" draft because the implementation and the point at which drafts were cut were not in lockstep. The latest V2 specs are always here: https://datatracker.ietf.org/doc/draft-ietf-acme-acme/\r\n  I currently can't renew my certificates. I am running dehydrated 0.6.1, it may be related to my recent addition of `CAA` records to my DNS server. But I ran a bunch of CAA testers (for example [this one](https://caatest.co.uk/)) over it, and they tell me, it's fine.\r\n\r\nhere's the error that's being produced:\r\n\r\n    DNS problem: SERVFAIL looking up CAA for (my domain name)\r\n\r\nOr, somewhat longer:\r\n\r\n```sh\r\n$ dehydrated-letsencrypt-update\r\n# INFO: Using main config file /etc/dehydrated/config\r\nProcessing www.(my domain) with alternative names: (my domain)\r\n + Checking domain name(s) of existing cert... unchanged.\r\n + Checking expire date of existing cert...\r\n + Valid till May  5 04:47:18 2018 GMT Certificate will expire\r\n(Less than 30 days). Renewing!\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting new certificate order from CA...\r\n + Received 2 authorizations URLs from the CA\r\n + Handling authorization for www.(my domain)\r\n + Handling authorization for (my domain)\r\n + 2 pending challenge(s)\r\n + Deploying challenge tokens...\r\n + Responding to challenge for www.(my domain) authorization...\r\nERROR: Challenge is invalid! (returned: invalid) (result: {\r\n  \"type\": \"http-01\",\r\n  \"status\": \"invalid\",\r\n  \"error\": {\r\n    \"type\": \"urn:ietf:params:acme:error:connection\",\r\n    \"detail\": \"DNS problem: SERVFAIL looking up CAA for (my domain)\",\r\n    \"status\": 400\r\n  },\r\n  \"url\": \"https://acme-v02.api.letsencrypt.org/acme/challenge/QbY4XmY--redacted---9z2os/413---2653\",\r\n  \"token\": \"EhQRH2ub---redacted----L-xUsl4oR5nfs\",\r\n  \"validationRecord\": [\r\n    {\r\n      \"url\": \"http://---redacted---/.well-known/acme-challenge/EhQRH2ubW---redacted----AjRLVEevPPwlL-xUsl4oR5nfs\",\r\n      \"hostname\": \"www.(my domain)\",\r\n      \"port\": \"80\",\r\n      \"addressesResolved\": [\r\n        \"---redacted---\",\r\n        \"---redacted (v6)---\"\r\n      ],\r\n      \"addressUsed\": \"---redacted (v6)---\"\r\n    }\r\n  ]\r\n})\r\n``` Now, I'm not entirely sure that dehydrated is at fault at all. But I don't have any idea how to proceed debugging this. If you can state your domain name it would be easier to help you debug.\nI have CAA set for my domains and have no problem at all.\n\n This does appear to be an issue either with your DNS host or with Let's Encrypt's servers. Though the latter is less likely as it would be affecting far more users of Let's Encrypt if it were.\r\n\r\nSo ultimately this is an issue you will likely need to take up with your DNS host.\r\n\r\nEven telling us the domain name itself won't help much as all we will be able to determine is whether it is just CAA records that are failing, or if it's the whole domain that has an issue.\r\n\r\nThough it is also possible that DNSSEC is improperly setup for the domain too. I experienced that issue when I attempted to issue a certificate for one of my domains and got a SERVFAIL back from Let's Encrypt which turned out to be because there was an erroneous DS record still recorded at the .net DNS servers for the domain in question so DNSSEC validation was failing. Just a note to people coming here from Google: It appears to have been my DNS setup after all. For one thing, the DNSSEC didn't sign my (new) CAA records fast enough. Then, those changes didn't propagate as fast as I would have thought, they were probably cached somewhere from previous attempts.\r\n\r\nMost of this debugging was in the end \"waiting for the records to propagte\". Take your time. Do a lot of `dig`ging. [DNSviz](http://dnsviz.net/) was also immensely helpful. Make sure to check the CAA line in the advanced options (screenshot below). This turned up the missing signature.\r\n\r\nAlso: the target domain of a CNAME may need its own CAA record, I can't say for sure if this solved it, because this happened somewhere along the way.\r\n\r\n![dnsviz where to find the CAA setting](https://user-images.githubusercontent.com/124909/38525196-af9d381c-3c51-11e8-8f66-930b21277ef2.png)\r\n  When using dns-01 with a hook script, dehydrated moves directly from deploy_challenge to responding to challenge before the nsupdate has had time to complete. I have found that I need to wait at least 130 seconds after the deploy to ensure that the update has completed before responding to the challenge. \r\n\r\nThis trivial patch works reliably in my environment. \r\n\r\ndiff --git a/dehydrated b/dehydrated\r\nindex 40f9221..83ebfeb 100755\r\n--- a/dehydrated\r\n+++ b/dehydrated\r\n@@ -781,6 +781,8 @@ sign_csr() {\r\n \r\n   # Validate pending challenges\r\n   local idx=0\r\n+  echo \" + Sleep for 130 seconds to allow dns-01 hook to complete and update\"\r\n+  sleep 130\r\n   while [ ${idx} -lt ${num_pending_challenges} ]; do\r\n     echo \" + Responding to challenge for ${challenge_names[${idx}]} authorization...\"\r\n  #528 : this feature adds support for fullkeyandchain.pem. It will contain the merged key and fullchain.  I have some software, which prefferes to get a combined key and fullchain pem so only one file is loaded. It would be great, if the script would generate this in the certs directory next to the other output files, like fullchain (which is a combination of chain and cert as well) etc.\r\n\r\nRight now i can do it with a hook, but it would be great, if you just run the script, and the combined/merged/privkey_fullchain/full.pem whould be generated  Currently it seems KEY_ALGO can only be set to one value. I\u00b4d like dehydrated to generate RSA *and* secp384r1 keys automatically.\r\n\r\nI think I may work with two config files, two cron jobs and two different certificate directories but for example acme.sh can do both. So it would be nice if dehydrated can do it as well. Sorry, I missed #499 as I looked for duplicates. Subscribed there. Thank you.  Hi. \r\nI installed _dehydrated_ on an internal server. It's behind a firewall but I opened port 80 and set a CNAME (DDNS) on our vServer (with PLESK). The Plesk-Server is\r\n(www.)example.org and the internal server is server.intern.example.org.\r\n\r\nThis internal server can be reached via port 80. When I call\r\nhttp://server.intern.example.org/.well-known/acme-challenge/ I can access an index.html and the token will be generated correctly. But when I try \"dehydrated --cron\" I get this:\r\n \r\n  ```\r\ndehydrated --cron\r\n# INFO: Using main config file /etc/dehydrated/config\r\nProcessing server.intern.example.org\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting challenge for server.intern.example.org...\r\n + Hook: Nothing to do...\r\n + Responding to challenge for server.intern.example.org...\r\n + Hook: Nothing to do...\r\n + Hook: Nothing to do...\r\nERROR: Challenge is invalid! (returned: invalid) (result: {\r\n  \"type\": \"http-01\",\r\n  \"status\": \"invalid\",\r\n  \"error\": {\r\n    \"type\": \"urn:acme:error:connection\",\r\n    \"detail\": \"Fetching http://server.intern.example.org/.well-known/acme-challenge/mbskngek\u00fcrztO3yk: Timeout\",\r\n    \"status\": 400\r\n  },\r\n  \"uri\": \"https://acme-v01.api.letsencrypt.org/acme/challenge/Q1gbjgek\u00fcrzt920524828\",\r\n  \"token\": \"mbsknIOgek\u00fcrzt29U3yk\",\r\n  \"keyAuthorization\": \"mbskgek\u00fcrzt29U3yk.9MqbIWBPjs\",\r\n  \"validationRecord\": [\r\n    {\r\n      \"url\": \"http://server.intern.example.org/.well-known/acme-challenge/mgek\u00fcrzt9U3yk\",\r\n      \"hostname\": \"server.intern.example.org\",\r\n      \"port\": \"80\",\r\n      \"addressesResolved\": [\r\n        \"178.xxx.yyy.zzz\"\r\n      ],\r\n      \"addressUsed\": \"178.xxx.yyy.zzz\"\r\n    }\r\n  ]\r\n}) \r\n```\r\n\r\nI have no idea what to do. IPv6 is not activated -- so the fallback to IPv4 should work.\r\nAny hints what to do?\r\nThanks.   I'm trying to use the domains.txt file with \r\n\r\n```*.domain.com > wildcard.domain.com```\r\n\r\nBut when I use it I get \r\n\r\n`ERROR: Validating this certificate is not possible using http-01. Possible validation methods are: dns-01\r\n`\r\nI'm having a pretty hard time finding how to do this\r\n  Unfortunately, as a result of the issue of wildcard domain registration with their non-wildcard counterpart ([see issue 504](https://github.com/lukas2511/dehydrated/issues/504)), I cannot use dehydrated as the DNS provider's api does not support multiple TXT entry creation. The DNS provider I have only supports this manually in their web GUI.\r\n\r\nI am sure that there are several DNS providers that have this same issue with no solution available in the near future.\r\n\r\nAs a result, I recommend we add a new feature to allow the user to optionally put the challenge token deployment inline with the logic where the validation is done. This way the challenge token is deployed and is then immediately validated before the next token is deployed. I have hacked this up myself and it works like a charm but I'm sure others could benefit from this feature. For those who are interested, just comment out the \"Deploy challenge tokens\" block and add the following code to the # Validate pending challenges\" immediately after the while ... do statement:\r\n```\r\n    # Deploy challenge token\r\n    echo \" + Deploying challenge token for ${challenge_names[${idx}]}...\"\r\n    \"${HOOK}\" \"deploy_challenge\" ${deploy_args[${idx}]}\r\n```\r\n\r\nNote: This hack will make HOOK_CHAIN option moot. Out of curiosity which DNS provider are you using? Because the one mentioned in issue #504 mentions that the hook script used has been fixed to solve the issue.\r\n\r\nBecause ultimately it sounds to me that the hook script you're using incorrectly \"replaces\" the TXT record with the same name instead of adding a new one. Which also suggests to me a possibility that the author tried to save time not using the cleanup_challenge hook to remove old TXT records and just overwriting them every time instead. I am stuck using godaddy as its what the customer has 95% of their domains on. From my research, the [godaddy API](https://developer.godaddy.com/doc/endpoint/domains) does not allow setting multiple TXT entries with the same name. The only applicable API for creating TXT records that I see is:\r\n\r\n> [PUT] /v1/domains/{domain}/records/{type}/{name} \"Replace all DNS Records for the specified Domain with the specified Type and Name\"\r\n\r\nIf anyone can find a way to programatically set multiple TXT records with the same name in godaddy, please let me know. GoDaddy's API does support adding instead of replacing too but it appears to me the hook script listed for GoDaddy on https://github.com/lukas2511/dehydrated/wiki/Examples-for-DNS-01-hooks may or may not be using the wrong method of the godaddypy python library to update the DNS thus performing an update/replace instead of an add.\r\n\r\nSadly I don't have the resources to try and patch and test said script (I don't use GoDaddy) otherwise I'd give it a try and test it. I was using lexicon which showed godaddy as supported in their docs. I will try the py library listed today to see if they have an \"add\" api hook.  I saw mention of this when someone was developing GoDaddy support for https://github.com/AnalogJ/lexicon. IIRC, GoDaddy\u2019s API erases all TXT records when you upload a new one? I seem to remember something to the effect of having to poll for existing records first and saving them before adding a new one, to work around that...\r\n\r\nIs it possible that this poll/save/insert/put flow is malfunctioning here? I found the [API hook](https://developer.godaddy.com/doc/endpoint/domains#/v1/recordAdd) in GoDaddy for adding multiple records. [Lexicon](https://github.com/AnalogJ/lexicon) does not use this Api call but its exposed in pythons core library:\r\n```\r\nfrom godaddypy import Client, Account\r\nDOMAIN = \"_domain_\"\r\nAPI_KEY = \"_api-key_\"\r\nAPI_SECRET = \"_api-secret_\"\r\nREC_NAME = \"_acme-challenge\"\r\nclient = Client(Account(api_key=API_KEY, api_secret=API_SECRET))\r\nclient.add_record(DOMAIN, {'data':'TEST_VAL_1', 'name':REC_NAME, 'ttl':600, 'type':'TXT'})\r\nclient.add_record(DOMAIN, {'data':'TEST_VAL_2', 'name':REC_NAME, 'ttl':600, 'type':'TXT'})\r\nprint(DOMAIN, ' Records listed (should include TEST_VAL_1 and TEST_VAL_2: ', client.get_records(DOMAIN, record_type='TXT'))\r\n```\r\n\r\nThe scary thing I see right now is that I cannot safely delete records via API as godaddy does not expose a safe call to do this. Here is a note from the python core library def delete_records():\r\n>This is haphazard functionality.   I DO NOT recommend using this in Production code, as your entire DNS record set could be deleted, depending on the fickleness of GoDaddy.  Unfortunately, they do not expose a proper \"delete record\" call, so there isn't much one can do here...\r\n\r\nI read the code at it is very unsafe and not recommended. I guess for godaddy we can just spam TXT records in using the godaddypy API and delete them in a more safe way manually at a future date.\r\n\r\nI am on the fence regarding this feature request ticket. There may still be merit in the approach. I ran the script on just under 100 dns entries including wildcards using my hack at the top of this thread and it worked like a charm. @lukas2511 - Agreed. I spent the day working with [le-godaddy-dns](https://github.com/josteink/le-godaddy-dns) and only had to add a small tweak to make the deploy_challenge hook invoke godaddypy client.add_record() instead of update_record(). I also added a tweak to update records to \"_dehydrated-was-here_\" during clean_challenge hook.\r\n\r\nThe net result is a very fast cycle time for the cert generation and as I have to generate many certs with close to 100 dns entries in each, this is a relief.\r\n\r\nI'll just ask the godaddy support guys to kill those TXT entries after I'm done the cert deployment.\r\n\r\nFYI to others, I am quite impressed with le-godaddy-dns. Its a very well written python library, however it does need to be hacked to add functionality rather than configured.\r\n\r\nThanks for dehydrated, its an awesome library and will definitely be a reference when I need to do some advanced bashing down the road :) @JavaScriptDude Your \"hacky\" solution in comment https://github.com/lukas2511/dehydrated/issues/522#issuecomment-376044830 saved me after a couple of hours of pulling my hair why the challenge fails for DuckDNS. They only support one TXT record per domain, and sub-subdomains' TXT count towards your account, so you can have only one global TXT record for all your sub-subdomains. E.g. `something.duckdns.org` returns the same TXT record as `sub.something.duckdns.org` or `anothersub.something.duckdns.org`. That is why the wildcard cert creation failed for me many many times before I found your comment. Thanks, random Internet person! :smiley:   I have a little unusual problem, I searched for solution for hours and didn't find anything. I want certificate for ftp.example.net and the only option is DNS validation, because there's no HTTP service on ftp.example.net. I also want to use the \"CNAME trick\" (_acme-challenge.example.net CNAME example-net.acme.otherdomain.net) for one reason or another (either there's no automated access to example.net nameservers at all, or it's \"all or nothing\" and I don't like the idea that the client could change any record under example.net).\r\n\r\nMy expectation was that I simply set one CNAME for _acme-challenge.example.net and it will be enough. But it isn't, because Let's Encrypt is looking for _acme-challenge.ftp.example.net. If it was only one subdomain, it would be ok to add another CNAME. But what if I want ftp01 to ftp99? I don't want to add 99 CNAMEs.\r\n\r\nLuckily, I can now solve it using wildcard certificate for *.example.net and just one CNAME will be enough for that. But if _acme-challenge.example.net is good enough for *.example.net, shouldn't it also suffice for ftp.example.net, which is only tiny subset? Is this something that dehydrated could influence, or is it limitation of ACME protocol? Unfortunately you will require a CNAME for EVERY specific host name you want to include in a certificate. Additionally this decision is not within dehydrated's control. It is a decision made either by Let's Encrypt or by the authors of the ACME protocol specification.\r\n\r\nI will admit I too am using the CNAME method so I don't have to enable dynamic DNS for all the domains I manage, and the keys I have setup for my dynamic DNS only allow setting TXT records as an added security precaution even though the dynamic DNS zone I use is hosted o the same DNS servers as the other domains. No problem, I will manage. I was just wondering about options. I thought that client could perhaps be allowed to choose which domain to use for DNS verification (the one it wants certificate for, or its parent). Changing it to require _acme-challenge only directly under main domain would be of course wrong, for the exact reason you gave. But as it is now, it's not exactly intuitive. If I control main domain, it means I also control subdomains, so it would make sense if I could prove ownership of either, when I want certificate for subdomain. Now it feels strange, it's like kid being refused to take one cookie (certificate for specific subdomain), but free to take a full bag of them (wildcard certificate), which includes originally wanted one. :) Anyway, thanks for info.  Trying to run dehydrated on an older (mac os x) system I'm running into this error:\r\ndehydrated: line 10: set: pipefail: invalid option name\r\n\r\nOutput of bash -x dehydrated -c\r\n```\r\n+ set -e\r\n+ set -u\r\n+ set -o pipefail\r\n dehydrated: line 10: set: pipefail: invalid option name\r\n```\r\nBash version is\r\n`GNU bash, version 2.05b.0(1)-release (powerpc-apple-darwin8.0)`\r\n\r\nOn another Mac OS machine with a more recent bash version \r\n`GNU bash, version 3.2.48(1)-release (x86_64-apple-darwin10.0)` \r\nI do not get this error.\r\n\r\nIs there any workaround for this? On Mar 23, 2018, at 05:02, etanol85 <notifications@github.com> wrote:\n> Is there any workaround for this?\n\nbrew install bash\n\n-- \nThis is my signature. There are many like it, but this one is mine.\n\n Many thanks, this (bash 4.4.) solved the issue! Thanks, yes this is Mac OS 10.4 i think that Mac OS X 10.5.8 still can run on PPC  and comes standard with BASH 3.2.17 so in that case that could work out of the box.\r\n\r\nFIY I tried the preinstalled zsh with \"zsh ./dehydrated -v\" and that did not work either:\r\n./dehydrated:set:10: no such option: pipefail\r\n./dehydrated:764: parse error near `local'\r\n\r\nThanks again!  I'm not sure what caused this, honestly... but here's what happened.\r\n\r\nThis occurred using `dehydrated` from master, revision b116e6b, during a normal cron run. One of my certificates has a certificate-specific config file there, which specifies a different hook file. There are no other variables set in that cert-specific config.\r\n\r\nDuring the cron run, I got the following output:\r\n```\r\nProcessing <domain> with alternative names: <altnames>\r\n + Using certificate specific config file!\r\n   + HOOK = /srv/dehydrated/hooks/dns-01-manual/cron-hook.sh\r\n + Checking domain name(s) of existing cert... unchanged.\r\n + Checking expire date of existing cert...\r\n + Valid till Apr  8 23:19:24 2018 GMT (Less than 30 days). Renewing!\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting new certificate order from CA...\r\n + Received 6 authorizations URLs from the CA\r\n + Handling authorization for <domain>\r\n + Handling authorization for <domain>\r\n + Handling authorization for <domain>\r\n + Handling authorization for <domain>\r\n + Handling authorization for <domain>\r\n + Handling authorization for <domain>\r\n + 6 pending challenge(s)\r\n + Deploying challenge tokens...\r\n```\r\nThe output for that certificate stopped there. As I had keep-going set, the run continued on to the next certificate in the list and wrapped up normally. I caught it on review of the log and didn't think much of it--I'd recently been fiddling with the hook script for that certificate, and figured I had created an error of some sort that crashed the hook.\r\n\r\nBut I also noticed today that there was a new `accounts` directory in the certificate output directory for that certificate, with a CA hash corresponding to the ACME v2 endpoint, with no contents. That is:\r\n```\r\nBASEDIR\r\n|-accounts\r\n||-ACME v1 CA hash (with account keys)\r\n||-ACME v2 CA hash (symlink to v1 folder)\r\n|-certs\r\n||-domain\r\n|||-accounts\r\n||||-ACME v2 CA hash (no contents)\r\n|||-cert.pem\r\n|||-fullchain.pem\r\n|||-etc.\r\n```\r\nI don't know how this new `accounts` directory got there. The time of creation matches the time when the cron job was executing. And there's zero chance my hook script was creating an accounts directory with the CA hash underneath it.\r\n\r\nThe other certificates processed at the same time do not have a local `accounts` folder created. It only shows up in the directory for the certificate with the per-certificate config file--which, incidentally, never returned from the deploy hook, but died quietly enough to move on to the next certificate without leaving an error in the cron log.\r\n\r\nI'm not sure what to make of it, honestly. Any thoughts? The command as written in cron is:\r\n\r\n/srv/dehydrated/dehydrated \u2014cron \u2014keep-going\r\n\r\nMain config file is located at /srv/dehydrated/config. The certificate-specific config file is located within the certificate directory, but does not override the value of BASEDIR (which is set within the main config file).\r\n\r\nI know, it\u2019s weird.   https://github.com/stedolan/jq is available in most distributions these days. Not on older systems, though.  Hi,\r\n\r\nI am not 100% sure this is a dehydrated issues, however it's just started on two different servers I control.\r\n\r\nI can't seem to create ECC certificates anymore, only RSA ones.\r\n\r\nI have the following script I run every couple of weeks to generate my certs:\r\n\r\n```\r\n# RSA Certificates\r\n/usr/local/dehydrated/dehydrated -c -x -d muppetz.com -d beaker.muppetz.com -d reader.muppetz.com -o /etc/letsencrypt/rsa -a rsa\r\n\r\n# ECC Certificates\r\n/usr/local/dehydrated/dehydrated -c -x -d muppetz.com -d beaker.muppetz.com -d www.muppetz.com -d lice.muppetz.com -d tjharman.com -d www.tjharman.com -d old.tjharman.com\r\n -d gallery.tjharman.com -d matchboxdigital.co.nz -d www.matchboxdigital.co.nz -d tasks.muppetz.com -o /etc/letsencrypt/ecc -a secp384r1\r\n```\r\n\r\nToday I did a git pull to ensure I'm at the latest, and recieved this:\r\n\r\n```\r\nroot@beaker:/usr/local/dehydrated# ./force-update.sh\r\n#\r\n# !! WARNING !! No main config file found, using default config!\r\n#\r\n! Reusing account from https://acme-v01.api.letsencrypt.org/directory\r\nProcessing muppetz.com with alternative names: beaker.muppetz.com reader.muppetz.com\r\n + Checking domain name(s) of existing cert... unchanged.\r\n + Checking expire date of existing cert...\r\n + Valid till May 26 20:29:32 2018 GMT (Longer than 30 days). Ignoring because renew was forced!\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting new certificate order from CA...\r\n + Received 3 authorizations URLs from the CA\r\n + Handling authorization for beaker.muppetz.com\r\n + Handling authorization for muppetz.com\r\n + Handling authorization for reader.muppetz.com\r\n + 3 pending challenge(s)\r\n + Deploying challenge tokens...\r\n + Responding to challenge for beaker.muppetz.com authorization...\r\n + Challenge is valid!\r\n + Responding to challenge for muppetz.com authorization...\r\n + Challenge is valid!\r\n + Responding to challenge for reader.muppetz.com authorization...\r\n + Challenge is valid!\r\n + Requesting certificate...\r\n + Checking certificate...\r\n + Done!\r\n + Creating fullchain.pem...\r\n + Done!\r\n```\r\nRSA certs renewed no problems.\r\n\r\nBut ECC gives me this:\r\n\r\n```\r\n#\r\n# !! WARNING !! No main config file found, using default config!\r\n#\r\nProcessing muppetz.com with alternative names: beaker.muppetz.com www.muppetz.com lice.muppetz.com tjharman.com www.tjharman.com old.tjharman.com gallery.tjharman.com mat\r\nchboxdigital.co.nz www.matchboxdigital.co.nz tasks.muppetz.com\r\n + Checking domain name(s) of existing cert... unchanged.\r\n + Checking expire date of existing cert...\r\n + Valid till May 26 20:31:34 2018 GMT (Longer than 30 days). Ignoring because renew was forced!\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting new certificate order from CA...\r\n + Received 11 authorizations URLs from the CA\r\n + Handling authorization for beaker.muppetz.com\r\n + Handling authorization for old.tjharman.com\r\n + Handling authorization for tasks.muppetz.com\r\n + Handling authorization for muppetz.com\r\n + Handling authorization for www.tjharman.com\r\n + Handling authorization for www.matchboxdigital.co.nz\r\n + Handling authorization for tjharman.com\r\n + Handling authorization for www.muppetz.com\r\n + Handling authorization for matchboxdigital.co.nz\r\n + Handling authorization for gallery.tjharman.com\r\n + Handling authorization for lice.muppetz.com\r\n + 11 pending challenge(s)\r\n + Deploying challenge tokens...\r\n + Responding to challenge for beaker.muppetz.com authorization...\r\nERROR: Challenge is invalid! (returned: ) (result: fq0ldiV16BvDY5h2kbgSF8aQFtrU9DJnloBtFgQ7nN8.9l54mws_vhiPTBOBS52dImBuq0Tuw5VY5jxC8qeBK1w)\r\n```\r\n\r\nI have been getting a similar problem with ECC certs on another box for other *.muppetz.com domains, the \"ERROR: Challenge is invalid! (returned: ) (result: <long string>)\" using the latest dehydrated, but I had assumed this was a rate-limit error on that machine and ignored it for the moment.\r\n\r\nI have no problems accessing the /.well-known/acme-challenge/XXXX URL - this has been setup in Apache for the last ~year with no issues (and works, as you can see in the RSA request)\r\n\r\nWhat does \"ERROR: Challenge is invalid! (returned: ) (result: <<string>>)\" mean?  \r\nAs I stated above, I thought on my other box it was a rate limit issue, but I have tried only twice to renew these ECC certs and am sure I'm not being rate limited yet. So I thought I'd test on a _third_ server I have, this one runs nginx.\r\n\r\nThis is now really confusing me:\r\n\r\n```\r\nroot@animal:/usr/local/dehydrated# /usr/local/dehydrated/dehydrated -c -x -d animal.muppetz.com -o /etc/letsencrypt/rsa\r\n#\r\n# !! WARNING !! No main config file found, using default config!\r\n#\r\nProcessing animal.muppetz.com\r\n + Checking domain name(s) of existing cert... unchanged.\r\n + Checking expire date of existing cert...\r\n + Valid till Jun  2 16:30:49 2018 GMT Certificate will not expire\r\n(Longer than 30 days). Ignoring because renew was forced!\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting new certificate order from CA...\r\n + Received 1 authorizations URLs from the CA\r\n + Handling authorization for animal.muppetz.com\r\n + 1 pending challenge(s)\r\n + Deploying challenge tokens...\r\n + Responding to challenge for animal.muppetz.com authorization...\r\n  + ERROR: An error occurred while sending post-request to http://animal.muppetz.com/.well-known/acme-challenge/h8jAxFPy95srhCfs7EWNlwub9MGkL9SQ5UczQP68XH8 (Status 405)\r\n\r\nDetails:\r\nHTTP/1.1 405 Not Allowed\r\nServer: nginx/1.10.3\r\nDate: Sun, 18 Mar 2018 18:07:50 GMT\r\nContent-Type: text/html\r\nContent-Length: 173\r\nConnection: keep-alive\r\n\r\n<html>\r\n<head><title>405 Not Allowed</title></head>\r\n<body bgcolor=\"white\">\r\n<center><h1>405 Not Allowed</h1></center>\r\n<hr><center>nginx/1.10.3</center>\r\n</body>\r\n</html>\r\n``` ```\r\nroot@animal:/usr/local/dehydrated# ./dehydrated --version\r\n#\r\n# !! WARNING !! No main config file found, using default config!\r\n#\r\nDehydrated by Lukas Schauer\r\nhttps://dehydrated.de\r\n\r\nDehydrated version: git-master-after-0.6.1\r\nGIT-Revision: 7c40c727a0e933382d72fa689ff3bea294895326\r\n\r\nOS: Debian GNU/Linux 9\r\nUsed software:\r\n bash: 4.4.12(1)-release\r\n curl: curl 7.52.1\r\n awk: GNU Awk 4.1.4, API: 1.1 (GNU MPFR 3.1.5, GNU MP 6.1.2)\r\n sed: sed (GNU sed) 4.4\r\n mktemp: mktemp (GNU coreutils) 8.26\r\n grep: grep (GNU grep) 2.27\r\n diff: diff (GNU diffutils) 3.5\r\n openssl: OpenSSL 1.1.0f  25 May 2017\r\nroot@animal:/usr/local/dehydrated#\r\n```\r\n\r\n```\r\nroot@animal:/usr/local/dehydrated# /usr/local/dehydrated/dehydrated -c -x -d animal.muppetz.com -o /etc/letsencrypt/rsa\r\n#\r\n# !! WARNING !! No main config file found, using default config!\r\n#\r\nProcessing animal.muppetz.com\r\n + Checking domain name(s) of existing cert... unchanged.\r\n + Checking expire date of existing cert...\r\n + Valid till Jun  2 16:30:49 2018 GMT Certificate will not expire\r\n(Longer than 30 days). Ignoring because renew was forced!\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting new certificate order from CA...\r\n + Received 1 authorizations URLs from the CA\r\n + Handling authorization for animal.muppetz.com\r\n{\"type\": \"http-01\", \"status\": \"valid\", \"url\": \"https://acme-v02.api.letsencrypt.org/acme/challenge/umBGaJbxT4RyVXE0EHbAK5ahIB8bxYWcI_0YQvIGs0Y/3867860225\", \"token\": \"h8jAxFPy95srhCfs7EWNlwub9MGkL9SQ5UczQP68XH8\", \"validationRecord\": [{\"url\": \"http://animal.muppetz.com/.well-known/acme-challenge/h8jAxFPy95srhCfs7EWNlwub9MGkL9SQ5UczQP68XH8\", \"hostname\": \"animal.muppetz.com\", \"port\": \"80\", \"addressesResolved\": [\"205.233.254.38\"], \"addressUsed\": \"205.233.254.38\"}\r\n + 1 pending challenge(s)\r\n + Deploying challenge tokens...\r\n + Responding to challenge for animal.muppetz.com authorization...\r\n  + ERROR: An error occurred while sending post-request to http://animal.muppetz.com/.well-known/acme-challenge/h8jAxFPy95srhCfs7EWNlwub9MGkL9SQ5UczQP68XH8 (Status 405)\r\n\r\nDetails:\r\nHTTP/1.1 405 Not Allowed\r\nServer: nginx/1.10.3\r\nDate: Sun, 18 Mar 2018 18:53:30 GMT\r\nContent-Type: text/html\r\nContent-Length: 173\r\nConnection: keep-alive\r\n\r\n<html>\r\n<head><title>405 Not Allowed</title></head>\r\n<body bgcolor=\"white\">\r\n<center><h1>405 Not Allowed</h1></center>\r\n<hr><center>nginx/1.10.3</center>\r\n</body>\r\n</html>\r\n```\r\n I should note, the NGINX server is the 3rd server I'm having problems with.\r\nThe previous two that I posted where I get the ERROR: Challenge is invalid! (returned: ) (result: <<string>>) are Apache2 servers.\r\nHere's the (modified) output from the main one I wish to fix!\r\n\r\n```\r\nroot@micro:/usr/local/dehydrated# /usr/local/dehydrated/dehydrated -c -x -d micro.muppetz.com -d radio.muppetz.com -o /etc/letsencrypt/rsa\r\n#\r\n# !! WARNING !! No main config file found, using default config!\r\n#\r\nProcessing micro.muppetz.com with alternative names: radio.muppetz.com\r\n + Checking domain name(s) of existing cert... unchanged.\r\n + Checking expire date of existing cert...\r\n + Valid till Apr 28 16:12:49 2018 GMT Certificate will not expire\r\n(Longer than 30 days). Ignoring because renew was forced!\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting new certificate order from CA...\r\n + Received 2 authorizations URLs from the CA\r\n + Handling authorization for micro.muppetz.com\r\n{\"type\": \"http-01\", \"status\": \"valid\", \"url\": \"https://acme-v02.api.letsencrypt.org/acme/challenge/6b2cKCYIAoY_RWbkrAz4gWuhBrcmPitQExSyd8wIAsM/3842916042\", \"token\": \"04l7-H7dn-ijQgoUVgxmJMy27q7mFtjIhfEENNzzj_Q\", \"validationRecord\": [{\"url\": \"http://micro.muppetz.com/.well-known/acme-challenge/04l7-H7dn-ijQgoUVgxmJMy27q7mFtjIhfEENNzzj_Q\", \"hostname\": \"micro.muppetz.com\", \"port\": \"80\", \"addressesResolved\": [\"202.137.243.17\"], \"addressUsed\": \"202.137.243.17\"}\r\n + Handling authorization for radio.muppetz.com\r\n{\"type\": \"http-01\", \"status\": \"valid\", \"url\": \"https://acme-v02.api.letsencrypt.org/acme/challenge/ae9-XbVpG49NcV_a4rrthu40zd2DMKD63-_X7vWbNr4/3842916045\", \"token\": \"7do2inPqAdUIi-Yi__gmL0gmJC1X5Rc30DwcJ6HuMp0\", \"validationRecord\": [{\"url\": \"http://radio.muppetz.com/.well-known/acme-challenge/7do2inPqAdUIi-Yi__gmL0gmJC1X5Rc30DwcJ6HuMp0\", \"hostname\": \"radio.muppetz.com\", \"port\": \"80\", \"addressesResolved\": [\"202.137.243.17\"], \"addressUsed\": \"202.137.243.17\"}\r\n + 2 pending challenge(s)\r\n + Deploying challenge tokens...\r\n + Responding to challenge for micro.muppetz.com authorization...\r\nERROR: Challenge is invalid! (returned: ) (result: 04l7-H7dn-ijQgoUVgxmJMy27q7mFtjIhfEENNzzj_Q.CVIsPnr1yFW9cY9rBQ7yPCDbeHFkCHHnemmEZTRD8T8)\r\nroot@micro:/usr/local/dehydrated# ./dehydrated --version\r\n#\r\n# !! WARNING !! No main config file found, using default config!\r\n#\r\nDehydrated by Lukas Schauer\r\nhttps://dehydrated.de\r\n\r\nDehydrated version: git-master-after-0.6.1\r\nGIT-Revision: 7c40c727a0e933382d72fa689ff3bea294895326\r\n\r\nOS: Debian GNU/Linux 9\r\nUsed software:\r\n bash: 4.4.12(1)-release\r\n curl: curl 7.52.1\r\n awk: GNU Awk 4.1.4, API: 1.1 (GNU MPFR 3.1.5, GNU MP 6.1.2)\r\n sed: sed (GNU sed) 4.4\r\n mktemp: mktemp (GNU coreutils) 8.26\r\n grep: grep (GNU grep) 2.27\r\n diff: diff (GNU diffutils) 3.5\r\n openssl: OpenSSL 1.1.0f  25 May 2017\r\n``` Can confirm, your patch fixes the problem for me!\r\nThank you:\r\n\r\n```\r\nroot@animal:/usr/local/dehydrated# /usr/local/dehydrated/dehydrated -c -x -d animal.muppetz.com -o /etc/letsencrypt/rsa\r\n#\r\n# !! WARNING !! No main config file found, using default config!\r\n#\r\nProcessing animal.muppetz.com\r\n + Checking domain name(s) of existing cert... unchanged.\r\n + Checking expire date of existing cert...\r\n + Valid till Jun  2 16:30:49 2018 GMT Certificate will not expire\r\n(Longer than 30 days). Ignoring because renew was forced!\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting new certificate order from CA...\r\n + Received 1 authorizations URLs from the CA\r\n + Handling authorization for animal.muppetz.com\r\n{\"type\": \"http-01\", \"status\": \"valid\", \"url\": \"https://acme-v02.api.letsencrypt.org/acme/challenge/umBGaJbxT4RyVXE0EHbAK5ahIB8bxYWcI_0YQvIGs0Y/3867860225\", \"token\": \"h8jAxFPy95srhCfs7EWNlwub9MGkL9SQ5UczQP68XH8\", \"validationRecord\": [{\"url\": \"http://animal.muppetz.com/.well-known/acme-challenge/h8jAxFPy95srhCfs7EWNlwub9MGkL9SQ5UczQP68XH8\", \"hostname\": \"animal.muppetz.com\", \"port\": \"80\", \"addressesResolved\": [\"205.233.254.38\"], \"addressUsed\": \"205.233.254.38\"}\r\n + 1 pending challenge(s)\r\n + Deploying challenge tokens...\r\n + Responding to challenge for animal.muppetz.com authorization...\r\n + Challenge is valid!\r\n + Requesting certificate...\r\n + Checking certificate...\r\n + Done!\r\n + Creating fullchain.pem...\r\n + Done!\r\n```\r\n\r\nThis has also fixed the problem on my two other boxes!\r\n\r\nTHANK YOU! :-)  With `OCSP_FETCH=\"yes\"`, the code responsible for fetching the OCSP response is run after the deploy_cert & unchanged_cert hooks are called. This makes it impossible to update the stapling files for haproxy & other webservers that require the file to be named in a specific way.\r\n\r\nPerhaps one way of solving it could be calling a new hook `ocsp_update` whenever the response is updated:\r\n`[[ -n \"${HOOK}\" ]] && \"${HOOK}\" \"ocsp_update\" \"${domain}\" \"${certdir}/ocsp.der\"`    dehydrated 0.6.1, FreeBSD\r\nError after Handling authorization.\r\nsign_csr:86: challenge_identifiers: assignment to invalid subscript range  As someone who is using dehydrated with the v2 API, I can say thus far I am happy enough with the support that I have no problem with the idea of losing support for v1. That is I have yet to find any reason to revert back to v1. I guess it largely depends on your definition of \"in the long run.\" I personally wouldn't consider dropping support for a minimum of six months... in the 6-12 month range, I'd probably look at it again and make the decision to drop support at that point.\r\n\r\nOf course, anybody who needed v1 support after that could always revert to an old version of the software, too... Oh yeah, if LE disables their API, you have no reason to wait any longer than that! Considering there is: \r\n1) No future development with the v1 endpoint,\r\n2) No obvious issue with v2 forcing people to use v1,\r\n3) It's known that v1 will be shut down in the future, and\r\n4) [v0.6.0](https://github.com/lukas2511/dehydrated/releases/tag/v0.6.0) supports it perfectly,\r\n\r\nI don't see any issue in removing it from current & future code.\r\n\r\nIf there is any need for a fix with the v1 implementation, it'd be easier to just branch from fd3fc8a and fix it there than keep support around. Six months seems reasonable. When you do the switch,  users who need v1 can just download a specific version of dehydrated.  I'd drop it... i spent way too many hours looking at it myself on the weekend, too many hacks required to try and support both :-(\r\n\r\nBtw... wildcard certs that are in v02... dehydrated has quite a few points at which the interpretation of the * character goes awry.\r\n\r\nHow are you considering dealing with it? It seems to me having a configurable wildcard substitution that occurs immediately prior to request signing (ensure *. in CN), challenge deployment (remove *.), etc may be the best way to approach it?\r\n\r\nThe spec seems to suggest that a number of interactions with the API that have or cause *. to be dropped from the name and a boolean wildcard value set as an indicator that it's a wildcard.\r\n\r\ne.g. WILDCARD_SUB='@wildcard@'\r\n\r\nSo that @wildcard@.domain.tld will be tested sub'ed to *.domain.tld or to domain.tld when necessary. Yeah... my bad... and just got around to reading some of the commits and realised you guys have already added a lot of support! Thank you. @cpu is there any plan within LE for disabling the ACME v1 endpoint?\r\n\r\nI'd find nice if you could keep it running for at least the duration of debian 9, so ~2 more years, but I suppose it depends on how burdening it is for you and the amount of requests you'll still receive at that endpoint in the future. > @cpu is there any plan within LE for disabling the ACME v1 endpoint?\r\n\r\nThere's no plan or specific date decided for disabling ACME v1. ~2 years is a reasonable estimate. It won't be anything that happens suddenly or without a lot of pre-announcement. At this point we have no immediate plans. Disclaimer: I haven't really read the source code very thoroughly, so forgive me if the question has an obvious answer.\r\n\r\nIf you remove ACMEv1 support, will dehydrated still support upgrading old configs to the new version? I'm thinking about old installations that have been \"set up and forgotten\" (as good automation tends to lead to) which suddenly will need to be updated. I think the discussion is more about the interaction with ACMEv1 servers, as opposed to how dehydrated handles it's own configuration. Therefore I would assume that given what the migration itself actually involves, this shouldn't be an issue. ACMEv1 support in dehydrated will be fully dropped when https://github.com/letsencrypt/boulder/issues/3871 is fully supported in Boulder and on the LE production systems.\r\n\r\nI think the change in request handling is a good point to draw a line, especially considering that ACMEv1 should really be considered deprecated by now and with the current dehydrated version being quite stable it's a good fallback for situations where ACMEv1 is still required.  While looking over my config files and considering setting a CONFIG_D, I noticed an inconsistency, and I'm wondering if it's intentional or overlooked.\r\n\r\nThe main config file that dehydrated looks for is named `config`, with no extension. Per-certificate config files are also named either `config` or `alias`, with no extension. But it looks like the other config files in CONFIG_D must have a `.sh` extension in order to be processed. (It certainly says as much in the template config file.)\r\n\r\nIf CONFIG_D is set, both the general config files (with extension) and any certificate-specific config files (without extension) are going to be mixed into the same directory. This leads to a scenario where a user following the directive in the template config (that all config files in CONFIG_D must have a `.sh` extension) might end up having their certificate-specific config files ignored.  This example became invalid since a wildcard request with base domain included needs two TXT records present at the same time. \r\n```\r\n # Simple example: Use nsupdate with local named\r\n    # printf 'server 127.0.0.1\\nupdate delete _acme-challenge.%s TXT \"%s\"\\nsend\\n' \"${DOMAIN}\" \"${TOKEN_VALUE}\" | nsupdate -k /var/run/named/session.key\r\n\r\n```\r\nhttps://community.letsencrypt.org/t/wildcard-base-domain-two-txts-timeout-problem/56105 That example is still perfectly valid. The hook script is called for EACH individual \"token\" value set for the TXT record, that example deletes only the TXT record with the supplied token value. So that example will be called once for each TXT record even if they are the same name.\r\n\r\nI Currently use the nsupdate method with my setup for domain validations, and I have yet to have an issue with either TXT records remaining where they shouldn't or with TXT records being deleted when they shouldn't.\r\n\r\nExample of the output from dehydrated when using my hook script (note the lines prefixed with ADD: and DEL: are from my hook script when it uses nsupdate to add or delete a TXT record):\r\n```\r\nProcessing test.mdbnet.net with alternative names: *.test.mdbnet.net\r\n + Creating new directory /home/dehydrated/dehydrated/certs/test.mdbnet.net ...\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting new certificate order from CA...\r\n + Received 2 authorizations URLs from the CA\r\n + Handling authorization for test.mdbnet.net\r\n + Handling authorization for test.mdbnet.net\r\n + 2 pending challenge(s)\r\n + Deploying challenge tokens...\r\nADD: _acme-challenge.test.mdbnet.net. 300 IN TXT \"CUcIs48zueUn0vVl8OdNyhnzhODxdKTugXbLeUxjEZg\"\r\nADD: _acme-challenge.test.mdbnet.net. 300 IN TXT \"1n-OMurTo1NbdLHZriNuSqz-1oJfpOxPdsR-_BX9Ags\"\r\n + Responding to challenge for test.mdbnet.net authorization...\r\nDEL: _acme-challenge.test.mdbnet.net. 300 IN TXT \"CUcIs48zueUn0vVl8OdNyhnzhODxdKTugXbLeUxjEZg\"\r\n + Challenge is valid!\r\n + Responding to challenge for test.mdbnet.net authorization...\r\nDEL: _acme-challenge.test.mdbnet.net. 300 IN TXT \"1n-OMurTo1NbdLHZriNuSqz-1oJfpOxPdsR-_BX9Ags\"\r\n + Challenge is valid!\r\n + Requesting certificate...\r\n + Checking certificate...\r\n + Done!\r\n + Creating fullchain.pem...\r\n + Done!\r\n```  Old Version: VERSION=\"0.4.0\" -> working - no problem\r\nVew Version: VERSION=\"git-master-after-0.6.1\" -> throws this problem\r\nSystem: ArchLinux x64\r\n\r\nI create an renew certificates with dehydrated. For this I call the script with a PHP-Script with call the paramteres. A call looks like this:\r\n\r\n    $cmd = '/opt/dehydrated/dehydrated -c -o '.CertStore.' -a '.$row3['algo'].' -d '.$row3['domain'].' 2>&1 >> /var/log/dehydrated/dehydrated.log';\r\n    // other Code for addional Domains and --force Parameter if required\r\n    exec($cmd, $return, $ret_val);\r\n\r\nIn the old version everything works fine. New certificates are created an old ones are renewed. \r\n\r\nIf this script is called in a cronjob I cot a broken pipe error:\r\n\r\n    cat: Schreibfehler: Daten\u00fcbergabe unterbrochen (broken pipe)\r\n\r\nThe output of dehydrated which I pipe to a logfile is the folowing:\r\n\r\n    Do 15. M\u00e4r 07:15:01 CET 2018\r\n    # INFO: Using main config file /opt/dehydrated/config\r\n    Processing tb-itf.de with alternative names: www.domain.de\r\n     + Checking domain name(s) of existing cert... unchanged.\r\n     + Checking expire date of existing cert...\r\n     + Valid till Apr  3 22:05:12 2018 GMT Certificate will expire\r\n    (Less than 30 days). Renewing!\r\n     + Signing domains...\r\n     + Generating private key...\r\n     + Generating signing request...\r\n     + Requesting new certificate order from CA...` \r\n\r\nIf I call the script directly on the bash, everything works fine.\r\n\r\nI set the PATH and environment SHELL in the crontab. I also tried to run the command above with `/usr/bin/bash -c`  but no change in the result.\r\n\r\nAny ideas? Thank you! Of course, here it is:\r\n\r\n    bash -x dehydrated -c \"/opt/dehydrated/dehydrated -c -o /etc/ssl/reksys -a secp384r1 -d domain.de >> /var/log/dehydrated/dehydrated.log 2>&1\"\r\n    + set -e\r\n    + set -u\r\n    + set -o pipefail\r\n    + [[ -n '' ]]\r\n    + [[ -z '' ]]\r\n    + shopt -s nullglob\r\n    + set -f\r\n    + umask 077\r\n    + VERSION=git-master-after-0.6.1\r\n    + SOURCE=dehydrated\r\n    + '[' -h dehydrated ']'\r\n    +++ dirname dehydrated\r\n    ++ cd -P .\r\n    ++ pwd\r\n    + SCRIPTDIR=/opt/reksys\r\n    + BASEDIR=/opt/reksys\r\n    + ORIGARGS='-c /opt/dehydrated/dehydrated -c -o /etc/ssl/reksys -a secp384r1 -d domain.de >> /var/log/dehydrated/dehydrated.log 2>&1 -d www.domain.de'\r\n    ++ uname\r\n    + OSTYPE=Linux\r\n    + [[ ! '' = \\N\\O\\O\\P ]]\r\n    + main -c '/opt/dehydrated/dehydrated -c -o /etc/ssl/reksys -a secp384r1 -d domain.de >> /var/log/dehydrated/dehydrated.log 2>&1' -d www.domain.de\r\n    + COMMAND=\r\n    + [[ -z -c /opt/dehydrated/dehydrated -c -o /etc/ssl/reksys -a secp384r1 -d domain.de >> /var/log/dehydrated/dehydrated.log 2>&1 -d www.domain.de ]]\r\n    + ((  4  ))\r\n    + case \"${1}\" in\r\n    + set_command sign_domains\r\n    + [[ -z '' ]]\r\n    + COMMAND=sign_domains\r\n    + shift 1\r\n    + ((  3  ))\r\n    + case \"${1}\" in\r\n    + echo 'Unknown parameter detected: /opt/dehydrated/dehydrated -c -o /etc/ssl/reksys -a secp384r1 -d domain.de >> /var/log/dehydrated/dehydrated.log 2>&1'\r\n    Unknown parameter detected: /opt/dehydrated/dehydrated -c -o /etc/ssl/reksys -a secp384r1 -d domain.de >> /var/log/dehydrated/dehydrated.log 2>&1\r\n    + echo\r\n    \r\n    + command_help\r\n    + printf 'Usage: %s [-h] [command [argument]] [parameter [argument]] [parameter [argument]] ...\\n\\n' dehydrated\r\n    Usage: dehydrated [-h] [command [argument]] [parameter [argument]] [parameter [argument]] ...\r\n    \r\n    + printf 'Default command: help\\n\\n'\r\n    Default command: help\r\n    \r\n    + echo Commands:\r\n    Commands:\r\n    + grep -e '^[[:space:]]*# Usage:' -e '^[[:space:]]*# Description:' -e '^command_.*()[[:space:]]*{' dehydrated\r\n    + read -r usage\r\n    grep: dehydrated: Datei oder Verzeichnis nicht gefunden\r\n    + read -r description\r\n    + read -r command\r\n Here it is, but also with an `unkown parameter detect`?!\r\n\r\n    bash -x /opt/dehydrated/dehydrated -c \"/opt/dehydrated/dehydrated -c -o /etc/ssl/reksys -a secp384r1 -d domain.de >> /var/log/dehydrated/dehydrated.log 2>&1\"\r\n    + set -e\r\n    + set -u\r\n    + set -o pipefail\r\n    + [[ -n '' ]]\r\n    + [[ -z '' ]]\r\n    + shopt -s nullglob\r\n    + set -f\r\n    + umask 077\r\n    + VERSION=git-master-after-0.6.1\r\n    + SOURCE=/opt/dehydrated/dehydrated\r\n    + '[' -h /opt/dehydrated/dehydrated ']'\r\n    +++ dirname /opt/dehydrated/dehydrated\r\n    ++ cd -P /opt/dehydrated\r\n    ++ pwd\r\n    + SCRIPTDIR=/opt/dehydrated\r\n    + BASEDIR=/opt/dehydrated\r\n    + ORIGARGS='-c /opt/dehydrated/dehydrated -c -o /etc/ssl/reksys -a secp384r1 -d domain.de >> /var/log/dehydrated/dehydrated.log 2>&1 -d www.domain.de'\r\n    ++ uname\r\n    + OSTYPE=Linux\r\n    + [[ ! '' = \\N\\O\\O\\P ]]\r\n    + main -c '/opt/dehydrated/dehydrated -c -o /etc/ssl/reksys -a secp384r1 -d domain.de >> /var/log/dehydrated/dehydrated.log 2>&1' -d www.domain.de\r\n    + COMMAND=\r\n    + [[ -z -c /opt/dehydrated/dehydrated -c -o /etc/ssl/reksys -a secp384r1 -d domain.de >> /var/log/dehydrated/dehydrated.log 2>&1 -d www.domain.de ]]\r\n    + ((  4  ))\r\n    + case \"${1}\" in\r\n    + set_command sign_domains\r\n    + [[ -z '' ]]\r\n    + COMMAND=sign_domains\r\n    + shift 1\r\n    + ((  3  ))\r\n    + case \"${1}\" in\r\n    + echo 'Unknown parameter detected: /opt/dehydrated/dehydrated -c -o /etc/ssl/reksys -a secp384r1 -d domain.de >> /var/log/dehydrated/dehydrated.log 2>&1'\r\n    Unknown parameter detected: /opt/dehydrated/dehydrated -c -o /etc/ssl/reksys -a secp384r1 -d domain.de >> /var/log/dehydrated/dehydrated.log 2>&1\r\n    + echo\r\n    \r\n    + command_help\r\n    + printf 'Usage: %s [-h] [command [argument]] [parameter [argument]] [parameter [argument]] ...\\n\\n' /opt/dehydrated/dehydrated\r\n    Usage: /opt/dehydrated/dehydrated [-h] [command [argument]] [parameter [argument]] [parameter [argument]] ...\r\n    \r\n    + printf 'Default command: help\\n\\n'\r\n    Default command: help\r\n    \r\n    + echo Commands:\r\n    Commands:\r\n    + grep -e '^[[:space:]]*# Usage:' -e '^[[:space:]]*# Description:' -e '^command_.*()[[:space:]]*{' /opt/dehydrated/dehydrated\r\n    + read -r usage\r\n    + read -r description\r\n    + read -r command\r\n    + [[ ! # Usage: --version (-v) =~ Usage ]]\r\n    + [[ ! # Description: Print version information =~ Description ]]\r\n    + [[ ! command_version() { =~ ^command_ ]]\r\n    + printf ' %-32s %s\\n' '--version (-v)' 'Print version information'\r\n     --version (-v)                   Print version information\r\n    + read -r usage\r\n    + read -r description\r\n    + read -r command\r\n    + [[ ! # Usage: --register =~ Usage ]]\r\n    + [[ ! # Description: Register account key =~ Description ]]\r\n    + [[ ! command_register() { =~ ^command_ ]]\r\n    + printf ' %-32s %s\\n' --register 'Register account key'\r\n     --register                       Register account key\r\n    + read -r usage\r\n    + read -r description\r\n    + read -r command\r\n    + [[ ! # Usage: --account =~ Usage ]]\r\n    + [[ ! # Description: Update account contact information =~ Description ]]\r\n    + [[ ! command_account() { =~ ^command_ ]]\r\n    + printf ' %-32s %s\\n' --account 'Update account contact information'\r\n     --account                        Update account contact information\r\n    + read -r usage\r\n    + read -r description\r\n    + read -r command\r\n    + [[ ! # Usage: --cron (-c) =~ Usage ]]\r\n    + [[ ! # Description: Sign/renew non-existent/changed/expiring certificates. =~ Description ]]\r\n    + [[ ! command_sign_domains() { =~ ^command_ ]]\r\n    + printf ' %-32s %s\\n' '--cron (-c)' 'Sign/renew non-existent/changed/expiring certificates.'\r\n     --cron (-c)                      Sign/renew non-existent/changed/expiring certificates.\r\n    + read -r usage\r\n    + read -r description\r\n    + read -r command\r\n    + [[ ! # Usage: --signcsr (-s) path/to/csr.pem =~ Usage ]]\r\n    + [[ ! # Description: Sign a given CSR, output CRT on stdout (advanced usage) =~ Description ]]\r\n    + [[ ! command_sign_csr() { =~ ^command_ ]]\r\n    + printf ' %-32s %s\\n' '--signcsr (-s) path/to/csr.pem' 'Sign a given CSR, output CRT on stdout (advanced usage)'\r\n     --signcsr (-s) path/to/csr.pem   Sign a given CSR, output CRT on stdout (advanced usage)\r\n    + read -r usage\r\n    + read -r description\r\n    + read -r command\r\n    + [[ ! # Usage: --revoke (-r) path/to/cert.pem =~ Usage ]]\r\n    + [[ ! # Description: Revoke specified certificate =~ Description ]]\r\n    + [[ ! command_revoke() { =~ ^command_ ]]\r\n    + printf ' %-32s %s\\n' '--revoke (-r) path/to/cert.pem' 'Revoke specified certificate'\r\n     --revoke (-r) path/to/cert.pem   Revoke specified certificate\r\n    + read -r usage\r\n    + read -r description\r\n    + read -r command\r\n    + [[ ! # Usage: --cleanup (-gc) =~ Usage ]]\r\n    + [[ ! # Description: Move unused certificate files to archive directory =~ Description ]]\r\n    + [[ ! command_cleanup() { =~ ^command_ ]]\r\n    + printf ' %-32s %s\\n' '--cleanup (-gc)' 'Move unused certificate files to archive directory'\r\n     --cleanup (-gc)                  Move unused certificate files to archive directory\r\n    + read -r usage\r\n    + read -r description\r\n    + read -r command\r\n    + [[ ! # Usage: --help (-h) =~ Usage ]]\r\n    + [[ ! # Description: Show help text =~ Description ]]\r\n    + [[ ! command_help() { =~ ^command_ ]]\r\n    + printf ' %-32s %s\\n' '--help (-h)' 'Show help text'\r\n     --help (-h)                      Show help text\r\n    + read -r usage\r\n    + read -r description\r\n    + read -r command\r\n    + [[ ! # Usage: --env (-e) =~ Usage ]]\r\n    + [[ ! # Description: Output configuration variables for use in other scripts =~ Description ]]\r\n    + [[ ! command_env() { =~ ^command_ ]]\r\n    + printf ' %-32s %s\\n' '--env (-e)' 'Output configuration variables for use in other scripts'\r\n     --env (-e)                       Output configuration variables for use in other scripts\r\n    + read -r usage\r\n    + read -r description\r\n    + read -r command\r\n    + printf -- '\\nParameters:\\n'\r\n    \r\n    Parameters:\r\n    + grep -E -e '^[[:space:]]*# PARAM_Usage:' -e '^[[:space:]]*# PARAM_Description:' /opt/dehydrated/dehydrated\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --accept-terms =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Accept CAs terms of service =~ Description ]]\r\n    + printf ' %-32s %s\\n' --accept-terms 'Accept CAs terms of service'\r\n     --accept-terms                   Accept CAs terms of service\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --full-chain (-fc) =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Print full chain when using --signcsr =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--full-chain (-fc)' 'Print full chain when using --signcsr'\r\n     --full-chain (-fc)               Print full chain when using --signcsr\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --ipv4 (-4) =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Resolve names to IPv4 addresses only =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--ipv4 (-4)' 'Resolve names to IPv4 addresses only'\r\n     --ipv4 (-4)                      Resolve names to IPv4 addresses only\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --ipv6 (-6) =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Resolve names to IPv6 addresses only =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--ipv6 (-6)' 'Resolve names to IPv6 addresses only'\r\n     --ipv6 (-6)                      Resolve names to IPv6 addresses only\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --domain (-d) domain.tld =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Use specified domain name(s) instead of domains.txt entry (one certificate!) =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--domain (-d) domain.tld' 'Use specified domain name(s) instead of domains.txt entry (one certificate!)'\r\n     --domain (-d) domain.tld         Use specified domain name(s) instead of domains.txt entry (one certificate!)\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --alias certalias =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Use specified name for certificate directory (and per-certificate config) instead of the primary domain (only used if --domain is specified) =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--alias certalias' 'Use specified name for certificate directory (and per-certificate config) instead of the primary domain (only used if --domain is specified)'\r\n     --alias certalias                Use specified name for certificate directory (and per-certificate config) instead of the primary domain (only used if --domain is specified)\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --keep-going (-g) =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Keep going after encountering an error while creating/renewing multiple certificates in cron mode =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--keep-going (-g)' 'Keep going after encountering an error while creating/renewing multiple certificates in cron mode'\r\n     --keep-going (-g)                Keep going after encountering an error while creating/renewing multiple certificates in cron mode\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --force (-x) =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Force renew of certificate even if it is longer valid than value in RENEW_DAYS =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--force (-x)' 'Force renew of certificate even if it is longer valid than value in RENEW_DAYS'\r\n     --force (-x)                     Force renew of certificate even if it is longer valid than value in RENEW_DAYS\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --no-lock (-n) =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Don't use lockfile (potentially dangerous!) =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--no-lock (-n)' 'Don'\\''t use lockfile (potentially dangerous!)'\r\n     --no-lock (-n)                   Don't use lockfile (potentially dangerous!)\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --lock-suffix example.com =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Suffix lockfile name with a string (useful for with -d) =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--lock-suffix example.com' 'Suffix lockfile name with a string (useful for with -d)'\r\n     --lock-suffix example.com        Suffix lockfile name with a string (useful for with -d)\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --ocsp =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Sets option in CSR indicating OCSP stapling to be mandatory =~ Description ]]\r\n    + printf ' %-32s %s\\n' --ocsp 'Sets option in CSR indicating OCSP stapling to be mandatory'\r\n     --ocsp                           Sets option in CSR indicating OCSP stapling to be mandatory\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --privkey (-p) path/to/key.pem =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Use specified private key instead of account key (useful for revocation) =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--privkey (-p) path/to/key.pem' 'Use specified private key instead of account key (useful for revocation)'\r\n     --privkey (-p) path/to/key.pem   Use specified private key instead of account key (useful for revocation)\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --config (-f) path/to/config =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Use specified config file =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--config (-f) path/to/config' 'Use specified config file'\r\n     --config (-f) path/to/config     Use specified config file\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --hook (-k) path/to/hook.sh =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Use specified script for hooks =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--hook (-k) path/to/hook.sh' 'Use specified script for hooks'\r\n     --hook (-k) path/to/hook.sh      Use specified script for hooks\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --out (-o) certs/directory =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Output certificates into the specified directory =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--out (-o) certs/directory' 'Output certificates into the specified directory'\r\n     --out (-o) certs/directory       Output certificates into the specified directory\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --challenge (-t) http-01|dns-01 =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Which challenge should be used? Currently http-01 and dns-01 are supported =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--challenge (-t) http-01|dns-01' 'Which challenge should be used? Currently http-01 and dns-01 are supported'\r\n     --challenge (-t) http-01|dns-01  Which challenge should be used? Currently http-01 and dns-01 are supported\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --algo (-a) rsa|prime256v1|secp384r1 =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Which public key algorithm should be used? Supported: rsa, prime256v1 and secp384r1 =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--algo (-a) rsa|prime256v1|secp384r1' 'Which public key algorithm should be used? Supported: rsa, prime256v1 and secp384r1'\r\n     --algo (-a) rsa|prime256v1|secp384r1 Which public key algorithm should be used? Supported: rsa, prime256v1 and secp384r1\r\n    + read -r usage\r\n    + read -r description\r\n    + exit 1 Oh, above there's an error in the call of dehydratet. I fixed that, but the problem is still the same:\r\n\r\n    bash -x /opt/dehydrated/dehydrated -c \"/opt/dehydrated/dehydrated -c -o /etc/ssl/reksys -a secp384r1 -d domain.de -d www.domain.de >> /var/log/dehydrated/dehydrated.log 2>&1\"\r\n    + set -e\r\n    + set -u\r\n    + set -o pipefail\r\n    + [[ -n '' ]]\r\n    + [[ -z '' ]]\r\n    + shopt -s nullglob\r\n    + set -f\r\n    + umask 077\r\n    + VERSION=git-master-after-0.6.1\r\n    + SOURCE=/opt/dehydrated/dehydrated\r\n    + '[' -h /opt/dehydrated/dehydrated ']'\r\n    +++ dirname /opt/dehydrated/dehydrated\r\n    ++ cd -P /opt/dehydrated\r\n    ++ pwd\r\n    + SCRIPTDIR=/opt/dehydrated\r\n    + BASEDIR=/opt/dehydrated\r\n    + ORIGARGS='-c /opt/dehydrated/dehydrated -c -o /etc/ssl/reksys -a secp384r1 -d domain.de -d www.domain.de >> /var/log/dehydrated/dehydrated.log 2>&1'\r\n    ++ uname\r\n    + OSTYPE=Linux\r\n    + [[ ! '' = \\N\\O\\O\\P ]]\r\n    + main -c '/opt/dehydrated/dehydrated -c -o /etc/ssl/reksys -a secp384r1 -d domain.de -d www.domain.de >> /var/log/dehydrated/dehydrated.log 2>&1'\r\n    + COMMAND=\r\n    + [[ -z -c /opt/dehydrated/dehydrated -c -o /etc/ssl/reksys -a secp384r1 -d domain.de -d www.domain.de >> /var/log/dehydrated/dehydrated.log 2>&1 ]]\r\n    + ((  2  ))\r\n    + case \"${1}\" in\r\n    + set_command sign_domains\r\n    + [[ -z '' ]]\r\n    + COMMAND=sign_domains\r\n    + shift 1\r\n    + ((  1  ))\r\n    + case \"${1}\" in\r\n    + echo 'Unknown parameter detected: /opt/dehydrated/dehydrated -c -o /etc/ssl/reksys -a secp384r1 -d domain.de -d www.domain.de >> /var/log/dehydrated/dehydrated.log 2>&1'\r\n    Unknown parameter detected: /opt/dehydrated/dehydrated -c -o /etc/ssl/reksys -a secp384r1 -d domain.de -d www.domain.de >> /var/log/dehydrated/dehydrated.log 2>&1\r\n    + echo\r\n    \r\n    + command_help\r\n    + printf 'Usage: %s [-h] [command [argument]] [parameter [argument]] [parameter [argument]] ...\\n\\n' /opt/dehydrated/dehydrated\r\n    Usage: /opt/dehydrated/dehydrated [-h] [command [argument]] [parameter [argument]] [parameter [argument]] ...\r\n    \r\n    + printf 'Default command: help\\n\\n'\r\n    Default command: help\r\n    \r\n    + echo Commands:\r\n    Commands:\r\n    + grep -e '^[[:space:]]*# Usage:' -e '^[[:space:]]*# Description:' -e '^command_.*()[[:space:]]*{' /opt/dehydrated/dehydrated\r\n    + read -r usage\r\n    + read -r description\r\n    + read -r command\r\n    + [[ ! # Usage: --version (-v) =~ Usage ]]\r\n    + [[ ! # Description: Print version information =~ Description ]]\r\n    + [[ ! command_version() { =~ ^command_ ]]\r\n    + printf ' %-32s %s\\n' '--version (-v)' 'Print version information'\r\n     --version (-v)                   Print version information\r\n    + read -r usage\r\n    + read -r description\r\n    + read -r command\r\n    + [[ ! # Usage: --register =~ Usage ]]\r\n    + [[ ! # Description: Register account key =~ Description ]]\r\n    + [[ ! command_register() { =~ ^command_ ]]\r\n    + printf ' %-32s %s\\n' --register 'Register account key'\r\n     --register                       Register account key\r\n    + read -r usage\r\n    + read -r description\r\n    + read -r command\r\n    + [[ ! # Usage: --account =~ Usage ]]\r\n    + [[ ! # Description: Update account contact information =~ Description ]]\r\n    + [[ ! command_account() { =~ ^command_ ]]\r\n    + printf ' %-32s %s\\n' --account 'Update account contact information'\r\n     --account                        Update account contact information\r\n    + read -r usage\r\n    + read -r description\r\n    + read -r command\r\n    + [[ ! # Usage: --cron (-c) =~ Usage ]]\r\n    + [[ ! # Description: Sign/renew non-existent/changed/expiring certificates. =~ Description ]]\r\n    + [[ ! command_sign_domains() { =~ ^command_ ]]\r\n    + printf ' %-32s %s\\n' '--cron (-c)' 'Sign/renew non-existent/changed/expiring certificates.'\r\n     --cron (-c)                      Sign/renew non-existent/changed/expiring certificates.\r\n    + read -r usage\r\n    + read -r description\r\n    + read -r command\r\n    + [[ ! # Usage: --signcsr (-s) path/to/csr.pem =~ Usage ]]\r\n    + [[ ! # Description: Sign a given CSR, output CRT on stdout (advanced usage) =~ Description ]]\r\n    + [[ ! command_sign_csr() { =~ ^command_ ]]\r\n    + printf ' %-32s %s\\n' '--signcsr (-s) path/to/csr.pem' 'Sign a given CSR, output CRT on stdout (advanced usage)'\r\n     --signcsr (-s) path/to/csr.pem   Sign a given CSR, output CRT on stdout (advanced usage)\r\n    + read -r usage\r\n    + read -r description\r\n    + read -r command\r\n    + [[ ! # Usage: --revoke (-r) path/to/cert.pem =~ Usage ]]\r\n    + [[ ! # Description: Revoke specified certificate =~ Description ]]\r\n    + [[ ! command_revoke() { =~ ^command_ ]]\r\n    + printf ' %-32s %s\\n' '--revoke (-r) path/to/cert.pem' 'Revoke specified certificate'\r\n     --revoke (-r) path/to/cert.pem   Revoke specified certificate\r\n    + read -r usage\r\n    + read -r description\r\n    + read -r command\r\n    + [[ ! # Usage: --cleanup (-gc) =~ Usage ]]\r\n    + [[ ! # Description: Move unused certificate files to archive directory =~ Description ]]\r\n    + [[ ! command_cleanup() { =~ ^command_ ]]\r\n    + printf ' %-32s %s\\n' '--cleanup (-gc)' 'Move unused certificate files to archive directory'\r\n     --cleanup (-gc)                  Move unused certificate files to archive directory\r\n    + read -r usage\r\n    + read -r description\r\n    + read -r command\r\n    + [[ ! # Usage: --help (-h) =~ Usage ]]\r\n    + [[ ! # Description: Show help text =~ Description ]]\r\n    + [[ ! command_help() { =~ ^command_ ]]\r\n    + printf ' %-32s %s\\n' '--help (-h)' 'Show help text'\r\n     --help (-h)                      Show help text\r\n    + read -r usage\r\n    + read -r description\r\n    + read -r command\r\n    + [[ ! # Usage: --env (-e) =~ Usage ]]\r\n    + [[ ! # Description: Output configuration variables for use in other scripts =~ Description ]]\r\n    + [[ ! command_env() { =~ ^command_ ]]\r\n    + printf ' %-32s %s\\n' '--env (-e)' 'Output configuration variables for use in other scripts'\r\n     --env (-e)                       Output configuration variables for use in other scripts\r\n    + read -r usage\r\n    + read -r description\r\n    + read -r command\r\n    + printf -- '\\nParameters:\\n'\r\n    \r\n    Parameters:\r\n    + grep -E -e '^[[:space:]]*# PARAM_Usage:' -e '^[[:space:]]*# PARAM_Description:' /opt/dehydrated/dehydrated\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --accept-terms =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Accept CAs terms of service =~ Description ]]\r\n    + printf ' %-32s %s\\n' --accept-terms 'Accept CAs terms of service'\r\n     --accept-terms                   Accept CAs terms of service\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --full-chain (-fc) =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Print full chain when using --signcsr =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--full-chain (-fc)' 'Print full chain when using --signcsr'\r\n     --full-chain (-fc)               Print full chain when using --signcsr\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --ipv4 (-4) =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Resolve names to IPv4 addresses only =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--ipv4 (-4)' 'Resolve names to IPv4 addresses only'\r\n     --ipv4 (-4)                      Resolve names to IPv4 addresses only\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --ipv6 (-6) =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Resolve names to IPv6 addresses only =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--ipv6 (-6)' 'Resolve names to IPv6 addresses only'\r\n     --ipv6 (-6)                      Resolve names to IPv6 addresses only\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --domain (-d) domain.tld =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Use specified domain name(s) instead of domains.txt entry (one certificate!) =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--domain (-d) domain.tld' 'Use specified domain name(s) instead of domains.txt entry (one certificate!)'\r\n     --domain (-d) domain.tld         Use specified domain name(s) instead of domains.txt entry (one certificate!)\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --alias certalias =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Use specified name for certificate directory (and per-certificate config) instead of the primary domain (only used if --domain is specified) =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--alias certalias' 'Use specified name for certificate directory (and per-certificate config) instead of the primary domain (only used if --domain is specified)'\r\n     --alias certalias                Use specified name for certificate directory (and per-certificate config) instead of the primary domain (only used if --domain is specified)\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --keep-going (-g) =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Keep going after encountering an error while creating/renewing multiple certificates in cron mode =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--keep-going (-g)' 'Keep going after encountering an error while creating/renewing multiple certificates in cron mode'\r\n     --keep-going (-g)                Keep going after encountering an error while creating/renewing multiple certificates in cron mode\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --force (-x) =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Force renew of certificate even if it is longer valid than value in RENEW_DAYS =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--force (-x)' 'Force renew of certificate even if it is longer valid than value in RENEW_DAYS'\r\n     --force (-x)                     Force renew of certificate even if it is longer valid than value in RENEW_DAYS\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --no-lock (-n) =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Don't use lockfile (potentially dangerous!) =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--no-lock (-n)' 'Don'\\''t use lockfile (potentially dangerous!)'\r\n     --no-lock (-n)                   Don't use lockfile (potentially dangerous!)\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --lock-suffix example.com =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Suffix lockfile name with a string (useful for with -d) =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--lock-suffix example.com' 'Suffix lockfile name with a string (useful for with -d)'\r\n     --lock-suffix example.com        Suffix lockfile name with a string (useful for with -d)\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --ocsp =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Sets option in CSR indicating OCSP stapling to be mandatory =~ Description ]]\r\n    + printf ' %-32s %s\\n' --ocsp 'Sets option in CSR indicating OCSP stapling to be mandatory'\r\n     --ocsp                           Sets option in CSR indicating OCSP stapling to be mandatory\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --privkey (-p) path/to/key.pem =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Use specified private key instead of account key (useful for revocation) =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--privkey (-p) path/to/key.pem' 'Use specified private key instead of account key (useful for revocation)'\r\n     --privkey (-p) path/to/key.pem   Use specified private key instead of account key (useful for revocation)\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --config (-f) path/to/config =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Use specified config file =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--config (-f) path/to/config' 'Use specified config file'\r\n     --config (-f) path/to/config     Use specified config file\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --hook (-k) path/to/hook.sh =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Use specified script for hooks =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--hook (-k) path/to/hook.sh' 'Use specified script for hooks'\r\n     --hook (-k) path/to/hook.sh      Use specified script for hooks\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --out (-o) certs/directory =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Output certificates into the specified directory =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--out (-o) certs/directory' 'Output certificates into the specified directory'\r\n     --out (-o) certs/directory       Output certificates into the specified directory\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --challenge (-t) http-01|dns-01 =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Which challenge should be used? Currently http-01 and dns-01 are supported =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--challenge (-t) http-01|dns-01' 'Which challenge should be used? Currently http-01 and dns-01 are supported'\r\n     --challenge (-t) http-01|dns-01  Which challenge should be used? Currently http-01 and dns-01 are supported\r\n    + read -r usage\r\n    + read -r description\r\n    + [[ ! # PARAM_Usage: --algo (-a) rsa|prime256v1|secp384r1 =~ Usage ]]\r\n    + [[ ! # PARAM_Description: Which public key algorithm should be used? Supported: rsa, prime256v1 and secp384r1 =~ Description ]]\r\n    + printf ' %-32s %s\\n' '--algo (-a) rsa|prime256v1|secp384r1' 'Which public key algorithm should be used? Supported: rsa, prime256v1 and secp384r1'\r\n     --algo (-a) rsa|prime256v1|secp384r1 Which public key algorithm should be used? Supported: rsa, prime256v1 and secp384r1\r\n    + read -r usage\r\n    + read -r description\r\n    + exit 1 Oh sorry, my fault...\r\n\r\n    + set -e\r\n    + set -u\r\n    + set -o pipefail\r\n    + [[ -n '' ]]\r\n    + [[ -z '' ]]\r\n    + shopt -s nullglob\r\n    + set -f\r\n    + umask 077\r\n    + VERSION=git-master-after-0.6.1\r\n    + SOURCE=/opt/dehydrated/dehydrated\r\n    + '[' -h /opt/dehydrated/dehydrated ']'\r\n    +++ dirname /opt/dehydrated/dehydrated\r\n    ++ cd -P /opt/dehydrated\r\n    ++ pwd\r\n    + SCRIPTDIR=/opt/dehydrated\r\n    + BASEDIR=/opt/dehydrated\r\n    + ORIGARGS='-c -o /etc/ssl/reksys -a secp384r1 -d domain.de -d www.domain.de'\r\n    ++ uname\r\n    + OSTYPE=Linux\r\n    + [[ ! '' = \\N\\O\\O\\P ]]\r\n    + main -c -o /etc/ssl/reksys -a secp384r1 -d domain.de -d www.domain.de\r\n    + COMMAND=\r\n    + [[ -z -c -o /etc/ssl/reksys -a secp384r1 -d domain.de -d www.domain.de ]]\r\n    + ((  9  ))\r\n    + case \"${1}\" in\r\n    + set_command sign_domains\r\n    + [[ -z '' ]]\r\n    + COMMAND=sign_domains\r\n    + shift 1\r\n    + ((  8  ))\r\n    + case \"${1}\" in\r\n    + shift 1\r\n    + check_parameters /etc/ssl/reksys\r\n    + [[ -z /etc/ssl/reksys ]]\r\n    + [[ / = \\- ]]\r\n    + PARAM_CERTDIR=/etc/ssl/reksys\r\n    + shift 1\r\n    + ((  6  ))\r\n    + case \"${1}\" in\r\n    + shift 1\r\n    + check_parameters secp384r1\r\n    + [[ -z secp384r1 ]]\r\n    + [[ s = \\- ]]\r\n    + PARAM_KEY_ALGO=secp384r1\r\n    + shift 1\r\n    + ((  4  ))\r\n    + case \"${1}\" in\r\n    + shift 1\r\n    + check_parameters domain.de\r\n    + [[ -z domain.de ]]\r\n    + [[ t = \\- ]]\r\n    + [[ -z '' ]]\r\n    + PARAM_DOMAIN=domain.de\r\n    + shift 1\r\n    + ((  2  ))\r\n    + case \"${1}\" in\r\n    + shift 1\r\n    + check_parameters www.domain.de\r\n    + [[ -z www.domain.de ]]\r\n    + [[ w = \\- ]]\r\n    + [[ -z domain.de ]]\r\n    + PARAM_DOMAIN='domain.de www.domain.de'\r\n    + shift 1\r\n    + ((  0  ))\r\n    + case \"${COMMAND}\" in\r\n    + command_sign_domains\r\n    + init_system\r\n    + load_config\r\n    + [[ -z '' ]]\r\n    + for check_config in \"/etc/dehydrated\" \"/usr/local/etc/dehydrated\" \"${PWD}\" \"${SCRIPTDIR}\"\r\n    + [[ -f /etc/dehydrated/config ]]\r\n    + for check_config in \"/etc/dehydrated\" \"/usr/local/etc/dehydrated\" \"${PWD}\" \"${SCRIPTDIR}\"\r\n    + [[ -f /usr/local/etc/dehydrated/config ]]\r\n    + for check_config in \"/etc/dehydrated\" \"/usr/local/etc/dehydrated\" \"${PWD}\" \"${SCRIPTDIR}\"\r\n    + [[ -f /opt/reksys/config ]]\r\n    + for check_config in \"/etc/dehydrated\" \"/usr/local/etc/dehydrated\" \"${PWD}\" \"${SCRIPTDIR}\"\r\n    + [[ -f /opt/dehydrated/config ]]\r\n    + BASEDIR=/opt/dehydrated\r\n    + CONFIG=/opt/dehydrated/config\r\n    + break\r\n    + CA=https://acme-v02.api.letsencrypt.org/directory\r\n    + OLDCA=\r\n    + CERTDIR=\r\n    + ACCOUNTDIR=\r\n    + CHALLENGETYPE=http-01\r\n    + CONFIG_D=\r\n    + CURL_OPTS=\r\n    + DOMAINS_D=\r\n    + DOMAINS_TXT=\r\n    + HOOK=\r\n    + HOOK_CHAIN=no\r\n    + RENEW_DAYS=30\r\n    + KEYSIZE=4096\r\n    + WELLKNOWN=\r\n    + PRIVATE_KEY_RENEW=yes\r\n    + PRIVATE_KEY_ROLLOVER=no\r\n    + KEY_ALGO=rsa\r\n    + OPENSSL=openssl\r\n    + OPENSSL_CNF=\r\n    + CONTACT_EMAIL=\r\n    + LOCKFILE=\r\n    + OCSP_MUST_STAPLE=no\r\n    + OCSP_FETCH=no\r\n    + IP_VERSION=\r\n    + CHAINCACHE=\r\n    + AUTO_CLEANUP=no\r\n    + DEHYDRATED_USER=\r\n    + DEHYDRATED_GROUP=\r\n    + API=auto\r\n    + [[ -z /opt/dehydrated/config ]]\r\n    + [[ -f /opt/dehydrated/config ]]\r\n    + echo '# INFO: Using main config file /opt/dehydrated/config'\r\n    # INFO: Using main config file /opt/dehydrated/config\r\n    ++ dirname /opt/dehydrated/config\r\n    + BASEDIR=/opt/dehydrated\r\n    + . /opt/dehydrated/config\r\n    ++ CHALLENGETYPE=http-01\r\n    ++ WELLKNOWN=/srv/http/dehydrated\r\n    ++ KEYSIZE=4096\r\n    ++ PRIVATE_KEY_RENEW=yes\r\n    ++ KEY_ALGO=rsa\r\n    + [[ -n '' ]]\r\n    + [[ -n '' ]]\r\n    + [[ -n '' ]]\r\n    + check_dependencies\r\n    + openssl version\r\n    + _sed ''\r\n    + command -v grep\r\n    + command -v mktemp\r\n    + command -v diff\r\n    + set +e\r\n    ++ awk '{print $2}'\r\n    ++ curl -V\r\n    ++ head -n1\r\n    + CURL_VERSION=7.58.0\r\n    + retcode=0\r\n    + set -e\r\n    + [[ ! 0 = \\0 ]]\r\n    + [[ /opt/dehydrated != \\/ ]]\r\n    + BASEDIR=/opt/dehydrated\r\n    + [[ -d /opt/dehydrated ]]\r\n    + [[ -z '' ]]\r\n    + [[ https://acme-v02.api.letsencrypt.org/directory = \\h\\t\\t\\p\\s\\:\\/\\/\\a\\c\\m\\e\\-\\v\\0\\2\\.\\a\\p\\i\\.\\l\\e\\t\\s\\e\\n\\c\\r\\y\\p\\t\\.\\o\\r\\g\\/\\d\\i\\r\\e\\c\\t\\o\\r\\y ]]\r\n    + OLDCA=https://acme-v01.api.letsencrypt.org/directory\r\n    ++ echo https://acme-v02.api.letsencrypt.org/directory\r\n    ++ urlbase64\r\n    ++ openssl base64 -e\r\n    ++ tr -d '\\n\\r'\r\n    ++ _sed -e 's:=*$::g' -e y:+/:-_:\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r -e 's:=*$::g' -e y:+/:-_:\r\n    + CAHASH=aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo\r\n    + [[ -z '' ]]\r\n    + ACCOUNTDIR=/opt/dehydrated/accounts\r\n    + [[ ! -e /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo ]]\r\n    + [[ -f /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/config ]]\r\n    + ACCOUNT_KEY=/opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/account_key.pem\r\n    + ACCOUNT_KEY_JSON=/opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/registration_info.json\r\n    + [[ -f /opt/dehydrated/private_key.pem ]]\r\n    + [[ -f /opt/dehydrated/private_key.json ]]\r\n    + [[ -z '' ]]\r\n    + CERTDIR=/opt/dehydrated/certs\r\n    + [[ -z '' ]]\r\n    + CHAINCACHE=/opt/dehydrated/chains\r\n    + [[ -z '' ]]\r\n    + DOMAINS_TXT=/opt/dehydrated/domains.txt\r\n    + [[ -z /srv/http/dehydrated ]]\r\n    + [[ -z '' ]]\r\n    + LOCKFILE=/opt/dehydrated/lock\r\n    + [[ -z '' ]]\r\n    ++ openssl version -d\r\n    ++ cut '-d\"' -f2\r\n    + OPENSSL_CNF=/etc/ssl/openssl.cnf\r\n    + [[ -n '' ]]\r\n    + [[ -n '' ]]\r\n    + [[ -n '' ]]\r\n    + [[ -n /etc/ssl/reksys ]]\r\n    + CERTDIR=/etc/ssl/reksys\r\n    + [[ -n '' ]]\r\n    + [[ -n secp384r1 ]]\r\n    + KEY_ALGO=secp384r1\r\n    + [[ -n '' ]]\r\n    + [[ -n '' ]]\r\n    + '[' '!' '' = noverify ']'\r\n    + verify_config\r\n    + [[ http-01 == \\h\\t\\t\\p\\-\\0\\1 ]]\r\n    + [[ http-01 = \\d\\n\\s\\-\\0\\1 ]]\r\n    + [[ http-01 = \\h\\t\\t\\p\\-\\0\\1 ]]\r\n    + [[ ! -d /srv/http/dehydrated ]]\r\n    + [[ secp384r1 == \\r\\s\\a ]]\r\n    + [[ secp384r1 == \\p\\r\\i\\m\\e\\2\\5\\6\\v\\1 ]]\r\n    + [[ secp384r1 == \\s\\e\\c\\p\\3\\8\\4\\r\\1 ]]\r\n    + [[ -n '' ]]\r\n    + [[ auto == \\a\\u\\t\\o ]]\r\n    + store_configvars\r\n    + __KEY_ALGO=secp384r1\r\n    + __OCSP_MUST_STAPLE=no\r\n    + __PRIVATE_KEY_RENEW=yes\r\n    + __KEYSIZE=4096\r\n    + __CHALLENGETYPE=http-01\r\n    + __HOOK=\r\n    + __WELLKNOWN=/srv/http/dehydrated\r\n    + __HOOK_CHAIN=no\r\n    + __OPENSSL_CNF=/etc/ssl/openssl.cnf\r\n    + __RENEW_DAYS=30\r\n    + __IP_VERSION=\r\n    + [[ -n /opt/dehydrated/lock ]]\r\n    ++ dirname /opt/dehydrated/lock\r\n    + LOCKDIR=/opt/dehydrated\r\n    + [[ -w /opt/dehydrated ]]\r\n    + trap remove_lock EXIT\r\n    ++ http_request get https://acme-v02.api.letsencrypt.org/directory\r\n    +++ _mktemp\r\n    +++ mktemp /tmp/dehydrated-XXXXXX\r\n    ++ tempcont=/tmp/dehydrated-B8Grah\r\n    +++ _mktemp\r\n    +++ mktemp /tmp/dehydrated-XXXXXX\r\n    ++ tempheaders=/tmp/dehydrated-aRsALy\r\n    ++ [[ -n '' ]]\r\n    ++ set +e\r\n    ++ [[ get = \\h\\e\\a\\d ]]\r\n    ++ [[ get = \\g\\e\\t ]]\r\n    +++ curl -A 'dehydr4ted/git-master-after-0.6.1 curl/7.58.0' -L -s -w '%{http_code}' -o /tmp/dehydrated-B8Grah -D /tmp/dehydrated-aRsALy https://acme-v02.api.letsencrypt.org/directory\r\n    ++ statuscode=200\r\n    ++ curlret=0\r\n    ++ set -e\r\n    ++ [[ ! 0 = \\0 ]]\r\n    ++ [[ ! 2 = \\2 ]]\r\n    ++ cat /tmp/dehydrated-aRsALy\r\n    ++ cat /tmp/dehydrated-B8Grah\r\n    ++ rm -f /tmp/dehydrated-B8Grah\r\n    ++ rm -f /tmp/dehydrated-aRsALy\r\n    + CA_DIRECTORY='{\r\n      \"7fyAybhlKz0\": \"https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417\",\r\n      \"keyChange\": \"https://acme-v02.api.letsencrypt.org/acme/key-change\",\r\n      \"meta\": {\r\n        \"termsOfService\": \"https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf\"\r\n      },\r\n      \"newAccount\": \"https://acme-v02.api.letsencrypt.org/acme/new-acct\",\r\n      \"newNonce\": \"https://acme-v02.api.letsencrypt.org/acme/new-nonce\",\r\n      \"newOrder\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\",\r\n      \"revokeCert\": \"https://acme-v02.api.letsencrypt.org/acme/revoke-cert\"\r\n    }'\r\n    + [[ auto = \\a\\u\\t\\o ]]\r\n    + grep -q newOrder\r\n    + API=2\r\n    + [[ 2 -eq 1 ]]\r\n    ++ printf %s '{\r\n      \"7fyAybhlKz0\": \"https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417\",\r\n      \"keyChange\": \"https://acme-v02.api.letsencrypt.org/acme/key-change\",\r\n      \"meta\": {\r\n        \"termsOfService\": \"https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf\"\r\n      },\r\n      \"newAccount\": \"https://acme-v02.api.letsencrypt.org/acme/new-acct\",\r\n      \"newNonce\": \"https://acme-v02.api.letsencrypt.org/acme/new-nonce\",\r\n      \"newOrder\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\",\r\n      \"revokeCert\": \"https://acme-v02.api.letsencrypt.org/acme/revoke-cert\"\r\n    }'\r\n    ++ get_json_string_value newOrder\r\n    ++ local filter\r\n    +++ printf 's/.*\"%s\": *\"\\([^\"]*\\)\".*/\\\\1/p' newOrder\r\n    ++ filter='s/.*\"newOrder\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    ++ sed -n 's/.*\"newOrder\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    + CA_NEW_ORDER=https://acme-v02.api.letsencrypt.org/acme/new-order\r\n    ++ printf %s '{\r\n      \"7fyAybhlKz0\": \"https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417\",\r\n      \"keyChange\": \"https://acme-v02.api.letsencrypt.org/acme/key-change\",\r\n      \"meta\": {\r\n        \"termsOfService\": \"https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf\"\r\n      },\r\n      \"newAccount\": \"https://acme-v02.api.letsencrypt.org/acme/new-acct\",\r\n      \"newNonce\": \"https://acme-v02.api.letsencrypt.org/acme/new-nonce\",\r\n      \"newOrder\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\",\r\n      \"revokeCert\": \"https://acme-v02.api.letsencrypt.org/acme/revoke-cert\"\r\n    }'\r\n    ++ get_json_string_value newNonce\r\n    ++ local filter\r\n    +++ printf 's/.*\"%s\": *\"\\([^\"]*\\)\".*/\\\\1/p' newNonce\r\n    ++ filter='s/.*\"newNonce\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    ++ sed -n 's/.*\"newNonce\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    + CA_NEW_NONCE=https://acme-v02.api.letsencrypt.org/acme/new-nonce\r\n    ++ printf %s '{\r\n      \"7fyAybhlKz0\": \"https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417\",\r\n      \"keyChange\": \"https://acme-v02.api.letsencrypt.org/acme/key-change\",\r\n      \"meta\": {\r\n        \"termsOfService\": \"https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf\"\r\n      },\r\n      \"newAccount\": \"https://acme-v02.api.letsencrypt.org/acme/new-acct\",\r\n      \"newNonce\": \"https://acme-v02.api.letsencrypt.org/acme/new-nonce\",\r\n      \"newOrder\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\",\r\n      \"revokeCert\": \"https://acme-v02.api.letsencrypt.org/acme/revoke-cert\"\r\n    }'\r\n    ++ get_json_string_value newAccount\r\n    ++ local filter\r\n    +++ printf 's/.*\"%s\": *\"\\([^\"]*\\)\".*/\\\\1/p' newAccount\r\n    ++ filter='s/.*\"newAccount\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    ++ sed -n 's/.*\"newAccount\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    + CA_NEW_ACCOUNT=https://acme-v02.api.letsencrypt.org/acme/new-acct\r\n    ++ printf %s '{\r\n      \"7fyAybhlKz0\": \"https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417\",\r\n      \"keyChange\": \"https://acme-v02.api.letsencrypt.org/acme/key-change\",\r\n      \"meta\": {\r\n        \"termsOfService\": \"https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf\"\r\n      },\r\n      \"newAccount\": \"https://acme-v02.api.letsencrypt.org/acme/new-acct\",\r\n      \"newNonce\": \"https://acme-v02.api.letsencrypt.org/acme/new-nonce\",\r\n      \"newOrder\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\",\r\n      \"revokeCert\": \"https://acme-v02.api.letsencrypt.org/acme/revoke-cert\"\r\n    }'\r\n    ++ get_json_string_value termsOfService\r\n    ++ local filter\r\n    +++ printf 's/.*\"%s\": *\"\\([^\"]*\\)\".*/\\\\1/p' termsOfService\r\n    ++ filter='s/.*\"termsOfService\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    ++ sed -n 's/.*\"termsOfService\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    + CA_TERMS=https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf\r\n    ++ printf %s '{\r\n      \"7fyAybhlKz0\": \"https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417\",\r\n      \"keyChange\": \"https://acme-v02.api.letsencrypt.org/acme/key-change\",\r\n      \"meta\": {\r\n        \"termsOfService\": \"https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf\"\r\n      },\r\n      \"newAccount\": \"https://acme-v02.api.letsencrypt.org/acme/new-acct\",\r\n      \"newNonce\": \"https://acme-v02.api.letsencrypt.org/acme/new-nonce\",\r\n      \"newOrder\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\",\r\n      \"revokeCert\": \"https://acme-v02.api.letsencrypt.org/acme/revoke-cert\"\r\n    }'\r\n    ++ get_json_string_value revokeCert\r\n    ++ local filter\r\n    +++ printf 's/.*\"%s\": *\"\\([^\"]*\\)\".*/\\\\1/p' revokeCert\r\n    ++ filter='s/.*\"revokeCert\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    ++ sed -n 's/.*\"revokeCert\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    + CA_REVOKE_CERT=https://acme-v02.api.letsencrypt.org/acme/revoke-cert\r\n    + CA_ACCOUNT=https://acme-v02.api.letsencrypt.org/acme/acct\r\n    + export WELLKNOWN BASEDIR CERTDIR CONFIG COMMAND\r\n    + register_new_key=no\r\n    + [[ -n '' ]]\r\n    + [[ ! -e /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/account_key.pem ]]\r\n    + openssl rsa -in /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/account_key.pem -check\r\n    ++ hex2bin\r\n    ++ urlbase64\r\n    ++ openssl base64 -e\r\n    ++ tr -d '\\n\\r'\r\n    +++ awk '/publicExponent/ {print $2}'\r\n    +++ openssl rsa -in /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/account_key.pem -noout -text\r\n    ++ _sed -e 's:=*$::g' -e y:+/:-_:\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r -e 's:=*$::g' -e y:+/:-_:\r\n    +++ _sed -e 's/[[:space:]]//g' -e 's/^(.(.{2})*)$/0\\1/' -e 's/(.{2})/\\\\x\\1/g'\r\n    +++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    +++ sed -r -e 's/[[:space:]]//g' -e 's/^(.(.{2})*)$/0\\1/' -e 's/(.{2})/\\\\x\\1/g'\r\n    +++ cat\r\n    ++ printf %x 65537\r\n    ++ printf -- '\\x01\\x00\\x01'\r\n    + pubExponent64=AQAB\r\n    ++ openssl rsa -in /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/account_key.pem -noout -modulus\r\n    ++ cut -d= -f2\r\n    ++ hex2bin\r\n    ++ urlbase64\r\n    ++ openssl base64 -e\r\n    +++ cat\r\n    +++ _sed -e 's/[[:space:]]//g' -e 's/^(.(.{2})*)$/0\\1/' -e 's/(.{2})/\\\\x\\1/g'\r\n    ++ _sed -e 's:=*$::g' -e y:+/:-_:\r\n    ++ tr -d '\\n\\r'\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    +++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r -e 's:=*$::g' -e y:+/:-_:\r\n    +++ sed -r -e 's/[[:space:]]//g' -e 's/^(.(.{2})*)$/0\\1/' -e 's/(.{2})/\\\\x\\1/g'\r\n    ++ printf -- '\\xD2\\x5B\\x95\\x21\\x48\\xED\\xB1\\x22\\x5D\\x42\\x08\\x28\\xA4\\x60\\x7C\\xAC\\x8F\\x5E\\xC0\\xE5\\x44\\x97\\xFF\\x3F\\x5E\\xD3\\xB4\\x0C\\x11\\x11\\x9F\\x71\\x67\\x96\\xC7\\xEA\\x83\\xC8\\xE0\\xFB\\xD5\\x73\\xE4\\x23\\xAB\\xB9\\xAC\\x7F\\x01\\x14\\xC2\\xCA\\xEC\\xA0\\x03\\x60\\x10\\x92\\xC4\\x9B\\xC8\\xF2\\xF9\\x01\\xCC\\x00\\xDC\\xF5\\x8E\\xC6\\xD8\\x0E\\xFA\\xBE\\x5F\\xF6\\x1E\\x49\\xD6\\x69\\xA8\\x85\\x7B\\x97\\x6B\\xC2\\x38\\x50\\xF6\\x05\\x26\\x00\\x8D\\xAC\\x58\\x18\\xC9\\xCA\\x8A\\x3E\\x98\\xF6\\xFD\\x65\\x4C\\x8C\\x6D\\x09\\x03\\x16\\x3D\\xFF\\xE7\\x2F\\xB1\\xBB\\xEB\\xD2\\xF3\\x0E\\xE4\\x10\\xFF\\x57\\x39\\x3B\\xC5\\x47\\xD8\\xE9\\x25\\x8B\\x92\\x62\\x3E\\x86\\x87\\xF7\\xAD\\x06\\x15\\xA8\\x8F\\x2D\\xD0\\xE6\\xF7\\x2D\\x55\\x26\\x57\\x14\\xAF\\x17\\xDA\\x86\\xC1\\x97\\x65\\x81\\x6C\\x71\\xE7\\x6E\\x96\\x7C\\x79\\x4C\\xDF\\xE1\\x65\\xD8\\x80\\xE8\\x39\\x00\\xB6\\x63\\x0D\\x49\\x84\\x61\\x1A\\xB3\\x4E\\x63\\xDE\\x29\\x2F\\xDC\\x47\\xE0\\x15\\xDB\\x8F\\x2D\\xDE\\x9B\\x85\\x7B\\x95\\x2E\\xEC\\xBC\\xEA\\xF5\\xC8\\x28\\x2A\\xF4\\x7D\\xE4\\x5A\\x29\\x9B\\xB9\\xEF\\x36\\x79\\x3F\\xCC\\x10\\x32\\xC2\\xC2\\x47\\x70\\x41\\x4A\\xE0\\x21\\xAB\\xCF\\x44\\x45\\x04\\x84\\x14\\x4C\\x6A\\xAC\\xE5\\x96\\xF7\\xB6\\xD4\\x61\\x57\\xEF\\x77\\x2A\\x6E\\x9B\\x73\\xC3\\x2F\\x24\\x54\\xB2\\xE2\\x00\\xD0\\x2F\\xCD\\x2C\\x58\\xAD\\x43\\xE9\\xB7\\x77\\x6C\\x31\\x9F\\x26\\x29\\x8B\\x5F\\xE1\\x26\\xBE\\xE7\\x9C\\x07\\xCA\\x5F\\x97\\xC5\\xBF\\x46\\x07\\x24\\xF5\\xF9\\xED\\x2F\\x35\\x32\\xF1\\x95\\xC2\\xCE\\x3B\\x3C\\xED\\x36\\xE8\\xB0\\x18\\x7A\\x44\\x7F\\xD6\\x98\\xA3\\xD8\\x60\\x73\\x64\\xBC\\xA3\\x0E\\x05\\xED\\x2E\\xB4\\x56\\x46\\xFC\\x2F\\x55\\xFF\\x93\\x53\\xC6\\x09\\x58\\x87\\xAD\\x84\\x2B\\x75\\x3B\\x83\\x8A\\x62\\x5F\\xDD\\x82\\x98\\x13\\x59\\xC1\\xD7\\x5B\\x5F\\x3C\\xAA\\x97\\xAC\\xAB\\xED\\x1A\\xF3\\x42\\x24\\x06\\x86\\xEE\\x67\\x61\\x13\\xBD\\x5E\\x6F\\x87\\x5B\\xEC\\x99\\xC1\\xC8\\x29\\x52\\xAB\\x92\\x10\\x1F\\xE1\\x1C\\x70\\xFC\\xFB\\xE8\\x05\\x1F\\x1D\\x95\\x8D\\xA4\\xDF\\x1F\\x8D\\xD8\\x02\\x57\\xE6\\xD2\\xF8\\x30\\xF8\\x1C\\x8A\\xD7\\xAF\\x20\\x52\\xFF\\x27\\xA8\\x82\\x10\\x61\\x07\\xBE\\xA2\\xC6\\x37\\x2E\\xA4\\x6E\\xFC\\xF3\\x60\\x8D\\x94\\xA0\\xBF\\x97\\x42\\x47\\x6E\\xE4\\xF2\\xFB\\xE2\\x48\\xF1\\x65\\xB7\\x24\\x8C\\x27\\x90\\x7E\\xB7\\xC1\\xB2\\xE8\\xC3\\xD1\\x45\\x17\\x09\\xA4\\x61\\x9B\\x48\\x71\\x66\\xF5\\xF1\\x5B\\xE2\\x20\\xF4\\x7D\\xAB\\x1A\\x37\\x47\\x98\\xB8\\x4A\\x25\\x08\\x6F\\xC3\\xC5\\x77\\x97\\xCD\\x64\\xE3\\x15\\x98\\xE1\\x3B\\x3C\\xC4\\x4B\\xA2\\xF0\\x48\\xC5\\x74\\x6E\\xC7\\xF0\\x88\\x48\\x2A\\xC3'\r\n    + pubMod64=0luVIUjtsSJdQggopGB8rI9ewOVEl_8_XtO0DBERn3Fnlsfqg8jg-9Vz5COruax_ARTCyuygA2AQksSbyPL5AcwA3PWOxtgO-r5f9h5J1mmohXuXa8I4UPYFJgCNrFgYycqKPpj2_WVMjG0JAxY9_-cvsbvr0vMO5BD_Vzk7xUfY6SWLkmI-hof3rQYVqI8t0Ob3LVUmVxSvF9qGwZdlgWxx526WfHlM3-Fl2IDoOQC2Yw1JhGEas05j3ikv3EfgFduPLd6bhXuVLuy86vXIKCr0feRaKZu57zZ5P8wQMsLCR3BBSuAhq89ERQSEFExqrOWW97bUYVfvdypum3PDLyRUsuIA0C_NLFitQ-m3d2wxnyYpi1_hJr7nnAfKX5fFv0YHJPX57S81MvGVws47PO026LAYekR_1pij2GBzZLyjDgXtLrRWRvwvVf-TU8YJWIethCt1O4OKYl_dgpgTWcHXW188qpesq-0a80IkBobuZ2ETvV5vh1vsmcHIKVKrkhAf4Rxw_PvoBR8dlY2k3x-N2AJX5tL4MPgcitevIFL_J6iCEGEHvqLGNy6kbvzzYI2UoL-XQkdu5PL74kjxZbckjCeQfrfBsujD0UUXCaRhm0hxZvXxW-Ig9H2rGjdHmLhKJQhvw8V3l81k4xWY4Ts8xEui8EjFdG7H8IhIKsM\r\n    ++ printf '{\"e\":\"%s\",\"kty\":\"RSA\",\"n\":\"%s\"}' AQAB 0luVIUjtsSJdQggopGB8rI9ewOVEl_8_XtO0DBERn3Fnlsfqg8jg-9Vz5COruax_ARTCyuygA2AQksSbyPL5AcwA3PWOxtgO-r5f9h5J1mmohXuXa8I4UPYFJgCNrFgYycqKPpj2_WVMjG0JAxY9_-cvsbvr0vMO5BD_Vzk7xUfY6SWLkmI-hof3rQYVqI8t0Ob3LVUmVxSvF9qGwZdlgWxx526WfHlM3-Fl2IDoOQC2Yw1JhGEas05j3ikv3EfgFduPLd6bhXuVLuy86vXIKCr0feRaKZu57zZ5P8wQMsLCR3BBSuAhq89ERQSEFExqrOWW97bUYVfvdypum3PDLyRUsuIA0C_NLFitQ-m3d2wxnyYpi1_hJr7nnAfKX5fFv0YHJPX57S81MvGVws47PO026LAYekR_1pij2GBzZLyjDgXtLrRWRvwvVf-TU8YJWIethCt1O4OKYl_dgpgTWcHXW188qpesq-0a80IkBobuZ2ETvV5vh1vsmcHIKVKrkhAf4Rxw_PvoBR8dlY2k3x-N2AJX5tL4MPgcitevIFL_J6iCEGEHvqLGNy6kbvzzYI2UoL-XQkdu5PL74kjxZbckjCeQfrfBsujD0UUXCaRhm0hxZvXxW-Ig9H2rGjdHmLhKJQhvw8V3l81k4xWY4Ts8xEui8EjFdG7H8IhIKsM\r\n    ++ openssl dgst -sha256 -binary\r\n    ++ urlbase64\r\n    ++ openssl base64 -e\r\n    ++ tr -d '\\n\\r'\r\n    ++ _sed -e 's:=*$::g' -e y:+/:-_:\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r -e 's:=*$::g' -e y:+/:-_:\r\n    + thumbprint=VXESrd5m4rm2wgbUmDI4cr1fyUE7-DTX5gi2StpxhgI\r\n    + [[ no = \\y\\e\\s ]]\r\n    + [[ sign_domains = \\r\\e\\g\\i\\s\\t\\e\\r ]]\r\n    + [[ -e /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/registration_info.json ]]\r\n    ++ cat /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/registration_info.json\r\n    ++ get_json_int_value id\r\n    ++ local filter\r\n    +++ printf 's/.*\"%s\": *\\([0-9]*\\).*/\\\\1/p' id\r\n    ++ filter='s/.*\"id\": *\\([0-9]*\\).*/\\1/p'\r\n    ++ sed -n 's/.*\"id\": *\\([0-9]*\\).*/\\1/p'\r\n    + ACCOUNT_ID=4935574\r\n    + [[ 2 -eq 1 ]]\r\n    + ACCOUNT_URL=https://acme-v02.api.letsencrypt.org/acme/acct/4935574\r\n    + hookscript_bricker_hook\r\n    + [[ -n '' ]]\r\n    + [[ -n '' ]]\r\n    + '[' '!' -d /opt/dehydrated/chains ']'\r\n    + [[ -n domain.de www.domain.de ]]\r\n    ++ _mktemp\r\n    ++ mktemp /tmp/dehydrated-XXXXXX\r\n    + DOMAINS_TXT=/tmp/dehydrated-qsGIOe\r\n    + [[ -n '' ]]\r\n    + printf -- 'domain.de www.domain.de'\r\n    + ORIGIFS=' \t\r\n    '\r\n    + IFS='\r\n    '\r\n    ++ tr -d '\\r'\r\n    ++ awk '{print tolower($0)}'\r\n    ++ _sed -e 's/^[[:space:]]*//g' -e 's/[[:space:]]*$//g' -e 's/[[:space:]]+/ /g' -e 's/([^ ])>/\\1 >/g' -e 's/> />/g'\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r -e 's/^[[:space:]]*//g' -e 's/[[:space:]]*$//g' -e 's/[[:space:]]+/ /g' -e 's/([^ ])>/\\1 >/g' -e 's/> />/g'\r\n    ++ grep -vE '^(#|$)'\r\n    + for line in $(<\"${DOMAINS_TXT}\" tr -d '\\r' | awk '{print tolower($0)}' | _sed -e 's/^[[:space:]]*//g' -e 's/[[:space:]]*$//g' -e 's/[[:space:]]+/ /g' -e 's/([^ ])>/\\1 >/g' -e 's/> />/g' | (grep -vE '^(#|$)' || true))\r\n    + reset_configvars\r\n    + KEY_ALGO=secp384r1\r\n    + OCSP_MUST_STAPLE=no\r\n    + PRIVATE_KEY_RENEW=yes\r\n    + KEYSIZE=4096\r\n    + CHALLENGETYPE=http-01\r\n    + HOOK=\r\n    + WELLKNOWN=/srv/http/dehydrated\r\n    + HOOK_CHAIN=no\r\n    + OPENSSL_CNF=/etc/ssl/openssl.cnf\r\n    + RENEW_DAYS=30\r\n    + IP_VERSION=\r\n    + IFS=' \t\r\n    '\r\n    ++ grep -Eo '>[^ ]+'\r\n    ++ true\r\n    + alias=\r\n    ++ _sed -e 's/>[^ ]+[ ]*//g'\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r -e 's/>[^ ]+[ ]*//g'\r\n    + line='domain.de www.domain.de'\r\n    ++ grep -Eo '>'\r\n    ++ awk 'END {print NR}'\r\n    ++ true\r\n    + aliascount=0\r\n    + '[' 0 -gt 1 ']'\r\n    ++ printf '%s\\n' 'domain.de www.domain.de'\r\n    ++ cut '-d ' -f1\r\n    + domain=domain.de\r\n    ++ printf '%s\\n' 'domain.de www.domain.de'\r\n    ++ cut -s '-d ' -f2-\r\n    + morenames=www.domain.de\r\n    + '[' 0 -lt 1 ']'\r\n    + alias=domain.de\r\n    + export alias\r\n    + [[ -z www.domain.de ]]\r\n    + echo 'Processing domain.de with alternative names: www.domain.de'\r\n    Processing domain.de with alternative names: www.domain.de\r\n    + '[' tb = '*.' ']'\r\n    + local certdir=/etc/ssl/reksys/domain.de\r\n    + cert=/etc/ssl/reksys/domain.de/cert.pem\r\n    + chain=/etc/ssl/reksys/domain.de/chain.pem\r\n    + force_renew=no\r\n    ++ date +%s\r\n    + timestamp=1521107702\r\n    + [[ ! -e /etc/ssl/reksys/domain.de ]]\r\n    + [[ -n '' ]]\r\n    + certconfig=/etc/ssl/reksys/domain.de/config\r\n    + '[' -f /etc/ssl/reksys/domain.de/config ']'\r\n    + verify_config\r\n    + [[ http-01 == \\h\\t\\t\\p\\-\\0\\1 ]]\r\n    + [[ http-01 = \\d\\n\\s\\-\\0\\1 ]]\r\n    + [[ http-01 = \\h\\t\\t\\p\\-\\0\\1 ]]\r\n    + [[ ! -d /srv/http/dehydrated ]]\r\n    + [[ secp384r1 == \\r\\s\\a ]]\r\n    + [[ secp384r1 == \\p\\r\\i\\m\\e\\2\\5\\6\\v\\1 ]]\r\n    + [[ secp384r1 == \\s\\e\\c\\p\\3\\8\\4\\r\\1 ]]\r\n    + [[ -n '' ]]\r\n    + [[ 2 == \\a\\u\\t\\o ]]\r\n    + [[ 2 == \\1 ]]\r\n    + [[ 2 == \\2 ]]\r\n    + hookscript_bricker_hook\r\n    + [[ -n '' ]]\r\n    + export WELLKNOWN CHALLENGETYPE KEY_ALGO PRIVATE_KEY_ROLLOVER\r\n    + skip=no\r\n    + local csr=\r\n    + [[ -n '' ]]\r\n    + [[ -e /etc/ssl/reksys/domain.de/cert.pem ]]\r\n    + printf ' + Checking domain name(s) of existing cert...'\r\n     + Checking domain name(s) of existing cert...++ openssl x509 -in /etc/ssl/reksys/domain.de/cert.pem -text -noout\r\n    ++ grep DNS:\r\n    ++ _sed s/DNS://g\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r s/DNS://g\r\n    ++ tr , '\\n'\r\n    ++ tr -d ' '\r\n    ++ sort -u\r\n    ++ tr '\\n' ' '\r\n    ++ _sed 's/ $//'\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r 's/ $//'\r\n    + certnames='domain.de www.domain.de'\r\n    ++ echo domain.de www.domain.de\r\n    ++ tr ' ' '\\n'\r\n    ++ sort -u\r\n    ++ tr '\\n' ' '\r\n    ++ _sed 's/ $//'\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r 's/ $//'\r\n    ++ _sed 's/^ //'\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r 's/^ //'\r\n    + givennames='domain.de www.domain.de'\r\n    + [[ domain.de www.domain.de = \\t\\b\\-\\i\\t\\f\\.\\d\\e\\ \\w\\w\\w\\.\\t\\b\\-\\i\\t\\f\\.\\d\\e ]]\r\n    + echo ' unchanged.'\r\n     unchanged.\r\n    + [[ -e /etc/ssl/reksys/domain.de/cert.pem ]]\r\n    + echo ' + Checking expire date of existing cert...'\r\n     + Checking expire date of existing cert...\r\n    ++ openssl x509 -enddate -noout -in /etc/ssl/reksys/domain.de/cert.pem\r\n    ++ cut -d= -f2-\r\n    + valid='Apr  3 22:05:12 2018 GMT'\r\n    + printf ' + Valid till %s ' 'Apr  3 22:05:12 2018 GMT'\r\n     + Valid till Apr  3 22:05:12 2018 GMT + openssl x509 -checkend 2592000 -noout -in /etc/ssl/reksys/domain.de/cert.pem\r\n    Certificate will expire\r\n    + echo '(Less than 30 days). Renewing!'\r\n    (Less than 30 days). Renewing!\r\n    + local update_ocsp\r\n    + update_ocsp=no\r\n    + [[ ! no = \\y\\e\\s ]]\r\n    + update_ocsp=yes\r\n    + [[ -z '' ]]\r\n    + [[ '' = \\y\\e\\s ]]\r\n    + sign_domain /etc/ssl/reksys/domain.de 1521107702 domain.de www.domain.de\r\n    + local certdir=/etc/ssl/reksys/domain.de\r\n    + shift\r\n    + timestamp=1521107702\r\n    + shift\r\n    + domain=domain.de\r\n    + altnames='domain.de www.domain.de'\r\n    + export altnames\r\n    + echo ' + Signing domains...'\r\n     + Signing domains...\r\n    + [[ 2 -eq 1 ]]\r\n    + [[ 2 -eq 2 ]]\r\n    + [[ -z https://acme-v02.api.letsencrypt.org/acme/new-order ]]\r\n    + local privkey=privkey.pem\r\n    + [[ ! -e /etc/ssl/reksys/domain.de/cert-1521107702.csr ]]\r\n    + [[ ! -r /etc/ssl/reksys/domain.de/privkey.pem ]]\r\n    + [[ yes = \\y\\e\\s ]]\r\n    + echo ' + Generating private key...'\r\n     + Generating private key...\r\n    + privkey=privkey-1521107702.pem\r\n    + case \"${KEY_ALGO}\" in\r\n    + _openssl ecparam -genkey -name secp384r1 -out /etc/ssl/reksys/domain.de/privkey-1521107702.pem\r\n    + set +e\r\n    ++ openssl ecparam -genkey -name secp384r1 -out /etc/ssl/reksys/domain.de/privkey-1521107702.pem\r\n    + out=\r\n    + res=0\r\n    + set -e\r\n    + [[ 0 -ne 0 ]]\r\n    + [[ -r /etc/ssl/reksys/domain.de/privkey.pem ]]\r\n    + [[ -r /etc/ssl/reksys/domain.de/privkey.roll.pem ]]\r\n    + [[ ! -r /etc/ssl/reksys/domain.de/privkey.roll.pem ]]\r\n    + [[ no = \\y\\e\\s ]]\r\n    + [[ -r /etc/ssl/reksys/domain.de/privkey.roll.pem ]]\r\n    + echo ' + Generating signing request...'\r\n     + Generating signing request...\r\n    + SAN=\r\n    + for altname in ${altnames}\r\n    + SAN='DNS:domain.de, '\r\n    + for altname in ${altnames}\r\n    + SAN='DNS:domain.de, DNS:www.domain.de, '\r\n    + SAN='DNS:domain.de, DNS:www.domain.de'\r\n    + local tmp_openssl_cnf\r\n    ++ _mktemp\r\n    ++ mktemp /tmp/dehydrated-XXXXXX\r\n    + tmp_openssl_cnf=/tmp/dehydrated-CcSKF0\r\n    + cat /etc/ssl/openssl.cnf\r\n    + printf '[SAN]\\nsubjectAltName=%s' 'DNS:domain.de, DNS:www.domain.de'\r\n    + '[' no = yes ']'\r\n    + SUBJ=/CN=domain.de/\r\n    + [[ Linux = \\M\\I\\N\\G\\W ]]\r\n    + openssl req -new -sha256 -key /etc/ssl/reksys/domain.de/privkey-1521107702.pem -out /etc/ssl/reksys/domain.de/cert-1521107702.csr -subj /CN=domain.de/ -reqexts SAN -config /tmp/dehydrated-CcSKF0\r\n    + rm -f /tmp/dehydrated-CcSKF0\r\n    + crt_path=/etc/ssl/reksys/domain.de/cert-1521107702.pem\r\n    + sign_csr '-----BEGIN CERTIFICATE REQUEST-----\r\n    MIIBQjCByQIBADAUMRIwEAYDVQQDDAl0Yi1pdGYuZGUwdjAQBgcqhkjOPQIBBgUr\r\n    gQQAIgNiAARY2/Y8cRAXz9KayEaFiY8XJXfBthZ9NSwQF6mUNHyNK6BXYXxiC17y\r\n    ...\r\n    I7+jnF+SuKAFQvVl5HRnm1nYK9lGT5nLutqygdHMQNm1FfTbAjAiu5uIbjmn9PYJ\r\n    jrnCTJ+DC+RVToZ03IuNuXU8eAqVtuFu78LFtKiHEqiPRlAkRzQ=\r\n    -----END CERTIFICATE REQUEST-----' domain.de www.domain.de\r\n    + csr='-----BEGIN CERTIFICATE REQUEST-----\r\n    MIIBQjCByQIBADAUMRIwEAYDVQQDDAl0Yi1pdGYuZGUwdjAQBgcqhkjOPQIBBgUr\r\n    gQQAIgNiAARY2/Y8cRAXz9KayEaFiY8XJXfBthZ9NSwQF6mUNHyNK6BXYXxiC17y\r\n    ...\r\n    I7+jnF+SuKAFQvVl5HRnm1nYK9lGT5nLutqygdHMQNm1FfTbAjAiu5uIbjmn9PYJ\r\n    jrnCTJ+DC+RVToZ03IuNuXU8eAqVtuFu78LFtKiHEqiPRlAkRzQ=\r\n    -----END CERTIFICATE REQUEST-----'\r\n    + :\r\n    + shift 1\r\n    + export 'altnames=domain.de www.domain.de'\r\n    + altnames='domain.de www.domain.de'\r\n    + [[ 2 -eq 1 ]]\r\n    + [[ 2 -eq 2 ]]\r\n    + [[ -z https://acme-v02.api.letsencrypt.org/acme/new-order ]]\r\n    + [[ -n '' ]]\r\n    + local -a challenge_identifiers challenge_uris challenge_tokens authorizations keyauths deploy_args\r\n    + [[ 2 -eq 2 ]]\r\n    + for altname in ${altnames}\r\n    ++ printf '{\"type\": \"dns\", \"value\": \"%s\"}, ' domain.de\r\n    + challenge_identifiers+='{\"type\": \"dns\", \"value\": \"domain.de\"}, '\r\n    + for altname in ${altnames}\r\n    ++ printf '{\"type\": \"dns\", \"value\": \"%s\"}, ' www.domain.de\r\n    + challenge_identifiers+='{\"type\": \"dns\", \"value\": \"www.domain.de\"}, '\r\n    + challenge_identifiers='[{\"type\": \"dns\", \"value\": \"domain.de\"}, {\"type\": \"dns\", \"value\": \"www.domain.de\"}]'\r\n    + echo ' + Requesting new certificate order from CA...'\r\n     + Requesting new certificate order from CA...\r\n    ++ signed_request https://acme-v02.api.letsencrypt.org/acme/new-order '{\"identifiers\": [{\"type\": \"dns\", \"value\": \"domain.de\"}, {\"type\": \"dns\", \"value\": \"www.domain.de\"}]}'\r\n    +++ printf %s '{\"identifiers\": [{\"type\": \"dns\", \"value\": \"domain.de\"}, {\"type\": \"dns\", \"value\": \"www.domain.de\"}]}'\r\n    +++ urlbase64\r\n    +++ openssl base64 -e\r\n    +++ tr -d '\\n\\r'\r\n    +++ _sed -e 's:=*$::g' -e y:+/:-_:\r\n    +++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    +++ sed -r -e 's:=*$::g' -e y:+/:-_:\r\n    ++ payload64=eyJpZGVudGlmaWVycyI6IFt7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInRiLWl0Zi5kZSJ9LCB7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInd3dy50Yi1pdGYuZGUifV19\r\n    ++ [[ 2 -eq 1 ]]\r\n    +++ http_request head https://acme-v02.api.letsencrypt.org/acme/new-nonce\r\n    +++ grep Replay-Nonce:\r\n    +++ awk -F ': ' '{print $2}'\r\n    +++ tr -d '\\n\\r'\r\n    ++++ _mktemp\r\n    ++++ mktemp /tmp/dehydrated-XXXXXX\r\n    +++ tempcont=/tmp/dehydrated-PCKWNe\r\n    ++++ _mktemp\r\n    ++++ mktemp /tmp/dehydrated-XXXXXX\r\n    +++ tempheaders=/tmp/dehydrated-Ur7gmS\r\n    +++ [[ -n '' ]]\r\n    +++ set +e\r\n    +++ [[ head = \\h\\e\\a\\d ]]\r\n    ++++ curl -A 'dehydr4ted/git-master-after-0.6.1 curl/7.58.0' -s -w '%{http_code}' -o /tmp/dehydrated-PCKWNe https://acme-v02.api.letsencrypt.org/acme/new-nonce -I\r\n    +++ statuscode=204\r\n    +++ touch /tmp/dehydrated-Ur7gmS\r\n    +++ curlret=0\r\n    +++ set -e\r\n    +++ [[ ! 0 = \\0 ]]\r\n    +++ [[ ! 2 = \\2 ]]\r\n    +++ cat /tmp/dehydrated-Ur7gmS\r\n    +++ cat /tmp/dehydrated-PCKWNe\r\n    +++ rm -f /tmp/dehydrated-PCKWNe\r\n    +++ rm -f /tmp/dehydrated-Ur7gmS\r\n    ++ nonce=UT2G1O0FxgF7-v6XsqB-GcnIC1WssnoPATviVkSruhw\r\n    ++ header='{\"alg\": \"RS256\", \"jwk\": {\"e\": \"AQAB\", \"kty\": \"RSA\", \"n\": \"0luVIUjtsSJdQggopGB8rI9ewOVEl_8_XtO0DBERn3Fnlsfqg8jg-9Vz5COruax_ARTCyuygA2AQksSbyPL5AcwA3PWOxtgO-r5f9h5J1mmohXuXa8I4UPYFJgCNrFgYycqKPpj2_WVMjG0JAxY9_-cvsbvr0vMO5BD_Vzk7xUfY6SWLkmI-hof3rQYVqI8t0Ob3LVUmVxSvF9qGwZdlgWxx526WfHlM3-Fl2IDoOQC2Yw1JhGEas05j3ikv3EfgFduPLd6bhXuVLuy86vXIKCr0feRaKZu57zZ5P8wQMsLCR3BBSuAhq89ERQSEFExqrOWW97bUYVfvdypum3PDLyRUsuIA0C_NLFitQ-m3d2wxnyYpi1_hJr7nnAfKX5fFv0YHJPX57S81MvGVws47PO026LAYekR_1pij2GBzZLyjDgXtLrRWRvwvVf-TU8YJWIethCt1O4OKYl_dgpgTWcHXW188qpesq-0a80IkBobuZ2ETvV5vh1vsmcHIKVKrkhAf4Rxw_PvoBR8dlY2k3x-N2AJX5tL4MPgcitevIFL_J6iCEGEHvqLGNy6kbvzzYI2UoL-XQkdu5PL74kjxZbckjCeQfrfBsujD0UUXCaRhm0hxZvXxW-Ig9H2rGjdHmLhKJQhvw8V3l81k4xWY4Ts8xEui8EjFdG7H8IhIKsM\"}}'\r\n    ++ [[ 2 -eq 1 ]]\r\n    ++ [[ -n https://acme-v02.api.letsencrypt.org/acme/acct/4935574 ]]\r\n    ++ protected='{\"alg\": \"RS256\", \"kid\": \"https://acme-v02.api.letsencrypt.org/acme/acct/4935574\", \"url\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\", \"nonce\": \"UT2G1O0FxgF7-v6XsqB-GcnIC1WssnoPATviVkSruhw\"}'\r\n    +++ printf %s '{\"alg\": \"RS256\", \"kid\": \"https://acme-v02.api.letsencrypt.org/acme/acct/4935574\", \"url\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\", \"nonce\": \"UT2G1O0FxgF7-v6XsqB-GcnIC1WssnoPATviVkSruhw\"}'\r\n    +++ urlbase64\r\n    +++ openssl base64 -e\r\n    +++ tr -d '\\n\\r'\r\n    +++ _sed -e 's:=*$::g' -e y:+/:-_:\r\n    +++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    +++ sed -r -e 's:=*$::g' -e y:+/:-_:\r\n    ++ protected64=eyJhbGciOiAiUlMyNTYiLCAia2lkIjogImh0dHBzOi8vYWNtZS12MDIuYXBpLmxldHNlbmNyeXB0Lm9yZy9hY21lL2FjY3QvNDkzNTU3NCIsICJ1cmwiOiAiaHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2FjbWUvbmV3LW9yZGVyIiwgIm5vbmNlIjogIlVUMkcxTzBGeGdGNy12NlhzcUItR2NuSUMxV3Nzbm9QQVR2aVZrU3J1aHcifQ\r\n    +++ printf %s eyJhbGciOiAiUlMyNTYiLCAia2lkIjogImh0dHBzOi8vYWNtZS12MDIuYXBpLmxldHNlbmNyeXB0Lm9yZy9hY21lL2FjY3QvNDkzNTU3NCIsICJ1cmwiOiAiaHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2FjbWUvbmV3LW9yZGVyIiwgIm5vbmNlIjogIlVUMkcxTzBGeGdGNy12NlhzcUItR2NuSUMxV3Nzbm9QQVR2aVZrU3J1aHcifQ.eyJpZGVudGlmaWVycyI6IFt7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInRiLWl0Zi5kZSJ9LCB7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInd3dy50Yi1pdGYuZGUifV19\r\n    +++ openssl dgst -sha256 -sign /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/account_key.pem\r\n    +++ urlbase64\r\n    +++ openssl base64 -e\r\n    +++ tr -d '\\n\\r'\r\n    +++ _sed -e 's:=*$::g' -e y:+/:-_:\r\n    +++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    +++ sed -r -e 's:=*$::g' -e y:+/:-_:\r\n    ++ signed64=QBzpQ9dQoIcYzNJCtv9qRofVHNOqrrHiTElFMeobXgoE-ESwMXmkB-DTuxAcW1yRx-KDl7HRafl_iSpCDZgAzrTngUQTcU_Mhk1XtetHGmevWrJhjA0t7TVuSVa7futxErmIymmARYgxaisqXb00CJSBDpaAI_tURIe47qhOmzno_EVqvtmgclpNRbhkLcb3ezVIoV0D2hUTCn5KUChAxp4pbOaivSw02oDWuFwzZ3a7i3vKPnVs6ceks2lKn5KEjpdPgW6QaNMEBn_gQQpD3fgd2YTQGqvipIcZ2ZMVxTySfIOMUlLEhtFLqycm0DwL9bbMZ_Yb7-siIa9U3MBmYGW3KYDf3UtVJx15hibIR7OtLJCG1GoVaw3JYnew47xfvYEbiOpyxkZUoBg7z8VqxSy48p3Z8WBDZHICnPig0S6rzapGcL0-EPLUVUtcjnZicL1hauCFCXHYRF0waX-sJa2oWYyZyDF4v-8m5vQSwxscCr8aQeTgytMmp_rHWeICM6TglQZJQbkgbRsDjIIdqk49BqPBJ-lN5wuuClANJs9zF8vZMXwGU6bGH5yapJuYMT8YKJuXzt7oiwClp5P9zufPY3713cYG-L0E7_lFCHs6f4ab9_j1pTJ9sFFlAhUozdN3Q73Jmgu7pPNy3xW2khDfx3GIU4sNa9v60AE4RhY\r\n    ++ [[ 2 -eq 1 ]]\r\n    ++ data='{\"protected\": \"eyJhbGciOiAiUlMyNTYiLCAia2lkIjogImh0dHBzOi8vYWNtZS12MDIuYXBpLmxldHNlbmNyeXB0Lm9yZy9hY21lL2FjY3QvNDkzNTU3NCIsICJ1cmwiOiAiaHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2FjbWUvbmV3LW9yZGVyIiwgIm5vbmNlIjogIlVUMkcxTzBGeGdGNy12NlhzcUItR2NuSUMxV3Nzbm9QQVR2aVZrU3J1aHcifQ\", \"payload\": \"eyJpZGVudGlmaWVycyI6IFt7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInRiLWl0Zi5kZSJ9LCB7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInd3dy50Yi1pdGYuZGUifV19\", \"signature\": \"QBzpQ9dQoIcYzNJCtv9qRofVHNOqrrHiTElFMeobXgoE-ESwMXmkB-DTuxAcW1yRx-KDl7HRafl_iSpCDZgAzrTngUQTcU_Mhk1XtetHGmevWrJhjA0t7TVuSVa7futxErmIymmARYgxaisqXb00CJSBDpaAI_tURIe47qhOmzno_EVqvtmgclpNRbhkLcb3ezVIoV0D2hUTCn5KUChAxp4pbOaivSw02oDWuFwzZ3a7i3vKPnVs6ceks2lKn5KEjpdPgW6QaNMEBn_gQQpD3fgd2YTQGqvipIcZ2ZMVxTySfIOMUlLEhtFLqycm0DwL9bbMZ_Yb7-siIa9U3MBmYGW3KYDf3UtVJx15hibIR7OtLJCG1GoVaw3JYnew47xfvYEbiOpyxkZUoBg7z8VqxSy48p3Z8WBDZHICnPig0S6rzapGcL0-EPLUVUtcjnZicL1hauCFCXHYRF0waX-sJa2oWYyZyDF4v-8m5vQSwxscCr8aQeTgytMmp_rHWeICM6TglQZJQbkgbRsDjIIdqk49BqPBJ-lN5wuuClANJs9zF8vZMXwGU6bGH5yapJuYMT8YKJuXzt7oiwClp5P9zufPY3713cYG-L0E7_lFCHs6f4ab9_j1pTJ9sFFlAhUozdN3Q73Jmgu7pPNy3xW2khDfx3GIU4sNa9v60AE4RhY\"}'\r\n    ++ http_request post https://acme-v02.api.letsencrypt.org/acme/new-order '{\"protected\": \"eyJhbGciOiAiUlMyNTYiLCAia2lkIjogImh0dHBzOi8vYWNtZS12MDIuYXBpLmxldHNlbmNyeXB0Lm9yZy9hY21lL2FjY3QvNDkzNTU3NCIsICJ1cmwiOiAiaHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2FjbWUvbmV3LW9yZGVyIiwgIm5vbmNlIjogIlVUMkcxTzBGeGdGNy12NlhzcUItR2NuSUMxV3Nzbm9QQVR2aVZrU3J1aHcifQ\", \"payload\": \"eyJpZGVudGlmaWVycyI6IFt7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInRiLWl0Zi5kZSJ9LCB7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInd3dy50Yi1pdGYuZGUifV19\", \"signature\": \"QBzpQ9dQoIcYzNJCtv9qRofVHNOqrrHiTElFMeobXgoE-ESwMXmkB-DTuxAcW1yRx-KDl7HRafl_iSpCDZgAzrTngUQTcU_Mhk1XtetHGmevWrJhjA0t7TVuSVa7futxErmIymmARYgxaisqXb00CJSBDpaAI_tURIe47qhOmzno_EVqvtmgclpNRbhkLcb3ezVIoV0D2hUTCn5KUChAxp4pbOaivSw02oDWuFwzZ3a7i3vKPnVs6ceks2lKn5KEjpdPgW6QaNMEBn_gQQpD3fgd2YTQGqvipIcZ2ZMVxTySfIOMUlLEhtFLqycm0DwL9bbMZ_Yb7-siIa9U3MBmYGW3KYDf3UtVJx15hibIR7OtLJCG1GoVaw3JYnew47xfvYEbiOpyxkZUoBg7z8VqxSy48p3Z8WBDZHICnPig0S6rzapGcL0-EPLUVUtcjnZicL1hauCFCXHYRF0waX-sJa2oWYyZyDF4v-8m5vQSwxscCr8aQeTgytMmp_rHWeICM6TglQZJQbkgbRsDjIIdqk49BqPBJ-lN5wuuClANJs9zF8vZMXwGU6bGH5yapJuYMT8YKJuXzt7oiwClp5P9zufPY3713cYG-L0E7_lFCHs6f4ab9_j1pTJ9sFFlAhUozdN3Q73Jmgu7pPNy3xW2khDfx3GIU4sNa9v60AE4RhY\"}'\r\n    +++ _mktemp\r\n    +++ mktemp /tmp/dehydrated-XXXXXX\r\n    ++ tempcont=/tmp/dehydrated-Qn0Nu7\r\n    +++ _mktemp\r\n    +++ mktemp /tmp/dehydrated-XXXXXX\r\n    ++ tempheaders=/tmp/dehydrated-kMe0wM\r\n    ++ [[ -n '' ]]\r\n    ++ set +e\r\n    ++ [[ post = \\h\\e\\a\\d ]]\r\n    ++ [[ post = \\g\\e\\t ]]\r\n    ++ [[ post = \\p\\o\\s\\t ]]\r\n    +++ curl -A 'dehydr4ted/git-master-after-0.6.1 curl/7.58.0' -s -w '%{http_code}' -o /tmp/dehydrated-Qn0Nu7 https://acme-v02.api.letsencrypt.org/acme/new-order -D /tmp/dehydrated-kMe0wM -H 'Content-Type: application/jose+json' -d '{\"protected\": \"eyJhbGciOiAiUlMyNTYiLCAia2lkIjogImh0dHBzOi8vYWNtZS12MDIuYXBpLmxldHNlbmNyeXB0Lm9yZy9hY21lL2FjY3QvNDkzNTU3NCIsICJ1cmwiOiAiaHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2FjbWUvbmV3LW9yZGVyIiwgIm5vbmNlIjogIlVUMkcxTzBGeGdGNy12NlhzcUItR2NuSUMxV3Nzbm9QQVR2aVZrU3J1aHcifQ\", \"payload\": \"eyJpZGVudGlmaWVycyI6IFt7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInRiLWl0Zi5kZSJ9LCB7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInd3dy50Yi1pdGYuZGUifV19\", \"signature\": \"QBzpQ9dQoIcYzNJCtv9qRofVHNOqrrHiTElFMeobXgoE-ESwMXmkB-DTuxAcW1yRx-KDl7HRafl_iSpCDZgAzrTngUQTcU_Mhk1XtetHGmevWrJhjA0t7TVuSVa7futxErmIymmARYgxaisqXb00CJSBDpaAI_tURIe47qhOmzno_EVqvtmgclpNRbhkLcb3ezVIoV0D2hUTCn5KUChAxp4pbOaivSw02oDWuFwzZ3a7i3vKPnVs6ceks2lKn5KEjpdPgW6QaNMEBn_gQQpD3fgd2YTQGqvipIcZ2ZMVxTySfIOMUlLEhtFLqycm0DwL9bbMZ_Yb7-siIa9U3MBmYGW3KYDf3UtVJx15hibIR7OtLJCG1GoVaw3JYnew47xfvYEbiOpyxkZUoBg7z8VqxSy48p3Z8WBDZHICnPig0S6rzapGcL0-EPLUVUtcjnZicL1hauCFCXHYRF0waX-sJa2oWYyZyDF4v-8m5vQSwxscCr8aQeTgytMmp_rHWeICM6TglQZJQbkgbRsDjIIdqk49BqPBJ-lN5wuuClANJs9zF8vZMXwGU6bGH5yapJuYMT8YKJuXzt7oiwClp5P9zufPY3713cYG-L0E7_lFCHs6f4ab9_j1pTJ9sFFlAhUozdN3Q73Jmgu7pPNy3xW2khDfx3GIU4sNa9v60AE4RhY\"}'\r\n    ++ statuscode=201\r\n    ++ curlret=0\r\n    ++ set -e\r\n    ++ [[ ! 0 = \\0 ]]\r\n    ++ [[ ! 2 = \\2 ]]\r\n    ++ cat /tmp/dehydrated-kMe0wM\r\n    cat: Schreibfehler: Daten\u00fcbergabe unterbrochen (broken pipe)\r\n    + result=\r\n    + remove_lock\r\n    + rm -f /opt/dehydrated/lock\r\n Here's the version output:\r\n\r\n    # ./dehydrated --version\r\n    # INFO: Using main config file /opt/dehydrated/config\r\n    Dehydrated by Lukas Schauer\r\n    https://dehydrated.de\r\n    \r\n    Dehydrated version: git-master-after-0.6.1\r\n    GIT-Revision: b93eac389395c8228be48999bf51c9f45e775a88\r\n    \r\n    OS: Arch Linux\r\n    Used software:\r\n     bash: 4.4.19(1)-release\r\n     curl: curl 7.58.0\r\n     awk: GNU Awk 4.2.1, API: 2.0 (GNU MPFR 4.0.1, GNU MP 6.1.2)\r\n     sed: sed (GNU sed) 4.4\r\n     mktemp: mktemp (GNU coreutils) 8.29\r\n     grep: grep (GNU grep) 3.1\r\n     diff: diff (GNU diffutils) 3.6\r\n     openssl: OpenSSL 1.1.0g  2 Nov 2017\r\n\r\nAnd here's the output including your Debug Code:\r\n\r\n    + set -e\r\n    + set -u\r\n    + set -o pipefail\r\n    + [[ -n '' ]]\r\n    + [[ -z '' ]]\r\n    + shopt -s nullglob\r\n    + set -f\r\n    + umask 077\r\n    + VERSION=git-master-after-0.6.1\r\n    + SOURCE=/opt/dehydrated/dehydrated\r\n    + '[' -h /opt/dehydrated/dehydrated ']'\r\n    +++ dirname /opt/dehydrated/dehydrated\r\n    ++ cd -P /opt/dehydrated\r\n    ++ pwd\r\n    + SCRIPTDIR=/opt/dehydrated\r\n    + BASEDIR=/opt/dehydrated\r\n    + ORIGARGS='-c -o /etc/ssl/reksys -a secp384r1 -d domain.de -d www.domain.de'\r\n    ++ uname\r\n    + OSTYPE=Linux\r\n    + [[ ! '' = \\N\\O\\O\\P ]]\r\n    + main -c -o /etc/ssl/reksys -a secp384r1 -d domain.de -d www.domain.de\r\n    + COMMAND=\r\n    + [[ -z -c -o /etc/ssl/reksys -a secp384r1 -d domain.de -d www.domain.de ]]\r\n    + ((  9  ))\r\n    + case \"${1}\" in\r\n    + set_command sign_domains\r\n    + [[ -z '' ]]\r\n    + COMMAND=sign_domains\r\n    + shift 1\r\n    + ((  8  ))\r\n    + case \"${1}\" in\r\n    + shift 1\r\n    + check_parameters /etc/ssl/reksys\r\n    + [[ -z /etc/ssl/reksys ]]\r\n    + [[ / = \\- ]]\r\n    + PARAM_CERTDIR=/etc/ssl/reksys\r\n    + shift 1\r\n    + ((  6  ))\r\n    + case \"${1}\" in\r\n    + shift 1\r\n    + check_parameters secp384r1\r\n    + [[ -z secp384r1 ]]\r\n    + [[ s = \\- ]]\r\n    + PARAM_KEY_ALGO=secp384r1\r\n    + shift 1\r\n    + ((  4  ))\r\n    + case \"${1}\" in\r\n    + shift 1\r\n    + check_parameters domain.de\r\n    + [[ -z domain.de ]]\r\n    + [[ t = \\- ]]\r\n    + [[ -z '' ]]\r\n    + PARAM_DOMAIN=domain.de\r\n    + shift 1\r\n    + ((  2  ))\r\n    + case \"${1}\" in\r\n    + shift 1\r\n    + check_parameters www.domain.de\r\n    + [[ -z www.domain.de ]]\r\n    + [[ w = \\- ]]\r\n    + [[ -z domain.de ]]\r\n    + PARAM_DOMAIN='domain.de www.domain.de'\r\n    + shift 1\r\n    + ((  0  ))\r\n    + case \"${COMMAND}\" in\r\n    + command_sign_domains\r\n    + init_system\r\n    + load_config\r\n    + [[ -z '' ]]\r\n    + for check_config in \"/etc/dehydrated\" \"/usr/local/etc/dehydrated\" \"${PWD}\" \"${SCRIPTDIR}\"\r\n    + [[ -f /etc/dehydrated/config ]]\r\n    + for check_config in \"/etc/dehydrated\" \"/usr/local/etc/dehydrated\" \"${PWD}\" \"${SCRIPTDIR}\"\r\n    + [[ -f /usr/local/etc/dehydrated/config ]]\r\n    + for check_config in \"/etc/dehydrated\" \"/usr/local/etc/dehydrated\" \"${PWD}\" \"${SCRIPTDIR}\"\r\n    + [[ -f /opt/reksys/config ]]\r\n    + for check_config in \"/etc/dehydrated\" \"/usr/local/etc/dehydrated\" \"${PWD}\" \"${SCRIPTDIR}\"\r\n    + [[ -f /opt/dehydrated/config ]]\r\n    + BASEDIR=/opt/dehydrated\r\n    + CONFIG=/opt/dehydrated/config\r\n    + break\r\n    + CA=https://acme-v02.api.letsencrypt.org/directory\r\n    + OLDCA=\r\n    + CERTDIR=\r\n    + ACCOUNTDIR=\r\n    + CHALLENGETYPE=http-01\r\n    + CONFIG_D=\r\n    + CURL_OPTS=\r\n    + DOMAINS_D=\r\n    + DOMAINS_TXT=\r\n    + HOOK=\r\n    + HOOK_CHAIN=no\r\n    + RENEW_DAYS=30\r\n    + KEYSIZE=4096\r\n    + WELLKNOWN=\r\n    + PRIVATE_KEY_RENEW=yes\r\n    + PRIVATE_KEY_ROLLOVER=no\r\n    + KEY_ALGO=rsa\r\n    + OPENSSL=openssl\r\n    + OPENSSL_CNF=\r\n    + CONTACT_EMAIL=\r\n    + LOCKFILE=\r\n    + OCSP_MUST_STAPLE=no\r\n    + OCSP_FETCH=no\r\n    + IP_VERSION=\r\n    + CHAINCACHE=\r\n    + AUTO_CLEANUP=no\r\n    + DEHYDRATED_USER=\r\n    + DEHYDRATED_GROUP=\r\n    + API=auto\r\n    + [[ -z /opt/dehydrated/config ]]\r\n    + [[ -f /opt/dehydrated/config ]]\r\n    + echo '# INFO: Using main config file /opt/dehydrated/config'\r\n    # INFO: Using main config file /opt/dehydrated/config\r\n    ++ dirname /opt/dehydrated/config\r\n    + BASEDIR=/opt/dehydrated\r\n    + . /opt/dehydrated/config\r\n    ++ CHALLENGETYPE=http-01\r\n    ++ WELLKNOWN=/srv/http/dehydrated\r\n    ++ KEYSIZE=4096\r\n    ++ PRIVATE_KEY_RENEW=yes\r\n    ++ KEY_ALGO=rsa\r\n    + [[ -n '' ]]\r\n    + [[ -n '' ]]\r\n    + [[ -n '' ]]\r\n    + check_dependencies\r\n    + openssl version\r\n    + _sed ''\r\n    + command -v grep\r\n    + command -v mktemp\r\n    + command -v diff\r\n    + set +e\r\n    ++ awk '{print $2}'\r\n    ++ head -n1\r\n    ++ curl -V\r\n    + CURL_VERSION=7.58.0\r\n    + retcode=0\r\n    + set -e\r\n    + [[ ! 0 = \\0 ]]\r\n    + [[ /opt/dehydrated != \\/ ]]\r\n    + BASEDIR=/opt/dehydrated\r\n    + [[ -d /opt/dehydrated ]]\r\n    + [[ -z '' ]]\r\n    + [[ https://acme-v02.api.letsencrypt.org/directory = \\h\\t\\t\\p\\s\\:\\/\\/\\a\\c\\m\\e\\-\\v\\0\\2\\.\\a\\p\\i\\.\\l\\e\\t\\s\\e\\n\\c\\r\\y\\p\\t\\.\\o\\r\\g\\/\\d\\i\\r\\e\\c\\t\\o\\r\\y ]]\r\n    + OLDCA=https://acme-v01.api.letsencrypt.org/directory\r\n    ++ echo https://acme-v02.api.letsencrypt.org/directory\r\n    ++ urlbase64\r\n    ++ _sed -e 's:=*$::g' -e y:+/:-_:\r\n    ++ tr -d '\\n\\r'\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r -e 's:=*$::g' -e y:+/:-_:\r\n    ++ openssl base64 -e\r\n    + CAHASH=aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo\r\n    + [[ -z '' ]]\r\n    + ACCOUNTDIR=/opt/dehydrated/accounts\r\n    + [[ ! -e /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo ]]\r\n    + [[ -f /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/config ]]\r\n    + ACCOUNT_KEY=/opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/account_key.pem\r\n    + ACCOUNT_KEY_JSON=/opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/registration_info.json\r\n    + [[ -f /opt/dehydrated/private_key.pem ]]\r\n    + [[ -f /opt/dehydrated/private_key.json ]]\r\n    + [[ -z '' ]]\r\n    + CERTDIR=/opt/dehydrated/certs\r\n    + [[ -z '' ]]\r\n    + CHAINCACHE=/opt/dehydrated/chains\r\n    + [[ -z '' ]]\r\n    + DOMAINS_TXT=/opt/dehydrated/domains.txt\r\n    + [[ -z /srv/http/dehydrated ]]\r\n    + [[ -z '' ]]\r\n    + LOCKFILE=/opt/dehydrated/lock\r\n    + [[ -z '' ]]\r\n    ++ cut '-d\"' -f2\r\n    ++ openssl version -d\r\n    + OPENSSL_CNF=/etc/ssl/openssl.cnf\r\n    + [[ -n '' ]]\r\n    + [[ -n '' ]]\r\n    + [[ -n '' ]]\r\n    + [[ -n /etc/ssl/reksys ]]\r\n    + CERTDIR=/etc/ssl/reksys\r\n    + [[ -n '' ]]\r\n    + [[ -n secp384r1 ]]\r\n    + KEY_ALGO=secp384r1\r\n    + [[ -n '' ]]\r\n    + [[ -n '' ]]\r\n    + '[' '!' '' = noverify ']'\r\n    + verify_config\r\n    + [[ http-01 == \\h\\t\\t\\p\\-\\0\\1 ]]\r\n    + [[ http-01 = \\d\\n\\s\\-\\0\\1 ]]\r\n    + [[ http-01 = \\h\\t\\t\\p\\-\\0\\1 ]]\r\n    + [[ ! -d /srv/http/dehydrated ]]\r\n    + [[ secp384r1 == \\r\\s\\a ]]\r\n    + [[ secp384r1 == \\p\\r\\i\\m\\e\\2\\5\\6\\v\\1 ]]\r\n    + [[ secp384r1 == \\s\\e\\c\\p\\3\\8\\4\\r\\1 ]]\r\n    + [[ -n '' ]]\r\n    + [[ auto == \\a\\u\\t\\o ]]\r\n    + store_configvars\r\n    + __KEY_ALGO=secp384r1\r\n    + __OCSP_MUST_STAPLE=no\r\n    + __PRIVATE_KEY_RENEW=yes\r\n    + __KEYSIZE=4096\r\n    + __CHALLENGETYPE=http-01\r\n    + __HOOK=\r\n    + __WELLKNOWN=/srv/http/dehydrated\r\n    + __HOOK_CHAIN=no\r\n    + __OPENSSL_CNF=/etc/ssl/openssl.cnf\r\n    + __RENEW_DAYS=30\r\n    + __IP_VERSION=\r\n    + [[ -n /opt/dehydrated/lock ]]\r\n    ++ dirname /opt/dehydrated/lock\r\n    + LOCKDIR=/opt/dehydrated\r\n    + [[ -w /opt/dehydrated ]]\r\n    + trap remove_lock EXIT\r\n    ++ http_request get https://acme-v02.api.letsencrypt.org/directory\r\n    +++ _mktemp\r\n    +++ mktemp /tmp/dehydrated-XXXXXX\r\n    ++ tempcont=/tmp/dehydrated-KiC0gb\r\n    +++ _mktemp\r\n    +++ mktemp /tmp/dehydrated-XXXXXX\r\n    ++ tempheaders=/tmp/dehydrated-exvjsg\r\n    ++ [[ -n '' ]]\r\n    ++ set +e\r\n    ++ [[ get = \\h\\e\\a\\d ]]\r\n    ++ [[ get = \\g\\e\\t ]]\r\n    +++ curl -A 'dehydr4ted/git-master-after-0.6.1 curl/7.58.0' -L -s -w '%{http_code}' -o /tmp/dehydrated-KiC0gb -D /tmp/dehydrated-exvjsg https://acme-v02.api.letsencrypt.org/directory\r\n    ++ statuscode=200\r\n    ++ curlret=0\r\n    ++ set -e\r\n    ++ [[ ! 0 = \\0 ]]\r\n    ++ [[ ! 2 = \\2 ]]\r\n    ++ echo 'checking pipe 4'\r\n    checking pipe 4\r\n    ++ echo 'using pipe 4'\r\n    using pipe 4\r\n    ++ cat /tmp/dehydrated-exvjsg\r\n    ++ echo 'getting curl output'\r\n    getting curl output\r\n    ++ cat /tmp/dehydrated-KiC0gb\r\n    ++ echo 'deleting temp files'\r\n    deleting temp files\r\n    ++ rm -f /tmp/dehydrated-KiC0gb\r\n    ++ rm -f /tmp/dehydrated-exvjsg\r\n    + CA_DIRECTORY='{\r\n      \"CxMsOnJE6t0\": \"https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417\",\r\n      \"keyChange\": \"https://acme-v02.api.letsencrypt.org/acme/key-change\",\r\n      \"meta\": {\r\n        \"termsOfService\": \"https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf\"\r\n      },\r\n      \"newAccount\": \"https://acme-v02.api.letsencrypt.org/acme/new-acct\",\r\n      \"newNonce\": \"https://acme-v02.api.letsencrypt.org/acme/new-nonce\",\r\n      \"newOrder\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\",\r\n      \"revokeCert\": \"https://acme-v02.api.letsencrypt.org/acme/revoke-cert\"\r\n    }'\r\n    + [[ auto = \\a\\u\\t\\o ]]\r\n    + grep -q newOrder\r\n    + API=2\r\n    + [[ 2 -eq 1 ]]\r\n    ++ printf %s '{\r\n      \"CxMsOnJE6t0\": \"https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417\",\r\n      \"keyChange\": \"https://acme-v02.api.letsencrypt.org/acme/key-change\",\r\n      \"meta\": {\r\n        \"termsOfService\": \"https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf\"\r\n      },\r\n      \"newAccount\": \"https://acme-v02.api.letsencrypt.org/acme/new-acct\",\r\n      \"newNonce\": \"https://acme-v02.api.letsencrypt.org/acme/new-nonce\",\r\n      \"newOrder\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\",\r\n      \"revokeCert\": \"https://acme-v02.api.letsencrypt.org/acme/revoke-cert\"\r\n    ++ get_json_string_value newOrder\r\n    }'\r\n    ++ local filter\r\n    +++ printf 's/.*\"%s\": *\"\\([^\"]*\\)\".*/\\\\1/p' newOrder\r\n    ++ filter='s/.*\"newOrder\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    ++ sed -n 's/.*\"newOrder\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    + CA_NEW_ORDER=https://acme-v02.api.letsencrypt.org/acme/new-order\r\n    ++ printf %s '{\r\n      \"CxMsOnJE6t0\": \"https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417\",\r\n      \"keyChange\": \"https://acme-v02.api.letsencrypt.org/acme/key-change\",\r\n      \"meta\": {\r\n        \"termsOfService\": \"https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf\"\r\n      },\r\n      \"newAccount\": \"https://acme-v02.api.letsencrypt.org/acme/new-acct\",\r\n      \"newNonce\": \"https://acme-v02.api.letsencrypt.org/acme/new-nonce\",\r\n      \"newOrder\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\",\r\n      \"revokeCert\": \"https://acme-v02.api.letsencrypt.org/acme/revoke-cert\"\r\n    }'\r\n    ++ get_json_string_value newNonce\r\n    ++ local filter\r\n    +++ printf 's/.*\"%s\": *\"\\([^\"]*\\)\".*/\\\\1/p' newNonce\r\n    ++ filter='s/.*\"newNonce\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    ++ sed -n 's/.*\"newNonce\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    + CA_NEW_NONCE=https://acme-v02.api.letsencrypt.org/acme/new-nonce\r\n    ++ printf %s '{\r\n      \"CxMsOnJE6t0\": \"https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417\",\r\n      \"keyChange\": \"https://acme-v02.api.letsencrypt.org/acme/key-change\",\r\n      \"meta\": {\r\n        \"termsOfService\": \"https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf\"\r\n      },\r\n      \"newAccount\": \"https://acme-v02.api.letsencrypt.org/acme/new-acct\",\r\n      \"newNonce\": \"https://acme-v02.api.letsencrypt.org/acme/new-nonce\",\r\n      \"newOrder\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\",\r\n      \"revokeCert\": \"https://acme-v02.api.letsencrypt.org/acme/revoke-cert\"\r\n    }'\r\n    ++ get_json_string_value newAccount\r\n    ++ local filter\r\n    +++ printf 's/.*\"%s\": *\"\\([^\"]*\\)\".*/\\\\1/p' newAccount\r\n    ++ filter='s/.*\"newAccount\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    ++ sed -n 's/.*\"newAccount\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    + CA_NEW_ACCOUNT=https://acme-v02.api.letsencrypt.org/acme/new-acct\r\n    ++ printf %s '{\r\n      \"CxMsOnJE6t0\": \"https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417\",\r\n      \"keyChange\": \"https://acme-v02.api.letsencrypt.org/acme/key-change\",\r\n      \"meta\": {\r\n        \"termsOfService\": \"https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf\"\r\n      },\r\n      \"newAccount\": \"https://acme-v02.api.letsencrypt.org/acme/new-acct\",\r\n      \"newNonce\": \"https://acme-v02.api.letsencrypt.org/acme/new-nonce\",\r\n      \"newOrder\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\",\r\n      \"revokeCert\": \"https://acme-v02.api.letsencrypt.org/acme/revoke-cert\"\r\n    }'\r\n    ++ get_json_string_value termsOfService\r\n    ++ local filter\r\n    +++ printf 's/.*\"%s\": *\"\\([^\"]*\\)\".*/\\\\1/p' termsOfService\r\n    ++ filter='s/.*\"termsOfService\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    ++ sed -n 's/.*\"termsOfService\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    + CA_TERMS=https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf\r\n    ++ printf %s '{\r\n      \"CxMsOnJE6t0\": \"https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417\",\r\n      \"keyChange\": \"https://acme-v02.api.letsencrypt.org/acme/key-change\",\r\n      \"meta\": {\r\n        \"termsOfService\": \"https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf\"\r\n      },\r\n      \"newAccount\": \"https://acme-v02.api.letsencrypt.org/acme/new-acct\",\r\n      \"newNonce\": \"https://acme-v02.api.letsencrypt.org/acme/new-nonce\",\r\n      \"newOrder\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\",\r\n      \"revokeCert\": \"https://acme-v02.api.letsencrypt.org/acme/revoke-cert\"\r\n    }'\r\n    ++ get_json_string_value revokeCert\r\n    ++ local filter\r\n    +++ printf 's/.*\"%s\": *\"\\([^\"]*\\)\".*/\\\\1/p' revokeCert\r\n    ++ filter='s/.*\"revokeCert\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    ++ sed -n 's/.*\"revokeCert\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    + CA_REVOKE_CERT=https://acme-v02.api.letsencrypt.org/acme/revoke-cert\r\n    + CA_ACCOUNT=https://acme-v02.api.letsencrypt.org/acme/acct\r\n    + export WELLKNOWN BASEDIR CERTDIR CONFIG COMMAND\r\n    + register_new_key=no\r\n    + [[ -n '' ]]\r\n    + [[ ! -e /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/account_key.pem ]]\r\n    + openssl rsa -in /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/account_key.pem -check\r\n    ++ hex2bin\r\n    ++ urlbase64\r\n    +++ openssl rsa -in /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/account_key.pem -noout -text\r\n    ++ openssl base64 -e\r\n    +++ cat\r\n    ++ _sed -e 's:=*$::g' -e y:+/:-_:\r\n    +++ awk '/publicExponent/ {print $2}'\r\n    +++ _sed -e 's/[[:space:]]//g' -e 's/^(.(.{2})*)$/0\\1/' -e 's/(.{2})/\\\\x\\1/g'\r\n    ++ tr -d '\\n\\r'\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    +++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r -e 's:=*$::g' -e y:+/:-_:\r\n    +++ sed -r -e 's/[[:space:]]//g' -e 's/^(.(.{2})*)$/0\\1/' -e 's/(.{2})/\\\\x\\1/g'\r\n    ++ printf %x 65537\r\n    ++ printf -- '\\x01\\x00\\x01'\r\n    + pubExponent64=AQAB\r\n    ++ openssl rsa -in /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/account_key.pem -noout -modulus\r\n    ++ cut -d= -f2\r\n    ++ urlbase64\r\n    ++ hex2bin\r\n    ++ openssl base64 -e\r\n    ++ tr -d '\\n\\r'\r\n    ++ _sed -e 's:=*$::g' -e y:+/:-_:\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r -e 's:=*$::g' -e y:+/:-_:\r\n    +++ cat\r\n    +++ _sed -e 's/[[:space:]]//g' -e 's/^(.(.{2})*)$/0\\1/' -e 's/(.{2})/\\\\x\\1/g'\r\n    +++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    +++ sed -r -e 's/[[:space:]]//g' -e 's/^(.(.{2})*)$/0\\1/' -e 's/(.{2})/\\\\x\\1/g'\r\n    ++ printf -- '\\xD2\\x5B\\x95\\x21\\x48\\xED\\xB1\\x22\\x5D\\x42\\x08\\x28\\xA4\\x60\\x7C\\xAC\\x8F\\x5E\\xC0\\xE5\\x44\\x97\\xFF\\x3F\\x5E\\xD3\\xB4\\x0C\\x11\\x11\\x9F\\x71\\x67\\x96\\xC7\\xEA\\x83\\xC8\\xE0\\xFB\\xD5\\x73\\xE4\\x23\\xAB\\xB9\\xAC\\x7F\\x01\\x14\\xC2\\xCA\\xEC\\xA0\\x03\\x60\\x10\\x92\\xC4\\x9B\\xC8\\xF2\\xF9\\x01\\xCC\\x00\\xDC\\xF5\\x8E\\xC6\\xD8\\x0E\\xFA\\xBE\\x5F\\xF6\\x1E\\x49\\xD6\\x69\\xA8\\x85\\x7B\\x97\\x6B\\xC2\\x38\\x50\\xF6\\x05\\x26\\x00\\x8D\\xAC\\x58\\x18\\xC9\\xCA\\x8A\\x3E\\x98\\xF6\\xFD\\x65\\x4C\\x8C\\x6D\\x09\\x03\\x16\\x3D\\xFF\\xE7\\x2F\\xB1\\xBB\\xEB\\xD2\\xF3\\x0E\\xE4\\x10\\xFF\\x57\\x39\\x3B\\xC5\\x47\\xD8\\xE9\\x25\\x8B\\x92\\x62\\x3E\\x86\\x87\\xF7\\xAD\\x06\\x15\\xA8\\x8F\\x2D\\xD0\\xE6\\xF7\\x2D\\x55\\x26\\x57\\x14\\xAF\\x17\\xDA\\x86\\xC1\\x97\\x65\\x81\\x6C\\x71\\xE7\\x6E\\x96\\x7C\\x79\\x4C\\xDF\\xE1\\x65\\xD8\\x80\\xE8\\x39\\x00\\xB6\\x63\\x0D\\x49\\x84\\x61\\x1A\\xB3\\x4E\\x63\\xDE\\x29\\x2F\\xDC\\x47\\xE0\\x15\\xDB\\x8F\\x2D\\xDE\\x9B\\x85\\x7B\\x95\\x2E\\xEC\\xBC\\xEA\\xF5\\xC8\\x28\\x2A\\xF4\\x7D\\xE4\\x5A\\x29\\x9B\\xB9\\xEF\\x36\\x79\\x3F\\xCC\\x10\\x32\\xC2\\xC2\\x47\\x70\\x41\\x4A\\xE0\\x21\\xAB\\xCF\\x44\\x45\\x04\\x84\\x14\\x4C\\x6A\\xAC\\xE5\\x96\\xF7\\xB6\\xD4\\x61\\x57\\xEF\\x77\\x2A\\x6E\\x9B\\x73\\xC3\\x2F\\x24\\x54\\xB2\\xE2\\x00\\xD0\\x2F\\xCD\\x2C\\x58\\xAD\\x43\\xE9\\xB7\\x77\\x6C\\x31\\x9F\\x26\\x29\\x8B\\x5F\\xE1\\x26\\xBE\\xE7\\x9C\\x07\\xCA\\x5F\\x97\\xC5\\xBF\\x46\\x07\\x24\\xF5\\xF9\\xED\\x2F\\x35\\x32\\xF1\\x95\\xC2\\xCE\\x3B\\x3C\\xED\\x36\\xE8\\xB0\\x18\\x7A\\x44\\x7F\\xD6\\x98\\xA3\\xD8\\x60\\x73\\x64\\xBC\\xA3\\x0E\\x05\\xED\\x2E\\xB4\\x56\\x46\\xFC\\x2F\\x55\\xFF\\x93\\x53\\xC6\\x09\\x58\\x87\\xAD\\x84\\x2B\\x75\\x3B\\x83\\x8A\\x62\\x5F\\xDD\\x82\\x98\\x13\\x59\\xC1\\xD7\\x5B\\x5F\\x3C\\xAA\\x97\\xAC\\xAB\\xED\\x1A\\xF3\\x42\\x24\\x06\\x86\\xEE\\x67\\x61\\x13\\xBD\\x5E\\x6F\\x87\\x5B\\xEC\\x99\\xC1\\xC8\\x29\\x52\\xAB\\x92\\x10\\x1F\\xE1\\x1C\\x70\\xFC\\xFB\\xE8\\x05\\x1F\\x1D\\x95\\x8D\\xA4\\xDF\\x1F\\x8D\\xD8\\x02\\x57\\xE6\\xD2\\xF8\\x30\\xF8\\x1C\\x8A\\xD7\\xAF\\x20\\x52\\xFF\\x27\\xA8\\x82\\x10\\x61\\x07\\xBE\\xA2\\xC6\\x37\\x2E\\xA4\\x6E\\xFC\\xF3\\x60\\x8D\\x94\\xA0\\xBF\\x97\\x42\\x47\\x6E\\xE4\\xF2\\xFB\\xE2\\x48\\xF1\\x65\\xB7\\x24\\x8C\\x27\\x90\\x7E\\xB7\\xC1\\xB2\\xE8\\xC3\\xD1\\x45\\x17\\x09\\xA4\\x61\\x9B\\x48\\x71\\x66\\xF5\\xF1\\x5B\\xE2\\x20\\xF4\\x7D\\xAB\\x1A\\x37\\x47\\x98\\xB8\\x4A\\x25\\x08\\x6F\\xC3\\xC5\\x77\\x97\\xCD\\x64\\xE3\\x15\\x98\\xE1\\x3B\\x3C\\xC4\\x4B\\xA2\\xF0\\x48\\xC5\\x74\\x6E\\xC7\\xF0\\x88\\x48\\x2A\\xC3'\r\n    + pubMod64=0luVIUjtsSJdQggopGB8rI9ewOVEl_8_XtO0DBERn3Fnlsfqg8jg-9Vz5COruax_ARTCyuygA2AQksSbyPL5AcwA3PWOxtgO-r5f9h5J1mmohXuXa8I4UPYFJgCNrFgYycqKPpj2_WVMjG0JAxY9_-cvsbvr0vMO5BD_Vzk7xUfY6SWLkmI-hof3rQYVqI8t0Ob3LVUmVxSvF9qGwZdlgWxx526WfHlM3-Fl2IDoOQC2Yw1JhGEas05j3ikv3EfgFduPLd6bhXuVLuy86vXIKCr0feRaKZu57zZ5P8wQMsLCR3BBSuAhq89ERQSEFExqrOWW97bUYVfvdypum3PDLyRUsuIA0C_NLFitQ-m3d2wxnyYpi1_hJr7nnAfKX5fFv0YHJPX57S81MvGVws47PO026LAYekR_1pij2GBzZLyjDgXtLrRWRvwvVf-TU8YJWIethCt1O4OKYl_dgpgTWcHXW188qpesq-0a80IkBobuZ2ETvV5vh1vsmcHIKVKrkhAf4Rxw_PvoBR8dlY2k3x-N2AJX5tL4MPgcitevIFL_J6iCEGEHvqLGNy6kbvzzYI2UoL-XQkdu5PL74kjxZbckjCeQfrfBsujD0UUXCaRhm0hxZvXxW-Ig9H2rGjdHmLhKJQhvw8V3l81k4xWY4Ts8xEui8EjFdG7H8IhIKsM\r\n    ++ printf '{\"e\":\"%s\",\"kty\":\"RSA\",\"n\":\"%s\"}' AQAB 0luVIUjtsSJdQggopGB8rI9ewOVEl_8_XtO0DBERn3Fnlsfqg8jg-9Vz5COruax_ARTCyuygA2AQksSbyPL5AcwA3PWOxtgO-r5f9h5J1mmohXuXa8I4UPYFJgCNrFgYycqKPpj2_WVMjG0JAxY9_-cvsbvr0vMO5BD_Vzk7xUfY6SWLkmI-hof3rQYVqI8t0Ob3LVUmVxSvF9qGwZdlgWxx526WfHlM3-Fl2IDoOQC2Yw1JhGEas05j3ikv3EfgFduPLd6bhXuVLuy86vXIKCr0feRaKZu57zZ5P8wQMsLCR3BBSuAhq89ERQSEFExqrOWW97bUYVfvdypum3PDLyRUsuIA0C_NLFitQ-m3d2wxnyYpi1_hJr7nnAfKX5fFv0YHJPX57S81MvGVws47PO026LAYekR_1pij2GBzZLyjDgXtLrRWRvwvVf-TU8YJWIethCt1O4OKYl_dgpgTWcHXW188qpesq-0a80IkBobuZ2ETvV5vh1vsmcHIKVKrkhAf4Rxw_PvoBR8dlY2k3x-N2AJX5tL4MPgcitevIFL_J6iCEGEHvqLGNy6kbvzzYI2UoL-XQkdu5PL74kjxZbckjCeQfrfBsujD0UUXCaRhm0hxZvXxW-Ig9H2rGjdHmLhKJQhvw8V3l81k4xWY4Ts8xEui8EjFdG7H8IhIKsM\r\n    ++ urlbase64\r\n    ++ openssl dgst -sha256 -binary\r\n    ++ openssl base64 -e\r\n    ++ _sed -e 's:=*$::g' -e y:+/:-_:\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r -e 's:=*$::g' -e y:+/:-_:\r\n    ++ tr -d '\\n\\r'\r\n    + thumbprint=VXESrd5m4rm2wgbUmDI4cr1fyUE7-DTX5gi2StpxhgI\r\n    + [[ no = \\y\\e\\s ]]\r\n    + [[ sign_domains = \\r\\e\\g\\i\\s\\t\\e\\r ]]\r\n    + [[ -e /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/registration_info.json ]]\r\n    ++ cat /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/registration_info.json\r\n    ++ get_json_int_value id\r\n    ++ local filter\r\n    +++ printf 's/.*\"%s\": *\\([0-9]*\\).*/\\\\1/p' id\r\n    ++ filter='s/.*\"id\": *\\([0-9]*\\).*/\\1/p'\r\n    ++ sed -n 's/.*\"id\": *\\([0-9]*\\).*/\\1/p'\r\n    + ACCOUNT_ID=4935574\r\n    + [[ 2 -eq 1 ]]\r\n    + ACCOUNT_URL=https://acme-v02.api.letsencrypt.org/acme/acct/4935574\r\n    + hookscript_bricker_hook\r\n    + [[ -n '' ]]\r\n    + [[ -n '' ]]\r\n    + '[' '!' -d /opt/dehydrated/chains ']'\r\n    + [[ -n domain.de www.domain.de ]]\r\n    ++ _mktemp\r\n    ++ mktemp /tmp/dehydrated-XXXXXX\r\n    + DOMAINS_TXT=/tmp/dehydrated-1e049T\r\n    + [[ -n '' ]]\r\n    + printf -- 'domain.de www.domain.de'\r\n    + ORIGIFS=' \t\r\n    '\r\n    + IFS='\r\n    '\r\n    ++ tr -d '\\r'\r\n    ++ _sed -e 's/^[[:space:]]*//g' -e 's/[[:space:]]*$//g' -e 's/[[:space:]]+/ /g' -e 's/([^ ])>/\\1 >/g' -e 's/> />/g'\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r -e 's/^[[:space:]]*//g' -e 's/[[:space:]]*$//g' -e 's/[[:space:]]+/ /g' -e 's/([^ ])>/\\1 >/g' -e 's/> />/g'\r\n    ++ grep -vE '^(#|$)'\r\n    ++ awk '{print tolower($0)}'\r\n    + for line in $(<\"${DOMAINS_TXT}\" tr -d '\\r' | awk '{print tolower($0)}' | _sed -e 's/^[[:space:]]*//g' -e 's/[[:space:]]*$//g' -e 's/[[:space:]]+/ /g' -e 's/([^ ])>/\\1 >/g' -e 's/> />/g' | (grep -vE '^(#|$)' || true))\r\n    + reset_configvars\r\n    + KEY_ALGO=secp384r1\r\n    + OCSP_MUST_STAPLE=no\r\n    + PRIVATE_KEY_RENEW=yes\r\n    + KEYSIZE=4096\r\n    + CHALLENGETYPE=http-01\r\n    + HOOK=\r\n    + WELLKNOWN=/srv/http/dehydrated\r\n    + HOOK_CHAIN=no\r\n    + OPENSSL_CNF=/etc/ssl/openssl.cnf\r\n    + RENEW_DAYS=30\r\n    + IP_VERSION=\r\n    + IFS=' \t\r\n    '\r\n    ++ grep -Eo '>[^ ]+'\r\n    ++ true\r\n    + alias=\r\n    ++ _sed -e 's/>[^ ]+[ ]*//g'\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r -e 's/>[^ ]+[ ]*//g'\r\n    + line='domain.de www.domain.de'\r\n    ++ grep -Eo '>'\r\n    ++ awk 'END {print NR}'\r\n    ++ true\r\n    + aliascount=0\r\n    + '[' 0 -gt 1 ']'\r\n    ++ printf '%s\\n' 'domain.de www.domain.de'\r\n    ++ cut '-d ' -f1\r\n    + domain=domain.de\r\n    ++ printf '%s\\n' 'domain.de www.domain.de'\r\n    ++ cut -s '-d ' -f2-\r\n    + morenames=www.domain.de\r\n    + '[' 0 -lt 1 ']'\r\n    + alias=domain.de\r\n    + export alias\r\n    + [[ -z www.domain.de ]]\r\n    + echo 'Processing domain.de with alternative names: www.domain.de'\r\n    Processing domain.de with alternative names: www.domain.de\r\n    + '[' tb = '*.' ']'\r\n    + local certdir=/etc/ssl/reksys/domain.de\r\n    + cert=/etc/ssl/reksys/domain.de/cert.pem\r\n    + chain=/etc/ssl/reksys/domain.de/chain.pem\r\n    + force_renew=no\r\n    ++ date +%s\r\n    + timestamp=1521110104\r\n    + [[ ! -e /etc/ssl/reksys/domain.de ]]\r\n    + [[ -n '' ]]\r\n    + certconfig=/etc/ssl/reksys/domain.de/config\r\n    + '[' -f /etc/ssl/reksys/domain.de/config ']'\r\n    + verify_config\r\n    + [[ http-01 == \\h\\t\\t\\p\\-\\0\\1 ]]\r\n    + [[ http-01 = \\d\\n\\s\\-\\0\\1 ]]\r\n    + [[ http-01 = \\h\\t\\t\\p\\-\\0\\1 ]]\r\n    + [[ ! -d /srv/http/dehydrated ]]\r\n    + [[ secp384r1 == \\r\\s\\a ]]\r\n    + [[ secp384r1 == \\p\\r\\i\\m\\e\\2\\5\\6\\v\\1 ]]\r\n    + [[ secp384r1 == \\s\\e\\c\\p\\3\\8\\4\\r\\1 ]]\r\n    + [[ -n '' ]]\r\n    + [[ 2 == \\a\\u\\t\\o ]]\r\n    + [[ 2 == \\1 ]]\r\n    + [[ 2 == \\2 ]]\r\n    + hookscript_bricker_hook\r\n    + [[ -n '' ]]\r\n    + export WELLKNOWN CHALLENGETYPE KEY_ALGO PRIVATE_KEY_ROLLOVER\r\n    + skip=no\r\n    + local csr=\r\n    + [[ -n '' ]]\r\n    + [[ -e /etc/ssl/reksys/domain.de/cert.pem ]]\r\n    + printf ' + Checking domain name(s) of existing cert...'\r\n     + Checking domain name(s) of existing cert...++ openssl x509 -in /etc/ssl/reksys/domain.de/cert.pem -text -noout\r\n    ++ grep DNS:\r\n    ++ _sed s/DNS://g\r\n    ++ tr -d ' '\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r s/DNS://g\r\n    ++ tr , '\\n'\r\n    ++ tr '\\n' ' '\r\n    ++ sort -u\r\n    ++ _sed 's/ $//'\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r 's/ $//'\r\n    + certnames='domain.de www.domain.de'\r\n    ++ echo domain.de www.domain.de\r\n    ++ tr ' ' '\\n'\r\n    ++ sort -u\r\n    ++ tr '\\n' ' '\r\n    ++ _sed 's/ $//'\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r 's/ $//'\r\n    ++ _sed 's/^ //'\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r 's/^ //'\r\n    + givennames='domain.de www.domain.de'\r\n    + [[ domain.de www.domain.de = \\t\\b\\-\\i\\t\\f\\.\\d\\e\\ \\w\\w\\w\\.\\t\\b\\-\\i\\t\\f\\.\\d\\e ]]\r\n    + echo ' unchanged.'\r\n     unchanged.\r\n    + [[ -e /etc/ssl/reksys/domain.de/cert.pem ]]\r\n    + echo ' + Checking expire date of existing cert...'\r\n     + Checking expire date of existing cert...\r\n    ++ openssl x509 -enddate -noout -in /etc/ssl/reksys/domain.de/cert.pem\r\n    ++ cut -d= -f2-\r\n    + valid='Apr  3 22:05:12 2018 GMT'\r\n    + printf ' + Valid till %s ' 'Apr  3 22:05:12 2018 GMT'\r\n     + Valid till Apr  3 22:05:12 2018 GMT + openssl x509 -checkend 2592000 -noout -in /etc/ssl/reksys/domain.de/cert.pem\r\n    Certificate will expire\r\n    + echo '(Less than 30 days). Renewing!'\r\n    (Less than 30 days). Renewing!\r\n    + local update_ocsp\r\n    + update_ocsp=no\r\n    + [[ ! no = \\y\\e\\s ]]\r\n    + update_ocsp=yes\r\n    + [[ -z '' ]]\r\n    + [[ '' = \\y\\e\\s ]]\r\n    + sign_domain /etc/ssl/reksys/domain.de 1521110104 domain.de www.domain.de\r\n    + local certdir=/etc/ssl/reksys/domain.de\r\n    + shift\r\n    + timestamp=1521110104\r\n    + shift\r\n    + domain=domain.de\r\n    + altnames='domain.de www.domain.de'\r\n    + export altnames\r\n    + echo ' + Signing domains...'\r\n     + Signing domains...\r\n    + [[ 2 -eq 1 ]]\r\n    + [[ 2 -eq 2 ]]\r\n    + [[ -z https://acme-v02.api.letsencrypt.org/acme/new-order ]]\r\n    + local privkey=privkey.pem\r\n    + [[ ! -e /etc/ssl/reksys/domain.de/cert-1521110104.csr ]]\r\n    + [[ ! -r /etc/ssl/reksys/domain.de/privkey.pem ]]\r\n    + [[ yes = \\y\\e\\s ]]\r\n    + echo ' + Generating private key...'\r\n     + Generating private key...\r\n    + privkey=privkey-1521110104.pem\r\n    + case \"${KEY_ALGO}\" in\r\n    + _openssl ecparam -genkey -name secp384r1 -out /etc/ssl/reksys/domain.de/privkey-1521110104.pem\r\n    + set +e\r\n    ++ openssl ecparam -genkey -name secp384r1 -out /etc/ssl/reksys/domain.de/privkey-1521110104.pem\r\n    + out=\r\n    + res=0\r\n    + set -e\r\n    + [[ 0 -ne 0 ]]\r\n    + [[ -r /etc/ssl/reksys/domain.de/privkey.pem ]]\r\n    + [[ -r /etc/ssl/reksys/domain.de/privkey.roll.pem ]]\r\n    + [[ ! -r /etc/ssl/reksys/domain.de/privkey.roll.pem ]]\r\n    + [[ no = \\y\\e\\s ]]\r\n    + [[ -r /etc/ssl/reksys/domain.de/privkey.roll.pem ]]\r\n    + echo ' + Generating signing request...'\r\n     + Generating signing request...\r\n    + SAN=\r\n    + for altname in ${altnames}\r\n    + SAN='DNS:domain.de, '\r\n    + for altname in ${altnames}\r\n    + SAN='DNS:domain.de, DNS:www.domain.de, '\r\n    + SAN='DNS:domain.de, DNS:www.domain.de'\r\n    + local tmp_openssl_cnf\r\n    ++ _mktemp\r\n    ++ mktemp /tmp/dehydrated-XXXXXX\r\n    + tmp_openssl_cnf=/tmp/dehydrated-cLPxsl\r\n    + cat /etc/ssl/openssl.cnf\r\n    + printf '[SAN]\\nsubjectAltName=%s' 'DNS:domain.de, DNS:www.domain.de'\r\n    + '[' no = yes ']'\r\n    + SUBJ=/CN=domain.de/\r\n    + [[ Linux = \\M\\I\\N\\G\\W ]]\r\n    + openssl req -new -sha256 -key /etc/ssl/reksys/domain.de/privkey-1521110104.pem -out /etc/ssl/reksys/domain.de/cert-1521110104.csr -subj /CN=domain.de/ -reqexts SAN -config /tmp/dehydrated-cLPxsl\r\n    + rm -f /tmp/dehydrated-cLPxsl\r\n    + crt_path=/etc/ssl/reksys/domain.de/cert-1521110104.pem\r\n    + sign_csr '-----BEGIN CERTIFICATE REQUEST-----\r\n    MIIBQjCByQIBADAUMRIwEAYDVQQDDAl0Yi1pdGYuZGUwdjAQBgcqhkjOPQIBBgUr\r\n    gQQAIgNiAAQS1Nm9UE4byVuXzn6tec6aoarTyHe9lQmWH2A9uGW7z8oN25D7G2A4\r\n    ...\r\n    0Lf3LaJc1FG6WcUEHhlhpOU1A+F+wzfiefkO0SLVvj1aEkeVAjBAdHpFotmL8u0Q\r\n    QKyysfUpz8bxGgA2tY98GSrL7vSyrqX4pGKv6sdqNl+RuyAIc/M=\r\n    -----END CERTIFICATE REQUEST-----' domain.de www.domain.de\r\n    + csr='-----BEGIN CERTIFICATE REQUEST-----\r\n    MIIBQjCByQIBADAUMRIwEAYDVQQDDAl0Yi1pdGYuZGUwdjAQBgcqhkjOPQIBBgUr\r\n    gQQAIgNiAAQS1Nm9UE4byVuXzn6tec6aoarTyHe9lQmWH2A9uGW7z8oN25D7G2A4\r\n    ...\r\n    0Lf3LaJc1FG6WcUEHhlhpOU1A+F+wzfiefkO0SLVvj1aEkeVAjBAdHpFotmL8u0Q\r\n    QKyysfUpz8bxGgA2tY98GSrL7vSyrqX4pGKv6sdqNl+RuyAIc/M=\r\n    -----END CERTIFICATE REQUEST-----'\r\n    + :\r\n    + shift 1\r\n    + export 'altnames=domain.de www.domain.de'\r\n    + altnames='domain.de www.domain.de'\r\n    + [[ 2 -eq 1 ]]\r\n    + [[ 2 -eq 2 ]]\r\n    + [[ -z https://acme-v02.api.letsencrypt.org/acme/new-order ]]\r\n    + [[ -n '' ]]\r\n    + local -a challenge_identifiers challenge_uris challenge_tokens authorizations keyauths deploy_args\r\n    + [[ 2 -eq 2 ]]\r\n    + for altname in ${altnames}\r\n    ++ printf '{\"type\": \"dns\", \"value\": \"%s\"}, ' domain.de\r\n    + challenge_identifiers+='{\"type\": \"dns\", \"value\": \"domain.de\"}, '\r\n    + for altname in ${altnames}\r\n    ++ printf '{\"type\": \"dns\", \"value\": \"%s\"}, ' www.domain.de\r\n    + challenge_identifiers+='{\"type\": \"dns\", \"value\": \"www.domain.de\"}, '\r\n    + challenge_identifiers='[{\"type\": \"dns\", \"value\": \"domain.de\"}, {\"type\": \"dns\", \"value\": \"www.domain.de\"}]'\r\n    + echo ' + Requesting new certificate order from CA...'\r\n     + Requesting new certificate order from CA...\r\n    ++ signed_request https://acme-v02.api.letsencrypt.org/acme/new-order '{\"identifiers\": [{\"type\": \"dns\", \"value\": \"domain.de\"}, {\"type\": \"dns\", \"value\": \"www.domain.de\"}]}'\r\n    +++ printf %s '{\"identifiers\": [{\"type\": \"dns\", \"value\": \"domain.de\"}, {\"type\": \"dns\", \"value\": \"www.domain.de\"}]}'\r\n    +++ urlbase64\r\n    +++ openssl base64 -e\r\n    +++ _sed -e 's:=*$::g' -e y:+/:-_:\r\n    +++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    +++ sed -r -e 's:=*$::g' -e y:+/:-_:\r\n    +++ tr -d '\\n\\r'\r\n    ++ payload64=eyJpZGVudGlmaWVycyI6IFt7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInRiLWl0Zi5kZSJ9LCB7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInd3dy50Yi1pdGYuZGUifV19\r\n    ++ [[ 2 -eq 1 ]]\r\n    +++ http_request head https://acme-v02.api.letsencrypt.org/acme/new-nonce\r\n    +++ awk -F ': ' '{print $2}'\r\n    +++ tr -d '\\n\\r'\r\n    +++ grep Replay-Nonce:\r\n    ++++ _mktemp\r\n    ++++ mktemp /tmp/dehydrated-XXXXXX\r\n    +++ tempcont=/tmp/dehydrated-G0Ruem\r\n    ++++ _mktemp\r\n    ++++ mktemp /tmp/dehydrated-XXXXXX\r\n    +++ tempheaders=/tmp/dehydrated-MG8i31\r\n    +++ [[ -n '' ]]\r\n    +++ set +e\r\n    +++ [[ head = \\h\\e\\a\\d ]]\r\n    ++++ curl -A 'dehydr4ted/git-master-after-0.6.1 curl/7.58.0' -s -w '%{http_code}' -o /tmp/dehydrated-G0Ruem https://acme-v02.api.letsencrypt.org/acme/new-nonce -I\r\n    +++ statuscode=204\r\n    +++ touch /tmp/dehydrated-MG8i31\r\n    +++ curlret=0\r\n    +++ set -e\r\n    +++ [[ ! 0 = \\0 ]]\r\n    +++ [[ ! 2 = \\2 ]]\r\n    +++ echo 'checking pipe 4'\r\n    checking pipe 4\r\n    +++ echo 'using pipe 4'\r\n    using pipe 4\r\n    +++ cat /tmp/dehydrated-MG8i31\r\n    +++ echo 'getting curl output'\r\n    getting curl output\r\n    +++ cat /tmp/dehydrated-G0Ruem\r\n    +++ echo 'deleting temp files'\r\n    deleting temp files\r\n    +++ rm -f /tmp/dehydrated-G0Ruem\r\n    +++ rm -f /tmp/dehydrated-MG8i31\r\n    ++ nonce=7THrq5H6UPDCLVzRxJqfgMQ-Nvb7mMSMj6ctDrSFl08\r\n    ++ header='{\"alg\": \"RS256\", \"jwk\": {\"e\": \"AQAB\", \"kty\": \"RSA\", \"n\": \"0luVIUjtsSJdQggopGB8rI9ewOVEl_8_XtO0DBERn3Fnlsfqg8jg-9Vz5COruax_ARTCyuygA2AQksSbyPL5AcwA3PWOxtgO-r5f9h5J1mmohXuXa8I4UPYFJgCNrFgYycqKPpj2_WVMjG0JAxY9_-cvsbvr0vMO5BD_Vzk7xUfY6SWLkmI-hof3rQYVqI8t0Ob3LVUmVxSvF9qGwZdlgWxx526WfHlM3-Fl2IDoOQC2Yw1JhGEas05j3ikv3EfgFduPLd6bhXuVLuy86vXIKCr0feRaKZu57zZ5P8wQMsLCR3BBSuAhq89ERQSEFExqrOWW97bUYVfvdypum3PDLyRUsuIA0C_NLFitQ-m3d2wxnyYpi1_hJr7nnAfKX5fFv0YHJPX57S81MvGVws47PO026LAYekR_1pij2GBzZLyjDgXtLrRWRvwvVf-TU8YJWIethCt1O4OKYl_dgpgTWcHXW188qpesq-0a80IkBobuZ2ETvV5vh1vsmcHIKVKrkhAf4Rxw_PvoBR8dlY2k3x-N2AJX5tL4MPgcitevIFL_J6iCEGEHvqLGNy6kbvzzYI2UoL-XQkdu5PL74kjxZbckjCeQfrfBsujD0UUXCaRhm0hxZvXxW-Ig9H2rGjdHmLhKJQhvw8V3l81k4xWY4Ts8xEui8EjFdG7H8IhIKsM\"}}'\r\n    ++ [[ 2 -eq 1 ]]\r\n    ++ [[ -n https://acme-v02.api.letsencrypt.org/acme/acct/4935574 ]]\r\n    ++ protected='{\"alg\": \"RS256\", \"kid\": \"https://acme-v02.api.letsencrypt.org/acme/acct/4935574\", \"url\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\", \"nonce\": \"7THrq5H6UPDCLVzRxJqfgMQ-Nvb7mMSMj6ctDrSFl08\"}'\r\n    +++ printf %s '{\"alg\": \"RS256\", \"kid\": \"https://acme-v02.api.letsencrypt.org/acme/acct/4935574\", \"url\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\", \"nonce\": \"7THrq5H6UPDCLVzRxJqfgMQ-Nvb7mMSMj6ctDrSFl08\"}'\r\n    +++ urlbase64\r\n    +++ openssl base64 -e\r\n    +++ tr -d '\\n\\r'\r\n    +++ _sed -e 's:=*$::g' -e y:+/:-_:\r\n    +++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    +++ sed -r -e 's:=*$::g' -e y:+/:-_:\r\n    ++ protected64=eyJhbGciOiAiUlMyNTYiLCAia2lkIjogImh0dHBzOi8vYWNtZS12MDIuYXBpLmxldHNlbmNyeXB0Lm9yZy9hY21lL2FjY3QvNDkzNTU3NCIsICJ1cmwiOiAiaHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2FjbWUvbmV3LW9yZGVyIiwgIm5vbmNlIjogIjdUSHJxNUg2VVBEQ0xWelJ4SnFmZ01RLU52YjdtTVNNajZjdERyU0ZsMDgifQ\r\n    +++ printf %s eyJhbGciOiAiUlMyNTYiLCAia2lkIjogImh0dHBzOi8vYWNtZS12MDIuYXBpLmxldHNlbmNyeXB0Lm9yZy9hY21lL2FjY3QvNDkzNTU3NCIsICJ1cmwiOiAiaHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2FjbWUvbmV3LW9yZGVyIiwgIm5vbmNlIjogIjdUSHJxNUg2VVBEQ0xWelJ4SnFmZ01RLU52YjdtTVNNajZjdERyU0ZsMDgifQ.eyJpZGVudGlmaWVycyI6IFt7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInRiLWl0Zi5kZSJ9LCB7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInd3dy50Yi1pdGYuZGUifV19\r\n    +++ openssl dgst -sha256 -sign /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/account_key.pem\r\n    +++ urlbase64\r\n    +++ openssl base64 -e\r\n    +++ _sed -e 's:=*$::g' -e y:+/:-_:\r\n    +++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    +++ sed -r -e 's:=*$::g' -e y:+/:-_:\r\n    +++ tr -d '\\n\\r'\r\n    ++ signed64=aJWcBpn2kjTLpODS5vGr-1MPCS05LTfydmWyzzeTLaj6WpQMk3DwYeTXSJ8XF-HfvlO45MDVwih745e26bwXf9Czne1MkPH3eCAfHp6D-DFdgaL2WxDJSs7EXP0Oix7Hsm1_fZEYlPEMciWh17s_RkmrXJX2ge_JX0HsrOCzEtYllK-ZEtTlEr_jbcOp-hd6dGOQw4lU7NLHIZ9lpNrXUlYCCSLSmMa7oJ0WHmJ1KjpwKbz5SycTU4PrbRmtXmaehYm7IU-0X1ISM55tkz3_wVsA_LJSe4q8gR0cSUBOPNmcS1YC0JPzkuIgGZxRfwlZKG5GJGVXMlGZAKou3g-HUM7DdbP28gS0MXvVcPUrQnT-u5UyeBbbja4cXZ-Qd9-8Jvyq3vph0395dUTqm0xlpSg0iDTaxjGch1puM9k9ek8xnu7A-E_HJpNepzlvUWNry4YOBkXOi641Da_fTGToB58N7HVWErgmZUtRjT6J7UQkb8_fv4-em9jsUQSbHgThcLfqm839v2NoiBaOMhxBkeSXB8Wa1wyVLX12Gh4sOniaJFAfdRblnLVyCDrKahJBI622AzOD4FCD04kh2hdnF1LWfWc3Vf9_6QqfT0YpBbQglEWo7KVOZa1p4C_ribSWAY0AkLOTWsaiE-7M2PQTYLpxc-axNtD9cRvYcpEK-Hg\r\n    ++ [[ 2 -eq 1 ]]\r\n    ++ data='{\"protected\": \"eyJhbGciOiAiUlMyNTYiLCAia2lkIjogImh0dHBzOi8vYWNtZS12MDIuYXBpLmxldHNlbmNyeXB0Lm9yZy9hY21lL2FjY3QvNDkzNTU3NCIsICJ1cmwiOiAiaHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2FjbWUvbmV3LW9yZGVyIiwgIm5vbmNlIjogIjdUSHJxNUg2VVBEQ0xWelJ4SnFmZ01RLU52YjdtTVNNajZjdERyU0ZsMDgifQ\", \"payload\": \"eyJpZGVudGlmaWVycyI6IFt7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInRiLWl0Zi5kZSJ9LCB7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInd3dy50Yi1pdGYuZGUifV19\", \"signature\": \"aJWcBpn2kjTLpODS5vGr-1MPCS05LTfydmWyzzeTLaj6WpQMk3DwYeTXSJ8XF-HfvlO45MDVwih745e26bwXf9Czne1MkPH3eCAfHp6D-DFdgaL2WxDJSs7EXP0Oix7Hsm1_fZEYlPEMciWh17s_RkmrXJX2ge_JX0HsrOCzEtYllK-ZEtTlEr_jbcOp-hd6dGOQw4lU7NLHIZ9lpNrXUlYCCSLSmMa7oJ0WHmJ1KjpwKbz5SycTU4PrbRmtXmaehYm7IU-0X1ISM55tkz3_wVsA_LJSe4q8gR0cSUBOPNmcS1YC0JPzkuIgGZxRfwlZKG5GJGVXMlGZAKou3g-HUM7DdbP28gS0MXvVcPUrQnT-u5UyeBbbja4cXZ-Qd9-8Jvyq3vph0395dUTqm0xlpSg0iDTaxjGch1puM9k9ek8xnu7A-E_HJpNepzlvUWNry4YOBkXOi641Da_fTGToB58N7HVWErgmZUtRjT6J7UQkb8_fv4-em9jsUQSbHgThcLfqm839v2NoiBaOMhxBkeSXB8Wa1wyVLX12Gh4sOniaJFAfdRblnLVyCDrKahJBI622AzOD4FCD04kh2hdnF1LWfWc3Vf9_6QqfT0YpBbQglEWo7KVOZa1p4C_ribSWAY0AkLOTWsaiE-7M2PQTYLpxc-axNtD9cRvYcpEK-Hg\"}'\r\n    ++ http_request post https://acme-v02.api.letsencrypt.org/acme/new-order '{\"protected\": \"eyJhbGciOiAiUlMyNTYiLCAia2lkIjogImh0dHBzOi8vYWNtZS12MDIuYXBpLmxldHNlbmNyeXB0Lm9yZy9hY21lL2FjY3QvNDkzNTU3NCIsICJ1cmwiOiAiaHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2FjbWUvbmV3LW9yZGVyIiwgIm5vbmNlIjogIjdUSHJxNUg2VVBEQ0xWelJ4SnFmZ01RLU52YjdtTVNNajZjdERyU0ZsMDgifQ\", \"payload\": \"eyJpZGVudGlmaWVycyI6IFt7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInRiLWl0Zi5kZSJ9LCB7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInd3dy50Yi1pdGYuZGUifV19\", \"signature\": \"aJWcBpn2kjTLpODS5vGr-1MPCS05LTfydmWyzzeTLaj6WpQMk3DwYeTXSJ8XF-HfvlO45MDVwih745e26bwXf9Czne1MkPH3eCAfHp6D-DFdgaL2WxDJSs7EXP0Oix7Hsm1_fZEYlPEMciWh17s_RkmrXJX2ge_JX0HsrOCzEtYllK-ZEtTlEr_jbcOp-hd6dGOQw4lU7NLHIZ9lpNrXUlYCCSLSmMa7oJ0WHmJ1KjpwKbz5SycTU4PrbRmtXmaehYm7IU-0X1ISM55tkz3_wVsA_LJSe4q8gR0cSUBOPNmcS1YC0JPzkuIgGZxRfwlZKG5GJGVXMlGZAKou3g-HUM7DdbP28gS0MXvVcPUrQnT-u5UyeBbbja4cXZ-Qd9-8Jvyq3vph0395dUTqm0xlpSg0iDTaxjGch1puM9k9ek8xnu7A-E_HJpNepzlvUWNry4YOBkXOi641Da_fTGToB58N7HVWErgmZUtRjT6J7UQkb8_fv4-em9jsUQSbHgThcLfqm839v2NoiBaOMhxBkeSXB8Wa1wyVLX12Gh4sOniaJFAfdRblnLVyCDrKahJBI622AzOD4FCD04kh2hdnF1LWfWc3Vf9_6QqfT0YpBbQglEWo7KVOZa1p4C_ribSWAY0AkLOTWsaiE-7M2PQTYLpxc-axNtD9cRvYcpEK-Hg\"}'\r\n    +++ _mktemp\r\n    +++ mktemp /tmp/dehydrated-XXXXXX\r\n    ++ tempcont=/tmp/dehydrated-enUC9f\r\n    +++ _mktemp\r\n    +++ mktemp /tmp/dehydrated-XXXXXX\r\n    ++ tempheaders=/tmp/dehydrated-cD2Yk0\r\n    ++ [[ -n '' ]]\r\n    ++ set +e\r\n    ++ [[ post = \\h\\e\\a\\d ]]\r\n    ++ [[ post = \\g\\e\\t ]]\r\n    ++ [[ post = \\p\\o\\s\\t ]]\r\n    +++ curl -A 'dehydr4ted/git-master-after-0.6.1 curl/7.58.0' -s -w '%{http_code}' -o /tmp/dehydrated-enUC9f https://acme-v02.api.letsencrypt.org/acme/new-order -D /tmp/dehydrated-cD2Yk0 -H 'Content-Type: application/jose+json' -d '{\"protected\": \"eyJhbGciOiAiUlMyNTYiLCAia2lkIjogImh0dHBzOi8vYWNtZS12MDIuYXBpLmxldHNlbmNyeXB0Lm9yZy9hY21lL2FjY3QvNDkzNTU3NCIsICJ1cmwiOiAiaHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2FjbWUvbmV3LW9yZGVyIiwgIm5vbmNlIjogIjdUSHJxNUg2VVBEQ0xWelJ4SnFmZ01RLU52YjdtTVNNajZjdERyU0ZsMDgifQ\", \"payload\": \"eyJpZGVudGlmaWVycyI6IFt7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInRiLWl0Zi5kZSJ9LCB7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInd3dy50Yi1pdGYuZGUifV19\", \"signature\": \"aJWcBpn2kjTLpODS5vGr-1MPCS05LTfydmWyzzeTLaj6WpQMk3DwYeTXSJ8XF-HfvlO45MDVwih745e26bwXf9Czne1MkPH3eCAfHp6D-DFdgaL2WxDJSs7EXP0Oix7Hsm1_fZEYlPEMciWh17s_RkmrXJX2ge_JX0HsrOCzEtYllK-ZEtTlEr_jbcOp-hd6dGOQw4lU7NLHIZ9lpNrXUlYCCSLSmMa7oJ0WHmJ1KjpwKbz5SycTU4PrbRmtXmaehYm7IU-0X1ISM55tkz3_wVsA_LJSe4q8gR0cSUBOPNmcS1YC0JPzkuIgGZxRfwlZKG5GJGVXMlGZAKou3g-HUM7DdbP28gS0MXvVcPUrQnT-u5UyeBbbja4cXZ-Qd9-8Jvyq3vph0395dUTqm0xlpSg0iDTaxjGch1puM9k9ek8xnu7A-E_HJpNepzlvUWNry4YOBkXOi641Da_fTGToB58N7HVWErgmZUtRjT6J7UQkb8_fv4-em9jsUQSbHgThcLfqm839v2NoiBaOMhxBkeSXB8Wa1wyVLX12Gh4sOniaJFAfdRblnLVyCDrKahJBI622AzOD4FCD04kh2hdnF1LWfWc3Vf9_6QqfT0YpBbQglEWo7KVOZa1p4C_ribSWAY0AkLOTWsaiE-7M2PQTYLpxc-axNtD9cRvYcpEK-Hg\"}'\r\n    ++ statuscode=201\r\n    ++ curlret=0\r\n    ++ set -e\r\n    ++ [[ ! 0 = \\0 ]]\r\n    ++ [[ ! 2 = \\2 ]]\r\n    ++ echo 'checking pipe 4'\r\n    checking pipe 4\r\n    ++ echo 'using pipe 4'\r\n    using pipe 4\r\n    ++ cat /tmp/dehydrated-cD2Yk0\r\n    cat: Schreibfehler: Daten\u00fcbergabe unterbrochen (broken pipe)\r\n    + result=\r\n    + remove_lock\r\n    + rm -f /opt/dehydrated/lock I changes the script to this:\r\n\r\n    #!/usr/bin/env bash\r\n    \r\n    # dehydrated by lukas2511\r\n    # Source: https://dehydrated.de\r\n    #\r\n    # This script is licensed under The MIT License (see LICENSE for more information).\r\n    \r\n    { true >&4; } 2>/dev/null || true\r\n    set -e\r\n    set -u\r\n    set -o pipefail\r\n    [[ -n \"${ZSH_VERSION:-}\" ]] && set -o SH_WORD_SPLIT && set +o FUNCTION_ARGZERO && set -o NULL_GLOB && set -o noglob\r\n    [[ -z \"${ZSH_VERSION:-}\" ]] && shopt -s nullglob && set -f\r\n\r\nBut there is noch change if I see that right:\r\n\r\n    + set -e\r\n    + set -u\r\n    + set -o pipefail\r\n    + [[ -n '' ]]\r\n    + [[ -z '' ]]\r\n    + shopt -s nullglob\r\n    + set -f\r\n    + umask 077\r\n    + VERSION=git-master-after-0.6.1\r\n    + SOURCE=/opt/dehydrated/dehydrated\r\n    + '[' -h /opt/dehydrated/dehydrated ']'\r\n    +++ dirname /opt/dehydrated/dehydrated\r\n    ++ cd -P /opt/dehydrated\r\n    ++ pwd\r\n    + SCRIPTDIR=/opt/dehydrated\r\n    + BASEDIR=/opt/dehydrated\r\n    + ORIGARGS='-c -o /etc/ssl/reksys -a secp384r1 -d domain.de -d www.domain.de'\r\n    ++ uname\r\n    + OSTYPE=Linux\r\n    + [[ ! '' = \\N\\O\\O\\P ]]\r\n    + main -c -o /etc/ssl/reksys -a secp384r1 -d domain.de -d www.domain.de\r\n    + COMMAND=\r\n    + [[ -z -c -o /etc/ssl/reksys -a secp384r1 -d domain.de -d www.domain.de ]]\r\n    + ((  9  ))\r\n    + case \"${1}\" in\r\n    + set_command sign_domains\r\n    + [[ -z '' ]]\r\n    + COMMAND=sign_domains\r\n    + shift 1\r\n    + ((  8  ))\r\n    + case \"${1}\" in\r\n    + shift 1\r\n    + check_parameters /etc/ssl/reksys\r\n    + [[ -z /etc/ssl/reksys ]]\r\n    + [[ / = \\- ]]\r\n    + PARAM_CERTDIR=/etc/ssl/reksys\r\n    + shift 1\r\n    + ((  6  ))\r\n    + case \"${1}\" in\r\n    + shift 1\r\n    + check_parameters secp384r1\r\n    + [[ -z secp384r1 ]]\r\n    + [[ s = \\- ]]\r\n    + PARAM_KEY_ALGO=secp384r1\r\n    + shift 1\r\n    + ((  4  ))\r\n    + case \"${1}\" in\r\n    + shift 1\r\n    + check_parameters domain.de\r\n    + [[ -z domain.de ]]\r\n    + [[ t = \\- ]]\r\n    + [[ -z '' ]]\r\n    + PARAM_DOMAIN=domain.de\r\n    + shift 1\r\n    + ((  2  ))\r\n    + case \"${1}\" in\r\n    + shift 1\r\n    + check_parameters www.domain.de\r\n    + [[ -z www.domain.de ]]\r\n    + [[ w = \\- ]]\r\n    + [[ -z domain.de ]]\r\n    + PARAM_DOMAIN='domain.de www.domain.de'\r\n    + shift 1\r\n    + ((  0  ))\r\n    + case \"${COMMAND}\" in\r\n    + command_sign_domains\r\n    + init_system\r\n    + load_config\r\n    + [[ -z '' ]]\r\n    + for check_config in \"/etc/dehydrated\" \"/usr/local/etc/dehydrated\" \"${PWD}\" \"${SCRIPTDIR}\"\r\n    + [[ -f /etc/dehydrated/config ]]\r\n    + for check_config in \"/etc/dehydrated\" \"/usr/local/etc/dehydrated\" \"${PWD}\" \"${SCRIPTDIR}\"\r\n    + [[ -f /usr/local/etc/dehydrated/config ]]\r\n    + for check_config in \"/etc/dehydrated\" \"/usr/local/etc/dehydrated\" \"${PWD}\" \"${SCRIPTDIR}\"\r\n    + [[ -f /opt/reksys/config ]]\r\n    + for check_config in \"/etc/dehydrated\" \"/usr/local/etc/dehydrated\" \"${PWD}\" \"${SCRIPTDIR}\"\r\n    + [[ -f /opt/dehydrated/config ]]\r\n    + BASEDIR=/opt/dehydrated\r\n    + CONFIG=/opt/dehydrated/config\r\n    + break\r\n    + CA=https://acme-v02.api.letsencrypt.org/directory\r\n    + OLDCA=\r\n    + CERTDIR=\r\n    + ACCOUNTDIR=\r\n    + CHALLENGETYPE=http-01\r\n    + CONFIG_D=\r\n    + CURL_OPTS=\r\n    + DOMAINS_D=\r\n    + DOMAINS_TXT=\r\n    + HOOK=\r\n    + HOOK_CHAIN=no\r\n    + RENEW_DAYS=30\r\n    + KEYSIZE=4096\r\n    + WELLKNOWN=\r\n    + PRIVATE_KEY_RENEW=yes\r\n    + PRIVATE_KEY_ROLLOVER=no\r\n    + KEY_ALGO=rsa\r\n    + OPENSSL=openssl\r\n    + OPENSSL_CNF=\r\n    + CONTACT_EMAIL=\r\n    + LOCKFILE=\r\n    + OCSP_MUST_STAPLE=no\r\n    + OCSP_FETCH=no\r\n    + IP_VERSION=\r\n    + CHAINCACHE=\r\n    + AUTO_CLEANUP=no\r\n    + DEHYDRATED_USER=\r\n    + DEHYDRATED_GROUP=\r\n    + API=auto\r\n    + [[ -z /opt/dehydrated/config ]]\r\n    + [[ -f /opt/dehydrated/config ]]\r\n    + echo '# INFO: Using main config file /opt/dehydrated/config'\r\n    # INFO: Using main config file /opt/dehydrated/config\r\n    ++ dirname /opt/dehydrated/config\r\n    + BASEDIR=/opt/dehydrated\r\n    + . /opt/dehydrated/config\r\n    ++ CHALLENGETYPE=http-01\r\n    ++ WELLKNOWN=/srv/http/dehydrated\r\n    ++ KEYSIZE=4096\r\n    ++ PRIVATE_KEY_RENEW=yes\r\n    ++ KEY_ALGO=rsa\r\n    + [[ -n '' ]]\r\n    + [[ -n '' ]]\r\n    + [[ -n '' ]]\r\n    + check_dependencies\r\n    + openssl version\r\n    + _sed ''\r\n    + command -v grep\r\n    + command -v mktemp\r\n    + command -v diff\r\n    + set +e\r\n    ++ curl -V\r\n    ++ head -n1\r\n    ++ awk '{print $2}'\r\n    + CURL_VERSION=7.58.0\r\n    + retcode=0\r\n    + set -e\r\n    + [[ ! 0 = \\0 ]]\r\n    + [[ /opt/dehydrated != \\/ ]]\r\n    + BASEDIR=/opt/dehydrated\r\n    + [[ -d /opt/dehydrated ]]\r\n    + [[ -z '' ]]\r\n    + [[ https://acme-v02.api.letsencrypt.org/directory = \\h\\t\\t\\p\\s\\:\\/\\/\\a\\c\\m\\e\\-\\v\\0\\2\\.\\a\\p\\i\\.\\l\\e\\t\\s\\e\\n\\c\\r\\y\\p\\t\\.\\o\\r\\g\\/\\d\\i\\r\\e\\c\\t\\o\\r\\y ]]\r\n    + OLDCA=https://acme-v01.api.letsencrypt.org/directory\r\n    ++ echo https://acme-v02.api.letsencrypt.org/directory\r\n    ++ urlbase64\r\n    ++ openssl base64 -e\r\n    ++ tr -d '\\n\\r'\r\n    ++ _sed -e 's:=*$::g' -e y:+/:-_:\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r -e 's:=*$::g' -e y:+/:-_:\r\n    + CAHASH=aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo\r\n    + [[ -z '' ]]\r\n    + ACCOUNTDIR=/opt/dehydrated/accounts\r\n    + [[ ! -e /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo ]]\r\n    + [[ -f /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/config ]]\r\n    + ACCOUNT_KEY=/opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/account_key.pem\r\n    + ACCOUNT_KEY_JSON=/opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/registration_info.json\r\n    + [[ -f /opt/dehydrated/private_key.pem ]]\r\n    + [[ -f /opt/dehydrated/private_key.json ]]\r\n    + [[ -z '' ]]\r\n    + CERTDIR=/opt/dehydrated/certs\r\n    + [[ -z '' ]]\r\n    + CHAINCACHE=/opt/dehydrated/chains\r\n    + [[ -z '' ]]\r\n    + DOMAINS_TXT=/opt/dehydrated/domains.txt\r\n    + [[ -z /srv/http/dehydrated ]]\r\n    + [[ -z '' ]]\r\n    + LOCKFILE=/opt/dehydrated/lock\r\n    + [[ -z '' ]]\r\n    ++ openssl version -d\r\n    ++ cut '-d\"' -f2\r\n    + OPENSSL_CNF=/etc/ssl/openssl.cnf\r\n    + [[ -n '' ]]\r\n    + [[ -n '' ]]\r\n    + [[ -n '' ]]\r\n    + [[ -n /etc/ssl/reksys ]]\r\n    + CERTDIR=/etc/ssl/reksys\r\n    + [[ -n '' ]]\r\n    + [[ -n secp384r1 ]]\r\n    + KEY_ALGO=secp384r1\r\n    + [[ -n '' ]]\r\n    + [[ -n '' ]]\r\n    + '[' '!' '' = noverify ']'\r\n    + verify_config\r\n    + [[ http-01 == \\h\\t\\t\\p\\-\\0\\1 ]]\r\n    + [[ http-01 = \\d\\n\\s\\-\\0\\1 ]]\r\n    + [[ http-01 = \\h\\t\\t\\p\\-\\0\\1 ]]\r\n    + [[ ! -d /srv/http/dehydrated ]]\r\n    + [[ secp384r1 == \\r\\s\\a ]]\r\n    + [[ secp384r1 == \\p\\r\\i\\m\\e\\2\\5\\6\\v\\1 ]]\r\n    + [[ secp384r1 == \\s\\e\\c\\p\\3\\8\\4\\r\\1 ]]\r\n    + [[ -n '' ]]\r\n    + [[ auto == \\a\\u\\t\\o ]]\r\n    + store_configvars\r\n    + __KEY_ALGO=secp384r1\r\n    + __OCSP_MUST_STAPLE=no\r\n    + __PRIVATE_KEY_RENEW=yes\r\n    + __KEYSIZE=4096\r\n    + __CHALLENGETYPE=http-01\r\n    + __HOOK=\r\n    + __WELLKNOWN=/srv/http/dehydrated\r\n    + __HOOK_CHAIN=no\r\n    + __OPENSSL_CNF=/etc/ssl/openssl.cnf\r\n    + __RENEW_DAYS=30\r\n    + __IP_VERSION=\r\n    + [[ -n /opt/dehydrated/lock ]]\r\n    ++ dirname /opt/dehydrated/lock\r\n    + LOCKDIR=/opt/dehydrated\r\n    + [[ -w /opt/dehydrated ]]\r\n    + trap remove_lock EXIT\r\n    ++ http_request get https://acme-v02.api.letsencrypt.org/directory\r\n    +++ _mktemp\r\n    +++ mktemp /tmp/dehydrated-XXXXXX\r\n    ++ tempcont=/tmp/dehydrated-I5qVXc\r\n    +++ _mktemp\r\n    +++ mktemp /tmp/dehydrated-XXXXXX\r\n    ++ tempheaders=/tmp/dehydrated-mryB4k\r\n    ++ [[ -n '' ]]\r\n    ++ set +e\r\n    ++ [[ get = \\h\\e\\a\\d ]]\r\n    ++ [[ get = \\g\\e\\t ]]\r\n    +++ curl -A 'dehydr4ted/git-master-after-0.6.1 curl/7.58.0' -L -s -w '%{http_code}' -o /tmp/dehydrated-I5qVXc -D /tmp/dehydrated-mryB4k https://acme-v02.api.letsencrypt.org/directory\r\n    ++ statuscode=200\r\n    ++ curlret=0\r\n    ++ set -e\r\n    ++ [[ ! 0 = \\0 ]]\r\n    ++ [[ ! 2 = \\2 ]]\r\n    ++ echo 'checking pipe 4'\r\n    checking pipe 4\r\n    ++ echo 'using pipe 4'\r\n    using pipe 4\r\n    ++ cat /tmp/dehydrated-mryB4k\r\n    ++ echo 'getting curl output'\r\n    getting curl output\r\n    ++ cat /tmp/dehydrated-I5qVXc\r\n    ++ echo 'deleting temp files'\r\n    deleting temp files\r\n    ++ rm -f /tmp/dehydrated-I5qVXc\r\n    ++ rm -f /tmp/dehydrated-mryB4k\r\n    + CA_DIRECTORY='{\r\n      \"Bo3r9Vx1GGk\": \"https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417\",\r\n      \"keyChange\": \"https://acme-v02.api.letsencrypt.org/acme/key-change\",\r\n      \"meta\": {\r\n        \"termsOfService\": \"https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf\"\r\n      },\r\n      \"newAccount\": \"https://acme-v02.api.letsencrypt.org/acme/new-acct\",\r\n      \"newNonce\": \"https://acme-v02.api.letsencrypt.org/acme/new-nonce\",\r\n      \"newOrder\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\",\r\n      \"revokeCert\": \"https://acme-v02.api.letsencrypt.org/acme/revoke-cert\"\r\n    }'\r\n    + [[ auto = \\a\\u\\t\\o ]]\r\n    + grep -q newOrder\r\n    + API=2\r\n    + [[ 2 -eq 1 ]]\r\n    ++ printf %s '{\r\n      \"Bo3r9Vx1GGk\": \"https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417\",\r\n      \"keyChange\": \"https://acme-v02.api.letsencrypt.org/acme/key-change\",\r\n      \"meta\": {\r\n        \"termsOfService\": \"https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf\"\r\n      },\r\n      \"newAccount\": \"https://acme-v02.api.letsencrypt.org/acme/new-acct\",\r\n      \"newNonce\": \"https://acme-v02.api.letsencrypt.org/acme/new-nonce\",\r\n      \"newOrder\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\",\r\n      \"revokeCert\": \"https://acme-v02.api.letsencrypt.org/acme/revoke-cert\"\r\n    }'\r\n    ++ get_json_string_value newOrder\r\n    ++ local filter\r\n    +++ printf 's/.*\"%s\": *\"\\([^\"]*\\)\".*/\\\\1/p' newOrder\r\n    ++ filter='s/.*\"newOrder\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    ++ sed -n 's/.*\"newOrder\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    + CA_NEW_ORDER=https://acme-v02.api.letsencrypt.org/acme/new-order\r\n    ++ printf %s '{\r\n      \"Bo3r9Vx1GGk\": \"https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417\",\r\n      \"keyChange\": \"https://acme-v02.api.letsencrypt.org/acme/key-change\",\r\n      \"meta\": {\r\n        \"termsOfService\": \"https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf\"\r\n      },\r\n      \"newAccount\": \"https://acme-v02.api.letsencrypt.org/acme/new-acct\",\r\n      \"newNonce\": \"https://acme-v02.api.letsencrypt.org/acme/new-nonce\",\r\n      \"newOrder\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\",\r\n      \"revokeCert\": \"https://acme-v02.api.letsencrypt.org/acme/revoke-cert\"\r\n    }'\r\n    ++ get_json_string_value newNonce\r\n    ++ local filter\r\n    +++ printf 's/.*\"%s\": *\"\\([^\"]*\\)\".*/\\\\1/p' newNonce\r\n    ++ filter='s/.*\"newNonce\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    ++ sed -n 's/.*\"newNonce\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    + CA_NEW_NONCE=https://acme-v02.api.letsencrypt.org/acme/new-nonce\r\n    ++ printf %s '{\r\n      \"Bo3r9Vx1GGk\": \"https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417\",\r\n      \"keyChange\": \"https://acme-v02.api.letsencrypt.org/acme/key-change\",\r\n      \"meta\": {\r\n        \"termsOfService\": \"https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf\"\r\n      },\r\n      \"newAccount\": \"https://acme-v02.api.letsencrypt.org/acme/new-acct\",\r\n      \"newNonce\": \"https://acme-v02.api.letsencrypt.org/acme/new-nonce\",\r\n      \"newOrder\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\",\r\n      \"revokeCert\": \"https://acme-v02.api.letsencrypt.org/acme/revoke-cert\"\r\n    }'\r\n    ++ get_json_string_value newAccount\r\n    ++ local filter\r\n    +++ printf 's/.*\"%s\": *\"\\([^\"]*\\)\".*/\\\\1/p' newAccount\r\n    ++ filter='s/.*\"newAccount\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    ++ sed -n 's/.*\"newAccount\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    + CA_NEW_ACCOUNT=https://acme-v02.api.letsencrypt.org/acme/new-acct\r\n    ++ printf %s '{\r\n      \"Bo3r9Vx1GGk\": \"https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417\",\r\n      \"keyChange\": \"https://acme-v02.api.letsencrypt.org/acme/key-change\",\r\n      \"meta\": {\r\n        \"termsOfService\": \"https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf\"\r\n      },\r\n      \"newAccount\": \"https://acme-v02.api.letsencrypt.org/acme/new-acct\",\r\n      \"newNonce\": \"https://acme-v02.api.letsencrypt.org/acme/new-nonce\",\r\n      \"newOrder\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\",\r\n      \"revokeCert\": \"https://acme-v02.api.letsencrypt.org/acme/revoke-cert\"\r\n    }'\r\n    ++ get_json_string_value termsOfService\r\n    ++ local filter\r\n    +++ printf 's/.*\"%s\": *\"\\([^\"]*\\)\".*/\\\\1/p' termsOfService\r\n    ++ filter='s/.*\"termsOfService\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    ++ sed -n 's/.*\"termsOfService\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    + CA_TERMS=https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf\r\n    ++ printf %s '{\r\n      \"Bo3r9Vx1GGk\": \"https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417\",\r\n      \"keyChange\": \"https://acme-v02.api.letsencrypt.org/acme/key-change\",\r\n      \"meta\": {\r\n        \"termsOfService\": \"https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf\"\r\n      },\r\n      \"newAccount\": \"https://acme-v02.api.letsencrypt.org/acme/new-acct\",\r\n      \"newNonce\": \"https://acme-v02.api.letsencrypt.org/acme/new-nonce\",\r\n      \"newOrder\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\",\r\n      \"revokeCert\": \"https://acme-v02.api.letsencrypt.org/acme/revoke-cert\"\r\n    }'\r\n    ++ get_json_string_value revokeCert\r\n    ++ local filter\r\n    +++ printf 's/.*\"%s\": *\"\\([^\"]*\\)\".*/\\\\1/p' revokeCert\r\n    ++ filter='s/.*\"revokeCert\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    ++ sed -n 's/.*\"revokeCert\": *\"\\([^\"]*\\)\".*/\\1/p'\r\n    + CA_REVOKE_CERT=https://acme-v02.api.letsencrypt.org/acme/revoke-cert\r\n    + CA_ACCOUNT=https://acme-v02.api.letsencrypt.org/acme/acct\r\n    + export WELLKNOWN BASEDIR CERTDIR CONFIG COMMAND\r\n    + register_new_key=no\r\n    + [[ -n '' ]]\r\n    + [[ ! -e /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/account_key.pem ]]\r\n    + openssl rsa -in /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/account_key.pem -check\r\n    ++ hex2bin\r\n    ++ urlbase64\r\n    ++ tr -d '\\n\\r'\r\n    +++ openssl rsa -in /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/account_key.pem -noout -text\r\n    ++ _sed -e 's:=*$::g' -e y:+/:-_:\r\n    +++ awk '/publicExponent/ {print $2}'\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r -e 's:=*$::g' -e y:+/:-_:\r\n    +++ cat\r\n    +++ _sed -e 's/[[:space:]]//g' -e 's/^(.(.{2})*)$/0\\1/' -e 's/(.{2})/\\\\x\\1/g'\r\n    +++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    +++ sed -r -e 's/[[:space:]]//g' -e 's/^(.(.{2})*)$/0\\1/' -e 's/(.{2})/\\\\x\\1/g'\r\n    ++ openssl base64 -e\r\n    ++ printf %x 65537\r\n    ++ printf -- '\\x01\\x00\\x01'\r\n    + pubExponent64=AQAB\r\n    ++ openssl rsa -in /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/account_key.pem -noout -modulus\r\n    ++ cut -d= -f2\r\n    ++ hex2bin\r\n    ++ urlbase64\r\n    +++ cat\r\n    +++ _sed -e 's/[[:space:]]//g' -e 's/^(.(.{2})*)$/0\\1/' -e 's/(.{2})/\\\\x\\1/g'\r\n    +++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ _sed -e 's:=*$::g' -e y:+/:-_:\r\n    +++ sed -r -e 's/[[:space:]]//g' -e 's/^(.(.{2})*)$/0\\1/' -e 's/(.{2})/\\\\x\\1/g'\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ openssl base64 -e\r\n    ++ sed -r -e 's:=*$::g' -e y:+/:-_:\r\n    ++ tr -d '\\n\\r'\r\n    ++ printf -- '\\xD2\\x5B\\x95\\x21\\x48\\xED\\xB1\\x22\\x5D\\x42\\x08\\x28\\xA4\\x60\\x7C\\xAC\\x8F\\x5E\\xC0\\xE5\\x44\\x97\\xFF\\x3F\\x5E\\xD3\\xB4\\x0C\\x11\\x11\\x9F\\x71\\x67\\x96\\xC7\\xEA\\x83\\xC8\\xE0\\xFB\\xD5\\x73\\xE4\\x23\\xAB\\xB9\\xAC\\x7F\\x01\\x14\\xC2\\xCA\\xEC\\xA0\\x03\\x60\\x10\\x92\\xC4\\x9B\\xC8\\xF2\\xF9\\x01\\xCC\\x00\\xDC\\xF5\\x8E\\xC6\\xD8\\x0E\\xFA\\xBE\\x5F\\xF6\\x1E\\x49\\xD6\\x69\\xA8\\x85\\x7B\\x97\\x6B\\xC2\\x38\\x50\\xF6\\x05\\x26\\x00\\x8D\\xAC\\x58\\x18\\xC9\\xCA\\x8A\\x3E\\x98\\xF6\\xFD\\x65\\x4C\\x8C\\x6D\\x09\\x03\\x16\\x3D\\xFF\\xE7\\x2F\\xB1\\xBB\\xEB\\xD2\\xF3\\x0E\\xE4\\x10\\xFF\\x57\\x39\\x3B\\xC5\\x47\\xD8\\xE9\\x25\\x8B\\x92\\x62\\x3E\\x86\\x87\\xF7\\xAD\\x06\\x15\\xA8\\x8F\\x2D\\xD0\\xE6\\xF7\\x2D\\x55\\x26\\x57\\x14\\xAF\\x17\\xDA\\x86\\xC1\\x97\\x65\\x81\\x6C\\x71\\xE7\\x6E\\x96\\x7C\\x79\\x4C\\xDF\\xE1\\x65\\xD8\\x80\\xE8\\x39\\x00\\xB6\\x63\\x0D\\x49\\x84\\x61\\x1A\\xB3\\x4E\\x63\\xDE\\x29\\x2F\\xDC\\x47\\xE0\\x15\\xDB\\x8F\\x2D\\xDE\\x9B\\x85\\x7B\\x95\\x2E\\xEC\\xBC\\xEA\\xF5\\xC8\\x28\\x2A\\xF4\\x7D\\xE4\\x5A\\x29\\x9B\\xB9\\xEF\\x36\\x79\\x3F\\xCC\\x10\\x32\\xC2\\xC2\\x47\\x70\\x41\\x4A\\xE0\\x21\\xAB\\xCF\\x44\\x45\\x04\\x84\\x14\\x4C\\x6A\\xAC\\xE5\\x96\\xF7\\xB6\\xD4\\x61\\x57\\xEF\\x77\\x2A\\x6E\\x9B\\x73\\xC3\\x2F\\x24\\x54\\xB2\\xE2\\x00\\xD0\\x2F\\xCD\\x2C\\x58\\xAD\\x43\\xE9\\xB7\\x77\\x6C\\x31\\x9F\\x26\\x29\\x8B\\x5F\\xE1\\x26\\xBE\\xE7\\x9C\\x07\\xCA\\x5F\\x97\\xC5\\xBF\\x46\\x07\\x24\\xF5\\xF9\\xED\\x2F\\x35\\x32\\xF1\\x95\\xC2\\xCE\\x3B\\x3C\\xED\\x36\\xE8\\xB0\\x18\\x7A\\x44\\x7F\\xD6\\x98\\xA3\\xD8\\x60\\x73\\x64\\xBC\\xA3\\x0E\\x05\\xED\\x2E\\xB4\\x56\\x46\\xFC\\x2F\\x55\\xFF\\x93\\x53\\xC6\\x09\\x58\\x87\\xAD\\x84\\x2B\\x75\\x3B\\x83\\x8A\\x62\\x5F\\xDD\\x82\\x98\\x13\\x59\\xC1\\xD7\\x5B\\x5F\\x3C\\xAA\\x97\\xAC\\xAB\\xED\\x1A\\xF3\\x42\\x24\\x06\\x86\\xEE\\x67\\x61\\x13\\xBD\\x5E\\x6F\\x87\\x5B\\xEC\\x99\\xC1\\xC8\\x29\\x52\\xAB\\x92\\x10\\x1F\\xE1\\x1C\\x70\\xFC\\xFB\\xE8\\x05\\x1F\\x1D\\x95\\x8D\\xA4\\xDF\\x1F\\x8D\\xD8\\x02\\x57\\xE6\\xD2\\xF8\\x30\\xF8\\x1C\\x8A\\xD7\\xAF\\x20\\x52\\xFF\\x27\\xA8\\x82\\x10\\x61\\x07\\xBE\\xA2\\xC6\\x37\\x2E\\xA4\\x6E\\xFC\\xF3\\x60\\x8D\\x94\\xA0\\xBF\\x97\\x42\\x47\\x6E\\xE4\\xF2\\xFB\\xE2\\x48\\xF1\\x65\\xB7\\x24\\x8C\\x27\\x90\\x7E\\xB7\\xC1\\xB2\\xE8\\xC3\\xD1\\x45\\x17\\x09\\xA4\\x61\\x9B\\x48\\x71\\x66\\xF5\\xF1\\x5B\\xE2\\x20\\xF4\\x7D\\xAB\\x1A\\x37\\x47\\x98\\xB8\\x4A\\x25\\x08\\x6F\\xC3\\xC5\\x77\\x97\\xCD\\x64\\xE3\\x15\\x98\\xE1\\x3B\\x3C\\xC4\\x4B\\xA2\\xF0\\x48\\xC5\\x74\\x6E\\xC7\\xF0\\x88\\x48\\x2A\\xC3'\r\n    + pubMod64=0luVIUjtsSJdQggopGB8rI9ewOVEl_8_XtO0DBERn3Fnlsfqg8jg-9Vz5COruax_ARTCyuygA2AQksSbyPL5AcwA3PWOxtgO-r5f9h5J1mmohXuXa8I4UPYFJgCNrFgYycqKPpj2_WVMjG0JAxY9_-cvsbvr0vMO5BD_Vzk7xUfY6SWLkmI-hof3rQYVqI8t0Ob3LVUmVxSvF9qGwZdlgWxx526WfHlM3-Fl2IDoOQC2Yw1JhGEas05j3ikv3EfgFduPLd6bhXuVLuy86vXIKCr0feRaKZu57zZ5P8wQMsLCR3BBSuAhq89ERQSEFExqrOWW97bUYVfvdypum3PDLyRUsuIA0C_NLFitQ-m3d2wxnyYpi1_hJr7nnAfKX5fFv0YHJPX57S81MvGVws47PO026LAYekR_1pij2GBzZLyjDgXtLrRWRvwvVf-TU8YJWIethCt1O4OKYl_dgpgTWcHXW188qpesq-0a80IkBobuZ2ETvV5vh1vsmcHIKVKrkhAf4Rxw_PvoBR8dlY2k3x-N2AJX5tL4MPgcitevIFL_J6iCEGEHvqLGNy6kbvzzYI2UoL-XQkdu5PL74kjxZbckjCeQfrfBsujD0UUXCaRhm0hxZvXxW-Ig9H2rGjdHmLhKJQhvw8V3l81k4xWY4Ts8xEui8EjFdG7H8IhIKsM\r\n    ++ printf '{\"e\":\"%s\",\"kty\":\"RSA\",\"n\":\"%s\"}' AQAB 0luVIUjtsSJdQggopGB8rI9ewOVEl_8_XtO0DBERn3Fnlsfqg8jg-9Vz5COruax_ARTCyuygA2AQksSbyPL5AcwA3PWOxtgO-r5f9h5J1mmohXuXa8I4UPYFJgCNrFgYycqKPpj2_WVMjG0JAxY9_-cvsbvr0vMO5BD_Vzk7xUfY6SWLkmI-hof3rQYVqI8t0Ob3LVUmVxSvF9qGwZdlgWxx526WfHlM3-Fl2IDoOQC2Yw1JhGEas05j3ikv3EfgFduPLd6bhXuVLuy86vXIKCr0feRaKZu57zZ5P8wQMsLCR3BBSuAhq89ERQSEFExqrOWW97bUYVfvdypum3PDLyRUsuIA0C_NLFitQ-m3d2wxnyYpi1_hJr7nnAfKX5fFv0YHJPX57S81MvGVws47PO026LAYekR_1pij2GBzZLyjDgXtLrRWRvwvVf-TU8YJWIethCt1O4OKYl_dgpgTWcHXW188qpesq-0a80IkBobuZ2ETvV5vh1vsmcHIKVKrkhAf4Rxw_PvoBR8dlY2k3x-N2AJX5tL4MPgcitevIFL_J6iCEGEHvqLGNy6kbvzzYI2UoL-XQkdu5PL74kjxZbckjCeQfrfBsujD0UUXCaRhm0hxZvXxW-Ig9H2rGjdHmLhKJQhvw8V3l81k4xWY4Ts8xEui8EjFdG7H8IhIKsM\r\n    ++ openssl dgst -sha256 -binary\r\n    ++ urlbase64\r\n    ++ openssl base64 -e\r\n    ++ tr -d '\\n\\r'\r\n    ++ _sed -e 's:=*$::g' -e y:+/:-_:\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r -e 's:=*$::g' -e y:+/:-_:\r\n    + thumbprint=VXESrd5m4rm2wgbUmDI4cr1fyUE7-DTX5gi2StpxhgI\r\n    + [[ no = \\y\\e\\s ]]\r\n    + [[ sign_domains = \\r\\e\\g\\i\\s\\t\\e\\r ]]\r\n    + [[ -e /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/registration_info.json ]]\r\n    ++ cat /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/registration_info.json\r\n    ++ get_json_int_value id\r\n    ++ local filter\r\n    +++ printf 's/.*\"%s\": *\\([0-9]*\\).*/\\\\1/p' id\r\n    ++ filter='s/.*\"id\": *\\([0-9]*\\).*/\\1/p'\r\n    ++ sed -n 's/.*\"id\": *\\([0-9]*\\).*/\\1/p'\r\n    + ACCOUNT_ID=4935574\r\n    + [[ 2 -eq 1 ]]\r\n    + ACCOUNT_URL=https://acme-v02.api.letsencrypt.org/acme/acct/4935574\r\n    + hookscript_bricker_hook\r\n    + [[ -n '' ]]\r\n    + [[ -n '' ]]\r\n    + '[' '!' -d /opt/dehydrated/chains ']'\r\n    + [[ -n domain.de www.domain.de ]]\r\n    ++ _mktemp\r\n    ++ mktemp /tmp/dehydrated-XXXXXX\r\n    + DOMAINS_TXT=/tmp/dehydrated-FgkSDL\r\n    + [[ -n '' ]]\r\n    + printf -- 'domain.de www.domain.de'\r\n    + ORIGIFS=' \t\r\n    '\r\n    + IFS='\r\n    '\r\n    ++ tr -d '\\r'\r\n    ++ awk '{print tolower($0)}'\r\n    ++ _sed -e 's/^[[:space:]]*//g' -e 's/[[:space:]]*$//g' -e 's/[[:space:]]+/ /g' -e 's/([^ ])>/\\1 >/g' -e 's/> />/g'\r\n    ++ grep -vE '^(#|$)'\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r -e 's/^[[:space:]]*//g' -e 's/[[:space:]]*$//g' -e 's/[[:space:]]+/ /g' -e 's/([^ ])>/\\1 >/g' -e 's/> />/g'\r\n    + for line in $(<\"${DOMAINS_TXT}\" tr -d '\\r' | awk '{print tolower($0)}' | _sed -e 's/^[[:space:]]*//g' -e 's/[[:space:]]*$//g' -e 's/[[:space:]]+/ /g' -e 's/([^ ])>/\\1 >/g' -e 's/> />/g' | (grep -vE '^(#|$)' || true))\r\n    + reset_configvars\r\n    + KEY_ALGO=secp384r1\r\n    + OCSP_MUST_STAPLE=no\r\n    + PRIVATE_KEY_RENEW=yes\r\n    + KEYSIZE=4096\r\n    + CHALLENGETYPE=http-01\r\n    + HOOK=\r\n    + WELLKNOWN=/srv/http/dehydrated\r\n    + HOOK_CHAIN=no\r\n    + OPENSSL_CNF=/etc/ssl/openssl.cnf\r\n    + RENEW_DAYS=30\r\n    + IP_VERSION=\r\n    + IFS=' \t\r\n    '\r\n    ++ grep -Eo '>[^ ]+'\r\n    ++ true\r\n    + alias=\r\n    ++ _sed -e 's/>[^ ]+[ ]*//g'\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r -e 's/>[^ ]+[ ]*//g'\r\n    + line='domain.de www.domain.de'\r\n    ++ grep -Eo '>'\r\n    ++ awk 'END {print NR}'\r\n    ++ true\r\n    + aliascount=0\r\n    + '[' 0 -gt 1 ']'\r\n    ++ printf '%s\\n' 'domain.de www.domain.de'\r\n    ++ cut '-d ' -f1\r\n    + domain=domain.de\r\n    ++ printf '%s\\n' 'domain.de www.domain.de'\r\n    ++ cut -s '-d ' -f2-\r\n    + morenames=www.domain.de\r\n    + '[' 0 -lt 1 ']'\r\n    + alias=domain.de\r\n    + export alias\r\n    + [[ -z www.domain.de ]]\r\n    + echo 'Processing domain.de with alternative names: www.domain.de'\r\n    Processing domain.de with alternative names: www.domain.de\r\n    + '[' tb = '*.' ']'\r\n    + local certdir=/etc/ssl/reksys/domain.de\r\n    + cert=/etc/ssl/reksys/domain.de/cert.pem\r\n    + chain=/etc/ssl/reksys/domain.de/chain.pem\r\n    + force_renew=no\r\n    ++ date +%s\r\n    + timestamp=1521111302\r\n    + [[ ! -e /etc/ssl/reksys/domain.de ]]\r\n    + [[ -n '' ]]\r\n    + certconfig=/etc/ssl/reksys/domain.de/config\r\n    + '[' -f /etc/ssl/reksys/domain.de/config ']'\r\n    + verify_config\r\n    + [[ http-01 == \\h\\t\\t\\p\\-\\0\\1 ]]\r\n    + [[ http-01 = \\d\\n\\s\\-\\0\\1 ]]\r\n    + [[ http-01 = \\h\\t\\t\\p\\-\\0\\1 ]]\r\n    + [[ ! -d /srv/http/dehydrated ]]\r\n    + [[ secp384r1 == \\r\\s\\a ]]\r\n    + [[ secp384r1 == \\p\\r\\i\\m\\e\\2\\5\\6\\v\\1 ]]\r\n    + [[ secp384r1 == \\s\\e\\c\\p\\3\\8\\4\\r\\1 ]]\r\n    + [[ -n '' ]]\r\n    + [[ 2 == \\a\\u\\t\\o ]]\r\n    + [[ 2 == \\1 ]]\r\n    + [[ 2 == \\2 ]]\r\n    + hookscript_bricker_hook\r\n    + [[ -n '' ]]\r\n    + export WELLKNOWN CHALLENGETYPE KEY_ALGO PRIVATE_KEY_ROLLOVER\r\n    + skip=no\r\n    + local csr=\r\n    + [[ -n '' ]]\r\n    + [[ -e /etc/ssl/reksys/domain.de/cert.pem ]]\r\n    + printf ' + Checking domain name(s) of existing cert...'\r\n     + Checking domain name(s) of existing cert...++ openssl x509 -in /etc/ssl/reksys/domain.de/cert.pem -text -noout\r\n    ++ grep DNS:\r\n    ++ _sed s/DNS://g\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r s/DNS://g\r\n    ++ tr -d ' '\r\n    ++ tr , '\\n'\r\n    ++ sort -u\r\n    ++ _sed 's/ $//'\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r 's/ $//'\r\n    ++ tr '\\n' ' '\r\n    + certnames='domain.de www.domain.de'\r\n    ++ echo domain.de www.domain.de\r\n    ++ tr ' ' '\\n'\r\n    ++ sort -u\r\n    ++ tr '\\n' ' '\r\n    ++ _sed 's/ $//'\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r 's/ $//'\r\n    ++ _sed 's/^ //'\r\n    ++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    ++ sed -r 's/^ //'\r\n    + givennames='domain.de www.domain.de'\r\n    + [[ domain.de www.domain.de = \\t\\b\\-\\i\\t\\f\\.\\d\\e\\ \\w\\w\\w\\.\\t\\b\\-\\i\\t\\f\\.\\d\\e ]]\r\n    + echo ' unchanged.'\r\n     unchanged.\r\n    + [[ -e /etc/ssl/reksys/domain.de/cert.pem ]]\r\n    + echo ' + Checking expire date of existing cert...'\r\n     + Checking expire date of existing cert...\r\n    ++ openssl x509 -enddate -noout -in /etc/ssl/reksys/domain.de/cert.pem\r\n    ++ cut -d= -f2-\r\n    + valid='Apr  3 22:05:12 2018 GMT'\r\n    + printf ' + Valid till %s ' 'Apr  3 22:05:12 2018 GMT'\r\n     + Valid till Apr  3 22:05:12 2018 GMT + openssl x509 -checkend 2592000 -noout -in /etc/ssl/reksys/domain.de/cert.pem\r\n    Certificate will expire\r\n    + echo '(Less than 30 days). Renewing!'\r\n    (Less than 30 days). Renewing!\r\n    + local update_ocsp\r\n    + update_ocsp=no\r\n    + [[ ! no = \\y\\e\\s ]]\r\n    + update_ocsp=yes\r\n    + [[ -z '' ]]\r\n    + [[ '' = \\y\\e\\s ]]\r\n    + sign_domain /etc/ssl/reksys/domain.de 1521111302 domain.de www.domain.de\r\n    + local certdir=/etc/ssl/reksys/domain.de\r\n    + shift\r\n    + timestamp=1521111302\r\n    + shift\r\n    + domain=domain.de\r\n    + altnames='domain.de www.domain.de'\r\n    + export altnames\r\n    + echo ' + Signing domains...'\r\n     + Signing domains...\r\n    + [[ 2 -eq 1 ]]\r\n    + [[ 2 -eq 2 ]]\r\n    + [[ -z https://acme-v02.api.letsencrypt.org/acme/new-order ]]\r\n    + local privkey=privkey.pem\r\n    + [[ ! -e /etc/ssl/reksys/domain.de/cert-1521111302.csr ]]\r\n    + [[ ! -r /etc/ssl/reksys/domain.de/privkey.pem ]]\r\n    + [[ yes = \\y\\e\\s ]]\r\n    + echo ' + Generating private key...'\r\n     + Generating private key...\r\n    + privkey=privkey-1521111302.pem\r\n    + case \"${KEY_ALGO}\" in\r\n    + _openssl ecparam -genkey -name secp384r1 -out /etc/ssl/reksys/domain.de/privkey-1521111302.pem\r\n    + set +e\r\n    ++ openssl ecparam -genkey -name secp384r1 -out /etc/ssl/reksys/domain.de/privkey-1521111302.pem\r\n    + out=\r\n    + res=0\r\n    + set -e\r\n    + [[ 0 -ne 0 ]]\r\n    + [[ -r /etc/ssl/reksys/domain.de/privkey.pem ]]\r\n    + [[ -r /etc/ssl/reksys/domain.de/privkey.roll.pem ]]\r\n    + [[ ! -r /etc/ssl/reksys/domain.de/privkey.roll.pem ]]\r\n    + [[ no = \\y\\e\\s ]]\r\n    + [[ -r /etc/ssl/reksys/domain.de/privkey.roll.pem ]]\r\n    + echo ' + Generating signing request...'\r\n     + Generating signing request...\r\n    + SAN=\r\n    + for altname in ${altnames}\r\n    + SAN='DNS:domain.de, '\r\n    + for altname in ${altnames}\r\n    + SAN='DNS:domain.de, DNS:www.domain.de, '\r\n    + SAN='DNS:domain.de, DNS:www.domain.de'\r\n    + local tmp_openssl_cnf\r\n    ++ _mktemp\r\n    ++ mktemp /tmp/dehydrated-XXXXXX\r\n    + tmp_openssl_cnf=/tmp/dehydrated-72OBhF\r\n    + cat /etc/ssl/openssl.cnf\r\n    + printf '[SAN]\\nsubjectAltName=%s' 'DNS:domain.de, DNS:www.domain.de'\r\n    + '[' no = yes ']'\r\n    + SUBJ=/CN=domain.de/\r\n    + [[ Linux = \\M\\I\\N\\G\\W ]]\r\n    + openssl req -new -sha256 -key /etc/ssl/reksys/domain.de/privkey-1521111302.pem -out /etc/ssl/reksys/domain.de/cert-1521111302.csr -subj /CN=domain.de/ -reqexts SAN -config /tmp/dehydrated-72OBhF\r\n    + rm -f /tmp/dehydrated-72OBhF\r\n    + crt_path=/etc/ssl/reksys/domain.de/cert-1521111302.pem\r\n    + sign_csr '-----BEGIN CERTIFICATE REQUEST-----\r\n    MIIBQjCByQIBADAUMRIwEAYDVQQDDAl0Yi1pdGYuZGUwdjAQBgcqhkjOPQIBBgUr\r\n    gQQAIgNiAAS16k4FBwJC+I/vujHqCZb6+v4SO0crMmIC68ismpjh6oDHXB7IGRGf\r\n    ...\r\n    1nVuuav+aivS+STAZFQbLcGrqBOFDItDack+4yti55F/UIdWAjBHJD7WqFC56nm/\r\n    8SAy6FgipsC2m3Hy2KC5z7aUQh5ZODVz2cgONRib4EDtTX5ra5A=\r\n    -----END CERTIFICATE REQUEST-----' domain.de www.domain.de\r\n    + csr='-----BEGIN CERTIFICATE REQUEST-----\r\n    MIIBQjCByQIBADAUMRIwEAYDVQQDDAl0Yi1pdGYuZGUwdjAQBgcqhkjOPQIBBgUr\r\n    gQQAIgNiAAS16k4FBwJC+I/vujHqCZb6+v4SO0crMmIC68ismpjh6oDHXB7IGRGf\r\n    ...\r\n    1nVuuav+aivS+STAZFQbLcGrqBOFDItDack+4yti55F/UIdWAjBHJD7WqFC56nm/\r\n    8SAy6FgipsC2m3Hy2KC5z7aUQh5ZODVz2cgONRib4EDtTX5ra5A=\r\n    -----END CERTIFICATE REQUEST-----'\r\n    + :\r\n    + shift 1\r\n    + export 'altnames=domain.de www.domain.de'\r\n    + altnames='domain.de www.domain.de'\r\n    + [[ 2 -eq 1 ]]\r\n    + [[ 2 -eq 2 ]]\r\n    + [[ -z https://acme-v02.api.letsencrypt.org/acme/new-order ]]\r\n    + [[ -n '' ]]\r\n    + local -a challenge_identifiers challenge_uris challenge_tokens authorizations keyauths deploy_args\r\n    + [[ 2 -eq 2 ]]\r\n    + for altname in ${altnames}\r\n    ++ printf '{\"type\": \"dns\", \"value\": \"%s\"}, ' domain.de\r\n    + challenge_identifiers+='{\"type\": \"dns\", \"value\": \"domain.de\"}, '\r\n    + for altname in ${altnames}\r\n    ++ printf '{\"type\": \"dns\", \"value\": \"%s\"}, ' www.domain.de\r\n    + challenge_identifiers+='{\"type\": \"dns\", \"value\": \"www.domain.de\"}, '\r\n    + challenge_identifiers='[{\"type\": \"dns\", \"value\": \"domain.de\"}, {\"type\": \"dns\", \"value\": \"www.domain.de\"}]'\r\n    + echo ' + Requesting new certificate order from CA...'\r\n     + Requesting new certificate order from CA...\r\n    ++ signed_request https://acme-v02.api.letsencrypt.org/acme/new-order '{\"identifiers\": [{\"type\": \"dns\", \"value\": \"domain.de\"}, {\"type\": \"dns\", \"value\": \"www.domain.de\"}]}'\r\n    +++ printf %s '{\"identifiers\": [{\"type\": \"dns\", \"value\": \"domain.de\"}, {\"type\": \"dns\", \"value\": \"www.domain.de\"}]}'\r\n    +++ urlbase64\r\n    +++ openssl base64 -e\r\n    +++ tr -d '\\n\\r'\r\n    +++ _sed -e 's:=*$::g' -e y:+/:-_:\r\n    +++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    +++ sed -r -e 's:=*$::g' -e y:+/:-_:\r\n    ++ payload64=eyJpZGVudGlmaWVycyI6IFt7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInRiLWl0Zi5kZSJ9LCB7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInd3dy50Yi1pdGYuZGUifV19\r\n    ++ [[ 2 -eq 1 ]]\r\n    +++ http_request head https://acme-v02.api.letsencrypt.org/acme/new-nonce\r\n    +++ grep Replay-Nonce:\r\n    +++ awk -F ': ' '{print $2}'\r\n    +++ tr -d '\\n\\r'\r\n    ++++ _mktemp\r\n    ++++ mktemp /tmp/dehydrated-XXXXXX\r\n    +++ tempcont=/tmp/dehydrated-HqxbIU\r\n    ++++ _mktemp\r\n    ++++ mktemp /tmp/dehydrated-XXXXXX\r\n    +++ tempheaders=/tmp/dehydrated-spf8YA\r\n    +++ [[ -n '' ]]\r\n    +++ set +e\r\n    +++ [[ head = \\h\\e\\a\\d ]]\r\n    ++++ curl -A 'dehydr4ted/git-master-after-0.6.1 curl/7.58.0' -s -w '%{http_code}' -o /tmp/dehydrated-HqxbIU https://acme-v02.api.letsencrypt.org/acme/new-nonce -I\r\n    +++ statuscode=204\r\n    +++ touch /tmp/dehydrated-spf8YA\r\n    +++ curlret=0\r\n    +++ set -e\r\n    +++ [[ ! 0 = \\0 ]]\r\n    +++ [[ ! 2 = \\2 ]]\r\n    +++ echo 'checking pipe 4'\r\n    checking pipe 4\r\n    +++ echo 'using pipe 4'\r\n    using pipe 4\r\n    +++ cat /tmp/dehydrated-spf8YA\r\n    +++ echo 'getting curl output'\r\n    getting curl output\r\n    +++ cat /tmp/dehydrated-HqxbIU\r\n    +++ echo 'deleting temp files'\r\n    deleting temp files\r\n    +++ rm -f /tmp/dehydrated-HqxbIU\r\n    +++ rm -f /tmp/dehydrated-spf8YA\r\n    ++ nonce=QERa8pVhhvNWH8qt8JL6czKyp_IrG-FlEDlO5Sg_KxI\r\n    ++ header='{\"alg\": \"RS256\", \"jwk\": {\"e\": \"AQAB\", \"kty\": \"RSA\", \"n\": \"0luVIUjtsSJdQggopGB8rI9ewOVEl_8_XtO0DBERn3Fnlsfqg8jg-9Vz5COruax_ARTCyuygA2AQksSbyPL5AcwA3PWOxtgO-r5f9h5J1mmohXuXa8I4UPYFJgCNrFgYycqKPpj2_WVMjG0JAxY9_-cvsbvr0vMO5BD_Vzk7xUfY6SWLkmI-hof3rQYVqI8t0Ob3LVUmVxSvF9qGwZdlgWxx526WfHlM3-Fl2IDoOQC2Yw1JhGEas05j3ikv3EfgFduPLd6bhXuVLuy86vXIKCr0feRaKZu57zZ5P8wQMsLCR3BBSuAhq89ERQSEFExqrOWW97bUYVfvdypum3PDLyRUsuIA0C_NLFitQ-m3d2wxnyYpi1_hJr7nnAfKX5fFv0YHJPX57S81MvGVws47PO026LAYekR_1pij2GBzZLyjDgXtLrRWRvwvVf-TU8YJWIethCt1O4OKYl_dgpgTWcHXW188qpesq-0a80IkBobuZ2ETvV5vh1vsmcHIKVKrkhAf4Rxw_PvoBR8dlY2k3x-N2AJX5tL4MPgcitevIFL_J6iCEGEHvqLGNy6kbvzzYI2UoL-XQkdu5PL74kjxZbckjCeQfrfBsujD0UUXCaRhm0hxZvXxW-Ig9H2rGjdHmLhKJQhvw8V3l81k4xWY4Ts8xEui8EjFdG7H8IhIKsM\"}}'\r\n    ++ [[ 2 -eq 1 ]]\r\n    ++ [[ -n https://acme-v02.api.letsencrypt.org/acme/acct/4935574 ]]\r\n    ++ protected='{\"alg\": \"RS256\", \"kid\": \"https://acme-v02.api.letsencrypt.org/acme/acct/4935574\", \"url\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\", \"nonce\": \"QERa8pVhhvNWH8qt8JL6czKyp_IrG-FlEDlO5Sg_KxI\"}'\r\n    +++ printf %s '{\"alg\": \"RS256\", \"kid\": \"https://acme-v02.api.letsencrypt.org/acme/acct/4935574\", \"url\": \"https://acme-v02.api.letsencrypt.org/acme/new-order\", \"nonce\": \"QERa8pVhhvNWH8qt8JL6czKyp_IrG-FlEDlO5Sg_KxI\"}'\r\n    +++ urlbase64\r\n    +++ openssl base64 -e\r\n    +++ tr -d '\\n\\r'\r\n    +++ _sed -e 's:=*$::g' -e y:+/:-_:\r\n    +++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    +++ sed -r -e 's:=*$::g' -e y:+/:-_:\r\n    ++ protected64=eyJhbGciOiAiUlMyNTYiLCAia2lkIjogImh0dHBzOi8vYWNtZS12MDIuYXBpLmxldHNlbmNyeXB0Lm9yZy9hY21lL2FjY3QvNDkzNTU3NCIsICJ1cmwiOiAiaHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2FjbWUvbmV3LW9yZGVyIiwgIm5vbmNlIjogIlFFUmE4cFZoaHZOV0g4cXQ4Skw2Y3pLeXBfSXJHLUZsRURsTzVTZ19LeEkifQ\r\n    +++ openssl dgst -sha256 -sign /opt/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/account_key.pem\r\n    +++ urlbase64\r\n    +++ openssl base64 -e\r\n    +++ _sed -e 's:=*$::g' -e y:+/:-_:\r\n    +++ tr -d '\\n\\r'\r\n    +++ [[ Linux = \\L\\i\\n\\u\\x ]]\r\n    +++ sed -r -e 's:=*$::g' -e y:+/:-_:\r\n    +++ printf %s eyJhbGciOiAiUlMyNTYiLCAia2lkIjogImh0dHBzOi8vYWNtZS12MDIuYXBpLmxldHNlbmNyeXB0Lm9yZy9hY21lL2FjY3QvNDkzNTU3NCIsICJ1cmwiOiAiaHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2FjbWUvbmV3LW9yZGVyIiwgIm5vbmNlIjogIlFFUmE4cFZoaHZOV0g4cXQ4Skw2Y3pLeXBfSXJHLUZsRURsTzVTZ19LeEkifQ.eyJpZGVudGlmaWVycyI6IFt7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInRiLWl0Zi5kZSJ9LCB7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInd3dy50Yi1pdGYuZGUifV19\r\n    ++ signed64=npm3fZvoJr0vtdwBVPvaz2gZGDGDAh98B74Zlmr8Yb5AJoTjIwE8IMTZkwVfOS0qEahnyDHLugsLVh5HsIwFOJoKApQLNCHDaMJCBp7EqA5SLVHuInWVANLGLW9QHGOircmx8UB42yVhMZypWfLKC9ls9fc9OaAyFifHPP9oH01BCSsOup8iVDoRx6StgOzmP-hKyQxUkwyFBE3d98y2qikdRCiUZE0HLNOeP8xUNBjeDCYNclMp5HDB6OA2oreWcSJE2Ma6Q4wmXJhyURz7w2ZTsNpjQBSGv6uUJziHAclay1CyORytmqSFLW76MK-JRCUHli3vkPSDsLOPrK5uT-tU53EyROhDXfv4vupHnhyBn3XwGVYR5axTSY8hTx4e4gRxkYsGa6rnz6ZUnF99_hOgcifCSuJBO-GkK8naFWWVx1u6oPUQCO49mwCeFF21m7JELghpgWx0fWF-D2f0St2AH_P9RfzHzyKjwuJ9t8igN5e93k73IUSz_S0E7lg-5J4qFIvIfBfxK5LyFH3Piyra4jsNZz_7FKR9whHDTg0WrAUYnDvP0Rp2kEK9KAaSU7fyJrj5aJhoZPvlQBKePRVF3wCtcn7_XNtsyShPK9JlfvQFCQYuHrkE769a3DAH9m6Bl1RP4iN_juEKBt02vgk2jMKDS2ha1ZaAjZDWImw\r\n    ++ [[ 2 -eq 1 ]]\r\n    ++ data='{\"protected\": \"eyJhbGciOiAiUlMyNTYiLCAia2lkIjogImh0dHBzOi8vYWNtZS12MDIuYXBpLmxldHNlbmNyeXB0Lm9yZy9hY21lL2FjY3QvNDkzNTU3NCIsICJ1cmwiOiAiaHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2FjbWUvbmV3LW9yZGVyIiwgIm5vbmNlIjogIlFFUmE4cFZoaHZOV0g4cXQ4Skw2Y3pLeXBfSXJHLUZsRURsTzVTZ19LeEkifQ\", \"payload\": \"eyJpZGVudGlmaWVycyI6IFt7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInRiLWl0Zi5kZSJ9LCB7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInd3dy50Yi1pdGYuZGUifV19\", \"signature\": \"npm3fZvoJr0vtdwBVPvaz2gZGDGDAh98B74Zlmr8Yb5AJoTjIwE8IMTZkwVfOS0qEahnyDHLugsLVh5HsIwFOJoKApQLNCHDaMJCBp7EqA5SLVHuInWVANLGLW9QHGOircmx8UB42yVhMZypWfLKC9ls9fc9OaAyFifHPP9oH01BCSsOup8iVDoRx6StgOzmP-hKyQxUkwyFBE3d98y2qikdRCiUZE0HLNOeP8xUNBjeDCYNclMp5HDB6OA2oreWcSJE2Ma6Q4wmXJhyURz7w2ZTsNpjQBSGv6uUJziHAclay1CyORytmqSFLW76MK-JRCUHli3vkPSDsLOPrK5uT-tU53EyROhDXfv4vupHnhyBn3XwGVYR5axTSY8hTx4e4gRxkYsGa6rnz6ZUnF99_hOgcifCSuJBO-GkK8naFWWVx1u6oPUQCO49mwCeFF21m7JELghpgWx0fWF-D2f0St2AH_P9RfzHzyKjwuJ9t8igN5e93k73IUSz_S0E7lg-5J4qFIvIfBfxK5LyFH3Piyra4jsNZz_7FKR9whHDTg0WrAUYnDvP0Rp2kEK9KAaSU7fyJrj5aJhoZPvlQBKePRVF3wCtcn7_XNtsyShPK9JlfvQFCQYuHrkE769a3DAH9m6Bl1RP4iN_juEKBt02vgk2jMKDS2ha1ZaAjZDWImw\"}'\r\n    ++ http_request post https://acme-v02.api.letsencrypt.org/acme/new-order '{\"protected\": \"eyJhbGciOiAiUlMyNTYiLCAia2lkIjogImh0dHBzOi8vYWNtZS12MDIuYXBpLmxldHNlbmNyeXB0Lm9yZy9hY21lL2FjY3QvNDkzNTU3NCIsICJ1cmwiOiAiaHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2FjbWUvbmV3LW9yZGVyIiwgIm5vbmNlIjogIlFFUmE4cFZoaHZOV0g4cXQ4Skw2Y3pLeXBfSXJHLUZsRURsTzVTZ19LeEkifQ\", \"payload\": \"eyJpZGVudGlmaWVycyI6IFt7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInRiLWl0Zi5kZSJ9LCB7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInd3dy50Yi1pdGYuZGUifV19\", \"signature\": \"npm3fZvoJr0vtdwBVPvaz2gZGDGDAh98B74Zlmr8Yb5AJoTjIwE8IMTZkwVfOS0qEahnyDHLugsLVh5HsIwFOJoKApQLNCHDaMJCBp7EqA5SLVHuInWVANLGLW9QHGOircmx8UB42yVhMZypWfLKC9ls9fc9OaAyFifHPP9oH01BCSsOup8iVDoRx6StgOzmP-hKyQxUkwyFBE3d98y2qikdRCiUZE0HLNOeP8xUNBjeDCYNclMp5HDB6OA2oreWcSJE2Ma6Q4wmXJhyURz7w2ZTsNpjQBSGv6uUJziHAclay1CyORytmqSFLW76MK-JRCUHli3vkPSDsLOPrK5uT-tU53EyROhDXfv4vupHnhyBn3XwGVYR5axTSY8hTx4e4gRxkYsGa6rnz6ZUnF99_hOgcifCSuJBO-GkK8naFWWVx1u6oPUQCO49mwCeFF21m7JELghpgWx0fWF-D2f0St2AH_P9RfzHzyKjwuJ9t8igN5e93k73IUSz_S0E7lg-5J4qFIvIfBfxK5LyFH3Piyra4jsNZz_7FKR9whHDTg0WrAUYnDvP0Rp2kEK9KAaSU7fyJrj5aJhoZPvlQBKePRVF3wCtcn7_XNtsyShPK9JlfvQFCQYuHrkE769a3DAH9m6Bl1RP4iN_juEKBt02vgk2jMKDS2ha1ZaAjZDWImw\"}'\r\n    +++ _mktemp\r\n    +++ mktemp /tmp/dehydrated-XXXXXX\r\n    ++ tempcont=/tmp/dehydrated-iO9JdR\r\n    +++ _mktemp\r\n    +++ mktemp /tmp/dehydrated-XXXXXX\r\n    ++ tempheaders=/tmp/dehydrated-rXx9pq\r\n    ++ [[ -n '' ]]\r\n    ++ set +e\r\n    ++ [[ post = \\h\\e\\a\\d ]]\r\n    ++ [[ post = \\g\\e\\t ]]\r\n    ++ [[ post = \\p\\o\\s\\t ]]\r\n    +++ curl -A 'dehydr4ted/git-master-after-0.6.1 curl/7.58.0' -s -w '%{http_code}' -o /tmp/dehydrated-iO9JdR https://acme-v02.api.letsencrypt.org/acme/new-order -D /tmp/dehydrated-rXx9pq -H 'Content-Type: application/jose+json' -d '{\"protected\": \"eyJhbGciOiAiUlMyNTYiLCAia2lkIjogImh0dHBzOi8vYWNtZS12MDIuYXBpLmxldHNlbmNyeXB0Lm9yZy9hY21lL2FjY3QvNDkzNTU3NCIsICJ1cmwiOiAiaHR0cHM6Ly9hY21lLXYwMi5hcGkubGV0c2VuY3J5cHQub3JnL2FjbWUvbmV3LW9yZGVyIiwgIm5vbmNlIjogIlFFUmE4cFZoaHZOV0g4cXQ4Skw2Y3pLeXBfSXJHLUZsRURsTzVTZ19LeEkifQ\", \"payload\": \"eyJpZGVudGlmaWVycyI6IFt7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInRiLWl0Zi5kZSJ9LCB7InR5cGUiOiAiZG5zIiwgInZhbHVlIjogInd3dy50Yi1pdGYuZGUifV19\", \"signature\": \"npm3fZvoJr0vtdwBVPvaz2gZGDGDAh98B74Zlmr8Yb5AJoTjIwE8IMTZkwVfOS0qEahnyDHLugsLVh5HsIwFOJoKApQLNCHDaMJCBp7EqA5SLVHuInWVANLGLW9QHGOircmx8UB42yVhMZypWfLKC9ls9fc9OaAyFifHPP9oH01BCSsOup8iVDoRx6StgOzmP-hKyQxUkwyFBE3d98y2qikdRCiUZE0HLNOeP8xUNBjeDCYNclMp5HDB6OA2oreWcSJE2Ma6Q4wmXJhyURz7w2ZTsNpjQBSGv6uUJziHAclay1CyORytmqSFLW76MK-JRCUHli3vkPSDsLOPrK5uT-tU53EyROhDXfv4vupHnhyBn3XwGVYR5axTSY8hTx4e4gRxkYsGa6rnz6ZUnF99_hOgcifCSuJBO-GkK8naFWWVx1u6oPUQCO49mwCeFF21m7JELghpgWx0fWF-D2f0St2AH_P9RfzHzyKjwuJ9t8igN5e93k73IUSz_S0E7lg-5J4qFIvIfBfxK5LyFH3Piyra4jsNZz_7FKR9whHDTg0WrAUYnDvP0Rp2kEK9KAaSU7fyJrj5aJhoZPvlQBKePRVF3wCtcn7_XNtsyShPK9JlfvQFCQYuHrkE769a3DAH9m6Bl1RP4iN_juEKBt02vgk2jMKDS2ha1ZaAjZDWImw\"}'\r\n    ++ statuscode=201\r\n    ++ curlret=0\r\n    ++ set -e\r\n    ++ [[ ! 0 = \\0 ]]\r\n    ++ [[ ! 2 = \\2 ]]\r\n    ++ echo 'checking pipe 4'\r\n    checking pipe 4\r\n    ++ echo 'using pipe 4'\r\n    using pipe 4\r\n    ++ cat /tmp/dehydrated-rXx9pq\r\n    cat: Schreibfehler: Daten\u00fcbergabe unterbrochen (broken pipe)\r\n    + result=\r\n    + remove_lock\r\n    + rm -f /opt/dehydrated/lock\r\n    \r\n\r\n\r\n\r\n IT WORKED! :-D\r\n\r\nThe Certificate was created sucessfully. I will test it the next days but at the moment that could be the solutions for this strange problem.  I added *.domain.de to my domains.txt.\r\nAfter run ./dehydrated -c i get the message that this only works with dns01... but i cant figure out how dns01 works...\r\nI have a debian (8) server... can you explain it me ? @lukas2511 \r\nI already searched but i dont understand how i can figure out my dns server and how i can push the stuff to the dns server.. dns-01 is a method of validating your control of a domain. It requires the use of a hook script.\r\n\r\nIn order to implement this, you will need to keep a few things in mind:\r\n- If your domains.txt has a wildcard as the **first** entry on a line, you will need to set an alias for the certificate.\r\n- You will need to select the dns-01 challenge type in your main config or in your per-certificate config.\r\n- You will need to implement a hook script in order to process the dns-01 challenges. (Examples are given in the link @lukas2511 gave you.) @lukas2511 @txr13\r\nI think my dns provider has no api, so i want to add it manuell.\r\nShould no problem because i only have ONE domain.\r\nWhere i can find a tutorial for manuell dns01 challenge ? @Falseee I don't know where you can find a tutorial for that, but there are DNS hooks available that can print the required domains on the console (https://github.com/owhen/dns-01-manual), or email them to you (https://github.com/bennettp123/dehydrated-email-notify-hook).\r\n\r\nThese are both linked from the examples page that Lukas gave you. I have personally implemented both of these hooks for various cases, and they will certainly work... but the details of exactly _how_ they work will depend greatly on your own environment, and that's very likely not something that we can coach you through in this environment. On 14 Mar 2018, at 15:00, txr13 <notifications@github.com> wrote:\n> dns-01 is a method of validating your control of a domain. It requires the use of a hook script.\n\nI can\u2019t simply add the txt records to the DNS entry?\n\nI am overwhelmed by the choices available, and no mention of bind (which I use for DNS).\n\nThe issue on reading up on DNS01 is that $4 is a challenge string, but I don\u2019t know where that comes from.\n\n\n\n For BIND you will need to enable dynamic updates on the zone using allow-update {}; or update-policy {}; and then use the nsupdate method. For a beginner with dynamic DNS in BIND, I'd suggest starting off with allow-update {}; as that method only authenticates based on IP address of the client. However using update-policy {}; is far more secure in the long run.\r\n\r\nAn example of an allow-update configuration (added INSIDE a zone {} block) which would allow dynamic updates from clients who's IP address is 127.0.0.1:\r\n```\r\nallow-update { 127.0.0.1; };\r\n```\r\n\r\nTo use update-policy instead, simply running the command \"ddns-confgen\" on your command line will give you some basic instructions and generate you a new random key like so:\r\n```\r\n# To activate this key, place the following in named.conf, and\r\n# in a separate keyfile on the system or systems from which nsupdate\r\n# will be run:\r\nkey \"ddns-key\" {\r\n        algorithm hmac-sha256;\r\n        secret \"GnYdTr7w86nVkqXGympmFeBkcN071ysvMz+v6sfk51M=\";\r\n};\r\n\r\n# Then, in the \"zone\" statement for each zone you wish to dynamically\r\n# update, place an \"update-policy\" statement granting update permission\r\n# to this key.  For example, the following statement grants this key\r\n# permission to update any name within the zone:\r\nupdate-policy {\r\n        grant ddns-key zonesub ANY;\r\n};\r\n\r\n# After the keyfile has been placed, the following command will\r\n# execute nsupdate using this key:\r\nnsupdate -k <keyfile>\r\n```\r\n\r\nNote: After enabling dynamic updates for a zone in BIND, you will not be able to simply edit the zone file and run rndc reload to update the DNS anymore. The procedure to do so is either using nsupdate or run \"rndc freeze <zone>\", edit the zone file, then run \"rndc thaw <zone>\" to reload the updated data @LwsBtlr You absolutely can edit DNS by hand. Some of the hook scripts are built for that\u2014they tell you what TXT entries to make, and wait for you to do so.\r\n\r\nBut given a method to make your updates automated (like @jobe1986 has outlined), you should definitely look at it. The whole point of this is to have an Automated Certificate Management Environment, after all. ;) On 2018-03-16 (02:56 MDT), Matthew Beeching <notifications@github.com> wrote:\n> \n> However using update-policy {}; is far more secure in the long run.\n\nIs there LE-specific documentation on how to do this? update-policy isn't something I've run into before (I am not on dynamic DNS).\n\n\n\n  I'm trying using ACMEv2 and wildcard and I have some issues.\r\nMy ```domains.txt``` contains something like:\r\n```\r\nfoo.domain.tld *.foo.domain.tld bar.domain.tld\r\n```\r\nConfig for hook:\r\n```\r\nCHALLENGETYPE='dns-01'\r\nHOOK='/opt/pdns_api.sh/pdns_api.sh'\r\nHOOK_CHAIN=\"yes\"\r\n```\r\n\r\nWhen deploying using ```pdns_api.sh``` dns hook I got created two entries with a different challenge:\r\n```\r\n_acme-challenge.foo TXT SOME_VALUE1\r\n_acme-challenge.bar TXT SOME_VALUE2\r\n```\r\n\r\nBut in logs I get:\r\n```\r\nProcessing foo.domain.tld with alternative names: *.domain.tld bar.domain.tld\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting new certificate order from CA...\r\n + Received 3 authorizations URLs from the CA\r\n + Handling authorization for foo.domain.tld\r\n + Handling authorization for bar.domain.tld\r\n + Handling authorization for foo.domain.tld\r\n + 3 pending challenge(s)\r\n + Deploying challenge tokens...\r\n + Responding to challenge for foo.domain.tld authorization...\r\nERROR: Challenge is invalid! (returned: invalid) (result: {\r\n  \"type\": \"dns-01\",\r\n  \"status\": \"invalid\",\r\n  \"error\": {\r\n    \"type\": \"urn:ietf:params:acme:error:unauthorized\",\r\n    \"detail\": \"Incorrect TXT record \\\"SOME_VALUE1\\\" found at _acme-challenge.foo.domain.tld\",\r\n    \"status\": 403\r\n  },\r\n  \"url\": \"https://acme-staging-v02.api.letsencrypt.org/acme/challenge/xxx/xxx\",\r\n  \"token\": \"xxx\",\r\n  \"keyAuthorization\": \"xxx\"\r\n})\r\n```\r\nI also tried first with the production ACMEv2 and got the same issue.\r\n\r\nI ran with debug in config file and at one point it shows:\r\n```\r\nName:  _acme-challenge.bar.domain.tld.\r\nToken: SOME_VALUE2\r\nZone:  domain.tld.\r\nName:  _acme-challenge.foo.domain.tld.\r\nToken: SOME_VALUE3???\r\nZone:  domain.tld.\r\nName:  _acme-challenge.foo.domain.tld.\r\nToken: SOME_VALUE1\r\nZone:  domain.tld.\r\n```\r\n\r\nI see the same thing being pushed to pdns, with obviously only the \"last\" challenge in the update list being accepted for foo.domain.tld.\r\n\r\nIs it supported to have a cert with ```foo.domain.tld *.foo.domain.tld bar.domain.tld``` or there is a bug somewhere ?\r\n\r\n(Also I can't everytime reproduce it properly because randomly I only get a challenge generated for foo.domain.tld and nothing for bar.domain.tld :( ) Your hook and/or DNS software may need to be updated.\r\n\r\n`dehydrated` is generating the correct values for your DNS records. ACME validates a wildcard domain (*.foo.domain.tld) using the same DNS record **name** as for the parent non-wildcard domain (foo.domain.tld), but with a different record _value_. Your debug file is correctly showing you that you will need to have two different tokens uploaded, but both with the same name.\r\n\r\nThis is allowable under DNS. For example, if you look for TXT records under \"google.com.\" you will see two of them. (One is an SPF record, the other is a Docusign record.) When validating your certificate, ACME will check for all records under the required name. One will match the wildcard validator, and the other will match the non-wildcard validator.\r\n\r\nI don't know where the issue here lies--your hook may be calling an \"update\" operation in pdns which overwrites the first token, or pdns may not correctly support multiple TXT records for the same DNS name. But the issue does not lie within `dehydrated`.\r\n\r\n(If you have successfully validated bar.domain.tld, you may not be getting a challenge generated for it on follow-up runs, since ACME will re-use validated identifiers without requiring reauthorization, at least within a certain time frame.) Actually it doesn't need the wildcard to break at all. I've found that it needs 3 things to be in place at the same time. If\r\n\r\n- I use v2 endpoint (either prod or staging) AND\r\n- Use top-level domain, i.e. foobar.com AND\r\n- Use an alias\r\n\r\nI get this error. The 3rd one suggests that maybe it's something messed up dehydrated itself. If any of this isn't true it works fine. @bviktor If you're getting an error when using v2, validating the domain apex, and using an alias (but NOT validating a wildcard), you may want to open a separate issue. This one is specific to validating a wildcard and non-wildcard at the same time, whether there's an alias in use or not. My point is that these are most likely related to the same root problem. In fact, having\r\n\r\n~~~~\r\nfoo.com > foo.com\r\n~~~~\r\n\r\nCan be substituted with\r\n\r\n~~~~\r\nfoo.com *.foo.com\r\n~~~~\r\n\r\nThey both result in the same exact problem, assuming the other 2 conditions are also present (of course, wildcard cert implies v2).\r\n\r\nWhile\r\n\r\n~~~~\r\nfoo.com\r\n~~~~\r\n\r\nOr \r\n\r\n~~~~\r\n*.foo.com\r\n~~~~\r\n\r\nOr\r\n\r\n~~~~\r\nfoo.com bar.foo.com\r\n~~~~\r\n\r\nAll work. So it seems an issue with aliases, and maybe the same mechanism is in place when a wildcard cert is present after the root domain. That's not correct.\r\n\r\nFor one, multiple people report that requesting a certificate with wildcard and non-wildcard _works_. This issue is specific to the pdns hook.\r\n\r\nAliases are processed differently. Your second example of `foo.com *.foo.com` does not use an alias at all, so it won't be triggering whatever is causing your alias issue to occur. Aliases are not a substitute for a wildcard, and wildcards cannot be substituted for aliases. > For one, multiple people report that requesting a certificate with wildcard and non-wildcard works. This issue is specific to the pdns hook.\r\n\r\nIt's definitely not specific to the pdns hook because it happens to me with the certzure hook.\r\n\r\n> Aliases are processed differently. Your second example of foo.com *.foo.com does not use an alias at all, so it won't be triggering whatever is causing your alias issue to occur.\r\n\r\nBut dehydrated needs to generate a name for it, doesn't it? It won't create a `foo.com *.foo.com` folder, it'll be `foo.com`. Just like with an alias. Okay, then aliases have nothing to do with it. This issue is specifically about validating wildcards and non-wildcards in the same call.\r\n\r\nDoes the certzure hook allow you to create multiple records with the same DNS name simultaneously? Can you verify that you can see all records created via the hook in your DNS server, or are some missing? It can't create multiple records, but I don't understand why it's only a requirement for the above 3 conditions at the same time. I mean\r\n\r\n~~~~\r\nfoo.com bar.foo.com\r\n~~~~\r\n\r\nAlso requires 2 records, but dehydrated deploys and validates them one by one, be it v1 or v2. Why change this if having an alias _or_ a toplevel + wildcard?\r\n\r\nAlso, why would you need 2 records _at the same time_ for `foo.com > foo.com`? It's most certainly just one record. This \"multiple records at once\" reasoning doesn't add up for me. Let alone \"aliases have nothing to do with it\". Yes, they do. There's no multiple records, there's no wildcard, yet it still breaks. I remove the alias and it starts working. This issue is for validating a wildcard and non-wildcard domain at the same time. Specifically, this is using `HOOK_CHAIN=yes`. Which means the hook must be capable of deploying two TXT records, both of the form `_acme-challenge.foo.com.` but with two different tokens. One will validate the wildcard, and one will validate the non-wildcard.\r\n\r\nIf you're validating `foo.com` and `bar.foo.com` and they are being validated one by one (instead of at the same time), then you would appear to not be using `HOOK_CHAIN=yes`. And even if you were, you wouldn't be uploading two records of the same name--you would have two names (one of `_acme-challenge.foo.com.` and one of `_acme-challenge.bar.foo.com.`).\r\n\r\nIf you're having troubles with an alias, that's different again. An alias is used as a directory name / certificate-specific config filename, no more and no less. It does not impact the validation records at all. So if you're experiencing an issue with an alias, it should be put in a separate issue, so it doesn't get lost in the discussion over validation records. Is there documentation about how to do so? Currently this is what happens:\r\n\r\n~~~~\r\ndeploy_challenge A\r\ndeploy_challenge B\r\nclean_challenge A -> valid\r\nclean_challenge B -> invalid\r\n~~~~\r\n\r\nWhich is kinda weird to me because if `deploy_challenge B` overwrote `A` with `B` (which it did), then I'd assume that `clean_challenge A` should fail and `clean_challenge B` should succeed. Unless I'm missing something here.\r\n\r\nDo I have to add the token to the same `_acme-challenge` record as a 2nd value? But then which `clean_challenge` should delete which value? Will try to port certzure to azure-cli v2 coz I don't feel like messing around with Java too much. WIll make testing and debugging easier too. Then I'll get back to this issue.\r\n\r\nIn the meanwhile - what's \"hook-chaining\" and how do I use it? Google doesn't show up much... For those affected by this issue, there's a fix for pdns_api.sh: https://github.com/silkeh/pdns_api.sh/pull/17  I think that this code will be more usable in production.\r\nIf I switch to dns-01 generation of all certificates, this is not very convenient.  Improve the documentation on how to use wildcard domains.\r\n\r\nChange-Id: Ie2ea0b3bb397d3a78113b2c3d9280e418a229d95 The new CA URL is already the default, so the first part of your PR would probably confuse some people.\r\nThe domains.txt change is a nice touch, though. Kinda obvious, but probably still a good idea. ;-) I\u2019m somewhat concerned that the update would be confusing. We have the note about needing to use an alias if the wildcard is the first or only domain... followed by a \u201cfor example\u201d that doesn\u2019t actually provide an example of that behavior at all.\r\n\r\nThe example given is good\u2014for a certificate which has the wildcard as not the first or only domain. Set as an \u201cexample\u201d (implicitly) of the alias functionality, it could just be more confusing. > I\u2019m somewhat concerned that the update would be confusing. We have the note about needing to use an alias if the wildcard is the first or only domain... followed by a \u201cfor example\u201d that doesn\u2019t actually provide an example of that behavior at all.\r\n\r\nCan you give an example of what you think it should be? That was the only way I could figure out how to make a wildcard work. > Kinda obvious, but probably still a good idea. ;-)\r\n\r\nWell since it took me about 10 minutes trying to figure it out, it didn't seem obvious to me :)\r\n\r\nI first tried.\r\n\r\n    *.service.example.com\r\n\r\nThen:\r\n\r\n    *.service.example.com service.example.com\r\n\r\nThen started adding debug code before I figured it out. uhm, but it states that so right at the end of the document... anyways, i agree that this part of the change doesn't hurt, while the first part probably would. > uhm, but it states that so right at the end of the document... anyways, i agree that this part of the change doesn't hurt, while the first part probably would.\r\n\r\nThat is my point. It didn't make sense to me. In one part of the document it talks about ``alternative names`` in another part it talks about ``alias``. I'm not sure if they are the same thing or not.\r\n\r\n> Certificates with a wildcard domain as first (or only) name require an alias to be set.\r\n>  Aliases can't start with `*.`.\r\n\r\nTo me that implied that the wildcard domain is first, since it uses the word \"first\".\r\n > The new CA URL is already the default, so the first part of your PR would probably confuse some people.\r\n\r\nOkay. One question though. If someone has already been using dehydrated do they need to change the CA, or is it already changed? When I changed it, then I had to register and accept the terms. So it made me think it was not using the v1 endpoint. > Can you give an example of what you think it should be? That was the only way I could figure out how to make a wildcard work.\r\n\r\nFor example, you can use\r\n`service.example.com *.service.example.com`\r\nto create a certificate which covers both the domain itself and all subdomains under it. (Which is an extremely common use case!) The certificate directory name will be \"service.example.com\".\r\n\r\nIf you wish to create a certificate which _starts with_ a wildcard domain, you must use an alias. Your domains.txt file would then look like this:\r\n`*.service.example.com > certificate-alias`\r\nIn this case, the certificate directory name will be \"certificate-alias\"\r\n\r\nThe reason why this is required is because the first domain of a certificate is usually used as the directory name. However, if the first domain on a certificate is a wildcard, that would result in a directory name of `*.service.example.com`. As the star character is also used in many filesystems to represent a wildcard, it can lead to confusion or unexpected/unusual behavior while trying to navigate the filesystem. For this reason, if you wish to use a wildcard domain as the first domain in a certificate, an alias must be set so that the directory in the filesystem can be used without potential issue. > If someone has already been using dehydrated do they need to change the CA, or is it already changed?\r\n\r\nIf the CA is set to Let's Encrypt's V2 endpoint (whether manually or by default), _and_ an account exists for the V1 endpoint, `dehydrated` will symlink the V1 account to a V2 account transparently. @txr13 Thanks! That cleared up things a lot for me. I will make some updates :) @JohnVillalovos I like the new changes! I think that's much clearer. There's one more thing I want to mention. It's not so much a documentation issue, so much as an additional point that _may_ influence the documentation, or merit additional explanation.\r\n\r\nThe catch is this: a certificate for `*.service.example.com` is **not valid** for `service.example.com`. That wildcard is only valid for the subdomains _under_ service.example.com. Which is why it's so common to see a certificate which has `service.example.com` and then `*.service.example.com` as an alternate name. (In which case, no alias is needed at all.)\r\n\r\nThat's why `dehydrated` requires an alias, rather than simply stripping off the wildcard character. (Which was a potential solution discussed at the time.) This is not to mention the fact that, if you have a certificate for `service.example.com` as well, now the two certificates will collide.\r\n\r\nMy _suggestion_ would be to give an example with a proper alias, rather than simply stripping off the wildcard character. You may even wish to include the note about the fact that a wildcard doesn't cover the parent domain--I know that caught me by surprise the first time I ran into it. Because my guess is, the vast majority of users are going to want something that covers `service.example.com` **and** everything underneath it. > The catch is this: a certificate for *.service.example.com is not valid for service.example.com. That wildcard is only valid for the subdomains under service.example.com. Which is why it's so common to see a certificate which has service.example.com and then *.service.example.com as an alternate name. (In which case, no alias is needed at all.)\r\n\r\nI'll add a note that about ``*.service.example.com`` is not valid for ``service.example.com``\r\n\r\n> My suggestion would be to give an example with a proper alias, rather than simply stripping off the wildcard character. You may even wish to include the note about the fact that a wildcard doesn't cover the parent domain--I know that caught me by surprise the first time I ran into it. Because my guess is, the vast majority of users are going to want something that covers service.example.com and everything underneath it.\r\n\r\nIs the example at the bottom using an alternative name not good? I can make a note that it supports both ``*.service.example.com`` and ``service.example.com``\r\n\r\nI'll push up a new patch. > My suggestion would be to give an example with a proper alias, rather than simply stripping off the wildcard character.\r\n\r\nI didn't quite understand this at first, but I think I do now. I updated the patch to take that into account.  The certificate retrieved from Let's Encrypt ACMEv2 endpoint (both staging and production) contains both the end certificate and the intermediate certificate (which is conforming to 7.4.2 of the ACME draft). As a result, now the fullchain.pem file contains the intermediate certificate twice. Also worth noting is that the intermediate certificate included in the `cert-<id>.pem` file seems to have Windows EOL, while the certificate above has proper UNIX EOL, so there a newline type mix in the file (this is on RHEL7). > Also worth noting is that the intermediate certificate included in the cert-<id>.pem file seems to have Windows EOL\r\n\r\n@thias I think this is a mistake on the Let's Encrypt side. I opened https://github.com/letsencrypt/boulder/issues/3557 to track fixing this. I think you could just process the file using the openssl x509 module.\r\n\r\nOn my system (version 1.0.2g) the following command yields the right result:\r\n\r\n`openssl x509 -in cert.pem -out cert2.pem` > Also worth noting is that the intermediate certificate included in the cert-<id>.pem file seems to have Windows EOL, while the certificate above has proper UNIX EOL, so there a newline type mix in the file (this is on RHEL7).\r\n\r\n@thias This is fixed and should be consistently UNIX newlines now. Thanks for flagging it. @lukas2511 @cpu : Thanks for the quick fixes. Let's Encrypt with wildcard certificates rocks! Thank you sooo much for your great work on your respective projects, it's MUCH appreciated.  Hi Lukas,\r\n\r\n\r\nFirst of all, great piece of code. I really, really like it.\r\n\r\nIn my certificates I like to have a complete Distinguished Name (Subject) containing, company name, state, locality and so on. Nothing really outstanding.\r\nI was pleased to see that there is an OPENSSL_CNF variable in the config to link to a corresponding OpenSSL template.\r\n\r\nUnfortunately, in your function creating your CSR (sign_domain(), line: 803) as you call openssl, you use the option -subj, which replaces whatever configured DN, with what you give then. In dehydrator's case, the common name only.\r\n\r\nAn easy fix to this could be instead of giving the CN to openssl via an argument, simply stick it into the temporary openssl config, you already have (tmp_openssl_cnf).\r\n\r\nLet me know if you are interested in code contributions or prefer to fix \"simples\" like this yourself.\r\n\r\n\r\nGreets,\r\nStefan\r\n  Are you using dehydrated with Let's Encrypt? If so as I started in issue #439, it is worth noting LetsEncrypt strips out any fields from the subject identifier other then a commonName (CN) containing the primary host name of the certificate. So even if your CSR contained them, the certificate issued by LetsEncrypt would not.\r\n\r\nBasically the only time allowing additional fields in the subject would be acceptable is if you're using dehydrated with an ACME certificate authority service that allows fields other then commonName (CN) in the subject Hi jobe1986,\r\nHi lukas2511,\r\n\r\nSorry for wasting you time, wasn't aware of Lets Encrypt is stripping the DN. WHY???\r\nWhatever, thank you guys.\r\n\r\nGreets,\r\nStefan  +1 :D\r\n\r\nI already checked the docs. nginx and apache can do it. I will find out if haproxy can do it soon. Haproxy can do it perfectly, provided:\r\n1. The files are processed as before ($FULLCHAINFILE & $KEYFILE are combined into one .pem),\r\n2. The resulting files are named as `example.com.pem.rsa example.com.pem.ecdsa`\r\n\r\n\r\nI currently have a setup like this running by using two configs sharing the same account. Such an option would prove rather useful. For doing bundling, the file endings are required and cannot be configured to be different. However, if a setup only uses an RSA/ECDSA certificate it doesn't require the extension.\r\n\r\nThe config manual explains how it works towards the lower half of [the relevant section](http://cbonte.github.io/haproxy-dconv/1.8/configuration.html#5.1-crt). Nginx can do it, but you can't use it with \"`ssl_stapling_file`\". As Nginx allows multiple \"`ssl_certificate`\" statements but only allows one stapling file. Postfix can do it as well. I intend to use it with Postfix and look forward to this feature. +1 I'd like to use this feature as well. Would be great to have it.  Thanks for your work @lukas2511  would love to see this as well +1  https://community.letsencrypt.org/t/acme-v2-and-wildcard-certificate-support-is-live/55579  Hi lukas\r\nThanks for your script.\r\nby default, your script will request the certificate on the port 8123 but may I request a parameter to choose other port to request the certificate?\r\n\r\nthanks\r\n  What do you mean by requesting it on a different port?\r\n\r\nDehydrated does not control the ports used at all. ACME servers run on a predetermined port. The challenges are laid out by the ACME specification. These are not optional.\r\n\r\nOnce you have a certificate, you can use it on any port you like. Dehydrated does not control this, either.  I got this error, once:\r\n\r\n```\r\n + Requesting authorization for games.home.hotblocks.nl...\r\n  + ERROR: An error occurred while sending post-request to https://acme-v01.api.letsencrypt.org/acme/new-authz (Status 500)\r\n\r\nDetails:\r\nHTTP/1.1 100 Continue\r\nExpires: Sat, 10 Mar 2018 01:29:48 GMT\r\nCache-Control: max-age=0, no-cache, no-store\r\nPragma: no-cache\r\n\r\nHTTP/1.1 500 Internal Server Error\r\nServer: AkamaiGHost\r\nMime-Version: 1.0\r\nContent-Type: text/html\r\nContent-Length: 176\r\nExpires: Sat, 10 Mar 2018 01:29:48 GMT\r\nCache-Control: max-age=0, no-cache, no-store\r\nPragma: no-cache\r\nDate: Sat, 10 Mar 2018 01:29:48 GMT\r\nConnection: close\r\n\r\n<HTML><HEAD><TITLE>Error</TITLE></HEAD><BODY>\r\nAn error occurred while processing your request.<p>\r\nReference&#32;&#35;179&#46;13a9645f&#46;1520645388&#46;b9ed2bc\r\n</BODY></HTML>\r\n```\r\n\r\nThen I [updated Dehydrated](https://github.com/lukas2511/dehydrated/compare/c0bcf91...6e802dd) to head, and then it worked.\r\n\r\nSo no real problem, just sharing. Not sure if it was LE's fault or Dehydrated's. Do with it what you want.  Dehydrated is successfully creating the certificate for my domain, but is failing when attempting to create the fullchain file.  This happens with both the staging and production environment of Letsencrypt.  I'm using the script cloned from master (6e802ddc1949f3abe5283abfc5a07822ebc94ff9).\r\n\r\nHere is the relevant output from dehydrated (configured to use the staging CA in this case)\r\n```\r\nERROR: Problem connecting to server (get for http://cert.stg-int-x1.letsencrypt.org/; curl returned with 51)\r\nERROR: Walking chain has failed, your certificate has been created and can be found at ...\r\n```\r\n\r\nI used openssl to verify the \"CA Issuers\" for certs coming from letsencrypt.  \r\n\r\nFor the staging CA: `CA Issuers - URI:http://cert.stg-int-x1.letsencrypt.org/`\r\nFor the production CA: `CA Issuers - URI:http://cert.int-x3.letsencrypt.org/`\r\n\r\nThe curl command that fails is (staging CA, in this case):\r\n`curl -4 -A \"dehydr4ted/0.6.0 curl/7.58.0\" -L -s -w \"%{http_code}\" -o \"/tmp/dehydrated-HbaofE\" -D \"/tmp/dehydrated-hJegeK\" \"http://cert.int-x1.letsencrypt.org/\"`\r\n\r\nIf the command is run with the -k flag, the letsencrypt server is responding with 403.   I'm not sure if this is an issue with how dehydrated is trying to walk the chain, or with how letsencrypt is issuing / serving the certs.\r\n @ccitro This is caused by an ongoing website incident: https://letsencrypt.status.io/pages/incident/55957a99e800baa4470002da/5aa2c4df1e024002287ebe57 Apologies.\r\n\r\n@lukas2511 More generally, for ACMEv1 it would be preferable if Dehydrated fetched the issuer using the \"up\" `Link` header that's provided in the response from `new-cert` instead of pulling it out of the Certificate's AIA field. This is the more canonical ACME way of finding the issuer, and in this particular case would result in a URL that isn't affected by the website outage. For ACMEv2 its a non-issue, the full chain is returned with the certificate.  @cpu is there a work around we can do to assemble the cert chain manually since we already have the certs in hand? @jasonbouffard If you want to assemble a chain by hand the Let's Encrypt Authority X3 certificate that is the issuer for end-entity certificates at the time of writing (09/03/2018) is:\r\n```\r\n-----BEGIN CERTIFICATE-----\r\nMIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc2oLheynCDANBgkqhkiG9w0BAQsFADA/\r\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\r\nDkRTVCBSb290IENBIFgzMB4XDTE2MDMxNzE2NDA0NloXDTIxMDMxNzE2NDA0Nlow\r\nSjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxIzAhBgNVBAMT\r\nGkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFgzMIIBIjANBgkqhkiG9w0BAQEFAAOC\r\nAQ8AMIIBCgKCAQEAnNMM8FrlLke3cl03g7NoYzDq1zUmGSXhvb418XCSL7e4S0EF\r\nq6meNQhY7LEqxGiHC6PjdeTm86dicbp5gWAf15Gan/PQeGdxyGkOlZHP/uaZ6WA8\r\nSMx+yk13EiSdRxta67nsHjcAHJyse6cF6s5K671B5TaYucv9bTyWaN8jKkKQDIZ0\r\nZ8h/pZq4UmEUEz9l6YKHy9v6Dlb2honzhT+Xhq+w3Brvaw2VFn3EK6BlspkENnWA\r\na6xK8xuQSXgvopZPKiAlKQTGdMDQMc2PMTiVFrqoM7hD8bEfwzB/onkxEz0tNvjj\r\n/PIzark5McWvxI0NHWQWM6r6hCm21AvA2H3DkwIDAQABo4IBfTCCAXkwEgYDVR0T\r\nAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAYYwfwYIKwYBBQUHAQEEczBxMDIG\r\nCCsGAQUFBzABhiZodHRwOi8vaXNyZy50cnVzdGlkLm9jc3AuaWRlbnRydXN0LmNv\r\nbTA7BggrBgEFBQcwAoYvaHR0cDovL2FwcHMuaWRlbnRydXN0LmNvbS9yb290cy9k\r\nc3Ryb290Y2F4My5wN2MwHwYDVR0jBBgwFoAUxKexpHsscfrb4UuQdf/EFWCFiRAw\r\nVAYDVR0gBE0wSzAIBgZngQwBAgEwPwYLKwYBBAGC3xMBAQEwMDAuBggrBgEFBQcC\r\nARYiaHR0cDovL2Nwcy5yb290LXgxLmxldHNlbmNyeXB0Lm9yZzA8BgNVHR8ENTAz\r\nMDGgL6AthitodHRwOi8vY3JsLmlkZW50cnVzdC5jb20vRFNUUk9PVENBWDNDUkwu\r\nY3JsMB0GA1UdDgQWBBSoSmpjBH3duubRObemRWXv86jsoTANBgkqhkiG9w0BAQsF\r\nAAOCAQEA3TPXEfNjWDjdGBX7CVW+dla5cEilaUcne8IkCJLxWh9KEik3JHRRHGJo\r\nuM2VcGfl96S8TihRzZvoroed6ti6WqEBmtzw3Wodatg+VyOeph4EYpr/1wXKtx8/\r\nwApIvJSwtmVi4MFU5aMqrSDE6ea73Mj2tcMyo5jMd6jmeWUHK8so/joWUoHOUgwu\r\nX4Po1QYz+3dszkDqMp4fklxBwXRsW10KXzPMTZ+sOPAveyxindmjkW8lGy+QsRlG\r\nPfZ+G6Z6h7mjem0Y+iWlkYcV4PIWL1iwBi8saCbGS5jN2p8M+X+Q7UNKEkROb3N6\r\nKOqkqm57TH2H3eDJAkSnh6/DNFu0Qg==\r\n-----END CERTIFICATE-----\r\n``` ```\r\n...\r\n + Challenge is valid!\r\n + Requesting certificate...\r\n + Checking certificate...\r\n + Done!\r\n + Creating fullchain.pem...\r\n + Walking chain...\r\n  + ERROR: An error occurred while sending get-request to http://cert.int-x3.letsencrypt.org/ (Status 301)\r\n\r\nDetails:\r\n\r\n\r\nERROR: Walking chain has failed, your certificate has been created and can be found at /etc/dehydrated/certs/domain.com/cert-1520763845.pem, the corresponding private key at privkey-1520763845.pem. If you want you can manually continue on creating and linking all necessary files. If this error occurs again you should manually generate the certificate chain and place it under /etc/dehydrated/chains/4f06f81d.chain (see http://cert.int-x3.letsencrypt.org/)\r\n```\r\nAs a workaround you could add the curl parameter -L in the dehydrated script. Seems like curl is not following a redirect http to https\r\n```\r\n- statuscode=\"$(curl ${ip_version:-} ${CURL_OPTS} -s -w \"%{http_code}\" -o \"${tempcont}\" \"${2}\")\"\r\n+ statuscode=\"$(curl ${ip_version:-} ${CURL_OPTS} -L -s -w \"%{http_code}\" -o \"${tempcont}\" \"${2}\")\"\r\n```\r\nhttps://github.com/lukas2511/dehydrated/blob/v0.5.0/dehydrated#L427 @bobcanthelpyou This is already fixed in master (see commit 7a0e71c).  Firefox says:\r\n> dehydrated.de uses an invalid security certificate. The certificate expired on March 9, 2018, 08:40. The current time is March 9, 2018, 11:53. Error code: SEC_ERROR_EXPIRED_CERTIFICATE  thanks!  As stated on https://community.letsencrypt.org/t/jws-post-content-type-header-enforcement/55055 by @cpu\r\n\r\n> ACMEv2 API clients will be required to send all POST requests with a `Content-Type` header of `application/jose+json`  We just upgraded to the last version of dehydrated (prior version was: 4.0.X). After that, when running the script I see:\r\n\r\n> [2018-03-07 11:03:01] Unknown command: this_hookscript_is_broken__dehydrated_is_working_fine__please_ignore_unknown_hooks_in_your_script\r\n\r\nIn the CHANGELOG I could find this:\r\n\r\n> Calling random hook on startup to make it clear to hook script authors that unknown hooks should just be ignored...\r\n\r\nThe function that throws this message just checks whether the `HOOK` variable has any content and then it shows the message. I also understand that this is done on purpose, but I just can't understand the reason?\r\n\r\nWill it be wrong to specify a hook from now on? In our case this hook does a lot of work in terms of integration with our DNS server so it is unthinkable to remove it. If this is the wrong way to go, is there any other recommended way to do this? @nkovacne The example hook script in the repo illustrates how to whitelist particular functions in a hook script. All others will be ignored.\r\n\r\nIf you implement something like that, and whitelist only the functions implemented by your hook script, the error will go away. @txr13 Yep, in fact it was my fault. My hook file actually caught any undefined hook and sent to stdout the error message that I wrote in my first message (which I thought was sent by the dehydrated script). I simply removed the \"echo\" statement and it stopped showing up. Thanks.  i'm testing my setup with the current/v1 staging setup, and dehydrated -c fails in walk chain because\r\nhttp://cert.stg-int-x1.letsencrypt.org/ is no longer available in that location; instead letsencrypt redirects you to https://.\r\n\r\nworkaround for me: tell curl to follow redirections, ie add CURL_OPTS=\"-L\" to the dehydrated config.\r\n\r\n```\r\n$ dehydrated -e\r\n...\r\ndeclare -- CA=\"https://acme-staging.api.letsencrypt.org/directory\"\r\n...\r\n$ dehydrated -c\r\n...\r\n+ Creating fullchain.pem...\r\n + Walking chain...\r\n  + ERROR: An error occurred while sending get-request to http://cert.stg-int-x1.letsencrypt.org/ (Status 301)\r\n\r\nDetails:\r\n<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body bgcolor=\"white\">\r\n<center><h1>301 Moved Permanently</h1></center>\r\n<hr><center>nginx</center>\r\n</body>\r\n</html>\r\n\r\n\r\nERROR: Walking chain has failed, your certificate has been created and can be found at <hidden>, the corresponding private key at <hidden>.\r\n```\r\n\r\n you're right. i'm sorry for the noise; i'm using 0.5.0 and somehow i missed the commit comment about this having been fixed since the release.  If you make a Let's Encrypt cert for `*.example.com`, it does not cover `example.com`. This is normal. Most wildcard certs from other providers include the naked/apex domain in the SAN to cover it.\r\n\r\nThe problem is that LE will validate both the wildcard and the apex domain using the same key: `_acme-challenge.example.com`, and dehydrated is set up to deploy all challenge tokens before validation, even with HOOK_CHAIN=\"no\".\r\n\r\n```\r\n$ ./dehydrated -c -d '*.example.com' -d 'example.com' -t dns-01 -k ./hook.sh\r\nProcessing *.example.com with alternative names: example.com\r\n + Checking domain name(s) of existing cert... changed!\r\n + Domain name(s) are not matching!\r\n + Names in old certificate: *.example.com\r\n + Configured names: *.example.com example.com\r\n + Forcing renew.\r\n + Checking expire date of existing cert...\r\n + Valid till May 28 15:38:09 2018 GMT (Longer than 30 days). Ignoring because renew was forced!\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting new certificate order from CA...\r\n + Received 2 authorizations URLs from the CA\r\n + Handling authorization for example.com\r\n + Handling authorization for example.com\r\n + 2 pending challenge(s)\r\n + Deploying challenge tokens...\r\nCreating challenge record for example.com in zone example.com\r\nCreated record: '_acme-challenge.example.com. 60 IN TXT \"abc123\"'\r\nWaiting for sync.....................................\r\nCompleted\r\nCreating challenge record for example.com in zone example.com\r\nCreated record: '_acme-challenge.example.com. 60 IN TXT \"xyz987\"'\r\nWaiting for sync............................................\r\nCompleted\r\n + Responding to challenge for example.com authorization...\r\nFailed to issue SSL cert for example.com: {\r\n  \"type\": \"dns-01\",\r\n  \"status\": \"invalid\",\r\n  \"error\": {\r\n    \"type\": \"urn:ietf:params:acme:error:unauthorized\",\r\n    \"detail\": \"Incorrect TXT record \\\"xyz987\\\" found at _acme-challenge.example.com\",\r\n    \"status\": 403\r\n  },\r\n  \"url\": \"https://acme-staging-v02.api.letsencrypt.org/acme/challenge/...\",\r\n  \"token\": \"...\",\r\n  \"keyAuthorization\": \"...\"\r\n}\r\n``` Ah yes, I had forgotten that you can have multiple TXT records with the same name. I just now told my hook script to append the record instead of [replacing it](https://github.com/whereisaaron/dehydrated-route53-hook-script/blob/570dd4c/hook.sh#L40). Both values were then in DNS, and both were accepted by LE.\r\n\r\n```\r\n + Requesting new certificate order from CA...\r\n + Received 2 authorizations URLs from the CA\r\n + Handling authorization for example.com\r\n + Handling authorization for example.com\r\n + 2 pending challenge(s)\r\n + Deploying challenge tokens...\r\nCreating challenge record for example.com in zone example.com\r\nCreated record: '_acme-challenge.example.com. 60 IN TXT \"abc123\"'\r\nWaiting for sync........\r\nCompleted\r\nCreating challenge record for example.com in zone example.com\r\nCreated record: '_acme-challenge.example.com. 60 IN TXT \"xyz987\"'\r\nWaiting for sync........\r\nCompleted\r\n + Responding to challenge for example.com authorization...\r\nDeleting challenge record for example.com from zone example.com\r\n1 record sets deleted\r\n + Challenge is valid!\r\n + Responding to challenge for example.com authorization...\r\nDeleting challenge record for example.com from zone example.com\r\nWarning: no records matched - nothing deleted\r\n + Challenge is valid!\r\n + Requesting certificate...\r\n + Checking certificate...\r\n + Done!\r\n```\r\n\r\nThanks for your quick reply. :+1:   Hi @lukas2511 ,\r\n\r\nIt looks like presently `dehydrated` doesn't send its own `User-Agent` header in its ACME requests, instead using the UA set by `curl`. I did a quick search and it seems like you took a crack at setting one in https://github.com/lukas2511/dehydrated/commit/a5fde931f8602ec1334e8ad2e3471c6c7ceeb58d but backed the change out in https://github.com/lukas2511/dehydrated/commit/197ca8e82cbf25e4f8218cb1f7f9a0cd407fb494.\r\n\r\nWould you consider re-introducing a custom UA for `dehydrated`? It's a big help for ACME server operators that may be troubleshooting behaviour from server logs & trying to correlate with specific client implementations.\r\n\r\n[Section 6.1](https://tools.ietf.org/html/draft-ietf-acme-acme-09#section-6.1) of the ACME spec even goes as far as to say clients SHOULD set a UA:\r\n>  ACME clients SHOULD send a User-Agent header in accordance with [RFC7231], including the name and version of the ACME software in addition to the name and version of the underlying HTTP client software.\r\n\r\nThanks!\r\n\r\n @lukas2511 Ugh :anger:. I'll ask our operations team to see if there's something in the Akamai configuration that causes this. @lukas2511 They're going to look into this over the next day or two. I'll keep you updated here.\r\n\r\nGoing forward, please feel free to flag this sort of API issue on the [Boulder repo](https://github.com/letsencrypt/boulder) or in the [community forum](https://community.letsencrypt.org). I definitely had no idea this was happening! :laughing:  >  I guess this makes dehydr4ted the most 1337 client option available.\r\n\r\nHaha. :trophy: :computer: \r\n\r\n> @cpu any update on this?\r\n\r\nI poked our operations team about this again this morning and its on their radar but hasn't been addressed yet. If you'd like I can close this issue for now and reopen it when I've heard back. I promise I won't forget, it's in my notebook every day :-) Quick update: There's a change being staged that should resolve this in the next few days. I'll comment again when the change is active for staging/prod. Thanks! @lukas2511 Good news, I'm told the functionality causing the \"hydra\" substring block is disabled now. I'm not able to replicate it as before. You should be able to drop your 31337 spelling now :-) @lukas2511 Blech! The V2 environment is the one I used to spot-check the fix. Thanks, I'll pass this feedback along. @lukas2511 I'll have to confirm with our ops team (I don't have any visibility into Akamai settings). I believe it's part of the default WAF rules, I don't know if the WAF is enabled by default for Akamai customers. It's a very silly/naive rule that I expect was originally meant to deal with `thc-hydra`, an old tool for running online password guessing attacks. \r\n\r\nThe plan I've advocated that I believe is in-progress is to remove the WAF outright for API traffic: We don't benefit from the WAF in a way that justifies the surprising effects & support burden. Once disabled there shouldn't come a time when it gets reenabled suddenly with the default ruleset.\r\n\r\nThanks for your patience/help! Another update: The operations team member that was working on this has been out sick for several days. I will update here again when they're back and have had a chance to look into the incomplete fix. @lukas2511 I was generating some #'s in a pretty adhoc way to satisfy my own curiosity ahead of the public launch of ACME v2. I don't think there has been any discussion about sharing usage statistics with client authors. I'll ask around, maybe I can share some rough #s with you :-) @lukas2511 Ok, I think the UA/WAF problem is finally resolved. I'm able to hit the V1 staging env, the V2 staging env, the V1 prod env and the V2 prod env with the Dehydrated UA without any errors. Can you confirm you're seeing the same?  While hitting a Let's Encrypt rate limit dehydrated printed this error:\r\n\r\n``sed: invalid option -- 'E'``\r\n\r\nThis is caused by one occurrence in dehydrated where sed is used directly instead of the _sed wrapper. This pull requests fixes this.  I vote for failing if no alias is defined. I vote for `star_example.com` because the previous convention I've seen so far has been to use `star` in place of wildcard. Come to think of it, maybe davidolrik's way is the least confusing, so +1 for that, no wildcard if no alias, with a big fat error explaining the cause. How do other clients handle this? I'd be neat to agree upon a semi-standard for this. Failing without an alias seems the right decision, as long as there is a clear error along the line of \"wildcard domains must have an alias defined ...\" followed by a wildcard example.com with an alias Why not use `wildcard.example.com`? Technically `asterisk.example.com` would be more correct then `star.example.com`, but i can see that both names are more likely to be used in the wild than somebody actually having the hostname `wildcard.example.com` ;-)\r\nIf you think that's too risky, `wildcard_example.com` would get my vote. Dr\u00f6lf times more than `star_example.com`, at least. ;-)\r\nWhat about \"forcing\" the apex as the alias, if none is defined, and then using the apex as the identifier? If somebody wants to have a dedicated, separate cert for the apex, they'd only need to define an alias for the wildcard domain - even if it's just `wildcard.example.com`... I vote for wildcard_example.com. Seems be best solution. > I'd love to know how certbot is going to tackle this... The original naming scheme was basically copied from certbot and it would be great to keep some \"compatibility\" if their solution seems nice. Does anybody know something about that?\r\n\r\nOur plan for Certbot is to remove the leading `*.` so if you the first domain you provide to Certbot is `*.example.org`, the name of the files and directories we create by default will be `example.org`. I hate to reopen this, but I'm actually running into an issue because of this. I do not have the option for adding example.com as an alias for *.example.com, because we are blocking non-wildcard issuance at the apex of the domain (since our customers have their own hostnames as <something>example.com, and we want to avoid adding hundreds of thousands of CAA-records).\r\n\r\nOur only other option seems to be (if we want to keep using dehydrated for this) is to use another name that will either not be used, or be duplicate because it's already matched by *.example.com. I do believe that certbot's way of doing this is better (since validation is also done at the same _acme-challenge.example.com). But perhaps make it optional, with default of requiring the alias, and certbot's behaviour otherwise? We have to strip *. for the wildcard anyway (hook script, for example). If your certificate only contains a wild card name such as \"*.example.com\" you can have it place the certificates in a directory called \"wild.example.com\" by specifying the certificate in domains.txt like this:\r\n`*.example.com > wild.example.com`  When the script exits with a fatal error (`_exiterr`), the name of the script is not included. When the error is simply a message like \"This script requires curl.\", and this message appears in a system log file, it can be challenging to determine *which* script requires curl. \r\n\r\nThe proposed change is to include the script name in the message printed with `_exiterr`. Let's just say that if I already knew which script needed a `logger` pipe, I wouldn't have had this problem in the first place. I figured it out, but my proposed change was to help the next person with the same problem.  `dehydrated -c` silently quits without doing anything in the current master\r\n\r\nWhen commenting out this line (and adding an `echo \"\"` in the line after) it works as expected\r\nhttps://github.com/lukas2511/dehydrated/blob/0ade30cc7482353982e34529a52d714bae691a24/dehydrated#L86\r\n\r\nTested on Debian Jessie and Ubuntu 14.04 I don't have a hook script, so it can't be an issue with the script.\r\n\r\nI'll check it again in a few hours if the issue is fixed  One of the changes made today appears to have started making Dehydrated start exiting with a non-zero status even when everything goes fine. We are seeing the problem on Laravel Forge.  Needs command line usage examples :)    `./dehydrated -c -d example.etc -t dns-01 -k 'hooks/cloudflare/hook.py'`\r\n\r\n```\r\n# INFO: Using main config file /root/dehydrated/config\r\n + CloudFlare hook executing: *some key*\r\nTraceback (most recent call last):\r\n  File \"hooks/cloudflare/hook.py\", line 206, in <module>\r\n    main(sys.argv[1:])\r\n  File \"hooks/cloudflare/hook.py\", line 202, in main\r\n    ops[argv[0]](argv[1:])\r\nKeyError: '*some key*=='\r\n\r\n``` sorry wrong script, issue for hook script I was having this exact same error with le-godaddy-dns hook.\r\nI've managed to make it work by using an old version of Dehydrated.\r\nHere's my original post with the dev: josteink/le-godaddy-dns#15 @lukas2511 Awesome, thank you Sir !  I've always just built from master (and am now using tagged releases).\r\n\r\nThis is along with the recommended cloudflare hook (kappataumu/letsencrypt-cloudflare-hook) Thanks @lukas2511  @lukas2511 Apologies for this, should have addressed the issue earlier.  The host names of these devices will still need to be publicly reachable, though, right?\r\nOr am I missing something here. \ud83e\udd14  That's what I figured. I'll have to look into DNS-based verification some more. Thanks for the quick reply (and dehydrated in general \u2764\ufe0f)!  Since dehydrated 0.5.0, when I run `dehydrated -c -g` only the first domain in my `domains.txt` is being checked / renewed.\r\nThe cron job works as expected (run via FreeBSD periodic scripts), but when I run it manually only one domain gets checked. There is no exit code \u2013 the execution just ends (note that since I added an alias for the first domain, the first two lines are being executed):\r\n\r\n```\r\n~ # \u276f\u276f\u276f dehydrated -c -g\r\n# INFO: Using main config file /usr/local/etc/dehydrated/config\r\nProcessing www.[XXX].com with alternative names: [XXX].com www.[XXX].de [XXX].de\r\n + Checking domain name(s) of existing cert... unchanged.\r\n + Checking expire date of existing cert...\r\n + Valid till Apr  6 02:48:35 2018 GMT (Longer than 30 days). Skipping renew!\r\n + OSCP stapling file is still valid (skipping update)\r\nProcessing www.[XXX].com with alternative names: [XXX].com www.[XXX].de [XXX].de\r\n + Using certificate specific config file!\r\n   + KEY_ALGO = secp384r1\r\n + Checking domain name(s) of existing cert... unchanged.\r\n + Checking expire date of existing cert...\r\n + Valid till May  7 13:10:53 2018 GMT (Longer than 30 days). Skipping renew!\r\n + Updating OCSP stapling file\r\n~ # \u276f\u276f\u276f\r\n```\r\n\r\nThis is my main config (note that for some reason the file `registration_info.json` does *not* exist:\r\n```\r\n~ # \u276f\u276f\u276f dehydrated -e\r\n# dehydrated configuration\r\n# INFO: Using main config file /usr/local/etc/dehydrated/config\r\ndeclare -- CA=\"https://acme-v01.api.letsencrypt.org/directory\"\r\ndeclare -- LICENSE=\"\"\r\ndeclare -- CERTDIR=\"/usr/local/etc/dehydrated/certs\"\r\ndeclare -- CHALLENGETYPE=\"http-01\"\r\ndeclare -- DOMAINS_D=\"\"\r\ndeclare -- DOMAINS_TXT=\"/usr/local/etc/dehydrated/domains.txt\"\r\ndeclare -- HOOK=\"/usr/local/etc/dehydrated/hook.sh\"\r\ndeclare -- HOOK_CHAIN=\"no\"\r\ndeclare -- RENEW_DAYS=\"30\"\r\ndeclare -- ACCOUNT_KEY=\"/usr/local/etc/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMS5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/account_key.pem\"\r\ndeclare -- ACCOUNT_KEY_JSON=\"/usr/local/etc/dehydrated/accounts/aHR0cHM6Ly9hY21lLXYwMS5hcGkubGV0c2VuY3J5cHQub3JnL2RpcmVjdG9yeQo/registration_info.json\"\r\ndeclare -- KEYSIZE=\"4096\"\r\ndeclare -- WELLKNOWN=\"/usr/local/www/dehydrated\"\r\ndeclare -- PRIVATE_KEY_RENEW=\"yes\"\r\ndeclare -- OPENSSL_CNF=\"/usr/local/etc/ssl/openssl.cnf\"\r\ndeclare -- CONTACT_EMAIL=\"hostmaster@[XXX].comcom\"\r\ndeclare -- LOCKFILE=\"/usr/local/etc/dehydrated/lock\"\r\n```\r\n\r\nThis is my `domains.txt`:\r\n```\r\nwww.[XXX].com [XXX].com www.[XXX].de [XXX].de\r\nwww.[XXX].com [XXX].com www.[XXX].de [XXX].de > www.[XXX].com.ecdsa\r\ncloud.[XXX].com\r\ncloud.[XXX].com > cloud.[XXX].com.ecdsa\r\ntools.[XXX].com push.[XXX].com adminer.[XXX].com webmail.[XXX].com rspamd.[XXX].com\r\ntools.[XXX].com push.[XXX].com adminer.[XXX].com webmail.[XXX].com rspamd.[XXX].com > tools.[XXX].com.ecdsa\r\nmail.[XXX].com\r\nmail.[XXX].com > mail.[XXX].com.ecdsa\r\n```\r\n\r\nand this is my `www.[XXX].com.ecdsa/config`:\r\n```\r\n# Which public key algorithm should be used? Supported: rsa, prime256v1 and secp384r1\r\nKEY_ALGO=\"secp384r1\"\r\n``` yes, it works when disabling `COSP_FETCH`\r\n\r\nAny information on why I don't have the file `registration_info.json`?\r\nAnd: Is IP_VERSION on a per-certificate basis planned for future releases?\r\n\r\nThanks!\r\n\r\nThese are the last few dozen lines:\r\n\r\n```\r\n++ echo cert.csr\r\n++ cut -d. -f1\r\n+ filebase=cert\r\n++ echo cert.csr\r\n++ cut -d. -f2\r\n+ fileext=csr\r\n+ for file in \"${certdir}/${filebase}-\"*\".${fileext}\" \"${certdir}/${filebase}-\"*\".${fileext}-revoked\"\r\n++ basename /usr/local/etc/dehydrated/certs/www.[XXX].com.ecdsa/cert-1517926233.csr\r\n+ filename=cert-1517926233.csr\r\n+ [[ ! cert-1517926233.csr = \\c\\e\\r\\t\\-\\1\\5\\1\\7\\9\\2\\6\\2\\3\\3\\.\\c\\s\\r ]]\r\n+ for filetype in cert.csr cert.pem chain.pem fullchain.pem privkey.pem ocsp.der\r\n+ [[ -r /usr/local/etc/dehydrated/certs/www.[XXX].com.ecdsa/cert.pem ]]\r\n+++ readlink /usr/local/etc/dehydrated/certs/www.[XXX].com.ecdsa/cert.pem\r\n++ basename cert-1517926233.pem\r\n+ current=cert-1517926233.pem\r\n++ echo cert.pem\r\n++ cut -d. -f1\r\n+ filebase=cert\r\n++ echo cert.pem\r\n++ cut -d. -f2\r\n+ fileext=pem\r\n+ for file in \"${certdir}/${filebase}-\"*\".${fileext}\" \"${certdir}/${filebase}-\"*\".${fileext}-revoked\"\r\n++ basename /usr/local/etc/dehydrated/certs/www.[XXX].com.ecdsa/cert-1517926233.pem\r\n+ filename=cert-1517926233.pem\r\n+ [[ ! cert-1517926233.pem = \\c\\e\\r\\t\\-\\1\\5\\1\\7\\9\\2\\6\\2\\3\\3\\.\\p\\e\\m ]]\r\n+ for filetype in cert.csr cert.pem chain.pem fullchain.pem privkey.pem ocsp.der\r\n+ [[ -r /usr/local/etc/dehydrated/certs/www.[XXX].com.ecdsa/chain.pem ]]\r\n+++ readlink /usr/local/etc/dehydrated/certs/www.[XXX].com.ecdsa/chain.pem\r\n++ basename chain-1517926233.pem\r\n+ current=chain-1517926233.pem\r\n++ echo chain.pem\r\n++ cut -d. -f1\r\n+ filebase=chain\r\n++ echo chain.pem\r\n++ cut -d. -f2\r\n+ fileext=pem\r\n+ for file in \"${certdir}/${filebase}-\"*\".${fileext}\" \"${certdir}/${filebase}-\"*\".${fileext}-revoked\"\r\n++ basename /usr/local/etc/dehydrated/certs/www.[XXX].com.ecdsa/chain-1517926233.pem\r\n+ filename=chain-1517926233.pem\r\n+ [[ ! chain-1517926233.pem = \\c\\h\\a\\i\\n\\-\\1\\5\\1\\7\\9\\2\\6\\2\\3\\3\\.\\p\\e\\m ]]\r\n+ for filetype in cert.csr cert.pem chain.pem fullchain.pem privkey.pem ocsp.der\r\n+ [[ -r /usr/local/etc/dehydrated/certs/www.[XXX].com.ecdsa/fullchain.pem ]]\r\n+++ readlink /usr/local/etc/dehydrated/certs/www.[XXX].com.ecdsa/fullchain.pem\r\n++ basename fullchain-1517926233.pem\r\n+ current=fullchain-1517926233.pem\r\n++ echo fullchain.pem\r\n++ cut -d. -f1\r\n+ filebase=fullchain\r\n++ echo fullchain.pem\r\n++ cut -d. -f2\r\n+ fileext=pem\r\n+ for file in \"${certdir}/${filebase}-\"*\".${fileext}\" \"${certdir}/${filebase}-\"*\".${fileext}-revoked\"\r\n++ basename /usr/local/etc/dehydrated/certs/www.[XXX].com.ecdsa/fullchain-1517926233.pem\r\n+ filename=fullchain-1517926233.pem\r\n+ [[ ! fullchain-1517926233.pem = \\f\\u\\l\\l\\c\\h\\a\\i\\n\\-\\1\\5\\1\\7\\9\\2\\6\\2\\3\\3\\.\\p\\e\\m ]]\r\n+ for filetype in cert.csr cert.pem chain.pem fullchain.pem privkey.pem ocsp.der\r\n+ [[ -r /usr/local/etc/dehydrated/certs/www.[XXX].com.ecdsa/privkey.pem ]]\r\n+++ readlink /usr/local/etc/dehydrated/certs/www.[XXX].com.ecdsa/privkey.pem\r\n++ basename privkey-1517926233.pem\r\n+ current=privkey-1517926233.pem\r\n++ echo privkey.pem\r\n++ cut -d. -f1\r\n+ filebase=privkey\r\n++ echo privkey.pem\r\n++ cut -d. -f2\r\n+ fileext=pem\r\n+ for file in \"${certdir}/${filebase}-\"*\".${fileext}\" \"${certdir}/${filebase}-\"*\".${fileext}-revoked\"\r\n++ basename /usr/local/etc/dehydrated/certs/www.[XXX].com.ecdsa/privkey-1517926233.pem\r\n+ filename=privkey-1517926233.pem\r\n+ [[ ! privkey-1517926233.pem = \\p\\r\\i\\v\\k\\e\\y\\-\\1\\5\\1\\7\\9\\2\\6\\2\\3\\3\\.\\p\\e\\m ]]\r\n+ for filetype in cert.csr cert.pem chain.pem fullchain.pem privkey.pem ocsp.der\r\n+ [[ -r /usr/local/etc/dehydrated/certs/www.[XXX].com.ecdsa/ocsp.der ]]\r\n+++ readlink /usr/local/etc/dehydrated/certs/www.[XXX].com.ecdsa/ocsp.der\r\n++ basename ocsp-1517938814.der\r\n+ current=ocsp-1517938814.der\r\n++ echo ocsp.der\r\n++ cut -d. -f1\r\n+ filebase=ocsp\r\n++ echo ocsp.der\r\n++ cut -d. -f2\r\n+ fileext=der\r\n+ for file in \"${certdir}/${filebase}-\"*\".${fileext}\" \"${certdir}/${filebase}-\"*\".${fileext}-revoked\"\r\n++ basename /usr/local/etc/dehydrated/certs/www.[XXX].com.ecdsa/ocsp-1517938814.der\r\n+ filename=ocsp-1517938814.der\r\n+ [[ ! ocsp-1517938814.der = \\o\\c\\s\\p\\-\\1\\5\\1\\7\\9\\3\\8\\8\\1\\4\\.\\d\\e\\r ]]\r\n+ exit 0\r\n+ remove_lock\r\n+ rm -f /usr/local/etc/dehydrated/lock\r\n``` \r\n```\r\n+ [[ -e /usr/local/etc/dehydrated/certs/cloud.[XXX].com/cert.pem ]]\r\n+ echo ' + Checking expire date of existing cert...'\r\n + Checking expire date of existing cert...\r\n++ openssl x509 -enddate -noout -in /usr/local/etc/dehydrated/certs/cloud.[XXX].com/cert.pem\r\n++ cut -d= -f2-\r\n+ valid='Apr  6 02:48:42 2018 GMT'\r\n+ printf ' + Valid till %s ' 'Apr  6 02:48:42 2018 GMT'\r\n + Valid till Apr  6 02:48:42 2018 GMT + openssl x509 -checkend 2592000 -noout -in /usr/local/etc/dehydrated/certs/cloud.[XXX].com/cert.pem\r\n+ printf '(Longer than %d days). ' 30\r\n(Longer than 30 days). + [[ no = \\y\\e\\s ]]\r\n+ echo 'Skipping renew!'\r\nSkipping renew!\r\n+ [[ -n /usr/local/etc/dehydrated/hook.sh ]]\r\n+ /usr/local/etc/dehydrated/hook.sh unchanged_cert cloud.[XXX].com /usr/local/etc/dehydrated/certs/cloud.[XXX].com/privkey.pem /usr/local/etc/dehydrated/certs/cloud.[XXX].com/cert.pem /usr/local/etc/dehydrated/certs/cloud.[XXX].com/fullchain.pem /usr/local/etc/dehydrated/certs/cloud.[XXX].com/chain.pem\r\n+ skip=yes\r\n+ local update_ocsp\r\n+ update_ocsp=no\r\n+ [[ ! yes = \\y\\e\\s ]]\r\n+ [[ yes = \\y\\e\\s ]]\r\n+ local ocsp_url\r\n++ get_ocsp_url /usr/local/etc/dehydrated/certs/cloud.[XXX].com/cert.pem\r\n++ certificate=/usr/local/etc/dehydrated/certs/cloud.[XXX].com/cert.pem\r\n++ openssl x509 -in /usr/local/etc/dehydrated/certs/cloud.[XXX].com/cert.pem -noout -ocsp_uri\r\n+ ocsp_url=http://ocsp.int-x3.letsencrypt.org\r\n+ [[ ! -e /usr/local/etc/dehydrated/certs/cloud.[XXX].com/ocsp.der ]]\r\n+ update_ocsp=yes\r\n+ [[ yes = \\y\\e\\s ]]\r\n+ echo ' + Updating OCSP stapling file'\r\n + Updating OCSP stapling file\r\n++ date +%s\r\n+ ocsp_timestamp=1517940370\r\n+ grep -qE '^(0|(1\\.0))\\.'\r\n++ openssl version\r\n++ awk '{print $2}'\r\n+ openssl ocsp -no_nonce -issuer /usr/local/etc/dehydrated/certs/cloud.[XXX].com/chain.pem -verify_other /usr/local/etc/dehydrated/certs/cloud.[XXX].com/chain.pem -cert /usr/local/etc/dehydrated/certs/cloud.[XXX].com/cert.pem -respout /usr/local/etc/dehydrated/certs/cloud.[XXX].com/ocsp-1517940370.der -url http://ocsp.int-x3.letsencrypt.org\r\n+ remove_lock\r\n+ rm -f /usr/local/etc/dehydrated/lock\r\n```\r\n\r\n```\r\n~ # \u276f\u276f\u276f openssl version\r\nLibreSSL 2.6.4\r\n```\r\nIt does work in any case with OpenSSL (just checked)  With the globbing changes made in 61083cf52231e09e3a9b599d602c06978704ec57 to globally disable globbing by default, this broke the ability to load the CONFIG_D `*.sh` files.\r\n\r\nThis re-enables globbing when reading these `*.sh` files and then disables it again afterwards. Note that this also keeps globbing enabled inside the loop, when sourcing the individual `*.sh` files for backwards compatibility (so if the individual config scripts relied on the default of globbing being enabled, there won't be any change in behavior).   `openssl genrsa` and `openssl ecparam -genkey` tend to chmod the output\r\nfile to make the private key unreadable by group and others. This breaks\r\na workflow where admin uses POSIX ACLs to manage keys' access rights,\r\nbecause POSIX ACLs reuse group permissions for the \"ACL mask\", hence\r\nforcing group permissions to 0 with plain chmod() masks away all\r\nextended ACLs.\r\n\r\nBy redirecting genrsa output from stdout we avoid this behavior while\r\nstaying secure even if ACLs are not used because we explicitly set\r\n`umask 077` in the beginning of the script.\r\n\r\nExample of the broken behavior:\r\n```\r\n# pwd                 \r\n/etc/admin/certs/intelfx.name\r\n\r\n# getfacl .\r\n# file: .\r\n# owner: letsencrypt\r\n# group: letsencrypt\r\nuser::rwx\r\ngroup::---\r\ngroup:http-cert:r-x\r\nmask::r-x\r\nother::---\r\ndefault:user::rwx\r\ndefault:group::---\r\ndefault:group:http-cert:r-x\r\ndefault:mask::r-x\r\ndefault:other::---\r\n\r\n# getfacl cert.pem\r\n# file: cert.pem\r\n# owner: letsencrypt\r\n# group: letsencrypt\r\nuser::rw-\r\ngroup::---\r\ngroup:http-cert:r--\r\nmask::r--\r\nother::---\r\n\r\n# getfacl privkey.pem           \r\n# file: privkey.pem\r\n# owner: letsencrypt\r\n# group: letsencrypt\r\nuser::rw-\r\ngroup::---\r\ngroup:http-cert:r--             #effective:---\r\nmask::---\r\nother::---\r\n```\r\n\r\nHere I run dehydrated as `letsencrypt:letsencrypt` and use group `http-cert` for all applications that need access to the certificates and the private key. The output directory is modified as follows:\r\n```\r\nsetfacl -m u::rwX,g::0,o::0 -m g:http-cert:rX .\r\nsetfacl -d -m u::rwX,g::0,o::0 -m g:http-cert:rX .\r\n``` Note that I had to non-trivially change the definition of `_openssl()` to let stdout through \u2014  while my bash-fu is mostly fine, I don't really know if this is OK semantically. Ugh, so it is _not_, at least when checking certificate for corruption it makes certificate details leak to the terminal. OK, made it a separate wrapper which we use only for genrsa/genkey. openssl 1.1.0g, can reproduce.\r\n\r\n```\r\n$ export LC_ALL=C\r\n\r\n$ pacman -Qi openssl | grep Version\r\nVersion         : 1.1.0.g-1\r\n\r\n$ getfacl .\r\n# file: .\r\n# owner: operator\r\n# group: users\r\nuser::rwx\r\ngroup::---\r\ngroup:http-cert:r-x\r\nmask::r-x\r\nother::---\r\ndefault:user::rwx\r\ndefault:group::---\r\ndefault:group:http-cert:r-x\r\ndefault:mask::r-x\r\ndefault:other::---\r\n\r\n$ openssl genrsa -out key1.rsa 4096\r\nGenerating RSA private key, 4096 bit long modulus\r\n...................++\r\n..............++\r\ne is 65537 (0x010001)\r\n\r\n$ openssl genrsa 4096 > key2.rsa\r\nGenerating RSA private key, 4096 bit long modulus\r\n..........................................................................................................++\r\n.......................................................................................++\r\ne is 65537 (0x010001)\r\n\r\n$ getfacl key1.rsa key2.rsa\r\n# file: key1.rsa\r\n# owner: operator\r\n# group: users\r\nuser::rw-\r\ngroup::---\r\ngroup:http-cert:r-x             #effective:---\r\nmask::---\r\nother::---\r\n\r\n# file: key2.rsa\r\n# owner: operator\r\n# group: users\r\nuser::rw-\r\ngroup::---\r\ngroup:http-cert:r-x             #effective:r--\r\nmask::r--\r\nother::---\r\n``` @lukas2511, any progress? This is literally a no-brainer. @lukas2511 Yep, works for me. I find the solution via temporary files to be dirtier, but well, whatever.  The symbolic link pointing to the latest `ocsp.der` is incorrect, check how `ln -s` is used to create other links (those other work).  gives output like\r\n```\r\n                             fork.pl    71 VALID    Dec  4 18:57:00 2017 GMT\r\n                        test.fork.pl    15 RENEWAL  Oct  9 13:45:00 2017 GMT\r\n            domain.domain.domain.com   -10 EXPIRED  Sep 13 21:57:00 2017 GMT\r\n```\r\nand exit codes 0, 1 or 2 (1 for at least one to be renewed, 2 for at least one expired)\r\n My only suggestion is to use obviously-unique exit statuses. (Perhaps +10 the current ones?) This will help ensure that the results aren't potentially parsed as error conditions, whether by human or by machine. :) @lewellyn https://nagios-plugins.org/doc/guidelines.html#AEN78  I have dehydrated running in a cron script, so I haven't changed my config in a while.  However, it recently stopped working.  I ran it manually, and got the following error:\r\n\r\n````\r\n  + ERROR: An error occurred while sending post-request to https://acme-v01.api.letsencrypt.org/acme/challenge/LxPiZ1RIVyEMv-l964GcUA9PU71kbXGPvxQ1p7Vo41g/1894311304 (Status 400)\r\n\r\nDetails:\r\n{\r\n  \"type\": \"urn:acme:error:malformed\",\r\n  \"detail\": \"Unable to update challenge :: The challenge is not pending.\",\r\n  \"status\": 400\r\n}\r\n\r\n```` I don't think I have ever seen that. Have you tried updating dehydrated? Yes, this was from the git master. I'm seeing this to :/\r\nAny soulution to it? @ludeeus Can you provide the full output you're seeing? Ideally with the authorization/challenge URL?\r\n\r\nThe example from @bjmgeek is too old for me to find in the server-side logs for the Let's Encrypt validation authority.\r\n\r\nIf I had to guess, I'd say this might be related to [a recent (Aug 31st) change to recycle pending authorizations](https://community.letsencrypt.org/t/automatic-recycling-of-pending-authorizations/41321).\r\n\r\n@lukas2511 Is there any chance that two threads/instances of Dehydrated could be requesting an authorization, get back the same one, and then trip over each other when one instance POSTs the authorization changing the state from pending->[invalid/valid] before the second instance POSTs the same authorization, receiving the error about it being in a non-pending state? @cpu i don't think this is a threading issue, dehydrated should prevent this and in case it doesn't the variance in latencies is so big that probably around the third run one of the instances would just \"win\" the race condition\r\n\r\n@bjmgeek do you by any chance remember if the issue just went away after around 7 days? that would indicate a problem with the recycled authorizations\r\n\r\nmaybe for some reason dehydrated doesn't notice the verification is already valid and thinks it's still pending, i'll have a look at how that might be possible... > maybe for some reason dehydrated doesn't notice the verification is already valid and thinks it's still pending, i'll have a look at how that might be possible...\r\n\r\nThat seems like a more plausible explanation than my threading guesses :-) @cpu Tried again now, and it worked...\r\nBut it looked the same as @bjmgeek \r\n Well, let me try again...\r\n I'm still seeing an error, but not the malformed one:\r\n\r\n````\r\nbminton:~# /etc/cron.weekly/letsencrypt\r\n# INFO: Using main config file /var/local/dehydrated/rsa/config\r\nProcessing brian.minton.name with alternative names: www.brian.minton.name secure.brian.minton.name blog.brian.minton.name photos.brian.minton.name music.brian.minton.name bjmgeek.science meadowfen.farm meadowfenfarm.com www.meadowfen.farm www.meadowfenfarm.com meadowfen.farm blog.meadowfen.farm gallery.brian.minton.name bminton.is-a-geek.net caelonna.is-a-geek.net www.bminton.is-a-geek.net www.caelonna.is-a-geek.net\r\n + Checking domain name(s) of existing cert... changed!\r\n + Domain name(s) are not matching!\r\n + Names in old certificate: bjmgeek.science blog.brian.minton.name blog.meadowfen.farm bminton.is-a-geek.net brian.minton.name caelonna.is-a-geek.net gallery.brian.minton.name meadowfen.farm meadowfenfarm.com music.brian.minton.name photos.brian.minton.name secure.brian.minton.name www.bjmgeek.science www.bminton.is-a-geek.net www.brian.minton.name www.caelonna.is-a-geek.net www.meadowfen.farm www.meadowfenfarm.com\r\n + Configured names: bjmgeek.science blog.brian.minton.name blog.meadowfen.farm bminton.is-a-geek.net brian.minton.name caelonna.is-a-geek.net gallery.brian.minton.name meadowfen.farm meadowfenfarm.com music.brian.minton.name photos.brian.minton.name secure.brian.minton.name www.bminton.is-a-geek.net www.brian.minton.name www.caelonna.is-a-geek.net www.meadowfen.farm www.meadowfenfarm.com\r\n + Forcing renew.\r\n + Checking expire date of existing cert...\r\n + Valid till Aug 24 13:16:00 2017 GMT Certificate will expire\r\n(Less than 30 days). Renewing!\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting challenge for brian.minton.name...\r\n + Already validated!\r\n + Requesting challenge for www.brian.minton.name...\r\n + Already validated!\r\n + Requesting challenge for secure.brian.minton.name...\r\n + Already validated!\r\n + Requesting challenge for blog.brian.minton.name...\r\n + Already validated!\r\n + Requesting challenge for photos.brian.minton.name...\r\n + Already validated!\r\n + Requesting challenge for music.brian.minton.name...\r\n + Already validated!\r\n + Requesting challenge for bjmgeek.science...\r\n + Already validated!\r\n + Requesting challenge for meadowfen.farm...\r\n + Requesting challenge for meadowfenfarm.com...\r\n + Requesting challenge for www.meadowfen.farm...\r\n + Requesting challenge for www.meadowfenfarm.com...\r\n + Requesting challenge for meadowfen.farm...\r\n + Requesting challenge for blog.meadowfen.farm...\r\n + Requesting challenge for gallery.brian.minton.name...\r\n + Requesting challenge for bminton.is-a-geek.net...\r\n + Already validated!\r\n + Requesting challenge for caelonna.is-a-geek.net...\r\n + Requesting challenge for www.bminton.is-a-geek.net...\r\n + Already validated!\r\n + Requesting challenge for www.caelonna.is-a-geek.net...\r\n + Responding to challenge for meadowfen.farm...\r\nERROR: Challenge is invalid! (returned: invalid) (result: {\r\n  \"type\": \"http-01\",\r\n  \"status\": \"invalid\",\r\n  \"error\": {\r\n    \"type\": \"urn:acme:error:tls\",\r\n    \"detail\": \"Fetching https://meadowfen.farm/.well-known/acme-challenge/YnBrrDhEH50MS_VUtzLWebjXL5Vu3-hmXNVSXFidXik: remote error: tls: handshake failure\",\r\n    \"status\": 400\r\n  },\r\n  \"uri\": \"https://acme-v01.api.letsencrypt.org/acme/challenge/ab7eJAjutzyUyw31yKMkZoRj2rxveUoGhnRPE850pfo/2419593692\",\r\n  \"token\": \"YnBrrDhEH50MS_VUtzLWebjXL5Vu3-hmXNVSXFidXik\",\r\n  \"keyAuthorization\": \"YnBrrDhEH50MS_VUtzLWebjXL5Vu3-hmXNVSXFidXik.7cmLjPBGSVyPZAIrbFOMeUhOUSmH3n654DW9urqTP6k\",\r\n  \"validationRecord\": [\r\n    {\r\n      \"url\": \"https://meadowfen.farm/.well-known/acme-challenge/YnBrrDhEH50MS_VUtzLWebjXL5Vu3-hmXNVSXFidXik\",\r\n      \"hostname\": \"meadowfen.farm\",\r\n      \"port\": \"443\",\r\n      \"addressesResolved\": [\r\n        \"174.59.12.36\"\r\n      ],\r\n      \"addressUsed\": \"174.59.12.36\",\r\n      \"addressesTried\": []\r\n    },\r\n    {\r\n      \"url\": \"http://meadowfen.farm/.well-known/acme-challenge/YnBrrDhEH50MS_VUtzLWebjXL5Vu3-hmXNVSXFidXik\",\r\n      \"hostname\": \"meadowfen.farm\",\r\n      \"port\": \"80\",\r\n      \"addressesResolved\": [\r\n        \"174.59.12.36\"\r\n      ],\r\n      \"addressUsed\": \"174.59.12.36\",\r\n      \"addressesTried\": []\r\n    }\r\n  ]\r\n})\r\n# INFO: Using main config file /var/local/dehydrated/ecc/config\r\nProcessing brian.minton.name with alternative names: www.brian.minton.name secure.brian.minton.name blog.brian.minton.name photos.brian.minton.name music.brian.minton.name bjmgeek.science meadowfen.farm meadowfenfarm.com www.meadowfen.farm www.meadowfenfarm.com meadowfen.farm blog.meadowfen.farm gallery.brian.minton.name bminton.is-a-geek.net caelonna.is-a-geek.net www.bminton.is-a-geek.net www.caelonna.is-a-geek.net\r\n + Checking domain name(s) of existing cert... changed!\r\n + Domain name(s) are not matching!\r\n + Names in old certificate: bjmgeek.science blog.brian.minton.name blog.meadowfen.farm bminton.is-a-geek.net brian.minton.name caelonna.is-a-geek.net gallery.brian.minton.name meadowfen.farm meadowfenfarm.com music.brian.minton.name photos.brian.minton.name secure.brian.minton.name www.bjmgeek.science www.bminton.is-a-geek.net www.brian.minton.name www.caelonna.is-a-geek.net www.meadowfen.farm www.meadowfenfarm.com\r\n + Configured names: bjmgeek.science blog.brian.minton.name blog.meadowfen.farm bminton.is-a-geek.net brian.minton.name caelonna.is-a-geek.net gallery.brian.minton.name meadowfen.farm meadowfenfarm.com music.brian.minton.name photos.brian.minton.name secure.brian.minton.name www.bminton.is-a-geek.net www.brian.minton.name www.caelonna.is-a-geek.net www.meadowfen.farm www.meadowfenfarm.com\r\n + Forcing renew.\r\n + Checking expire date of existing cert...\r\n + Valid till Aug 24 13:17:00 2017 GMT Certificate will expire\r\n(Less than 30 days). Renewing!\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting challenge for brian.minton.name...\r\n + Already validated!\r\n + Requesting challenge for www.brian.minton.name...\r\n + Already validated!\r\n + Requesting challenge for secure.brian.minton.name...\r\n + Already validated!\r\n + Requesting challenge for blog.brian.minton.name...\r\n + Already validated!\r\n + Requesting challenge for photos.brian.minton.name...\r\n + Already validated!\r\n + Requesting challenge for music.brian.minton.name...\r\n + Already validated!\r\n + Requesting challenge for bjmgeek.science...\r\n + Already validated!\r\n + Requesting challenge for meadowfen.farm...\r\n + Requesting challenge for meadowfenfarm.com...\r\n + Requesting challenge for www.meadowfen.farm...\r\n + Requesting challenge for www.meadowfenfarm.com...\r\n + Requesting challenge for meadowfen.farm...\r\n + Requesting challenge for blog.meadowfen.farm...\r\n + Requesting challenge for gallery.brian.minton.name...\r\n + Requesting challenge for bminton.is-a-geek.net...\r\n + Already validated!\r\n + Requesting challenge for caelonna.is-a-geek.net...\r\n + Requesting challenge for www.bminton.is-a-geek.net...\r\n + Already validated!\r\n + Requesting challenge for www.caelonna.is-a-geek.net...\r\n\r\n + Responding to challenge for meadowfen.farm...\r\nERROR: Challenge is invalid! (returned: invalid) (result: {\r\n  \"type\": \"http-01\",\r\n  \"status\": \"invalid\",\r\n  \"error\": {\r\n    \"type\": \"urn:acme:error:tls\",\r\n    \"detail\": \"Fetching https://meadowfen.farm/.well-known/acme-challenge/xFiN_DW0fpXNYvMkEmGFUJOd4qjDPu-OPImav527voA: remote error: tls: handshake failure\",\r\n    \"status\": 400\r\n  },\r\n  \"uri\": \"https://acme-v01.api.letsencrypt.org/acme/challenge/4WYYga7hQzhVu76olce4VHCTTFLPDO6p5pwe0xlxZ7o/2419595459\",\r\n  \"token\": \"xFiN_DW0fpXNYvMkEmGFUJOd4qjDPu-OPImav527voA\",\r\n  \"keyAuthorization\": \"xFiN_DW0fpXNYvMkEmGFUJOd4qjDPu-OPImav527voA.-EpzKSq6tAP-GpNV-kX5q4Wez8B8Ru1P8-XZkpIcgN8\",\r\n  \"validationRecord\": [\r\n    {\r\n      \"url\": \"https://meadowfen.farm/.well-known/acme-challenge/xFiN_DW0fpXNYvMkEmGFUJOd4qjDPu-OPImav527voA\",\r\n      \"hostname\": \"meadowfen.farm\",\r\n      \"port\": \"443\",\r\n      \"addressesResolved\": [\r\n        \"174.59.12.36\"\r\n      ],\r\n      \"addressUsed\": \"174.59.12.36\",\r\n      \"addressesTried\": []\r\n    },\r\n    {\r\n      \"url\": \"http://meadowfen.farm/.well-known/acme-challenge/xFiN_DW0fpXNYvMkEmGFUJOd4qjDPu-OPImav527voA\",\r\n      \"hostname\": \"meadowfen.farm\",\r\n      \"port\": \"80\",\r\n      \"addressesResolved\": [\r\n        \"174.59.12.36\"\r\n      ],\r\n      \"addressUsed\": \"174.59.12.36\",\r\n      \"addressesTried\": []\r\n    }\r\n  ]\r\n})\r\nbminton:~# \r\n```` @bjmgeek this looks like a completely unrelated issue, which seems to be on your side. maybe it's a problem with the expired certificate and your forced ssl redirect Perhaps.  In any case, I'm trying with a dns-01 challenge now.\n  In January 2018 Lets Encrypt will launch a new ACME v2 Endpoint that will allow wildcard certificates.\r\nAny plans to implement this? Is your mic on? Yes! I have a few use cases for wildcard certificates too, so this will definitively get implemented! Great news!\r\nDo you have any timeline?\r\nIs there any way we can collaborate / help you in this effort?\r\n\r\nLeonid Belkind, Co-Founder & CTO, Luminate Security\r\nMobile: +972-52-3476783\r\nleonid@luminatesec.com<mailto:leonid@luminatesec.com>\u2028\r\n[id:image001.png@01D3677E.939CE6B0]\r\n__________________________________________________________________\r\nThis message may contain confidential and/or proprietary information, and is intended only for the person / entity to whom it was originally addressed.The content of this message may contain private views and opinions which do not constitute a formal disclosure or commitment unless specifically stated.\r\n\r\nFrom: Lukas Schauer <notifications@github.com>\r\nReply-To: lukas2511/dehydrated <reply@reply.github.com>\r\nDate: Thursday, 14 December 2017 at 1:30\r\nTo: lukas2511/dehydrated <dehydrated@noreply.github.com>\r\nCc: Leonid Belkind <leonid@luminatesec.com>, Author <author@noreply.github.com>\r\nSubject: Re: [lukas2511/dehydrated] ACME v2 Support (#420)\r\n\r\n\r\nYes! I have a few use cases for wildcard certificates too, so this will definitively get implemented!\r\n\r\n\u2014\r\nYou are receiving this because you authored the thread.\r\nReply to this email directly, view it on GitHub<https://github.com/lukas2511/dehydrated/issues/420#issuecomment-351558980>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AXVzSfParsPJJ9oBTpPq0yXIfcqGPj-dks5tAF4igaJpZM4OyNHQ>.\r\n I haven't actually read the spec yet... If not too much has changed this may be implemented in January, certainly only pushed to master after the new endpoint is online. If it's more time consuming I'm guessing late Feb or Mar.\r\nCertificate handling probably doesn't need to be touched a lot, support for wildcard certificates should be easily handled (script-internally) as if they would just be a normal subdomain, I'm kinda hoping that only a few api calls have to be changed.\r\n\r\nA great help would be a short summary (if in any way possible...) of the major changes in the protocol.\r\n\r\nIf a lot has changed a proof of concept shell or python (or some other easily readable language) script with api calls against the new version would be great. Just something that gives a good starting point for figuring out how stuff works, nothing more. Can\u2019t say that I am familiar with the current Boulder implementation of ACME enough to comment on the diff.\r\nI am looking at the latest IETF-standardized ACME implementation (which, according to the ITRG people will serve as the basis for their ACME V2 Endpoint): https://tools.ietf.org/html/draft-ietf-acme-acme-07 [this is, at least, the latest available draft]\r\nI am looking at the RFC diff: https://tools.ietf.org/rfcdiff?url1=https://tools.ietf.org/id/draft-ietf-acme-acme-01.txt&url2=https://tools.ietf.org/id/draft-ietf-acme-acme-07.txt\r\nThe protocol was enriched significantly, the question is, what is the minimal delta to support the new capabilities (My personal interest in ACME V2 is around the wildcard certificates).\r\n\r\n\r\nFrom: Lukas Schauer [mailto:notifications@github.com]\r\nSent: Friday, December 15, 2017 3:49 AM\r\nTo: lukas2511/dehydrated <dehydrated@noreply.github.com>\r\nCc: Leonid Belkind <leonid@luminatesec.com>; Author <author@noreply.github.com>\r\nSubject: Re: [lukas2511/dehydrated] ACME v2 Support (#420)\r\n\r\n\r\nI haven't actually read the spec yet... If not too much has changed this may be implemented in January, certainly only pushed to master after the new endpoint is online. If it's more time consuming I'm guessing late Feb or Mar.\r\nCertificate handling probably doesn't need to be touched a lot, support for wildcard certificates should be easily handled (script-internally) as if they would just be a normal subdomain, I'm kinda hoping that only a few api calls have to be changed.\r\n\r\nA great help would be a short summary (if in any way possible...) of the major changes in the protocol.\r\n\r\nIf a lot has changed a proof of concept shell or python (or some other easily readable language) script with api calls against the new version would be great. Just something that gives a good starting point for figuring out how stuff works, nothing more.\r\n\r\n\u2014\r\nYou are receiving this because you authored the thread.\r\nReply to this email directly, view it on GitHub<https://github.com/lukas2511/dehydrated/issues/420#issuecomment-351890016>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AXVzSWWmB3qd2rzABmIIg_rGd_5K_boiks5tAc_zgaJpZM4OyNHQ>.\r\n > I am looking at the latest IETF-standardized ACME implementation (which, according to the ITRG people will serve as the basis for their ACME V2 Endpoint): https://tools.ietf.org/html/draft-ietf-acme-acme-07 [this is, at least, the latest available draft]\r\n\r\n@lbelkind That's actually two drafts behind the latest :-) [Draft-09](https://tools.ietf.org/html/draft-ietf-acme-acme-09) is the latest and was cut a few days ago. The Boulder divergences doc is [a little bit behind](https://github.com/letsencrypt/boulder/issues/3234).\r\n\r\n> A great help would be a short summary (if in any way possible...) of the major changes in the protocol.\r\n\r\n@lukas2511 I'd love to eventually sit down and write something like this but I'm still tied up implementing the new protocol & getting ready for launch in Jan/Feb.\r\n\r\nHere's a (off-the-top-of-my-head) summary of some major changes that will hopefully help:\r\n* The authorization/issuance flow has changed. Prev. you requested your own authz's per-identifier and then submitted a CSR to new-cert. Now you submit a request for an order for a set of identifiers, the server gives you back authorizations to satisfy, and you issue a certificate by POSTing a CSR to the order's finalize URL.\r\n* The JWS authorization of requests has changed. Only the new-account JWS has an embedded JWK now, all other endpoints consume a JWS with a key ID.\r\n* JWS bodies don't include the \"resource\" field anymore, the client needs to put the URL it intends the message for in a protected header of the JWS.\r\n* Lots of resources changed to be camelCase throughout (revokeCertificate, newAccount, etc)\r\n\r\nIn terms of LE specific things to know:\r\n* Order identifiers with a wildcard prefix will be given an authorization with only a DNS-01 challenge to solve.\r\n* The TLS-SNI-01 challenge type won't be present in the V2 API - We'll only offer its successor TLS-SNI-02\r\n\r\nThose are some of the bigger changes that come to mind right off the bat. Definitely not a comprehensive list. I would certainly welcome a community contribution of a more thorough document as a PR to [the Let's Encrypt website](https://github.com/letsencrypt/website) if someone is feeling like spending more time diffing RFCs :-)\r\n\r\n\r\n @cpu thank you. that doesn't sound too bad, sure a lot of changed things but it actually sounds quite easy to implement and a lot faster and less error-prone than the previous api. FYI: The staging v2 endpoint is now available: https://community.letsencrypt.org/t/staging-endpoint-for-acme-v2/49605 Only DNS-01 validation for wildcard domains =( That screws with my full automation. Will Dehydrated support plugins for adding DNS APIs?, since every domain provider has its own API.\r\n   @rudiedirkx - Dehydrated already supports DNS hooks (I'm currently using the one for Cloudflare, which works great - https://github.com/kappataumu/letsencrypt-cloudflare-hook). Not sure whether you know Python at all, but you might be able to modify that to your own purposes? Wait waat! I did not know that. I will reread Dehydrated. Python should work, or any other language if it's just a bash call. Thanks all. @rudiedirkx You should look into https://github.com/AnalogJ/lexicon as that allows you to use a standardized syntax to interface with multiple DNS providers. Any update soon planned? #464 contains support for v2 API.\r\nRegex handling seems to block wildcard domains, but I don't have time to look at that. So its still useless @belliash That seems harsh, considering how much of the v2 API _has_ been implemented. @belliash production endpoint v2 will only be available at 27th february anyway. I have merged @crza's initial implementation. There still seems to be a bit of work required and I didn't yet test if it actually works, but if anybody wants to give it a try, feel free: Replace the CA variable and set API=2 in the config. I was able to test the changes and I was able to acquire a few certificates (including wildcard certificates :tada:) from the staging API.\r\n\r\nThere are still a few issues, e.g. I had an invalid authorization that I just wasn't able to get rid of, I didn't have much time to look into that issue, it seemed like a server-side bug to me, but I'll have to look into this a bit more. >  I had an invalid authorization that I just wasn't able to get rid of, I didn't have much time to look into that issue, it seemed like a server-side bug to me, but I'll have to look into this a bit more.\r\n\r\n@lukas2511 this is https://github.com/letsencrypt/boulder/issues/3333 and indeed a server-side bug. @cpu thanks for the clarification! definitively saved me from a few more hours of debugging this issue \ud83d\ude03  Worked for me on the staging endpoint, was able to request certs for various subdomains and a wildcard cert. I'm getting several errors while testing a SAN certificate.\r\n\r\nThe Dehydrated feedback has changed (maybe because the ACME flow has changed).\r\n\r\nOld:\r\n\r\n```\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting challenge for cn.example.com...\r\n + Already validated!\r\n + Requesting challenge for san1.example.com...\r\n + Requesting challenge for san2.example.com...\r\n + Requesting challenge for san3.example.com...\r\n  <dns hook output, with HOOK_CHAIN>\r\n + Responding to challenge for san1.example.com...\r\n + Challenge is valid!\r\n + Responding to challenge for san2.example.com...\r\n + Challenge is valid!\r\n + Responding to challenge for san3.example.com...\r\n + Challenge is valid!\r\n  <dns hook output, with HOOK_CHAIN>\r\n + Requesting certificate...\r\n```\r\n\r\nVery obvious that 1 / 4 domains was already validated, and 3 others are being challenged now.\r\n\r\nNew:\r\n\r\n```\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting challenges for cn.example.com san1.example.com san2.example.com san3.example.com...\r\n + Already validated!\r\n  <dns hook output, with HOOK_CHAIN>\r\n + Responding to challenge for cn.example.com...\r\n  + ERROR: An error occurred while sending post-request to https://acme-staging-v02.api.letsencrypt.org/acme/challenge/C1FKeAYUL2svnxV8eaGd7QUWxv3GLxPD-ElxqiMnBlY/96144727 (Status 400)\r\n\r\nDetails:\r\n{\r\n  \"type\": \"urn:ietf:params:acme:error:malformed\",\r\n  \"detail\": \"Unable to update challenge :: The challenge is not pending.\",\r\n  \"status\": 400\r\n}\r\n```\r\n\r\nThe strange error aside, this feedback is much less clear. Which domains were valid? Which are passed to the dns hook?\r\n\r\nAnd then the strange error of course: challenge not pending..? It tries 1 of the 4, but not the first, but that shouldn't matter.\r\n\r\nI'm requesting a new version of an existing certificate (new SAN domains, same CN domain). I think v2 creates a new account automatically? I had to `--register --accept-terms` anyway. For a new certificate with a new account, it all works, but that's probably not the usual case after having used Dehydrated before. @rudiedirkx the \"challenge not pending\" bug is what @cpu was talking about, this is a serverside bug and not a dehydrated bug, the server returns an \"invalid\" challenge that can't be cleared and dehydrated doesn't expect that to happen as it should never happen.\r\n\r\nother than that what exactly is your problem with the output not being clear? it clearly states what domain it's checking. also there are differences on how challenges are generated, they no longer have to be requested domain by domain, they will be delivered by the server as part of the \"order\", and dehydrated will only tell the server that the challenges are ready (which still happens for each domain) ```\r\n + Requesting challenges for cn.example.com san1.example.com san2.example.com san3.example.com...\r\n + Already validated!\r\n```\r\n\r\nThat's not very clear to me. Is 1 domain already validated? Or all 4? The old method is unambiguous.\r\n\r\nThe order is also strange:\r\n\r\n```\r\n + Responding to challenge for A...\r\n + Challenge is valid!\r\n + Responding to challenge for *.A...\r\n  <dns 'clean_challenge' hook output>\r\n  <dns 'clean_challenge' hook output>\r\n  <dns 'clean_challenge' hook output>\r\n  <dns 'clean_challenge' hook output>\r\n  <dns 'clean_challenge' hook output>\r\nERROR: Challenge is invalid! (returned: invalid) (result: {\r\n  \"type\": \"dns-01\",\r\n  \"status\": \"invalid\",\r\n  \"error\": {\r\n    \"type\": \"urn:ietf:params:acme:error:unauthorized\",\r\n    \"detail\": \"Incorrect TXT record \\\"odpkYcpEaObZt06djoRGBD3VVFbkF3qCyo89bJ15X7E\\\" found at _acme-challenge.A\",\r\n    \"status\": 403\r\n  },\r\n  \"url\": \"https://acme-staging-v02.api.letsencrypt.org/acme/challenge/r7Z8k24C7Hk0lF-QMVUTHCX2ty6qe1427mUdKO1OcYI/96153797\",\r\n  \"token\": \"vwGI10QVYDV82eoBXO0q_AJ0ovgl64TrbGnwPhj5FMM\",\r\n  \"keyAuthorization\": \"vwGI10QVYDV82eoBXO0q_AJ0ovgl64TrbGnwPhj5FMM.xVneMCNmuRpkmgiO43PGeoDwTtuaqYlo8URll2rKRJI\"\r\n})\r\n```\r\n\r\nThe DNS hook is called in between validations? Or after the first failure, but before printing that failure?\r\n\r\n(Should the challenge for `*.foo.example.com` be in `_acme-challenge.foo.example.com` or `_acme-challenge.example.com`? I'm getting mixed reports, and mixed results...)\r\n\r\nMaybe it's all me. This is my first time acmev2ing. It's getting stranger and stranger:\r\n\r\n```\r\n + Requesting challenges for wc13.example.com *.wc13.example.com *.example.com...\r\n  <dns hook output>\r\n + Responding to challenge for wc13.example.com...\r\n + Challenge is valid!\r\n + Responding to challenge for *.wc13.example.com...\r\n + Challenge is valid!\r\n + Responding to challenge for *.example.com...\r\n  <dns hook output>\r\nERROR: Challenge is invalid! (returned: invalid) (result: {\r\n  \"type\": \"dns-01\",\r\n  \"status\": \"invalid\",\r\n  \"error\": {\r\n    \"type\": \"urn:ietf:params:acme:error:unauthorized\",\r\n    \"detail\": \"Incorrect TXT record \\\"putPxdJTu37e0FDnXekp3e5kYR3jAUdSqrIz4KO6kVk\\\" (and 1 more) found at _acme-challenge.wc13.example.com\",\r\n    \"status\": 403\r\n  },\r\n  \"url\": \"https://acme-staging-v02.api.letsencrypt.org/acme/challenge/_5AY7BT_nCtXgaub0dJhUQVFON4v-kYHusi41-ZbWxg/96160910\",\r\n  \"token\": \"rTMVk2UGtrzlghg2LaiHzYHnnTU5bhfaT1uMMCZrDDU\",\r\n  \"keyAuthorization\": \"rTMVk2UGtrzlghg2LaiHzYHnnTU5bhfaT1uMMCZrDDU.xVneMCNmuRpkmgiO43PGeoDwTtuaqYlo8URll2rKRJI\"\r\n})\r\n```\r\n\r\nIt's `Responding to challenge for *.example.com...` but finds the wrong record at `_acme-challenge.wc13.example.com`. Why would it be looking at `_acme-challenge.wc13.example.com`? There must be something wrong with the feedback order.\r\n\r\nSometimes all validations succeed and I get a cert, and sometimes not... V1 mode always works always, but no wildcards of course. There's definitely something wrong, and it's not just the feedback display.\r\n\r\n```\r\nProcessing wc14.example.com with alternative names: *.wc14.example.com *.example.com\r\n + Signing domains...\r\n + Creating new directory /var/www/letsencrypt/le-config/home-staging/certs/wc14.example.com ...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting challenges for wc14.example.com *.wc14.example.com *.example.com...\r\n + Already validated!\r\n  <dns hook 'deploy_challenge' output for '*.wc14.example.com' and '*.example.com'>\r\n + Responding to challenge for *.wc14.example.com...\r\n + Challenge is valid!\r\n + Responding to challenge for *.example.com...\r\n  <dns hook 'clean_challenge' output>\r\nERROR: Challenge is invalid! (returned: invalid) (result: {\r\n  \"type\": \"dns-01\",\r\n  \"status\": \"invalid\",\r\n  \"error\": {\r\n    \"type\": \"urn:ietf:params:acme:error:unauthorized\",\r\n    \"detail\": \"Incorrect TXT record \\\"8dJ02P5CRBVmEoW5stSyLSV-MbQPIRkivYf5XFkS8LQ\\\" found at _acme-challenge.wc14.example.com\",\r\n    \"status\": 403\r\n  },\r\n  \"url\": \"https://acme-staging-v02.api.letsencrypt.org/acme/challenge/-DAlRTcc0kKvu249mV5shlH_SpZqfYQF-sAc90Bw4Rg/96163527\",\r\n  \"token\": \"ZIVZsdXSmROyaVC_RiNZbvKAzNa38c8P_EjHtxsqRUY\",\r\n  \"keyAuthorization\": \"ZIVZsdXSmROyaVC_RiNZbvKAzNa38c8P_EjHtxsqRUY.xVneMCNmuRpkmgiO43PGeoDwTtuaqYlo8URll2rKRJI\"\r\n})\r\n```\r\n\r\nI've definitely never ever validated `wc14.example.com` before, but `example.com` might be valid. Dehydrated must think `wc14.example.com` is valid, because it fires the dns hook for `*.wc14.example.com` and `*.example.com`.\r\n\r\nSo something in the new V2 flow is wrong. And now I'll stop spamming. @rudiedirkx there was a missing log statement, i added it in 5fd93ea87422c6e47f71c2ae8055303cb6e410ff, it should now be clear what the script is doing.\r\n\r\nYour last issue seems to be that both `*.wc14.example.com` and `wc14.example.com` would have to be validated at the same record, this can't be supported with `HOOK_CHAIN` enabled as both records would have been set at the exact same time.\r\n\r\nI'll add a warning and an automatic fallback to non-chaining behaviour for this. That should solve the issue. With wildcards you shouldn't have too many domains in that certificate, so that shouldn't be much of a problem anyway. Additionally to the hook-chaining problem I found another flaw that might lead to swapped challenges, which in turn will result in invalid authorizations.\r\n\r\nI'll be rewriting most of the authorization-handling-code as in it's current form it's basically broken with ACME v2.\r\n\r\nThanks for bringing your issues up @rudiedirkx, wouldn't have found that flaw until much later... I think ACME and LE support multiple records on the same domain to validatie different domains. A very normal scenario is `*.example.com` and `example.com`. ACME will require 2 TXT records in `_acme-challenge.example.com`. It seems (from the many error messages I've read) LE looks at all the TXT records.\r\n\r\nWhen you've fixed the challenge swapping problem, I'll try my rubbish again. I really hope HOOK_CHAIN still works in all v2 scenario's, because it's a huge speed gain. Also, maybe a different issue, wildcard dirs:\r\n\r\n> Creating new directory certs/*.example.com ...\r\n\r\nNot every OS/fs loves dirs starting with (or even containing) a `*`. Maybe replace with `-` or `__` or something else less-dangerous-but-still-unique? Also, for a cert with only 1 domain, a wildcard, already validated:\r\n\r\n```\r\n + Found valid authorization for example.com\r\n + 0 pending challenge(s)\r\n../../letsencrypt.sh/dehydrated: line 710: challenge_identifier[*]: unbound variable\r\n + Requesting certificate...\r\n + Checking certificate...\r\n + Done!\r\n```\r\n\r\nIt seems to have worked anyway though... All my weird challenge validation tests work with your changes, and the feedback is great. Thanks! @rudiedirkx Oh, boulder can validate with multiple TXT records set? I didn't know that, that changes a lot and would also resolve the issue I filed with boulder (https://github.com/letsencrypt/boulder/issues/3405). I'll look into the undefined variable thing and will test the hook chaining thing, if it works I'll remove my \"workaround\". @rudiedirkx You were right, deploying multiple tokens works perfectly! I'm going to change the loop behaviour a bit so it will work with both HOOK_CHAIN enabled and disabled. Mentioned changes were implemented in afba7c694cb0a6d8f150e2c5e2bd86a3c688312a. Seems to work very nicely! Very good feedback. No error if `0 pending challenges`. With any domain order. With and without wildcards. Only tried with `HOOK_CHAIN` enabled because duh.\r\n\r\nI can't wait for Feb 27. I'm guessing the LE servers will be very busy.  + Requesting new certificate order from CA...\r\n + Received 1 authorizations URLs from the CA\r\n + Handling authorization for test.org\r\n + 1 pending challenge(s)\r\n + Deploying challenge tokens...\r\nWaiting 600 seconds to propagate DNS changes\r\n + Responding to challenge for test.org authorization...\r\n + Challenge is valid!\r\n + Requesting certificate...\r\n  + ERROR: An error occurred while sending post-request to https://acme-staging-v02.api.letsencrypt.org/acme/order/5358218/3754/finalize-order (Status 403)\r\n\r\nDetails:\r\n{\r\n  \"type\": \"urn:ietf:params:acme:error:unauthorized\",\r\n  \"detail\": \"Error finalizing order :: Order includes different number of names than CSR specifies\",\r\n  \"status\": 403\r\n}\r\n\r\n\r\nCSR included test.org and *.test.org\r\nSo something is not working with CSR, when launching `dehydrated --accept-terms --ocsp --signcsr ./test.csr` INFO: Using main config file /etc/dehydrated/config\r\n + Requesting new certificate order from CA...\r\n + Received 2 authorizations URLs from the CA\r\n + Handling authorization for test.org\r\n + Handling authorization for test.org\r\n + 2 pending challenge(s)\r\n + Deploying challenge tokens...\r\n\r\narray(2) {\r\n  [\"file\"]=>\r\n  string(43) \"qrJB4iHDj31jBnoRob5Cupm0h-xmtoGNqC3vYJOy220\"\r\n  [\"token\"]=>\r\n  string(43) \"A6jqehG6Tei6JkYo6-4S4xIjXzPnP-3N4XCzzzUfatk\"\r\n}\r\narray(2) {\r\n  [\"file\"]=>\r\n  string(43) \"8GvVlpAkr_vESJJNYGDTwXS0oW6LrlwhNsDanZajmJA\"\r\n  [\"token\"]=>\r\n  string(43) \"qNipbS_bokld5wp3IYyGn36xixuWNE2MGV6_aIduCCI\"\r\n}\r\nWaiting 600 seconds to propagate DNS changes\r\n + Responding to challenge for test.org authorization...\r\n  + ERROR: An error occurred while sending post-request to https://acme-staging-v02.api.letsencrypt.org/acme/challenge/28wW8W6Y01GR7EbeqERTKKnKgZcnzzRbmU6sUv6ml_U/97842001 (Status 400)\r\n\r\nDetails:\r\n{\r\n  \"type\": \"urn:ietf:params:acme:error:malformed\",\r\n  \"detail\": \"Unable to update challenge :: The challenge is not pending.\",\r\n  \"status\": 400\r\n}\r\n\r\nAs you can see the autorization is for test.org twice... not test.org and *.test.org. Im not usre if its ok or not, but afterwars, my DNS hook script written in PHP has added the following entries:\r\n\r\n_acme-challenge.test.org. 60 IN TXT \"A6jqehG6Tei6JkYo6-4S4xIjXzPnP-3N4XCzzzUfatk\"\r\n_acme-challenge.test.org. 60 IN TXT \"qNipbS_bokld5wp3IYyGn36xixuWNE2MGV6_aIduCCI\"\r\n\r\nso it looks ok to me, but anyway I cannot obtain wildcard certificate.\r\nAny ideas what is wrong? +1 for *.domain.com not being a good idea. Most CAs usually use star_domain_com, we might as well resort to star_domain.com. How do I tell dehydrated to request a wildcard cert? Can't seem to find this info anywhere. Is it *.domain.com in domains.txt? Yeah, thanks, successfully requested a wildcard one from staging v2, no change needed for the DNS hook, sweet :) Can't wait for prod rollout. Will there be no dns-02? Coz I assumed so. v2 should be available, no? https://letsencrypt.org/2017/06/14/acme-v2-api.html But where's the directory? And the announcement? LetsEncrypt has delayed the release of the production ACME v2 API end point. See https://letsencrypt.org/2017/07/06/wildcard-certificates-coming-jan-2018.html and the linked post at https://community.letsencrypt.org/t/acmev2-and-wildcard-launch-delay/53654 for more information. And now the ACMEv2 API is public with wildcard support! \ud83c\udf89 https://community.letsencrypt.org/t/acme-v2-and-wildcard-certificate-support-is-live/55579\r\n\r\nCongrats on the hard work, LE team! Thanks @lukas2511 for being ahead of this and landing ACMEv2 support already! Awesome work everyone! Feels goood to use Dehydrated for reals. All worked perfectly! @lukas2511 I hope it's appropriate if i hihack this issue, as i think this is the same, or at least a similar issue.\r\nI've updated `dehydrated`, changed my `domains.txt` to:\r\n```\r\nbetadiff.com *.betadiff.com\r\n```\r\nand now i'm only getting this error:\r\n```\r\nERROR: Challenge is invalid! (returned: invalid) (result: {\r\n  \"type\": \"dns-01\",\r\n  \"status\": \"invalid\",\r\n  \"error\": {\r\n    \"type\": \"urn:ietf:params:acme:error:unauthorized\",\r\n    \"detail\": \"Incorrect TXT record \\\"5QqvUbs0BLtz5h9wpypVtmwtiHvzlXJlSN9T10bSDR4\\\" found at _acme-challenge.betadiff.com\",\r\n    \"status\": 403\r\n  },\r\n  \"url\": \"https://acme-v02.api.letsencrypt.org/acme/challenge/kXZvhKmuF6G5VTLcj3JYed6Qe-P_tDrUfh9EiB8OTCI/3812418200\",\r\n  \"token\": \"VLkybskPD-purQx1i8TXQ_Cx85v5KCSFIh1I0sP7sBQ\",\r\n  \"keyAuthorization\": \"VLkybskPD-purQx1i8TXQ_Cx85v5KCSFIh1I0sP7sBQ.ymn7rrjFsLBQUTzWYgdoacDjsIe-B36saKrAYkAh2Tk\"\r\n})\r\n```\r\n\r\nThe DNS-01 challenge was previously working fine, and my DNS slaves do the AXFR well within the wait period i've set (using `pdns_api.sh`, by the way), so i'm assuming this is directly related to the ACME v2 endpoint change? I just checked with _only_ the wildcard domain, so my `domains.txt` looked like this\r\n```\r\n*.betadiff.com > betadiff.com\r\n```\r\nThis works, but i'd still like to have both the apex and the wildcard in the same cert, so i tried with the apex, the wildcard and also defining an alias:\r\n```\r\nbetadiff.com *.betadiff.com > betadiff.com\r\n```\r\nAnd this now also works!\r\nSo it looks like the alias is mandatory if you're using a wildcard? Another observation, for a different domain: It only works if i *first* request the wildcard cert with an alias, and *then* add the apex and renew the certificate with the additional name (which doesn't need the alias anymore).\r\n\r\nSo for every domain i need **two separate** runs, \r\nfirst:\r\n```\r\n*.betadiff.com > betadiff.com\r\n```\r\nthen:\r\n```\r\nbetadiff.com *.betadiff.com\r\n``` Yes, the alias is mandatory for wildcard, see https://github.com/lukas2511/dehydrated/issues/483 Yes, i know that it's mandatory if you use **only** a wildcard, but it seemed as if it was also mandatory if you're using a wildcard (as the SAN only, so in theory no alias would be required) together with a regular domain name - because it worked for me on the second try, after successfully requesting a cert for **only** the wildcard *first*.\r\n\r\n*But...*\r\n\r\n... as my most recent comment showed, that assumption by me is not true - it just doesn't work **at all** (for me) if i request a cert for a regular domain with the wildcard as a SAN (with or without the alias), *unless* i **first** request it for *only* the wildcard (using the alias), and **then** for the domain and the wildcard combined (either with or without alias, again).\r\n\r\nbtw, is your (lukas2511) Amazon Wishlist still up to date? ;-) Certificates like\r\n\r\n    betadiff.com *.betadiff.com\r\n\r\nwork perfectly for me. Does your DNS hook add and keep 2 records? I've been using [pdns_api.sh](https://github.com/silkeh/pdns_api.sh/blob/master/pdns_api.sh) for quite some time now, and it worked fine \"until yesterday\". Some certs of mine have/had dozens of SANs, so that would mean that it's only broken for wildcards then...\r\n\r\nI also wonder why it works on subsequent runs with multiple names, just not for the initial run. Somebody else has the same issue with pdns in #504. Probably safe to say there's something wrong with either the hook or pdns itself.\r\n\r\nSubsequent runs with multiple names are probably re-using the validations done from earlier, so you don't have to re-validate them simultaneously.  Hi,\r\n\r\nI have a few cases where hardlinking is better suited, I thought you might find this a useful patch to add.  Thanks! It's useful inside of volumized containers (such as dockers) when the main files live outside the volume.  For instance, having multiple dockers needing the same certificates/keys, they can live on the host and be linked into the docker volume, rather than having to have a copy inside each docker.\r\n\r\nAlso useful for permissions purposes, again using something like SNI and needing multiple copies of the same certificate/key pair but needing different applications to be able to access them, ie: nginx user, postfix user, ftpd user.  These programs typically drop root privileges and do not always have permission to something like `/etc/ssl`.  Being able to hard link the cert/key to a location suitable for the application and then changing the permissions on the linked files to readable by the user that application runs as.\r\n\r\nThese are things that soft links (symlinks) cannot do. Sounds good, thank you!  I noticed that the new `OPENSSL` variable added in commit https://github.com/lukas2511/dehydrated/commit/db18820991ba6f7e483aee941ee8f58e6e9b1457 doesn't add a corresponding item to the `config` file. Is this omission by design, or an oversight?  Starting today, all our customers have started receiving this error when issuing certificates using deydrated:\r\n\r\n```\r\n# INFO: Using main config file /root/letsencrypt1500328841/config\r\n./dehydrated: line 415: CA_REVOKE_CERT: unbound variable\r\n``` You can easily fix that by using lazy evaluation in bash like this:\r\n\r\n`if [[ \"${statuscode}\" = \"409\" ]] && [[ \"${2}\" = \"${CA_REVOKE_CERT}\" ]]; then`\r\n\r\nHowever, after fixing it I'm getting:\r\n\r\n>   + ERROR: An error occurred while sending post-request to https://acme-v01.api.letsencrypt.org/acme/new-cert (Status 500)\r\n> \r\n> Details:\r\n> {\r\n>   \"type\": \"urn:acme:error:serverInternal\",\r\n>   \"detail\": \"Error creating new cert\",\r\n>   \"status\": 500\r\n> }\r\n\r\nSo I guess there's something more to it.\r\nI figured it out, you'll need to update your code to the latest version first. Then you can apply the patch.\r\n\r\nC/  This seems to work for me, don't know if it is correct That looks like an awfully LE-specific value, to be hard-coded like that.\r\n\r\nBearing in mind that this needs to work across _any_ ACME-compliant CA, is there a more dynamic way to detect and set this, if it's required? I don't know... What does ${ocsp_url} evaluate to? Is there a way to extract the desired host header from that? http://ocsp.int-x3.letsencrypt.org I can't write the code while I'm mobile, but what about using cut, splitting on the forward slashes, and just keeping the third field? I think that should extract just the host... ```\r\n[user@server dehydrated]# ./dehydrated --version\r\n# INFO: Using main config file /etc/dehydrated/config\r\nDehydrated by Lukas Schauer\r\nhttps://dehydrated.de\r\n\r\nDehydrated version: 0.4.0\r\nGIT-Revision: 4f3bd3e9567e97e963cb80141c3ba9147605360c\r\n\r\nOS: \\S\r\nUsed software:\r\n bash: 4.2.46(1)-release\r\n sed: sed (GNU sed) 4.2.2\r\n curl: curl 7.29.0\r\n awk: GNU Awk 4.0.2\r\n grep: grep (GNU grep) 2.20\r\n mktemp: mktemp (GNU coreutils) 8.22\r\n diff: diff (GNU diffutils) 3.3\r\n openssl: OpenSSL 1.0.1e-fips 11 Feb 2013\r\n```\r\n\r\nI am getting this error without the HOST parameter:\r\n\r\n```\r\nopenssl ocsp -no_nonce -issuer \"123.chain\" -verify_other \"123.chain\" -cert \"../certs/test.com/cert.pem\" -respout \"test.der\" -url \"http://ocsp.int-x3.letsencrypt.org\"\r\nError querying OCSP responsder\r\n140201268983712:error:27076072:OCSP routines:PARSE_HTTP_LINE1:server response error:ocsp_ht.c:250:Code=400,Reason=Bad Request\r\n``` Doesn't seem to work...\r\n\r\n```\r\necho \"http://ocsp.int-x3.letsencrypt.org\" | sed 's/^http(s?):\\/\\///'\r\n```\r\n\r\noutputs:\r\n\r\n```\r\nhttp://ocsp.int-x3.letsencrypt.org\r\n``` The SED commands above output the same on my machine...\r\n\r\nyup, removed the ocsp.der file and called dehydrated, no new file... aaah, yeah that makes sense... yes that seems to work! One question, everytime I call the dehydrated script will it generate a new ocsp.der file?  aah there is a age check in there I see So to summarize, older versions of openssl did not include the Host header for OCSP requests, and on top of that, the syntax of specifying headers changed. (Between versions 1.0 and 1.1)\r\n\r\nThat's interesting. I am running Centos7\r\n\r\n```\r\nopenssl version\r\nOpenSSL 1.0.1e-fips 11 Feb 2013\r\n```  Putting this here as a note in case anyone downloads from Master before you get up...\r\nThere is an undefined subroutine 'startup_hook' being requested which causes the script to fail. It looks like this is a work in progress but I would suggest using 0.4.0 until this is completed.  There is a duplication of the short parameter \"-a\" for \"--account\" and \"--algo\". After the update today all my certificate requests failed with \"Unknown parameter detected: rsa\". \r\n\r\nWe should remove the short parameter \"-a\" for account, so all software that uses your script (ie. puppet modules) will continue to work.\r\n Thanks!  Hi, because this script is used on mailcow mail instances, after each renewing, Nginx stop working and mail stop receiving due to restart Nginx.\r\n\r\nDoes this script have some hooks for restarting Nginx after renewing.\r\n\r\nThanks! @lukas2511  \r\nThank you lukas on answer. \r\nSorry for spam !\r\nI know, you close this issue, but I read documentation and I don't understand how to integrate that. I'm newbie, I'm using mailcow instance with yours script and config file.\r\nPlease, if you can help me how to integrate this.\r\n @lukas2511 \r\nPlease, can you give me answer ? @petarkozic I would suggest using the example hook in the documentation, and customizing the desired function from there. Make sure the function is white-listed and the hook is set correctly in your config / calling script.  `dehydrated  --full-chain -s /etc/ssl/vso/key.csr > /etc/ssl/vso/letsencrypt2.crt`\r\n\r\n```\r\n# INFO: Using main config file /etc/dehydrated/config\r\n# !! WARNING !! Extra configuration directory /etc/dehydrated/conf.d exists, but no configuration found in it.\r\n + Requesting challenge for www.vi-server.org...\r\n + Responding to challenge for www.vi-server.org...\r\n + Challenge is valid!\r\n + Requesting certificate...\r\n  + ERROR: An error occurred while sending post-request to https://acme-v01.api.letsencrypt.org/acme/new-cert (Status 403)\r\n\r\nDetails:\r\n{\r\n  \"type\": \"urn:acme:error:unauthorized\",\r\n  \"detail\": \"Error creating new cert :: authorizations for these names not found or expired: vi-server.org\",\r\n  \"status\": 403\r\n}\r\n```\r\n\r\nThe same script worked some time before... > don't really care about a certificates Common Name\r\n\r\nWhat is it is a simple certificate that only has a Common Name and no tricky extensions? Here is the partial text dump of the csr:\r\n\r\n```\r\nCertificate Request:\r\n    Data:\r\n        Version: 0 (0x0)\r\n        Subject: CN=vi-server.org\r\n        Subject Public Key Info:\r\n            Public Key Algorithm: rsaEncryption\r\n                Public-Key: (4096 bit)\r\n                Modulus: ...\r\n                Exponent: 65537 (0x10001)\r\n        Attributes:\r\n        Requested Extensions:\r\n            X509v3 Subject Alternative Name: \r\n                DNS:www.vi-server.org\r\n    Signature Algorithm: sha256WithRSAEncryption\r\n...\r\n``` I think it should also request challenge for `vi-server.org` bases on CN=. If browsers accept it and Let's Encrypt look at it, why dehydrated shouldn't? After adding more names to the \"Subject Alternative Name\" it works.\r\nMaybe dehydrated should warn about poor CSRs? Why should dehydrated warn about poor CSRs? The `--sign-csr` functionality is clearly marked \"`(advanced usage)`\"...    I have a machine that is not allowed to make outbound connections on port 80. \r\n443 is working fine. \r\nAs a result, when dehydrated runs, it goes through all the steps and issues the certificate, but then it tries to download the chain before saving/moving the files in place and curl fails. \r\nThen on consequential runs, since it doesn't find the issued certificate it reissues it, but it fails again. \r\n\r\nThis leads to quickly reaching domain limit of 20 for 7 days and blocks any other subdomains for issuing new certificates. \r\n\r\nI suggest the cert file to be written write after it is downloaded and moved in place. And then let the chain fail. That way unwanted reissuing of the certificate will be avoided The cache would work great.\r\nI would just install the chain with my initial & update routines. \r\nThank you very much :)  Having an issue with crontab. On the command line everything works, but in crontab the ouput of the same command is :\r\n\r\nTo use dehydrated with this certificate authority you have to agree to their terms of service which you can find here: https://letsencrypt.org/documents/LE-SA-v1.1.1-August-1-2016.pdf\r\n\r\nTo accept these terms of service run `/jffs/LetsEncrypt/dehydrated --register --accept-terms`.\r\n\r\nHowever, I have already run the command with --register --accept-terms. I also thought so, but I have tried running it with the -c flag to use the same config (which isn't needed when running it from the shell), but it returns the same. Any further ideas?\r\n\r\nI m running it on a Linux embedded router, probably nbothing special. @dulemis The `-c` option is the command for cron mode. You'll want to try using the `-f` flag to specify the location of your config file. Sorry, I meant --config.\r\nIm redirecting the cron output to a textfile,  and it logs at the top that its using the correct config. However, it still acts like its The first run... Anyone having an idea why dehydrated thinks i'm running it for the first time in cron? I have specified the --config parameter, and everything works on the command line... No one..?  Hey,\r\n\r\nI'd like to emit a certificate with ALT names for example.org and example.com\r\nBUT example.org is managed by CloudFlare and example.com by Route53. So I can't use the same hook with the two providers because one of the two will fail.\r\n\r\nDo you think this can be interesting to be implemented, or is it such a corner case that it's not worth the time?\r\n\r\nThanks I'd suggest writing a hook that can handle this case. For example, write a hook-specific config file that matches domains to DNS providers. Then, your hook can match the passed domain to the config file and call the next script in turn.\r\n\r\nBasically, you need to create a \"master\" hook script that can be called by `dehydrated` which will then handle the logic of figuring out what other hooks should be called in which cases.    This change adds a feature where each line in domains.txt can be prefixed by \"--alias alias-name\", where the given alias-name is used instead of the primary (first) domain name on that line, for looking up the configuration and for storing the certificate. With that change it is possible to generate multiple certificates with the same primary domain name and differentiate the configuration and output path via the alias-name. One use case is for generating both an RSA and an ECDSA key/cert combination. This change fixes #396.\r\n\r\n[x] tested manually\r\n[x] added simple test case to `test.sh`\r\n[x] added documentation updates Note: This seems a little related, but in the end quite different, to #367.\r\n  Using domains.txt, afaik it is not possible to create multiple keys/certs for a domain or set of domains at the same time. For example, if I want to have a RSA and a ECDSA key for a domain, I cannot use domains.txt but have to do my own scripting around. One aspect worth discussing is what the hooks should be called with: the primary domain as now, possibly used for multiple certificates and thus likely not the best information for the hook script, or the alias name, which would change the semantics of the hook call slightly. Please re-open for further discussion.\r\n\r\nI don\u2019t understand your answer to #400. With `domains.txt` and `domains.d/` we have everything we need for making per-domain/per-certificate configuration changes \u2013 except for the alias name feature I suggested. What\u2019s the point in putting another configuration wrapper around that? What if I have domains that shouldn\u2019t get a dual-key setup like the other domains, would I create another config file and another separate call to `dehydrated` just for these? Then, why do we have `domains.d/` after all?\r\n\r\nIf I have, say, hundreds of domains and want to have dual-key/cert setups for all of them, well, it could be some work to setup the config files in `config.d/`. But then I\u2019d have some scripting for creating the entries already, wouldn\u2019t I? Or I could maintain file links for keeping common configuration specializations in one file. Why should I put a script around `dehydrated` if your tool can already handle an arbitrary number of individually configured domains?\r\n\r\nNow to the implementation I offered in #400. It was thought to be fully backwards-compatible, that\u2019s why it looks like it does. I can understand that you don\u2019t like the way the `--alias` is used in `domains.txt`, but please suggest an alternative that suites your taste better and serves the same purpose. And please don\u2019t close an issue just because you don\u2019t like one aspect of the related pull request.\r\n\r\nIf I had a word on it, I\u2019d transform `domains.txt` and `domains.d/` into `domains.yml` and have all configuration options in this single file, including, of course, the alias name feature. But I think we should consider that separately.\r\n\r\nBTW, I\u2019d really suggest to merge at least cd03e2a8d and 3116fe0c8c as they improve the code without adding functionality. `${domain}` is already given the wrong name, is it is only the primary or CN domain, and `${altnames}` for all domains except the primary is also wrong as the SAN have to include the primary domain as well. And the repetitive use of `${CERTDIR}/${domain}` is also worth simplification, don\u2019t you think? Thanks @lukas2511 for reconsideration.\r\n\r\nRegarding 3116fe0: I agree. Sorry for pushing that too hard, the main change I\u2019d like to see there is `certdir` be defined outside of `sign_domain()` and renaming `domain`. Let\u2019s stay with `altnames` but change `domain` into something like `cndomain` because its only role is specifying the CN field. I can rebuild the commit.\r\n\r\nI would be really happy if it was easy to specify the alias name in the certificate\u2019s config file in `domains.d/`, but, well, the alias should already be the key to that config file \u2026 that\u2019s why there is this unpleasant `--alias` thing in `domains.txt`.\r\n\r\nHow about the following syntax. The last line shows the compatibility with the current syntax.\r\n\r\n```\r\nweb-rsa: example.com www.example.com\r\nweb-ecdsa: example.com www.example.com\r\nsmtp-imap: example.com imap.example.com smtp.example.com \r\nother.example.com www.other.example.com\r\n```\r\n\r\nWould you accept that change?\r\n thanks for merging cd03e2a (0be0ab0). :+1: Great idea! Do you think we should support all corner cases as well, like the following?\r\n\r\n```\r\n> alias1 example.org\r\nexample.org> alias1\r\nexample.org>alias1\r\n``` @lukas2511 how about allowing multiple ```>alias``` entities per line? This would allow us to make multiple certs in one line, like so\r\n\r\n```\r\nexample.org example.com >example-rsa >example-ecdsa\r\n```  In some situations it might be necessary to pass extra commands to\r\nthe curl binary, e.g. proxy authentication credentials.\r\n\r\nAdds the CURL_OPTS config option.  Bash 3.0 and others seem to have serious issues running dehydrated.\r\nhttps://github.com/lukas2511/dehydrated/issues/284 tracks the\r\nproblem but got closed as it seems too hard to support \"stone age\"\r\ndistributions.\r\n\r\nTurns out it is actually only a three line change. ;-) No worries. I would normally not have bothered but the patch was super simple. As long as it's easy to maintain, I am happy to send another patch when it breaks. If it is too hard, we can always just sunset older bash support... It has been nearly a decade after all.  I have a use-case where I want to periodically renew a cert, but I have to use a CSR I created elsewhere. I could use `--signcsr`, but then I'd have to reimplement all of the renewal logic that dehydrated already provides. What do you think about an enhancement to allow a `--csr` parameter that skips the CSR generation step and uses the provided one instead?\r\n\r\nIn my case, I need to generate a certificate for a Jabber IM server that uses the same domain as my website. My best option is to generate a private key and CSR on the Jabber server, then copy the CSR over to my web host to complete the ACME flow. I'd like to just keep that CSR there and have a cron job that uses dehydrated to renew the cert and then ship the cert back to my Jabber server. This would make it a lot easier to use Let's Encrypt for non-website TLS!\r\n\r\nI understand that one complication is that this would limit the request to a single domain at a time (perhaps requiring the `--domain` parameter.) Are there other complications with this request? Yes, I would be running a different instance of dehydrated. Forwarding is not easy, because `.well-known/acme-challenge` needs to be accessible for both the web server's verification and the Jabber server's verification. DNS verification is decidedly not easy, because even if my host supported API access to DNS, I'm not sure I'd want to distribute such sensitive keys to my Jabber server.\r\n\r\nThat's why I'm interested in precomputing a CSR and giving that to dehydrated. Does that make sense?  Testing an issue that's kind of related to #Issue 296 the other day, and I'd forgotten to enter any FQDNs into domains.txt.  Complete user error.  But the output when doing so was just:\r\n`[root@dehydrated-test ~]# dehydrated -c`\r\n`# INFO: Using main config file /etc/dehydrated/config`\r\n`[root@dehydrated-test ~]# `\r\n\r\nIt might be helpful to have a message like \"# ERROR: Nothing in /path/to/domains.txt, nothing to do!\"  Would have saved me some time, anyway.\r\n  is it possible to call `dehydrated --cleanup` from within a hook, e.g. `exit_hook`?   Definitively needs some more work, but is a good starting point.\r\n\r\nWhy do you check the value of `$FAILED` just after setting it, this will always be true, seems completely unnecessary and makes the code harder to read. \r\nSome parameters need to be in quotes (especially for that `mv` command at the end). \r\nErrors should be redirected to stderr, ideally using `_exiterr`. \r\nFor temporary files (NEW_ACCOUNT_KEY_JSON) please use `_mktemp`. \r\nMaybe writing a backup file for the old json would be a good idea, in case something went wrong that wasn't catched anywhere. \r\nA bit more information for the user on what is going on would be nice, as far as I can see this code only really logs anything on errors, but a \"Updating account information...\" message or something similar would be nice. Re: `$FAILED` You are correct. I've copy-paste from the Init function and left it for polishing later. Fixed now. \r\nI've quoted parameters where appropriate.\r\nUsed _exitcode for exiting with error\r\nUsed _mktemp for temporary file\r\nMake a backup file if the new one differs from the old one and don't touch anything otherwise\r\nAdded information to the user what is happening\r\n Hey, do you need anything else in this pull request? @lukavia hey, sorry, i know it's been a while, i'm a bit busy but i'll look into your changes soon (hopefully later this week)  I'm running a server behind a dynamic IP. Just before a cert was about to expire and the cronjob to renew it kicked in the IP address changed. Due to a 2nd instance of dehydrated running on the same network LE's dns servers had cached the old IP address for 60 seconds (DNS TTL).\r\nThis lead to a situation where requests could not be verified and many pending authorizations were created ultimately leading to hitting LE's rate limit. This can easily be avoided by either deactivating the authorizations explicitly if one in the chain required for the cert fails or just trying to validate them. It doesn't matter if the request succeeds or not: The pending authorization will be gone. Alternatively dehydrated could cache the values and use them in later requests. \r\n\r\nA similar issue and the solution mentioned above is documented on the LE forums here: https://community.letsencrypt.org/t/clear-pending-authorizations/22157  This is to work around an nginx bug, but perhaps it'd be useful for others, too.\r\n\r\nIt's be nice to be able to tell dehydrated to also download the OCSP response and keep it up-to-date as part of `--cron`. That way I can configure nginx (with [`ssl_stapling_file`](https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_stapling_file)) to read the response at start. Right now, at least with nginx 1.12.0 on CentOS 7, when nginx starts it does not immediately request the OCSP and so doesn't staple it to the response. With OCSP_MUST_STAPLE enabled, Firefox will complain when you first access the server, and for a few more seconds beyond that too. Saving the response to disk should in theory prevent this problem. Perhaps `//etc/dehydrated/certs/domain.name/ocsp.der`? I believe that Let's Encrypt only signs the OCSP responses for a few days... Depending on how often a user runs their cron job, the response may expire.\r\n\r\nI'd be inclined to write something outside of dehydrated to handle that, to avoid any instances of OCSP responses expiring on folks in between cron jobs. For Let's Encrypt, the OCSP responses are valid for 1 week. So users would need to run the cron job at least once every 7 days, probably a little bit more often than that to allow them time to react to failures. Reading up on nginx's behaviour, it seems like if the ocsp response isn't valid any more, it will go and query OCSP on it's own like normal anyways. So if the cron job is missed, it doesn't block the server.\r\n\r\nOn top of all of that, this is a niche situation. How many people have turned on OCSP Must Staple? And how many of them are using Nginx? I figure the numbers are small enough that it would *not* be enabled by default, and would be another configuration option. If it's enabled, manage the OCSP response.\r\n\r\nSome references online:\r\n- https://unmitigatedrisk.com/?p=241\r\n- https://blog.crashed.org/nginx-stapling-busted/\r\n- https://gist.github.com/sleevi/5efe9ef98961ecfb4da8 @lukas2511 \r\n\r\nI enabled ```OCSP_FETCH=\"yes\"``` this option in the config file and regenerated, but no ocsp.der file is showing up...?\r\n\r\nSeems you need to add a HOST parameter to the request\r\n\r\nhttps://community.letsencrypt.org/t/ocsp-responses-inconsistent-between-different-ocsp-servers/21927/5\r\n\r\nAdded a PR #412  Closing this as OCSP stapling updates seem to be working fine now.  The --cleanup command does not move files like \"cert-123-pem-revoked\" to the archive directory.\r\n\r\nIs this by design, or should the cleanup procedure actually move those files as well?\r\n\r\nThank you.\r\n This is (as far as I can tell) by design. The cleanup procedure checks the symlinks to determine the current targets, then archives the files of that type that are not currently linked.\r\n\r\nI'm going just from memory here, but I believe this procedure doesn't work for revoked files, since they're no longer in the same naming convention as the subroutine checks for.\r\n\r\nThis is a duplicate of #237. I've been meaning to write some code to address this, but I haven't figured out a good way to archive all revoked certs without touching any other user-created files in the filespace... It's not a bug, it is a *feature* :)\r\n\r\nJust kidding, I am glad someone is aware of the problem and I am sure it will get sorted out eventually.  For some reason dehydrated tries to reach out for the issuer certificate of the intermediate cert also. As this is located on apps.identrust.com, which das no IPv6 connectivity, dehydrated throws this error\r\n\r\nERROR: Problem connecting to server (get for http://apps.identrust.com/roots/dstrootcax3.p7c; curl returned with 7)\r\n\r\nand stops after that if our host has only IPv6 connectivity. Our requested certificate was already successfully issued by letsencrypt at this point.\r\n\r\nIs there any reason why dehydrated tries to fetch this root cert? In any case a failure here should not break the processing of dehydrated here IMHO. dehydrated tries to walk the chain to fetch all required intermediate certificates, it can't (reliably) detect the root certificate without fetching it first\r\n\r\ni think the real issue here is that identrust has no ipv6 support on their hosts, but as a workaround it may be possible to allow manual specification of a certificate chain instead of querying for it > i think the real issue here is that identrust has no ipv6 support on their hosts,\r\n\r\nsure, this is the main problem. But as The identrust server actually doesn't need to be contacted for our certificate chain (we don't include the root cert), we could just ignore that if we run into this problem\r\n\r\n> but as a workaround it may be possible to allow manual specification of a certificate chain instead of querying for it\r\n\r\nor add an option to just fetch n certificates from the cert chain and not fetch all certs down to a root. For now (and I guess for a long time on) people with IPv6 only hosts could then simply set this value to 1 - and the problem would be solved. > we don't include the root cert\r\n\r\nyea, but the only way to find out if it actually is the root cert is to actually download it and check if it has a issuer certificate\r\n\r\n> just fetch n certificates\r\n\r\nno, definitively not, either full manual definition of the chain or the automatic way, but this \"n certificates\" sounds like it may end up with a lot of incomplete chains, which i definitively want to avoid > either full manual definition of the chain or the automatic way, but this \"n certificates\" sounds like it may end up with a lot of incomplete chains, which i definitively want to avoid\r\n\r\nI don't see howa manual definition makes it any better. I will make it worse. If the intermediate changes like from X1 to X3 silently, this will not be noticed and end up in a broken chain then. The number of intermediate certs that need to be fetched will most probably not change any time soon. > I don't see howa manual definition makes it any better. I will make it worse. If the intermediate changes like from X1 to X3 silently, this will not be noticed and end up in a broken chain then.\r\n\r\nWell, obviously. But that's the risk any administrator takes, any time they decide to set things to a manual process. Staying with the automatic cert-walk is a better way to go, for most people.\r\n\r\n> The number of intermediate certs that need to be fetched will most probably not change any time soon.\r\n\r\nThe number of intermediates for what CA? This script is designed to work with any ACME-compliant CA in the general case. > If the intermediate changes like from X1 to X3 silently, this will not be noticed and end up in a broken chain then.\r\n\r\nSo what is different with n=whatever walks here? Like @txr13 said the chain can be completely different than Let's Encrypts current design since it's a generic ACME client, also Let's Encrypt may at any time decide to change their internal intermediate structure, which will just continue working when the chain is walked correctly, but will probably break the chain of trust for your certificate because of missing certificates.\r\n\r\nOne possibility I see would be to cache intermediate certificates by fingerprint (which iirc should already be available from the child certificate), and if it can't be fetched automatically you have the option to fill in the missing certificates yourself and it will just work on the next run.\r\n\r\nI would probably also add a `--fix-chains` command with that so that there is no need to run through the whole signing process again if there are any issues. > it's a generic ACME client\r\n\r\nI had the focus only only Letsencrypt, for generic ACME you are right, of course\r\n\r\n> also Let's Encrypt may at any time decide to change their internal intermediate structure\r\n\r\nnot that easy any time because their intermediate certs have a basic constraint \"Maximum number of intermediate CAs: 0\"\r\n\r\nAnyway, with the generic ACME in mind, just close this issue if you want, the only clean way to solve this issue is that the root CAs finally support IPv6 on their servers. I'll leave this open as a reminder to implement caching of chain certificates, which would basically solve your issue with minimal manual interaction. Hello, I have similar issue like this using CentOS 7 on Digitalocean server. Please advice the correct fix. Thanks! https://community.letsencrypt.org/t/verify-le-certificate-chain-on-ipv6-only-host-not-possible/ Link broken. Proper one is https://community.letsencrypt.org/t/obtaining-lets-encrypt-intermediates-over-ipv6-addresses/36775  While looking into #378  I noticed a few lines were still printed to stdout instead of stderr. And two lines where redirection happens twice. The build failure seems to be a network hickup tests run OK locally. Please restart them.  - add new --quiet/--silent argument, so program report only errors (cron).\r\n- errors to stderr\r\n\r\ntemp sollution:\r\ndehydrated  --cron | egrep -v '^(# INFO:| \\+ Checking| \\+ Valid till|Processing)'\r\ntnx Most errors already went to STDERR, two remainig ones are fixed in #381.\r\n\r\nTo get quiet behaviour I suggest redirecting the STDOUT to a logfile instead of grepping it away.\r\n\r\n`dehydrated --cron >> /var/log/dehydrated.log` j4Hu is right, normal operation without any change should be quit for cron. Another logfile which needs rotation and stuff is too much in my opinion.\r\nBut what I want to know is when there actually was a renewal or if that renewal failed. I'm glad I found this script as it's a much nicer solution for my purpose. I was going to replace certbot with this script across all my servers until I saw this issue.\r\n\r\nI agree that a non-verbose cron operation would be more useful. One workaround is to run with a wrapper - a nice one is Cronic http://habilis.net/cronic/  enable dehydrated to use an existing CSR when running in cron mode. Add the variable\r\nUSE_EXISTING_CSR=<path to csr>\r\nto ${CERTDIR}/${domain}/config I have a couple of HP systems with a management console called \"iLO\". The devices will issue a CSR on request and then you can upload the certificate generated with this CSR into the device. It is not possible to upload a certificate/key pair. But I still would like to update the certificates automatically. While I'm not using LE for this, yet, other hardware vendors' integrated management solutions (like Dell's iDRAC, Fujitsu's iRMC, etc) behave similarly. They give you a CSR to sign, no way to push own keys. (Just my 0.02\u20ac.)  Currently the HOOK variable is used like this (from the default config file)\r\n\r\n> Program or function called in certain situations\r\n>\r\n> After generating the challenge-response, or after failed challenge (in this case altname is empty)\r\n> Given arguments: clean_challenge|deploy_challenge altname token-filename token-content\r\n>\r\n> After successfully signing certificate\r\n> Given arguments: deploy_cert domain path/to/privkey.pem path/to/cert.pem path/to/fullchain.pem\r\n>\r\n> BASEDIR and WELLKNOWN variables are exported and can be used in an external program\r\n> default: \\<unset\\>\r\n\r\nIMO this does not make much sense because, in the case of DNS-01 challenges, challenge deployment is completely unrelated to certificate deployment.\r\n\r\nA useful feature would therefore be to be able to specify different hooks for different operations, for example HOOK_DEPLOY_CERT would be called for deploy_cert operations. If HOOK_DEPLOY_CERT were unset, HOOK would be called instead, thereby preserving backwards compatibility. Of course the other operations would get their own environment variables as well.\r\n\r\nThis is more of a \"nice to have\" though, because it's pretty trivial to work around this limitation by making a hook that simply \"routes\" the right hook calls to the right script.  A couple of minor changes to not break under MSYS (eg. git bash on Windows). Feel free to reject this if you don't care.  Hi,\r\n\r\nI have dehydrated running as a cron process with the -c option and I need the process to send out an email whenever a new certificate is successfully obtained: i.e. no \"Valid till ... Skipping renew\" message, but also no 500 errors from letsencrypt, no issues writing to the .well-known dir, etc. What is the best way the check whether a new certificate has been obtained after running dehydrated? I guess one way would be to grep through the output and look for something like \"Done!\", but I'd like something more failsafe.\r\n\r\nThanks!\r\n\r\nMisha I personally have a small script for this purpose. It goes through all my certs and compares the SHA-1 hash of the current fullchain.pem to the previous value. If the hash has changed, it fires whatever update is needed for that particular certificate.\r\n\r\nYou may also be able to use the `deploy_cert` hook for this purpose, since that is \"called once for each certificate that has been produced.\" Would you mind sharing the hash comparison script, or at least the relevant parts? I don't mind at all. I've uploaded it [here](https://github.com/lukas2511/dehydrated/files/865947/update-certs.txt) for your convenience.\r\n\r\nBasically, it loops over all certificate directories in `CERTDIR`. In each directory, it calculates the current hash for private key and fullchain, checks for the previously-saved hash for the private key and fullchain, and determines whether those files have changed.\r\n\r\nIf a change is found, then we check the certificate directory for a per-certificate override file telling us what actions to take. If found, execute that script. Otherwise, we perform the default actions. Then we fire off an email notifying us of what needs to be done, save the new hash values to the certificate directory, and move on.\r\n\r\nAdditional points of note:\r\n- this script assumes that a change in the main certificate file is enough to trigger a set of actions, regardless of whether the private key changed or not. If you need other actions to be taken depending on whether the private key also changed, you'll need to move that check up accordingly.\r\n- if you don't care about whether the private key updated (for example, if you have set `PRIVATE_KEY_RENEW=\"yes\"` and don't have that overridden anywhere), then you can remove the checks for private key hash and the second email completely. Thank you so much! This is really helpful. Yes, I ended up implementing a deploy_cert hook and it works great. Sorry for not closing this earlier, and thanks so much for your help.  Release 0.4.0 adds the `Skip challenges for already validated domains` feature.\r\n\r\nWhile the feature makes sense, this makes it difficult to test hooks.\r\n\r\nPlease add an option to disable this feature (or make skipping it part of `--force`). @nh2 Does this happen in staging as well? > Does this happen in staging as well?\r\n\r\nYes it says:\r\n\r\n```\r\n + Requesting challenge for mydomain.com...\r\n + Already validated!\r\n``` How to work around this? Need to force this tool really quick as my certificates expire. Trying to work around this issue for two days now.. Here is solution\r\nrm -rf /etc/dehydrated/accounts/*\r\nrm -rf /etc/dehydrated/certs/* @widder What is the issue you're experiencing? The \"already validated\" response will not block the renewal of certificates.\r\n\r\nAnd I think it a very bad \"solution\" to register a brand-new account with the CA every time you want a new certificate... @txr13 I'm not widder, but I might be able to provide some insight into a comparable situation. The problem I've got is trying to get a validation hook to work properly.\r\n\r\nThe \"Already validated!\" feature (as excellent and useful as it is in normal situations!) is interfering with repeated testing of the hook against LE's staging network. I can test the hook on its own, but one of the problems it's wrought with is actually its integration with dehydrated - occasionally it will complain it's not being called with the right arguments.\r\n\r\nSo, basically, I'd like a way to skip validation-caching, too, to try and force more deterministic behaviour out of this hook I'm trying to run. That said, I'm going to see if I can take care of this with a sloppy hack on my end (or less sloppy if I get lucky), so there's hopefully no urgency - but I wanted to explain a possible usecase in this ticket.\r\n\r\ntl;dr: Flag would be useful for hook<->dehydrated integration testing against LE's staging network. What @pinkgothic says is correct.\r\nI'm not using dehydrated any more because of its inability to use it with staging. @lukas2511 There does seem to be a solid use case for wanting to skip the validation caching. Rather than adding a new flag, what about the suggestion of making --force also request a new validation? See referenced commit, this should allow you to do what you are trying to do. Thanks @txr13 for the suggestion.  Found using [mwic](http://jwilk.net/software/mwic).  dehydrated creates symlinks to the current PEM-encoded certificate files. These are named\r\n\r\n- `cert.pem` (and `cert.csr`) for the certificate (resp. the CSR)\r\n- `chain.pem` for the intermediary certifcate, which the server needs to send too\r\n- `fullchain.pem` for the concatenation of the above two\r\n- `privkey.pem` for the file containing the private key\r\n\r\nPlease make the names of these links configurable. It would help with integration where not all certificates are managed by dehydrated.  Usecase:Per service domains.txt.\r\nFor instance ejabberd and nginx need certificates for the same domain, but with different parameters. See systemd-usage.md how the -D parameter helps streamlining dehydrated usage.  Hello all,\r\n\r\nI want to know if you have any experience with implementing let\u00b4s encrypt for servers behind an F5 BIG IP Load Balancer.\r\n\r\nI have read the article below: \r\nhttps://community.letsencrypt.org/t/certificates-for-internal-servers-and-servers-behind-load-balancers/6758\r\n\r\nIn addition, I found out that there is an script in the F5 forum with several files and rules to configure to achieve the automation. This is the forum article:\r\n\r\nhttps://devcentral.f5.com/codeshare/lets-encrypt-on-a-big-ip?lc=1\r\nhttp://wiki.lnxgeek.org/doku.php/indexes:let_s_encrypt_-_how_to_issue_certificates_from_a_bigip\r\n\r\nI read all the article, took a high level overview at the code and I have some questions. All this points to the work done by @lukas2511 (Thanks @lukas2511 !!)\r\n\r\nMy goal is to clearly understand step by step the way to implement this. \r\n\r\nBased on the article from wiki.lnxgeek.org, this is what I understand:\r\n\r\n1. Create a Data group to contain the challenge-response values with the following command:\r\n\ttmsh create ltm data-group internal acme_responses type string\r\n\t1.1. Where should I execute this? Any pre-requisites to execute it? I\u00b4m not keen on F5. I would appreciate some details on this.\r\n2. Create an iRule\r\n\t2.1. Where should I create the iRule within F5 console?\r\n3. Client SSL Profiles\r\n\t3.1. How this works? Should I create any object for this?\r\n4. Fill the domains.txt file with the domains you want to retrieve a certificate/renew\r\n\t4.1. If I need to create a brand new certificate for a farm of webservers, I just add a brand new line to this domains.txt file like \"mainDomain san1 san2...\" one per line and that\u00b4s all?\r\n\t4.2. How the renewal works here? I check that in the config file you can put the amount of days to renew.\r\n5. Customize your script with the config file\r\n\t5.3. Where should I put all these files: wrapper.sh, letsencrypt.sh, hook.sh, config? Inside any folder within F5?\r\n6. Execute the wrapper.sh or directly the letsencrypt.sh (with -c parameter)\r\n\t6.1. How the flow works? F5 is passing the challenge to one specific web server to do the challenge/response or F5 itself is the one that carry this out?\r\n\t6.2. Does this script distribute the new certificate (request or renew) to all the web servers in my farm?\r\n\t6.3. It has any support to automatically configure IIS/Apache or other webservers or it only gets the certificate and is up to the administrator to configure the certificate on each web server?\r\n\t6.4. Has this script any limitations in terms of webserver\u00b4s platforms or is independent?\r\n\t\r\nThanks in advance!!  In reference to #363. After each request, challenges are stored in a local file. In the case of failure, the challenges are read from the file in the subsequent run.  Challenges for each alternate name is fetched and then challenges are deployed. Due to some network error, the script exits and the challenge tokens are lost. This leads to exceeding the rate limit.  Please, consider to merge this functionality from my fork. Thanks.  Add a method to pass the subject alt names to the hook script, so the hook script and process these. Ideal for use with adding TLSA dns records after certificate signing. I would also like to create symlinks for all alternative names. I assume the request from this issue is required for that? Thanks!  if dehydrated is in `/dehyrdrated` with no config file, using args only, it fails as it strips `/` from `BASEDIR` leaving it as an empty string.  Use this diff to allow signing of working xmpp s2s certs.\r\n\r\n[others.diff.txt](https://github.com/lukas2511/dehydrated/files/783140/others.diff.txt)\r\n you need something like this, for correct s2s support\r\n\r\n```\r\nsubjectAltName = @subject_alternative_name\r\n\r\n[subject_alternative_name]\r\nDNS.0 = <yourdomain>\r\nDNS.1 = conference.<yourdomain>\r\nDNS.2 = proxy.<yourdomain>\r\notherName.0 = 1.3.6.1.5.5.7.8.7;IA5STRING:_xmpp-client.<yourdomain>\r\notherName.1 = 1.3.6.1.5.5.7.8.7;IA5STRING:_xmpp-server.<yourdomain>\r\notherName.2 = 1.3.6.1.5.5.7.8.5;FORMAT:UTF8,UTF8:<yourdomain>\r\notherName.3 = 1.3.6.1.5.5.7.8.5;FORMAT:UTF8,UTF8:conference.<yourdomain>\r\notherName.4 = 1.3.6.1.5.5.7.8.5;FORMAT:UTF8,UTF8:proxy.<yourdomain>\r\n```\r\n Seems like it is supported. I make my xmpp certs with this  othername directive and sign them with the pathed version. I never have problems. If I make a cert without it, I get s2s errors from the server.  Need to dig into the oneliner for parsing `domains.txt`; but I'd like to add a way to set per-domain specific configuration bundled as part of the same source (instead of having it stored with the certificates). This way, things like #354 would be very powerful -- one can read it from a database or whatever source.\r\n\r\nThe idea is to do something in style with bash env variables;\r\n```txt\r\nCHALLENGETYPE=dns-01 foo.com bar.foo.com\r\nbar.com foo.bar.com\r\n...\r\n```\r\n\r\nThoughts? Thanks for your quick reply. I agree with all you said and are personally fighting with arguments against why two different configs isn't a better solution. \r\n\r\nI guess a major version bump could introduce a new config format making things like this easier. Going to close this. Splitting domains up in your cronjob is clearly a better approach.  I added support for a new config option, HOOK_DOMAINS (defaults to no), which allows to get the domains list from the hook instead of domains.txt.\r\nI updated all the documentation I could find to mention this new option and the corresponding new hook command.\r\n\r\nMy use case is running dehydrated on a server that is running a name server (NSD in my case), so I already have a list of domains and host names in the zone files for the server, and I don\u2019t want the burden of maintaining the two separate files.\r\nI can publish the 10-line script I wrote that parses the zone files and outputs in a domains.txt-like format, if you can provide me with a location or file where that would be fitting. Nice! It makes it even more obvious that passing options per-certificate/domain other than in certificate `$output_dir` should be a thing! Perhaps expand each line in domains.txt env style; CONFIG_FOO=bar domain.com www.domain.com  I finished my DNS zone file hook. If you\u2019re interested in seeing how it integrates (and needs) this pull request, you can find it at https://github.com/raffaellod/dehydrated-zonefiles-hook . @lukas2511 thanks for your feedback. \r\n\r\n@raffaellod we should probably extend the wiki with \"best practices\". @lukas2511 I did think of the option you suggest, after I was finished and I could see what my work amounted to (split between this PR and the separate hook project). I chose to submit the pull request anyway because my solution doesn\u2019t involve temporary files, and it has arguably a more \u201cbuilt-in\u201d appeal to it. These are really the only things this PR would improve over what you suggest as alternative. Obviously this is not \u201ca really good reason\u201d, so I understand your decision.\r\n\r\nI think I\u2019ll submit a separate PR to avoid the temporary creation of domains.txt within dehydrated anyway, since that\u2019s IMO a nice side effect of what I wrote. It will make dehydrated shrink by a few lines overall; I think that\u2019s desirable. If you think otherwise, please let me know anytime, so I won\u2019t bother.\r\n\r\n@jbergstroem I\u2019d be happy to update the wiki, and if possible add a reference to the hook script I wrote, after I\u2019ll give it a README (which I was waiting the end of this PR to write, since its usage changes without this PR obviously).  The walk_chain() requests certificates from remote server each time.\r\nIt can use local certificate copy instead.\r\n\r\nAlgo:\r\n\r\n1) Get certificate issuer hash \r\n\r\n`ISSUER_HASH=\"$($OPENSSL x509 -in \"${CERT}\" -noout -issuer_hash)\"`\r\n\r\n2) Check if we already have its local copy in cache\r\n\r\n3) If have, use it, if no - download and store to cache (filename is formed as `${ISSUER_HASH}.crt`).\r\n\r\nThe similar is implemented in https://github.com/matteocorti/check_ssl_cert/commit/cf368d3b71dc787c8449aae90d177efdc6d042a9 \r\n\r\nAlthough that is much more important there in monitoring (it requested much more often than in renewal process).\r\n\r\nWhat do you think about this feature?\r\n\r\nThanks for your tool.  ```\r\n> ./dehydrated | grep version\r\n --version (-v)                   Show version\r\n```\r\n```\r\n> ./dehydrated --version\r\ndehydrated 0.3.2\r\n```\r\n```\r\n> ./dehydrated -v\r\ndehydrated 0.3.2\r\n``` We could leave the VERSION-variable empty in master. In command_version we could check for that and do a \"git rev-parse --short HEAD\" if no version is specified.\r\nWhen doing a release the VERSION-variable has to be filled though. I miss this too. My take would be to bite the bullet and add `VERSION=0.4.0` to dehydrated. Could be committed as part of your changelog updates.\r\n\r\nEdit: ..and as @muffl0n suggested; do `VERSION=git` or similar that triggers a git command. In general, perhaps decouple release artifacts (aka `make dist`) from being a mirror of the git repo. That way it would be much simpler to just pin git version in there.   This behavior was tripping me up and forced me to work around it - any reason not to accept this change?  Thanks!   After upgrade to new release with new hooks, it is required to edit your `hook.sh` manually and insert those new empty hook functions. Without this, everything is broken:\r\n\r\n\r\n```\r\n$ ./dehydrated -c\r\n# INFO: Using main config file /var/lib/le/config\r\nProcessing x.org with alternative names: y.org z.org\r\n + Checking domain name(s) of existing cert... unchanged.\r\n + Checking expire date of existing cert...\r\n + Valid till Apr 14 09:21:00 2017 GMT (Longer than 30 days). Skipping renew!\r\n/var/lib/le/hook.sh: 130: /var/lib/le/hook.sh: exit_hook: not found\r\n``` Is it possible to modify behavior of hook handling, so that if a hook function is not defined then ignore it?  Thanks for looking into this, but your commit e545292   complicates it even more -- to sync between old and new `hook.sh` , a pattern list must be inserted/updated too. \r\n\r\nIsn't it be better to let user only edit **his** scripts and not play with `hook.sh`?\r\n\r\nE.g. by expecting user scripts in folders like `./hook/${hook_function_name}.d/`, and running them via `run-parts` with exporting required variables?   If I'm reading this correctly, I believe commit 6a32f20e004b9d835cd02de9d78300be02784cf1 now creates chain.pem as (intermediate + root) and fullchain.pem as (cert + intermediate + root)? If that's correct, then I would like to request that the intermediate certificate be output separately. When I upload chained certificate files, I need the intermediate certificate far more often than I need the root certificate.\r\n\r\nSome tools (such as the [Qualys SSL server test](https://www.ssllabs.com/ssltest/)) throw a warning about configuration when the root certificate is included in the bundle, since the expectation is that the trusting party should have the root already in their trust store. For similar reasons, I have often needed to upload the LE intermediate certificate as a separate file (for applications which don't support chained certificates), but I've never had to upload the root.\r\n\r\nHaving the intermediate certificate available would allow me to do a partial chain of (cert + intermediate) or access the intermediate separately as needed. (This was the previous behavior of the \"fullchain\" and \"chain\" files. I can replicate the partial chain easily enough through hooks or other scripts, as long as the intermediate is available in some form.) I agree that the new \"walk\" function is a useful addition. And if LE ever reorganized such that there were multiple intermediate certs to include, then it would change the parsing needs dramatically.\r\n\r\nThere's already a test for issuer_cert_uri, and a null result indicates we're done parsing the chain. So if we receive a null result for issuer_cert_uri, we can write out the current certificate as root.pem. As we return from our recursion, we could write out the successive certs as intermediate1.pem, intermediate2.pem, etc. Once we returned from the walk, we'd have the whole chain as root -> intermediate1 -> ... -> intermediateX -> issued cert. (Though of course, the fullchain file itself would go in reverse order!)\r\n\r\nThe fullchain file can still point to the whole bundle, root included. But that way we have the intermediates available separately (and the root, too!) for whatever needs we may have... and it should be future-proof in case of CA structure change. I'm totally cool with extending my own scripts to create my own certificate chain files out of the various bits and pieces.  So basically when they set new license URL in some monthes, what are steps to update automated setups? Manually update `$LICENSE` in `config` ? Or nothing is required? > Until now License only seems to be verified on registration, not entirely sure if there is some kind of account-update for future license changes\r\n\r\nThe agreement URL is only enforced at the time of registration/account creation. The wording of the terms-of-service is such that existing accounts are automatically agreed to future updates without needing to do any kind of account update for the new ToS if it changes.  Would it be possible for you, to provide signatures for the releases, so one is able to ensure the pulled in code, for example into Debian, wasn't tampered with along the way? [Here](https://wiki.debian.org/Creating%20signed%20GitHub%20releases) is a small guide how to do this.\r\nThanks! Thanks, that's great! To make it easier to remember this, if case you're using some sort of a script to do the release, maybe it would be good to incorporate this inside there. Ah yeah, I see. Not sure how this could work with the \"automatic\" releases provided by GitHub. Maybe something like [this](https://github.com/aktau/github-release) could be of any help.  I use dehydrated from git checkout and ran into the issue that v0.3.1 checkout does not work for alternate names with dns authentication, like:\r\n\r\n```\r\nexample.org www.example.org\r\n```\r\n\r\nSo I currently have to checkout / use master to get it working (the issue was fixed after v0.3.1).\r\n\r\nAs dehydrated installation is automated via ansible, I had to pin the current commit hash to have it reproducable - which is a bit unpretty.\r\n\r\nI also imagine a lot of people just installing via pip run into this issue and not everybody wants to use the git version, so a new release would be nice. No, I didn't bisect it. I just couldn't get it working with 0.3.1, then upgraded to tip, then it worked. Just guessing, maybe that one?:\r\n\r\nhttps://github.com/lukas2511/dehydrated/commit/9729751d93b59d9bef2347406716e4a593cf8dee\r\n \\o/  dehydrated 0.3.1-1 from Debian Sid on Debian Jessie.\r\n\r\ndehydrated forgets to add slash between hostname and \".well-known\" in fifth domain name in first line of domains.txt, which contains a \"-\" sign. It gets it correct for port 80, but not for port 443.I am not sure what of this triggers the issue. certbot can get certs for all domains without issues.\r\n\r\nTLD replaced.\r\n\r\nWill use certbot now, maybe string handling in Bash just isn\u00b4t such a good idea.\r\n\r\n```\r\n~> cat /etc/dehydrated/domains.txt \r\nexample.de www.example.de mail.example.de martin.example.de martin-alt.example.de [\u2026 some more domains \u2026]\r\nexample2.de www.example2.de\r\nexample3.de www.example3.de\r\n```\r\n\r\nError output:\r\n\r\n```\r\n + Responding to challenge for martin-alt.example.de...\r\nERROR: Challenge is invalid! (returned: invalid) (result: {\r\n  \"type\": \"http-01\",\r\n  \"status\": \"invalid\",\r\n  \"error\": {\r\n    \"type\": \"urn:acme:error:connection\",\r\n    \"detail\": \"Could not connect to martin-alt.example.de.well-known\",\r\n    \"status\": 400\r\n  },\r\n  \"uri\": \"https://acme-v01.api.letsencrypt.org/acme/challenge/N2ZBMW-W9zY33JarjmY4bETgmacQEt-NeY9KQBb-mNU/490467475\",\r\n  \"token\": \"dgGNQ2VAKOcqwytPbAcC6BKCa-p43X_3fUXr5koPwM0\",\r\n  \"keyAuthorization\": \"dgGNQ2VAKOcqwytPbAcC6BKCa-p43X_3fUXr5koPwM0.kDORmaAUEf43wIyVtGEZv1smbfcz0px6LiYs5UGymXk\",\r\n  \"validationRecord\": [\r\n    { \r\n      \"url\": \"http://martin-alt.example.de/.well-known/acme-challenge/dgGNQ2VAKOcqwytPbAcC6BKCa-p43X_3fUXr5koPwM0\",\r\n      \"hostname\": \"martin-alt.example.de\",\r\n      \"port\": \"80\",\r\n      \"addressesResolved\": [\r\n        \"[\u2026 IPv6 address \u2026]\",\r\n        \"[\u2026 IPV4 address \u2026]\"\r\n      ],\r\n      \"addressUsed\": \"[\u2026 IPv4 address \u2026]\"\r\n    },\r\n    { \r\n      \"url\": \"https://martin-alt.example.de.well-known/acme-challenge/dgGNQ2VAKOcqwytPbAcC6BKCa-p43X_3fUXr5koPwM0\",\r\n      \"hostname\": \"martin-alt.example.de.well-known\",\r\n      \"port\": \"443\",\r\n      \"addressesResolved\": null,\r\n      \"addressUsed\": \"\"\r\n    }\r\n  ]\r\n})\r\n``` Thanks Lukas, that worked. It was a combination of missing slash in RedirectPermanent, as well as for one domain another wrong rewrite rule that was hidden well by HSTP. I wonder why certbot didn\u00b4t fail on this one tough. Maybe it used the HSTP redirect.  Hallo, \r\nthere is files required for building basic debian package for dehydrated\r\n\r\nThank for your work! @Vitexus According to cron file, it is executed under root? Unprivileged user should be used instead, I believe.  @Vitexus /var/www/letsencrypt  should be changed to /var/lib/letsencrypt, because it may interfere with user's other files in /var/www\r\n Why not use the packaging which is already available in the Debian repos? https://packages.debian.org/search?keywords=letsencrypt.sh\n\n Sorry man my mistake :)  In my config files I set `OCSP_MUST_STAPLE=\"yes\"`.\r\n\r\nI'm already juggling with a multiple config files for different use cases (i.e. to create RSA and EC keys in different cert directories).\r\n\r\nBut now a subset of my hosts can't have `OCSP_MUST_STAPLE`. Either the server software does not support it (e.g. mail servers), or there are other hosts outside of my control, which wont support it.\r\nIf added in a configuration file, the number of config files and cron-tasks needed grows exponentially.\r\n\r\nIf I could leave it on by default in my configs, but set it off for a small subset of hosts by command-line would be a great. \r\n\r\nThank you for your consideration and your awesome script. Have a nice day.\r\n @lukas2511\r\n\r\nGiven that the request was for a command-line flag to unset the MUST_STAPLE option,  and given that there's already a flag which essentially sets MUST_STAPLE at execution time, would it not be feasible to implement a flag to unset at execution time? (Read and process the config file, then process script arguments to set / unset the needed option, abort with error if both --ocsp and --no-ocsp are given as arguments.)\r\n\r\nIf I better understood how to properly fork a branch and submit a PR, I'd do that...   When i try to sign my cert i get following error. Anyone had the same problem?\r\n\r\nINFO: Using main config file /opt/certificate/dehydrated/config\r\nProcessing hackernet.se\r\n + Checking domain name(s) of existing cert... unchanged.\r\n + Checking expire date of existing cert...\r\n + Valid till Jan  8 05:33:00 2017 GMT (Less than 30 days). Renewing!\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting challenge for hackernet.se...\r\nERROR: Error when trying to get nonce  Added SERVERROOT, which is common terminology to help web developers quickly identify the intended value of SERVERROOT and consequently, the value of WELLKNOWN. Not so, Lukas.\r\n\r\nThese changes:\r\n\r\n1. bridge a missing gap in the documentation for users that are not operating complex systems;\r\n\r\n2. fix some disjointed topics and ambiguous language and grammar; and\r\n\r\n3. updates a description of WELLKNOWN per changes in draft ACME standards. \r\n\r\nThese changes do not adversely affect any complex practice of WELLKNOWN in any way. \r\n\r\nSERVERROOT can be ignored for any that don't expect it.\r\n\r\nYou are free to ignore this pull request, or incorporate some or all of the changes under your own authorship.\r\n\r\nbest wishes,\r\nBen  challenge tokens are created in WELLKNOWN dir instead of WELLKNOWN/.well-known/acme-challenge/\r\n\r\nfor bash under freeBSD 10.3  See #334 \r\n\r\nAfter commenting out line 545:\r\n` [[ \"${CHALLENGETYPE}\" = \"http-01\" ]] && rm -f \"${WELLKNOWN}/${challenge_token}\"`\r\n\r\nThe files are found in WELLKNOWN dir. I call it a documentation bug. Poorly explained. Okay. Will do. The acme standard requires the file to be served from /.well-known/acme-challenge/\r\n\r\n> The path at which the resource is provisioned is comprised of the fixed prefix\r\n\".well-known/acme-challenge/\", followed by the \"token\" value in the challenge.\r\nThe value of the resource MUST be the ASCII representation of the key\r\nauthorization.\r\n\r\n`.well-known/acme-challenge/evaGxfADs6pSRb2LAv9IZf17Dt3juxGJ-PCt92wr-oA`\r\n\r\nfrom: [https://github.com/ietf-wg-acme/acme/blob/master/draft-ietf-acme-acme.md](url)\r\n\r\nSo, WELLKNOWN needs to include this fixed value at the end.\r\n\r\nThe pull request will reflect this description.\r\n\r\ncheers, Ben  What might be causing this error?\r\n\r\nThe diagnostics test provided in /docs/troubleshooting.md passes. See below.\r\n\r\nThe config file is using staging CA, per staging.md\r\nHere is complete history of latest attempt:\r\n`[letsencrypt@or97 ~]$ bash dehydrated/dehydrated -c -f /home/letsencrypt/config`\r\n`# INFO: Using main config file /home/letsencrypt/config\r\nProcessing or97.net\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting challenge for or97.net...\r\n + Responding to challenge for or97.net...\r\nERROR: Challenge is invalid! (returned: invalid) (result: {\r\n  \"type\": \"http-01\",\r\n  \"status\": \"invalid\",\r\n  \"error\": {\r\n    \"type\": \"urn:acme:error:unauthorized\",\r\n    \"detail\": \"Invalid response from http://or97.net/.well-known/acme-challenge/VuYLOVM67NO_vVlYmbQYyBJcUVnNhEUhrIPS7auZjM8 [188.227.186.70]: 404\",\r\n    \"status\": 403\r\n  },\r\n  \"uri\": \"https://acme-staging.api.letsencrypt.org/acme/challenge/ScDB3W7f9fcLmt_8s3waNELOY9sJ1QInzkR0nkEeKeI/19674597\",\r\n  \"token\": \"VuYLOVM67NO_vVlYmbQYyBJcUVnNhEUhrIPS7auZjM8\",\r\n  \"keyAuthorization\": \"VuYLOVM67NO_vVlYmbQYyBJcUVnNhEUhrIPS7auZjM8.SjR9lX0eFmmOyCAllb43DCesuKnhj7ocuE0buM6iZIY\",\r\n  \"validationRecord\": [\r\n    {\r\n      \"url\": \"http://or97.net/.well-known/acme-challenge/VuYLOVM67NO_vVlYmbQYyBJcUVnNhEUhrIPS7auZjM8\",\r\n      \"hostname\": \"or97.net\",\r\n      \"port\": \"80\",\r\n      \"addressesResolved\": [\r\n        \"188.227.186.70\"\r\n      ],\r\n      \"addressUsed\": \"188.227.186.70\"\r\n    }\r\n  ]\r\n})\r\n`\r\nI created a replica file using the same user. Here's the results:\r\n\r\n`$ telnet or97.net 80`\r\n`Trying 188.227.186.70...\r\nConnected to or97.net.\r\nEscape character is '^]'.\r\nGET .well-known/acme-challenge/VuYLOVM67NO_vVlYmbQYyBJcUVnNhEUhrIPS7auZjM8 HTTP/1.1\r\nHost: or97.net\r\n\r\nHTTP/1.1 200 OK\r\nServer: NaviServer/4.99.12\r\nDate: Thu, 05 Jan 2017 04:21:30 GMT\r\nSet-Cookie: ad_user_login=\"\"; Expires=Fri, 01-Jan-1980 01:00:00 GMT; Path=/\r\nSet-Cookie: ad_secure_token=\"\"; Expires=Fri, 01-Jan-1980 01:00:00 GMT; Path=/; Secure\r\nSet-Cookie: ad_user_login_secure=\"\"; Expires=Fri, 01-Jan-1980 01:00:00 GMT; Path=/; Secure\r\nSet-Cookie: ad_session_id=\"78360046%252c0%252c0%252c1483590090%2b%257b874%2b1483591290%2bD68F6CFD05A841A5AD4F1DBAEF4E4CD3BF33DDB1%257d\"; Expires=Fri, 01-Jan-2035 01:00:00 GMT; Path=/; Discard; HttpOnly\r\nLast-Modified: Thu, 05 Jan 2017 03:54:55 GMT\r\nContent-Type: */*\r\nAccept-Ranges: bytes\r\nContent-Length: 8\r\nConnection: keep-alive\r\n\r\nsuccess\r\nConnection closed by foreign host.\r\n` server log shows a slight variation of the GET url from letsencrypt staging server than the one tested via telent; ie a '/' prefix:\r\n\r\n`66.133.109.36 - - [05/Jan/2017:03:53:04 +0000] \"GET /.well-known/acme-challenge/VuYLOVM67NO_vVlYmbQYyBJcUVnNhEUhrIPS7auZjM8 HTTP/1.1\" 404 697 \"\" \"Mozilla/5.0 (compatible; Let's Encrypt validation server; +https://www.letsencrypt.org)\" \" 1483588384.020250  0.000284  0.000045  0.001559  0.000144\"\r\n`\r\nHowever, all cases in the server log show the same GET url, and there doesn't seem to be a  different in the data returned via telnet on a retest with prefix '/' You'll notice the server log shows 404 for this case, but the log shows the server returns 200 for the test cases.\r\n\r\nIs it possible this is a timing issue between dehydrated and letsencrypt? Is the script removing the file before it's checked, or is it possible the file is created and removed after its checked? You write: WELLKNOWN \"should point directly to the directory you are serving under /.well-known/acme-challenge.\" \r\n\r\nTo be clear, I've tried pointing WELLKNOWN at different directories in the server's delivery tree, including one that doesn't send cookies with the content, but letsencrypt response is consistently a 404 error with reference to the server's root directory.\r\n\r\nI know dehydrated is using other values from config; The evidence is in the lack of errors and the files returned in specified non-default locations.\r\n\r\nMight value of WELLKNOWN get overwritten or lost somewhere?\r\n\r\nDehydration is supplied only 1 domain via domains.txt  (No www.or97.net.) Has this case been tested?\r\n btw:\r\n$ bash --version\r\nGNU bash, version 4.3.42(1)-release\r\n$ uname -r\r\n10.3-STABLE\r\n This seems conspicuously similar to issue #330 except producing a silent error later on. My understanding of bash is limited, but am investigating further.  Hey,\r\n\r\nfirst of all, thanks for this great script.\r\n\r\nI have some domains on CloudFlare and others on Route53. This forces me to rotate the file domains.txt to use different hooks.\r\n\r\nIt would be nice if I could just specify as a parameter the right domains.txt file great, let's make it more visible in the client help :)  I just got through https://github.com/lukas2511/dehydrated/issues/47 and have a suggestion.\r\n\r\nI agree that doing detailed message and log handling in the script is difficult, as many people have different opinions and needs for the messages. Would it be possible to have a 'done' hook that gets called with the exit status and unchanged / changed as a parameter? \r\n\r\nThen the (cron) logging would work as follows:\r\n- cron job writes a logfile wherever (can decide to /dev/null it, tee it, pipe it to a log, whatever)\r\n- final hook gets the exit status and action status and can decide to mail the log, do nothing, or whatever\r\n\r\nThe only question is if there need to be two hooks: done_domain and done_dehydrated, with one being called when each domain is done with result and action for each domain, and the other with the success / fail result for all domains (when processing multiples) and the action (unchanged / changed). This seems like it would keep the dehydrated script simple (only the exit code and action need to be tracked), and the users can do whatever they need in the hook. https://github.com/lukas2511/dehydrated/issues/316 would be resolved by this as well. Sometimes sysadmins don't want to use _many_ tools for one task, and prefer to use one tool. \r\n > Most of the time it's better to have multiple tools each doing one job really good instead of having one tool that does everything okayish\r\n\r\nNobody here is asking about \"please create nice logging for us, so tool would show its output only when problem exists\" to match principle \"no news are good news\". People understand complexity of this task and do not prefer \"okayish\" solution.\r\n\r\nBut adding three lines of code calling `done_dehydrated` hook will not make tool worse. Thanks for 'exit_hook'.\r\n\r\nI`m using it this way (hook.sh):\r\n\r\n```\r\n#!/bin/bash\r\n\r\nif [ ${1} == \"deploy_cert\" ]; then\r\n  touch ${BASEDIR}/.service-nginx-reload\r\nfi\r\n\r\nif [ ${1} == \"exit_hook\" ]; then\r\n  if [ -r \"${BASEDIR}/.service-nginx-reload\" ]; then\r\n      rm \"${BASEDIR}/.service-nginx-reload\"\r\n      service nginx reload\r\n  fi\r\nfi\r\n```\r\nI don't want `nginx reload` for each certificate renewed in batch.\r\n\r\nThanks again.  It would be a nice idea that if the hook runs and cert gets renewed, that the old certificate that was replaced is revoked.\r\n\r\nThis would mean if you do the renewal with 30 days left, the previously active cert would be revoked once replaced.\r\n\r\nI guess this would be best implemented as either a config option or a --revoke type option.  I currently use my own `certbot-auto certonly ...` process/scripts to get my LE certs via standalone webserver mode.\r\n\r\nI currently require/pass arguments to certbot-auto that include\r\n\r\n    --staple-ocsp --must-staple --redirect --hsts --uir\r\n\r\nI'd like to switch to dns-01 challenge; I'm revisiting 'dehydrated' script.\r\n\r\nIn its options I find only\r\n\r\n    --ocsp     Sets option in CSR indicating OCSP stapling \r\n\r\nand in \"docs/per-certificate-config.md\",\r\n\r\n    Currently supported options:\r\n\r\n    - PRIVATE_KEY_RENEW\r\n    - KEY_ALGO\r\n    - KEYSIZE\r\n    - OCSP_MUST_STAPLE\r\n    - CHALLENGETYPE\r\n    - HOOK\r\n    - HOOK_CHAIN\r\n    - WELLKNOWN\r\n    - OPENSSL_CNF\r\n    - RENEW_DAYS\r\n\r\n\r\n(1) is dehydrated's cmd-lin \"--ocsp\" option equivalent to\r\n\r\n    --staple-ocsp --must-staple\r\n\r\n? or, is the \"OCSP_MUST_STAPLE\" config additionally required?\r\n\r\n(2) does dehydrated support any of\r\n\r\n    --redirect --hsts --uir\r\n\r\nand, if so, what's the syntax/usage?\r\n --ocsp / OCSP_MUST_STAPLE is the dehydrated equivalent for --must-staple. (Setting --ocsp on the command line is equivalent to setting OCSP_MUST_STAPLE in a config file.)\r\n\r\n--staple-ocsp, --redirect, --hsts, and --uir look like features not implemented by dehydrated. This is largely because dehydrated is a script, not a webserver. If you need your webserver to implement these options, you should configure it accordingly. That would be outside the scope of dehydrated itself.\r\n\r\nDehydrated does support the use of hook scripts (and in fact requires them for handling dns-01 challenges). If you needed to configure a webserver during (or after) certificate renewal, you may be able to do so with a hook script. But if you're going to switch to dns-01 challenges, I don't think you'd need the other flags (besides OCSP_MUST_STAPLE). At least not in dehydrated.  According to \r\n\r\nhttps://github.com/certbot/certbot/issues/1215\r\n\r\n---------\r\nThe API to do this already exists on the boulder side, POSTing a registration object with a changed contacts field to /acme/reg should update the registration.\r\n----------\r\n\r\nIt would be nice if there were an option to do this in dehydrated client. Or even better - do it automatically if the address in the config doesn't match the address in registration_info.json It would be very helpful to have a way to update contact info from dehydrated.\r\n\r\nI'm not as sure about updating it automatically when a change is made to the config, though... Given that the client can support multiple config files and multiple ACME servers, I think I would personally prefer that the contact update operation only be issued through manual invocation, rather than having something put through automatically. Perhaps a \"Your contact information in configuration doesn't match registration, exiting...\" error (or warning), combined with a \"--update-registration\" option that would cause it to react to that situation by updating the registration if needed. I like the thought of a notification being dropped into the logs, possibly notated as a warning. Shouldn't cause the client to exit or abort the current execution.\r\n\r\n--update-registration (or whatever the option is) should be able to be executed on its own. That is, without an accompanying -c or -d options.\r\n\r\nIn my own environment (for example), dehydrated is running under cron. I don't want changed contact info to abort a scheduled run... but if a notification / warning popped up in my cron logs, I'd be happy to log in and manually do an --update-registration to address that.    The hook for invalid_challenge still had old notation from bash, I converted the bash notation to sh notation.  ## Proposal\r\n\r\nI'd like to propose defining an allowed prefix that end-user can use to add custom settings to `dehydrated` `config` files, e.g. `CUSTOM_`. This would work in the main `config` file and any custom settings can be added to, or overridden in the per-certificate `config` files.\r\n\r\nAny settings with the `CUSTOM_` prefix would be exported in to the environment used to run the hook script (via the HOOK setting). This would allow the hook script author to add parameterized custom behaviors on a global or per-cert basis.\r\n\r\nFor example to control the `deploy_cert` behavior user could define per-certificate settings like:\r\n```\r\nCUSTOM_RESTART_APACHE=\"yes\"\r\nCUSTOM_DEPLOY_CERT_DIR=\"/var/www/mysite/certs/\"\r\n```\r\nor other behavior settings e.g.\r\n```\r\nCUSTOM_DNS_CHALLENGE_API=\"route53\"\r\nCUSTOM_RESTART_LIST=\"httpd webmin postfix\"\r\nCUSTOM_NOTIFY_URL=\"https://my.webhook/url\"\r\nCUSTOM_DEPLOY_SSH=\"ssh://server2.example.com/var/www/mysite2/\"\r\n```\r\n\r\nIt would be up to hook script author to pull these settings from the script environment and implement the behaviors with in the hook functions.\r\n\r\n## Background\r\n\r\n`dehydrated` only a fixed set of settings in its `config` file and only allows a fixed set of settings to be overridden in per-certificate `config` files. This is to protect the user from overriding an internal variable by mistake and breaking things. The custom prefix would be a safe way to extend the settings while keeping this protection.\r\n\r\n```\r\n    # read cert config\r\n    # for now this loads the certificate specific config in a subshell and parses a diff of set variables.\r\n    # we could just source the config file but i decided to go this way to protect people from accidentally overriding\r\n    # variables used internally by this script itself.\r\n```\r\n I get that. The `hook.sh` could check for and source e.g. `$CERTDIR/hook-config` to get this stuff.  `dehydrated` allows for per-certificate configuration of various parameters including the `CHALLENGETYPE` (e.g. `http-01` or `dns-01`). I'd like to propose this parameter is passed to the challenge related functions in the `HOOK` script (if any).\r\n\r\nThis would e.g. allow the hook script to only create `dns-01` challenge records for those challenges, and do nothing or something different for `http-01` challenges.\r\n\r\nThe CHALLENGETYPE parameter would be added at an additional/last parameter to:\r\n* `deploy_challenge`\r\n* `clean_challenge`\r\n* `invalid_challenge`\r\n\r\nand so and would be backwards compatible with existing hook scripts.\r\n\r\nThe `CHALLENGETYPE` could be an extra parameter for the HOOK_CHAIN case of X*Y parameters, but this would be a breaking change for people using `HOOK_CHAIN`. The extra parameter could also be entirely omitted in the `HOOK_CHAIN` case to maintain backward compatibility.\r\n\r\nIt is possible to achieve the same result by specifying per-certificate hook scripts, and maintaining separate hook scripts for each challenge type. However as the number of challenge types will grow over time, it seems more cumbersome than parameterizing a single script.\r\n\r\nWhat to people think? That will work, thanks for exporting that!\r\n\r\nAs a comment. I think the challenge type is a pretty intrinsic part if a hook call, since the hook script is there to facilitate the challenge types. So I would have thought it would be the first challenge hook call argument, right before or after the domain name. But the export is equally as functional, so I'll take it and shut up \ud83d\ude09   Hello,\r\n\r\nWhen a challenge is in state \"valid\", the validation loop is skipped, and variables are not initialized, therefore the script crashes : \r\n\r\n```root@magento-1:~/letsencrypt.sh# ./dehydrated -c\r\n# INFO: Using main config file /root/letsencrypt.sh/config\r\nProcessing vm1.xxx.fr\r\n + Signing domains...\r\n + Creating new directory /root/letsencrypt.sh/certs/vm1.xxx.fr ...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting challenge for vm1.xxx.fr...\r\n + Already validated\r\n./dehydrated: line 515: deploy_args: unbound variable\r\n```\r\n\r\ncommenting the `continue` at line 476 makes it working, but I'm not sure it's the best solution (but I'm not a bash expert ;))\r\n\r\n```root@magento-1:~/letsencrypt.sh# ./dehydrated -c\r\n# INFO: Using main config file /root/letsencrypt.sh/config\r\nProcessing vm1.xxx.fr\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting challenge for vm1.xxx.fr...\r\n + Already validated\r\n + Responding to challenge for vm1.xxx.fr...\r\n + Challenge is valid!\r\n + Requesting certificate...\r\n + Checking certificate...\r\n + Done!\r\n + Creating fullchain.pem...\r\n + Done!\r\n\r\n``` I know this is disabling the functionality, It was not a proposed fix, only a workaround info  Hi\r\n\r\nrunning dehydrated version 7f30826a6dad1c1f07641aaa48cccb74480998ab on Debian 8\r\n\r\ndeploy_args is empty on line 515 if challenge_status is \"valid\" on line 474 ( https://github.com/lukas2511/dehydrated/blob/master/dehydrated#L474 \r\n\r\nJoerg\r\n\r\n```\r\n./dehydrated -x -c\r\n# INFO: Using main config file /opt/dehydrated/config\r\nProcessing www.xxxxx.xx\r\n + Checking domain name(s) of existing cert... unchanged.\r\n + Checking expire date of existing cert...\r\n + Valid till Mar 19 12:48:00 2017 GMT (Longer than 30 days). Ignoring because renew was forced!\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting challenge for www.xxxxx.xx...\r\n + Already validated\r\n./dehydrated: line 515: deploy_args: unbound variable\r\n``` Same problem some lines below with check_altnames.\r\n\r\nI solved this by surrounding with ` if [[ ${deploy_args[@]:+${deploy_args[@]}} ]]; then [...] fi`, ` if [[ ${check_altnames[@]:+${ceck_altnames[@]}} ]]; then [...] fi`.\r\nBut maybe there is a way for proper initialisation with Bash. Hi,\r\n\r\nYou have to comment the line 476 :  \r\n\r\n473     challenge_status=\"$(printf '%s' \"${response}\" | rm_json_arrays | get_json_string_value status)\"\r\n474     if [ \"${challenge_status}\" = \"valid\" ]; then\r\n475        echo \" + Already validated\"\r\n476        #continue\r\n477     fi\r\n Commenting out the 'continue' works but break the feature it was supposed to add. I added a test for an empty array around the challenge loop that resolved it for me, and the feature to skip the challenge for already validated names works.\r\n\r\n```\r\n  if [ ${#challenge_altnames[@]} -ne 0 ]; then\r\n    for altname in \"${challenge_altnames[@]:0}\"; do\r\n```\r\n...\r\n```\r\n    done\r\n  fi\r\n````\r\n\r\nI created a pull request #321 to make this change. Just installed and ran the patched code, but am still getting the same error that @lingej posted. \r\n\r\nI'm using GNU bash, version 4.3.30(1)-release (arm-unknown-linux-gnueabihf) on Raspbian Jessie. Just tested your latest changes, and no more error. Thanks!  Hello!\r\n\r\nLet\u2019s Encrypt now supports issuance for Internationalized Domain Names (IDNs) (https://letsencrypt.org/upcoming-features/). Please add IDNs support for your script.\r\n\r\nThanks  Add a possibily to the hook script to be called at the end of all processing when any deploy_cert has been called.\r\n\r\nThat would be usefull for instance to restart/reload the apache/other webserver config only once, instead of at each time a cert is deployed when there are many certs to deploy. I'm not sure this is required.... You could implement this with a normal hook, say, create a file called cert-deployed.txt and add your domains to it within the HOOK. If this file changes, run something else - ie:\r\n\r\n```\r\n#!/bin/bash\r\nif [ -f deployed_domains.txt ]; then\r\n    rm -f deployed_domains.txt\r\nfi\r\ndehydrated -c\r\nif [ -f deployed_domains.txt ]; then\r\n    systemctl reload httpd\r\nfi\r\n```\r\n\r\nThen in your normal HOOK file, touch the 'deployed_domains.txt' file within the deploy_cert stage.  Hi \r\n\r\nAs what we know, http and dns is used to verify domain owner in common.\r\nBut our customer site block http(port 80) and they don't have right or skill to modify dns record, the only chance for us to verify domain owner is https(port 443).\r\n\r\nDoes dehydrated support domain verification by https(port 443), like letsencrytp-auto \r\n--standalone-supported-challenges http-01 to use port 80\r\n--standalone-supported-challenges tls-sni-01 to use port 443\r\n\r\nThank in advance~ This a duplicate of #271   Under the following circumstances certificate specific config file will not be loaded:\r\n\r\n- Using http-01 in `$SCRIPTDIR/config` (e.g using default config from `docs/examples/config`)\r\n- WELLKNOWN-dir does not exists\r\n- certificate specific config file placed in `certs/domain.tld/config`\r\n\r\n```\r\nroot@host:/tmp# /root/dehydrated/dehydrated -c -d domain.tld\r\n# INFO: Using main config file /root/dehydrated/config\r\nERROR: WELLKNOWN directory doesn't exist, please create /var/www/dehydrated and set appropriate permissions.\r\n```\r\n\r\nEven if the certificate specific config is using dns-01 it seems to be odd to enforce an existing WELLKNOWN-dir. Creating it is a simple workaround if you're using dns-01 only.  Hello,\r\n\r\nIs it possible to obtain challenges without verification and after that execute dehydrated again to verify domain?\r\nUnfortunately I can't execute script on the server. But I can place any files manually under \"http://mydomain.com/.well-known/acme-challenge/something\". It would be great to be able obtain challenges and verify domain with another command.\r\n\r\nSincerely,\r\nAlexandr https://github.com/lukas2511/dehydrated/issues/138 might be of help Unfortunately I can't create an account with that script because of this issue: https://github.com/gheift/letsencrypt.sh/issues/24  Just cloned your repository, configured config and all necessary files. \r\nStarted a test with `dehydrated -f /etc/dehydrated/config -c` and got the following\r\n\r\n```\r\nroot@domain:/etc/dehydrated# /opt/dehydrated/dehydrated -f /etc/dehydrated/config -c\r\n# INFO: Using main config file /etc/dehydrated/config\r\n# INFO: Using additional config file /etc/dehydrated/hook.sh\r\n/etc/dehydrated/hook.sh: Zeile 77: $1 ist nicht gesetzt.\r\n```\r\n\r\nSo it seems that the script is called without parameter and got this exception. So I added in my pull request a simple if-else-statement!  Some name servers are really slow with reloading their zone files see #308. Therefore I need to have a sleep in my hook script (~15 minutes) to delay the challenge until the name servers are updated.\r\n\r\nThis is no problem when I only have one domain in my domains.txt. But when I have multiple domains dehydrated does call my hook for every domain, I do the wait, then it goes on with the challenge. Therefore I have 15 minutes wait time per domain. \r\n\r\nTo solve this there should be another hook where dehydrated passes all domains at once to the hook script so it can create all TXT records and wait. Then the challenge can go on and all challenges succeed.\r\n I feel like HOOK_CHAIN might be what you're looking for, which bundles all the challenges for a single certificate into one hook call.\n\nThere is no function to pass all challenges from all certificates in a single execution pass into a single hook call. My gut instinct is that this is a good design decision--bundling all challenges from all certificates would require a re-work of the main script's logic. Right now, it handles each certificate one at a time, and using HOOK_CHAIN doesn't really disrupt that overall flow.\n\nBut to implement a theoretical \"HOOK_CHAIN_ALL\" you'd have to rewrite the logic to go through all certificates, find the ones nearing expiry, request all challenges for all certificates, hook that out, wait for all challenges to be available, then request and update all the certificates which had to be expired, and then call separate instances of deploy_cert through your hook script, once for each certificate. Yes, it could be done, but it would be a pretty massive rewrite, only to be used in the event of setting the HOOK_CHAIN_ALL flag.\n Okay that is better than nothing  but does not help much if I want to update multiple domains at gandi. I had to put it all onto one certificate or wait the time for each certificate.\n That's correct. And at that point, it's less a problem within dehydrated, and more a problem at Gandi.\n  I have followed the nice example at https://www.aaflalo.me/2016/09/dehydrated-bash-client-lets-encrypt/ and have things setup on an Ubuntu 14.04\r\n\r\nBut I seem to have a missing slash \"/\" somewhere and I cant find it.\r\nMy output is:\r\n\r\n```\r\nProcessing sub.mydomain.dk\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting challenge for sub.mydomain.dk...\r\n + Responding to challenge for sub.mydomain.dk...\r\nERROR: Challenge is invalid! (returned: invalid) (result: {\r\n  \"type\": \"http-01\",\r\n  \"status\": \"invalid\",\r\n  \"error\": {\r\n    \"type\": \"urn:acme:error:connection\",\r\n    \"detail\": \"Could not connect to sub.mydomain.dk.well-known\",\r\n    \"status\": 400\r\n  },\r\n  \"uri\": \"https://acme-staging.api.letsencrypt.org/acme/challenge/6LxKELET2eL6diD-ovIPrKE9LHKQNGU2SmZh3MLsDc4/16900890\",\r\n  \"token\": \"KP8Um5SjkvoYi41fE2Hmsg7Gn4BClvPx3CjpNcqzTCo\",\r\n  \"keyAuthorization\": \"KP8Um5SjkvoYi41fE2Hmsg7Gn4BClvPx3CjpNcqzTCo.RzSA_osSH4_aPw-z2ZyR0ob05YOIOwsnySON7jA3zzE\",\r\n  \"validationRecord\": [\r\n    {\r\n      \"url\": \"http://sub.mydomain.dk/.well-known/acme-challenge/KP8Um5SjkvoYi41fE2Hmsg7Gn4BClvPx3CjpNcqzTCo\",\r\n      \"hostname\": \"sub.mydomain.dk\",\r\n      \"port\": \"80\",\r\n      \"addressesResolved\": [\r\n        \"194.88.216.41\"\r\n      ],\r\n      \"addressUsed\": \"194.88.216.41\"\r\n    },\r\n    {\r\n      \"url\": \"https://sub.mydomain.dk.well-known/acme-challenge/KP8Um5SjkvoYi41fE2Hmsg7Gn4BClvPx3CjpNcqzTCo\",\r\n      \"hostname\": \"sub.mydomain.dk.well-known\",\r\n      \"port\": \"443\",\r\n      \"addressesResolved\": null,\r\n      \"addressUsed\": \"\"\r\n    }\r\n  ]\r\n})\r\n```\r\nI notice that the hostname is prepended with \".well-known\" Could that be the issue ?\r\n\r\nRegards and thanks for a nice script\r\nSupergoof I don't think it's that because I have the same problem and if I access the url in the browser with 'http' instead of 'https' it redirects correctly. And the alias is created like in your doc file.  Hi,\r\nI'm trying to automate my renewal for certificates with hkpk / dane in mind (using --singcsr /path/to/my.csr --out /path/to/location) but only get the cert as an output in shell. Am I missing something or is this not supported?  I'm using an older version of the letsencrypt.sh script (from August, I think).\n\nI have a domain with 70 subdomains that I am trying to renew the cert for. But, the LE server seems to be busy right now and I have been unable to run the script all the way through without the script aborting with a Server Busy (500) error partway through execution.\n\nHere is the error message on one of the aborts:\n\n```\n + Requesting challenge for va.walr.us...\n + Requesting challenge for wa.walr.us...\n + Requesting challenge for wv.walr.us...\n  + ERROR: An error occurred while sending post-request to https://acme-v01.api.letsencrypt.org/acme/new-authz (Status 500)\n\nDetails:\n<HTML><HEAD><TITLE>Error</TITLE></HEAD><BODY>\nAn error occurred while processing your request.<p>\nReference&#32;&#35;179&#46;cb2bf648&#46;1477693536&#46;13fbd21a\n</BODY></HTML>\n```\n\nAnd, here is another:\n\n```\n + Responding to challenge for mb.walr.us...\n + Challenge is valid!\n + Responding to challenge for nb.walr.us...\n + Challenge is valid!\n + Responding to challenge for nl.walr.us...\n  + ERROR: An error occurred while sending post-request to https://acme-v01.api.letsencrypt.org/acme/challenge/QWH5zHZkedorybrcjyqpIVp94YzO-lw8Lll5064q7dw/204691332 (Status 500)\n\nDetails:\n<HTML><HEAD><TITLE>Error</TITLE></HEAD><BODY>\nAn error occurred while processing your request.<p>\nReference&#32;&#35;179&#46;cb2bf648&#46;1477693078&#46;13f3a5ff\n</BODY></HTML>\n```\n\nI think the script should check for a Status 500 and delay for 15 seconds or so and then retry the post-request.\n\nI am using DNS challenges so when the script aborts, it leaves outstanding challenges and LE eventually makes me wait a week (like happened to me tonight) for the outstanding challenges to age off and allow me to try the script again.\n There is about issue in letsecrypt repo about it https://github.com/letsencrypt/boulder/issues/1943#issuecomment-247550765\n facing this issue today, despite that letsencrypt status is ok. It happens on about 124 requests. \r\n\r\n```\r\n+ ERROR: An error occurred while sending post-request to https://acme-staging.api.letsencrypt.org/acme/new-authz (Status 500)\r\n\r\nDetails:\r\n<HTML><HEAD><TITLE>Error</TITLE></HEAD><BODY>\r\nAn error occurred while processing your request.<p>\r\nReference&#32;&#35;179&#46;72fcd4d9&#46;1481875287&#46;9e6f771\r\n</BODY></HTML>\r\n\r\n\r\n + CloudFlare hook executing: clean_challenge\r\n + http_request() error in letsencrypt.sh?\r\n```\r\n\r\nless than 100, pass ok.  I'm using the latest version of dehydrated and this still happens for me. Any chance of a fix coming soon?\r\n\r\n```\r\n + Requesting challenge for imap.wi.walr.us...\r\n + Requesting challenge for imap.wy.walr.us...\r\n + CloudFlare hook executing: deploy_challenge\r\n + Settling down for 10s...\r\n + Responding to challenge for imap.ab.walr.us...\r\n + Challenge is valid!\r\n + Responding to challenge for imap.bc.walr.us...\r\n + Challenge is valid!\r\n + Responding to challenge for imap.mb.walr.us...\r\n + Challenge is valid!\r\n + Responding to challenge for imap.nb.walr.us...\r\n + Challenge is valid!\r\n + Responding to challenge for imap.nl.walr.us...\r\n + Challenge is valid!\r\n + Responding to challenge for imap.nt.walr.us...\r\n  + ERROR: An error occurred while sending post-request to https://acme-v01.api.letsencrypt.org/acme/challenge/icWKuzvIizvhXXM39SFY7xAEdlY92UDSzLVEjQjx8rE/696947227 (Status 500)\r\n\r\nDetails:\r\n<HTML><HEAD><TITLE>Error</TITLE></HEAD><BODY>\r\nAn error occurred while processing your request.<p>\r\nReference&#32;&#35;179&#46;df2bf648&#46;1487897858&#46;32a9724\r\n</BODY></HTML>\r\n\r\n``` Turns out this doesn't seem to be as bad a problem as it was before. When I re-ran dehydrated, it didn't deploy_challenges for the ones that had previously succeeded. Instead, it picked up with the challenge that had failed with the SERVER BUSY error.\r\n\r\nStill, dehydrated should probably check for Status 500 and delay before retrying the post-request. As it is now, the script simply prints the error messages and exits which is not very friendly in the case of a temporary problem like SERVER BUSY.  Using the script for the first time, it was not clear to me how to change the default config.\n  See https://github.com/koalaman/shellcheck/wiki/TravisCI\n Please consider fixing these shellcheck warnings\n\nhttps://travis-ci.org/lukas2511/dehydrated/builds/168084127#L269\n\nor insert\n\n``` bash\n# shellcheck disable=SC0000\n```\n See https://ngrok.com/download\n\n\n-- \n+36204242498\nEzen a k\u00e9sz\u00fcl\u00e9ken sok az el\u00fct\u00e9s. \nEln\u00e9z\u00e9st!\n\nOn January 1, 2017 10:43:03 PM CET, leonklingele <notifications@github.com> wrote:\n>leonklingele commented on this pull request.\n>\n>\n>\n>> @@ -3,6 +3,8 @@\n> # Fail early\n> set -eu -o pipefail\n> \n>+NGROK_URL=\"https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip\"\n>\n>(I'm referring to the URL)\n>\n>-- \n>You are receiving this because you authored the thread.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/lukas2511/dehydrated/pull/298\n  Please see https://community.letsencrypt.org/t/challenges-stay-at-pending-state-acme-client-locks-up/21188/ for a description of the problem and a possible solution.\n I'm pretty sure this was addressed by #293 (and #321), as dehydrated now checks for existing domain validations.  Hi,\n\nSo, I had some issues with LE/dehydrated. I made a [post on the LE Community](https://community.letsencrypt.org/t/curl-returned-with-35-anti-replay-nonce-seems-ipv6-related/21026).\n\nThe issue is specific to IPv6 (in my case), causing the `curl returned with 35` error. Forcing dehydrated (and in turn, curl) to use IPv4 (with `--ipv4`), \"solved\" the issue. There are no noticable issues with our IPv6 connectivity, and RTT is also low towards the LE servers (both on IPv4 and IPv6), but curl still ends up using a lot of time on some of the queries over IPv6.\n\nNot sure if this is really an issue with LE's servers, but nontheless dehydrated should probably handle those errors more gracefully? I.e. by either a) retry the connection N times when it's `error 35`, or b) extend the timeout? (afaik the default timeout of curl is `0`, which is \"forever\", so not sure why `error 35` is even the issue).\n\nMy ugly measurement setup;\n\n> `i=1;while true; do echo \"`date`: Measurement #$i\"; timelol=\"`{ time curl -s6 https://acme-staging.api.letsencrypt.org/acme/new-authz >/dev/null; } 2>&1 | grep real | perl -wple 's,real\\s+,,g'`\"; seconds=`echo $timelol|cut -d'.' -f1|perl -wple 's,0m,,'` ; if [ $seconds -gt 5 ]; then echo \"`date`: Long measurement (#$i): $timelol\"; fi; let i=\"i+1\"; sleep 1; done`\n\nDid about 600 measurements, and ~60 of them had 5+ seconds. Most of them well below 30 seconds, and all of them below 60 seconds.\n\nAny takers?\n Results from the measurement;\n\n```\nThu Oct 13 18:09:12 UTC 2016: Long measurement (#21): 0m6.205s\nThu Oct 13 18:10:48 UTC 2016: Long measurement (#52): 0m8.981s\nThu Oct 13 18:12:03 UTC 2016: Long measurement (#67): 0m36.409s\nThu Oct 13 18:13:03 UTC 2016: Long measurement (#86): 0m12.810s\nThu Oct 13 18:13:10 UTC 2016: Long measurement (#87): 0m6.192s\nThu Oct 13 18:13:36 UTC 2016: Long measurement (#90): 0m16.551s\nThu Oct 13 18:14:25 UTC 2016: Long measurement (#103): 0m9.804s\nThu Oct 13 18:15:06 UTC 2016: Long measurement (#114): 0m8.070s\nThu Oct 13 18:16:00 UTC 2016: Long measurement (#130): 0m8.104s\nThu Oct 13 18:16:46 UTC 2016: Long measurement (#143): 0m7.516s\nThu Oct 13 18:17:09 UTC 2016: Long measurement (#146): 0m15.988s\nThu Oct 13 18:17:34 UTC 2016: Long measurement (#149): 0m16.204s\nThu Oct 13 18:17:48 UTC 2016: Long measurement (#152): 0m8.387s\nThu Oct 13 18:18:26 UTC 2016: Long measurement (#153): 0m36.921s\nThu Oct 13 18:19:10 UTC 2016: Long measurement (#160): 0m31.603s\nThu Oct 13 18:20:12 UTC 2016: Long measurement (#178): 0m6.333s\nThu Oct 13 18:20:54 UTC 2016: Long measurement (#189): 0m8.390s\nThu Oct 13 18:21:13 UTC 2016: Long measurement (#193): 0m10.231s\nThu Oct 13 18:22:30 UTC 2016: Long measurement (#214): 0m16.182s\nThu Oct 13 18:22:45 UTC 2016: Long measurement (#217): 0m9.573s\nThu Oct 13 18:24:09 UTC 2016: Long measurement (#234): 0m31.919s\nThu Oct 13 18:25:02 UTC 2016: Long measurement (#251): 0m8.945s\nThu Oct 13 18:25:22 UTC 2016: Long measurement (#256): 0m8.541s\nThu Oct 13 18:26:53 UTC 2016: Long measurement (#276): 0m32.204s\nThu Oct 13 18:27:32 UTC 2016: Long measurement (#278): 0m34.973s\nThu Oct 13 18:28:03 UTC 2016: Long measurement (#287): 0m8.449s\nThu Oct 13 18:28:46 UTC 2016: Long measurement (#295): 0m16.320s\nThu Oct 13 18:30:08 UTC 2016: Long measurement (#311): 0m40.534s\nThu Oct 13 18:30:55 UTC 2016: Long measurement (#321): 0m16.758s\nThu Oct 13 18:31:35 UTC 2016: Long measurement (#331): 0m9.212s\nThu Oct 13 18:33:24 UTC 2016: Long measurement (#359): 0m16.584s\nThu Oct 13 18:34:06 UTC 2016: Long measurement (#366): 0m23.815s\nThu Oct 13 18:34:39 UTC 2016: Long measurement (#374): 0m11.867s\nThu Oct 13 18:34:52 UTC 2016: Long measurement (#377): 0m8.927s\nThu Oct 13 18:35:46 UTC 2016: Long measurement (#386): 0m32.073s\nThu Oct 13 18:36:31 UTC 2016: Long measurement (#392): 0m31.399s\nThu Oct 13 18:37:37 UTC 2016: Long measurement (#403): 0m35.073s\nThu Oct 13 18:37:57 UTC 2016: Long measurement (#407): 0m8.324s\nThu Oct 13 18:38:41 UTC 2016: Long measurement (#419): 0m8.283s\nThu Oct 13 18:39:31 UTC 2016: Long measurement (#435): 0m6.066s\nThu Oct 13 18:40:29 UTC 2016: Long measurement (#446): 0m23.713s\nThu Oct 13 18:40:59 UTC 2016: Long measurement (#451): 0m18.495s\nThu Oct 13 18:41:23 UTC 2016: Long measurement (#456): 0m8.452s\nThu Oct 13 18:42:21 UTC 2016: Long measurement (#464): 0m32.772s\nThu Oct 13 18:43:13 UTC 2016: Long measurement (#479): 0m8.431s\nThu Oct 13 18:43:44 UTC 2016: Long measurement (#484): 0m17.562s\nThu Oct 13 18:44:18 UTC 2016: Long measurement (#492): 0m9.841s\nThu Oct 13 18:44:25 UTC 2016: Long measurement (#493): 0m6.437s\nThu Oct 13 18:44:48 UTC 2016: Long measurement (#498): 0m12.118s\nThu Oct 13 18:45:12 UTC 2016: Long measurement (#504): 0m8.279s\nThu Oct 13 18:45:47 UTC 2016: Long measurement (#512): 0m8.117s\nThu Oct 13 18:46:29 UTC 2016: Long measurement (#516): 0m31.404s\nThu Oct 13 18:46:52 UTC 2016: Long measurement (#523): 0m6.006s\nThu Oct 13 18:47:16 UTC 2016: Long measurement (#530): 0m8.636s\nThu Oct 13 18:48:36 UTC 2016: Long measurement (#550): 0m17.499s\nThu Oct 13 18:48:53 UTC 2016: Long measurement (#552): 0m10.422s\nThu Oct 13 18:49:12 UTC 2016: Long measurement (#554): 0m15.935s\nThu Oct 13 18:49:47 UTC 2016: Long measurement (#556): 0m31.504s\nThu Oct 13 18:50:18 UTC 2016: Long measurement (#561): 0m10.033s\nThu Oct 13 18:50:57 UTC 2016: Long measurement (#564): 0m32.793s\nThu Oct 13 18:52:32 UTC 2016: Long measurement (#590): 0m24.894s\nThu Oct 13 18:52:53 UTC 2016: Long measurement (#592): 0m17.614s\nThu Oct 13 18:53:58 UTC 2016: Long measurement (#612): 0m9.991s\nThu Oct 13 18:54:45 UTC 2016: Long measurement (#624): 0m8.508s\n```\n\nmtr over IPv4;\n\n```\njocke@kek:~$ mtr -n4 --report acme-staging.api.letsencrypt.org\nStart: Thu Oct 13 19:02:09 2016\nHOST: kek                         Loss%   Snt   Last   Avg  Best  Wrst StDev\n  1.|-- <snip>                     0.0%    10    1.1   2.0   0.8   4.4   1.1\n  2.|-- <snip>                     0.0%    10    0.4   0.5   0.4   0.9   0.0\n  3.|-- 82.134.66.197              0.0%    10    1.2   1.3   1.1   1.8   0.0\n  4.|-- 193.28.236.254             0.0%    10    7.6   7.5   7.3   7.6   0.0\n  5.|-- 193.28.236.253             0.0%    10    7.6   7.7   7.5   8.7   0.3\n  6.|-- 62.140.27.29               0.0%    10    7.7   7.6   7.5   7.8   0.0\n  7.|-- 4.69.206.110              90.0%    10   14.8  14.8  14.8  14.8   0.0\n  8.|-- 4.69.206.110              90.0%    10   14.7  14.7  14.7  14.7   0.0\n  9.|-- 4.68.63.186                0.0%    10   14.5  14.5  14.4  14.7   0.0\n 10.|-- 195.22.214.167             0.0%    10   37.0  36.9  36.8  37.4   0.0\n 11.|-- 195.22.214.237             0.0%    10   36.8  36.9  36.7  37.2   0.0\n 12.|-- 195.13.60.178              0.0%    10   46.0  46.2  45.8  46.4   0.0\n 13.|-- 193.34.48.162             10.0%    10   51.2  51.4  50.0  53.4   0.7\n 14.|-- 193.34.48.146              0.0%    10   51.5  52.0  51.0  55.8   1.3\n 15.|-- 104.87.208.66             10.0%    10   50.8  51.3  50.8  52.3   0.0\n```\n\nmtr over IPv6;\n\n```\njocke@kek:~$ mtr -n6 --report acme-staging.api.letsencrypt.org\nStart: Thu Oct 13 19:02:09 2016\nHOST: kek                         Loss%   Snt   Last   Avg  Best  Wrst StDev\n  1.|-- <snip>                     0.0%    10    1.5   3.4   1.0  15.5   4.2\n  2.|-- <snip>                     0.0%    10    0.5   0.5   0.4   0.7   0.0\n  3.|-- 2a00:14d8:1001:734::1      0.0%    10    1.3   1.4   1.3   1.5   0.0\n  4.|-- 2001:67c:324:2::2          0.0%    10    7.8   7.7   7.5   7.9   0.0\n  5.|-- 2001:67c:324:2::1          0.0%    10    8.1   8.1   7.6   9.1   0.3\n  6.|-- 2001:1900:5:2:2::3ea5      0.0%    10    7.7   7.7   7.5   7.9   0.0\n  7.|-- 2001:1900:2::3:5f          0.0%    10   29.0  28.9  28.8  29.1   0.0\n  8.|-- 2001:1900:4:3::266         0.0%    10   29.0  29.6  29.0  34.3   1.6\n  9.|-- 2a01:3e0:ff40:200::21      0.0%    10   36.4  36.6  36.4  36.7   0.0\n 10.|-- 2a01:3e0:ff40:200::16     30.0%    10   35.2  34.9  34.7  35.2   0.0\n 11.|-- 2a02:b0:ffff:ffff:ffff:ff 10.0%    10   64.8  45.5  42.8  64.8   7.2\n 12.|-- 2a02:b0:ffff:ffff:ffff:ff 20.0%    10   42.8  42.8  42.6  43.2   0.0\n 13.|-- 2a02:26f0:d5:295::3d5     20.0%    10   42.8  42.9  42.7  43.3   0.0\n```\n So, the high request-time is gone (for now), but the point of this issue still remains (i.e. dehydrated should handle timeouts better).\n  Hi,\n\ndehydrated already very handily creates the chain-PEMs, but e.g. lighttpd[0] requires a PEM file that's a combination of the key and the certificate. Would it be possible to also create that? I could probably do that through a hook, but that seems kind of bothersome..\n\nThanks a lot,\nLukas\n\n[0] http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs_SSL\n  For domains that are already validated we don't need to fulfill further challenges.\n\nIf a challenge request for a domain returns `\"status\": \"valid\"` no further validation is required and further processing is skipped. Skipping this further processing also avoids parsing problems when the challenge response contains additional fields, for example describing a previous successful DNS challenge.\n\nThe new variable `${challenge_altnames}` is used to keep track of the names that are not validated yet and still need do the challenge. When later iterating over this possibly empty array a `:0` substring expansion has to be used to avoid bash complaining about an unbound variable (it treats empty arrays as unset).\n\nThis solves the same problem as pull request #283, hopefully in a more robust way.\n This patch causes errors whenever a domain is already validated, because the 'continue' causes the initialization of several variables to be skipped. If all names on a cert are already validated, the variable initialization is always skipped, triggering the error in later code.\r\n\r\n```\r\n + Already validated\r\n./dehydrated: line 441: challenge_altnames[@]: unbound variable\r\n```\r\n\r\nSee additional reports of errors cause by this patch in issue #320 \r\n\r\nCommenting out the 'continue' is a workaround, but of course defeats the goal of the patch. I created a pull request #321 to fix this issue by adding an empty array test.  Adds the necessary dependencies and files to a Dockerfile so the dehydrated script can be run inside a container.\n See https://github.com/lukas2511/dehydrated/pull/286\n I added a [wiki page](https://github.com/lukas2511/dehydrated/wiki/Docker-support).\n\nI'm curious why nobody wants Docker support?\n Because its utterly useless. Obviously people have drunk too much of the docker cool-aid.\n\nDehydrate is a simple script, there is no need to use it as a docker.  It also relies on a webserver or a dnsserver to fullfill the request, so your docker image is invalid for practical points.\n That was incredibly rude.  I was just asking a question.\n @jmreicha that was me being nice, sorry if you were offended.\n\nFor small admin scripts containerizing them adds to the management complexity. \n @lukas2511 That makes sense, I appreciate the explanation.\n  Added PKCS#12 (PFX) cert output for importing into windows (tested on Server 2012 R2 with IIS 8.5).  Can specify a password to protect the key in config/param, otherwise defaults to blank password.\n PFX output should be optional, not mandatory.\n\nI'm currently using dehydrated on a single, master certificate server for all domains and certificates across our company. Some certificates are required in PEM format, some are required in PFX format, and some (in both formats) have password requirements on the private key. I've written a separate script to process the raw PEM files to add passwords or convert to PFX (with or without passwords) before outputting them to the required target.\n\nGiven that this is a bash script, it seems more likely to be run in a Linux environment, where PEM files are pretty standard (in my experience). Having PFX output as an option in dehydrated wouldn't be a bad thing, but I wouldn't like it to be mandatory--many servers will have no use for PFX files. If PFX output was made a configurable option, though, it could be turned on using a per-certificate config file, making it a more flexible (and useful!) option to have.\n Good suggestion @txr13 with the latest commit PFX creation is optional (disabled by default), also it can be turned on/off and password can be set on a per certificate basis using the method described in docs/per-certificate-config.md\n Thanks for your consideration, for now I'll use my fork but will look into replacing it with a hook if I get the chance.\n\nQuestion (since this is my first PR on Github).   I figured you would squash on merge.  Is it standard practice to rebase commits to clean them up before doing a PR? \n  Sorry that I'm not sure if this is a problem of dehydrated, it only appear on one of my servers with Ubuntu 16.04 LTS, and the error message is very not help.\n\nTried v2.0~3.1, same version and same parameters can work on one another server.\n\nHere is the error message:\n\n```\n# INFO: Using main config file /etc/letsencrypt.sh/config.sh\n  + ERROR: An error occurred while sending get-request to https://acme-v01.api.letsencrypt.org/directory (Status 403)\n\nDetails:\n<HTML><HEAD>\n<TITLE>Access Denied</TITLE>\n</HEAD><BODY>\n<H1>Access Denied</H1>\n\nYou don't have permission to access \"http&#58;&#47;&#47;acme&#45;v01&#46;api&#46;letsencrypt&#46;org&#47;directory\" on this server.<P>\nReference&#32;&#35;18&#46;75481160&#46;1475353435&#46;800eb1b\n</BODY>\n</HTML>\n```\n\nI tried to use a browser to see the message, I got this\n\n```\nAccess Denied\n\nYou don't have permission to access \"http://acme-staging.api.letsencrypt.org/\" on this server.\nReference #18.75481160.1475352241.7fbb713\n```\n\nGoogled (also duckduckgo) 18.75481160.1475352241.7fbb713 but got nothing, have no idea about how to do to debug this problem, any suggest will be appriaciated, thanks!\n It seems like you tried to get access to ACME server via http instead of https (CA variable in config file)\n @adduxa I thought the part you mentioned is just a mistake from the error message returned from ACME server, the CA variable in the script is 100% https no problem, and as I say, the same same script, different 3 versions, run on my two different server, got two different result.\n Oh.. Ok, this is strange\n It's been a few weeks since did this on Ubuntu 16.04 LTS but it worked. But I recall having similar issues until I got the correct CA files, and particularly the Intermed. CA. I was using Let\u2019s Encrypt Authority X1 which is retired: X3 is current.   Hy,\nI've written scripts to build a Debian package. Fell free to merge this.\n\nThnak you,\nGV\n  Would it be possible to implement the ability to delay symlinking to the new cert for x days/invocations/etc to allow time to update TLSA records before the cert is made active.\n\nPerhaps create a new symlink when the cert is created (such as fullchain-new.pem/chain-new.pem/cert-new.pem) which would give a good way for the tlsa script to grab the hash, and then after x invocations or days pull the symlink and re-symlink fullchain.pem to the new cert.\n I was also thinking about this, exactly for the same reason. But I think this is already possible with a hook script. In this case, I would not let my web server use the cert directly from `$BASEDIR/certs/$DOMAIN/`, but from a different location. The hook script then creates an entry in `/etc/cron.d` that waits for the TLSA record TTL to run out, and then copies the certificate to the new location and restarts the web server.\n Yeah that'd certainly work, but would require a separate hook script for each service. I was trying to keep the hook script generic (well, specific to the DNS server, but generic in terms of the service it's supporting).\n  Hi, \n\nI wrote this small Dockerfile (27.81Mb) based on Alpine Linux. \n\nDo you want use it ? \n\nhttps://github.com/valentin2105/dehydrated-docker\nhttps://hub.docker.com/r/valentinnc/dehydrated/\n  Busybox systems have an implementation of `tr` that doesn't support classes, so `tr '[:upper:]' '[:lower:]'` doesn't do what the script expects.\n\n[This stackexchange page](http://unix.stackexchange.com/a/136132) lists some alternative implementation suitable for Busybox.\n With this change and a deploy_cert hook to change the certs to DER format, dehydrated works fine on openwrt, thanks!\n @paour with our somewhat old BusyBox v1.19.4 this works:\r\n```\r\n# echo 'RoadRunner' | tr '[:upper:]' '[:lower:]'\r\nroadrunner\r\n```\r\nThere is a BusyBox configuration option:\r\n```\r\nCONFIG_FEATURE_TR_CLASSES=y\r\n```\r\n```\r\nconfig FEATURE_TR_CLASSES\r\n   bool \"Enable character classes (such as [:upper:])\"\r\n   default y\r\n   depends on TR\r\n   help\r\n     Enable character classes, enabling commands such as:\r\n     tr [:upper:] [:lower:] to convert input into lowercase.\r\n```\r\n\r\n@lukas2511 Though using Busybox the ```-u``` option for ```mktemp``` is not supported, this solves the test for mktemp:\r\n```\r\n-   _mktemp -u > /dev/null 2>&1 || _exiterr \"This script requires mktemp.\"\r\n+   which mktemp > /dev/null 2>&1 || _exiterr \"This script requires mktemp.\"\r\n```\r\nPossibly you could use ```which``` to test for all command dependencies.  Hi, \n\nI have problem on this line \n\nletsencrypt.sh/dehydrated: line 80: unexpected argument `(' to conditional binary operator\n\nAnd i change argument with add \"\" in (http-01|dns-01)\n\nfrom :\n[[ \"${CHALLENGETYPE}\" =~ (http-01|dns-01) ]] || _exiterr \"Unknown challenge type ${CHALLENGETYPE}... can not continue.\"\n\nto :\n[[ \"${CHALLENGETYPE}\" =~ \"(http-01|dns-01)\" ]] || _exiterr \"Unknown challenge type ${CHALLENGETYPE}... can not continue.\"\n\nafter that. i run  ./letsencrypt.sh --config /etc/pki/config.sh --cron\nand i get error \n\nERROR: Challenge is invalid! (returned: invalid) (result: {\n  \"type\": \"http-01\",\n  \"status\": \"invalid\",\n  \"error\": {\n    \"type\": \"urn:acme:error:unauthorized\",\n\nAdditional information:\ncat /proc/version\nLinux version 2.6.18-8.el5 (brewbuilder@ls20-bc2-14.build.redhat.com) (gcc version 4.1.1 20070105 (Red Hat 4.1.1-52)) #1 SMP Fri Jan 26 14:15:21 EST 2007\n\nuname -a\nLinux  2.6.18-8.el5 #1 SMP Fri Jan 26 14:15:21 EST 2007 i686 i686 i386 GNU/Linux\n\ncat /etc/*release\nRed Hat Enterprise Linux Server release 5 (Tikanga)\n\nwhat should i do to fix it?\n\nThank you in advance\n I have update new script but still error like it\n  I just had an issue after switching from dns based challenges to http (see [serverfault](https://serverfault.com/questions/804030/letsencrypt-certificate-renewal-switching-from-dns-to-http) and [le-community](https://community.letsencrypt.org/t/certificate-renewal-switching-from-dns-to-http/20030?u=dennisschuerholz)) so I made this quick fix which allowed me to use dehydrated again.\n\nThe change in Line 464(old)/468(new) corresponds to the \"bigger\" answer as mentioned in the serverfault post. Indeed it may not longer be necessary as I implemented a \"quick escape\" before extracting the challenges but I would leave it there - just in case.\n  While calling `nfsn-setup.sh` from https://github.com/nikjft/lets-nfsn.sh (which uses dehydrated):\n\n```\nSubmodule path 'dehydrated': checked out '319852dc8cf167d8baeb0848b4998e86a02aa2d0'\n + Generating configuration...\n + Generating fallback configuration...\n + Installing hook script...\n + Generating domains.txt...\n + Performing initial run...\n# INFO: Using main config file /home/private/lets-nfsn.sh/dehydrated/config\n+ Generating account key...\n+ Registering account key with ACME server...\n  + ERROR: An error occurred while sending post-request to https://acme-v01.api.letsencrypt.org/acme/new-reg (Status 400)\n\nDetails:\n{\n  \"type\": \"urn:acme:error:malformed\",\n  \"detail\": \"Key too large: 4104 \\u003e 4096\",\n  \"status\": 400\n}\n\n\n\nError registering account key. See message above for more information.\n```\n\nRetrying doesn't help - the key is always 8 bytes too long.\n Reverting 319852dc8cf167d8baeb0848b4998e86a02aa2d0 fixed this.\n This is FreeBSD 10.3-RELEASE-p6.\n Same error here: FreeBSD 10.3-RELEASE-p7. \n Same error here, FreeBSD 10-3-RELEASE-p6. Any plan for solving this? What about reverting the change @ixdy pointed out?\n I used the below code locally to keep the \"trim leading nulls\" logic in a more portable way (including FreeBSD's sed - which doesn't like `\\x00`, or semicolons between commands, or branch-commands to not-yet-declared labels, for that matter). If you think this is not too ugly to use, let me know and I'll send it as a pull request. It requires `od` which seems to be effectively universally available, and with `-t x1` to avoid any endianness issues.\n\n```\nurlbase64() {\n    printf -- \"$(od -t x1 -An -v | tr -d '\\t\\r\\n ' | _sed -e 's/(^|0a)(00)+/\\1/g' -e 's/(.{2})/\\\\x\\1/g')\" | \\\n        openssl base64 -e | tr -d '\\r\\n' | _sed -e 's:=*$::g' -e 'y:+/:-_:'\n}\n```\n    Hi, \n\nI try to create a certificate with DNS validation, but it always fail on fullchain creation : \n\n```\n + Challenge is valid!\n + Requesting certificate...\n + Checking certificate...\n + Done!\n + Creating fullchain.pem...\nunable to load certificate\n140288499504896:error:0D07207B:asn1 encoding routines:ASN1_get_object:header too long:crypto/asn1/asn1_lib.c:100:\n```\n\nI take a look on the code, and after some debug I see that the certificate that fail comes from : \nhttp://cert.int-x3.letsencrypt.org/\n\nNote: I'm working with \"OpenSSL 1.1.0  25 Aug 2016\"\n\nI tried : \n\n```\nwget -4 http://cert.int-x3.letsencrypt.org/ && \\\nmv index.html test.pem && \\\nopenssl x509 -in \"test.pem\" -inform DER -out \"test2.pem\" -outform PEM\n```\n\n=> fail\n\n```\nwget -4 http://cert.int-x3.letsencrypt.org/ && \\\nmv index.html test.pem && \\\nopenssl x509 -in \"test.pem\" -inform DER -out \"test2.pem\" -outform PEM\n```\n\n=> success\n\nThe only difference is the name of the output file which is different from the input file.\n\nOn your bash script you do the same thing : \n\n```\nopenssl x509 -in \"${CERTDIR}/${domain}/chain-${timestamp}.pem\" -inform DER -out \"${CERTDIR}/${domain}/chain-${timestamp}.pem\" -outform PEM\n```\n\nI try a rename before : \n\n```\nmv ${CERTDIR}/${domain}/chain-${timestamp}.pem ${CERTDIR}/${domain}/tmp-chain-${timestamp}.pem\nopenssl x509 -in \"${CERTDIR}/${domain}/tmp-chain-${timestamp}.pem\" -inform DER -out \"${CERTDIR}/${domain}/chain-${timestamp}.pem\" -outform PEM\n```\n\nand it works.\n\nCan you fix it ?\n\nThanks !\n I got a fail now, don't know if it's a consequence of the fix : \n\n```\nProcessing xxx.xxx with alternative names: www.xxx.xxx\n + Signing domains...\n + Creating new directory /home/xxx/dehydrated/certs/xxx.xxx ...\n + Generating private key...\n + Generating signing request...\n + Requesting challenge for xxx.xxx...\n  + ERROR: An error occurred while sending post-request to https://acme-staging.api.letsencrypt.org/acme/new-authz (Status 403)\n\nDetails:\n{\n  \"type\": \"urn:acme:error:unauthorized\",\n  \"detail\": \"No registration exists matching provided key\",\n  \"status\": 403\n}\n```\n\n**EDIT**\n\nSorry, just see https://github.com/lukas2511/dehydrated/issues/92\n\nAll seems good but DNS validation is very slow, I could validate as soon as it's finished\n That's OK, temporary got a fail : \n\n```\n  + ERROR: An error occurred while sending post-request to https://acme-staging.api.letsencrypt.org/acme/challenge/5J3S4KbKiWRmhBISoUyOdhQMxFQT3F1yY9TLdTPz03U/14433918 (Status 400)\n\nDetails:\n{\n  \"type\": \"urn:acme:error:malformed\",\n  \"detail\": \"JWS verification error\",\n  \"status\": 400\n}\n\n + OVH hook executing: clean_challenge\n + http_request() error in letsencrypt.sh?\n```\n\nBut after a retry all seems good :)\n\nThanks !\n  create necessary directories that do not exist with --create-dirs or -cd\n\n```\n$ dehydrated -c\nERROR: WELLKNOWN directory doesn't exist, please create /data/web/public/.well-known/acme-challenge and set appropriate permissions.\n```\n\n```\n$ dehydrated -c --create-dirs\nProcessing example.com\n + Checking domain name(s) of existing cert... unchanged.\n + Checking expire date of existing cert...\n + Valid till Dec 14 09:53:00 2016 GMT (Longer than 30 days). Skipping renew!\n```\n OK no problem, that's a valid consideration. We put it in [our fork](https://github.com/ByteInternet/dehydrated/pull/1). \n  Howto set all certs on 4096 to get a better score?\n\nI run the script like ./letsencrypt.sh -c\n\nThe output:\n\n> 1 Sent by server  \n> Fingerprint SHA1: 1bc48b413fb0fd446161f284050ee7d955a2c13d\n> Pin SHA256: 8d4OB2KT3OBcUvgs8BiZrqjPhNyozJNNBBexbQ0Q9MA= \n> RSA 4096 bits (e 65537) / SHA256withRSA\n> 2   Sent by server  Let's Encrypt Authority X3 \n> Fingerprint SHA1: e6a3b45b062d509b3382282d196efe97d5956ccb\n> Pin SHA256: YLh1dUR9y6Kja30RrAn7JKnbQG/uEtLMkBgFF2Fuihg= \n> RSA 2048 bits (e 65537) / SHA256withRSA\n> 3   In trust store  DST Root CA X3   Self-signed  \n> Fingerprint SHA1: dac9024f54d8f6df94935fb1732638ca6ad77c13\n> Pin SHA256: Vjs8r4z+80wjNcr1YKepWQboSIRi63WsWXhIMN+eWys= \n> RSA 2048 bits (e 65537) / SHA1withRSA \n> Weak or insecure signature, but no impact on root certificate\n Thank you for the reply,\n\nSo how can I fix this (not an expert user).\nRemove the 2 2048 bit ca keys? How?\n\n2016-09-15 10:43 GMT+02:00 Lukas Schauer notifications@github.com:\n\n> The certificates generated by this script are using 4096 bit RSA keys by\n> default, the 2048 bit key ist the root CA key which was generated by Let's\n> Encrypt.\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/lukas2511/dehydrated/issues/276#issuecomment-247271052,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AMDb4UlUb55yVylR5u46zA2tWc5hGFRHks5qqQU-gaJpZM4J9lsz\n> .\n Is it in the sh script..\n\nIs it possible to add --rsa-key-size 4096?\n @venigo , there is no further action required from your side or this repository owner, everything is working as it should and as you expect.\nYou can not change anything related to the intermediate cert or ca cert.\nGoogle is your friend to get more knowledge on digital certs.\n  Hi there!\n\nIt seems that `dehydrated` is generating JWA JWK thumbprints that don't match the specification. This came to my attention as part of this [Let's Encrypt community forum thread](https://community.letsencrypt.org/t/trouble-with-keyauthorization-for-dns-provided-key-authorization-was-incorrect-solved/19799). \n\n[Section 2 of RFC 7518](https://tools.ietf.org/html/rfc7518#section-2) defines `Base64urlUInt` as:\n\n```\n      The representation of a positive or zero integer value as the\n      base64url encoding of the value's unsigned big-endian\n      representation as an octet sequence.  The octet sequence MUST\n      utilize the minimum number of octets needed to represent the\n      value.  Zero is represented as BASE64URL(single zero-valued\n      octet), which is \"AA\".\n```\n\nFurther, [Section 6.3](https://tools.ietf.org/html/rfc7518#section-6.3) indicates that all of the RSA key parameters are expressed as `Base64urlUInt`.\n\nIt's not immediately obvious but the portion of the `Base64urlUInt` description that mandates that the sequence use the **minimum number of octets** means that leading zero's should be removed. You can see how [Go-Jose implements this](https://github.com/square/go-jose/blob/master/encoding.go#L144:L148) as one example of a complaint implementation.\n\nIt [doesn't look to me](https://github.com/lukas2511/dehydrated/blob/master/dehydrated#L245) that dehydrated strips leading zeroes presently to match the specification. I believe this might be the root cause of Issue #268 and is likely to cause further problems down the road for users that hit this corner case.\n\nUnfortunately I don't work with bash or `dehydrated` enough to propose a patch, but hopefully it won't be difficult to address! Let me know if I can provide any other information.\n @lukas2511 I'm afraid I'm not a user of dehydrated and don't have a reproduction case. Apologies.\n  Hi Lukas,\nnice script. BTW I tested it with the staging CA before going to real life.\n# Path to certificate authority (default: https://acme-v01.api.letsencrypt.org/directory)\n# CA=\"https://acme-v01.api.letsencrypt.org/directory\"\n\nCA_PROD=\"https://acme-v01.api.letsencrypt.org/directory\"\nCA_TEST=\"https://acme-staging.api.letsencrypt.org/directory\"\nCA=\"${CA_TEST}\"\n Duplicate of #72?\n  Why dehydrated? why not PopCerts or something? :-)\n Does not the image explain it? :wink: \n  I wrote some quick Debian packaging. This works, but there are a couple issues:\n1. Running it as an unpriviliged user requires you to either modify the config file or chown `/var/lib/dehydrated`.\n2. Docs on how to properly get stuff working are missing, but it is a little out of my scope right now.\n\nTo build on ubuntu:\n\n``` bash\nsudo apt-get install build-essential devscripts debhelper fakeroot\nfakeroot debian/rules binary\n```\n Woops. Well then :)\n\nOn Wed, Sep 14, 2016 at 12:58 PM Lukas Schauer notifications@github.com\nwrote:\n\n> There already is a package (even in the debian repository!)\n> https://packages.debian.org/jessie-backports/letsencrypt.sh\n> I contacted one of the package maintainers about renaming the package, and\n> at some point I'll probably merge the debian control/rules/whatever files\n> into this repository.\n> \n> Thanks anyway.\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/lukas2511/dehydrated/pull/272#issuecomment-246976360,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ABNEhpuyKk3Rz8FgTPqfBI6Yx3xw7Ncaks5qp9IcgaJpZM4J8ncg\n> .\n  Using hooks with letsencrypt.sh is a really useful thing!\n\nIn a more complex scenario, one starts to have multiple hooks (deploying challenge to the web server, depoloying certs, restarting server\u2026). Handling this in one big script can become confusing or even unmaintainable.\n\nIdea: Run multiple scripts in a directory (like with the config directory). In fact my current main hook script has a call to \"run-parts\" in it to run the scripts in a directory. But maybe this wants to be integrated?\n\nI am unsure, on how this relates to the hook-chain feature and how this works out for checking that a hook is available to deploy dns-01 challenges. This should be discussed, if there is interest in including this feature.\n Well, why do you have a conf.d then? The admin could have written the 'for i in conf.d/*.conf; do source \"$i\"; done' into the main conf also?\n Well, I think, `hook.d` is most interesting to packagers as well.\nSee for example: https://bugs.debian.org/827371\n\nAnd it might be helpful to have a consistent hook.d experience, especially concerning the chain feature of hooks.\n Just to add my tuppence worth: I'm using a cloudflare hook for dns-01 verification, but also need to restart my nginx server once it's successful. I don't want to pollute the cloudflare hook with this because I have many machines and not all of them run an nginx instance, but all of them use cloudflare for verification. Having a directory of hooks would make this a lot easier!\n\n(Or just the ability to have multiple hooks, is this possible?)\n [I made a wiki page showing how to use multiple hooks](https://github.com/lukas2511/dehydrated/wiki/Example:-Using-multiple-hooks)  To us it is very useful to know when a challenge has failed (we use the dns-01 method and sometimes it fails because TXT DNS record has not propagated yet), so I created the \"invalid_challenge\" hook. This way we are aware and can act accordingly.\n I just added a hook chain example that involves an invalid challenge, so the new hook gets called. If you think it is improper I will remove that.\n\n```\n+ + Challenge is invalid!\n\ufffc +HOOK: invalid_challenge lukas.im the_reason\n```\n Oops, you're right, sorry, bad place for that example. I guess the example in examples/hook.sh should be enough.\n I also added another hook: request_failure, in case the curl call should fail for some reason. The http_request() function already has a hook call (clean_challenge), but it is not exclusive for the request failure as clean_challenge is also called from other places where the request was ok.\n\nUp until now we've got some 50X codes, so it's good to us to know when this happens and, in case failure extends in time, to be aware that something is not working good (probably on the client's server side).\n Sure, I'll tidy up code and create separate PRs.\n  I'm trying to use letsencrypt.sh to generate certificates, but I'm getting an error always. \nI initially used Debian packaged version, but I then also tried the version from git.\nError is:\n\nERROR: An error occurred while sending post-request to https://acme-v01.api.letsencrypt.org/acme/challenge/CENSORED/CENCORED (Status 400)\nDetails:\n{\n  \"type\": \"urn:acme:error:malformed\",\n  \"detail\": \"Unable to update challenge :: Provided key authorization was incorrect\",\n  \"status\": 400\n}\n And Apache logs show no attempt to access \".well-known/acme-challenge\"\n Since I got it working with official cerbot client I will not be able to do additional verification. Just for information.\n  So people can pull from here confidently ... working on a PR as we speak.\n\nCurrently the license agreement check fails.\n I don't think I can tag via PR anyway, and all I would do is edit the CHANGELOG to include everything change thus far (which I'm not sure I want to do not knowing the state of affairs ...)\n\nYour call.  I've forked already so I'm cool with it either way.  Thanks for putting this together, BTW! :+1:\n  I noticed that when I wanted to revoke a certificate it would complain about either not having a .well-known directory to perform a http challenge. Using dns-01 it would say there isn't a hook given. Neither of these are required to revoke a certificate so for the config check it should short circuit out of the method.\n  I had a problem using letencrypt.sh under pfsense (FreeBsd). Finally i fixed it with a grep -v on commonName.\n\nMy error message:\n\n```\n...\n + Requesting challenge for example.com...\n + Responding to challenge for example.com...\n + Challenge is valid!\n + Requesting certificate...\n  + ERROR: An error occurred while sending post-request to https://acme-v01.api.letsencrypt.org/acme/new-cert (Status 400)\n\nDetails:\n{\n  \"type\": \"urn:acme:error:malformed\",\n  \"detail\": \"Error creating new cert :: policy forbids issuing for: common name (eg, your name)\",\n  \"status\": 400\n}\n```\n\nopenssl version -d\n\n> OPENSSLDIR: \"/etc/ssl\"\n\ncat /etc/ssl/openssl.cnf |grep commonName\n\n> commonName                      = Common Name (eg, YOUR name)\n  Coded to your coding standards, shellchecked\n\nThis will allow for the challenge to be retied for upto 5 times when it fails (returns invalid)\n\nAllot of our servers are via cdn/load-balancers and they do not always sync quick enough, so will fail the first X attempts.\n\nThis also allows your script to have resiliency with bad connections/timeouts.\n\nletsencrypt.sh --cron --force --retry\n\n```\nProcessing test.extremeshok.com\n + Checking domain name(s) of existing cert... unchanged.\n + Checking expire date of existing cert...\n + Valid till Nov 19 22:26:00 2016 GMT (Longer than 30 days). Ignoring because renew was forced!\n + Signing domains...\n + Generating private key...\n + Generating signing request...\n + Requesting challenge for test.extremeshok.com...\n + Responding to challenge for test.extremeshok.com...attempt: 1\n + Invalid\n + Requesting challenge for test.extremeshok.com...\n + Responding to challenge for test.extremeshok.com...attempt: 2\n + Challenge is valid!\n + Requesting certificate...\n + Checking certificate...\n + Done!\n + Creating fullchain.pem...\n + Done!\n```\n\nUpdate to pull : https://github.com/lukas2511/letsencrypt.sh/pull/261\n\nRetries reduce the load.\n\nHere is the specific use case:\n\nAll 1000+ servers/vm's are managed/setup by idempotent configuration management. Spanning multiple data centers and countries.\n\nWe run a single node aka ssl.domain.com which is responsible for all ssl deployments for all the servers. ie. All \"/.well-known/acme-challenge/\" http requests from all the 1000+ servers are proxied to the ssl.domain.com server.\n\nUnder real world situations on production servers there are timeouts for the length the proxy request can take. Letsencrypt also has timeouts for the validation response. So fact is they can and will fail to validate because they timed out.\n\nLetsencrypt does and will rate limit the number for validation attempts for a domain, so it provides no more load than the current script. Also if you look at the code, I specifically slow down the retries by adding a random 1-10 second pause between each retry.\n\nI can understand your issue with someone setting 99999 retries, but this is virtually no different to them running the script 99999 times in a loop until the certificate has generated. The major difference is the retries will have a far lower impact on the lets encrypt servers.\n\nCurrently: If you are creating a certificate with 20 sub-domains and only one of the 20 sub-domains fails (ie number 19) validation, you are forced to rerun the script and re-validate all the sub-domains which were already validated. Thus you increased the load 18 more times.\n\nWith my retries only the failed validation will be retried, thus you only have 1 extra validation.\n\nIf you are concerned with the user setting a limit of 99999, I have limited the retries to 5.\n\nIn real world production all are verified by the 3rd attempt.\n\nAs to the proposed add a hook script, there is no place in the code for a hook after the json verification has been generated and before the verification has been validated.\n\nNot to mention the limitation with the hook scripts as they cant do retries for a timeout. \n Forgot to remove the comments.\n\nWith regards to the duplicated code, I can convert it to a do while loop, instead of a while do loop or make a function call\n  Coded to your coding standards, shellchecked\n\nThis will allow for the challenge to be retied for X times when it fails (returns  invalid)\n\nAllot of our servers are via cdn/load-balancers and they do not always sync quick enough, so will fail the first X attempts. \n\nThis also allows your script to have resiliency with bad connections/timeouts.\n\n```\nletsencrypt.sh --cron --force --retries 10\n\nProcessing test.extremeshok.com\n + Checking domain name(s) of existing cert... unchanged.\n + Checking expire date of existing cert...\n + Valid till Nov 19 22:26:00 2016 GMT (Longer than 30 days). Ignoring because renew was forced!\n + Signing domains...\n + Generating private key...\n + Generating signing request...\n + Requesting challenge for test.extremeshok.com...\n + Responding to challenge for test.extremeshok.com...attempt: 1\n + Invalid\n + Requesting challenge for test.extremeshok.com...\n + Responding to challenge for test.extremeshok.com...attempt: 2\n + Challenge is valid!\n + Requesting certificate...\n + Checking certificate...\n + Done!\n + Creating fullchain.pem...\n + Done!\n```\n Not sure how extra retries would help, this would only overload the servers. if a challange fails, it's usually a problem on the client's side.\n\nI'll admit though I had only one odd case where retries helped, it ended up that when I turned off HTTPS redirect, it would work every time, with the redirection it worked only every 4-5 attempts (no problem with the text CA, only with the production). But this problem has since been reported, and apparently fixed.\n comment submitted to early\n Actually retries reduce the load.\n\nHere is the specific use case:\n\nAll 1000+ servers/vm's are managed/setup by idempotent configuration management. Spanning multiple data centers and countries.\n\nWe run a single node aka ssl.domain.com which is responsible for all ssl deployments for all the servers. ie.  All \"/.well-known/acme-challenge/\" http requests from all the 1000+ servers are proxied to the ssl.domain.com server.\n\nUnder real world situations on production servers there are timeouts for the length the proxy request can take. Letsencrypt also has timeouts for the validation response. So fact is they can and will fail to validate because they timed out.\n\nLetsencrypt does and will rate limit the number for validation attempts for a domain, so it provides no more load than the current script. Also if you look at the code, I specifically slow down the retries by adding a random 1-10 second pause between each retry.\n\nI can understand your issue with someone setting 99999 retries, but this is virtually no different to them running the script 99999 times in a loop until the certificate has generated. The major difference is the retries will have a far lower impact on the lets encrypt servers.\n\nCurrently: If you are creating a certificate with 20 sub-domains and  only one of the 20 sub-domains fails (ie number 19) validation, you are forced to rerun the script and re-validate all the sub-domains which were already validated. Thus you increased the load 18 more times.\n\nWith my retries only the failed validation will be retried, thus you only have 1 extra validation.\n\nIf you are concerned with the user setting a limit of 99999, I have added another pull request which limits retries to 5.\n\nIn real world production all are verified by the 3rd attempt.\n\nAs to the proposed add a hook script, there is no place in the code for a hook after the json verification has been generated and before the verification has been validated.\n\nNot to mention the limitation with the hook scripts as they cant do retries for a timeout.\n Forgot to remove the comments.\n\nWith regards to the duplicated code, I can convert it to a do while loop, but did not want to change your logic.  Otherwise one could make a function call.\n\nWith regards to the deploy hook, ill give you a real world example.. Servers located in mainland china have around a 300msec lag when connection to our usa datacenter. Even if one uses the hook to check the file is accessible. Letsencrypt can and does timeout/fail. \n\nAnother issue iis with geolocated servers and loadbalanced/round robin dns. Its very difficult to predict the path/route letsencrypt will use to communicate. One sub-domain can be 18 locations. These all then need to proxy the request back. \n\nbtw thanks for the script and feedback\n > Even if one uses the hook to check the file is accessible. Letsencrypt can and does timeout/fail.\n\nI don't understand this. You could e.g. use curl with with 100 retries and the code would block the check until curl terminates. You could also call sleep 30 to give your infrastructure 30 seconds to deploy the challenges.\n @shoeper the validation is done via letscrypts own network. A curl would be done on the machine running the script aka your network.\n\nSo even if the script can access the url, does not mean letsencrypt will be able to.\n\nWe do not deploy, everything is done via nginx proxy and redirections. Letsencrypt, the proxy and the ssl server can all timeout or fail a single request.\n BTW: this is not theoretical, from actual production usage over many months. This has been the only reliable and consistent method.\n\nIf you have 1000+ domains,100+ servers in more than 10 countries, then you will understand why this is required.\n By the way once I got 50x error code from ACME server on validation check request, so at least curl with some retries looks like a good idea.\n @lukas2511 \n\nThe files are instantly deployed, as they are on the ssl.domain.com server I dont think you understood what I wrote.\n\n> We do not deploy, everything is done via nginx proxy and redirections. \n> \n> Letsencrypt, the proxy and the ssl server can all timeout or fail a single request.\n  Assume you want to create certificates for some other service, like jabber server. web server is turned off by default there and needs to be started _only_ for letsencrypt auth.\n\nSo some hooks for that would be nice. Right now I'm doing it in a bit hacky way:\n\n```\ncase \"$1\" in\ndeploy_cert)\n[...]\n        cat \"$FULLCHAINCERT\" \"$PRIVKEY\" > /etc/openssl/jabber.example.com.pem\n        /sbin/service ejabberd reload\n       /sbin/service lighttpd stop\n        ;;\nclean_challenge)\n        /sbin/service lighttpd stop\n        ;;\ndeploy_challenge)\n        /sbin/service lighttpd start\n        ;;\n```\n\nclean_challenge is not always called AFAIK and deploy_cert is called even if certificate did not change, so these hooks are not best for such job.\n I'm making preparations to do something very similar, but with nginx instead.\n\nAccording to the documentation in `docs/examples/hook.sh`, or at least what I make out of it, the `clean_challenge` hook only gets called when there is something to clean. This can explain what you are experiencing when you say that it is not always called.\n\nFor `deploy_cert` my understanding is that it only gets called when a new certificate has been produced/retrieved. If `deploy_cert` always gets called for you, then that sounds like either a bug inside the letsencrypt.sh script itself (or an error in the documentation), or something is wrong in your setup, although the snippet you pasted looks good.\n\nFor me, in another setup that I have (also an nginx webserver, but one that is always running and needs certificates for itself) the `deploy_cert` hook only gets called as described in the documentation (when a new certificate has been produced/retrieved).\n\nAnyhow, as I said, I'm making preparations (writing a hook script) to do something very similar, and as it is not ready yet I have yet to test it out against the LE staging server. What I'm going to do is start the nginx server in `deploy_challenge`, and then in `deploy_cert` I'm stopping the nginx server and copying the new certificates to where they need to be. Provided the documentation is correct (and my understanding of it is also correct) I should have no problems with this, and also not need any of the other hooks, only the two hooks I mentioned.\n\n**Edit:** I have tested it and it is working as expected. I am however thinking of using `clean_challenge` to stop the webserver instead of doing it in `deploy_cert`, since `clean_challenge` seems to be the better choice as it is always supposed to be called, whether the challenge validation is successful or not.\n I.e. there is need in two hooks:\r\n- Before any update operation (to start webserver)\r\n- After any update operation (to stop webserver)\r\nLast hook can be used for webserver reload in common HTTPS tasks (as requested in #316). It would be great to have one hook running directly after starting dehydrated to do some initialization (e.g. starting the web server or enabling firewall rules on systems which do not allow incoming connections on port 80 or outgoing connections on port 80 and 443). Additionally one hook should be run just before exiting dehydrated to clean everything up (regardless of new certificates being deployed or an error occured). So far, I haven't seen any use case outlined here where the existing hooks would not suffice.\r\n\r\n- `deploy_challenge` works for starting a web daemon and/or altering firewall rules.\r\n- `clean_challenge` works for killing the web daemon and/or re-altering firewall rules.\r\n- `deploy_cert` works for writing out the cert (in whatever format is required) and reloading whatever daemon needs to know about the new cert.\r\n\r\nIf you expect to be doing a lot of challenges and don't want to be continually starting and stopping the daemon, it seems trivial to write a script which does the needful before and after, and simply calls `dehydrated` in the middle. I agree that deploy_cert is sufficient for restarting the daemons. However setting up firewall rules in deploy_ and clean_challenge is not sufficient for systems which normally do not allow outgoing traffic on port 80 and 443.\r\nHaving a generic initialization and cleanup hook would solve this problem and might be helpful in other use cases.\r\nOf course using a wrapper script calling dehydrated in the middle is possible, but this feels like a workaround for missing hooks. The same hooks are requested in #331  The flag \"grep -A1\" on line 412 is not supported in Open Solaris.\nIf you have SANs, this will be a problem.\n\nTherefore, a simple change can be made and then everything works without a hitch!\nI wasn't sure how best to submit this, so I'm just doing it here in the hopes anyone Googling for an answer will find it.\n\nChange:\n`altnames=\"$( <<<\"${reqtext}\" grep -A1 '^[[:space:]]*X509v3 Subject Alternative Name:[[:space:]]*$' | tail -n1 )\"`\nto:\n`altnames=\"$( <<<\"${reqtext}\" awk '/^[[:space:]]*X509v3 Subject Alternative Name:[[:space:]]*$/{print;getline;print;}' | tail -n1 )\"`\n Hi @lukas2511, on Debian with\r\n```\r\nawk -W version\r\nmawk 1.3.3 Nov 1996, Copyright (C) Michael D. Brennan\r\n\r\ncompiled limits:\r\nmax NF             32767\r\nsprintf buffer      2040\r\n```\r\nthis break things and it always exits with \r\n\"ERROR: Certificate signing request contains non-DNS Subject Alternative Names\" \r\n(if you have SAN-Certs of course) Hi @lukas2511 no, i think you missunderstood me - the change you made (changing to awk instead of grep) does not work at the mentioned system... This is the same error as reported in #351. Apparently installing gawk fixed the error--perhaps different providers of awk yield different results? Sorry to have caused so much trouble, guys. It looks like the default grep on my system is some gimpy version. Forcing dehydrated to use the non-gimpy version fixed things for me.    please make new release ASAP, since the old release contains old license url and client fails to work\n\n```\n# /usr/sbin/letsencrypt.sh -c\n# INFO: Using main config file /etc/webapps/letsencrypt.sh/config.sh\n+ Generating account key...\n+ Registering account key with letsencrypt...\n  + ERROR: An error occurred while sending post-request to https://acme-v01.api.letsencrypt.org/acme/new-reg (Status 400)\n\nDetails:\n{\n  \"type\": \"urn:acme:error:malformed\",\n  \"detail\": \"Provided agreement URL [https://letsencrypt.org/documents/LE-SA-v1.0.1-July-27-2015.pdf] does not match current agreement URL [https://letsencrypt.org/documents/LE-SA-v1.1.1-August-1-2016.pdf]\",\n  \"status\": 400\n}\n```\n\nit's fixed in master: afabfff06e2dece1772ed788ac41ca0d297ab49b\nso just new release is needed!\n  There is no need for this message to sound so scary. letsencrypt.sh runs fine with it's defaults. I'd even consider removing this warning entirely.\n Your concerns are why breaking changes (to defaults) go in a change log, or documentation, no? \r\nCould we at least get a --quiet option or similar? After the 30th time you see it, it's pointless as you skip over it anyway.   When using the lexicon hook (https://github.com/AnalogJ/lexicon/blob/master/examples/letsencrypt.default.sh), the first in a line of domains always works, but then the 2nd or 3rd alias throws this error. It seems like some timeout issue...\n\n```\nProcessing domain1.de with alternative names: www.domain1.de app.domain1.de beta.domain1.de domain2.de www.domain2.de app.domain2.de beta.domain2.de domain3.de www.domain3.de app.domain3.de beta.domain3.de\n + Signing domains...\n + Generating private key...\n + Generating signing request...\n + Requesting challenge for domain1.de...\n + Requesting challenge for www.domain1.de...\n + Requesting challenge for app.domain1.de...\n + Requesting challenge for beta.domain1.de...\n + Requesting challenge for domain2.de...\n + Requesting challenge for www.domain2.de...\n + Requesting challenge for app.domain2.de...\n + Requesting challenge for beta.domain2.de...\n + Requesting challenge for domain3.de...\n + Requesting challenge for www.domain3.de...\n + Requesting challenge for app.domain3.de...\n + Requesting challenge for beta.domain3.de...\ndeploy_challenge called: domain1.de, someKey, someKey2\nlexicon cloudflare create domain1.de TXT --name='acme-challenge.domain1.de.' --content='someKey2'\nNamespace(action='create', auth_token=None, auth_username=None, content='someKey2', domain='domain1.de', identifier=None, name='_acme-challenge.domain1.de.', priority=None, provider_name='cloudflare', ttl=None, type='TXT')\nNo handlers could be found for logger \"tldextract\"\ncreate_record: True\n + Responding to challenge for domain1.de...\nclean_challenge called: domain1.de, someKey, someKey2\nNamespace(action='delete', auth_token=None, auth_username=None, content='someKey2', domain='domain1.de', identifier=None, name='_acme-challenge.domain1.de.', priority=None, provider_name='cloudflare', ttl=None, type='TXT')\nNo handlers could be found for logger \"tldextract\"\nlist_records: [{'content': u'someKey2', 'id': u'b86e0031d7eebee5d6af14e7f76123a0', 'type': u'TXT', 'name': u'_acme-challenge.domain1.de', 'ttl': 1}]\n[{'content': u'someKey2', 'id': u'b86e0031d7eebee5d6af14e7f76123a0', 'type': u'TXT', 'name': u'_acme-challenge.domain1.de', 'ttl': 1}]\ndelete_record: True\n + Challenge is valid!\ndeploy_challenge called: www.domain1.de, someKey3, someKey4\nlexicon cloudflare create www.domain1.de TXT --name='acme-challenge.www.domain1.de.' --content='someKey4'\nNamespace(action='create', auth_token=None, auth_username=None, content='someKey4', domain='www.domain1.de', identifier=None, name='_acme-challenge.www.domain1.de.', priority=None, provider_name='cloudflare', ttl=None, type='TXT')\nNo handlers could be found for logger \"tldextract\"\ncreate_record: True\n + Responding to challenge for www.domain1.de...\nclean_challenge called: www.domain1.de, someKey3, someKey4\nNamespace(action='delete', auth_token=None, auth_username=None, content='someKey4', domain='www.domain1.de', identifier=None, name='_acme-challenge.www.domain1.de.', priority=None, provider_name='cloudflare', ttl=None, type='TXT')\nNo handlers could be found for logger \"tldextract\"\nlist_records: [{'content': u'someKey4', 'id': u'someID', 'type': u'TXT', 'name': u'_acme-challenge.www.domain1.de', 'ttl': 1}]\n[{'content': u'someKey4', 'id': u'someID', 'type': u'TXT', 'name': u'_acme-challenge.www.domain1.de', 'ttl': 1}]\ndelete_record: True\nERROR: Challenge is invalid! (returned: invalid) (result: {\n  \"type\": \"dns-01\",\n  \"status\": \"invalid\",\n  \"error\": {\n    \"type\": \"urn:acme:error:unauthorized\",\n    \"detail\": \"Correct value not found for DNS challenge\",\n    \"status\": 403\n  },\n  \"uri\": \"https://acme-v01.api.letsencrypt.org/acme/challenge/qscr5vea-pExCauIAf3ZeW6GrzDFCfrqENJHluMoe0c/211202993\",\n  \"token\": \"someKey3\",\n  \"keyAuthorization\": \"someKey3.someKey5\"\n})\n```\n\nI\u00b4ve replaced keys sent with someKey / someID...\n  Boulder provides the current subscriber Agreement in a `Link` header of the type `terms-of-service` in response to a valid `/acme/new-reg` POST request, this should be used instead of hard coding the most recent URL.\n\nContinuing to hard code the URL will cause consistent failures for anyone trying to create a new registration whenever Let's Encrypt chooses to update their agreement.\n AFAIK, the reason for the current \u201chard-coding\u201d (it's not hard-coded, it's a variable adjustable in the config file) is that that in theory provides a fool-proof method of demonstrating you agree with the current terms of service.\n\nI don't think it should be automatically drawn from the headers \u2014 but perhaps it would be smart for letsencrypt.sh to include logic that informs you \u201cThe terms of service have updated; here is the link to the Subscriber Agreement. Please update your configuration to agree with the new terms.\u201d\n Just added support for this in vestacp.\nYou can use the following command to get the agreement url `agreement=$(curl -s -I \"$api/terms\" |grep Location |cut -f 2 -d \\ |tr -d '\\r\\n')` with `$api` being `api='https://acme-v01.api.letsencrypt.org'` \n  Response:\n\n  \"type\": \"urn:acme:error:malformed\",\n  \"detail\": \"Provided agreement URL [https://letsencrypt.org/documents/LE-SA-v1.0.1-July-27-2015.pdf] does not match current agreement URL [https://letsencrypt.org/documents/LE-SA-v1.1.1-August-1-2016.pdf]\"\n Thank you!\n  Rename private_key.pem to privkey.pem\nAdditionaly there is no more file called private_key.json. Maybe that comment is obsolete?\nThanks for letsencrypt.sh - works great!!\n  Since the account key is the only component that is written by all parallel processes requesting a domain initially when not present, it would be cool if one could request it synchronously without having to specify a domain.\n\n(the sync/async handling is handled by the calling script of cause and has nothing to do with letsencrypt.sh itself)\n  why does letsencrypt.sh not allow parallel calling?\n\nI'm trying to speed up https://www.npmjs.com/package/cert which uses letsencrypt.sh in the background for now.\n\nNot being able to call it in parallel means that the process is blocking which is usually bad behaviour, at least if requests are made for different domain names.\n This sounds like a duplicate of #228\n you can lock per domain and then it's easy to fork requests.\nOne thing this will solve - I had one line of the `domains.txt` fail, and then the rest don't continue. It's a major problem if you find it in an exploding inbox too late.\n @lukas2511  Thanks so much! As far as I am concerned this is perfect now. I can call it and map myself which child processes currently request which domain to avoid read/write problems + I can store logs domain related. I'll add a link to this repo in the description of cert.\n  While I understand the idea behind the 077 umask, I think its kinda problematic: Most of my service are running as their own user, and some of them seem to try to read the file after dropping the privileges, which is not possible with the files having 600 as access mask. I don't want to run all these application as lets-encrypt user or as root, and I think the most sensitive solution is to set the files group-readable.\n\nSince on most modern Distributions a user belongs to his own distinct group this change is not a dangerous escalation, but this way I can add the users which needs to access the private keys to the lets-encrypt usergroup.\n I would either use a deploy script to move the private keys around, or make the umask configurable. I personally do not want and do not need a less paranoid umask setting.\n  ```\nLet's Encrypt Subscriber,\nWe're writing to let you know that we're updating the Let's Encrypt Subscriber Agreement\neffective August 1, 2016. You can find the updated agreement (v1.1.1) as well as the\ncurrent agreement (v1.0.1) in the \"Let's Encrypt Subscriber Agreement\" section of the\nfollowing page: https://letsencrypt.org/repository/\n```\n\nOld: https://letsencrypt.org/documents/LE-SA-v1.0.1-July-27-2015.pdf\nNew: https://letsencrypt.org/documents/LE-SA-v1.1.1-August-1-2016.pdf\n\nWhat happens if one does not update letsencrypt.sh to post the new LA? Does the signing process fail?\n https://community.letsencrypt.org/t/lets-encrypt-subscriber-agreement-v1-1-1/17409/7\n https://community.letsencrypt.org/t/lets-encrypt-subscriber-agreement-v1-1-1/17409/7\n  As I like to keep all my configuration at the same place (/etc/letsencrypt.sh/) in this case I've created a patch to have the location of the per-cert configuration files configurable. I use this to this per-cert configuration files in /etc/letsencrypt.sh/domains.d/{domain name} in stead of /var/lib/letsencrypt.sh/certs/{domain name}.\n Out of curiosity, is it intended to leave this as an undocumented option? (There's no corresponding option in the example config file.)\n No is not. Just forgot it. But here is the updated config: 72f8485d6d9d6e1618fccc4d80990d5ee690a17a\n  Hello, \n\nsince a few days the dns challenge with inwx-acme (=> https://gist.github.com/jreinert/49aca3b5f3bf2c5d73d8) does not work anymore. It looks like dns entry is not created while using letsencrypt.sh:\n\n```\nProcessing foo.bar.de\n + Checking domain name(s) of existing cert... unchanged.\n + Checking expire date of existing cert...\n + Valid till Jul 24 09:15:00 2016 GMT (Less than 30 days). Renewing!\n + Signing domains...\n + Generating private key...\n + Generating signing request...\n + Requesting challenge for foo.bar.de...\n + Responding to challenge for foo.bar.de...\nERROR: Challenge is invalid! (returned: invalid) (result: {\n  \"type\": \"dns-01\",\n  \"status\": \"invalid\",\n  \"error\": {\n    \"type\": \"urn:acme:error:connection\",\n    \"detail\": \"DNS problem: NXDOMAIN looking up TXT for _acme-challenge.foo.bar.de\",\n    \"status\": 400\n  },\n  \"uri\": \"https://acme-v01.api.letsencrypt.org/acme/challenge/ZEes5isuj1AUjy_xEBKurn71IWJhhXTBgyalzAzUYZU/163456229\",\n  \"token\": \"HHzFaTGm-Usb23_xEJJ0q8DeWoLLssiGvjpWIyjpTkI\",\n  \"keyAuthorization\": \"HHzFaTGm-Usb23_xEJJ0q8DeWoLLssiGvjpWIyjpTkI._JeC0mchoXHGH73Jf08LzvreL21_bOSeC3H4NQ_0X8Y\"\n})\n```\n\nIf I use deploy_challange directly using the hook script it works:\n\n```\n# ./inwx-acme deploy_challenge foo.bar.de HHzFaTGm-Usb23_xEJJ0q8DeWoLLssiGvjpWIyjpTkI HHzFaTGm-Usb23_xEJJ0q8DeWoLLssiGvjpWIyjpTkI\n\n# dig TXT _acme-challenge.foo.bar.de\n\n; <<>> DiG 9.8.4-rpz2+rl005.12-P1 <<>> TXT _acme-challenge.foo.bar.de\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 15365\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0\n\n;; QUESTION SECTION:\n;_acme-challenge.foo.bar.de.    IN  TXT\n\n;; ANSWER SECTION:\n_acme-challenge.foo.bar.de. 3600 IN TXT \"HHzFaTGm-Usb23_xEJJ0q8DeWoLLssiGvjpWIyjpTkI\"\n\n;; Query time: 23 msec\n;; SERVER: 127.0.0.1#53(127.0.0.1)\n;; WHEN: Fri Jul  8 12:10:32 2016\n;; MSG SIZE  rcvd: 100\n```\n\nAny ideas why it does not work anymore and how to debug it?\n I think the dns server need more time, can you try to put a sleep timeout in `letsencrypt.sh` just before it is asking to verify the DNS challange.\n I think hook scripts should ensure that the challenge is fully deployed before they return.\nSo, I would put the sleep at the end of deploy_challenge in the hook script, if there is no better way to ensure deployment.\n see: https://community.letsencrypt.org/t/dns-challenge-is-in-staging/8322/20\n I note that https://github.com/bennettp123/letsencrypt.sh-email-notify-hook (linked from the wiki section of this project, under \"Examples for DNS 01 hooks\") implements a check where it sleeps and verifies that DNS has propagated before it returns from deploying the challenge.\n\nHooks that implement a similar check will _probably_ be okay? I have had the odd instance (several versions ago) where the hook's check would pass, but LE would fail the challenge verification anyway... so in the worst case, maybe you add a couple of sleeps after the hook's check returns, just to try and hedge your bets?\n @lxp \n\n> I think hook scripts should ensure that the challenge is fully deployed before they return.\n> So, I would put the sleep at the end of deploy_challenge in the hook script, if there is no better way to ensure deployment.\n\nI agree, the best option would be that the hook-scripts will check DNS entries after deploying them. But that's not implemented, yet.\n\n@gertcuykens \nI already had put some sleeps into it, but after that it was only working for the first domain of a multi-domain certificate. \nI have now tested a bit more an found a working version with 3 sleeps:\n\n```\n# Respond to challenges\n  idx=0\n  for altname in ${altnames}; do\n    challenge_token=\"${challenge_tokens[${idx}]}\"\n    keyauth=\"${keyauths[${idx}]}\"\n\n    # Wait for hook script to deploy the challenge if used\n    # shellcheck disable=SC2086\n    [[ -n \"${HOOK}\" ]] && [[ \"${HOOK_CHAIN}\" != \"yes\" ]] && \"${HOOK}\" \"deploy_challenge\" ${deploy_args[${idx}]}\n\n    ###### Tronic69: wait 10 seconds ...\n    sleep 10\n\n    # Ask the acme-server to verify our challenge and wait until it is no longer pending\n    echo \" + Responding to challenge for ${altname}...\"\n    result=\"$(signed_request \"${challenge_uris[${idx}]}\" '{\"resource\": \"challenge\", \"keyAuthorization\": \"'\"${keyauth}\"'\"}' | clean_json)\"\n\n    reqstatus=\"$(printf '%s\\n' \"${result}\" | get_json_string_value status)\"\n\n    while [[ \"${reqstatus}\" = \"pending\" ]]; do\n      ###### Tronic69: wait 5 seconds ...\n      sleep 5\n      result=\"$(http_request get \"${challenge_uris[${idx}]}\")\"\n      reqstatus=\"$(printf '%s\\n' \"${result}\" | get_json_string_value status)\"\n    done\n\n    [[ \"${CHALLENGETYPE}\" = \"http-01\" ]] && rm -f \"${WELLKNOWN}/${challenge_token}\"\n\n    # Wait for hook script to clean the challenge if used\n    if [[ -n \"${HOOK}\" ]] && [[ \"${HOOK_CHAIN}\" != \"yes\" ]] && [[ -n \"${challenge_token}\" ]]; then\n      # shellcheck disable=SC2086\n      \"${HOOK}\" \"clean_challenge\" ${deploy_args[${idx}]}\n    fi\n    idx=$((idx+1))\n\n    if [[ \"${reqstatus}\" = \"valid\" ]]; then\n      echo \" + Challenge is valid!\"\n    else\n      break\n    fi\n      ##### Tronic69: wait 10 seconds\n      sleep 10\n  done\n```\n\nI know, the longer middle sleep (default: 1) makes not really sense, but after increasing it it worked. ^^ \nMaybe the (first and thrid) sleep time should be configurable in config.\n This [patch](https://github.com/lukas2511/letsencrypt.sh/files/358017/sleep.patch.txt) should add the sleep time only if you are using `CHALLENGETYPE=\"dns-01\"`. You can apply it by\n\n``` sh\ncd /opt/letsencrypt.sh  # or where your cloned letsencrypt.sh repository is\nwget -Osleep.patch https://github.com/lukas2511/letsencrypt.sh/files/358017/sleep.patch.txt\ngit apply sleep.patch\n```\n\nConfigurable sleep times should be possible by introducing someting like `SLEEPTIME=10` in the config file and calling `sleep \"${SLEEPTIME}\"` instead of just `sleep 10` in `letsencrypt.sh`.\n\nReverting this patch is possible by\n\n``` sh\ngit apply -R sleep.patch\nrm sleep.patch\n```\n\n:wink: \n I really feel like this should be handled in the relevant hook script(s), not as a patch to letsencrypt.sh itself...\n The challenge script should be responsible for deploying the change, waiting till it's applied e.g. by querying DNS back again, and then exiting. \n\nThis is what letsencrypt.sh is expecting\n  Commands:\n--account (-a) Update contact information\n\nhttps://ietf-wg-acme.github.io/acme/#registration\n\nFor example, to update the contact information in the above registration, the client could send the following request:\n\n```\nPOST /acme/reg/asdf HTTP/1.1\nHost: example.com\n\n/* BEGIN JWS-signed request body */\n{\n  \"resource\": \"reg\",\n  \"contact\": [\n    \"mailto:certificates@example.com\",\n    \"tel:+12125551212\"\n  ],\n}\n/* END JWS-signed request body */\n```\n  If one of them is being revoked all three of them are invalid.\n  Currently `./letsencrypt.sh -r cert.pem` does not rename certificates that are already revoked by a ohter client.\n\nSuggest to also rename with `.pem-revoked` them when you get the following error.\n\n```\nRevoking ..\n  + ERROR: An error occurred while sending post-request to https://acme-staging.api.letsencrypt.org/acme/revoke-cert (Status 409)\n\nDetails:\n{\n  \"type\": \"urn:acme:error:malformed\",\n  \"detail\": \"Certificate already revoked\",\n  \"status\": 409\n}\n```\n  The registration_info.json get not generated anymore\n not right.. you do nothing in your script to create this file\n okay sorry. strange. i see only my key and no json file.\n  #148 currently proposes another hook for a cleaner deployment. #220 proposes a new challenge protocol.\n\nThis idea goes a bit further, maybe good for the next major version.\n\nI think we need two kinds of hooks:\n- hooks that interface to verify domain ownership, this is what current deploy_challenge and clean_challenge. There are some letsencryptkey.sh hooks on the github already for different DNS providers.\n- deployment hooks that respond to deploy_cert and unchanged_cert. Every SSL enabled app should have one.\n  For example, there could have one file that deploys apache certificates or another that installs certs for BIND or sendmail or postfix. One could even write something to trigger chef or puppet or whatever.\n\nThose deployment hooks could be possibly generic and there user could map the domain to the deployment hook \"please deploy acme.org cert and keys to Apache and nginx, but acme.net goes to dovecot and sendmail\". \n\nThis could be implemented by having a way to let the hooks register themselves and say \"call me on deploy_cert\".\n\nIn the future those hooks could even be maintained by the\ndevelopers of the applications themselves.\n\nFor example, apachectl to could be patched to provide a list of SSL domains currently configured in the httpd.conf and friends via the command similar to \"apachectl sslvhosts\" and then the Apache hook could just check if the domain is in the apache configuration.\n\nThis way letsencrypt.sh could be integrated with the startup scripts - imagine Apache requesting certificates on system startup in a similar way that some systems generate SSH keys on sshd startup. Or when doing configuration reload. One just needs to avoid a chicken-and-egg scenario in case the same Apache is used for both ownership proof and HTTPS.\n\nFor this, we probably need just to the possibility to specify multiple hooks, in a directory or otherwise. If we let hooks register themselves, we don't even need multiple hook directives for various kinds of hooks.\n\nHey, even BIND or nsd plugin could register one hook that implements dns-01 challenge and another one installing SSL keys for the CLI control tool or requesting keys/certificates for DANE or whatever. \n  It would be useful to be able to have different configuration files per domain(s).\nExample use case:\nNot all of my domains should use OCSP Must-Staple, but I still want to use the `--cron` flag for auto-renewal.\n Whoops. Nice & thank you \ud83d\ude03 \n  Hi, firstly thanks for this amazing work.\n\nI've question/suggestion related to cert permissions. I see that folder **certs**, domain subfolders and all keys and cert have very restrictive permissions. Basically only owner can access keys and certs. How do you set your nginx then? If nginx demon has no access to certs owned by letsencrypt user?\n I am currently trying to use the script with the prosody xmpp server. This server is never run as root so I need to give more access to the certificate.\nI wanted to go with the \"create a special group for cert-access\" approach. I created the group and chgrped the cert dir and all files to the new group.\nI then added the setgid bit to the directory to inherit the group to new files.\nDue to umask 077 new files are still not readable by the group.\nCould you maybe change the umask to 037? (I did that on my end but want to avoid having unclean changes)\nFor default setups it should be no more insecure as the directory is owned by something like root:root or letsencrypt:letsencrypt, right?\n This is what hooks are for, Have a look at the examples.\n It's a bit convoluted to actually change the permissions (cutting dirpath and filenames and inserting timestamp), and it's a bit simpler if you intend to actually copy the files (and replace the symlink) and change the perms later.\r\n  Issue is:\nName resolves to bunch of an IPv4 and IPv6 addresses, but IPv6 is unreachable from network.\nHence --ipv4 is passed to curl.\n It's quite useful, when you have no rights to change network config; when corporative dns-server is your only option (others are just blocked) and you have almost no means to change a thing (or it will take really long time).\n\nOfcourse, there's an option to disable ipv6 on a kernel level, or just prioritize ipv4 addresses - but there are other applications, that rely on internal ipv6 addressing.\n\n// would be great to have single env variable to tell resolver do only ipvX addresses per application, but nah..\n\nSum up: to overcome weird configurations that you can't change.\n  I have a scenario where, during server deployment, ${CERTDIR}/${domain}/cert.pem is pointing to a self-signed certificate.  This is done to make sure applications won't complain about missing certificate if  letsencrypt.sh didn't ran yet.\n\nWhen running letsencrypt.sh in this scenario, the script fails because the existing certificate doesn't contains the string `DNS:`.\n\nThe problem is with the following line:\n\n```\ncertnames=\"$(openssl x509 -in \"${cert}\" -text -noout | grep DNS: | _sed 's/DNS://g' | tr -d ' ' | tr ',' '\\n' | sort -u | tr '\\n' ' ' | _sed 's/ $//')\"\n```\n\nI guess that not finding the `DNS:` string should not be considered as an error and should force a renew.\n  I've been running this nice script for some time now and I've noticed that my CERTDIR is filling up with old and expired certificate files. For example, one of my servers already has more than 320 expired certificate files (csr/pem combos).\n\nShould this script be responsible for cleaning up those expired certificates, or do you think we should write our own thing to clean them up?\n\nI'd appreciate your thoughts.\n\nThank you.\n I personally would not want the script to clean this up by default. also, it's a one-line cron job to clean this up (or in a hook), so it's better to separate this functionality (per the Unix doctrine).\n  I had a requirement that i would start the script parallel with different arguments.\nTherefore i wanted one incarnation to wait for the other to finish while not being required to start it again myself.\n True, never thought about using another script :/\n  Hello!\n\nIts possible to support http-01-port protocol to allow non-80 port to be checked?\n\nLetsEncrypt official client support change http port via this parameter (Documentend in http://letsencrypt.readthedocs.io/en/latest/using.html )\n\nThanks!\n  This fixes the issue I had in #222 by optionally accepting WELLKNOWN from the environment\n  It looks like Let's Encrypt changed the way they generate certificates early this morning. There are no longer \"DNS\" lines, breaking the check to extract the cert name.\n\nWe (@colans & I) just switched to looking in the CN. We haven't tested with alt names yet, but will be shortly.\n @ergonlogic How to reproduce this problem? We are using letsencrypt.sh 0.2.0 and it still works fine, like before. Example: https://gist.github.com/memtkmcc/335a75e00fd2f2460f03bbda15c33843\n Thanks for looking into it. It's very possible that we were looking at the wrong certificate as we noticed that our LE ones were sometimes being overwritten by self-signed ones in [our attempt to get this working with Aegir](https://www.drupal.org/node/2629560).  Sorry about that.\n   The Lighttpd example may be confusing for some users. The alias given would require $WELLKNOWN to be set to /var/www/letsencrypt/.acme-challenges. The earlier examples for Apache and Nginx both use the given $WELLKNOWN set to /var/www/letsencrypt.\n\nI believe the Lighttpd example should be modified as follows:\n`alias.url += (\n \"/.well-known/acme-challenge/\" => \"/var/www/letsencrypt/\"\n)`\nThis will allow users copying the example to use the same $WELLKNOWN as given for the other examples.\n Apologies, my bad. I've used /etc/ paths (I think they're mentioned in some other docs here), and then changed to /var without actually testing.\n  fix for #178 broke quoting (75985c6a), arguments with spaces get exploded to different args\n\naltho i don't have old enough bash to test with (#178 did not indicate what version he had or was it even bash), i'm pretty sure this change is safe\n it expands to nothing with no args and expands to `\"$@\"` with args. thus fix for broken shell reported originally. the thing is that `$@` expands words in it (one word becomes two words), it must be used as `\"$@\"`. saying that \"right now you evaluated only place its used\" is bad practice, later you make more use-cases and will totally forget that you have broken word expansion in place. if you intend to break word expansion on purpose use `$*` not `$@`. but i really just suggest to merge this.\n also, given that you say the function always called with arguments, then the result is always `\"$@\"` not `$@`, there is a difference.\n  The current example is actually incorrect it seems :)\n It hasn't worked for me on 2 separate servers. \n\nCan you explain how and why nginx would guess the hidden acme challenges directory? Or did my export not function properly for some reason? \n So somehow the script is indeed not picking up on my environment variable. Thanks for the reply \n Ah, thanks. That does explain :)\n  Hi,\n\nfound a issue while playing around with your script. Seems all u in domains names getting replaced by l regardless if the chars are in the domains.txt or manually entered by -d.\n\nSome Sample output:\nadmin@FileStore:/share/homes/Stefan/letsencrypt.sh$ ./letsencrypt.sh -c -d uuuu.uu\nINFO: Using main config file /share/homes/Stefan/letsencrypt.sh/config\nProcessing llll.ll\n- Signing domains...\n- Creating new directory /share/MD0_DATA/homes/Stefan/letsencrypt.sh/certs/llll.ll ...\n- Generating private key...\n\nwith domains.txt\n ./letsencrypt.sh -c \nINFO: Using main config file /share/homes/Stefan/letsencrypt.sh/config\nProcessing test-ll.de\n- Signing domains...\n- Creating new directory /share/MD0_DATA/homes/Stefan/letsencrypt.sh/certs/test-ll.de ...\n- Generating private key...\n  Domains looks like this:\n  admin@FileStore:/share/homes/Stefan/letsencrypt.sh$ cat domains.txt \n  test-uu.de\n\nI am using the script on a QNAP NAS system but this should not have any influence on the script. \n Hi,\nQnaps QTS Issing a busybox version of tr:\nBusyBox v1.01 (2016.03.10-19:14+0000) multi-call binary\n\nUsage: tr [-cds] STRING1 [STRING2]\n\nTranslate, squeeze, and/or delete characters from\nstandard input, writing to standard output.\n\nOptions:\n        -c      take complement of STRING1\n        -d      delete input characters coded STRING1\n        -s      squeeze multiple output characters of STRING2 into one character\n  diff on ~~*BSD~~ OpenBSD has no -v option. Replacing it with a diff between identical files works for every diff implementing -u.\n I have FreeBSD 10.2-RELEASE-p7:\n\n```\n# diff -v\ndiff (GNU diffutils) 2.8.7\n```\n\n```\n# which diff\n/usr/bin/diff\n```\n Sorry, didn't try on FreeBSD. On OpenBSD I get:\n\n% diff -v\ndiff: unknown option -- v\nusage: diff [-abdipTtw] [-c | -e | -f | -n | -q | -u] [-I pattern] [-L label]\n            file1 file2\n       diff [-abdipTtw] [-I pattern] [-L label] -C number file1 file2\n       diff [-abditw] [-I pattern] -D string file1 file2\n       diff [-abdipTtw] [-I pattern] [-L label] -U number file1 file2\n       diff [-abdiNPprsTtw] [-c | -e | -f | -n | -q | -u] [-I pattern]\n            [-L label] [-S name] [-X file] [-x pattern] dir1 dir2\n% which diff\n/usr/bin/diff\n - Lukas Schauer notifications@github.com [04.06.2016 04:14]:\n  > Thanks for bringing this up, I changed the check (similar to what you\n  > suggested), can you test if it is working fine for you now?\n\nYes, it is working fine now. Thanks.\n  Fixes #217.\n After this, FreeBSD will be supported. Beyond the base system, only bash and curl are required from ports.\n I came back to look at this today, it seems I had been using a version before the `clean_json` function. Using your branch unmodified on FreeBSD works \ud83d\udc4d\n  As the spec for [Account Deactivation](https://ietf-wg-acme.github.io/acme/draft-ietf-acme-acme.html#rfc.section.7.3.7) says that the server *should not* revoke certificates, should dehydrated ask for that action to the user?\r\n\r\nEDIT: It seems that what I linked is the draft for ACME v2 protocol and the v1 currently used does not include a way for deleting an account. I needed to deactivate some accounts and added a command to my dehydrated script. Here's the [diff](https://github.com/lukas2511/dehydrated/files/2641548/dehydrated_add_deactivate_command.diff.txt) for anyone who also just needs a quick solution. And it really is minimal. It's ACME v2 only (v1 really does not have the option?), just sends the command to the server and does not change the status or check for it in the local json file. I'm not familiar enough with the script to add that. ACME v1 allows account deactivation. There's no way to delete an account in ACME v1 or ACME v2, only deactivation.\r\n\r\nACME v1 account deactivation works the same way as in ACME v2: Send an authenticated POST with the JWS body`{\"status\":\"deactivated\"}` to the account's URL.  We are using  your client in our TLS automation, on line #426 the following change was made since this client just began to fail on 26 May 2016:\n\n```\n+    #challenges=\"$(printf '%s\\n' \"${response}\" | sed -n 's/.*\\(\"challenges\":[^\\[]*\\[[^]]*]\\).*/\\1/p')\"\n+    challenges=\"$(printf '%s\\n' \"${response}\" | tr -d '\\n' |sed -n 's/.*\\(\"challenges\":[^\\[]*\\[[^]]*]\\).*/\\1/p')\"\n```\n\nNotice that we needed to delete all newlines in the json response.  Perhaps the response is now pretty format as opposed to a single line?\n ok thanks did not realize that.  appreciate the response.\n\nOn Fri, May 27, 2016 at 1:37 PM, Lukas Schauer notifications@github.com\nwrote:\n\n> You also could just have downloaded the newest version which also includes\n> a similar change. Thanks anyway.\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/lukas2511/letsencrypt.sh/issues/213#issuecomment-222247353,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AAi4OS6WcKqzW0jRRRdqaIKqaPUEJz7Iks5qF1X1gaJpZM4IoqQH\n> .\n  I'm trying to generate some certificates on AWS with Ubuntu 14.04.4. Whenever I run `./letsencrypt.sh -c` I always get this error. I've checked for any missing equal signs in the openssl config file and it appears to be valid.\n\noutput:\n`Generating signing request...\nerror on line 6 of /tmp/letsencrypt.sh-s29jat\n139960430315168:error:0E079065:configuration file routines:DEF_LOAD_BIO:missing equal sign:conf_def.c:346:line 6`\n\ncontents of /tmp/letsencrypt.sh-s29jat:\n`#!/bin/sh\nLD_LIBRARY_PATH=\"/opt/bitnami/common/lib:$LD_LIBRARY_PATH\"     \nDYLD_LIBRARY_PATH=\"/opt/bitnami/common/lib:$DYLD_LIBRARY_PATH\"     \nOPENSSL_CONF=\"/opt/bitnami/common/openssl/openssl.cnf\"\nOPENSSL_ENGINES=\"/opt/bitnami/common/lib/engines\"\nexport LD_LIBRARY_PATH\nexport DYLD_LIBRARY_PATH\nexport OPENSSL_CONF\nexport OPENSSL_ENGINES\nexec /opt/bitnami/common/bin/openssl.bin \"$@\"\n[SAN]\nsubjectAltName=DNS:testdomain.com, DNS:www.testdomain.com`\n Here's the output of `./letsencrypt.sh -e`:\n\nletsencrypt.sh configuration\nINFO: Using main config file /opt/bitnami/apache2/htdocs/letsencrypt/config\ndeclare -- CA=\"https://acme-staging.api.letsencrypt.org/directory\"\ndeclare -- LICENSE=\"https://letsencrypt.org/documents/LE-SA-v1.0.1-July-27-2015.pdf\"\ndeclare -- CHALLENGETYPE=\"http-01\"\ndeclare -- DOMAINS_TXT=\"/opt/bitnami/apache2/htdocs/letsencrypt/domains.txt\"\ndeclare -- HOOK=\"\"\ndeclare -- HOOK_CHAIN=\"no\"\ndeclare -- RENEW_DAYS=\"30\"\ndeclare -- ACCOUNT_KEY=\"/opt/bitnami/apache2/htdocs/letsencrypt/private_key.pem\"\ndeclare -- ACCOUNT_KEY_JSON=\"/opt/bitnami/apache2/htdocs/letsencrypt/private_key.json\"\ndeclare -- KEYSIZE=\"4096\"\ndeclare -- WELLKNOWN=\"/opt/bitnami/apache2/htdocs/letsencrypt/.well-known/acme-challenge\"\ndeclare -- PRIVATE_KEY_RENEW=\"yes\"\ndeclare -- OPENSSL_CNF=\"/opt/bitnami/common/bin/openssl\"\ndeclare -- CONTACT_EMAIL=\"nil@nil.gs\"\ndeclare -- LOCKFILE=\"/opt/bitnami/apache2/htdocs/letsencrypt/lock\"\n I set `OPENSSL_CNF` to `/opt/bitnami/common/bin/openssl/openssl.cnf` in the `config` file and now see this error:\n\n`cat: /opt/bitnami/common/bin/openssl/openssl.cnf: Not a directory`\n\nWhich leads me to believe that it should be the directly, shouldn't it?\n Here's the entire config file:\n\n```\n########################################################\n# This is the main config file for letsencrypt.sh      #\n#                                                      #\n# This file is looked for in the following locations:  #\n# $SCRIPTDIR/config (next to this script)              #\n# /usr/local/etc/letsencrypt.sh/config                 #\n# /etc/letsencrypt.sh/config                           #\n# ${PWD}/config (in current working-directory)         #\n#                                                      #\n# Default values of this config are in comments        #\n########################################################\n\n# Path to certificate authority (default: https://acme-v01.api.letsencrypt.org/directory)\n#CA=\"https://acme-v01.api.letsencrypt.org/directory\"\nCA=\"https://acme-staging.api.letsencrypt.org/directory\"\n\n# Path to license agreement (default: https://letsencrypt.org/documents/LE-SA-v1.0.1-July-27-2015.pdf)\nLICENSE=\"https://letsencrypt.org/documents/LE-SA-v1.0.1-July-27-2015.pdf\"\n\n# Which challenge should be used? Currently http-01 and dns-01 are supported\nCHALLENGETYPE=\"http-01\"\n\n# Path to a directory containing additional config files, allowing to override\n# the defaults found in the main configuration file. Additional config files\n# in this directory needs to be named with a '.sh' ending.\n# default: <unset>\n#CONFIG_D=\n\n# Base directory for account key, generated certificates and list of domains (default: $SCRIPTDIR -- uses config directory if undefined)\nBASEDIR=$SCRIPTDIR\n\n# File containing the list of domains to request certificates for (default: $BASEDIR/domains.txt)\nDOMAINS_TXT=\"${BASEDIR}/domains.txt\"\n\n# Output directory for challenge-tokens to be served by webserver or deployed in HOOK (default: $BASEDIR/.acme-challenges)\nWELLKNOWN=\"${BASEDIR}/.well-known/acme-challenge\"\n\n# Location of private account key (default: $BASEDIR/private_key.pem)\nACCOUNT_KEY=\"${BASEDIR}/private_key.pem\"\n\n# Location of private account registration information (default: $BASEDIR/private_key.json)\nACCOUNT_KEY_JSON=\"${BASEDIR}/private_key.json\"\n\n# Default keysize for private keys (default: 4096)\n# KEYSIZE=\"4096\"\n\n# Path to openssl config file (default: <unset> - tries to figure out system default)\nOPENSSL_CNF=\"/opt/bitnami/common/bin/openssl\"\n\n# Program or function called in certain situations\n#\n# After generating the challenge-response, or after failed challenge (in this case altname is empty)\n# Given arguments: clean_challenge|deploy_challenge altname token-filename token-content\n#\n# After successfully signing certificate\n# Given arguments: deploy_cert domain path/to/privkey.pem path/to/cert.pem path/to/fullchain.pem\n#\n# BASEDIR and WELLKNOWN variables are exported and can be used in an external program\n# default: <unset>\n#HOOK=\n\n# Chain clean_challenge|deploy_challenge arguments together into one hook call per certificate (default: no)\n#HOOK_CHAIN=\"no\"\n\n# Minimum days before expiration to automatically renew certificate (default: 30)\nRENEW_DAYS=\"30\"\n\n# Regenerate private keys instead of just signing new certificates on renewal (default: yes)\nPRIVATE_KEY_RENEW=\"yes\"\n\n# Which public key algorithm should be used? Supported: rsa, prime256v1 and secp384r1\n#KEY_ALGO=rsa\n\n# E-mail to use during the registration (default: <unset>)\n#CONTACT_EMAIL=\n\n# Lockfile location, to prevent concurrent access (default: $BASEDIR/lock)\n#LOCKFILE=\"${BASEDIR}/lock\"\n```\n That fixed that error, I didn't see the extra `/bin/` in there. Thanks for the help.\n  Particularly useful if you want to set up dual certificates, you can set the config files to output into separate directories rather than using separate base directories for each. e.g. `CERTDIR=\"${BASEDIR}/certs/rsa\"` and `CERTDIR=\"${BASEDIR}/certs/ecdsa\"`\n  Hello there!\n\nI have the following setup:\n- 10 different certificates for nginx vhosts\n- 1 cert for incoming mail server\n- 1 cert for outgoing mail server\n\nWhat i want to archive is to restart nginx only once when any of the 10 vhost certificates have been renewed. I'm already using the hooks that are present in the example directory but that function would be called for each certificate (so 10 times in worse case) which would mean 10 nginx restarts within a single letsencrypt.sh run.\nIs there any existing feature i can use to reach my goal?\n\nThanks in advance,\nMichael\n Side note: You could also reload the configuration instead of restarting the webserver.\n  from now running cron silently stops on Requesting challenge\n\n```\n# letsencrypt.sh -c\n# INFO: Using main config file /usr/local/etc/letsencrypt.sh/config.sh\nProcessing vpbx-id55576.telecomax.net\n + Signing domains...\n + Generating private key...\n + Generating signing request...\n + Requesting challenge for vpbx-id55576.telecomax.net...\n```\n  Seems letsencrypt behavior changed recently. Using your tool \n\n_/usr/local/sbin/letsencrypt.sh --cron --domain some.pl --domain www.some.pl --challenge http-01 --config .../some.pl.dk/.letsencrypt/config.sh_\n\nwere getting \n\n_ERROR: Challenge is invalid! (returned: invalid) (result: {\"type\":\"http-01\",\"status\":\"invalid\",\"error\":{\"type\":\"urn:acme:error:connection\",\"detail\":\"DNS problem: NXDOMAIN looking up A for some.pl\"},\"uri\":\"https://acme-v01.api.letsencrypt.org/acme/challenge/yx4xQiXuFusLu-MFtAnUFXcBxoIqWWImKq05mNdS0Uw/90567863\",\"token\":\"hT5T7cDEGdnt4UvHPR4jFkt1C9kU4uoMau3hsp9BxZ4\",\"keyAuthorization\":\"hT5T7cDEGdnt4UvHPR4jFkt1C9kU4uoMau3hsp9BxZ4.6KqDpmIgUn413LbT6leEv1TfILZqkDmTU7_fuM25T5I\",\"validationRecord\":[{\"url\":\"http://some.pl/.well-known/acme-challenge/hT5T7cDEGdnt4UvHPR4jFkt1C9kU4uoMau3hsp9BxZ4\",\"hostname\":\"some.pl\",\"port\":\"80\",\"addressesResolved\":null,\"addressUsed\":\"\"}]})_\n\nfrom Fri May 20 20:50:10 CEST 2016 I getting  only \n\n_\\+ Requesting challenge for some.pl..._\n\nand then no thing, no error!\nPlease mind  some.pl or whatever is not registered, so ERROR was correct output. \nThe problem is no output at all since  Fi May 20 night.\n No, I think your script works perfect. I just trying to say letsencrypt site returns no error or different  looked message while error happens. It seems to be changed last Friday. Just FYI. \n No, but I will try.\n It looks very nice now - response  contains much more readable info. Thank you so much!\n  I am running the latest git version of letsencrypt.sh\nScript ran fine the last several weeks.\n\nToday, when requesting a new cert, it simply stops at the point\n\n``` ...\nProcessing foo.com\n + Signing domains...\n + Creating new directory /etc/ssl/certs/foo.com ...\n + Generating private key...\n + Generating signing request...\n + Requesting challenge for foo.com ...\n```\n\nLooking into the script, it runs fine until line 384\n\n```\nresponse=\"$(signed_request \"${CA_NEW_AUTHZ}\" '{\"resource\": \"new-authz\", \"identifier\": {\"type\": \"dns\", \"value\": \"'\"${altname}\"'\"\n```\n\n$response is filled with a json response like this from letsencrypt, so connection to Let's Encrypt API works.\n\n```\n{ \"identifier\": { \"type\": \"dns\", \"value\": \"bar.foo.com }, \"status\": \"pending\", \"expires\": \"2016-05-28T16:42:04.050529229Z\", \"challenges\": [ { \"type\": \"dns-01\", \"status\": \"pending\", \"uri\": \"https://acme-v01.api.letsencrypt.org/acme/challenge/AoeDKdkeJF-PgaffffffffhJxsSTD4SBjARBOJHT0kd0ulWqq4/12345678\", \"token\": \"bpcTwqRrZvhoHwEG49k1RODWbgaL8cTit_Iv5Nn5gwM\" }, { \"type\": \"http-01\", \"status\": \"pending\", \"uri\": \"https://acme-v01.api.letsencrypt.org/acme/challenge/AoeEgVJF-PgaffffffffhJxsSTD4SBjARBOJHT0kd0ulWqq4/12345678\", \"token\": \"DwbZqn27oLukrVavxWtTpyNJXbN1FYBfLgc8Zyro6_s\" }, { \"type\": \"tls-sni-01\", \"status\": \"pending\", \"uri\": \"https://acme-v01.api.letsencrypt.org/acme/challenge/AoeEgVJF-PgaffffffffhJxsSTD4SBjARBOJHT0kd0ulWqq4/12345678\", \"token\": \"pGQFERvi3yW0fp3IXWuEpPV2F3W4JW4XiIwEnT46OeE\" } ], \"combinations\": [ [ 0 ], [ 2 ], [ 1 ] ] }\n```\n\nThe next line in letsencrypt.sh seems to fail (although if I manually do the command on the cli on above content, it greps the content fine and would put it in $challenges.). Nothing else behinde line 386 is running and letsencrypt.sh simply exits.\n\nAny ideas what this could be?\nIt happens on several machines, where I have letsencrypt.sh running fine for the last couple weeks.\n It's silently failing exactly that way for me too. I'm running `letsencrypt.sh` in a FreeBSD 10.3-RELEASE jail and cannot figure out what's wrong. These are the relevant parts of my `config.sh`:\n\n```\nCHALLENGETYPE=\"http-01\"\nBASEDIR=\"/usr/local/etc/letsencrypt.sh\"\nWELLKNOWN=\"/usr/local/www/.well-known/acme-challenge\"\nalias openssl='/usr/local/bin/openssl'\n```\n\nDirectory permissions:\n\n```\n# ls -lisa /usr/local/www/.well-known/acme-challenge/\ntotal 8\n4099163 4 drwxrwxr-x  2 root  letsencrypt  512 May 21 18:53 .\n4098077 4 drwxr-xr-x  3 root  wheel        512 May 21 18:27 ..\n\n# ls -lisa /usr/local/etc/letsencrypt.sh\ntotal 44\n4103539 4 drwxrwx---   4 root         letsencrypt   512 May 21 18:57 .\n4099103 4 drwxr-xr-x  10 root         wheel         512 May 21 18:24 ..\n4103548 4 drwxr-xr-x   2 root         wheel         512 May 21 18:12 .acme-challenges\n4103556 4 drwx------   3 letsencrypt  letsencrypt   512 May 21 18:45 certs\n4099192 4 -rw-r--r--   1 root         letsencrypt  3263 May 21 18:34 config.sh\n4103540 4 -rw-r--r--   1 root         wheel        3191 May 21 18:12 config.sh.example\n4099207 4 -rw-r--r--   1 root         letsencrypt    13 May 21 18:36 domains.txt\n4103542 4 -rw-r--r--   1 root         wheel          73 May 21 18:12 domains.txt.example\n4103541 4 -rw-r--r--   1 root         wheel        2709 May 21 18:12 hook.sh.example\n4103554 4 -rw-------   1 letsencrypt  letsencrypt   928 May 21 18:35 private_key.json\n4103552 4 -rw-------   1 letsencrypt  letsencrypt  3243 May 21 18:35 private_key.pem\n```\n\nMy nginx configuration looks like this:\n\n```\nserver {\n        listen 80 default;\n        server_name pkg.embik.me;\n\n        root /var/packages;\n        location / {\n                autoindex on;\n        }\n\n        location /.well-known/ {\n                add_header Content-Type text/plain;\n                alias /usr/local/www/.well-known/;\n        }\n}\n```\n\nRunning `letsencrypt.sh`:\n\n```\n# su -m letsencrypt -c 'bash /usr/local/bin/letsencrypt.sh --cron'\n# INFO: Using main config file /usr/local/etc/letsencrypt.sh/config.sh\nProcessing pkg.embik.me\n + Signing domains...\n + Generating private key...\n + Generating signing request...\n + Requesting challenge for pkg.embik.me...\n```\n\nUser `letsencrypt` is indeed member of the corresponding group and should be able to access the directory:\n\n```\n# id letsencrypt\nuid=1001(letsencrypt) gid=1001(letsencrypt) groups=1001(letsencrypt)\n```\n\nI'm eager to help debug this issue!\n did u update it recently? that looks like the json+sed problem from the other ticket\n(and yes, the FreeBSD-10.3-RELEASE pkg version does not have this update)\n The `security/letsencrypt.sh` [port](https://www.freshports.org/security/letsencrypt.sh/) does not contain that commit indeed (as it has been last updated with v0.1.0). I cannot speak for OP of course. Will there be a minor release in the near future to push out these changes to packaging systems not following `master`?\n\nThank you very much for creating letsencrypt.sh by the way. Cannot be stressed enough.\n @lukas2511 you are right - I am sorry. I actually used a fork of letsencrypt which does not have the commit you mentioned. After merging upstream it works (again). \n Thank you very much!\n  It would be nice if instead of processing domains one at a time it would hand the txt challenge for ALL the domains to me at once, then I could create all the txt records at once, and it would plow through them all.  As it is it is taking about an hour for each to propagate, so my 9 domain cert is going to take all day.  That would save me a LOT of time.\n Imagine when u have 2500 domains, 5 dns servers and most of the domains\nhosted via on private cdn;s or geo located servers\n\n__________________________________.    https://eXtremeSHOK.com     .__________________________________\n\nOn 20-May-16 8:15 PM, captainwasabi wrote:\n\n> It would be nice if instead of processing domains one at a time it\n> would hand the txt challenge for ALL the domains to me at once, then I\n> could create all the txt records at once, and it would plow through\n> them all. As it is it is taking about an hour for each to propagate,\n> so my 9 domain cert is going to take all day. That would save me a LOT\n> of time.\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly or view it on GitHub\n> https://github.com/lukas2511/letsencrypt.sh/issues/203\n Imagine when u have 2500 domains, 5 dns servers and most of the domains\nhosted via on private cdn;s or geo located servers.\n\n__________________________________.    https://eXtremeSHOK.com     .__________________________________\n\nOn 20-May-16 8:15 PM, captainwasabi wrote:\n\n> It would be nice if instead of processing domains one at a time it\n> would hand the txt challenge for ALL the domains to me at once, then I\n> could create all the txt records at once, and it would plow through\n> them all. As it is it is taking about an hour for each to propagate,\n> so my 9 domain cert is going to take all day. That would save me a LOT\n> of time.\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly or view it on GitHub\n> https://github.com/lukas2511/letsencrypt.sh/issues/203\n I wouldn't do that with dns-01 then unless I could write an automatic hook script to add it to the bind server.  I'm currently only having to go through this because I'm currently using a wildcard cert that it won't use.  It would be faster if network solutions (I hates em but it ain't my call) propagated faster.  \"A\" and CNAME records don't seem to take this long to get out there.\n @captainwasabi @extremeshok Take a look at: https://github.com/lukas2511/letsencrypt.sh/blob/master/docs/hook_chain.md .  That should allow you to deploy all the challenges at once, instead of one at a time.\n AHH! trying it.  Nope, but I think that's because the first ones still existed from the run I was making. So I'll wait for those to clear out then try again.\n hmm, when my hook prints the deploy challenge it's just showing the first domain listed in domains.txt\n\ndomain.txt is like:\n\ndomain.com cloud.domain.com mail.domain.com smtp.domain.com imap.domain.com ....\n\nAm I doing something wrong?\n\nThis is my config.sh\nCA=\"https://acme-v01.api.letsencrypt.org/directory\"\nCHALLENGETYPE=\"dns-01\"\nHOOK=\"./hooks/hook\"\nHOOK_CHAIN=\"yes\"\nCONTACT_EMAIL=myemail@mydomain.com\n\nMy hook script:\n\n```\n    #!/bin/bash\n    if [ \"$1\" == \"deploy_challenge\" ] ; then\n        echo $1\n        echo $2\n        echo $4\n        echo '-----'\n    fi\n```\n\nThe results print the challenge for domain.com then \n\n```\n+ Responding to challenge for domain.com...\nERROR: Challenge is invalid! (returned: invalid) (result: {\n  \"type\": \"dns-01\",\n  \"status\": \"invalid\",\n...\n```\n Please read https://github.com/lukas2511/letsencrypt.sh/blob/master/docs/hook_chain.md again. X*Y paramters are provided to your hook script if you use HOOK_CHAIN\n\nAdd `echo \"$@\"` to your script and you will see all parameters.\n\nHTH!\n ah, duh.  Thanks!\n sigh. I don't get it.  Well, I got all we're talking about here. But while I wait for the TTL to time out again I wrote a script to watch the dns entries.  Most of them are rock solid but one of them returns \"Not Found\" almost half the time. Tried to go forward anyway and of course it failed on that one (which was the last one).  So I'm trying one more time. It's very weird as the TTL times out, the challenge txt strings start bouncing between the two values rather than just flipping to the new one like I'd expect.\n\nDoes anyone know what dns server the letsencrypt server is using to check? I'd prefer to check against that server if possible and only go forward once they are stable there.\n\nI need this to work because not all the services I want to use this cert with use https :(  \n See: https://community.letsencrypt.org/t/dns-challenge-is-in-staging/8322/18\n\nIf the responses are \"bouncing\" between values, there are most likely multiple servers involved which are not (yet) in sync. If you can access all servers directly you have to check all servers with your script. If the servers are behind some kind of load balancer you are out of luck. You can only guess how long it takes until all servers have the new information.\n Yup, using google's dns. gonna change my script to use the dig command.\n\nThanks again!\n I'm also having intermittent failure with DNS-01 and Cloudflare DNS. I am using the hook:\n\nhttps://github.com/RoliSoft/LetsEncrypt-CloudFlare-Hook\n\nwhich doesn't support HOOK_CHAIN=\"yes\" so it deploys the challenges one by one and waits for each challenge to propagate before returning to letsencrypt.sh. Problem is that the TXT record occasionally has not propagated to the LE server when the letsencrypt.sh calls to do the challenge. The domain I am trying to generate the certs for has 69 alt names so I have been unable to get completely through all 69 challenges before the script encounters a problem.\n\nThe best solution would be for the hook.sh script to support HOOK_CHAIN=\"yes\", deploy all challenges and them wait for the challenges to propagate to my server and then maybe wait a little longer to increase the odds that the LE server sees the challenges and doesn't error out.\n\nBut, maybe you could make a change in the letsencrypt.sh script to repeatedly call the deploy_challenge hook even if HOOK_CHAIN=\"no\", wait an optionally number of seconds, and then re-loop through the challenges sending them to LE server (possibly retrying the challenge if the challenge wasn't propagated to the LE resolver).\n\nAlso, I ran the letsencrypt.sh script multiple times to generate this 70 name cert and it error'd out so many times that I must have hit some pending challenges limit so I can no longer run this script (I guess I will have to wait a week or so to see if the LE server clears out those pending challenges so I can generate new ones and finally make it through to the end and get a cert for my domain).\n\nIt would be nice if the script cleared out those pending challenges before it exits with an error.\n I used the hook from this Gist: https://gist.github.com/nneul/76a38010313f55db0f7a\n\nIt doesn't directly support the hook_chain but it does print out all the return values, the last one in each set is the deploy challenge, then it waits until you hit return to move forward.\n\nGood luck.\n\nI used this command to check propagation for each domain: \n\n`\n    dig -t txt _acme-challenge.domain.com +trace | grep _acme | grep -v DiG\n`\n This is what I'm using now.\n\nhttps://gist.github.com/captainwasabi/8622e485a70ae4345c0f727e93eab006\n  I found out the lets'encrypt API returned pretty json with new lines which break the sed parsing. \n\nThis patch just remove the new lines from the json.\n Great. I just found out this morning that the script wasn't working so I wrote the quick fix. Your solution is much better.\nThanks.\n as I did not have the time to rewrite this fix for FreeBSD sed, I replaced sed with gsed and this fix worked fine!\n  with --testCA parameter, you can use staging API with all commands without moving any files or changing configuration.\n\nSolves #92 with minimal changes to code and configuration.\n  is it possible to extend the domain.txt config for using different challenges for each host?\naka i need to use dns-01 challenges for roundrobins and http-01 for some external domains\n(host challenges for roundrobins are hard to deploy, \nbut dns access to external domains is not possible)\n\nhere is an example for an **example.com certificate** which i would like to build:\n\nhttp-01 challenges for:\n- example.com\n- www.example.com\n- host.example.com\n- host.otherdomain.com\n\ndns-01 challenges for:\n- roundrobin.example.com\n- more.roundrobin.example.com\n  Hi, I have permissions to edit the wiki page but I thought I'd ask first. Is it possible to add my hook to the list? It allows for manipulating Azure DNS records for certificates.\n\nHere it is:\n\n[Certzure](https://github.com/bviktor/certzure)\n\nThanks in advance.\n Thanks, Lukas!\n  Could this be made an option?\nOr, if it can be done with hook, can you add a doc entry regarding how to do it?\n Hook should actually contain CERTFILE instead of FULLCHAINFILE:\n\n```\n    echo \" + HOOK: Merging KEYFILE and CERTFILE to ssl.pem\"\n    umask 0077\n    cat \"${KEYFILE}\" \"${CERTFILE}\" > \"${BASEDIR}/certs/${DOMAIN}/ssl.pem\"\n```\n Ah, no, no... Lighttpd has 2 config options `ssl.pemfile` and `ssl.ca-file`. Former should contain both KEYFILE and CERTFILE, latter is FULLCHAINFILE.\n Using the hook method now and it works fine, thanks!\nHowever, you might still want to add this use-case to documentation, for googlers' sake.\n  Instead of a simple --hook, it would be nice to have a --pre-hook and --post-hook, so we can do cleanups afterwards.\n Ok, let's store this in the brainfart section. :-) Doh!\n  I use the hash of the private key for HKPK\n  [root@excession:letsencrypt.sh]./letsencrypt.sh -c -d excession.gtaxl.net -d irc.gtaxl.net -t dns-01 -k 'hooks/cloudflare/hook.py'\n# INFO: Using main config file /root/letsencrypt.sh/config.sh\n- Generating account key...\n- Registering account key with letsencrypt...\n  Processing excession.gtaxl.net with alternative names: irc.gtaxl.net\n  - Signing domains...\n  - Creating new directory /root/letsencrypt.sh/certs/excession.gtaxl.net ...\n  - Generating private key...\n  - Generating signing request...\n  - Requesting challenge for excession.gtaxl.net...\n  - Requesting challenge for irc.gtaxl.net...\n    Traceback (most recent call last):\n    File \"hooks/cloudflare/hook.py\", line 14, in <module>\n    import dns.resolver\n    File \"/usr/local/lib/python2.7/dist-packages/dns/resolver.py\", line 35, in <module>\n    import dns.message\n    File \"/usr/local/lib/python2.7/dist-packages/dns/message.py\", line 191\n    print('id %d' % self.id, file=s)\n                                 ^\n    SyntaxError: invalid syntax\n\nI'm on Debian 8.4. Please help :(\n I have no idea why Github formatted it like that, sorry.\n Use three backticks: \n\n```\nhans\n```\n  The documentation for WELLKNOWN gives conflicting instructions.\n\n> your WELLKNOWN variable **must** include the \"acme-challenge\" subdirectory\n> (eg, `WELLKNOWN=\"/etc/wellknown/acme-challenge\"`, **not** `WELLKNOWN=\"/etc/wellknown\"`\n> \n> An example config would be to create a directory `/var/www/letsencrypt`,\n> set `WELLKNOWN=/var/www/letsencrypt`\n\nSo does `WELLKNOWN` have to have `\"acme-challenge\"` at the end or not? What is the difference between:\n\n> `WELLKNOWN=\"/etc/wellknown/acme-challenge\"` **not** `WELLKNOWN=\"/etc/wellknown\"`\n\nand\n\n> create directory `'/var/www/letsencrypt\"`, set `WELLKNOWN=/var/www/letsencrypt\"`\n So if you set `WELLKNOWN=/var/www/letsencrypt` does letsencrypt.sh automatically create `.well-known/acme-challenge/` in it?\n\nDoes \"your `WELLKNOWN` variable **must** include the \"acme-challenge\" subdirectory\" mean\n- The `WELLKNOWN` variable must have \"acme-challenge\" at the end (i.e. `WELLKNOWN=/foo/bar/acme-challenge`)\n\nor\n- The path set by `WELLKNOWN` must have an \"acme-challenge\" directory in it (i.e. `WELLKNOWN=/foo/bar; mkdir /foo/bar/acme-challenge`)\n\nSorry for being dense, but the docs sortof imply two different things at once.\n Okay it just clicked there, thank you :-)\n Yeah, the wording could be clearer. the WELLKNOWN needs to point to the directory that the webserver will serve as the absolute path URI, etc.\nCheers!\n Slightly related: Apparently the default value for WELLKNOWN is \"$BASEDIR/.acme-challenges\" (note the \"s\" at the end), but everywhere else discusses just \".acme-challenge\". I got around it by overriding the default in the config.sh file.\n Good point and thanks.\n  I'm using DNS-01.\n\nI'm creating a cert with multiple altnames.\n\nI exec\n\n```\nletsencrypt.sh -c --force \\\n--config ./config.sh \\\n--hook ./hook.sh \\\n--domain \"example.com www.example.com s1.example.com s2 example.com\"\n```\n\nIn 'letsencrypt.sh`, 1st \"--domain\" param is main domain, subsequent params are altnames\n\n```\n...\n# Create certificate for domain(s)\nsign_domain() {\n  domain=\"${1}\"\n  altnames=\"${*}\"\n  timestamp=\"$(date +%s)\"\n...\n```\n\nPer 'docs/dns-verification.md', in order to respond to the challenge, my DNS must contain entries for all of the domain+altnames.  Here, e.g.,\n\n```\n_acme-challenge     IN    TXT    $4\n_acme-challenge.www IN    TXT    $4\n_acme-challenge.s1  IN    TXT    $4\n_acme-challenge.s2  IN    TXT    $4\n```\n\nThis DNS record prep needs to be done in my hook.sh.  And, I need to prepare the DNS, and wait for it to fully propagate, _before_ answering the challenges.\n\nSo, I'd like to create ALL the necessary DNS records, and reload-dns-to-propagate, early in the hook.\n\nBut when invoking the script, at the initial invocation, 4 params are passed,\n\n```\n1: deploy_challenge\n2: example.com\n3: 5gA...\n4: GpU...\n```\n\nwith ONLY the main domain available at this stage.\n\nHow can I get the full list of domain+altnames from letsencrypt.sh into my hook, on 1st call?\n\nThe info's there, as sign_domain() call's parsing the names ...\n\nDo I have to separately/manually replicate the parse in my hook.sh -- dealing with either \"--domain ...\" or 'domains.txt' ?\n use HOOK_CHAIN, see https://github.com/lukas2511/letsencrypt.sh/blob/master/docs/hook_chain.md\n Great, thx.\n\nWith\n\n```\n./config.sh\n    ...\n+   HOOK_CHAIN=\"yes\"\n    ...\n```\n\nThe args passed to 'hook.sh' now take the Y*X parameters form,\n\n```\ndeploy_challenge example.com 36D... V9F... www.example.com 7-V... dTn...\n```\n\nover which I need to parse/iterate.\n\nThe docs/example point out\n\n```\n...\n# Program or function called in certain situations\n#\n# After generating the challenge-response, or after failed challenge (in this case altname is empty)\n# Given arguments: clean_challenge|deploy_challenge altname token-filename token-content\n#\n# After successfully signing certificate\n# Given arguments: deploy_cert domain path/to/privkey.pem path/to/cert.pem path/to/fullchain.pem\n#\n# BASEDIR and WELLKNOWN variables are exported and can be used in an external program\n# default: <unset>\n#HOOK=\n\n# Chain clean_challenge|deploy_challenge arguments together into one hook call per certificate (default: no)\n#HOOK_CHAIN=\"no\"\n...\n```\n\nExtrapolating, in the hook chain case, the return\n\n```\ndeploy_challenge example.com 36D... V9F... www.example.com 7-V... dTn...\n```\n\nis\n\n```\ndeploy_challenge main_domain1 token-filename1 token-content1 altname2 token-filename2 token-content2\n```\n\nIs that correct?  And, more importantly, is that stable/unchanging syntax (def'd by acme)?\n @lukas2511 I know, but haven't seen, that upstream's working on DNS-01 auth code (still in beta?).\n\nI assume that acme server, at some point in the procedure ACKs/returns the domain&alt-names, as well as the challenge tokens.\n\nAfaYk, is that format defined/stable?  If so, then possibly adopting it here would be helpful.\n\nIf not, of course, then we just deal with it here.\n  My domains currently parked at namecheap name server. I wanna to use DNS-01 challenge to renew certificate. However, i see no namecheap support in the hook list. What else I can do to have automatic operation? \n @556556bt  https://github.com/samtombson/letsencrypt/blob/master/namecheap_dns_api_hook.sh\n Thanks, are you willing to add this to the [DNS hook list](https://github.com/lukas2511/letsencrypt.sh/wiki/Examples-for-DNS-01-hooks), @samtombson ?\n @bviktor Sure, I willing.\n  I'm working on DNS auth with latest letsenctypt.sh git src,\n\n```\ngit log | head\n    commit a7c6af689538719fbe23c5a18a1cc974ccd03bb2\n    Author: Lukas Schauer <lukas@schauer.so>\n    Date:   Wed Apr 27 23:24:45 2016 +0200\n\n        removed donation button\n\n    commit 1ad2f8743dbbbc1ab75eb6b81b487cbf88dc4862\n    Merge: adef407 c9c430b\n    Author: Lukas Schauer <lukas2511@users.noreply.github.com>\n    Date:   Tue Apr 26 22:02:43 2016 +0200\n```\n\nI exec the script\n\n```\nletsencrypt.sh -c \\\n--config ./config.sh \\\n--challenge dns-01 \\\n--algo prime256v1 \\\n--hook ./hook.sh \\\n--domain \"example.com\"\n```\n\nwhich returns\n\n```\n...\n+ Responding to challenge for example.com...\nERROR: Challenge is invalid! (returned: invalid) (result: {\"type\":\"dns-01\",\"status\":\"invalid\",\"error\":{\"type\":\"urn:acme:error:unauthorized\",\"detail\":\"Correct value not found for DNS challenge\"},\"uri\":\"https://acme-staging.api.letsencrypt.org/acme/challenge/EY0...llU/5505446\",\"token\":\"g2r...avQ\",\"keyAuthorization\":\"g2r...avQ.Ytm...EUY\"})\n```\n\nMy hook script adds/updates the appropriate TXT record to my local/hidden primary DNS during the script exec, which in-turn notifies the secondary, and then in ~ 1-3 minutes, it propagates out to the main public servers.  E.g., aftere ~ 3 mins\n\n```\ndig TXT _acme-challenge.example.com @8.8.8.8 | grep ANSWER -A1\n    ;; ANSWER SECTION:\n    _acme-challenge.example.com. 4   IN      TXT     \"b-M...MYY\"\n```\n\nThe le.sh dns doc says\n\n```\n...\nThat could be done manually (as most providers don't have a DNS API), by having your hook script echo $1, $2 and $4 and then wait (read -s -r -e < /dev/tty) - give it a little time to get into their DNS system. Usually providers give you a boxes to put \"_acme-challenge.my\" and the token value in, and a dropdown to choose the record type, TXT. \n...\n```\n\nIf the problem here^ is a timing issue, I'm unclear on what's watched,\n\n```\n\" ... then wait (read -s -r -e < /dev/tty) - give it a little time to get into their DNS system ...\"\n```\n\n_IS_ the prob here that I need to 'wait'? Or is there a prob in the code itself?  I'm guessing PEBKAC; would appreciate any hints.\n  This the the json that came back from LE: \n\n{\"type\":\"http-01\",\"status\":\"pending\",\"uri\":\"https://acme-v01.api.letsencrypt.org/acme/challenge/7ftGAV2gxxWnohIAl_Aq60JWZOSNhuR_4rQH5bRpUEA/74809467\",\"token\":\"bDZxoGLIuz28jHDH0Ga5nDQ-erAKfXdUW9WWKeWLSd8\",\"keyAuthorization\":\"bDZxoGLIuz28jHDH0Ga5nDQ-erAKfXdUW9WWKeWLSd8.e5FZjrnwb1SZURXTovcByAXqtydN8vSfcQLBNTs0yiM\"}\n\nThe script says invalid : \n- Challenge is invalid! (returned: invalid)\n\nBut it's not invalid, it's just stuck on LE's side ( we have an issue open there for the domain in question )\n  barebones python script, gets the cert saved locally and uploads it to IAM, but doesn't do much of anything else yet.\n\nusage:\n\n```\nR53_ZONEID=Z5BBG5FOEEBBH ./letsencrypt.sh -d api.example.com -c --hook ./hook.py --challenge dns-01\n```\n  It would be nice to be able to put comments in the domains.txt file. For example if some domain needs a note or something, or to quickly disable a domain by commenting it out and not having to entirely remove it from the file.\n Oh. I didn't try it because I didn't saw that mentioned, and from a quick glance at the script I didn't think it was possible, that's what I get for making assumptions. ;)\n\nThank you.\n  Hello,\n\nletsencrypt.sh creates a private_key.json file.\nWhile reading the code, it seems that this file is only written and not read.\n\nIt would be cleaner to not output the file.\n  Thanks for the awesome library. I'd like to be able to force-renew just one cert from the `domains.txt` file. Is it possible to add an optional parameter to the `--force` option to accomplish this?\n\nFor example, if `domains.txt` contains:\n\n```\nexample.com www.example.com m.example.com\ntest.net www.test.net\n```\n\nit would be nice if `./letsencrypt.sh --force test.net` would cause only the `test.net` cert to renew (assuming the `example.com` cert doesn't otherwise need to be renewed).\n\nIf an optional parameter isn't possible, perhaps a new option like `--force-domain`?\n\nI'm not an expert with bash but I'd be happy to give this a try and submit a PR if this is something you'd consider merging.\n I understand, and thanks for showing the proper usage of the `-d` option.\n\nI ended up solving this before your reply by just deleting the `certs/domain.tld` directory for the cert I needed to force-renew and then running `letsencrypt.sh -c` again. (I needed to renew a certificate that was issued before Let's Encrypt fixed the issue that was causing certs not to work on any browser in Windows XP.) And you're right, this was an edge case.\n  I spent a few hours fiddling with an invalid challenge, because I had assumed the acme-challenge part was added automatically. This change should help future users not make the same mistake.\n I haven't had a problem, but I figured it's best not to be ambiguous. If you put a trailing slash it would just write to /the/path//challengefile , which in Linux doesn't matter, but it's best not to have to guess anything imo.\n Good catch. done.\n  Just a recommendation:\n\nthe use of the term \"PRIVATE_KEY\" is overloaded; change to ACCOUNT_KEY where appropriate, avoid confusion with privkey, PRIVATE_KEY_RENEW, and the like\n How about also changing the default filenames private_key.json/pem to account_key.json/pem while at it?\n  Running \n\n /usr/local/sbin/letsencrypt.sh --cron --domain some.do   --challenge http-01  --config .letsencrypt/config.sh\n INFO: Using main config file .letsencrypt/config.sh\nProcessing  some.do\n- Checking domain name(s) of existing cert... unchanged.\n- Checking expire date of existing cert...\n- Valid till Jun 27 10:11:00 2016 GMT (Longer than 14 days). Skipping renew!\n\nWhile  I run \n\n/usr/local/sbin/letsencrypt.sh --revoke certs/some.do/fullchain-1459249840.pem  --domain some.do --challenge http-01 --config .letsencrypt/config.sh \n INFO: Using main config file  .letsencrypt/config.sh \nRevoking certs/some.do/fullchain-1459249840.pem\n- Done.\n- Renaming certificate to    certs/some.do/fullchain-1459249840.pem-revoked\n\nand of course then\n\n/usr/local/sbin/letsencrypt.sh --revoke certs/some.do/fullchain-1459249840.pem-revoked  --domain some.do --challenge http-01 --config .letsencrypt/config.sh \nRevoking certs/domain.do/fullchain-1459249840.pem-revoked\n- ERROR: An error occurred while sending post-request to https://acme-v01.api.letsencrypt.org/acme/revoke-cert (Status 409)\n\nDetails:\n{\"type\":\"urn:acme:error:malformed\",\"detail\":\"Certificate already revoked\",\"status\":409}\n\n.letsencrypt/config.sh contains \n\nBASEDIR=/location/some.do\nWELLKNOWN=\"${BASEDIR}/.well-known/acme-challenge\"\nPRIVATE_KEY=\"${BASEDIR}/.letsencrypt/private_key.pem\"\n\netc.\n\nHow come the site certificate is listed as revoked but I can not get new one because  it valid  until Jun 27?\n  Hi,\n\nI'm currently running into the issue when trying to validate a domain + multiple subdomains.\nThe script tries to validate the acme challenge file under:\n\nWELLKNOWN=\"${BASEDIR}/public_html/.acme-challenge\"\n\nWhich is the challenge directory in the website root. This works for validating example.com & www.example.com, but it doesn't work for subdomain.example.com\n\nThis subdomain is located under /public_html/subdomain/\n\nIs it possible to set up multiple WELLKNOWN paths for the different subdomains I'm trying to validate?\n\nOne of the docs recommends to set up an alias but I'm unable to modify the apache config file. Modifying this file is restricted on the server I'm running this website on.\nhttps://github.com/lukas2511/letsencrypt.sh/blob/master/docs/wellknown.md\n Thank you!\n  These files can be used as described in the README for using letsencrypt.sh on QNAP devices. Tested and working for both HTTP and DNS validation.\n Well the point you're missing is that with these scripts it will work \"out of the box\" on QNAP devices. No, there's no magic features there, but it was a platform support option.\n  With the latest version I started receiving this error on OSX:\n\n`./bin/le: line 27: @: unbound variable`\n\nThat line would be this:\n\n```\n_mktemp() {\n  mktemp -t letsencrypt.sh-XXXXXX \"${@}\"\n}\n```\n\nAny idea what this might be?\n Installed newer version of bash from homebrew and this is fixed but the default osx version is not compatible I guess.\n Fixed, thanks!\n  This pull request adds an example how to convert the generatet certs and key to a java keystore used by jetty and wildfly service hosts. \n  What's the right way to renew certificates that are created via the _-d_ command line parameter?\nCron only takes the certs that are listed in domains.txt or am I missing something? \n\nWouldn't it make sense to add them to domains.txt, when they are created? Is this a an intented behaviour and why? \n\nIs there another way to renew _all_ my certs without touching them one by one, when they are not listed in domains.txt?\n Do you really want an action commandline to also implicitly edit the permanent config? I think it would make more sense to separate those. \n Perhaps you could write a script to create a domains.txt based on the certs in the `certs` directory. Then use it something like:\n\n``` bash\n$ ./build-domains ./domains.txt /path/to/certs/ && ./letsencrypt.sh\n```\n\nI personally like having the domains.txt file, because that serves as what's _supposed_ to be in the `certs` directory. It's the canonical reference of the certs I want letsencrypt.sh to manage.\n the only tricky part will be digging up the aliases out of each cert, This is from the source:\n\n`certnames=\"$(openssl x509 -in \"${cert}\" -text -noout | grep DNS: | _sed 's/DNS://g' | tr -d ' ' | tr ',' '\\n' | sort -u | tr '\\n' ' ' | _sed 's/ $//')\"`\n I use the script with a wrapper script (https://github.com/chrisb86/ngineerx) that creates servers in nginx and php-fpm and creates certs for them. Without looking at the source a few days ago I haven't realized that the created certs will not be renewed because they are not listed in domains.txt.\n\nI can't think about a use case where \"temporary\" certs are useful. When I create them, I also want to renew them. I don't want to ditch domains.txt but think, that certs that are created with the command line parameters should also be added to domains.txt because I can't find a good reason why not.\n\nI could modify my script to add my domains to domain.txt after creating the cert but in my oppinion this functionality should be in letsencrypt.sh itself. I would add the domains by default but would also be satisfied with a new command line switch if anybody can name any reasons why someone would create certs witch are not included there.\n I'd vote to have a separate command line switch, as I don't like the idea of a script modifying a config file it usually reads from without a clear indication of intent.\n\nHowever, I think it'd be fine to modify with a switch, which would basically be a \"get me this cert and put it in my list of certs to renew automatically.\"\n Exactly. My flow is also to first add it to the domains.text (by vim/ansible/puppet/chef) then run with -c. plus a monthly -c cron job. It's never going to force-create certs that are newer than 59 days (my settings) so I'm not worried I'll ever bug LE too much with my request rate.\n  For Debian-based systems, it would be really nice to have a .deb package that's installable in a standard manner. This PR includes the files necessary to build a .deb package. Note that a new file has been added: docs/examples/config.sh.debian. This config file includes defaults suitable for the Debian filesystem layout. Otherwise, it mirrors what is used by the vanilla docs/examples/config.sh.example.\n\nTo try this out, run `debuild -us -uc` on a Debian or Ubuntu box, then `dpkg -i ../letsencryptsh_0.1.1_all.deb` to install it.\n\nIf/when this PR is accepted, we should find a place to host the build package as an APT repository. I can take care of it if @lukas2511 does not have experience with this. We'd also need to update the README.md file with Debian/Ubuntu-specific instructions.\n @ipartola It's still a good initiative though. May I suggest a PPA on Launchpad? I'll be happy to subscribe.\n I have no problem with hosting it myself. I just need some way to get notified of new releases. I will probably not host it on LaunchPad, since their build mechanism is annoying, but I have a pretty simple way of doing it on S3. I'll also look into getting this packaged for Debian directly, though I am not a Debian maintainer so I cannot say how easy that would be.\n Just a cronjob that runs git pull every 6-12 hours, and if there's new stuff, a git hook will build and upload. It's as simple as that, done it before. I wish github would allow one to be alerted of updates to a branch, Or have I missed this?\n Hmm. Some automated testing would be needed to ensure it doesn't break. Not just testing of the script itself, but that things like config files didn't change in a way that would break the Debian installation, etc. As you can see in my pull request, I had to add a config.sh.debian with defaults suitable for a Debian filesystem layout. I could certainly maintain my own set of patches that get applied on top of the upstream release, but I'd need to write additional tests to be able to do so automatically.\n\nI will see what I can do. Another approach is to get letsencrypt.sh into the official Debian repositories. That would be my preferred method, as there are currently no other decent LE clients that come with Debian/Ubuntu, and this is a critical piece of infrastructure that should be there. I'll explore this option as well.\n Has there been any progress on this? I'm a Debian Developer and would gladly work with someone to get letsencrypt.sh into Debian.\n\nI see someone has already started work as part of https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=812174 - is this related to what's going on here?\n\nThanks,\nChris\n @bootc I'd love to work with you on this. I started looking into how to get a sponsor for this. That bug report is not related, I did the packaging on my own as a native package so far. Seems like I should re-package it as a regular package with external sources and add my patches (a Makefile and a separate config.sh that is Debian-specific). Personally, I'd love to use this as an opportunity to start getting various things packaged for Debian.\n\nWhat is the best way to proceed? Discuss on this ticket? Take the discussion to debian-metors? Email you privately?\n FWIW: letsencrypt.sh is [available in Debian](https://packages.debian.org/letsencrypt.sh). It is packaged using `git buildpackage` and it's packaging git repository can be found at: https://anonscm.debian.org/git/letsencrypt/letsencrypt.sh.git/\n    Hi,\n\nas I unterstood, if I declare a CONTACT_EMAIL, then it should be in the certs?! If yes, in my certs the email doesn't appear. What's wrong?\n\nThank you,\nPatrick\n\nPS: I love your script, easy to use and fully working (except the email thing...)\n Hi,\n\nthe CONTACT_EMAIL is used for registration with the ACME server. It is used by Let's Encrypt to inform you about expiring certificates.\n\nCheers,\n\nLukas\n  LE JSON objects contain the real error message, which is important to fix the issue.\nUnfortunatly the script does only output a generalized error msg.\n\nany time i need to know th e real reason, i have to use \"strace -s 1024 -e read  -f \" to see the json result coming from the LE Server :=)\n\nRequest: add an override option for/or output the LE error msg directly\n  I'm trying to use letsencrypt.sh to generate a single certificate for a number of domains (e.g.\n`example.org`, `mail.example.org`, `imap.example.org`).\n\nMy DNS provider doesn't have an API - instead I have to upload text files with the DNS records and these get pushed out to the nameservers within 20 minutes. I can automate the process of creating the relevant TXT records from the information provided to my hook script (as `$ARGV[4]`) but the issue is that I have to wait 20 minutes after a `deploy_challenge` action to ensure that the records will definitely be on all the nameservers. This isn't a problem for one domain, but becomes a bit of a pain when I'm trying to generate a certificate for multiple domains.\n\nAt the moment I'm using the following command:\n\n`./letsencrypt.sh --hook ./hook.pl --challenge dns-01`\n\nwhich results in `hook.pl` being called as follows:\n\n```\nforeach (domain in domains)\n  deploy_challenge domain\n  clean_challenge domain\n```\n\nHowever, I want to process all the `deploy_challenge` actions first and then process all the `clean_challenge` actions, like so:\n\n```\nforeach (domain in domains)\n  deploy_challenge domain\n\nforeach (domain in domains)\n  clean_challenge domain\n```\n\nIs this possible?\n You might want to try setting `HOOK_CHAIN=\"yes\"` in your config.sh and then have your hooks loop over groups of arguments. Each hook will be called only once with arguments for all domains together rather than 1 call per domain.\n\nI've been using this option just fine to deploy all DNS challenges and ensure propagation automatically before proceeding to validate all and then clean all.\n  After getting perfect san certifivates from the stating CA I've tried to switch to the letsencrypt productive area.\nUnfortunately I'got a:\n ERROR: An error occurred while sending post-request to https://acme-v01.api.letsencrypt.org/acme/new-authz (Status 403)\nfollowed by:\nDetails:\n{\"type\":\"urn:acme:error:unauthorized\",\"detail\":\"No registration exists matching provided key\",\"status\":403}\n\nAny idea is welcome - couldn't find any help at google...\n\nregards\n Hm\u2026\nHow to do that?\n\nI\u2019ve got a valid certificate for the domain by the ACMESharp scripts for windows. Therefor I\u2019ve thougt is has something to do with this already created registration.\nUnfortunately same thing happens with an other never used togehter with letsencrypt domain.\n\nSo, please can you tell me which key ist to delete and how?\n\nregards\n\nVon: Lukas Schauer [mailto:notifications@github.com]\nGesendet: Samstag, 12. M\u00e4rz 2016 23:40\nAn: lukas2511/letsencrypt.sh letsencrypt.sh@noreply.github.com\nCc: Robert Schuster robert.schuster@compulab-consult.de\nBetreff: Re: [letsencrypt.sh] unauthorized error (#166)\n\nClosed #166https://github.com/lukas2511/letsencrypt.sh/issues/166.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/lukas2511/letsencrypt.sh/issues/166#event-587559280.\n just stupid \u2013 or it was too late\u2026\nI was always looking for keys at the certs directory \u2013 deleting the private_key.pem from the base-dir it worked perfectely.\n\nVon: Lukas Schauer [mailto:notifications@github.com]\nGesendet: Samstag, 12. M\u00e4rz 2016 23:40\nAn: lukas2511/letsencrypt.sh letsencrypt.sh@noreply.github.com\nCc: Robert Schuster robert.schuster@compulab-consult.de\nBetreff: Re: [letsencrypt.sh] unauthorized error (#166)\n\nClosed #166https://github.com/lukas2511/letsencrypt.sh/issues/166.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/lukas2511/letsencrypt.sh/issues/166#event-587559280.\n Would it be an idea to store the key in `private_key-$HASH_OF_CA_URL.json` instead of in `private_key.json`? That would resolve this confusing behavior.\n  Fixes #164.\n\nChange some calls from `grep -o` to `sed`. These changes have been tested on SmartOS in the GZ, SmartOS in a zone with pkgsrc, Mac OS X and Linux (Ubuntu 14.04).\n\nThis allows `letsencrypt.sh` to be used from the global zone on SmartOS without requiring bootstrapping pkgsrc or installing additional tools.\n Rebased from master, and it looks like the CI build failed due to a transient error (502 response from web server on the challenge check).\n\nRunning `test.sh` in a test container of my own passes all checks.\n\n```\nroot@1abbc92ab4a9:/letsencrypt.sh# git reset --hard; ./test.sh\nHEAD is now at 014e116 Use of 'grep -o' doesn't work on SunOS (fixes #164)\n--2016-03-11 01:03:46--  https://dl.ngrok.com/ngrok_2.0.19_linux_amd64.zip\nResolving dl.ngrok.com (dl.ngrok.com)... 45.33.127.226\nConnecting to dl.ngrok.com (dl.ngrok.com)|45.33.127.226|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 4021793 (3.8M) [application/zip]\nSaving to: 'ngrok.zip'\n\n100%[========================================================================================================================================>] 4,021,793   12.5MB/s   in 0.3s   \n\n2016-03-11 01:03:47 (12.5 MB/s) - 'ngrok.zip' saved [4021793/4021793]\n\nArchive:  ngrok.zip\n  inflating: ngrok                   \n\nChecking if help command is working... \n + Checking if log contains 'Default command: help'... [PASS]\n + Checking if log contains '--help (-h)'... [PASS]\n + Checking if log contains '--domain (-d) domain.tld'... [PASS]\n + Checking if errorlog is empty... [PASS]\n\nFirst run in cron mode, checking if private key is generated and registered \n + Checking if log contains 'Registering account key'... [PASS]\n + Checking if file 'private_key.pem' exists... [PASS]\n + Checking if errorlog is empty... [PASS]\n\nTry signing using temporary config location and with domain as command line parameter \n + Checking if log doesn't contain 'Checking domain name(s) of existing cert'... [PASS]\n + Checking if log contains 'Generating private key'... [PASS]\n + Checking if log contains 'Requesting challenge for d9b5f6db.ngrok.io'... [PASS]\n + Checking if log contains 'Requesting challenge for a13d2b94.ngrok.io'... [PASS]\n + Checking if log contains 'Challenge is valid!'... [PASS]\n + Checking if log contains 'Creating fullchain.pem'... [PASS]\n + Checking if log contains 'Done!'... [PASS]\n + Checking if errorlog is empty... [PASS]\n\nRun in cron mode again, this time adding third domain, should force renewal. \n + Checking if log contains 'Domain name(s) are not matching!'... [PASS]\n + Checking if log contains 'Forcing renew.'... [PASS]\n + Checking if log contains 'Requesting challenge for d9b5f6db.ngrok.io'... [PASS]\n + Checking if log contains 'Requesting challenge for a13d2b94.ngrok.io'... [PASS]\n + Checking if log contains 'Requesting challenge for 18154e1a.ngrok.io'... [PASS]\n + Checking if log contains 'Challenge is valid!'... [PASS]\n + Checking if log contains 'Creating fullchain.pem'... [PASS]\n + Checking if log contains 'Done!'... [PASS]\n + Checking if errorlog is empty... [PASS]\n\nRun in cron mode again, this time with domain in domains.txt, should find non-expiring certificate \n + Checking if log contains 'Checking domain name(s) of existing cert... unchanged.'... [PASS]\n + Checking if log contains 'Skipping!'... [PASS]\n + Checking if errorlog is empty... [PASS]\n\nRun in cron mode one last time, with domain in domains.txt and force-resign \n + Checking if log contains 'Checking domain name(s) of existing cert... unchanged.'... [PASS]\n + Checking if log contains 'Ignoring because renew was forced!'... [PASS]\n + Checking if log doesn't contain 'Generating private key'... [PASS]\n + Checking if log contains 'Requesting challenge for d9b5f6db.ngrok.io'... [PASS]\n + Checking if log contains 'Requesting challenge for a13d2b94.ngrok.io'... [PASS]\n + Checking if log contains 'Requesting challenge for 18154e1a.ngrok.io'... [PASS]\n + Checking if log contains 'Challenge is valid!'... [PASS]\n + Checking if log contains 'Creating fullchain.pem'... [PASS]\n + Checking if log contains 'Done!'... [PASS]\n + Checking if errorlog is empty... [PASS]\n\nRunning signcsr command \n + Checking if log contains 'BEGIN CERTIFICATE'... [PASS]\n + Checking if log contains 'END CERTIFICATE'... [PASS]\n + Checking if log doesn't contain 'ERROR'... [PASS]\n\nRun in cron mode again, to check if renewal works \n + Checking if log contains 'Checking domain name(s) of existing cert... unchanged.'... [PASS]\n + Checking if log contains 'Renewing!'... [PASS]\n + Checking if errorlog is empty... [PASS]\n\nVerifying certificate... \n + Verifying certificate on its own... [PASS]\n + Checking if log contains 'CN=d9b5f6db.ngrok.io'... [PASS]\n + Checking if log contains 'a13d2b94.ngrok.io'... [PASS]\n + Verifying file with full chain... [PASS]\n + Verifying certificate against CA certificate... [PASS]\n + Checking if errorlog is empty... [PASS]\n\nRevoking certificate... \n + Checking if log contains 'Revoking certs/d9b5f6db.ngrok.io/cert-1457658322.pem'... [PASS]\n + Checking if log contains 'Done.'... [PASS]\n + Checking if file 'certs/d9b5f6db.ngrok.io/cert-1457658322.pem-revoked' exists... [PASS]\n + Checking if errorlog is empty... [PASS]\n\nCleaning up certificates \n + Checking if log contains 'Moving unused file to archive directory: d9b5f6db.ngrok.io/cert-'... [PASS]\n + Checking if log contains 'Moving unused file to archive directory: d9b5f6db.ngrok.io/chain-'... [PASS]\n + Checking if log contains 'Moving unused file to archive directory: d9b5f6db.ngrok.io/fullchain-'... [PASS]\n + Checking if errorlog is empty... [PASS]\n```\n Ah, good catch. I'm pretty sure I can fix that. I'll have an update later today.\n Ok, I've fixed those by using `sed -n`. Using your examples:\n\n```\nbash-3.2$ echo '\"bla\":\"test\",\"challenges\":[]' | sed -n 's/.*\\(\"challenges\":[^\\[]*\\[[^]]*]\\).*/\\1/'\nbash-3.2$ echo '\"bla\":\"test\",\"nochallengesforyou\":[]' | sed -n 's/.*\\(\"challenges\":[^\\[]*\\[[^]]*]\\).*/\\1/'\nbash-3.2$ echo '\"foo\":\"bar\"' | sed -n 's/.*\"foo\": *\"\\([^\"]*\\)\".*/\\1/'\nbash-3.2$ echo '\"nofoo\":\"bar\"' | sed -n 's/.*\"foo\": *\"\\([^\"]*\\)\".*/\\1/'\nbash-3.2$ \n```\n\nI get the same results on Linux, Mac OS X and SmartOS.\n\nAnd I think the CI tests failure, is again a transient error. The test suite passes when using my test container (as above).\n Yep, you're right, I did forget that. Fixed up now.\n  This is similar to #2 . I am testing against own instance of boulder running at 192.168.95.14:4000. When I run `letsencrypt.sh -c` for the first time, I got an error:\n\n```\n  + ERROR: An error occurred while sending post-request to http://192.168.95.14:4000/acme/new-reg (Status 400)\n\nDetails:\n{\"type\":\"urn:acme:error:malformed\",\"detail\":\"Provided agreement URL [https://letsencrypt.org/documents/LE-SA-v1.0.1-July-27-2015.pdf] does not match current agreement URL [http://192.168.95.14:4001/terms/v1]\",\"status\":400} \n```\n\nAfter I changed the config.sh to set LICENSE to point to the test server and run letsencrypt.sh -c, I got\n\n```\n  + ERROR: An error occurred while sending post-request to http://192.168.95.14:4000/acme/new-authz (Status 403)\n\nDetails:\n{\"type\":\"urn:acme:error:unauthorized\",\"detail\":\"No registration exists matching provided key\",\"status\":403}\n```\n\nThat is, there were no attempts to try to register again after the previous failed attempt. To recover I had to delete `private_key.pem`. \n  In certain environments a server cannot get HTTP[S] directly but only via a http_proxy. Would be nice to have a proxy seetting in /etc/letsencrypt.sh/config.sh for curl to use it :)\n I agree, that's the way I did it, altho it'd have been nice to have it configurable in the config :_)\n  Hi,\n\nyour script seems very well maintained and I'm against duplicating efforts so I'd like to eliminate the need for my own LE renewal script.\n\nI think we agree that automating SSL renewals without actually checking if they succeed or not is pretty brave. For this reason it's essential to have email notifications for every renewal event.\n\nI'd love to open a PR but your script is rather extensive and unfortunately I don't have the capacity to analyze it and test things out ATM.\n\nSo in hopes that it'll be helpful, here's my script:\n\nhttps://github.com/bviktor/le-renew\n\nI'd like to add some quick pointers to make it easier. You shall add to `config.sh`:\n\n```\n#RCPT=${CONTACT_EMAIL}\nSMTP_HOST=\nSMTP_SENDER=\nSMTP_USER= # this is not necessarily the best choice of words, because this includes the password as well\n```\n\nAnd for the script itself, the following:\n- A temp mail file that's deleted before each run (`$MAIL_FILE` in my script)\n- `mail_header ()`\n- `mail_footer ()`\n- `mail_echo ()`\n- `check_cert ()`\n\nThen\n\n```\ncheck_cert\nmail_echo <result: failure or success>\nmail_echo <if failure, error message as well>\n```\n\nfor every domain, and\n\n```\nmail_footer\ncurl ${CURL_FLAGS} --ssl-reqd --mail-from ${SMTP_SENDER} --mail-rcpt ${RCPT} --user ${SMTP_USER} --upload-file ${MAIL_FILE} --url ${SMTP_HOST}\n```\n\nto every exit point (`finish ()` in my script).\n\nI'm not a big fan of HTML emails, but for these alerts it's very-very useful to make failures easy to spot. Screenshots:\n\n---\n\n<img src=\"http://imgur.com/rgdPu5U.png\" />\n\n---\n\n<img src=\"http://imgur.com/R1NzZY7.png\" />\n\n---\n\nAlso, there's room for improvement, because SMTPS should be optional IMO. Not because I'm against security, but because some people may use an intranet SMTP relay, in which case SSL is unnecessary. E.g.\n\n```\nif [ ${SMTP_SSL} -eq 1 ]\nthen\n    CURL_FLAGS=\"${CURL_FLAGS} --ssl-reqd\"\nfi\n```\n\nLooking forward to your opinion, thanks.\n I'd like as well to have the email option, but by external hooks is the best way. KISS!\n I'd like to point out that the script should send emails upon success as well, because if you only send mails upon failure and you don't receive an email, that could mean 2 things:\n\na) the renewal succeeded\nb) both the renewal **and** email sending failed\n\nIf you send emails **both** upon success and failure, it's clear that's something's going on when you don't receive an email.\n So um, is this supposed to be a deploy_cert hook?\n Is there a way for the hook to query the path of the resulting cert or should I just use `/etc/letsencrypt/live/$DOMAIN_NAME/cert.pem` ?\n I'm a bit confused. For $3 this says\n\n```\nFor DNS validation, this is what you want to put in the _acme-challenge TXT record.\n```\n\nand there's no $4 at all.\n\nOTOH dns-verification.md says:\n\n```\n$3 is a \"challenge token\" (which is not needed for dns-01), and $4 is a token which needs to be inserted in a TXT record for the domain\n```\n\nWhich one is right? :) Or am I missing something here?\n Nevermind, I'm dumb, sorry :)\n  In my scenario, where I automate certificate-issuance through the `letsencrypt.sh`-client, I need to also have a hook for all certificates, of which the domains haven't changed and which are still valid.\n\nI tried to integrate this functionality, as I think more people could benefit from this feature.\nAs far as I am concerned, it works as expected.\n\nI'd greatly appreciate if you could merge this pull-request.\n\nThanks,\n\nLeon\n Ok, I've changed the message to just say `Skipping renew!`.\n   see https://github.com/lukas2511/letsencrypt.sh/issues/129\n Just one minor comment: I think you should update the `hook.sh.example` file inline with the commit above to show that `deploy_cert` now takes an additional timestamp argument. I just got bitten by this, writing a hook script with `deploy_cert` expecting 5 arguments, when 6 was required. Great software though!\n  Just as the title says.\n\nThe strange construct with wait is because with a regular ( ) subshell set -e does not propagate, causing the script to misbehave.\n\nAlso adds some newlines to the error function, to make the output more readable in case of errors in keep-going mode.\n I am for some keep going options too. We have hundreds of domains. I hate when some domain can end program, because challenge is invalid.\nWe need continue checking rest of domains.\n  Because of the plain amount of sub-domains I am using I keep running into the rate-limit a lot of the times.\nA lot of the other domains would still renew successfully, but the script in --cron mode aborts after the first cert fails to renew.\n\nIt would be extremely useful to have an option to make it continue with the other certs if one of them fails.\n the \"keep going\" features is required for many real world situations. \n- a domain does no longer point to the server which created the cert.\n  the script does not know this, so it tries to renew the cert, which fails and it stops => no renew for the other domainnames.\n\nSolution: \n1) enable dns checks for the domainnames, where the IN A has to point to an ip in the output of \"ip addr\" .\n2) enable a admin notification emailadress to get an email if a fail on the creation or renew of a cert happens.\n3) keep going with the next cert.\n4) keep track of the amount of fails, incase LE has a failrate limit.\n\nLets be honest, your script is now in use by a lot of hosters, as it's the only easy to integrate solution on the market. You properbly will get a lot a those stability request in the near future.\n  I have a problem signing certificate using live CA, stage CA works. \n- Signing domains...\n- Generating private key...\n- Generating signing request...\n- Requesting challenge for xxxxxxxxxxxxxxxxxxx...\n  - ERROR: An error occurred while sending post-request to https://acme-v01.api.letsencrypt.org/acme/new-authz (Status 403)\n\nDetails:\n{\"type\":\"urn:acme:error:unauthorized\",\"detail\":\"No registration exists matching provided key\",\"status\":403}root@proxy:~ # \n Also, I copied existing letsencrypt certificate from another server and tried to renew it using this client - I've got the same error.\n Sorry for being silly. I looked into code and deleted private_key.pem created for stage CA. Now it works.\n  As a nginx user I need both in the same file. It would be nice if I could just copy the whole script output to my certificate file instead of having to append the intermediate certificate manually\n ah, didn't know that, was always using `-s`\n I know I'm late to the party, but I object to this change.\n\nI've specifically written the `--signcsr` command (https://github.com/lukas2511/letsencrypt.sh/pull/95) to be as simple as possible, doing only what is strictly needed. That is: get a CSR signed. If you need the certificate chain, you can get it yourself. (As the commit shows, it's only a few lines).\nI need my Certificate chain in a separate file, and now I have to manually split the output again.\n\nOr at least, make it configurable to include the full chain or not.\n  In --cron mode letsencrypt.sh stops after creating the first non-existant certificate.\n\nSay domains.txt contains:\n\n```\ntest1.example.com\ntest2.example.com\ntest3.example.com\n```\n\nIf the test1 cert exists and hasn't expired, letsencrypt.sh creates a certificate for test2 and then just stops.\n\nTrace:\n\n```\n[...]\n+ [[ -n /home/letsencrypt/hooks/hook.py ]]\n+ /home/letsencrypt/hooks/hook.py deploy_cert test2.example.com /home/letsencrypt/certs/certs/test2.example.com/privkey.pem /home/letsencrypt/certs/certs/test2.example.com/cert.pem /home/letsencrypt/certs/certs/test2.example.com/fullchain.pem /home/letsencrypt/certs/certs/test2.example.com/chain.pem\n2016-02-19 22:39:32.062711: /home/letsencrypt/hooks/hook.py deploy_cert test2.example.com /home/letsencrypt/certs/certs/test2.example.com/privkey.pem /home/letsencrypt/certs/certs/test2.example.com/cert.pem /home/letsencrypt/certs/certs/test2.example.com/fullchain.pem /home/letsencrypt/certs/certs/test2.example.com/chain.pem\n+ unset challenge_token\n+ echo ' + Done!'\n + Done!\n+ read -r line\n+ [[ -n '' ]]\n+ exit 0\n+ remove_lock\n+ rm -f /home/letsencrypt/certs/lock\n```\n\nTested with revision 63a493765863a07f204e40d403d7fa5b5825c9ed\n\n> $ bash --version\n> GNU bash, version 4.3.11(1)-release (x86_64-pc-linux-gnu)\n Something consumes stdin when sign_domain is called.\nAs a result the DOMAINS_TXT loop has nothing to read anymore and exists after the first certificate has been signed.\n\nThe following patch fixes this bug for me but may be overly complicated (I'm not that fluent in shell code):\n\n``` diff\ndiff --git a/letsencrypt.sh b/letsencrypt.sh\nindex c60ea5b..4727307 100755\n--- a/letsencrypt.sh\n+++ b/letsencrypt.sh\n@@ -553,8 +553,13 @@ command_sign_domains() {\n     _exiterr \"domains.txt not found and --domain not given\"\n   fi\n\n+  DOMAINS_ARR=()\n+  while read -r line; do\n+    DOMAINS_ARR+=(\"${line}\")\n+  done < <(<\"${DOMAINS_TXT}\" _sed -e 's/^[[:space:]]*//g' -e 's/[[:space:]]*$//g' -e 's/[[:space:]]+/ /g' | (grep -vE '^(#|$)' || true))\n+\n   # Generate certificates for all domains found in domains.txt. Check if existing certificate are about to expire\n-  <\"${DOMAINS_TXT}\" _sed -e 's/^[[:space:]]*//g' -e 's/[[:space:]]*$//g' -e 's/[[:space:]]+/ /g' | (grep -vE '^(#|$)' || true) | while read -r line; do\n+  for line in \"${DOMAINS_ARR[@]}\"; do\n     domain=\"$(printf '%s\\n' \"${line}\" | cut -d' ' -f1)\"\n     morenames=\"$(printf '%s\\n' \"${line}\" | cut -s -d' ' -f2-)\"\n     cert=\"${BASEDIR}/certs/${domain}/cert.pem\"\n```\n Yes, works fine. Thanks!\n  Simple use-case: Call nginx/apache reload only once after all certificates was issued.\n :+1:\n\nThis seems like a good idea. Right now I reload my nginx in the `deploy_cert` function.\n @onovy Could you please add a few example lines in the hooks.sh.example file of _how_ one would copy / symlink the certs, and then reload nginx / apache?  It would really help noobs like myself for whom that isn't clear.  Thanks!\n Would definitely be great to have such a hook.\nCouldn't you just surround the paths with spaces?\n My idea was to include the quotes in the text file. I just don't know how easy it is to read that back from the file.\n +1\n Hey Lukas, \r\n\r\nSince I'm in very urgent need for this, I was wondering if we could have a talk and try to get this thing sorted out together? I'm willing to implement it, but would rather do it in a way that helps upstream as well. `DOMAIN_FILE` is not a good idea especially because of space delimited values. Basically you need to pass associative array , like this  http://pastebin.com/KaEnHqf0 . Bash 4+ has support of globally defined associative arrays so you could pass it as an argument.\r\n\r\nAnyway, why not use this final hook only for reloading webserver, while installing certificates in `deploy_cert()` ? Then you need to pass to it nothing.  is it possible to use ${DOMAIN} in the config.sh, for example for \n\n```\nCONTACT_EMAIL=admin@${DOMAIN}\n```\n\n?\n I see, thanks!\n  I would like to use libressl (from https://launchpad.net/~strukturag/+archive/ubuntu/libressl) instead of openssl for everything crypto related. Therefore it would be nice to be able to configure a custom `openssl` compatible binary through `config.sh`.\n Setting an `alias` in the config file works just fine. See https://wiki.freebsd.org/BernardSpil/LetsEncrypt#Domains_to_sign as well\n  i want to send some PullRequests for converting the whole script to POSIX sh.\nthis issue is just for collecting some questions and answers on this regarding style.\n Q: is there a good reason why your are alway using [[ -switch ... ]] instead of just [ -switch ... ] ? e.g.\n\n```\nif [[ ! \"${retcode}\" = \"0\" ]] &&\n```\n\ncan be converted to\n\n```\n[ $retcode -eq 0 ] || ...\n```\n Q: why are we always enclosing var with \"${var}\" even when it is unneeded? every texteditor does already highlight the variables.\n @lukas2511 i'am OK with using ${var} - it's just a style issue.\n @lukas2511 i understand the reason for \"[[\" but i'am not happy. is it OK for you when i convert them to single ones, \"[[\" is not defined in POSIX and this script is not about beeing very fast, but correct. (i fact most shells have 'test' aka '[' somehow builtin ...)\n ok, i will start to send small pullrequests...\n I have been [playing around](https://travis-ci.org/166MMX/letsencrypt.sh) with Travis CI and [ShellCheck](https://github.com/koalaman/shellcheck). Maybe it is some sort of help for you guys.\n\nI am new to Travis CI that's why I replaced the content of the yaml file. Not sure how to integrate that into your existing one though.\n  On FreeBSD bash is installed in `/usr/local/bin`; this patch alters the shebang to use `/usr/bin/env bash` instead, to ensure that the shell scripts work on (particularly) the *BSDs as well.\n though, why a shebang is needed at all in this file?\n\nthis is file is not even marked as executable, and it doesn't need to be as it is sourced by letsencrypt.sh, so why bothering with a shebang.\n\n@rumpelsepp would be ok for FreeBSD to just remove the shebeng?  In Debian we have an automated check that warns about a non-executable having a shebeng, and we are patching the line away.\n @mapreri Since we keep the shebang in the main script I guess it is okay to remove it.\n  Hi,\n\nI'm using this config to specify the path of my hook.sh script:\n\n`HOOK=\"${BASEDIR}/hook.sh\"`\n\nBut my BASEDIR starts with `/Volumes/Macintosh HD/Users`\nThere is a space in the pathname. Why not adding double quotes to the hook variable ${HOOK} in letsencrypt.sh?\nMy shell script knowledge ist not very well, but this solution works for me...\n\nKind regards,\nBenjamin\n Hi, this commit cusses hook script not to be loaded  ./letsencrypt.sh: line 410: python hooks/cloudflare/hook.py: No such file or directory, i manage to get it working by undoing all the change this commit dose by removed all the double quotes which was added.\n @lukas2511  Thanks that fixed it, i got letsencrypt.sh on a few server i coped the config file from one of my other server which must be running a letsencrypt.sh version before this commit.\n\nThank for the quick reply and helping me fix my issue\n Unfortunately this does not work for Java where you don't have a shebang.\n\n```\n./letsencrypt.sh: line 616: java -jar /opt/certzure/certzure.jar: No such file or directory\n```\n\nAny ideas how to solve this, other than creating a passthrough shell script? eval or subshell, maybe?\n The only other thing I can think of ATM is an additional, optional argument, \"hook interpreter\", that could contain \"sh\", \"python2.7\", \"java -jar\" or whatever. Opinions?\n Alright.\n  This fixes cases where `*.foo` expands to the string `*.foo` instead of an empty string if no matching files exist.\n\nI know this is a problem with my setup, but it would be nice if letsencrypt.sh could handle such cases gracefully ;-)\n\nError without the change (I have a `chain.pem` in `customfolder`):\n\n```\nMoving unused file to archive directory: customfolder/chain-*.pem\nmv: cannot stat '/path/to/customfolder/chain-*.pem': No such file or directory\n```\n Good point, I updated the pull request accordingly.\n Changed, thanks.\n  Works both on CentOS 6 and CentOS 7.\n  I found this other letsencrypt.sh project the other day: https://github.com/gheift/letsencrypt.sh\nIt handles the challenge-response mechanism quite nicely:\n\n``` nginx\nlocation ~ \"^/\\.well-known/acme-challenge/([-_a-zA-Z0-9]*)$\" {\n    default_type text/plain;\n    return 200 \"$1.ACCOUNT_THUMBPRINT\";\n}\n```\n\nReplace `ACCOUNT_THUMBPRINT` with the (public) thumbprint of the private key, and everything else happens automagically, without having to create any files (like this project does in `/var/www/letsencrypt`)\n\nAre there any downsides to doing it this way?\n Well, if an attacker gets hold of your private key you have much worse problems to consider.\n\"Identical thumbprint\" essentially means \"same key pair\", as the thumbprint is a SHA256 hash derived from the public key parts. A thumbprint hash collision with another key is so unlikely that the hash algorithm would be considered insecure. So not a problem at all.\n   @lukas2511 sorry this was a sort of typo. I meant to update my own git repo fork of this project, and the PR went in the wrong direction. \n  First of all thank you for your awesome software.\n\nIn my setup I am running into the problem that I have created a hook script which deploys the challenges to my master DNS server, but it takes a little while for the secondary to get the new data.\nOne option would be to wait for say 5 minutes in the hook script or to poll there until the secondary has the right data. But if this is done for multiple domains the job will last forever...\n\nIt would be nice if letsencrypt.sh sets all dns records via the hook script, then waits for a configurable amount of time and then tells letsencrypt to check the challenges. In this scenario the waiting time would only occure once which would be a significant imporovement.\n\nI am not quite shure if the acme protocoll allows such a time but i can not imagine how it should work otherwise.\n\nAnother option would be that letsencrypt.sh checks the nameservers on its own but i think that would be fairly complicated.\n I recognized the HOOK_CHAIN option but did not get its functionality or purpose from the docs. But this sounds like it is what I need to achive my goal. Some documentation on how this can be used would be very usefull. Thanks\n I tried the HOOK_CHAIN option and logged the arguments the hook got. It seems the right way for me, but if I am not mistaken to hook is called once for every certificate not once per every run. Therefore i would have to wait about 10 minutes per certificate instead of 10 minutes per run.\n  I had the problem that http_proxy env var was not set. Because of set -e curl terminated with != 0 and the whole script terminated without error message.\nSo I've added 2 checks in check_dependencies() if curl is able to reach letsencrypt.org via http and https.\nAnother problem could be the firewall (port 80 or 443 blocked), dns or routing.\n  Hi there, firstly thanks for letsencrypt.sh - it looks to be really useful in my testing so far.  One thing that would be very nice would be if you could indicate when a certificate has been renewed with a different exit value - that would enable me to automate things like restarting of apache, etc. without having to grep through the output from letsencrypt.sh.\n\nCheers\nToby\n My solution for this is to use a hook script. When the hook script is called with \"deploy_cert\" I know exactly which certificate is new and can do the correct stuff to activate the new cert.\n Ah, that is nice - thanks for that.\n  I'm trying to establish a hook which provides me with a key which could be used in HKPK headers.\nIn the next step I will try to automatically replace the part in the server config which adds the header.\n\nI'm on FreeBSD with the version of this script from the latest port update (0.0.0.20160116, 03.02.2016)\n\nThis is what I'm trying out at the moment.\n\nMy problem is that the script seems to not be able to be opened (?) I think:\n\n```\nletsencrypt.sh -c -d subdomain.example.com -x\n# INFO: Using config file /usr/local/etc/letsencrypt.sh/config.sh\nProcessing subdomain.example.com\n + Checking domain name(s) of existing cert... unchanged.\n + Checking expire date of existing cert...\n + Valid till May 10 13:07:00 2016 GMT (Longer than 30 days). Ignoring because renew was forced!\n + Signing domains...\n + Generating private key...\n + Generating signing request...\n + Requesting challenge for subdomain.example.com...\n/usr/local/bin/letsencrypt.sh: Zeile 335: /usr/local/etc/letsencrypt.sh/hooks.sh: Permission denied\n```\n\nmy `config.sh`\n\n```\nHOOK=\"${BASEDIR}/hooks.sh\"\n```\n\n(I already tried giving the hole path, that didn't work either\u2026)\n\n`hooks.sh`\n\n```\n#!/bin/bash\n\nfunction deploy_cert {\n    local DOMAIN=\"${1}\" KEYFILE=\"${2}\" CERTFILE=\"${3}\" CHAINFILE=\"${4}\"\n    hpkp=\"$(openssl rsa -in ${BASEDIR}/certs/${DOMAIN}/privkey.pem -outform der -pubout 2>/dev/null | openssl dgst -sha256 -binary | openssl enc -base64)\"\n  printf \"\\nHTTP Key Pinning\\n   pin-sha256=\\\"$hpkp\\\";\\n\"\n}\n\nHANDLER=$1; shift; $HANDLER $@\n```\n Check that /usr/local/etc/letsencrypt.sh/hooks.sh exists, is readable and executable e.g. permissions are 755, and the #! is set correct.\n I changed it to `#!/usr/local/bin/bash`but the problem persists.\nhooks.sh has the same permissions like config.sh and is in the same folder.\n\n```\ndrwxr-xr-x  2 root  wheel     6B 11 Feb 10:14 .acme-challenges\ndrwx------  7 root  wheel     7B 10 Feb 15:07 certs\n-rw-r--r--  1 root  wheel   2,5K 11 Feb 09:55 config.sh\n-rw-r--r--  1 root  wheel   2,5K  7 Feb 15:56 config.sh.example\n-rw-r--r--  1 root  wheel   184B 10 Feb 14:59 domains.txt\n-rw-r--r--  1 root  wheel    73B  7 Feb 15:56 domains.txt.example\n-rw-r--r--  1 root  wheel   2,1K 11 Feb 10:14 hooks.sh\n-rw-r--r--  1 root  wheel   1,9K 11 Feb 09:33 hooks.sh.example\n-rw-------  1 root  wheel   3,2K 10 Feb 12:42 private_key.em\n```\n chmod 755 /usr/local/etc/letsencrypt.sh/hooks.sh\n -> ratelimit ;)\n  old keys and certificates are cumulating in the certs folders at the moment.\nIs there a mechanism to delete old ones?\n great, thank you!\n  I would be a great addition if this script also pu out something which could be used in HKPK headers, e.g. with hooks.\nFor an example see\nhttps://calomel.org/lets_encrypt_client.html\n Accepted.\nI'll try to learn how to do this.\n This is what I'm trying out at the moment.\nI have yet to find out how to automatically replace the parts in my server config though\u2026\n\n```\n#!/bin/bash\n\nfunction deploy_cert {\n    local DOMAIN=\"${1}\" KEYFILE=\"${2}\" CERTFILE=\"${3}\" CHAINFILE=\"${4}\"\n    hpkp=\"$(openssl rsa -in ${BASEDIR}/certs/${DOMAIN}/privkey.pem -outform der -pubout 2>/dev/null | openssl dgst -sha256 -binary | openssl enc -base64)\"\n  printf \"\\nHTTP Key Pinning\\n   pin-sha256=\\\"$hpkp\\\";\\n\"\n}\n\nHANDLER=$1; shift; $HANDLER $@\n```\n Shouldn't an include directive do the trick? This way you only need to generate a file with the HKPK config.\n yes, that might be a good idea!\nhttps://github.com/lukas2511/letsencrypt.sh/issues/131\n How about having an option in the config and making this a part of lets encrypt.sh?\nadd a file with the HKPK hash for embedding it somewhere with a hook!\n The hash is the same, it is just different for RSA and ECDSA certificates.\nhttps://calomel.org/http_public_key_pinning_hpkp.html\nThen the hash can be opened and handled by the users.\nNo need to adapt to any webservers.\n I thought just about the hash, not the whole header implementation.\n`FdFOH8lP8ipUaas4cnj92Ifk81feECxL/RGDps3otfw=`\nThen it could be included in the server config dynamically or manipulated with a script.\n OK.\nI just thought it would be nice to have a file symlinking to the latest version, just like the keys and the certificates. Thought it might be helpful for others as well.\n I'm still pursuing this.\n\nI would need to have `${KEY_ALGO}` and `${timestamp}` passed to the hook for this to work.\nOr it could become integrated into letsencrypt.sh and become an option.\n\nDepending on which option you would prefer I would try to make a pull request.\n\nThis is what I have so far:\n\n```\necho \" + Generating HPKP information...\"\n\ncase \"${KEY_ALGO}\" in\n      rsa) hpkp=\"$(_openssl rsa -in ${KEYFILE} -outform der -pubout 2>/dev/null | openssl dgst -sha256 -binary | openssl enc -base64)\";;\n      prime256v1|secp384r1) hpkp=\"$(_openssl ec -in ${KEYFILE} -outform der -pubout 2>/dev/null | openssl dgst -sha256 -binary | openssl enc -base64)\";;\n    esac\n\necho $hpkp >> \"${BASEDIR}/certs/${DOMAIN}/hpkp-${timestamp}.txt\"\nln -sf \"${BASEDIR}/certs/${DOMAIN}/hpkp-${timestamp}.txt\" \"${BASEDIR}/certs/${DOMAIN}/hpkp.txt\"\n```\n <s>Maybe there should be a mode with fixed private key and CSR to have a permanent pin?\r\n\r\nLike with `--signcsr` mode, but employing `/var/lib/dehydrated/certs/` structure (with `privkey.pem` and `cert.csr` as regular files, not symlinks)?\r\n</s>\r\n\r\nMaybe the `PRIVATE_KEY_RENEW` config options should be better advertised/documented? @vi Was having that option written up in the `config` file (which is linked to from the readme) not sufficient? I don't see it in the [README](https://github.com/lukas2511/dehydrated/blob/master/README.md).\r\n\r\nI discovered it from the source code after already deploying `--signcsr`-based scheme.\r\n\r\nAnd finally only now I found [this](https://github.com/lukas2511/dehydrated/blob/master/docs/examples/config).\r\n\r\nAlso Debian's default `/etc/dehydrated/config` looks much shorter... From `README.md`:\r\n> Have a look at docs/examples/config to get started, copy it to e.g. /etc/dehydrated/config and edit it to fit your needs.\r\n\r\nFrom `docs/examples/config`:\r\n>#Regenerate private keys instead of just signing new certificates on renewal (default: yes)\r\n>#PRIVATE_KEY_RENEW=\"yes\" Yes, now I found.  It would be great to have an option for creating a separate key for every domain in use.\nIt would also be nice if it would be possible to create some entropy before regenerating keys, just like calomel does:\nhttps://calomel.org/lets_encrypt_client.html\n  Using the letsencrypt.sh script with an existing CSR gives me the following error:\n\n```\n + Requesting challenge for example.com...\n + Requesting challenge for www.example.com,...\n  + ERROR: An error occurred while sending post-request to https://acme-staging.api.letsencrypt.org/acme/new-authz (Status 400)\n\nDetails:\n{\"type\":\"urn:acme:error:malformed\",\"detail\":\"Error creating new authz :: Invalid character in DNS name\",\"status\":400}\n```\n\nIt seems there is problem with splitting the subject alternative names (if there are more than two) from the given CSR because the second line contains a comma ','. \n\nThe script is called with (config.sh only sets the wellknown path, the challenge and the e-mail)\n`./letsencrypt.sh --signcsr MYCSR.csr -x --config config.sh`\n\nThe  openssl config file to reproduce this behavior:\n\n```\n[ req ]\ndefault_bits            = 4096\ndefault_md              = sha256\nprompt                  = no\nreq_extensions          = v3_req\nemail_in_dn             = no\ndistinguished_name      = default_name\n\n[ default_name ]\n0.organizationName      = unknown\norganizationalUnitName  = unknown\nemailAddress            = nope\nlocalityName            = unknown\nstateOrProvinceName     = WHAT\ncountryName             = WH\ncommonName              = example.com\n\n[ v3_req ]\nsubjectAltName          = @alt_names\n\n[alt_names]\nDNS.0 = example.com\nDNS.1 = www.example.com\nDNS.2 = bla.example.com\nDNS.3 = foo.example.com\n```\n Thank you. I guess the extraction of the alt names is somehow only truncating the first ',' it finds.\n\nNo actually not. I'm using it on Ubuntu and Debian. May I ask why you were wondering?\n Thanks for the fast fix, works like a charm now.\n  Can you please include an example of an extremely basic hook script for dns-01 like you explain in the README.md:\n\n```\nThat could be done manually (as most providers don't have a DNS API), by having your hook script echo $1, $2 and $4 and then wait (read -s -r -e < /dev/tty) - give it a little time to get into their DNS system\n```\n\nI'm working on a script that will work with Akamai's DNS product, but for now I'd like to get a few domains working.\nThanks\n  From reading the README, I could not gather this information:\n- Where is the `domains.txt` file searched for?\n- Where are the generated certificates written to, and with what file naming scheme? Is it compatible with the official client\u2019s scheme?\n\nThanks,\nJoachim\n Hi Lukas. Thanks for the script.\nIt's true that a better documentation would be nice. I'm not a SSL expert and I have no idea how to use your script. I created the http acme-challenge directory for my domains, filled config.sh ... what now?\n\nEdit: I got it to work after a bit of fiddling and guess. It's a very nice script, does the job.\nWhat I had to guess : \n\"--cron\" is actually to start the script.\nOnce done with the test server, you have to delete all the certs + the private key and --cron again with the production server.\n.pem and .crt are the same thing in Apache's config\nHow to create a user for the script, chown the folder and its content, then crontab -u letsencrypt -e\n0 0 1 \\* \\* /opt/letsencrypt/letsencrypt.sh --cron\n I'm also all for improved docs.\nI tried to start with the official client back in September, but it was trying to do too much and screw up my nginx configs. I like the idea of a client that doesn't assume it can or should edit my webserver config files for me. \n\nThis week I was happy to find this script. I created the alias for the WK, and directed the config to an RSA4096 key I made, filled up my domains.txt and ran Lukas' script with -c, naiively hoping all will be magically well. It seems the script tried to create new keys for each domain, complained I had the wrong auth and such. do I need to do any registration with Let's Encrypt before I can use this script? what am I missing exactly?\n @seefood is your server configured to serve the ACME challenge files? See the [$WELLKNOWN / challenge-response](https://github.com/lukas2511/letsencrypt.sh#wellknown--challenge-response) section of the README. If the server is not configured to serve the challenge files that letsencrypt.sh creates, then the domain validation will fail.\n Of course nick, it's the first thing I did :)\numa:/usr/local/LEsh# echo 123 > /var/www/letsencrypt/321\numa:/usr/local/LEsh# curl https://scso.com/.well-known/acme-challenge/321 --insecure\n123\n you may have a point :) Fixed. Still, why generate a new key when I already set the key file in the config?\n\n```\numa:/usr/local/LEsh# ./letsencrypt.sh  -c\n# INFO: Using main config file /usr/local/LEsh/config.sh\nProcessing abramov.org with alternative names: ira.abramov.org images.abramov.org\n + Signing domains...\n + Generating private key...\n + Generating signing request...\n + Requesting challenge for abramov.org...\n  + ERROR: An error occurred while sending post-request to https://acme-staging.api.letsencrypt.org/acme/new-authz (Status 403)\n\nDetails:\n{\"type\":\"urn:acme:error:unauthorized\",\"detail\":\"No registration exists matching provided key\",\"status\":403}\n```\n well. I got all the domains the working certs with the  test registry, pointed at the real registry URL and tried running again. all the certs were of course too new (I set to 60 days) so no new certs were generated. I then did rm -rf certs and ran again, now I get `{\"type\":\"urn:acme:error:unauthorized\",\"detail\":\"No registration exists matching provided key\",\"status\":403}` Again. moved the account key aside, allowed a new one to be created (why don't they accept keys longer than 4096?) and now it all seems to be fine.\nI'll try to send a patch to the README soon, once I'm more confident I'm understanding all the steps. Thanks!\n  when there is just one domain name configured for a certificate, the CSR shoud be done without altname extension. Currelty requesting a cert for\n\nfoo.example.com\n\nwill result in\n            X509v3 Subject Alternative Name: \n                DNS:foo.example.com\n\nbeing added to the CSR and in the resulting certificate.\n On 05.02.2016 15:59, Lukas Schauer wrote:\n\n> Is that bad in any way?\n\nit's not exactly bad - it's just superfluous, makes the cert some bytes\nlarger for no reason. No big deal if you don't want to change this.\n  Having libressl (`LibreSSL 2.3.2`) in your path breaks the script since libressl does not support `sha`. \n\n```\nopenssl:Error: 'sha' is an invalid command.\nMessage Digest commands (see the 'dgst' command for more details)\ngost-mac          md4               md5               md_gost94\nripemd160         sha1              sha224            sha256\nsha384            sha512            streebog256       streebog512\nwhirlpool\n```\n\nMaybe add the possibility to override the openssl binary path in the config file?\n\nWhat I do right now is forcing the path manually:\n\n``` bash\nsudo sh -c 'PATH=\"/usr/bin:$PATH\";./letsencrypt.sh --cron --force -f config.sh'\n```\n  I am new to LE in general and while the description for using the challenge type is nice, it would be helpful to someone new to have an example usage.\n My example from my initial PR: https://github.com/germeier/letsencrypt.sh/blob/b6611a7d05c0171db01a5dd904fb0da052d753b8/hook-dns-01.sh.example\n\nI still think an examples section in the wiki would come in handy.\n Added my example script to the wiki: https://github.com/lukas2511/letsencrypt.sh/wiki/Example-hook-script-using-dns-01-with-nsupdate\n Nice, thanks.  Maybe this can get a link in the readme?\n I've successfully used the following hook script to do the DNS challenge on Route53:\n\nhttps://gist.github.com/asimihsan/d8d8f0f10bdc85fc6f8a\n\nThe idea is simple: you need to add the token as a TXT record to `_acme-challenge.#{domain}.`. However, a) this code isn't refactored very well, and b) on lines 19 and 45 you get the hosted zone with the name the same as the requested domain. Hence it won't work as-is if you request e.g `sub.domain.com`, since you need to search for `domain.com`.\n\nIf you think this script is useful I can refactor it and make it more resilient to work as-is for subdomains.\n Hey @lukas2511, \nI created a simple library called [lexicon](https://github.com/AnalogJ/lexicon) that lets you manipulate DNS records on various cloud DNS providers in a standardized way. It was built specifically for use with letsencrypt.sh and has an example [cloudflare dns-01 hook file](https://github.com/AnalogJ/lexicon/blob/master/examples/letsencrypt.cloudflare.sh) based off of @germeier's work. To use a different provider all you need to do is change 1 line in the example hook file. \n\n```\npython cli.py cloudflare create www.example.com TXT \\\n--name \"_acme-challenge.www.example.com.\" --content \"challenge token\"\n```\n\nCurrently it only supports Cloudflare and PointHQ, but I'm happy to merge PR's for additional providers. \n\nThanks for letsencrypt.sh btw, I'm a huge fan. \n Did lexicon or other integration for automating dns-01 challenge get added at some point?\n Hey @YasharF \nIt doesn't require any changes to `dehydrated` to support automated dns-01 challenges, just a hook file that calls `lexicon`. \n\nI wrote a [blog post](http://blog.thesparktree.com/post/138999997429/generating-intranet-and-private-network-ssl) which fully explains how to get `lexicon` to work with `dehydrated` (though its a bit outdated now). The `lexicon` repo includes an up-to-date [Dockerfile](https://github.com/AnalogJ/lexicon/blob/master/Dockerfile) which installs `dehydrated`, and configures both correctly. If you still need help feel free to open an issue in the [lexicon repo](https://github.com/AnalogJ/lexicon)\n  It would be very nice if the script will run in alternative shells. For example, in busybox ash.\nNow it is not working.\n i was testing the script under busybox.\ni dont see too much problems fixing it for POSIX (so working in every shell):\n\ne.g. these calls (there are a lot of)\n\n```\ncsr64=\"$( <<<\"${csr}\" openssl req -outform DER | urlbase64)\"\n```\n\ncan be converted to:\n\n```\ncsr64=\"$( echo \"${csr}\" | openssl req -outform DER | urlbase64)\"\n```\n\nanother thing are:\n\n```\n[[ var =~ (foo|bar)$ ]] || ...\n```\n\nwhich can be written as:\n\n```\ncase \"$var\" in\n  *foo|*bar);;\n  *) ... ;;\nesac\n```\n\nanother things are arrays, e.g. ${deploy_args[@]} where we can make a small function\n  Hey,\nI implemented a quick certificate expiration check based on your signing function.\n\nIt currently returns 1 if a certificate is expiring and 2 when expired.\n  Any suggestions for style/syntax tweaks would be welcome. I don't speak bash natively. :) This could also use some testing.\n I made a bash script for the cloudflare api which uses this:\nhttps://p.botox.bz/view/f62dd2dd\n\nThis only makes sense if you're using Cloudflare for DNS only.\n  closes #101 \n\nVerified with following test-hook:\n\n```\n#!/bin/bash\n\necho \"Args:\"\nfor a\ndo\n    echo \"$a\"\ndone\necho \"Press return\"\nread\n```\n\nBTW: In contrast to the official client your script is a delight (and just works).  Thanks!\n  This is a small edit to the README. See https://twitter.com/letsencrypt/status/689919523164721152 for the announcement.\n  \u2026 normally in loop\n  - Allow zsh next to bash\n- Fix small compat issues\n- Allow using a different OpenSSL binary\n- openssl sha is SHA-0, use dgst command instead\n Not sure where this is failing in CI... Just tested this in a bash shell and the switching of /bin/sh to /usr/local/bin/sh was OK (FreeBSD 10.2, /bin/sh is bourne shell not bourne again)\n Documented in https://wiki.freebsd.org/BernardSpil/LetsEncrypt and intend to create a port for FreeBSD\n I tested your branch and for me it goes into an endless loop with 100% CPU usage.  I'm using zsh on arch linux.\n it think the (( ${#} )) thingy is the culprit. but i like your changes overall...\n Sorry for the poor quality code :/ Not all my local changes were in.\n\nIt now runs but there's an error unrelated to my changes:\n\n```\nSTDERR:\n  + ERROR: An error occurred while sending get-request to https://testca.kurz.pw/directory (Status 502)\n```\n Tests are now OK. Any remaining comments?\nPeople are very happy with https://wiki.freebsd.org/BernardSpil/LetsEncrypt it seems. Would be helpful to get these changes in so I can create the port.\n Thanks Lukas! Works like a charm now.\nUpdated the FreeBSD port http://www.freshports.org/security/letsencrypt.sh/\nUpdated my guide https://wiki.freebsd.org/BernardSpil/LetsEncrypt\n  For setups that require a bit of work to get into a state that allows renewing (opening up holes for the well-known directory, restarting webservers, etc) it might be useful to be able to check if any certs will need renewing in a separate step from actually going through the renewal.\n\nProposal: have a \"cert status\" command that returns `0` if everything is fine and `1` if certs will need to be updated.\n\nWhile it's true that this check can easily be done outside the script with an `openssl -checkend`, having it in the script where `RENEW_DAYS` and `domains.txt` are already properly configured would be convenient.\n\nThoughts?\n :+1: \n\ndifferent exit codes would be great, even with the existing checks, but if you could run a command just to check the expiration status, and then run again based on the exit code (this time reconfiguring firewall, webserver, services etc.) that would be very useful.\n\nas @pR0Ps says, openssl -checkend looping through domains.txt and parsing the other config options is sub-optimal\n @pR0Ps: Maybe you could use something like https://github.com/Matty9191/ssl-cert-check as a solution?\r\n\r\n`./ssl-cert-check -N -x 40 -d \"/etc/dehydrated/certs/*/cert.pem\" `\r\nwill output something like\r\n1 certificate(s) will expire (FILE:/etc/dehydrated/certs/example.org/cert.pem on Mar 18 2017)|days=35\r\nand return code 1 (if expires in 40 days) or 2 (if expired already) +1 for different exit codes.\r\nThis helps automating server restarts upon certificate renewals. Would this feature also solve the issue of a hitting LEs rate limits by not renewing the certs every time dehydrated is run? \r\n\r\nCurrently i have to manually check if the certificate is still valid in Ansible, depending on the return value of that i then run Dehydrated.\r\n\r\nI'd like to be able to just have dehydrated check to see if my certificate is still valid, if so not contact LE at all.  @Wetrain dehydrated is only renewing certificates that have changed or that will expire soon, there are only a few requests against the CA each time the script is run (basically just querying api features) @lukas2511 Hm i recently got hit by the 5 certificate renewal limit, due to Ansible running Dehydrated on each deployment, is this correct behaviour, even though i had valid local certificates?  @Wetrain No idea what your ansible setup is doing, but dehydrated only refreshes certificates 30 days before they'll expire or when the set of domains in the certificate changes. If in your case it runs again and again it either can't find the certificates or you are forcing it to update... Please open an issue with more details if this problem persists, this discussion here is the wrong place for that. I'm using https://github.com/Matty9191/ssl-cert-check to monitor all certificates with nagios which were generated by dehydrated. I'm not sure if it's the right place to ask but I'm having problem detecting when I should reload my nginx...\r\nI'm running dehydrated with daily cron and using the route53 dns hook. \r\nI cannot figure out when the cert is actually renewed and (not skipped) so that I can reload nginx.\r\nThe script return `0` exit code each time.  What would be the right way to do that? This is exactly my issue as well. I'm currently calling `reload` upon every dehydrated run as a workaround. @jglapa @chr4 You want to implement a hook script. The deploy_cert() function is called for each certificate produced, so that would be the ideal place to reload NGINX.  Any specific location in mind ?    how about in the ${BASEDIR}/certs/${domain}/ folder  then each cert domain could overwrite the defaults set in the main config ( if it needed anything different ) and just use the defaults if not. \n\nhave a quick look at https://github.com/srvrco/getssl  - I wrote it primarily because I wanted different defaults on different domains, and also wanted to be able to copy the challenges and final certs to remote servers ( ssh / scp) ..... If you are happy for that additional functionality  - I can look at adding multiple configs and effectively combining ( separate configs per domain / remote servers )  in to your script ?  (and effectively removing mine ) \n agreed.   I'm away this weekend - I'll take a closer look at your code early next week. \n I would prefer to have a set of certificates with the same settings without creating a config for every certificate that is different from the main config but identical with at least some other configs.\n\nTwo ideas to make this possible:\n1. Make the `domains.txt` customisable via `config.sh`. This allows to run `letsencrypt.sh` first with default settings and `domains.txt`. And then run it again with `-f config2.sh` which points to `domains2.txt`.\n2. Extent the syntax of `domains.txt`. Add a line starting with a character not allowed in domains (e.g. a colon `:` ). And point to a custom `config.sh` which merges with the current config and is valid for all following domains. \n\nIn every scenario using multiple configuration files we should add a debug option which just outputs all configuration values per certificate(set) and does nothing else.\n I was thinking more of a priority system, so in effect there are defaults within the code ( if no config files are specified ).   The main config file could then be used to modify this default.    Anything at the certificate level would use these unless there was a value in a certificate specific config file which would overwrite the earlier values.   \n I like the idea to overwrite parameters for a single certificate. \nAdditionally it would be great to have the possibility to overwrite specific parameters for a group/set of certificates at once. \nThe reason for this are two domains registered by different resellers with different DNS-APIs.\n- http-01 as default verification method for\n  - example.com www.example.com\n  - example.net www.example.net\n  - webmail.example.com\n- dns-01 with hook1.sh for DNS-API1:\n  - smtp.example.com\n  - imap.example.com\n- dns-01 with hook2.sh for DNS-API2:\n  - ipv6-only.example.net\n\nWith this setup it would be great to have two independent hooks. One for challenge handling and another one for certificate deployment and service restart. So we can specify challenge handling at group level and certificate deployment for every certificate.\n +1\nI would love to set different locations and hooks for certain domains\n I like this idea a lot.\nFor certain domains it might even be good to have a RSA and an ECDSA key available:\nhttp://www.postfix.org/TLS_README.html\nWould be great to have this choice too.\n  The certs get put in the following directory structure\n\n/etc/letsencrypt.sh/certs/{some.domain}\n/etc/letsencrypt.sh/certs/{other.domain}\n\nI have a requirement to keep them in one directory which is not dictated by the domain names. This is handy in circumstances when the server with letsencrypt may not actually use the certificates itself.\n\nThe fix is quite easy - I can do a pull request but wanted you to check the following and see if it would be accepted:\n\nin config.sh add variable if required:\nLOCDIR=\"storage\"\n\nIn letsencrypt.sh add the following line - defaults to domain name if LOCDIR not set:\n\nCreate certificate for domain(s)\nsign_domain() {\n  domain=\"${1}\"\n-  locdir=\"${LOCDIR:-$domain}\"\n\nReplace all instances of\n\n/certs/${domain}\n\nwith \n\n/certs/${LOCDIR}\n @lukas2511 Would it be possible to include an example in hook.sh.example of how to move these automatically to /etc/ssl/private?  It'd greatly help us noobs.  Thanks!\n  Right now, the way it's written, hooks can't do normal IO then get immediate EOF.\n\nWhile it's straightforward enough to run under expect/whatever, would be nice if a simple read/prompt would work. \n In my case when testing, I was an interactive prompt in the hook (wasn't fully automated). With the way it's currently implemented, you can't read from stdin in the hook - you can only read from /dev/tty. \n\ni.e. if you do \"read x\" in a hook shell script, it will immediately exit (as opposed to read x < /dev/tty which forces a read from the active terminal)\n Found it. It's from this in command_sign_domains:\n\n```\n <\"${DOMAINS_TXT}\" _sed -e 's/^[[:space:]]*//g' -e 's/[[:space:]]*$//g' -e 's/[[:space:]]+/ /g' | (grep -vE '^(#|$)' || true) | while read -r line; do\n```\n\nDuring the entire loop, stdin is captured.  Have a pr coming.\n What about this implementation #110 \n  I just got this working with my provider's DNS API, but I had to inspect the script as to how to do it, so I thought some detail might be useful in the readme\n Yes, I know. That's why I was doing it. It all worked really nicely with my provider's DNS API: https://www.mythic-beasts.com/support/api/primary \n\nremarkably easy\n\nFWIW, here's my hook script (for deploy_challenge only)\n\n```\n    #!/bin/bash\n    if [[ \"$1\" = \"deploy_challenge\" ]]; then\n        echo \" ++ setting DNS for $2 to $4\"\n        while read DNSDOMAIN DNSAPIPASSWORD; do\n            if [[ \"$2\" == *$DNSDOMAIN ]] ; then\n                ZONE=$(echo $2 | sed -e \"s/\\\\.$DNSDOMAIN\\$//\")\n                curl -d \"domain=$DNSDOMAIN\" -d \"password=$DNSAPIPASSWORD\" -d \"command=REPLACE _acme-challenge.$ZONE 300 TXT $4\" \"https://dnsapi.mythic-beasts.com/\"\n                echo sleeping 60 seconds for change to take effect..\n                sleep 60\n                break;\n            fi\n        done < ./dnsapi.config.txt\n    else\n        echo \"hook said...\"\n        echo \"$1 $2 $3 $4\"\n    fi\n```\n I think that a hook.sh.example file could also be a good way to get users up to speed quickly. I'm thinking something along the lines of this:\n\n``` bash\n#!/bin/bash\n\nfunction deploy_challenge {\n    local ALTNAME=\"${1}\" TOKEN_FILENAME=\"${2}\" TOKEN_CONTENT=\"${3}\"\n\n    # pass\n}\n\nfunction clean_challenge {\n    local ALTNAME=\"${1}\" TOKEN_FILENAME=\"${2}\" TOKEN_CONTENT=\"${3}\"\n\n    # pass\n}\n\nfunction deploy_cert {\n    local DOMAIN=\"${1}\" KEYFILE=\"${2}\" CERTFILE=\"${3}\" CHAINFILE=\"${4}\"\n\n    # pass\n}\n\nHANDLER=$1; shift; $HANDLER $@\n```\n\nI'll send a PR if you want.\n  I'm currently working on some Debian packaging for letsencrypt.sh and it would be really helpful to base this on releases (rather than some random commits in git).\n\nWould you mind using some [version schema](https://en.wikipedia.org/wiki/Software_versioning) and do a release from time to time?\n Okay, that's alright. I [opened an ITP on bugs.debian.org](https://bugs.debian.org/812174) for a \"0.0.0~2016.01.21~git23b0ef5\" version. This hopefully will be a low enough version to not increase the Debian epoch, once you're doing releases of letsencrypt.sh.\n\nFor me it's okay, if you prefer to close this GitHub issue.\n That's just great - thanks a lot!\n  I was looking for a Let's Encrypt client to integrate in to an existing automation tool. Your `letsencrypt.sh` implementation came closest. However, it still does too much.\n\nThis pull requests splits out the core functionality (sign a CSR) from the nice-to-have features (generate a CSR from the `domains.txt` file), and exposes this functionality from the command line.\n\nThe newly added `--signcsr` command does exactly what its name implies: it extracts the domain names from the CSR (SANs or CN), requests and executes the challenge for each one, requests the CRT, and outputs that to stdout (normal output is redirected to stderr for this command).\n I was trying this out, and I got : \n\nsed: -e expression #1, char 23: invalid reference \\1 on `s' command's RHS\n- Requesting certificate...\n  - ERROR: An error occurred while sending post-request to https://acme-v01.api.letsencrypt.org/acme/new-cert (Status 403)\n Hi rossnick,\nThank you for trying this out. Can you provide me with the exact command line that you used, and the input CSR file?\n The command was :  /etc/httpd/ssl/letsencrypt.sh -s file.csr -f /etc/httpd/ssl/config.sh Can I send the csr in private ? By the way, the CSR is in sha1, it's used by a propriatary system that doesn't support creating csr in sha2. That's the reason I am interrested in testing this...\n there is no reason to send the CSR in private (Let's Encrypt will publish all details anyway if they issue a CRT for it), but if you insist, you can mail it to niels@dest-unreach.be.\n You're right...\n\n-----BEGIN CERTIFICATE REQUEST-----\nMIIE5jCCAs4CAQAwgaAxCzAJBgNVBAYTAkNBMQ8wDQYDVQQIEwZRdWViZWMxDzAN\nBgNVBAcTBlF1ZWJlYzEWMBQGA1UEChMNQ3liZXJDYXQgaW5jLjELMAkGA1UECxMC\nSVQxJTAjBgNVBAMTHG1haWwuY29tbW9ud2VhbHRocGx5d29vZC5jb20xIzAhBgkq\nhkiG9w0BCQEWFHNzbGFkbWluQGN5YmVyY2F0LmNhMIICIjANBgkqhkiG9w0BAQEF\nAAOCAg8AMIICCgKCAgEAuwLQL6PQ+92/AHTxOdNz4fveWZt2OqBIkdcGEs5r2arK\nsMW9bN+cJ46CySKOaMwZWnFgsBeCLa/KMipVc3dFlPpg698mOVZRGCCtKwt3Iika\nY74tY6czeUofg9/dnRXheUplwXsKv9t6/t1ab9hr+UVU4PI/y0FDH9+LuP2qA41g\nxPtuFHvrpi5K0t9PeRKA6n19GY9VxbGYd1d0Rbc9HovwEbTrXSghJnR7FzHm3d0C\nLAPoUyrZsGNK4j7ebphtV9eMVsXiOYL9EquekQXAVB+S3oWbpJZs6qwK2p+/sUz0\nyl98k+Kmo3G9gUygnJ+hhXqjqv7IKtmVkI6X2IdDRwutzHORPQIXjSHp2K0yiMuV\nMVsu/WBLYx1OAoNRdAYkB880D95TzCc0McUc+YM/+5TJKaoBCid0yeQn2ZmvninD\nMlzKMaalF5DLv7Yh+cfs31bq3rYKohY4jq9Wt/0u52lIA303XuwVUbhFvvi+O4zk\n3PpWnyWD6xWq2dfYgO3YrwGUa4TyZiNJR44ZS+B+p7YOP5yZ9xhbC9XyzlkQCD5h\ndzEDYjcgzHuz2u/38eHxaGjO6fcpuOS/uYtvRi/KkixqaE8QVxylOYpynQM6QLhw\nqIqcQjQVEM28Of3Vcoym1bS65ihJl/wn1/6X40u+BDF6Yx7aVuID4IlNv71fhaEC\nAwEAAaAAMA0GCSqGSIb3DQEBBQUAA4ICAQAU7L0YyfOkJQlW6bCP74vjlnhfza/9\nWY1R8LRLi1zsgwao+d+2K5IGPTGLrtNdWLcccprZobeJoUkpNj2shKnbhyyLglfp\ngqMmE3PsCHq+8y9Rk9N5nXeDuUll5sD4XWxoPwdES9pYmJ3vAtedx9dxaRotEB4I\n2SzAd5dQgKcZfLImUSADZCDuL/K1FH638c6gUG1jtRs9Ylb01ifM+ALrEVVFvd6C\nUtNI/uXpG94jAtK8AkHgYbTKLzUfM96nqSom8T8+28T4DmdobrAEgYstIEeY674A\nvAlY2IgvtOivavde/Pfa8n15o37rSFvEVSrHpgD6EgL7tM8orsngwXYBY4L1a+oj\nYuvSfIGHDYSgKaFiqxyIYBj+E0RggTxI0Rtu/mARPlsgBdJ8Lj1gYuX9+OFxTHGb\ntY1ysOpxxeKwJEStp+//TttmLHcCvfLsNkYjHXIYzTeqJzxrIMiwvWb8alR17/AH\nRjvJyvp5cOMzrWXt4YeMkYG1XhyOcqmnKKXY9FTdxNWBFcC6DBAd31LG2j3IsQ4B\ntqZ32rnND26kmSKaCe5O+xmfTWKKT3SvY0fVrbw/HNUIiXX2M6MjFR8DiSEz7P99\nJuNXypdIy82fFTmEUlmvzHYJvVr3PWDlMg9WtE6gyS9a21zsTZax9VUEwM5U/QpE\npL//s+RsJNyBxg==\n-----END CERTIFICATE REQUEST-----\n Does the current version work (better)? If so, I'll rebase the patch in to the earlier commit so this pull-request stays clean.\n Yes !\nIt worked. It would be nice if it saved the file into the certs/domain/ directory and making of the chains, like when signing certs.\n I've rebased the patch in to the offending commit, to make this pull request easier to review. (And I've rebased it on to the new `master`-branch as well)\n rossnick: I don't consider making chains and creating arbitrary directory structures as 'minimal functionality'. Also, for my particular use case, I need to put the certs in a different directory structure. You can always save the certificate by redirecting stdout: `./letsencrypt.sh --signcsr bla.csr > certs/bla/cert.crt`\n I tested the generated cert into our old product and was able to confirm that all is working great. I'd love to see this added to the main project.\n @lukas2511 I've tried to make the commits as easy to review as possible. However, the first commit (splitting the challange from the CSR generation) gives a horrible to read diff. It's probably easier if you just open up both versions side-by-side and do the diff by hand.\n  The config example for nginx in the README.md doesn't work for me\n\n```\nlocation /.well-known/acme-challenge {\n  alias /var/www/letsencrypt;\n}\n```\n\nI just get 403 forbidden errors when i try to access one of the challenge files via a browser and also letsencrypt.sh can't access the challenge files.\n\nBut the following config for nginx works for me:\n\n```\nlocation ^~ /.well-known/acme-challenge {\n  alias /var/www/letsencrypt;\n}\n```\n\nNot sure if that should be changed or if there could be an other issue preventing the example config for nginx work correctly in my setup.\n  I'm seeing a bit of an issue with the handling of account private keys when switching from one CA to another.  The process goes something like this:\n- Download letsencrypt.sh\n- Create config.sh, setting CA to https://acme-staging.api.letsencrypt.org/directory, and otherwise configuring as desired\n- Run letsencrypt.sh -c\n- It runs, notes no account, creates a private key, registers an account with the staging CA, and otherwise does its thing\n- (optionally) user makes tweaks to config, re-running letsencrypt.sh until results are as desired\n- User changes CA to https://acme-v01.api.letsencrypt.org/directory and runs letsencrypt.sh to generate \"official\" certs\n- Script errors out with {\"type\":\"urn:acme:error:unauthorized\",\"detail\":\"No registration exists matching provided key\",\"status\":403}\n\nThe user can, of course, delete or rename the private_key.pem file, and then the script will run fine.  I'd suggest, though, one of two ways of handling this in the script:\n1.  Rather than putting the private key in $BASEDIR/private_key.pem, put it in $BASEDIR/accounts/$CA_HOSTNAME/private_key.pem.  When the user changes to a different CA, the script will see that there's no key, create a new one, and register it.\n2.  If the script gets this error from the CA, rename private_key.pem to something else, create a new one, and make a new registration.\n\nI think (1) is the better option of the two, but either would avoid this.\n Why not go hybrid\nUse the private key as provided - but if there isn't one already present in $BASEDIR/accounts/$CA_HOSTNAME/private_key.pem - copy the base one to it after attempting registration. \n Changing paths ... it can really be painful.\nIt opens way to other CAs but it's \"big\" change.\nOn the other hand, how many CAs you know to support this kind of cert handling ... \nMy idea is: add --testCA parameter\nIt has two positives\n- relatively easy - changing CA, ACCOUNT_KEY and ACCOUNT_KEY_JSON to \"testing\" values\n- it can be used for initial testing of full process (mainly correct WELLKNOWN and hooks) in user environment\n\nIf you like it, will do it and then send you pull request to let you see if it's OK for you.\n If you don't want to change path, set up softlinks instead.\n Would it be an idea to store the key in `./private_key-$HASH_OF_CA_URL.pem` and then use `ls private_key*.pem` to see which private keys are available?\n Or another option: add the CA URL into `private_key.json`, and give a meaningful error message when a mismatch is detected.\n  Is there any way to revoke created certs to remove them completely and create new ones ?\n  So I am trying out this software just for kicks and seem to be getting a very odd error, that I can't find anything about:\n\nProcessing testdoman.com with alternative names: www.testdomain.com\n- Signing domains...\n- Generating private key...\n- Generating signing request...\n- Requesting challenge for testdomain.com...\n- Responding to challenge for testdomain.com...\n  ERROR: Challenge is invalid! (returned: invalid)\n\nI can't really seem to find the reason for this error, even by inspecting the script?\n Looks like you have a problem with the challenge response system to authenticat that you are in control over the domain. Do you have created the folder and alias for the challenge-response system?\nFor nginx it looks like this:\n\n```\n...\nlocation /.well-known/acme-challenge {\n  alias /var/www/letsencrypt;\n}\n...\n```\n\nFor Apache:\n\n```\n...\nAlias /.well-known/acme-challenge /var/www/letsencrypt/\n...\n```\n\nAlso you have to define the well known directory from above in the config:\nconfig.sh:\n\n```\n...\nWELLKNOWN=\"/var/www/letsencrypt\"\n...\n```\n I have defined the wellknown directory and I am guessing the alias part for nginx is necessary for some sort of testing?\n\nIs there a way to do it, without having to add and then remove an alias from the system?\n Yes you need the alias or have to customize the config a little to match your domains webroot. It is needed to allow letsencrypt read the response to the challenge they give to you to check if you are the owner of the domain you request a certificate for.\n\n> Is there a way to do it, without having to add and then remove an alias from the system?\n\nWell you could also use/define the well-known dir under every single domain in its webroot. Its a lot of manual overhead especially if you want to automate the certificate renewal. So the alias is a simple way to enable the automated renewal in an easy way even if you use your nginx as reverse proxy without a webroot at all. So you don't have to remove the alias after the initial certificate request because you need it again for renewal after 90 days at the latest. \n Well my problem is that nothing actually gets put in the well known dir (possibly because of the error), and I would like to manually test it out, before putting it in my central distribution software?\n\nTo clarify, if there is a way to generate the certificate from one server and then distribute it to our load balanced nginx proxies later on?\n ok, than the following should work. Change the config.sh to:\n\n```\n...\nWELLKNOWN=\"/path/to/your/domain/webroot/\"\n...\n```\n Well that is what I have already done and that is what is giving me the error. :)\n i wonder why WELLKNOWN is unset during script-startup. if not we can just invoke like this and it works without changing anything:\n\n```\nroot@server1:~/letsencrypt.sh# WELLKNOWN=/var/www/.well-known/acme-challenge ./letsencrypt.sh  --cron\n#\n# !! WARNING !! No main config file found, using default config!\n#\nProcessing 4.v.weimarnetz.de   \n + Checking domain name(s) of existing cert... unchanged.\n + Checking expire date of existing cert...\n + Valid till Mar  4 13:26:00 2016 GMT (Less than 30 days). Renewing!\n + Signing domains...\n + Generating signing request...\n + Requesting challenge for 4.v.weimarnetz.de...\n + Responding to challenge for 4.v.weimarnetz.de...\n + Challenge is valid!\n + Requesting certificate...\n + Checking certificate...\n + Done!\n + Creating fullchain.pem...\n + Done!\nProcessing 4.v.weimarnetz.de\n + Checking domain name(s) of existing cert... unchanged.\n + Checking expire date of existing cert...\n + Valid till May 18 07:30:00 2016 GMT (Longer than 30 days). Skipping!\n```\n I had the same promlem like KrisZane.\nIt turned out that my server didn't respond to normal HTTP requests. So I reopened port 80 and made a virtual host for HTTP:\n\nListen 80\n\n<VirtualHost *:80>\n    ServerName xxxxxx.eu\n    DocumentRoot /var/www/html\n</VirtualHost>\n\n=> Works great now. \nThanks for sparing me the use of the bloated official client!\n WELLKNOWN=\"/path/to/your/domain/webroot/\" work for me. thanks.\n I have this same issue, I added a file named \"1.txt\" in the folder owned by www:www just for testing\r\n\r\n```BASh\r\n$ curl http://www.domain.tld/.well-known/acme-challenge/1.txt\r\n```\r\n```HTML\r\n<html>\r\n<head><title>404 Not Found</title></head>\r\n<body bgcolor=\"white\">\r\n<center><h1>404 Not Found</h1></center>\r\n<hr><center>nginx/1.7.4</center>\r\n</body>\r\n</html>\r\n```\r\n\r\nExcerpt from log:\r\n```\r\n10.0.0.104 - - [12/Sep/2017:20:36:01 +0000] \"GET /.well-known/acme-challenge/1.txt HTTP/1.1\" 404 168 \"-\" \"curl/7.38.0\" \"-\"\r\n``` @TyrfingMjolnir This is a very old issue, and has been closed for almost 21 months now. Would you like to open a new issue?  I've pulled a copy of the letsencrypt.sh script from github earlier today on my CentOS 5-based system (SME Server 8.2; see contribs.org).  I've created a config.sh and a domains.txt file.  But when I run letsencrypt.sh, I get this:\n\n[root@sme8-test letsencrypt.sh]# ./letsencrypt.sh -c\nERROR: This script requires curl.\n\ncurl is installed and is in $PATH:\n[root@sme8-test ~]# curl -V\ncurl 7.15.5 (x86_64-redhat-linux-gnu) libcurl/7.15.5 OpenSSL/0.9.8b zlib/1.2.3 libidn/0.6.5\nProtocols: tftp ftp telnet dict ldap http file https ftps \nFeatures: GSS-Negotiate IDN IPv6 Largefile NTLM SSL libz \n[root@sme8-test ~]# which curl\n/usr/bin/curl\n\nSo I figured I'd comment out the line in letsencrypt.sh that checks for curl and run it again.  That didn't work at all:\n[root@sme8-test bin]# letsencrypt.sh -c\n# INFO: Using config file /etc/letsencrypt.sh/config.sh\n- Generating account key...\n  sed: invalid option -- E\n  Usage: sed [OPTION]... {script-only-if-no-other-script} [input-file]...\n  \n  -n, --quiet, --silent\n                 suppress automatic printing of pattern space\n  -e script, --expression=script\n                 add the script to the commands to be executed\n  -f script-file, --file=script-file\n                 add the contents of script-file to the commands to be executed\n  -i[SUFFIX], --in-place[=SUFFIX]\n                 edit files in place (makes backup if extension supplied)\n  -c, --copy\n                 use copy instead of rename when shuffling files in -i mode\n         (avoids change of input file ownership)\n  -l N, --line-length=N\n                 specify the desired line-wrap length for the `l' command\n  --posix\n                 disable all GNU extensions.\n  -r, --regexp-extended\n                 use extended regular expressions in the script.\n  -s, --separate\n                 consider files as separate rather than as a single continuous\n                 long stream.\n  -u, --unbuffered\n                 load minimal amounts of data from the input files and flush\n                 the output buffers more often\n      --help     display this help and exit\n      --version  output version information and exit\n\nIf no -e, --expression, -f, or --file option is given, then the first\nnon-option argument is taken as the sed script to interpret.  All\nremaining arguments are names of input files; if no input files are\nspecified, then the standard input is read.\n\nE-mail bug reports to: bonzini@gnu.org .\nBe sure to include the word `sed'' somewhere in the`Subject:'' field.\nsed: invalid option -- E\nUsage: sed [OPTION]... {script-only-if-no-other-script} [input-file]...\n\n  -n, --quiet, --silent\n                 suppress automatic printing of pattern space\n  -e script, --expression=script\n                 add the script to the commands to be executed\n  -f script-file, --file=script-file\n                 add the contents of script-file to the commands to be executed\n  -i[SUFFIX], --in-place[=SUFFIX]\n                 edit files in place (makes backup if extension supplied)\n  -c, --copy\n                 use copy instead of rename when shuffling files in -i mode\n         (avoids change of input file ownership)\n  -l N, --line-length=N\n                 specify the desired line-wrap length for the `l' command\n  --posix\n                 disable all GNU extensions.\n  -r, --regexp-extended\n                 use extended regular expressions in the script.\n  -s, --separate\n                 consider files as separate rather than as a single continuous\n                 long stream.\n  -u, --unbuffered\n                 load minimal amounts of data from the input files and flush\n                 the output buffers more often\n      --help     display this help and exit\n      --version  output version information and exit\n\nIf no -e, --expression, -f, or --file option is given, then the first\nnon-option argument is taken as the sed script to interpret.  All\nremaining arguments are names of input files; if no input files are\nspecified, then the standard input is read.\n\nE-mail bug reports to: bonzini@gnu.org .\nBe sure to include the word `sed'' somewhere in the`Subject:'' field.\n- Registering account key with letsencrypt...\n  - ERROR: An error occurred while sending post-request to https://acme-staging.api.letsencrypt.org/acme/new-reg (Status 500)\n\nDetails:\n{\"type\":\"urn:acme:error:serverInternal\",\"status\":500}[root@sme8-test bin]#\n\nI'm not sure what to try from here--thoughts?\n [root@sme8-test ~]# curl -V\ncurl 7.15.5 (x86_64-redhat-linux-gnu) libcurl/7.15.5 OpenSSL/0.9.8b zlib/1.2.3 libidn/0.6.5\nProtocols: tftp ftp telnet dict ldap http file https ftps \nFeatures: GSS-Negotiate IDN IPv6 Largefile NTLM SSL libz \n[root@sme8-test ~]# echo $?\n2\n[root@sme8-test ~]# \n\nI'll see if there's a well-supported way to update sed.  This system has GNU sed version 4.1.5; a CentOS 6 system (which does work) has GNU sed 4.2.1.\n Re sed please see my comment https://github.com/lukas2511/letsencrypt.sh/commit/63ab72a5217c51bb0b04607626b5f6f7284db38b#commitcomment-15485814\n\nsed should be -E OR -r\n\n-E is not a normal switch - http://blog.dmitryleskov.com/small-hacks/mysterious-gnu-sed-option-e/\n\nIf I swap to -r it works perfectly well.\n\nNo idea on the curl issue but if you hash out the check it works.\n Not on the one we are using, and we can't change that ! RHEL/CentOS 5 is still there and supported.\n I was trying to figure if I could rewrite this a bit but this is way beyond my primitive bash skills.\n\nI believe the issue lies with the way that set -e handles error codes.\n\nOn the version of sed being used 4.1.5 I get the following results\n\nsed -r \"\" < /dev/null\necho $?\n0\n\nsed -E \"\" < /dev/null\necho $?\n4\n\nBut quite clearly this version of sed does support extended regular expressions (as shown if we look at sed -r) so the error checking is at fault.\n\nMy guess there is a similar issue with curl - on CentOS 5 it gives a result of 2 but on CentOS 6 it results in 0. If the checks are removed the script functions as expected.\n If the issue is that some versions of sed require the -r flag, and others require the -E flag, wouldn't it be possible (perhaps in the compatibility check section) to determine which (if any) is the appropriate flag for the version installed on the system on which the script is running, set a variable to contain that flag, and then call sed using \"sed $SED_OPTS\" rather than \"sed -E\"?\n or enable a hook via `config.sh`?\n Since SME8 is customized in a number of ways, I installed a clean CentOS 5 system to test curl.  Same thing:\n[dan@pc-00226 ~]$ curl -V\ncurl 7.15.5 (x86_64-redhat-linux-gnu) libcurl/7.15.5 OpenSSL/0.9.8b zlib/1.2.3 libidn/0.6.5\nProtocols: tftp ftp telnet dict ldap http file https ftps \nFeatures: GSS-Negotiate IDN IPv6 Largefile NTLM SSL libz \n[dan@pc-00226 ~]$ echo $?\n2\n\nSince RHEL5/CentOS5 is still an actively supported OS, it would be good to deal with this.\n\nOn sed, it looks like sed -E is called twice in the script.  Surely there's a way of dealing with -r instead?\n I note that what I thought was one issue (le.sh doesn't see curl) is actually two--le.sh doesn't see curl in CentOS 5, and le.sh uses sed -E, which isn't available in CentOS 5.  Would it be beneficial to open a second issue for sed?\n I'm afraid that didn't fix it:\n[root@sme8-test letsencrypt.sh]# ./letsencrypt.sh \nERROR: This script requires sed with support for extended (modern) regular expressions.\n[root@sme8-test ~]# uname\nLinux\n It now runs without giving an error--no time to test extensively at the moment though.\n Thanks Lukas !\n  I could've sworn the script gave me an  `exit1: command not found` error at some point, but I can't reproduce it now.\n\nIn any case, here is the world's smallest bugfix.\n  letsencrypt.sh is not handling correctly error such as \"Too many certificates already issued\" on Requesting certificate block : if an error occur on signed_request then there is no reason to try to check the certificate and the program should report the error and try following certificates.\n\nOutput of letsencrypt.sh showing the error:\n\n```\nUsing config file /Users/test/GIT/letsencrypt.sh/config.sh\nProcessing test.example.com\n + Checking domain name(s) of existing cert... unchanged.\n + Checking expire date of existing cert...\n + Valid till Apr  9 15:50:00 2016 GMT (Longer than 14 days). Ignoring because renew was forced!\n + Signing domains...\n + Generating signing request...\n + Requesting challenge for test.example.com...\n + Responding to challenge for test.example.com...\n + Challenge is valid!\n + Requesting certificate...\n  + ERROR: An error occurred while sending post-request to https://acme-v01.api.letsencrypt.org/acme/new-cert (Status 429)\n\nDetails:\n{\"type\":\"urn:acme:error:rateLimited\",\"detail\":\"Error creating new cert :: Too many certificates already issued for: example.com\",\"status\":429}\n + Checking certificate...\n  + ERROR: failed to run x509 -text (Exitcode: 1)\n\nDetails:\nunable to load certificate\n140735245852752:error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag:tasn_dec.c:1198:\n140735245852752:error:0D07803A:asn1 encoding routines:ASN1_ITEM_EX_D2I:nested asn1 error:tasn_dec.c:372:Type=X509\n140735245852752:error:0906700D:PEM routines:PEM_ASN1_read_bio:ASN1 lib:pem_oth.c:83:\n```\n Too many certificates bit me, too.\n\nRelated to this, creation or renewal attempts that fail end up leaving orphaned .csr files.  On failures, those should be removed as they just accumulate with each new attempt.  I haven't yet seen any value to keeping unusable .csr files around.\n\nSemi-related to the general concept of cleanup, renewal or changed certs (e.g., those that had a SAN added or removed) that succeed will leave the old .pem and .csr files.  On success, there should be some kind of cleanup function to keep the directory tidy. If removal is undesirable, then  moving those older files into an archival subdirectory would be a reasonable alternative.  That would make it easier for admins to script a backup/cleanup pass, too.\n I got here because I too am getting the \"failed to run X509\" error, but I am *not* getting the rate limit error.  Can anyone tell me why I'm getting this error message?  I'm using letsencrypt with the le-godaddy-dns module:\r\n\r\n + Signing domains...\r\n + Generating private key...\r\n + Generating signing request...\r\n + Requesting challenge for gotchatbot.com...\r\n + Already validated!\r\n + Requesting certificate...\r\n + Checking certificate...\r\n  + ERROR: failed to run x509 -text (Exitcode: 1)\r\n\r\nDetails:\r\nunable to load certificate\r\n140583927391904:error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag:tasn_dec.c:1338:\r\n140583927391904:error:0D07803A:asn1 encoding routines:ASN1_ITEM_EX_D2I:nested asn1 error:tasn_dec.c:390:Type=X509\r\n140583927391904:error:0906700D:PEM routines:PEM_ASN1_read_bio:ASN1 lib:pem_oth.c:83:\r\n  Subj.\n\nI running letsencrypt.sh first time and using this instruction: https://www.metachris.com/2015/12/comparison-of-10-acme-lets-encrypt-clients/\n\n```\n# ls\nconfig.sh  config.sh.example  domains.txt  domains.txt.example  letsencrypt.sh  LICENSE  README.md  test.sh\n# cat domains.txt\nle.amet13.name\nlebeta.amet13.name\n# ./letsencrypt.sh\nUnknown parameter detected: \n```\n yes, there are. Have a look at https://github.com/lukas2511/letsencrypt.sh#domainstxt - see the naked domain mentioned first?\n Not any difference.\n what did you expect to happen? Did you read https://github.com/lukas2511/letsencrypt.sh#usage ?\n > Did you read https://github.com/lukas2511/letsencrypt.sh#usage ?\n\nYes.\n\nCan you show step by step, how can i create certificate for domain with letsencrypt.sh? I can't understand it.\n I wrote down how I succeeded here: http://blog.mro.name/2015/12/lighttpd-letsencrypt-sh/\n  Since the script keeps all the old certificates as a backup, the folders can get messy after a while. So I thought, a cleanup command would be useful. When there are a lot of different domains, there would be a lot of files to delete manually, so this command helps by checking, which certificates are used and deletes the other ones.\n\nI was thinking about how to implement it, and I think an automated or implicit cleanup would be against the thought of having backups in case of trouble. So I came up with this extra command, so the cleanup can be started explicitly, when the certificates are working fine.\n\nI was thinking about only deleting expired certificates, but first I wanted to start with this idea, so we can discuss on this basis.\n Yes, I was thinking about it too, to only delete expired certificates. This can be added quite easily with OpenSSL's `checkend` command. That's probably safer.\nThe list thing was an quick and easy way of verifying, that the files aren't linked anymore, so no linked files are touched.\n  example.com www.example.com something.example.com\n\nCurrent flow:\n1. Request example.com challenge\n2. Deploy example.com challenge response\n3. Verify example.com challenge response\n4. Clean example.com challenge response\n5. Request www.example.com challenge\n6. Deploy www.example.com challenge response\n7. Verify www.example.com challenge response\n8. Clean www.example.com challenge response\n9. Request something.example.com challenge\n10. Deploy something.example.com challenge response\n11. Verify something.example.com challenge response\n12. Clean something.example.com challenge response\n13. Request certificate\n\nProposed flow:\n1. Request example.com challenge\n2. Request www.example.com challenge\n3. Request something.example.com challenge\n4. Deploy example.com www.example.com something.example.com challenge responses\n5. Verify example.com challenge response\n6. Verify www.example.com challenge response\n7. Verify something.example.com challenge response\n8. Clean example.com www.example.com something.example.com challenge responses\n9. Request certificate\n\nThis is more useful with DNS challenges, since DNS may take extra time to update, and you can touch the DNS record once for all subdomains. \n\nHowever, this can also apply to HTTP challenges, where maybe your upload/copy script can push all challenges once, or maybe you need to reload your web server config only once, etc.\n If it's not the direction you want to go, that's fine. [I already have it working in my fork](https://github.com/erorus/letsencrypt.sh/compare/master...erorus:namecheap-dns?expand=1) (just ignore all that PHP crap). I thought I'd suggest it and get your take on it.\n\nThanks so much for your script. :)\n erorus's patch looks pretty tiny/clean - would be nice to see this. Would isolating it into a self contained PR work?\n Submitted PR: https://github.com/lukas2511/letsencrypt.sh/pull/114\n\nI defaulted it to current behavior so as not to break existing scripts.\n I just looked at the commit and have a question. In line 403, the challenge_token is removed if you use http-01. Why do you do it again in the lines 423 - 428?\n I think he's doing that because if the challenges are all generated up front, and then the process is interrupted in middle due to error - that will insure that the leftover ones are cleaned up (the ones for which the cleanup hook wasn't fired.)\n It seems that the script just iterates (batches) and calls the HOOK handler for each domain/subdomain.  Is there a way to signal the handler that we have received the last iterative domain?  Reason being is on the last subdomain, our HOOK handler will invoke a \"wait for DNS validation\" to ensure that all TXT entries are now being seen by our three authoritative (djbdns) DNS servers.  We batch up DNS changes and push them out to the primary/secondaries every 60 seconds (or less).  Possibly add a configurable \"magic\" value that is send after the last domain.\n  This adds support for the new dns-01 challenge!\n\nATTENTION: This challenge is currently only available in staging, see: https://community.letsencrypt.org/t/dns-challenge-is-in-staging/8322\n\nI added a example script on how to deploy a DNS challenge using nsupdate. This should be easy to port to other APIs/services.\n\nI am uncertain if \"urlbase64\" is the correct way in this case or if this should be a \"base64 -w0\".\n\nSee also: https://tools.ietf.org/html/draft-ietf-acme-acme-01#section-7.5\n I think we want to make it users as easy as possible. I don't mind not putting the hook script into the repository but it should be documented somewhere as an example how to do things.\n\nIf you are OK with the rest of my changes I can redo the pull request sometime tonight after you pushed your changes.\n updated with #76 and #77 so this one can be closed\n  If all references of $(mktemp) were changed to $(mktemp -t tmp) this would work universally, as some older OS's (FreeBSD 5.5 for example) will fail if no prefix option is provided:\n\n```\n$ mktemp\nusage: mktemp [-d] [-q] [-t prefix] [-u] template ...\n       mktemp [-d] [-q] [-u] -t prefix\n```\n\nbut adding -t tmp will generate the same desired result:\n\n```\n$ mktemp -t tmp\n/tmp/tmp.y4A4wnen\n```\n We've got one old FreeBSD machine that just keeps on running, needed for some legacy hosting applications. I wasn't sure at what point mktemp changed to support a no-option default, so I figured I'd report the simple work-around. Given the divergence between BSD and GNU, the wrapper is a great idea. Since config.sh is sourced, it would allow for a lot of localized \"workarounds\".  Thanks for the suggestion.\n\nAlso, thank you for your work on letsencrypt.sh itself. It's a relief to not have to load up the FreeBSD letsencrypt client package as it has about 3 dozen Python dependencies that I'd have no other need for.  Your shell script plus curl is a far more elegant, simple, lightweight solution. Nicely done!\n Works great! Thank you, Lukas!\n ...and sadly this fails on QNAP -\n\n```\nmktemp: invalid option -- t\n```\n Lukas, if you want to revert the -t option so QNAP works, I'm fine with that. We retired our old FreeBSD machine so this is no longer a concern. Your idea of the wrapper as a workaround is probably best for any legacy cases that arise.\n I've had a quick look, and for some reason mktemp doesn't want to work properly on there anyway - so don't revert - this needs looking into more as something else seems funny - not a linux guy here, but I can try things out - mktemp output on QNAP -\n\n```\n[/share/MD0_DATA/Projects/letsencrypt] # mktemp -d\nBusyBox v1.01 (2016.01.30-05:36+0000) multi-call binary\n\nUsage: mktemp [-dq] TEMPLATE\n\nCreates a temporary file with its name based on TEMPLATE.\nTEMPLATE is any name with six `Xs' (i.e., /tmp/temp.XXXXXX).\n\nOptions:\n        -d              Make a directory instead of a file\n        -q              Fail silently if an error occurs\n\n```\n @lukas2511 please note, that '-t' is deprecated, see http://www.gnu.org/software/autogen/mktemp.html - dont use it!\n   indeed, the hook is how I did it for lighttpd: http://blog.mro.name/2015/12/lighttpd-letsencrypt-sh/\n Haven't thought about using the hook. Good idea ;)\n  Without realising (what you mean RTFM?!) I hit the limit quite quickly\n\nIt would help to document this fact and use the staging server by default to test.\n Can you modify the readme to make it much clearer then ?\n\nIt may save a few people a lot of problems !\n @reetp Just provide a PR for anything that may help people circumvent this.\n Agree that default should be live but that we should warn regarding rate limit and show how to use the staging server (it\u2019s not even mentioned at the moment and people have to hunt down the URL separately). I\u2019ve just updated the readme with that info and added a pull request: https://github.com/lukas2511/letsencrypt.sh/pull/135 \u2014 hope it helps :)\n Nice thanks ! \nIt is easily overlooked when you are staring to play.\n  On abort with \"Challenge is invalid! (returned: invalid)\", exit value 0 is returned - any other value would be expected.\n thank you\n  The [current script](https://github.com/lukas2511/letsencrypt.sh/blob/f090fbcf7f773c82676e54e37336cffe2fbd7139/letsencrypt.sh#L41) uses `${HOME}`, when in some cases it might not be set in the environment. The use case where it happens is using letsencrypt.sh as a systemd service/timer set.\n\nThis causes this issue:\n\n```\nletsencrypt.sh[]: [...]/letsencrypt.sh: line 30: HOME: unbound variable\n```\n\nAs this is used to find plausible config file locations, I wouldn't know what's the best way to avoid this issue. The `${HOME}` location _might_ be important for some cases, for mine it isn't.\n\nAs a stop-gap solution (for anybody setting up a systemd timer), it can be set explicitly.\n\n```\n[...]\n[Service]\nEnvironment=\"HOME=/root/\"\n[...]\n```\n\nPersonally, I would use `~` instead of `${HOME}` which does always resolve to the current user's home, even when neither `${HOME}` or `${USER}` are in the environment. There is one caveat with the use of `~`, its properties around quoting are different than those of variables. I have not tested with a folder with spaces as a home folder, but I would guess that it would be even rarer than an execution of the script with a barebones environment. I think that with the current use, the quoting would still be fine, as long as it is used like so, unquoted: `~/.letsencrypt.sh`.\n\n---\n\nHere's a test case: `/usr/local/bin/tildeexpansion.sh`\n\n```\n#!/bin/bash\n\nunset HOME\n\nset -e\nset -u\n\necho ~\necho ~/.letsencrypt.sh\n\necho \"${HOME:-$(echo ~)}\"\necho \"${HOME:-$(echo ~)}/.letsencrypt.sh\"\n\necho \"${HOME:-~}\"\necho \"${HOME:-~}/.letsencrypt.sh\"\n\necho \"${HOME}\"\necho \"${HOME}/.letsencrypt.sh\"\n```\n\nTo run as a systemd service: `/etc/systemd/system/tildeexpansion.service`\n\n```\n[Unit]\nDescription=Tests tilde expansion\n\n[Service]\nType=oneshot\nExecStart=/usr/local/bin/tildeexpansion.sh\n```\n\nIt can be run with `sudo systemctl daemon-reload; sudo systemctl start tildeexpansion`. `/usr/local/bin/tildeexpansion.sh` needs to be executable. The output can be looked at using `sudo journalctl --unit tildeexpansion`. This test case service _will_ fail since the exit code of the script is a failure.\n\nReferences:\n- http://mywiki.wooledge.org/BashPitfalls#echo_.22.2BAH4.22\n- http://mywiki.wooledge.org/BashPitfalls#export_foo.3D.2BAH4-.2Fbar\n- https://www.gnu.org/software/bash/manual/html_node/Tilde-Expansion.html\n  Hi! When i try to run the script without any parameters, it tries to use the \"column\" command, which may not be available on every system (but is found in the bsdmainutils package on debian/ubuntu, at least).\n    It's also faster as `grep -q` finishes on the first matching line.\n  Any plans to add a license to this project?\n It's anything else than simple. :-)\n\nAnd for being undecided, http://choosealicense.com/ might help. :-) If you don't care at all, I recommend the [WTFPL, the Do What The Fuck You Want To Public License](http://www.wtfpl.net/). The name is more or less also the license text. ;-)\n\nProblem is that due to common laws, if you don't declare a license, basically no one is even allowed to copy that file. :-(\n  - Unify the use of multiple sed commands.\n- Use \"assing default value\" expansion for defaults\n- On tiny shorthand conditional\n The [[ => [ still was left over when I thought I'd convert the script to posix shell.\nThe Assign default value did not assume the variable to be null instead of unset. Usually I prevent pollution by using unset. Fixed now.\n  permanent redirect to https:// + access to acme-challenge\n    The construct\n\n<(cat \"${OPENSSL_CNF}\" <(printf \"[SAN]\\nsubjectAltName=%s\" \"${SAN}\"))\n\nleads to\nNo such file or directory:/usr/src/secure/lib/libcrypto/../../../crypto/openssl/crypto/bio/bss_file.c:126:fopen('/dev/fd/63','rb')\n\nunder FreeBSD, if fdescfs is not mounted.\n\nA simple\n\n  cp \"${OPENSSL_CNF}\" /tmp/foo.cnf\n  printf \"[SAN]\\nsubjectAltName=%s\" \"${SAN}\" >> /tmp/foo.cnf\n  openssl req -new -sha256 -key \"${BASEDIR}/certs/${domain}/${privkey}\" -out \"${BASEDIR}/certs/${domain}/cert-${timestamp}.csr\" -subj \"/CN=${domain}/\" -reqexts SAN -config /tmp/foo.cnf\n\nmakes it work here.\n    \u2026of the existing cert => config changed\n\ntries to fix issue #18 \n Sorry, no idea while the test fails\n  $ ./letsencrypt.sh --domain test1.com --domain test2.com -c\nOnly one command can be executed at a time.\nSee help (-h) for more information.\n\nThis is obviously wrong. Fixed it.\n This is a design choice. I like the current approach more, e.g. only one cert will be generated when the domain parameter(s) are used\n  revoke: follow symlink and use real certificate filename so we move the file and not the cert.pem symlink\nrevoke: check if the given cert file exists, otherwise show error message and abort\n IMHO this is only a cosmetic problem\nBoth our webserver (can not start without a certificate) and letsencrypt.sh (will generate new cert) will behave the same with a dangling cert.pem symlink or no cert.pem file at all\n  For both the command line and `domains.txt`, it would be nice to handle the very common case of singing both  `example.tld` and `www.example.tld` without the need to always specify both domains. Nginx uses a syntax of `.example.tld` which automatically expands to `example.tld` and `www.example.tld`. Would be nice if `letsencrypt.sh` supports this syntax the same way.\n Uh, yeah, sorry, I remembered that differently. Any other idea for a syntax similar to this that could enable that feature? Or do you prefer to not support such magic?\n Ok. Your proposal sounds cool, though. Will reduce the possible amount of human error greatly. You can also kinda support my proposal when you take an empty field as if no subdomain was specified (i.e. `(|www).example.tld == (www|).example.tld == example.tld www.example.tld`). \n I see. Last suggestion before I'll stop annoying you ;) Either \u2026\n- you can use the first match in the brackets as the path (so `(www|).example.tld --> certs/www.example.tld/cert.crt` and `(|www).example.tld --> certs/example.tld/cert.crt`), or\n- you can always default to the generic domain as the path if the first entry is multimatch (`(stuff|mail).example.tld --> certs/example.tld/cert.crt`) \u2013 this is probably the more obvious option\n\nDoes that sound like a viable option?\n Is this implemented now for v2? Or how does one specify wildcard cert?  When letsencrypt.sh creates ${WELLKNOWN}, it should probably `chmod 0711` it, otherwise it has 0700 mode.\n +1\nnginx can't read it and return \"Permission denied\", so challenge is invalid.\n  I've seen in the code that this script prints output even if there is nothing to do.\n\nI like my cron scripts to only print output (and thus sending an email notifying me) if there is an error. This could be controlled by a parameter (e.g. -q).\n\nI am yet unsure about successful certificate renewal - maybe there could be another parameter if there is a message printed in that case.\n My unsorted thoughts:\n- One way to solve this would be to channel all messages through a function e.g.:\n  msg LOGLEVEL [-n] MESSAGE\n- I don't like that the script defaults to cron mode as cron and \"interactive\" mode have different focus\n  - cron mode: only show ERROR and perhaps WARNING messages\n  - \"interactive\" mode/call from the command line: should be more verbose to help the user understand the process of the script\n    => I suggest to drop the default mode and revert the default to a short help message and run the script with \"-c\" from cron.\n- I would like to see a logging functionality. Especially when running from cron I only want to get emails when a problem occured but from time to time it would be useful the browse the logfiles to verify my setup works as intended.\n I personally like to see a message after a successful `--cron` renewal, as well as a diagnostic message when the script did run but verified the certs are all still valid. So maybe reduce the messages but at least print a summary of the actions taken, e.g.\n\n> Renewed the following certificates: \n>     - domain.tld www.domain.tld\n>     - example.tld www.example.tld\n> The following certificates are still valid for at least %{RENEW_DAYS} days:\n>     - mail.example.tld\n @lukas2511 Thanks for pointing out stderr/stdout. Although I am still in a process to decid which client to use on my server, this shell script looks good to me and the people friendly - so chances that I'll involve myself here are good.\n\nI thought a bit more about the cron output and it occured to me that most scripts I know use the cron mail facility just for script errors and can additionally send customized mail messages or writes to a log. For example the excellent 'apticron', a cron script for debian updates, can be configured that it sends an email if there are pending updates - even with the changelog, if apt-listchanges is installed. Thats perfect for an admin to receive a mail, if and only if there is a new updateable package.\n\nFor letsencrypt.sh I imagine that it could have a configurable mail address to send mail with subject \"Certification for domain x successfully renewed\" or \"Certification renewal failed for x\" with details in the body. This way I could setup a mail filter to mark successes as read (I don't need to read them, but now they are present as a kind of history) and if there is an unread mail from this script I am alerted to look into it (which is not the case if every run creates a mail and I have to check each for errors). The standard mail for the cron output could then be reserved for actual runtime errors of the script itself.\n\nHow does that sound?\n Yeah this should be within the cron script that itself calls `letsencrypt.sh` and redirects STDERR & STDOUT to your mail template.\n Hi,\n\nFirst; thanks for this script. Much cleaner and simpler and cronnable than the le client. \n\nI would also like a -q | --quiet option. I understand the wrapper-approach but I think -q would be simpler. Am I correct in thinking the -q option is still on the table? I suppose the steps would be:\n1. Add _msg function, called with $(level) and $(message), where a date is added and where later writing to a logfile can be handled;\n2. Add _debug, _info, _warn, _error functions, called with $(message) that call _msg with the appropiate level;\n3. Replace (almost) all echo statements with calls to _debug, _info, _warn, or _error;\n4. Add handling for --verbose and --quiet. -v would add debug to info, warnings and errors, -q would show only errors.\n5. Have beer.\n\nHow about this?\n Can I do this? I think my coding [quality] would at least be a start but I have never used github before.\n Hi, I've added the _msg function and loglevel variable, could you have a look sometime to see if this fits in? It works, i.e. using --quiet or -q silences all output if nothing is to be done.\n\nI still need to add the _debug, _info, _warn, and _error functions I suggested above. I ran into issues with printf statements and the echo ... &>2 statements. I didn't touch the latter. \n\nLet me know.\n Ok. I see your point. \n\nWhy not use exit codes? A wrapper can capture the output, and only when the exit code > 0, output the output so to speak. \n\nThen again, a script to call a script is not really clean or uncomplicated. The whole (my) point of a bash script for Letsencrypt is automation. And from automation follows a fair requirement to only output messages when relevant.\n I meant adding exit code 2 for renewal, 3 for revoke, but on second thought this is rather unusual for bash scripts. I don't think grepping the output is a clean solution, btw.\n\nMeanwhile, I'm extremely happy with the --quiet option in my fork. :-) \n Hi Lukas, hi all!\n\nI have another suggestion for the handling of messages, see: https://github.com/germeier/letsencrypt.sh/commit/49c82ef56dc68fb71e58d96d1404aa912608965e\n\nI added logging to a logfile with different levels for logging (LOGLEVEL) and console output (MSGLEVEL). This way we can make our console output quiet but still have more information in the logfile.\n\nFor my usecase LOGLEVEL=3 and MSGLEVEL=2 should work nicely.\n\nWhat do you think?\n Fwiw, I think it's great.\n @lukas2511 How about writing messages below a specified log level to a temporary file and change the msglevel retroactively if the msglevel was reached? untested code: https://github.com/germeier/letsencrypt.sh/commit/6da372f76eb9ba4c85ce040da1f4ac8cbc4cbb2f\n ```\nMSGLEVELHIGH=\nMSGLEVEL=${MSGLEVELHIGH}\n```\n\nThese lines obviously need to be switched. :)\n I just wanted to say \"me too\".\n\nHistorically, cron scripts output nothing unless there is an error (which then gets emailed to root or a root alias).\n\nMy suggestion, is to send normal output to syslog (journal/systemd) and let the administrator handle it via the existing methods of log handling. I believe this method is more appropriate than creating your own log file, which we admins would have to keep track of and \"logrotate\" every now and then.\n\nThank you for this great script.\n I'm using chronic as a wrapper to this script (https://joeyh.name/code/moreutils/). It will output to stdout/stderr only, if the exit code is not 0. This way I'll get an email notification from cron only if an error occurs but not if everything worked as expected.\n That's nice! I didn't know these tools existed. Learned something new.\n\nMeanwhile, I get this, and only this when it's renewal time:\n\nVan: root@example.com (Cron Daemon)\nOnderwerp: Cron root@example.com /etc/letsencrypt.sh/letsencrypt.sh --cron --quiet\nDatum: 19 maart 2016 03:00:47 CET\nAan: root@example.com\n\n(Less than 30 days). Renewing!\n- Generating private key...\n- Generating signing request...\n- Requesting challenge for example.com...\n- Responding to challenge for example.com...\n- Challenge is valid!\n- Requesting certificate...\n- Checking certificate...\n- Creating fullchain.pem...\n  Reload imap server\n  Reloading IMAP/POP3 mail server: dovecot.\n  Reload de mailserver\n  Reloading Postfix configuration...done.\n- Done!\n @WhoHasMyUsername Where did you take the --quiet option to letsencrypt.sh ? I don't see it in the valid parameters. Also, count me in for this feature !\n **cronic** is really the type of tool you want to use for this kind of issue. You should set up monitoring for certificate expiry anyways and therefore the regular output of letsencrypt.sh can be supressed unless an error occurs. I do not see a **real** need for a quiet option.\n I understand, but for it to work, a different return code should be used is a certificat is renewed, which is not the case right now. WIthout that I doupt that cronic can't tell...\n chronic is another tool (to maintain), afaik not installed by default.\n\n -q or --quiet is imho not _that_ outlandish an option. \n @rossnick why do you want to be notified when a certificate renewed successfully? One should set up proper monitoring for certificate lifetimes and not really care about letsencrypt.sh output unless it is erroneous.\n\nI do not have a strong opinion on --quiet as long as the default behaviour is not changed.\n Because on some servers, I don't want to restart/graceful apache unconditiionnaly. On other even a graceful restart is costly in term of load and cpu because of the heavy hits.\n I see. That's where the hooks come into play. See **deploy_cert** hook in which you can execute commands depending on the cert that has just been successfully deployed.\n Oh ! Thanks @maxlin1990 I never tought of that... It'll be trivial to send an email with a hook script. I could then use a return code check to send an email if there's a problem...\n I like the idea of a \"_msg\" function instead of a plain \"echo\" as suggested by @WhoHasMyUsername \nHowever, I don't like the idea of discarding a message because it makes problems hard to find.\nI would like to suggest to make \"_msg\" send all output to a syslog facility instead of discarding it.\n @Aikhjarto For my part, I ended up deploying cronic to all my servers, and used a hook script to send me an email whenever a cert is deployed. I now have much less noise from cron output, and it's viable for me that way.\n Hi Lukas!\r\n\r\nWhat do you think if some examples of cron setup will be added to Dehydrated documentation?\r\n\r\nWith suggestions to use one of (at least):\r\n\r\n1) chronic  (@rossnick, could you please provide an setup example?)\r\n2)  /usr/bin/dehydrated -c 1>/dev/null     (with explanation what error messages will go to STDERR anyway)\r\n\r\n?\r\n\r\nThis can avoid of reporting new issues/PR like #331.  For integrating this script into a webserver with several seperated vhosts it would be great if it could gather the domain info also from files in a directory named domains.txt.d (if it exists). It would function like any other *.d config directory, i.e. concatenating all files with suffix txt. \n  Currently the regex for hostnames seems to be incorrectly escaped as hostnames like smokeping.example.com are incorrectly parsed.\nI've doubled escaped the:\n\nsed 's/^\\s_//g;s/\\s_$//g' \n\nto:\n\nsed 's/^\\\\s_//g;s/\\\\s_$//g'\n\nand now it works for me.  \n  Hello,\n\nI use your script on old gentoo instalation and get this error:\n./letsencrypt.sh: line 135: shasum: command not found\n\nSo i've just changed \"shasum -a 256\" to \"sha256sum\" and it works ! I know I use very old instalation, but that's why I don't/can't use official letsencrypt client. \n Or you can create a script called shasum in /usr/bin or /usr/local/bin with this in it:\n\n``` shell\n#!/bin/bash\nshift 2\nsha256sum $@\n```\n\nM.\n I think shasum comes from Perl and if author want this project to be perl independent this should be changed.\n You are right. And \"sha256sum\" is shorter ;-)\n  Makes it work with Nginx config in README\n  When deploying your script, I found that you are using SCRIPTDIR as fall-back directory. This is very error-prone, and completely unnecessary (as BASEDIR defaults to SCRIPTDIR).\n\nFor security sake, NOTHING should be relative to SCRIPTDIR, not even the config.sh file location (I did not patch this as it would change the basic bahaviour).\n\nSome further suggestions:\n- use only one default location for config.sh (e.g. /etc/letsencrypt.sh/config.sh), as an attacker can do nasty stuff if he gets access on any of the config locations\n- don't use default config if config.sh is not found, as this does most probably break things for most users\n Yeah well, grabbing config from the correct location is always a pain (as you said, every distro does it differently), and this is even more true for testing.\n\nHaving a `-f <config-file>` flag kind of solve my concerns, as all the looking-for-config-magic does not happen if I always run `letsencrypt.sh -f /path/to/myconf.sh` (e.g. in cron job).\n  I really dislike the current \"--sign (-s) domain.tld\" command for several reasons:\n1. I want to be able to sign a certificate for testing purposes without having to add it to domains.txt. Even one with multiple SAN names!\n2. Even when specifying a domain on the command line I want to be informed that the certificate in questing is still within my definied useful time frame (e.g. longer valid than RENEW_DAYS) before really forcing a renew\n3. In the long run the letsencrypt.sh script should be able to work properly without any config files only using default values and command line options.\n\nTherefor I suggest the following patch.\n Sorry, I'm to stupid for git squash. Will fix this tonight.\n replaced by #49 \n  As evidenced here:\nhttps://github.com/lukas2511/letsencrypt.sh/blob/d322e072d643dcee63785be1742a56a8178f74c0/import-certs.sh#L14\n\nThe actual paths checked by letsencrypt.sh:\nhttps://github.com/lukas2511/letsencrypt.sh/blob/0e92aba206a60e00077d4b49e9479136f65587dc/letsencrypt.sh#L29\n I really don't like that this is a separate script. Is there a reason this shouldn't be handeld with an \"--import-certs / -i\" option command in the main script?\n > I really don't like that this is a separate script. Is there a reason this shouldn't be handeld with an \"--import-certs / -i\" option command in the main script?\n\nPlease don't include helper scripts into the main script. I think the main reason why people are / will be using letsencrypt.sh is because it's simple and straightforward.\n I agree with **digint** here. Other than copying the whole configuration file searching block, I can see two ways, one really \"simple\" and the other not that complex that would make it find the proper config file.\n1. Getting `CONFIG_DIR` from environment `CONFIG_FILE=\"${CONFIG_FILE:-${SCRIPTDIR}/config.sh}\"` which is unwieldy, but would allow the configuration file to be found anywhere.\n2. Asking the main script for the config file. The import script already know about `SCRIPT_DIR`, which means it know where letsencrypt.sh is. It could source the script using a particular command (`--source`?) which would basically \"do nothing\", which makes the environment available in the script that sourced it.  \n   This approach is cleaner, but does not allow passing `--config` to the import script. With care, part of the `letsencrypt.sh`'s arguments parsing could work through the sourcing, but I'm not sure how clean and how easy it would be,\n I agree with **samueldr** and **digint**. It's much cleaner to have an external helper script. Especially since that helper script will have to have multiple parts when deploying to a secondary machine (as digint did in his pull request, which I very much like). [fixed typos]\n  First of all, thanks for this wonderful script!\n\nI implemented a hook for deploying the certificates remotely via ssh, in two parts:\n- **ssh_hook.sh**:  the HOOK to define in config.sh.\n- **ssh_filter_letsencrypt.sh**: SSH ForceCommand to define in sshd_config (or command=\"...\" in authorized_keys) on the remote webserver.\n\nIf you like this patch, I will gladly write some documentation for it (something like the documentation of the ssh script I wrote for btrbk: https://github.com/digint/btrbk#setting-up-ssh).\n\nMaybe it would be good to introduce some \"contrib\" folder for scripts like these, let me know what you think!\n > Mh.. i don't really want to fill the repo with hooks, especially since the script is not yet in a stable form and hook handling may change at any time, requiring to update all example hooks...\n\nI understand completely. I'll come back to you when things are more stable, and until then people who are interested in my hook scripts will probably find it via my fork.\n\n> Maybe later we can add an \"example_hooks\" directory, but i'd keep it to 1 script-file per hook.\n\nWell the second script is here to further lock down the access to the webserver (which is a bit paranoid, but usually that's a good idea), which is done by defining a _ForceCommand_ in sshd_config.\nA much simpler solution would be to simply scp the challenge and certs, but this would require \"full\" ssh access, and paranoid people don't like this.\n  Sorry, the patch is ugly but I had to move some code around.\nNow only the handling of the command line is outside of functions\n\nRFC\n  It's possible to change domains.txt format to include webroot type domain aliases?\ni.e.\n/var/www/example.org/ apache example.org www.example.org\n/var/www/example.net/ nginx example.net www.example.net other.example.net\n/var/www/common/  mail mailhost.example.org webmail.example.org\n\nand modify hook calling to pass webroot and type to it.\n I like the format of optional parameter PARAMETER=value\n\nAnd passing these parameters as environment variables to hook script will be great and avoiding to surcharging hook parameter command line. \n Add minimal parser https://github.com/LynxChaus/letsencrypt.sh/commit/a0e62a4bcabe30e976b72e97898bbbd2baf62761\n\nAny suggestion?\n  hello\n\njust FYI\n\non pfSense there is another one dependency: bash\n\nand there something goes wrong\n\n```\n[2.2.5-RELEASE][root@gw.]/root/letsencrypt.sh: ./letsencrypt.sh\nUsing config file /root/letsencrypt.sh/config.sh\n+ Generating account key...\n+ Registering account key with letsencrypt...\nProcessing owncloud.example.com\n + Signing domains...\n + make directory /root/letsencrypt.sh/certs/owncloud.example.com ...\n + Generating private key...\n + Generating signing request...\ncat: /dev/fd/63: No such file or directory\nerror on line -1 of /dev/fd/63\n675592508:error:02001002:system library:fopen:No such file or directory:/usr/pfSensesrc/src.RELENG_2_2/secure/lib/libcrypto/../../../crypto/openssl/crypto/bio/bss_file.c:169:fopen('/dev/fd/63','rb')\n675592508:error:2006D080:BIO routines:BIO_new_file:no such file:/usr/pfSensesrc/src.RELENG_2_2/secure/lib/libcrypto/../../../crypto/openssl/crypto/bio/bss_file.c:172:\n675592508:error:0E078072:configuration file routines:DEF_LOAD:no such file:/usr/pfSensesrc/src.RELENG_2_2/secure/lib/libcrypto/../../../crypto/openssl/crypto/conf/conf_def.c:197:\n```\n Does the <(...) construct work on pfsense?\n yes, bash installed and works nice\n Does the following work?\n`\nbash -c 'cat <(cat <(echo hi))'\n`\n  Hi @lukas2511 . Could I ask you to elaborate on what exactly is protected. My situation is that I wish the script to be accessible asynchronously to renew certificates of some of my domains. It will be accessed from different processes - possibly at the same time but renewals are performed for different domains. What are the repercussions if I use the `no-lock` argument?\r\nThanks a lot. @alexandresobolevski sorry for the late response: locking basically protects the script to write to the same files at the same time. if you register an account key first and control the script externally later on using the `-d domain.tld -d www.domain.tld` options there shouldn't be any remaining conflicts, but you should never use the no-lock option when running with a domains.txt  Add an option on registration request in order to be able to provide an email address. \n\nGoal is to be aware by email from Letsencrypt authority when certificates are closed to expire or to other communication they will do for outage for instance. \n  A variation with one single hook.\n\nFrom a comment of @germeier  on  pull request #25 \n  an initial try for command parameters and help text\n\nRFC\n OK, I will update this pull request tonight.\n\nWhat does the \"-c\" mode should do?\n I intend to change this pull request to getopt and after we are all happy with the new structure we can add new features using command line options. I already have a few ideas (e.g. using the software without the need for config files)\n continues on pull request #35 \n  Add a hook after creation of certificate in order to be able to clean challenge on remote servers and to upload created certs.\n I have created pull request #24 to replace this one with cleaner commits from last master. \n  as requested by issue #19 \n\nrequest for comments\n  Hi, \nas far as i can see from the code it can happen that if \"PRIVATE_KEY_RENEW = yes\" a new key is generated and activated - even if we are not sure if a new certificate was issued.\n\nMaybe the removal of the softlink an relinking should be done after the matching cert was issued.\n  I agree!\n\nThe protocol spec for \"Certificate Revocation\" looks straight forward. Anyone who is eager to implement this feature? Otherwise I would give it a try...\n  Until this change is made, what is the recommended way of handling this manually?\n  add openssl.cnf as a parameter. \n\nDefault path is not always /etc/ssl/openssl.cnf\n\nIt could be some of following:\n- OPENSSLCNF=/System/Library/OpenSSL/openssl.cnf\n- OPENSSLCNF=/etc/pki/tls/openssl.cnf\n- OPENSSLCNF=/usr/lib/ssl/openssl.cnf\n- OPENSSLCNF=/usr/local/ssl/openssl.cnf\n\nGoal is to avoid error like:\n\n```\n\nSigning domainwww.example.org (www.example.org)...\n  + Generating signing request...\ncat: /etc/ssl/openssl.cnf: No such file or directory\nunable to find 'distinguished_name' in config\nproblems making Certificate Request\n140735281533008:error:0E06D06C:configuration file routines:NCONF_get_string:no value:conf_lib.c:324:group=req name=distinguished_name\n```\n      Add sed as a parameter variable in order to be able to specify the sed version that must be used.\n\nThe goal is to be able to specify another sed program as the one to be used must be the GNU sed (-r parameter is used).\n\nFor instance default sed program on OS X is not supporting this parameter and launching lets encrypt.sh is displaying following error:\n\nsed: illegal option -- r\nusage: sed script [-Ealn] [-i extension] [file ...]\n       sed [-Ealn] [-i extension] [-e script] ... [-f script_file] ... [file ...]\n\nGNU sed can be installed from macport and its name is gsed. \n\nSo a simple SED=gsed in config.sh file is resolving this issue. \n  In a worst case scenario the new certificate is broken and we are left\nwithout a working certificate (or need to restore one from our backup).\n\nThis way we only need to change the symlink to the known working cert\n   Thanks, I was just thinking about implementing this myself.\nIMHO the time to renew before expiry should be a config option!\n You are totally right. PR now includes a config option.\n    Hi, this PR add some small style changes based on [Shellcheck](https://github.com/koalaman/shellcheck) suggestions and [Google Shell style](https://google.github.io/styleguide/shell.xm) guide.\n  Hello. Your script very nice and simple!\nHave questions: \n1. how to `revoke` cert? For one domain\\sub-domain. For all domain.\n2. how to `renew` cert? For one domain\\sub-domain. For all domain.\n3. how to use email (to notify about the expiry dates) if already use in official client..\n4. need or no need (and how) import account data from official client if before already generate for domain certs?\n5. crontab - simple add `letsencrypt.sh` to cron, no need params for script?\n6. your client are stable and production ready?\nIt would be nice if you added a FAQ for newbies (and not only).\nWhile that is all the questions)\n 1. not implemented yet\n2. just run the script, it renews all available domains (which have a directory)\n3. not implemented yet\n4. you need to \"import\" the list of domains and put them into \"domains.txt\", if you want to reuse the old private keys, see 2)\n5. yes, but cd to the right directory first. Also run it only every 30 days or so as it will resign all domains on each run (if you do that daily you'll run into rate limiting)\n6. it's 1 day old, so not stable ;-) - production ready depends on your definition I guess, works fine for me so far\n Thanks for reply. \nIf not difficult, do as in the original client - privkey.pem, cert.pem, chain.pem, fullchain.pem.\n\nI will watch for updates. Loved the script in terms of what is conventionally only 1 file (exclude perl script and configs), not a bunch of incomprehensible Python as some.. (sorry for my bad english)\n\nOfftop: Don't know for what the original client need e-mail? Only for notifications about the expiry dates?\n I would like to use your client for Apache under Debian.\n\nWhat do I have to do step-by-step (or at least a little bit more explained than in the readme)?\n\nDo I need a running webserver (Apache)?\nDo I need to edit the apache config files?\nIn what directory do I have to run the script?\n @lukas2511 thanks. Just to make it a bit easier for everyone and for me...\n\n1) the letsencrypt server will call back http:/mycooldomain/.well-known/acme-challenge\n\nRight?\n\n2) So if for nginx\n\n```\nlocation /.well-known/acme-challenge {\n  root /var/www/letsencrypt;\n}\n```\n\nletsencrypt.sh must be run from /var/www/letsencrypt\n\nRight?\n  Once I get a certificate using the production LetsEncrypt CA, the certificate doesn't seem valid and doesn't seem complete. For example, here is one I just created:\n\n```\n-----BEGIN CERTIFICATE-----\neyJ0eXBlIjoidXJuOmFjbWU6ZXJyb3I6dW5hdXRob3JpemVkIiwiZGV0YWlsIjoi\nRXJyb3IgY3JlYXRpbmcgbmV3IGNlcnQgOjogQXV0aG9yaXphdGlvbnMgZm9yIHRo\nZXNlIG5hbWVzIG5vdCBmb3VuZCBvciBleHBpcmVkOiB2ZXJibGVyLmNvbSB3d3cu\ndmVyYmxlci5jb20iLCJzdGF0dXMiOjQwM30=\n-----END CERTIFICATE-----\n```\n\nAm I supposed to be doing something else with the final `cert.pem` file once I the script finishes to make it a valid certificate?\n Ah OK, is it possible to error out if we get a base64 encoded error message? I recently ran into another one where I had hit the production limit for a domain name and got the base64 encoded error message in the \"certificate\" file...\n Error handling should be good enough now to handle all error messages from ACME.\n  From a purely syntactic point of view, there are some things that can be enhanced:\n- the shebang should be `#!/usr/bin/env bash` so your script is portable to other UNIX systems, such as *BSD that host the `bash` binary at `/usr/local/bin`\n- you may be able to change all and any use of `$*` and replace it with `$@` as the latter keeps arguments even if they contain spaces, whereas the former replaces `\"a     b\"` to `\"a\" \"b\"`\n\nI'll keep the script in my watch list and use it once when I'm ready to do some webadmin ;)\n  When requesting a certificate for a domain... I get through all steps successfully, even challenges; however, I get a curl error when requesting the actual certificate:\n\n```\n  + Requesting certificate...\ncurl: (22) The requested URL returned error: 403 Forbidden\n  + Done!\n```\n Also curious how to use the staging setup for LetsEncrypt so I can issue test certificates. Changing the CA to the typical \"https://acme-staging.api.letsencrypt.org/directory\" I use with the official LetsEncrypt client results in 404s.\n Yeah I gave that shot when I was experimenting and that turned the 404 into a 403 Forbidden:\n\n```\n  + Generating private key...\n  + Generating signing request...\n  + Requesting challenge for verbler.com...\ncurl: (22) The requested URL returned error: 403 Forbidden\n```\n Error after latest commits with `https://acme-staging.api.letsencrypt.org` as CA\n\n```\n  + Requesting challenge for verbler.com...\n  + ERROR: An error occured while sending post-request to https://acme-staging.api.letsencrypt.org/acme/new-authz (curl: (22) The requested URL returned error: 403 Forbidden)\n```\n Is there a way for me to receive the full error response body? Would that contain anymore info?\n Modified the script a bit and got the real error:\n- Error: Can't retrieve challenges ({\"type\":\"urn:acme:error:unauthorized\",\"detail\":\"No registration exists matching provided key\",\"status\":403})\n Resolved by deleting my privatekey.pem and letting it regenerate.\n I am stuck here here as well.\n\n```\n{\"type\":\"urn:acme:error:unauthorized\",\"detail\":\"No registration exists matching provided key\",\"status\":403}\n```\n\nContinually got this error until i ran it with just -c, then I got:\nThen i got this:\n\n```\n{\"type\":\"urn:acme:error:malformed\",\"detail\":\"Provided agreement URL [https://testca.kurz.pw/terms/v1] does not match current agreement URL [https://letsencrypt.org/documents/LE-SA-v1.0.1-July-27-2015.pdf]\",\"status\":400}\n```\n\nAfter setting my LICENSE to that value, which was a complete guess on my part, i then got that same 403 error....\n I was able to get around it by just using the -c option and removing my private key which I believe others did as well.  I am moving forward now.\n Is there any solution to use my own private key? -Its really annoying -I _have to_ use one of my private keys due to HPKP otherwise I cannot switch my certificate....\n", "text_all_count": 109186, "text_word_token": ["I", "can", "use", "dehydrated", "cron", "domain", "www", "NUMBER", "bortzmeyer", "NUMBER", "org", "for", "my", "domain", "and", "it", "works", "NUMBER", "Now", "I", "want", "to", "use", "my", "own", "CSR", "and", "I", "try", "signcsr", "sudo", "dehydrated", "signcsr", "NUMBER", "blog", "NUMBER", "csr", "domain", "www", "NUMBER", "bortzmeyer", "NUMBER", "org", "INFO", "Using", "main", "config", "file", "etc", "dehydrated", "config", "WARNING", "Extra", "configuration", "directory", "etc", "dehydrated", "conf", "NUMBER", "d", "exists", "but", "no", "configuration", "find", "in", "it", "NUMBER", "Requesting", "challenge", "for", "Subject", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "authz", "Status", "NUMBER", "Details", "type", "urn", "acme", "error", "malformed", "detail", "Error", "creating", "new", "authz", "Invalid", "character", "in", "DNS", "name", "status", "NUMBER", "rm", "cannot", "remove", "etc", "dehydrated", "domains", "NUMBER", "txt", "No", "such", "file", "or", "directory", "The", "domain", "name", "seems", "perfectly", "OK", "and", "it", "works", "with", "cron", "NUMBER", "In", "the", "CSR", "openssl", "req", "text", "in", "blog", "NUMBER", "csr", "Certificate", "Request", "Data", "Version", "NUMBER", "NUMBER", "x", "NUMBER", "Subject", "CN", "www", "NUMBER", "bortzmeyer", "NUMBER", "org", "NUMBER", "It", "seems", "the", "same", "subject", "as", "in", "the", "CSR", "generate", "by", "dehydrated", "cron", "NUMBER", "I", "tried", "with", "a", "ECDSA", "CSR", "and", "a", "RSA", "one", "same", "result", "NUMBER", "I", "m", "not", "sure", "it", "be", "a", "dehydrated", "bug", "of", "course", "it", "can", "be", "a", "Let", "s", "Encrypt", "one", "or", "a", "fault", "on", "my", "side", "but", "I", "cannot", "find", "it", "NUMBER", "wave", "bortzmeyer", "Can", "you", "share", "the", "full", "CSR", "Are", "the", "Subject", "Alternate", "Names", "well", "formed", "I", "m", "not", "sure", "it", "be", "a", "dehydrated", "bug", "of", "course", "it", "can", "be", "a", "Let", "s", "Encrypt", "one", "or", "a", "fault", "on", "my", "side", "but", "I", "cannot", "find", "it", "NUMBER", "I", "can", "at", "least", "rule", "out", "that", "its", "a", "bug", "with", "Let", "s", "Encrypt", "In", "the", "server", "side", "logs", "I", "can", "see", "that", "Dehydrated", "POSTed", "new", "authz", "with", "an", "invalid", "domain", "identifier", "in", "the", "authenticated", "JWS", "body", "identifier", "type", "dns", "value", "Subject", "I", "can", "t", "tell", "where", "the", "Subject", "value", "came", "from", "a", "bug", "with", "Dehydrated", "a", "problem", "with", "the", "CSR", "or", "both", "NUMBER", "It", "should", "be", "a", "domain", "name", "instead", "NUMBER", "Oh", "yes", "I", "should", "have", "send", "the", "full", "CSR", "NUMBER", "Here", "it", "be", "BEGIN", "CERTIFICATE", "REQUEST", "MIHWMH", "NUMBER", "CAQAwHTEbMBkGA", "NUMBER", "UEAwwSd", "NUMBER", "d", "NUMBER", "LmJvcnR", "NUMBER", "bWV", "NUMBER", "ZXIub", "NUMBER", "JnMFkwEwYHKoZI", "zj", "NUMBER", "CAQYIKoZIzj", "NUMBER", "DAQcDQgAE", "i", "NUMBER", "wLn", "NUMBER", "mwWMJ", "NUMBER", "S", "NUMBER", "zw", "lIyiWvpZ", "NUMBER", "iNVZ", "NUMBER", "aiq", "NUMBER", "omoG", "ZpUtF", "NUMBER", "blitUXKhYLUOmofQwrFqb", "NUMBER", "YNFZ", "NUMBER", "qHFXIWQJRMXA", "NUMBER", "AAMAoGCCqGSM", "NUMBER", "BAMC", "A", "NUMBER", "cAMEQCIGffhXFGK", "NUMBER", "TrqkQ", "NUMBER", "P", "NUMBER", "lGzwTRJQA", "NUMBER", "qCMkE", "NUMBER", "UOWgZ", "NUMBER", "gdx", "NUMBER", "AiAgU", "ilYgTG", "NUMBER", "OonzEqJ", "NUMBER", "izvfwRwiglGZ", "NUMBER", "yaZHun", "NUMBER", "Zg", "END", "CERTIFICATE", "REQUEST", "This", "be", "the", "ECDSA", "one", "but", "the", "RSA", "one", "triggers", "the", "same", "error", "NUMBER", "This", "CSR", "has", "no", "SAN", "s", "defined", "NUMBER", "At", "the", "very", "least", "have", "one", "SAN", "equal", "to", "the", "CN", "and", "I", "bet", "you", "ll", "be", "good", "NUMBER", "On", "Sep", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "St\u00e9phane", "Bortzmeyer", "TAG", "write", "Oh", "yes", "I", "should", "have", "send", "the", "full", "CSR", "NUMBER", "Here", "it", "be", "BEGIN", "CERTIFICATE", "REQUEST", "MIHWMH", "NUMBER", "CAQAwHTEbMBkGA", "NUMBER", "UEAwwSd", "NUMBER", "d", "NUMBER", "LmJvcnR", "NUMBER", "bWV", "NUMBER", "ZXIub", "NUMBER", "JnMFkwEwYHKoZI", "zj", "NUMBER", "CAQYIKoZIzj", "NUMBER", "DAQcDQgAE", "i", "NUMBER", "wLn", "NUMBER", "mwWMJ", "NUMBER", "S", "NUMBER", "zw", "lIyiWvpZ", "NUMBER", "iNVZ", "NUMBER", "aiq", "NUMBER", "omoG", "ZpUtF", "NUMBER", "blitUXKhYLUOmofQwrFqb", "NUMBER", "YNFZ", "NUMBER", "qHFXIWQJRMXA", "NUMBER", "AAMAoGCCqGSM", "NUMBER", "BAMC", "A", "NUMBER", "cAMEQCIGffhXFGK", "NUMBER", "TrqkQ", "NUMBER", "P", "NUMBER", "lGzwTRJQA", "NUMBER", "qCMkE", "NUMBER", "UOWgZ", "NUMBER", "gdx", "NUMBER", "AiAgU", "ilYgTG", "NUMBER", "OonzEqJ", "NUMBER", "izvfwRwiglGZ", "NUMBER", "yaZHun", "NUMBER", "Zg", "END", "CERTIFICATE", "REQUEST", "This", "be", "the", "ECDSA", "one", "but", "the", "RSA", "one", "triggers", "the", "same", "error", "NUMBER", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "or", "mute", "the", "thread", "NUMBER", "bllfr", "NUMBER", "g", "That", "part", "of", "the", "CSR", "bortzmeyer", "shared", "stands", "out", "to", "me", "as", "well", "but", "it", "do", "appear", "based", "on", "a", "quick", "skim", "of", "the", "Dehydrated", "source", "that", "this", "case", "_should_", "be", "handle", "LINK", "L", "NUMBER", "L", "NUMBER", "I", "m", "afraid", "we", "re", "outside", "of", "my", "depth", "now", "NUMBER", "It", "seems", "to", "me", "to", "be", "a", "Dehydrated", "bug", "so", "I", "m", "going", "to", "drop", "off", "this", "thread", "with", "the", "hope", "a", "maintainer", "can", "take", "over", "from", "here", "NUMBER", "Good", "luck", "I", "don", "t", "think", "dehydrated", "be", "balking", "on", "the", "CSR", "I", "think", "LetsEncrypt", "be", "NUMBER", "Nothing", "dehydrated", "can", "do", "to", "fix", "that", "NUMBER", "On", "Sep", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "Daniel", "McCarney", "TAG", "write", "bllfr", "NUMBER", "g", "That", "part", "of", "the", "CSR", "bortzmeyer", "shared", "stands", "out", "to", "me", "as", "well", "but", "it", "do", "appear", "based", "on", "a", "quick", "skim", "of", "the", "Dehydrated", "source", "that", "this", "case", "should", "be", "handle", "LINK", "L", "NUMBER", "L", "NUMBER", "I", "m", "afraid", "we", "re", "outside", "of", "my", "depth", "now", "NUMBER", "It", "seems", "to", "me", "to", "be", "a", "Dehydrated", "bug", "so", "I", "m", "going", "to", "drop", "off", "this", "thread", "with", "the", "hope", "a", "maintainer", "can", "take", "over", "from", "here", "NUMBER", "Good", "luck", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "or", "mute", "the", "thread", "NUMBER", "I", "don", "t", "think", "dehydrated", "be", "balking", "on", "the", "CSR", "I", "think", "LetsEncrypt", "be", "NUMBER", "Nothing", "dehydrated", "can", "do", "to", "fix", "that", "NUMBER", "bllfr", "NUMBER", "g", "Sorry", "I", "should", "have", "made", "my", "affiliation", "clearer", "NUMBER", "I", "work", "for", "Let", "s", "Encrypt", "and", "verify", "from", "the", "server", "side", "Let", "s", "Encrypt", "logs", "that", "this", "be", "not", "the", "case", "NUMBER", "Dehydrated", "be", "processing", "the", "CSR", "and", "something", "strange", "happens", "that", "results", "in", "an", "ACME", "request", "to", "the", "Let", "s", "Encrypt", "ACME", "server", "s", "new", "authz", "endpoint", "with", "an", "invalid", "identifier", "value", "NUMBER", "The", "CSR", "isn", "t", "sent", "to", "Let", "s", "Encrypt", "in", "the", "ACME", "v", "NUMBER", "world", "until", "the", "new", "cert", "POST", "and", "the", "error", "be", "occurring", "before", "then", "so", "we", "can", "say", "with", "double", "confidence", "it", "isn", "t", "Let", "s", "Encrypt", "rejecting", "the", "CSR", "NUMBER", "Mh", "NUMBER", "bortzmeyer", "what", "OS", "be", "you", "run", "dehydrated", "on", "Can", "you", "please", "post", "the", "output", "of", "dehydrated", "v", "cat", "etc", "debian_version", "NUMBER", "dehydrated", "v", "Unknown", "parameter", "detected", "v", "Usage", "usr", "bin", "dehydrated", "h", "command", "argument", "parameter", "argument", "parameter", "argument", "NUMBER", "Default", "command", "help", "Commands", "cron", "c", "Sign", "renew", "non", "existant", "change", "expiring", "certificates", "NUMBER", "signcsr", "s", "path", "to", "csr", "NUMBER", "pem", "Sign", "a", "given", "CSR", "output", "CRT", "on", "stdout", "advance", "usage", "revoke", "r", "path", "to", "cert", "NUMBER", "pem", "Revoke", "specified", "certificate", "cleanup", "gc", "Move", "unuse", "certificate", "file", "to", "archive", "directory", "help", "h", "Show", "help", "text", "env", "e", "Output", "configuration", "variables", "for", "use", "in", "other", "scripts", "Parameters", "full", "chain", "fc", "Print", "full", "chain", "when", "use", "signcsr", "ipv", "NUMBER", "NUMBER", "Resolve", "names", "to", "IPv", "NUMBER", "address", "only", "ipv", "NUMBER", "NUMBER", "Resolve", "names", "to", "IPv", "NUMBER", "address", "only", "domain", "d", "domain", "NUMBER", "tld", "Use", "specified", "domain", "name", "s", "instead", "of", "domains", "NUMBER", "txt", "entry", "one", "certificate", "keep", "going", "g", "Keep", "going", "after", "encountering", "an", "error", "while", "creating", "renewing", "multiple", "certificates", "in", "cron", "mode", "force", "x", "Force", "renew", "of", "certificate", "even", "if", "it", "be", "longer", "valid", "than", "value", "in", "RENEW_DAYS", "no", "lock", "n", "Don", "t", "use", "lockfile", "potentially", "dangerous", "ocsp", "Sets", "option", "in", "CSR", "indicating", "OCSP", "stapling", "to", "be", "mandatory", "privkey", "p", "path", "to", "key", "NUMBER", "pem", "Use", "specified", "private", "key", "instead", "of", "account", "key", "useful", "for", "revocation", "config", "f", "path", "to", "config", "Use", "specified", "config", "file", "hook", "k", "path", "to", "hook", "NUMBER", "sh", "Use", "specified", "script", "for", "hooks", "out", "o", "certs", "directory", "Output", "certificates", "into", "the", "specified", "directory", "challenge", "t", "http", "NUMBER", "dns", "NUMBER", "Which", "challenge", "should", "be", "use", "Currently", "http", "NUMBER", "and", "dns", "NUMBER", "be", "support", "algo", "a", "rsa", "prime", "NUMBER", "v", "NUMBER", "secp", "NUMBER", "r", "NUMBER", "Which", "public", "key", "algorithm", "should", "be", "use", "Supported", "rsa", "prime", "NUMBER", "v", "NUMBER", "and", "secp", "NUMBER", "r", "NUMBER", "OK", "I", "regenerated", "the", "CSR", "with", "openssl", "req", "new", "key", "blog", "NUMBER", "pem", "nodes", "days", "NUMBER", "subj", "CN", "www", "NUMBER", "bortzmeyer", "NUMBER", "org", "reqexts", "SAN", "config", "TAG", "Mh", "NUMBER", "Are", "you", "use", "the", "signcsr", "function", "combined", "with", "domain", "parameters", "Those", "be", "not", "designed", "to", "be", "use", "with", "this", "function", "and", "seem", "to", "be", "the", "trigger", "for", "this", "bug", "NUMBER", "I", "do", "NUMBER", "OK", "I", "ll", "try", "without", "domain", "it", "be", "in", "the", "CSR", "after", "all", "but", "the", "bug", "be", "still", "really", "damaging", "NUMBER", "Hi", "I", "know", "it", "s", "not", "relate", "to", "dehydrated", "and", "or", "the", "hooks", "but", "I", "miss", "understood", "something", "do", "I", "have", "to", "create", "the", "TXT", "_acme", "challenge", "NUMBER", "if", "yes", "where", "I", "find", "the", "VALUE", "may", "I", "have", "a", "concrete", "example", "Regards", "Jonathan", "You", "need", "to", "create", "a", "TXT", "record", "of", "the", "form", "_acme", "challenge", "NUMBER", "certificatedomain", "NUMBER", "tld", "NUMBER", "For", "example", "if", "my", "certificate", "name", "was", "certify", "me", "NUMBER", "example", "NUMBER", "org", "my", "TXT", "record", "would", "be", "_acme", "challenge", "NUMBER", "certify", "me", "NUMBER", "example", "NUMBER", "org", "NUMBER", "The", "value", "of", "that", "record", "will", "be", "given", "by", "the", "ACME", "CA", "server", "NUMBER", "Why", "would", "you", "delete", "the", "changelog", "thinking", "Im", "get", "this", "when", "trying", "to", "renew", "cert", "pi", "hassbian", "home", "homeassistant", "dehydrated", "sudo", "NUMBER", "dehydrated", "c", "INFO", "Using", "main", "config", "file", "home", "homeassistant", "dehydrated", "config", "Unknown", "hook", "this_hookscript_is_broken__dehydrated_is_working_fine__please_ignore_unknown_hooks_in_your_script", "Processing", "homehub", "NUMBER", "duckdns", "NUMBER", "org", "Unknown", "hook", "this_hookscript_is_broken__dehydrated_is_working_fine__please_ignore_unknown_hooks_in_your_script", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "Jul", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Less", "than", "NUMBER", "days", "NUMBER", "Renewing", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Received", "NUMBER", "authorizations", "URLs", "from", "the", "CA", "Handling", "authorization", "for", "TAG", "NUMBER", "duckdns", "NUMBER", "org", "NUMBER", "pending", "challenge", "s", "Deploying", "challenge", "tokens", "NUMBER", "OK", "Responding", "to", "challenge", "for", "TAG", "NUMBER", "duckdns", "NUMBER", "org", "authorization", "NUMBER", "Unknown", "hook", "invalid_challenge", "Cleaning", "challenge", "tokens", "NUMBER", "OK", "Challenge", "validation", "has", "fail", "ERROR", "Challenge", "be", "invalid", "returned", "invalid", "result", "type", "http", "NUMBER", "status", "invalid", "error", "type", "urn", "ietf", "params", "acme", "error", "connection", "detail", "Fetching", "LINK", "TAG", "NUMBER", "duckdns", "NUMBER", "org", "NUMBER", "well", "know", "acme", "challenge", "lTWkfYPlqBF", "NUMBER", "Um", "NUMBER", "MCCUrjjWJw", "NUMBER", "ti", "fmUEtUK", "NUMBER", "aiTA", "Connection", "refused", "status", "NUMBER", "url", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "u", "NUMBER", "O", "NUMBER", "vLkYh", "NUMBER", "_uORor", "NUMBER", "xZOhtnQyqtnB", "NUMBER", "glBOBAmT", "NUMBER", "xng", "NUMBER", "NUMBER", "token", "lTWkfYPlqBF", "NUMBER", "Um", "NUMBER", "MCCUrjjWJw", "NUMBER", "ti", "fmUEtUK", "NUMBER", "aiTA", "validationRecord", "url", "LINK", "TAG", "NUMBER", "duckdns", "NUMBER", "org", "NUMBER", "well", "know", "acme", "challenge", "lTWkfYPlqBF", "NUMBER", "Um", "NUMBER", "MCCUrjjWJw", "NUMBER", "ti", "fmUEtUK", "NUMBER", "aiTA", "hostname", "TAG", "NUMBER", "duckdns", "NUMBER", "org", "port", "NUMBER", "addressesResolved", "TAG", "addressUsed", "TAG", "You", "re", "use", "http", "NUMBER", "validation", "but", "the", "CA", "cannot", "resolve", "the", "name", "you", "be", "attempting", "to", "verify", "addressesResolved", "be", "empty", "and", "therefore", "cannot", "connect", "to", "do", "the", "validation", "NUMBER", "More", "specifically", "it", "looks", "like", "you", "have", "a", "broken", "domains", "NUMBER", "txt", "file", "NUMBER", "The", "CN", "be", "fine", "but", "there", "s", "a", "spurious", "NUMBER", "duckdns", "NUMBER", "org", "SAN", "with", "no", "subdomain", "on", "it", "NUMBER", "This", "be", "what", "cannot", "be", "validated", "NUMBER", "INFO", "Using", "main", "config", "file", "home", "homeassistant", "dehydrated", "config", "Dehydrated", "by", "Lukas", "Schauer", "LINK", "Dehydrated", "version", "git", "master", "after", "NUMBER", "GIT", "Revision", "NUMBER", "c", "NUMBER", "c", "NUMBER", "bd", "NUMBER", "a", "NUMBER", "f", "NUMBER", "f", "NUMBER", "aaff", "NUMBER", "c", "NUMBER", "bc", "NUMBER", "c", "NUMBER", "OS", "Raspbian", "GNU", "Linux", "NUMBER", "Used", "software", "bash", "NUMBER", "NUMBER", "release", "curl", "curl", "NUMBER", "awk", "mawk", "NUMBER", "Nov", "NUMBER", "Copyright", "C", "Michael", "D", "NUMBER", "Brennan", "sed", "sed", "GNU", "sed", "NUMBER", "mktemp", "mktemp", "GNU", "coreutils", "NUMBER", "grep", "grep", "GNU", "grep", "NUMBER", "diff", "diff", "GNU", "diffutils", "NUMBER", "openssl", "OpenSSL", "NUMBER", "t", "NUMBER", "May", "NUMBER", "domains", "NUMBER", "txt", "has", "only", "one", "line", "homehub", "NUMBER", "duckdns", "NUMBER", "org", "As", "part", "of", "the", "scripted", "process", "of", "setting", "up", "my", "webserver", "I", "try", "to", "request", "LE", "certs", "use", "the", "staging", "CA", "and", "only", "then", "try", "to", "request", "certs", "with", "the", "live", "CA", "if", "this", "be", "successful", "in", "order", "to", "try", "to", "prevent", "any", "configuration", "mistakes", "from", "triggering", "rate", "limits", "NUMBER", "I", "be", "use", "dehydrated", "NUMBER", "as", "that", "s", "what", "comes", "with", "my", "distro", "and", "therefore", "ACME", "v", "NUMBER", "Once", "I", "have", "my", "dehydrated", "configuration", "setup", "I", "run", "dehydrated", "c", "and", "then", "once", "again", "after", "I", "have", "commented", "out", "the", "staging", "CA", "NUMBER", "However", "dehydrated", "seems", "to", "think", "that", "my", "exist", "cert", "has", "not", "yet", "expired", "and", "so", "do", "not", "renew", "it", "NUMBER", "What", "would", "I", "need", "to", "do", "in", "order", "to", "let", "dehydrated", "know", "that", "I", "do", "genuinely", "need", "to", "request", "a", "new", "cert", "in", "this", "situation", "Thanks", "for", "any", "advice", "NUMBER", "My", "ISP", "recently", "blocked", "all", "inbound", "traffic", "on", "port", "NUMBER", "so", "I", "had", "to", "switch", "from", "get", "my", "cert", "the", "old", "fashioned", "way", "to", "this", "new", "fangled", "DNS", "NUMBER", "business", "NUMBER", "I", "switched", "my", "nameservers", "over", "to", "Cloudflare", "because", "the", "company", "I", "leased", "the", "domain", "names", "through", "doesn", "t", "have", "a", "suitable", "API", "NUMBER", "I", "had", "no", "luck", "get", "dehydrated", "to", "work", "until", "I", "add", "a", "NUMBER", "second", "delay", "into", "the", "script", "in", "between", "uploading", "the", "challenge", "string", "and", "the", "verification", "step", "NUMBER", "Is", "this", "something", "that", "could", "be", "add", "as", "a", "command", "line", "option", "in", "the", "future", "Thanks", "Honestly", "given", "that", "it", "be", "an", "issue", "limited", "to", "some", "hook", "script", "implementations", "I", "would", "personally", "see", "it", "as", "more", "of", "something", "that", "should", "be", "dealt", "with", "within", "the", "hook", "script", "rather", "then", "within", "dehydrated", "itself", "NUMBER", "For", "example", "a", "good", "DNS", "setup", "handle", "low", "volumes", "of", "domains", "shouldn", "t", "need", "more", "then", "half", "a", "second", "delay", "NUMBER", "However", "a", "larger", "volume", "DNS", "setup", "may", "have", "to", "rely", "on", "other", "propagation", "methods", "such", "as", "database", "mirroring", "which", "results", "in", "larger", "propagation", "delays", "NUMBER", "Hook", "scripts", "should", "check", "to", "ensure", "the", "change", "have", "propagated", "before", "returning", "NUMBER", "txr", "NUMBER", "In", "deploy_challenge", "you", "mean", "I", "think", "NUMBER", "Right", "Correct", "NUMBER", "The", "deploy_challenge", "hook", "should", "not", "return", "until", "the", "challenge", "has", "actually", "be", "fully", "deployed", "propagated", "NUMBER", "I", "m", "investigating", "the", "issue", "get", "the", "user", "with", "mine", "script", "it", "writes", "DNS", "on", "Cloudflare", "and", "returns", "the", "ID", "NUMBER", "I", "find", "this", "answer", "LINK", "have", "to", "wait", "until", "dns", "propagate", "for", "issue", "certificate", "NUMBER", "NUMBER", "I", "read", "_you", "need", "to", "ensure", "all", "Authoritative", "DNS", "servers", "for", "the", "name", "you", "want", "a", "certificate", "for", "be", "update", "this", "be", "not", "propagation", "and", "be", "purely", "under", "the", "control", "of", "your", "or", "your", "hosting", "supplier", "NUMBER", "Once", "the", "servers", "be", "update", "you", "don", "t", "have", "to", "wait", "for", "any", "propagation", "the", "Let", "s", "Encrypt", "systems", "will", "interrogate", "these", "Authoritative", "servers", "themselves", "directly", "about", "the", "new", "domain", "NUMBER", "_", "In", "effect", "never", "get", "an", "issue", "NUMBER", "But", "I", "will", "try", "to", "get", "inspired", "by", "your", "email", "hook", "I", "see", "you", "did", "implement", "the", "check", "You", "and", "the", "commenter", "be", "technically", "correct", "we", "re", "not", "technically", "waiting", "for", "master", "slave", "propagation", "NUMBER", "I", "use", "that", "term", "for", "simplicity", "s", "sake", "but", "yes", "the", "only", "thing", "you", "really", "have", "to", "check", "be", "that", "all", "authoritative", "servers", "have", "the", "challenge", "live", "NUMBER", "The", "code", "I", "helped", "write", "for", "the", "email", "hook", "do", "that", "so", "please", "borrow", "away", "if", "it", "helps", "Is", "it", "possible", "to", "have", "multiple", "domains", "NUMBER", "txt", "file", "on", "different", "locations", "This", "solves", "my", "use", "case", "NUMBER", "Thank", "you", "NUMBER", "It", "would", "be", "nice", "if", "the", "keep_going", "parameter", "were", "listed", "in", "the", "example", "config", "file", "otherwise", "it", "be", "pretty", "difficult", "to", "find", "NUMBER", "This", "PR", "should", "not", "be", "accepted", "NUMBER", "The", "variable", "PARAM_KEEP_GOING", "be", "not", "read", "from", "the", "config", "file", "there", "s", "no", "code", "to", "do", "so", "NUMBER", "Also", "variables", "of", "the", "type", "PARAM", "be", "not", "use", "for", "config", "file", "settings", "NUMBER", "Those", "be", "use", "for", "command", "line", "switches", "only", "NUMBER", "As", "keep", "going", "be", "set", "by", "a", "command", "line", "switch", "and", "only", "by", "a", "command", "line", "switch", "it", "be", "not", "appropriate", "or", "effective", "to", "add", "this", "to", "the", "example", "config", "file", "NUMBER", "The", "switch", "be", "well", "documented", "already", "in", "the", "README", "NUMBER", "md", "in", "the", "man", "page", "and", "in", "the", "build", "in", "help", "readout", "NUMBER", "That", "s", "funny", "though", "because", "putting", "this", "parameter", "in", "the", "config", "actually", "do", "the", "trick", "NUMBER", "Some", "feedback", "would", "be", "nice", "instead", "of", "simply", "closing", "the", "request", "NUMBER", "OK", "thanks", "a", "lot", "lukas", "NUMBER", "for", "your", "feedback", "this", "was", "much", "more", "helpful", "in", "understanding", "why", "you", "do", "not", "wish", "to", "include", "this", "in", "the", "config", "NUMBER", "Just", "one", "question", "though", "could", "it", "harm", "in", "any", "way", "if", "somebody", "do", "choose", "to", "include", "it", "in", "their", "own", "config", "I", "be", "ask", "this", "because", "from", "a", "hosting", "provider", "s", "point", "of", "view", "it", "be", "much", "better", "to", "have", "one", "customer", "complaining", "about", "one", "website", "s", "SSL", "that", "did", "not", "get", "automatically", "renewed", "than", "have", "NUMBER", "customers", "complaining", "for", "NUMBER", "different", "websites", "NUMBER", "OK", "understood", "NUMBER", "Thanks", "a", "lot", "for", "all", "your", "clarifications", "NUMBER", "Feel", "free", "to", "close", "this", "NUMBER", "Hello", "Gentlemen", "NUMBER", "After", "upgrading", "from", "ver", "NUMBER", "to", "NUMBER", "I", "ve", "faced", "out", "that", "HOOK_CHAIN", "no", "change", "behaviour", "NUMBER", "In", "past", "it", "performed", "challenges", "deploy", "validation", "in", "loop", "one", "by", "one", "HOOK", "deploy_challenge", "for", "Responding", "to", "challenge", "for", "HOOK", "clean_challenge", "for", "Challenge", "be", "valid", "HOOK", "deploy_challenge", "NUMBER", "But", "as", "I", "notice", "in", "newer", "version", "it", "be", "simply", "performs", "at", "first", "either", "batch", "or", "one", "by", "one", "but", "consecutive", "all", "challenges", "deployment", "NUMBER", "Then", "at", "next", "stage", "performs", "all", "challenges", "validation", "NUMBER", "And", "finaly", "ether", "at", "once", "or", "one", "by", "one", "challenges", "removal", "NUMBER", "My", "setup", "be", "dependent", "on", "the", "original", "behavior", "of", "the", "HOOK_CHAIN", "no", "option", "i", "NUMBER", "e", "NUMBER", "deploy", "validation", "sequence", "for", "each", "domain", "cert", "NUMBER", "Have", "I", "to", "correct", "it", "myself", "as", "it", "was", "Or", "may", "I", "expect", "clarifications", "and", "some", "additional", "setting", "for", "original", "behavior", "Thank", "You", "NUMBER", "P", "NUMBER", "S", "NUMBER", "If", "my", "setup", "be", "stupid", "or", "incorrectly", "based", "on", "misunderstanding", "but", "it", "made", "in", "past", "as", "documented", "at", "LINK", "_chain", "NUMBER", "md", "I", "use", "certbot", "and", "follow", "instructions", "how", "to", "import", "accaunt", "LINK", "from", "official", "letsencrypt", "client", "import", "account", "key", "NUMBER", "It", "be", "very", "unclear", "NUMBER", "I", "wanted", "to", "see", "there", "such", "things", "how", "to", "name", "output", "file", "for", "default", "settings", "account_key", "NUMBER", "pem", "how", "to", "name", "sub", "folder", "for", "dehydrated", "account", "what", "to", "do", "with", "ACCOUNT_KEY_JSON", "registration_info", "NUMBER", "json", "After", "my", "attempts", "to", "guess", "I", "ve", "be", "banned", "Or", "maybe", "not", "NUMBER", "who", "knows", "I", "want", "to", "see", "some", "debug", "verbose", "mode", "option", "to", "understand", "why", "I", "get", "txt", "Signing", "domains", "NUMBER", "ERROR", "Certificate", "authority", "doesn", "t", "allow", "certificate", "signing", "Hi", "I", "m", "trying", "to", "use", "dehydrated", "on", "alpine", "i", "get", "my", "inflammations", "form", "LINK", "url", "and", "install", "the", "needed", "package", "NUMBER", "On", "Ubuntu", "it", "be", "work", "perfectly", "but", "on", "my", "alpine", "VM", "I", "get", "the", "error", "ERROR", "Parsing", "error", "in", "config", "file", "NUMBER", "when", "I", "m", "use", "this", "command", "NUMBER", "dehydrated", "c", "I", "can", "t", "find", "any", "information", "documentation", "on", "this", "error", "the", "config", "file", "works", "on", "Ubuntu", "NUMBER", "I", "tied", "to", "find", "a", "solution", "with", "google", "an", "co", "NUMBER", "but", "I", "can", "t", "find", "any", "NUMBER", "From", "the", "Ubuntu", "System", "NUMBER", "dehydrated", "v", "INFO", "Using", "main", "config", "file", "dehydrated", "config", "Dehydrated", "by", "Lukas", "Schauer", "LINK", "Dehydrated", "version", "git", "master", "after", "NUMBER", "GIT", "Revision", "NUMBER", "a", "NUMBER", "e", "NUMBER", "fa", "NUMBER", "b", "NUMBER", "a", "NUMBER", "aa", "NUMBER", "f", "NUMBER", "ba", "NUMBER", "ee", "NUMBER", "OS", "Debian", "GNU", "Linux", "NUMBER", "Used", "software", "bash", "NUMBER", "NUMBER", "release", "curl", "curl", "NUMBER", "awk", "GNU", "Awk", "NUMBER", "API", "NUMBER", "GNU", "MPFR", "NUMBER", "GNU", "MP", "NUMBER", "sed", "sed", "GNU", "sed", "NUMBER", "mktemp", "mktemp", "GNU", "coreutils", "NUMBER", "grep", "grep", "GNU", "grep", "NUMBER", "diff", "diff", "GNU", "diffutils", "NUMBER", "openssl", "OpenSSL", "NUMBER", "f", "NUMBER", "May", "NUMBER", "From", "the", "Alpine", "System", "NUMBER", "dehydrated", "v", "INFO", "Using", "main", "config", "file", "dehydrated", "config", "Dehydrated", "by", "Lukas", "Schauer", "LINK", "Dehydrated", "version", "git", "master", "after", "NUMBER", "GIT", "Revision", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "b", "NUMBER", "aa", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "OS", "Welcome", "to", "Alpine", "Linux", "NUMBER", "Used", "software", "bash", "NUMBER", "NUMBER", "release", "curl", "curl", "NUMBER", "awk", "awk", "warning", "option", "W", "be", "ignored", "sed", "This", "be", "not", "GNU", "sed", "version", "NUMBER", "mktemp", "mktemp", "unrecognized", "option", "version", "grep", "grep", "unrecognized", "option", "version", "diff", "diff", "unrecognized", "option", "version", "openssl", "OpenSSL", "NUMBER", "o", "NUMBER", "Mar", "NUMBER", "Thanks", "iGlaedr", "sorry", "for", "the", "bad", "grammar", "First", "thanks", "for", "the", "fast", "reply", "I", "ve", "created", "a", "new", "VM", "and", "it", "dose", "not", "work", "with", "the", "coreutils", "install", "and", "a", "few", "other", "to", "replace", "busybox", "NUMBER", "Still", "the", "the", "same", "error", "NUMBER", "ls", "la", "usr", "lib", "bash", "usr", "bin", "curl", "usr", "bin", "awk", "bin", "sed", "bin", "mktemp", "usr", "bin", "grep", "usr", "bin", "diff", "usr", "bin", "openssl", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Oct", "NUMBER", "NUMBER", "bin", "mktemp", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Oct", "NUMBER", "NUMBER", "bin", "sed", "lrwxrwxrwx", "NUMBER", "root", "root", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "usr", "bin", "awk", "gawk", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "usr", "bin", "curl", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Oct", "NUMBER", "NUMBER", "usr", "bin", "diff", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Oct", "NUMBER", "NUMBER", "usr", "bin", "grep", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Apr", "NUMBER", "NUMBER", "NUMBER", "usr", "bin", "openssl", "usr", "lib", "bash", "total", "NUMBER", "drwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "drwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "rw", "r", "r", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "Makefile", "NUMBER", "inc", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "basename", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "dirname", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "finfo", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "head", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "id", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "ln", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "logname", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "mkdir", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "mypid", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "pathchk", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "print", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "printenv", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "push", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "realpath", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "rmdir", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "setpgid", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "sleep", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "strftime", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "sync", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "tee", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "truefalse", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "tty", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "uname", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "unlink", "rwxr", "xr", "x", "NUMBER", "root", "root", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "whoami", "midgard", "cert", "dehydrated", "bash", "NUMBER", "dehydrated", "c", "INFO", "Using", "main", "config", "file", "cert", "dehydrated", "config", "ERROR", "Parsing", "error", "in", "config", "file", "NUMBER", "bash", "NUMBER", "dehydrated", "v", "INFO", "Using", "main", "config", "file", "cert", "dehydrated", "config", "Dehydrated", "by", "Lukas", "Schauer", "LINK", "Dehydrated", "version", "git", "master", "after", "NUMBER", "GIT", "Revision", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "b", "NUMBER", "aa", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "OS", "Welcome", "to", "Alpine", "Linux", "NUMBER", "Used", "software", "bash", "NUMBER", "NUMBER", "release", "curl", "curl", "NUMBER", "awk", "GNU", "Awk", "NUMBER", "API", "NUMBER", "sed", "sed", "GNU", "sed", "NUMBER", "mktemp", "mktemp", "GNU", "coreutils", "NUMBER", "grep", "grep", "GNU", "grep", "NUMBER", "diff", "diff", "GNU", "diffutils", "NUMBER", "openssl", "OpenSSL", "NUMBER", "o", "NUMBER", "Mar", "NUMBER", "I", "ve", "find", "the", "problem", "myself", "it", "was", "a", "Problem", "with", "the", "ads", "acm", "client", "config", "NUMBER", "Thanks", "for", "the", "help", "Does", "dehydrated", "fully", "support", "IDN", "s", "Internationalized", "Domain", "Names", "Let", "s", "Encrypt", "do", "as", "of", "Oct", "NUMBER", "NUMBER", "but", "we", "still", "don", "t", "have", "this", "functionality", "with", "Aegir", "Drupal", "BOA", "NUMBER", "Is", "this", "work", "please", "Best", "Ed", "I", "notice", "that", "dehydrated", "refuses", "to", "run", "without", "sudo", "install", "if", "DEHYDRATED_USER", "be", "set", "why", "be", "that", "The", "same", "feature", "restarting", "the", "script", "as", "a", "different", "user", "be", "also", "perfectly", "doable", "use", "the", "su", "command", "su", "DEHYDRATED_USER", "s", "bin", "bash", "c", "NUMBER", "ORIGARGS", "the", "only", "difference", "I", "can", "see", "immediately", "be", "the", "option", "to", "explicitly", "specify", "the", "group", "to", "run", "as", "NUMBER", "While", "sudo", "may", "be", "more", "feature", "complete", "in", "some", "respects", "su", "be", "guaranteed", "to", "be", "present", "in", "mostly", "any", "system", "you", "would", "run", "on", "and", "IMO", "should", "at", "least", "be", "provide", "as", "a", "fallback", "if", "sudo", "be", "not", "find", "NUMBER", "I", "can", "probably", "make", "a", "PR", "for", "it", "if", "you", "want", "me", "to", "NUMBER", "go", "Using", "sudo", "do", "allow", "for", "a", "user", "switch", "without", "the", "need", "for", "a", "password", "if", "configured", "NUMBER", "Also", "the", "group", "option", "might", "be", "needed", "by", "some", "people", "NUMBER", "Nobody", "forces", "you", "to", "use", "the", "dehydrated", "integrated", "sudo", "operation", "you", "could", "always", "just", "use", "su", "yourself", "NUMBER", "When", "HTTP", "NUMBER", "be", "use", "header", "names", "be", "lower", "case", "NUMBER", "After", "add", "remove", "resource", "records", "on", "ClouDNS", "and", "probably", "other", "authoritative", "DNS", "providers", "I", "guess", "you", "have", "to", "wait", "while", "the", "new", "zone", "be", "propagated", "across", "all", "of", "their", "servers", "NUMBER", "This", "be", "a", "time", "consuming", "process", "and", "it", "isn", "t", "really", "predictable", "luckily", "ClouDNS", "offers", "a", "way", "to", "check", "if", "the", "zone", "be", "update", "LINK", "NUMBER", "Now", "that", "deploy_challenge", "be", "do", "for", "all", "d", "domain", "s", "in", "sequence", "it", "would", "be", "great", "to", "have", "a", "hook", "that", "be", "call", "after", "all", "deploy_challenge", "s", "but", "before", "these", "challenges", "be", "validated", "NUMBER", "That", "way", "we", "can", "make", "deploy_challenge", "add", "all", "TXT", "records", "asynchronously", "and", "call", "just", "one", "loop", "in", "before_challenge_validation", "to", "wait", "while", "the", "zone", "isn", "t", "update", "across", "all", "ClouDNS", "servers", "NUMBER", "You", "could", "achieve", "this", "by", "use", "HOOK_CHAIN", "yes", "and", "then", "simply", "having", "your", "hook", "wait", "and", "test", "after", "deploying", "the", "challenges", "before", "returning", "from", "the", "hook", "NUMBER", "I", "know", "that", "but", "I", "think", "it", "makes", "sense", "to", "have", "a", "hook", "where", "you", "can", "check", "the", "challenges", "yourself", "before", "telling", "the", "CA", "to", "do", "it", "even", "when", "HOOK_CHAIN", "yes", "be", "set", "NUMBER", "It", "be", "the", "responsibility", "of", "the", "deploy_challenge", "hook", "to", "ensure", "that", "the", "challenge", "be", "successfully", "deployed", "and", "ready", "for", "validation", "NUMBER", "This", "include", "verifying", "that", "it", "has", "propagated", "to", "all", "authoritative", "nameservers", "NUMBER", "Whether", "that", "involves", "HOOK_CHAIN", "or", "not", "NUMBER", "If", "you", "need", "to", "verify", "that", "the", "challenge", "has", "be", "deployed", "successfully", "that", "should", "be", "do", "before", "the", "hook", "returns", "NUMBER", "Right", "now", "the", "deploy_cert", "receives", "domain", "name", "key", "cert", "fullchain", "path", "and", "date", "but", "not", "the", "alias", "e", "NUMBER", "g", "NUMBER", "for", "wildcard", "certs", "Since", "alias", "variable", "be", "already", "export", "the", "change", "would", "be", "as", "simple", "as", "add", "it", "to", "the", "end", "of", "command", "and", "would", "not", "break", "any", "exist", "implementations", "n", "HOOK", "HOOK", "deploy_cert", "domain", "certdir", "privkey", "NUMBER", "pem", "certdir", "cert", "NUMBER", "pem", "certdir", "fullchain", "NUMBER", "pem", "certdir", "chain", "NUMBER", "pem", "timestamp", "alias", "You", "can", "also", "use", "a", "combination", "of", "the", "dirname", "and", "basename", "commands", "to", "extract", "the", "alias", "name", "from", "the", "key", "cert", "fullchain", "or", "chain", "paths", "NUMBER", "I", "find", "this", "out", "when", "I", "considered", "make", "a", "similar", "request", "for", "the", "certdir", "path", "to", "be", "add", "to", "the", "same", "hook", "but", "find", "I", "could", "work", "them", "out", "myself", "NUMBER", "i", "m", "trying", "to", "set", "up", "dehydrated", "on", "a", "new", "server", "and", "run", "into", "this", "problem", "the", "initial", "request", "to", "register", "and", "issue", "a", "letsencrypt", "NUMBER", "org", "staging", "certificate", "wen", "though", "fine", "NUMBER", "however", "when", "i", "try", "to", "test", "the", "renewal", "it", "fail", "dehydrated", "c", "x", "INFO", "Using", "main", "config", "file", "etc", "dehydrated", "config", "INFO", "Using", "additional", "config", "file", "etc", "dehydrated", "config", "NUMBER", "d", "NUMBER", "_gentoo", "NUMBER", "sh", "Processing", "redacted", "NUMBER", "org", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "Jul", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Longer", "than", "NUMBER", "days", "NUMBER", "Ignoring", "because", "renew", "was", "forced", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Received", "NUMBER", "authorizations", "URLs", "from", "the", "CA", "Handling", "authorization", "for", "redacted", "NUMBER", "org", "NUMBER", "pending", "challenge", "s", "Deploying", "challenge", "tokens", "NUMBER", "Responding", "to", "challenge", "for", "redacted", "NUMBER", "org", "authorization", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "redacted", "NUMBER", "org", "NUMBER", "org", "NUMBER", "well", "know", "acme", "challenge", "vZFIDLSvENKWsyVkfzfiEbMi", "NUMBER", "Gf", "NUMBER", "ZRtQFFMtGMsHAnM", "Status", "NUMBER", "Details", "HTTP", "NUMBER", "NUMBER", "Expectation", "Failed", "Content", "Type", "text", "html", "Content", "Length", "NUMBER", "Connection", "close", "Date", "Wed", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Server", "httpd", "NUMBER", "TAG", "TAG", "TAG", "TAG", "TAG", "NUMBER", "Expectation", "Failed", "TAG", "TAG", "TAG", "TAG", "NUMBER", "Expectation", "Failed", "TAG", "TAG", "TAG", "request", "as", "logged", "by", "the", "server", "note", "the", "Expect", "NUMBER", "continue", "part", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "request", "NUMBER", "c", "NUMBER", "fd", "NUMBER", "request", "len", "NUMBER", "nPOST", "NUMBER", "well", "know", "acme", "challenge", "vZFIDLSvENKWsyVkfzfiEbMi", "NUMBER", "Gf", "NUMBER", "ZRtQFFMtGMsHAnM", "HTTP", "NUMBER", "r", "nHost", "spook", "NUMBER", "alerik", "NUMBER", "org", "r", "nUser", "Agent", "dehydr", "NUMBER", "ted", "NUMBER", "curl", "NUMBER", "r", "nAccept", "r", "nContent", "Type", "application", "jose", "json", "r", "nContent", "Length", "NUMBER", "r", "nExpect", "NUMBER", "continue", "r", "n", "r", "n", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "response", "NUMBER", "c", "NUMBER", "Response", "Header", "nHTTP", "NUMBER", "NUMBER", "Expectation", "Failed", "r", "nContent", "Type", "text", "html", "r", "nContent", "Length", "NUMBER", "r", "nConnection", "close", "r", "nDate", "Wed", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "r", "nServer", "httpd", "NUMBER", "r", "n", "r", "n", "curl", "NUMBER", "bash", "NUMBER", "_p", "NUMBER", "lighttpd", "NUMBER", "be", "this", "a", "bug", "be", "i", "doing", "something", "wrong", "aw", "thank", "you", "i", "ve", "request", "version", "bump", "from", "gentoo", "NUMBER", "Certain", "DNS", "services", "Duck", "DNS", "only", "allow", "a", "single", "TXT", "record", "for", "a", "domain", "and", "all", "subdomains", "NUMBER", "So", "the", "last", "TXT", "value", "will", "overwrite", "all", "early", "values", "NUMBER", "To", "support", "such", "a", "service", "setting", "TXT", "records", "must", "be", "do", "in", "the", "challenge", "loop", "NUMBER", "That", "way", "the", "TXT", "record", "be", "set", "and", "immediately", "checked", "before", "going", "on", "to", "the", "next", "one", "NUMBER", "Having", "just", "checked", "Duck", "DNS", "documentation", "I", "would", "concur", "that", "it", "be", "the", "case", "that", "you", "can", "only", "set", "one", "TXT", "record", "at", "a", "time", "NUMBER", "For", "those", "interested", "the", "API", "in", "question", "be", "documented", "at", "LINK", "lukas", "NUMBER", "I", "m", "curious", "about", "this", "from", "a", "purely", "technical", "theoretical", "standpoint", "NUMBER", "Would", "something", "like", "the", "following", "not", "be", "workable", "if", "hook_chain", "request", "all", "authorization", "tokens", "deploy", "all", "tokens", "validate", "all", "tokens", "else", "for", "each", "SAN", "request", "authorization", "token", "deploy", "token", "validate", "token", "end", "for", "end", "if", "I", "would", "be", "hesitant", "to", "make", "that", "sort", "of", "change", "to", "the", "flow", "as", "it", "needlessly", "burdens", "the", "CA", "with", "much", "more", "traffic", "NUMBER", "And", "really", "a", "DNS", "provider", "that", "only", "allows", "a", "single", "TXT", "record", "for", "a", "domain", "and", "all", "subdomains", "be", "not", "standards", "compliant", "so", "I", "see", "no", "reason", "to", "double", "or", "triple", "the", "CA", "s", "burden", "for", "the", "sake", "of", "support", "a", "non", "compliant", "DNS", "provider", "NUMBER", "Again", "I", "m", "just", "interested", "in", "the", "theory", "here", "NUMBER", "Recently", "Dehydrated", "seems", "to", "be", "validating", "challenges", "only", "after", "all", "my", "deploy", "challenges", "have", "be", "run", "cause", "issue", "on", "approval", "NUMBER", "Seems", "like", "HOOK_CHAIN", "value", "be", "be", "seen", "as", "YES", "NUMBER", "I", "have", "hook_chain", "set", "to", "no", "in", "my", "config", "domains", "be", "listed", "as", "mysub", "NUMBER", "domain", "NUMBER", "com", "mysub", "NUMBER", "domain", "NUMBER", "com", "mysub", "NUMBER", "domain", "NUMBER", "com", "Dehydrated", "by", "Lukas", "Schauer", "LINK", "Dehydrated", "version", "git", "master", "after", "NUMBER", "GIT", "Revision", "b", "NUMBER", "dddd", "NUMBER", "a", "NUMBER", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "a", "NUMBER", "bd", "NUMBER", "aa", "NUMBER", "e", "NUMBER", "a", "NUMBER", "bdbca", "OS", "Ubuntu", "NUMBER", "LTS", "Used", "software", "bash", "NUMBER", "NUMBER", "release", "curl", "curl", "NUMBER", "awk", "GNU", "Awk", "NUMBER", "API", "NUMBER", "GNU", "MPFR", "NUMBER", "GNU", "MP", "NUMBER", "sed", "sed", "GNU", "sed", "NUMBER", "mktemp", "mktemp", "GNU", "coreutils", "NUMBER", "grep", "grep", "GNU", "grep", "NUMBER", "diff", "diff", "GNU", "diffutils", "NUMBER", "openssl", "OpenSSL", "NUMBER", "g", "NUMBER", "Mar", "NUMBER", "Oh", "bummer", "NUMBER", "I", "had", "a", "process", "that", "would", "use", "the", "token", "to", "edit", "the", "same", "netscaler", "policy", "with", "the", "challenge", "token", "for", "every", "domain", "NUMBER", "Any", "other", "options", "you", "can", "think", "of", "to", "mimic", "this", "behavior", "It", "s", "possible", "to", "create", "multiple", "rules", "but", "will", "take", "some", "re", "work", "NUMBER", "Will", "try", "to", "figure", "something", "out", "NUMBER", "Thanks", "for", "the", "help", "NUMBER", "I", "be", "use", "this", "command", "to", "update", "my", "certificates", "usr", "local", "dehydrated", "dehydrated", "c", "x", "k", "NUMBER", "beaker", "ecc", "NUMBER", "sh", "d", "muppetz", "NUMBER", "com", "d", "beaker", "NUMBER", "muppetz", "NUMBER", "com", "d", "www", "NUMBER", "muppetz", "NUMBER", "com", "d", "tjharman", "NUMBER", "com", "d", "www", "NUMBER", "tjharman", "NUMBER", "com", "d", "old", "NUMBER", "tjharman", "NUMBER", "com", "d", "lice", "NUMBER", "muppetz", "NUMBER", "com", "d", "gallery", "NUMBER", "tjharman", "NUMBER", "com", "d", "matchboxdigital", "NUMBER", "co", "NUMBER", "nz", "d", "www", "NUMBER", "matchboxdigital", "NUMBER", "co", "NUMBER", "nz", "o", "etc", "letsencrypt", "ecc", "a", "secp", "NUMBER", "r", "NUMBER", "This", "be", "the", "log", "NUMBER", "pending", "challenge", "s", "Deploying", "challenge", "tokens", "NUMBER", "Responding", "to", "challenge", "for", "beaker", "NUMBER", "muppetz", "NUMBER", "com", "authorization", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "gallery", "NUMBER", "tjharman", "NUMBER", "com", "authorization", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "lice", "NUMBER", "muppetz", "NUMBER", "com", "authorization", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "matchboxdigital", "NUMBER", "co", "NUMBER", "nz", "authorization", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "muppetz", "NUMBER", "com", "authorization", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "old", "NUMBER", "tjharman", "NUMBER", "com", "authorization", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "www", "NUMBER", "matchboxdigital", "NUMBER", "co", "NUMBER", "nz", "authorization", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "www", "NUMBER", "muppetz", "NUMBER", "com", "authorization", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "www", "NUMBER", "tjharman", "NUMBER", "com", "authorization", "NUMBER", "Cleaning", "challenge", "tokens", "NUMBER", "Challenge", "validation", "has", "fail", "ERROR", "Challenge", "be", "invalid", "returned", "invalid", "result", "type", "http", "NUMBER", "status", "invalid", "error", "type", "urn", "ietf", "params", "acme", "error", "connection", "detail", "Fetching", "LINK", "know", "acme", "challenge", "FnaK", "NUMBER", "v", "NUMBER", "ZkQn", "NUMBER", "VitAr", "NUMBER", "Vav", "NUMBER", "SriOxC", "NUMBER", "bFrg_RdvvHWg", "Error", "get", "validation", "data", "status", "NUMBER", "url", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "Gzt", "NUMBER", "EWQlA", "NUMBER", "N", "NUMBER", "gF", "NUMBER", "m", "NUMBER", "RnL", "NUMBER", "l", "C", "NUMBER", "PLk", "NUMBER", "sJmgY", "bRE", "NUMBER", "token", "FnaK", "NUMBER", "v", "NUMBER", "ZkQn", "NUMBER", "VitAr", "NUMBER", "Vav", "NUMBER", "SriOxC", "NUMBER", "bFrg_RdvvHWg", "validationRecord", "url", "LINK", "know", "acme", "challenge", "FnaK", "NUMBER", "v", "NUMBER", "ZkQn", "NUMBER", "VitAr", "NUMBER", "Vav", "NUMBER", "SriOxC", "NUMBER", "bFrg_RdvvHWg", "hostname", "tjharman", "NUMBER", "com", "NUMBER", "well", "know", "port", "NUMBER", "url", "LINK", "know", "acme", "challenge", "FnaK", "NUMBER", "v", "NUMBER", "ZkQn", "NUMBER", "VitAr", "NUMBER", "Vav", "NUMBER", "SriOxC", "NUMBER", "bFrg_RdvvHWg", "hostname", "www", "NUMBER", "tjharman", "NUMBER", "com", "port", "NUMBER", "addressesResolved", "NUMBER", "addressUsed", "NUMBER", "For", "some", "reason", "my", "URL", "be", "LINK", "know", "Is", "there", "a", "parsing", "error", "here", "I", "be", "use", "commit", "NUMBER", "de", "NUMBER", "c", "NUMBER", "d", "NUMBER", "aac", "NUMBER", "f", "NUMBER", "f", "NUMBER", "ecea", "NUMBER", "fa", "NUMBER", "OMG", "I", "was", "miss", "a", "I", "be", "so", "so", "sorry", "for", "wasting", "your", "time", "NUMBER", "I", "m", "sure", "but", "I", "still", "made", "another", "small", "donation", "by", "way", "of", "apology", "NUMBER", "Hi", "i", "m", "having", "some", "trouble", "to", "force", "the", "renewing", "of", "a", "certificate", "with", "version", "NUMBER", "Requesting", "a", "new", "certificate", "NUMBER", "dehydrated", "c", "d", "test", "NUMBER", "example", "NUMBER", "com", "works", "fine", "but", "an", "second", "run", "with", "NUMBER", "dehydraded", "c", "x", "d", "test", "NUMBER", "example", "NUMBER", "com", "fail", "NUMBER", "text", "Responding", "to", "challenge", "for", "text", "NUMBER", "example", "NUMBER", "com", "authorization", "NUMBER", "ERROR", "Problem", "connecting", "to", "server", "post", "for", "LINK", "know", "acme", "NUMBER", "After", "some", "debugging", "i", "think", "there", "be", "a", "problem", "in", "get_json_string_value", "function", "or", "json", "be", "nt", "proper", "grepped", "NUMBER", "bash", "challenge_uris", "idx", "echo", "challenge", "get_json_string_value", "url", "The", "renew", "JSON", "from", "challenge", "contains", "a", "second", "url", "and", "looks", "truncated", "json", "type", "http", "NUMBER", "status", "valid", "url", "LINK", "staging", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "chal", "NUMBER", "token", "NUMBER", "validationRecord", "url", "LINK", "know", "acme", "challenge", "NUMBER", "hostname", "test", "NUMBER", "example", "NUMBER", "com", "port", "NUMBER", "addressesResolved", "NUMBER", "addressUsed", "NUMBER", "The", "JSON", "for", "a", "new", "cert", "request", "didn", "t", "contains", "an", "validationRecord", "no", "second", "url", "json", "type", "http", "NUMBER", "status", "pending", "url", "LINK", "staging", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "chal", "NUMBER", "token", "NUMBER", "Anybody", "having", "same", "issue", "Hi", "we", "be", "facing", "similar", "issue", "dehydrated", "c", "x", "d", "example", "NUMBER", "com", "d", "www", "NUMBER", "example", "NUMBER", "com", "ERROR", "Challenge", "be", "invalid", "returned", "result", "wClXT", "NUMBER", "e", "NUMBER", "KS", "NUMBER", "ALWrs", "NUMBER", "sKsQoxzYUA", "NUMBER", "VQxxHai", "NUMBER", "TBvvdNA", "NUMBER", "NMCeBkC_", "NUMBER", "N", "Gq", "NUMBER", "Z", "NUMBER", "PrGrUd", "NUMBER", "noP", "NUMBER", "HtpQBuqhKlUAZ", "NUMBER", "dehydrated", "c", "x", "d", "example", "NUMBER", "com", "d", "www", "NUMBER", "example", "NUMBER", "com", "unexpectedly", "returned", "exit", "value", "NUMBER", "at", "opt", "perl", "NUMBER", "share", "site", "App", "Cmd", "NUMBER", "pm", "line", "NUMBER", "Dehydrated", "version", "NUMBER", "openssl", "OpenSSL", "NUMBER", "e", "fips", "NUMBER", "Feb", "NUMBER", "OS", "CloudLinux", "Server", "release", "NUMBER", "Igor", "Volk", "lukas", "NUMBER", "yep", "my", "bad", "didn", "t", "pay", "attention", "that", "error", "was", "a", "bit", "different", "NUMBER", "We", "do", "not", "use", "dns", "validation", "though", "this", "error", "do", "not", "appear", "with", "NUMBER", "version", "so", "everything", "be", "ok", "now", "Lately", "I", "ve", "come", "across", "this", "bug", "Longer", "than", "NUMBER", "days", "NUMBER", "Ignoring", "because", "renew", "was", "forced", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Received", "NUMBER", "authorizations", "URLs", "from", "the", "CA", "Handling", "authorization", "for", "my", "NUMBER", "domain", "NUMBER", "pending", "challenge", "s", "Deploying", "challenge", "tokens", "NUMBER", "Configuring", "nginx", "for", "acme", "challenge", "my", "NUMBER", "domain", "Responding", "to", "challenge", "for", "my", "NUMBER", "domain", "authorization", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "know", "acme", "challenge", "Qu", "NUMBER", "DxevKnvFIksMVVIU", "NUMBER", "mGeaKpgXxoPv_stj_HNg", "NUMBER", "WQ", "Status", "NUMBER", "Details", "HTTP", "NUMBER", "NUMBER", "Not", "Allowed", "Server", "nginx", "Date", "Wed", "NUMBER", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Content", "Type", "text", "html", "Content", "Length", "NUMBER", "Connection", "keep", "alive", "Strict", "Transport", "Security", "max", "age", "NUMBER", "includeSubDomains", "preload", "TAG", "TAG", "TAG", "NUMBER", "Not", "Allowed", "TAG", "TAG", "TAG", "TAG", "TAG", "NUMBER", "Not", "Allowed", "TAG", "TAG", "TAG", "TAG", "nginx", "TAG", "TAG", "TAG", "I", "m", "super", "confused", "why", "dehydrated", "try", "to", "send", "a", "POST", "request", "to", "NUMBER", "well", "know", "NUMBER", "I", "m", "get", "this", "error", "with", "increasing", "frequency", "NUMBER", "The", "response", "looks", "something", "like", "type", "urn", "acme", "error", "badNonce", "detail", "JWS", "has", "invalid", "anti", "replay", "nonce", "NONCE", "status", "NUMBER", "The", "only", "fix", "appears", "to", "be", "re", "run", "dehydrated", "sometimes", "several", "times", "until", "it", "succeeds", "NUMBER", "In", "LINK", "issuecomment", "NUMBER", "they", "suggest", "that", "nonce", "timeouts", "be", "becoming", "more", "common", "NUMBER", "I", "assume", "that", "s", "what", "I", "m", "seeing", "here", "too", "I", "be", "also", "seeing", "this", "NUMBER", "Example", "output", "Processing", "demidamson", "NUMBER", "org", "with", "alternative", "names", "NUMBER", "demidamson", "NUMBER", "org", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "change", "Domain", "name", "s", "be", "not", "matching", "Names", "in", "old", "certificate", "cliff", "NUMBER", "demidamson", "NUMBER", "org", "demidamson", "NUMBER", "org", "mail", "NUMBER", "demidamson", "NUMBER", "org", "proof", "NUMBER", "demidamson", "NUMBER", "org", "www", "NUMBER", "demidamson", "NUMBER", "org", "Configured", "names", "NUMBER", "demidamson", "NUMBER", "org", "demidamson", "NUMBER", "org", "Forcing", "renew", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "Jun", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Longer", "than", "NUMBER", "days", "NUMBER", "Ignoring", "because", "renew", "was", "forced", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Nonce", "kSCHApAbf", "NUMBER", "DzROJ", "NUMBER", "tDz", "NUMBER", "PHWQ", "NUMBER", "Wt_NjqPB", "NUMBER", "tw", "NUMBER", "E", "Received", "NUMBER", "authorizations", "URLs", "from", "the", "CA", "Handling", "authorization", "for", "demidamson", "NUMBER", "org", "Handling", "authorization", "for", "demidamson", "NUMBER", "org", "NUMBER", "pending", "challenge", "s", "Deploying", "challenge", "tokens", "NUMBER", "Responding", "to", "challenge", "for", "demidamson", "NUMBER", "org", "authorization", "NUMBER", "Nonce", "NUMBER", "xRxskZFAvH", "NUMBER", "TLV", "NUMBER", "h", "NUMBER", "E", "NUMBER", "xgE", "NUMBER", "Ozx", "NUMBER", "GeTbIizm", "NUMBER", "Gt", "NUMBER", "A", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "demidamson", "NUMBER", "org", "authorization", "NUMBER", "Nonce", "NUMBER", "clr", "NUMBER", "IKJTC", "NUMBER", "MUNPPdaxVaBGJDK", "NUMBER", "AknJ_Yv", "NUMBER", "K", "NUMBER", "PM", "Challenge", "be", "valid", "Cleaning", "challenge", "tokens", "NUMBER", "Requesting", "certificate", "NUMBER", "Nonce", "LhkvE", "NUMBER", "j", "vosfFHtkjQ", "NUMBER", "EVFIZhuH", "NUMBER", "DAaBtMKL", "NUMBER", "LULwU", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "finalize", "NUMBER", "NUMBER", "Status", "NUMBER", "Details", "HTTP", "NUMBER", "NUMBER", "Continue", "Expires", "Thu", "NUMBER", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Cache", "Control", "max", "age", "NUMBER", "no", "cache", "no", "store", "Pragma", "no", "cache", "HTTP", "NUMBER", "NUMBER", "Bad", "Request", "Server", "nginx", "Content", "Type", "application", "problem", "json", "Content", "Length", "NUMBER", "Boulder", "Requester", "NUMBER", "Replay", "Nonce", "NUMBER", "Gb", "NUMBER", "gCvUgTvEc", "NUMBER", "kbUca", "NUMBER", "bZpiLj", "NUMBER", "iNdecPXPMoY", "NUMBER", "GDYQ", "Expires", "Thu", "NUMBER", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Cache", "Control", "max", "age", "NUMBER", "no", "cache", "no", "store", "Pragma", "no", "cache", "Date", "Thu", "NUMBER", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Connection", "close", "type", "urn", "ietf", "params", "acme", "error", "badNonce", "detail", "JWS", "has", "an", "invalid", "anti", "replay", "nonce", "LhkvE", "NUMBER", "j", "vosfFHtkjQ", "NUMBER", "EVFIZhuH", "NUMBER", "DAaBtMKL", "NUMBER", "LULwU", "status", "NUMBER", "Request", "failure", "NUMBER", "type", "urn", "ietf", "params", "acme", "error", "badNonce", "detail", "JWS", "has", "an", "invalid", "anti", "replay", "nonce", "LhkvE", "NUMBER", "j", "vosfFHtkjQ", "NUMBER", "EVFIZhuH", "NUMBER", "DAaBtMKL", "NUMBER", "LULwU", "status", "NUMBER", "In", "case", "it", "helps", "my", "config", "file", "contains", "CHALLENGETYPE", "dns", "NUMBER", "WELLKNOWN", "BASEDIR", "wellknown", "HOOK", "BASEDIR", "hook", "NUMBER", "pl", "HOOK_CHAIN", "yes", "CONTACT_EMAIL", "cliff", "might", "NUMBER", "be", "OK", "so", "it", "fail", "first", "time", "on", "every", "machine", "I", "m", "trying", "it", "on", "NUMBER", "Output", "with", "echo", "be", "below", "NUMBER", "Nonce", "UawgckMjzaYcfL", "NUMBER", "ic", "NUMBER", "bQRQLjBs", "NUMBER", "VKqAhzY", "NUMBER", "GOxSwvzc", "Nonce", "NUMBER", "fYLEt", "NUMBER", "kzqRapD", "wg", "NUMBER", "VTmnMufWboHwO", "NUMBER", "ux", "NUMBER", "Iid", "NUMBER", "Qgg", "Nonce", "Bv", "Juf", "NUMBER", "kr", "NUMBER", "OAdl_bR", "NUMBER", "NcwRYKyPdxQxEy", "NUMBER", "tsNbeqg", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "finalize", "NUMBER", "NUMBER", "Status", "NUMBER", "Details", "HTTP", "NUMBER", "NUMBER", "Continue", "Expires", "Thu", "NUMBER", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Cache", "Control", "max", "age", "NUMBER", "no", "cache", "no", "store", "Pragma", "no", "cache", "HTTP", "NUMBER", "NUMBER", "Bad", "Request", "Server", "nginx", "Content", "Type", "application", "problem", "json", "Content", "Length", "NUMBER", "Boulder", "Requester", "NUMBER", "Replay", "Nonce", "NUMBER", "bYt", "NUMBER", "P", "NUMBER", "LBAu", "NUMBER", "R", "NUMBER", "dNcCxJ", "NUMBER", "xBJCOK", "NUMBER", "B_sVIPdP", "NUMBER", "d", "NUMBER", "h", "NUMBER", "M", "Expires", "Thu", "NUMBER", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Cache", "Control", "max", "age", "NUMBER", "no", "cache", "no", "store", "Pragma", "no", "cache", "Date", "Thu", "NUMBER", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Connection", "close", "type", "urn", "ietf", "params", "acme", "error", "badNonce", "detail", "JWS", "has", "an", "invalid", "anti", "replay", "nonce", "Bv", "Juf", "NUMBER", "kr", "NUMBER", "OAdl_bR", "NUMBER", "NcwRYKyPdxQxEy", "NUMBER", "tsNbeqg", "NUMBER", "status", "NUMBER", "Not", "use", "multiple", "egress", "address", "or", "IPv", "NUMBER", "here", "NUMBER", "I", "don", "t", "believe", "so", "NUMBER", "Certainly", "nothing", "that", "would", "change", "between", "request", "in", "the", "same", "run", "NUMBER", "Well", "heck", "it", "certainly", "do", "Time", "to", "get", "on", "the", "phone", "to", "my", "ISP", "NUMBER", "lukas", "NUMBER", "Fixing", "it", "to", "IPv", "NUMBER", "appears", "to", "have", "solve", "the", "problem", "for", "me", "NUMBER", "We", "encountered", "the", "same", "problem", "today", "NUMBER", "It", "appears", "that", "a", "customer", "has", "change", "the", "DNS", "configuration", "of", "one", "of", "the", "domains", "of", "the", "certificate", "fail", "to", "renew", "to", "a", "previous", "configuration", "where", "the", "A", "record", "was", "the", "IP", "address", "of", "an", "old", "shared", "hosting", "by", "OVH", "and", "no", "AAAA", "record", "was", "set", "NUMBER", "Because", "OVH", "can", "do", "TLS", "for", "shared", "hosting", "through", "letsencrypt", "my", "guess", "be", "that", "when", "the", "letsencrypt", "validation", "server", "try", "to", "fetch", "a", "token", "it", "gets", "one", "from", "OVH", "maybe", "an", "old", "one", "and", "of", "course", "it", "s", "not", "what", "the", "validation", "server", "expects", "so", "the", "renewal", "fail", "and", "the", "invalid", "anti", "replay", "nonce", "message", "makes", "sense", "NUMBER", "CliffS", "Maye", "it", "s", "worth", "double", "checking", "that", "both", "IPv", "NUMBER", "and", "IPv", "NUMBER", "resolve", "to", "the", "same", "server", "for", "your", "domain", "that", "would", "explain", "why", "renewing", "over", "IPv", "NUMBER", "would", "work", "if", "accessing", "through", "IPv", "NUMBER", "brings", "you", "somewhere", "else", "smortex", "Interestingly", "there", "was", "no", "reverse", "DNS", "for", "the", "IPv", "NUMBER", "address", "though", "IPv", "NUMBER", "reverse", "was", "correct", "NUMBER", "I", "have", "fix", "the", "IPv", "NUMBER", "reverse", "and", "I", "will", "retest", "without", "forcing", "the", "IPv", "NUMBER", "CliffS", "I", "don", "t", "think", "reverse", "DNS", "has", "an", "impact", "here", "NUMBER", "I", "was", "thinking", "about", "the", "IPv", "NUMBER", "address", "and", "the", "IPv", "NUMBER", "address", "not", "be", "served", "by", "the", "same", "machine", "NUMBER", "Just", "like", "for", "example", "LINK", "be", "not", "the", "same", "site", "over", "IPv", "NUMBER", "and", "IPv", "NUMBER", "Static", "image", "in", "one", "case", "animated", "gif", "otherwise", "I", "had", "this", "issue", "today", "on", "a", "certificate", "with", "NUMBER", "alternative", "names", "it", "was", "fail", "randomly", "on", "one", "of", "them", "NUMBER", "After", "talking", "about", "it", "on", "irc", "with", "lukas", "NUMBER", "and", "reading", "this", "thread", "setting", "IP_VERSION", "NUMBER", "did", "indeed", "fix", "the", "issue", "for", "me", "NUMBER", "The", "server", "in", "question", "has", "NUMBER", "IPv", "NUMBER", "address", "and", "NUMBER", "IPv", "NUMBER", "address", "but", "never", "had", "the", "issue", "before", "NUMBER", "Checking", "with", "curl", "LINK", "ipv", "NUMBER", "kurz", "NUMBER", "pw", "I", "always", "see", "the", "same", "IPv", "NUMBER", "address", "so", "I", "don", "t", "think", "it", "flickers", "NUMBER", "I", "ll", "try", "to", "test", "that", "by", "creating", "a", "certificate", "with", "a", "lot", "of", "alternative", "name", "and", "run", "tcpdump", "to", "capture", "the", "result", "and", "see", "what", "exactly", "be", "going", "on", "NUMBER", "I", "was", "having", "this", "same", "problem", "today", "and", "find", "that", "setting", "IP_VERSION", "NUMBER", "fix", "the", "issue", "NUMBER", "My", "laptop", "has", "an", "IPv", "NUMBER", "and", "IPv", "NUMBER", "address", "NUMBER", "I", "had", "this", "issue", "today", "but", "unfortunately", "the", "ISP", "won", "t", "change", "its", "behavior", "NUMBER", "lukas", "NUMBER", "looking", "around", "the", "forums", "at", "LetsEncrypt", "there", "was", "a", "suggestion", "that", "the", "client", "retry", "the", "request", "with", "the", "nonce", "from", "the", "response", "a", "few", "reasonable", "times", "before", "giving", "up", "NUMBER", "Would", "it", "be", "hard", "to", "implement", "this", "in", "dehydrated", "lukavia", "i", "want", "to", "implement", "two", "things", "in", "the", "not", "too", "far", "future", "I", "want", "to", "try", "to", "find", "a", "way", "to", "resolve", "the", "api", "hostname", "only", "once", "so", "that", "every", "further", "curl", "call", "uses", "the", "same", "server", "this", "will", "solve", "this", "bug", "NUMBER", "I", "also", "want", "to", "add", "retries", "but", "those", "be", "a", "lower", "priority", "for", "me", "as", "use", "cases", "with", "hundreds", "of", "domains", "per", "single", "certificate", "be", "low", "and", "everything", "else", "can", "quickly", "be", "solve", "by", "just", "run", "the", "script", "again", "NUMBER", "lukas", "NUMBER", "Unfortunately", "even", "if", "you", "resolve", "the", "api", "hostname", "only", "once", "the", "problem", "will", "persist", "since", "the", "provider", "route", "would", "still", "be", "different", "every", "time", "NUMBER", "Here", "be", "an", "example", "I", "have", "NUMBER", "internet", "providers", "with", "pfSense", "router", "install", "NUMBER", "pfSense", "be", "make", "load", "balance", "one", "on", "one", "NUMBER", "That", "means", "that", "on", "every", "request", "to", "the", "same", "ip", "each", "time", "it", "goes", "through", "the", "other", "provider", "and", "the", "originator", "your", "ip", "be", "different", "NUMBER", "So", "I", "think", "retry", "feature", "should", "be", "higher", "priority", "NUMBER", "P", "NUMBER", "S", "NUMBER", "Since", "you", "use", "curl", "you", "can", "just", "make", "host", "command", "the", "first", "time", "to", "get", "the", "ip", "and", "then", "use", "the", "ip", "with", "Host", "header", "for", "each", "request", "lukavia", "you", "can", "simply", "program", "a", "pfsense", "rule", "to", "route", "traffic", "to", "letsencrypt", "through", "one", "provider", "i", "NUMBER", "e", "do", "not", "load", "balance", "it", "NUMBER", "That", "s", "what", "I", "did", "when", "I", "I", "had", "the", "same", "issue", "NUMBER", "This", "was", "an", "example", "of", "the", "problem", "NUMBER", "When", "the", "provider", "do", "the", "same", "you", "don", "t", "have", "access", "to", "those", "settings", "NUMBER", "I", "also", "have", "the", "same", "issue", "it", "seems", "to", "happen", "randomly", "I", "have", "to", "launch", "dehydrated", "in", "a", "loop", "until", "it", "succeeds", "We", "re", "also", "seeing", "this", "probably", "relate", "to", "be", "behind", "NAT", "so", "outgoing", "IP", "change", "all", "the", "time", "NUMBER", "It", "s", "not", "clear", "to", "me", "why", "this", "should", "matter", "be", "the", "source", "IP", "encoded", "in", "the", "Nonce", "somehow", "or", "be", "it", "stateless", "at", "the", "server", "and", "and", "you", "re", "just", "get", "a", "different", "remote", "server", "each", "time", "In", "any", "case", "having", "dehydrated", "be", "able", "to", "retry", "with", "the", "new", "Nonce", "each", "time", "would", "be", "better", "but", "perhaps", "this", "be", "a", "problem", "with", "Boulder", "itself", "From", "my", "side", "when", "I", "ve", "add", "IP_VERSION", "NUMBER", "nonce", "error", "disappeared", "Just", "to", "chime", "in", "as", "I", "encountered", "this", "issue", "on", "a", "completely", "unrelated", "system", "and", "Googling", "brought", "me", "here", "NUMBER", "This", "issue", "be", "essentially", "cause", "by", "LE", "be", "unable", "to", "get", "the", "ACME", "challenge", "from", "the", "specified", "domain", "name", "NUMBER", "It", "s", "clearly", "not", "as", "simple", "as", "DNS", "not", "be", "set", "up", "correctly", "as", "it", "s", "more", "nuanced", "than", "this", "NUMBER", "A", "lot", "of", "the", "people", "in", "this", "thread", "have", "find", "out", "that", "when", "you", "have", "multiple", "IP", "address", "they", "don", "t", "always", "route", "to", "the", "same", "endpoint", "NUMBER", "Likewise", "if", "you", "re", "on", "a", "shared", "IP", "of", "any", "kind", "there", "s", "no", "way", "to", "guarantee", "that", "you", "ll", "get", "the", "right", "host", "either", "NUMBER", "This", "be", "why", "a", "lot", "of", "people", "setting", "IP_VERSION", "NUMBER", "or", "IP_VERSION", "NUMBER", "fix", "the", "issue", "it", "s", "simply", "remove", "the", "other", "IP", "Addresses", "NUMBER", "Essentially", "it", "boils", "down", "to", "your", "local", "configuration", "network", "setup", "and", "that", "s", "why", "there", "s", "no", "single", "thing", "that", "will", "fix", "it", "NUMBER", "In", "_my_", "case", "IP", "address", "weren", "t", "the", "issue", "but", "rather", "a", "redirect", "was", "redirecting", "NUMBER", "well", "know", "incorrectly", "cause", "it", "to", "return", "a", "NUMBER", "with", "content", "just", "not", "the", "content", "of", "the", "ACME", "challenge", "hence", "bad", "nonce", "NUMBER", "Had", "it", "returned", "a", "NUMBER", "you", "d", "have", "get", "the", "much", "more", "useful", "error", "that", "contains", "the", "link", "to", "the", "renewal", "failure", "report", "NUMBER", "I", "was", "able", "to", "figure", "this", "out", "by", "simply", "trying", "to", "navigate", "to", "TAG", "NUMBER", "com", "NUMBER", "well", "know", "acme", "challenge", "TAG", "it", "should", "return", "the", "nonce", "directly", "and", "not", "anything", "else", "NUMBER", "To", "sum", "up", "if", "you", "re", "get", "this", "error", "Check", "how", "many", "IP", "address", "you", "have", "and", "ensure", "they", "all", "route", "to", "the", "same", "place", "Ensure", "you", "re", "not", "use", "a", "shared", "IP", "address", "Ensure", "you", "haven", "t", "get", "any", "redirects", "affecting", "NUMBER", "well", "know", "Make", "sure", "you", "can", "do", "a", "GET", "on", "the", "NUMBER", "well", "know", "acme", "config", "TAG", "from", "external", "sources", "I", "m", "run", "dehydrated", "as", "part", "of", "an", "integration", "test", "on", "Travis", "NUMBER", "I", "did", "run", "into", "this", "issue", "since", "some", "of", "their", "test", "workers", "be", "behind", "a", "NAT", "LINK", "ci", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "the", "tale", "of", "ftp", "at", "travis", "ci", "NUMBER", "First", "thing", "i", "tried", "was", "to", "find", "forward", "proxy", "software", "which", "implement", "connection", "pooling", "reuse", "for", "HTTPS", "NUMBER", "The", "closest", "thing", "I", "ve", "find", "be", "some", "adventurous", "nginx", "lua", "approach", "LINK", "as", "an", "https", "connection", "pool", "manager", "NUMBER", "I", "ended", "up", "tunneling", "all", "curl", "request", "through", "tor", "when", "run", "the", "dehydrated", "test", "on", "Travis", "NUMBER", "This", "might", "not", "be", "acceptable", "in", "production", "though", "NUMBER", "I", "know", "the", "usual", "answer", "to", "this", "kind", "of", "question", "be", "to", "add", "a", "hook", "setting", "permissions", "to", "whatever", "the", "admin", "wants", "but", "to", "me", "it", "seems", "such", "a", "normal", "situation", "that", "I", "believe", "dehydrated", "should", "support", "configuring", "this", "options", "in", "the", "cof", "file", "s", "NUMBER", "It", "would", "be", "best", "if", "this", "was", "support", "both", "in", "the", "main", "configuration", "file", "for", "the", "whole", "CERTDIR", "and", "for", "single", "domains", "so", "it", "affects", "only", "CERTDIR", "DOMAIN", "I", "m", "imaging", "this", "set", "of", "variables", "with", "these", "defaults", "CERTOWNER", "DEHYDRATED_USER", "CERTGROUP", "DEHYDRATED_GROUP", "CERTPERM", "u", "rwX", "go", "This", "should", "be", "equal", "to", "what", "dehydrated", "be", "doing", "right", "now", "NUMBER", "Then", "I", "as", "admin", "who", "wants", "to", "make", "the", "certs", "readable", "to", "a", "whole", "group", "I", "would", "add", "e", "NUMBER", "g", "NUMBER", "CERTGROUP", "ssl", "certs", "CERTPERM", "ug", "rX", "o", "Yes", "this", "proposal", "doesn", "t", "distinguish", "between", "public", "certs", "and", "keys", "I", "m", "fine", "with", "the", "public", "certs", "not", "be", "readable", "by", "local", "users", "shrugs", "Carefully", "cut", "from", "the", "as", "RAW", "as", "possible", "totally", "not", "pirate", "RIP", "The", "hooks", "mechanism", "of", "dehydrated", "has", "a", "significant", "usability", "problem", "there", "be", "no", "way", "to", "execute", "hooks", "with", "higher", "privileges", "than", "dehydrated", "itself", "NUMBER", "For", "example", "I", "do", "not", "want", "dehydrated", "to", "run", "as", "root", "which", "I", "hope", "be", "understandable", "but", "I", "need", "root", "privileges", "to", "deploy", "the", "resulting", "keys", "NUMBER", "Locally", "I", "have", "worked", "around", "this", "with", "a", "sort", "of", "playbook", "mechanism", "I", "have", "a", "catch", "all", "deployment", "hook", "that", "records", "all", "its", "invocations", "in", "a", "text", "file", "and", "after", "dehydrated", "be", "do", "a", "real", "hook", "be", "run", "that", "reads", "the", "text", "file", "and", "executes", "recorded", "actions", "with", "elevated", "privileges", "NUMBER", "Can", "we", "have", "something", "similar", "in", "dehydrated", "Or", "at", "least", "a", "kind", "of", "internal", "privilege", "separation", "when", "dehydrated", "starts", "as", "root", "forks", "then", "the", "child", "process", "drops", "privileges", "performs", "network", "operations", "and", "communicates", "back", "to", "the", "parent", "when", "a", "hook", "needs", "to", "be", "run", "NUMBER", "setuid", "setgid", "could", "help", "here", "although", "unsupported", "for", "scripts", "NUMBER", "So", "will", "open", "it", "again", "then", "I", "didn", "t", "find", "any", "other", "place", "to", "ask", "for", "support", "so", "sorry", "if", "this", "isn", "t", "the", "right", "place", "to", "ask", "this", "question", "NUMBER", "I", "m", "trying", "to", "set", "up", "dehydrated", "and", "get", "rid", "of", "the", "official", "letsencrypt", "client", "NUMBER", "I", "ve", "do", "so", "successfully", "on", "one", "server", "and", "I", "m", "hitting", "problem", "doing", "it", "on", "another", "one", "NUMBER", "The", "error", "message", "I", "get", "be", "this", "dehydrated", "dehydrated", "c", "INFO", "Using", "main", "config", "file", "etc", "dehydrated", "config", "Processing", "nuee", "NUMBER", "schlueter", "NUMBER", "be", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Received", "NUMBER", "authorizations", "URLs", "from", "the", "CA", "Handling", "authorization", "for", "nuee", "NUMBER", "schlueter", "NUMBER", "be", "NUMBER", "pending", "challenge", "s", "Deploying", "challenge", "tokens", "NUMBER", "Responding", "to", "challenge", "for", "nuee", "NUMBER", "schlueter", "NUMBER", "be", "authorization", "NUMBER", "Cleaning", "challenge", "tokens", "NUMBER", "Challenge", "validation", "has", "fail", "ERROR", "Challenge", "be", "invalid", "returned", "invalid", "result", "type", "http", "NUMBER", "status", "invalid", "error", "type", "urn", "ietf", "params", "acme", "error", "connection", "detail", "Fetching", "LINK", "know", "acme", "challenge", "current_token", "Timeout", "status", "NUMBER", "url", "LINK", "staging", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "QiWcN", "NUMBER", "U_r", "lrL", "NUMBER", "Mule", "NUMBER", "SiB", "NUMBER", "Qgo", "NUMBER", "Emdkyqgtqs", "NUMBER", "ezClk", "NUMBER", "token", "current_token", "validationRecord", "url", "LINK", "know", "acme", "challenge", "current_token", "hostname", "nuee", "NUMBER", "schlueter", "NUMBER", "be", "port", "NUMBER", "addressesResolved", "NUMBER", "NUMBER", "a", "NUMBER", "b", "NUMBER", "c", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "addressUsed", "NUMBER", "a", "NUMBER", "b", "NUMBER", "c", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "I", "ve", "set", "up", "a", "test", "NUMBER", "txt", "in", "var", "www", "dehydrated", "as", "suggested", "in", "the", "wiki", "NUMBER", "The", "file", "be", "accessible", "via", "NUMBER", "well", "know", "acme", "challenge", "test", "NUMBER", "txt", "NUMBER", "I", "m", "not", "sure", "how", "to", "read", "the", "NUMBER", "error", "describe", "in", "the", "JSON", "blob", "above", "NUMBER", "As", "I", "said", "I", "do", "have", "a", "currently", "still", "active", "cert", "from", "another", "client", "which", "I", "thought", "might", "cause", "problem", "even", "though", "it", "shouldn", "t", "because", "the", "order", "be", "request", "cert", "answer", "challenge", "obtain", "cert", "no", "NUMBER", "I", "have", "thus", "disabled", "ssl", "redirection", "make", "the", "folder", "accessible", "via", "plain", "port", "NUMBER", "http", "but", "had", "the", "same", "result", "NUMBER", "Any", "other", "idea", "Some", "environment", "info", "dehydrated", "dehydrated", "version", "INFO", "Using", "main", "config", "file", "etc", "dehydrated", "config", "Dehydrated", "by", "Lukas", "Schauer", "LINK", "Dehydrated", "version", "git", "master", "after", "NUMBER", "GIT", "Revision", "unknown", "OS", "Ubuntu", "NUMBER", "LTS", "Used", "software", "bash", "NUMBER", "NUMBER", "release", "curl", "curl", "NUMBER", "awk", "GNU", "Awk", "NUMBER", "API", "NUMBER", "GNU", "MPFR", "NUMBER", "GNU", "MP", "NUMBER", "sed", "sed", "GNU", "sed", "NUMBER", "mktemp", "mktemp", "GNU", "coreutils", "NUMBER", "grep", "grep", "GNU", "grep", "NUMBER", "diff", "diff", "GNU", "diffutils", "NUMBER", "openssl", "OpenSSL", "NUMBER", "h", "NUMBER", "Mar", "NUMBER", "Relevant", "nginx", "log", "NUMBER", "NUMBER", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GET", "NUMBER", "well", "know", "acme", "challenge", "current_tokenHTTP", "NUMBER", "NUMBER", "NUMBER", "LINK", "know", "acme", "challenge", "current_token", "Mozilla", "NUMBER", "compatible", "Let", "s", "Encrypt", "validation", "server", "LINK", "NUMBER", "NUMBER", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GET", "NUMBER", "well", "know", "acme", "challenge", "current_token", "HTTP", "NUMBER", "NUMBER", "NUMBER", "Mozilla", "NUMBER", "compatible", "Let", "s", "Encrypt", "validation", "server", "LINK", "The", "nginx", "config", "looks", "as", "describe", "in", "the", "wiki", "and", "as", "I", "said", "above", "the", "test", "NUMBER", "txt", "be", "accesible", "NUMBER", "probably", "copy", "paste", "from", "further", "up", "timestamp", "be", "parameter", "NUMBER", "Using", "the", "config", "as", "explained", "here", "LINK", "apache", "example", "config", "I", "be", "trying", "to", "set", "up", "the", "NUMBER", "well", "know", "acme", "challenge", "to", "be", "available", "under", "every", "vhost", "NUMBER", "But", "one", "vhost", "has", "for", "example", "Redirect", "permanent", "LINK", "This", "config", "forces", "a", "redirect", "and", "breaks", "the", "config", "NUMBER", "Then", "there", "be", "TAG", "AuthType", "Basic", "TAG", "which", "also", "breaks", "the", "setting", "NUMBER", "The", "apache", "config", "explains", "how", "the", "later", "rules", "take", "predesence", "LINK", "merge", "examples", "Does", "anyone", "know", "how", "to", "get", "around", "this", "I", "could", "write", "excluding", "rules", "and", "adjust", "every", "vhost", "config", "NUMBER", "But", "this", "be", "anything", "but", "pretty", "NUMBER", "True", "but", "if", "there", "was", "some", "apache", "config", "option", "that", "would", "prevent", "it", "from", "be", "overwritten", "it", "would", "be", "a", "great", "addition", "to", "the", "docs", "NUMBER", "But", "I", "ll", "see", "what", "I", "can", "find", "out", "NUMBER", "i", "m", "use", "the", "default", "HOOK_CHAIN", "no", "as", "i", "m", "calling", "the", "deploy_challenge", "and", "clean_challenge", "function", "seperatel", "and", "in", "my", "case", "i", "m", "use", "CHALLENGETYPE", "http", "NUMBER", "NUMBER", "i", "notice", "that", "the", "function", "clean_challenge", "be", "not", "be", "call", "in", "such", "scenario", "NUMBER", "i", "think", "that", "after", "these", "NUMBER", "lines", "Clean", "challenge", "token", "use", "non", "chained", "hook", "CHALLENGETYPE", "dns", "NUMBER", "n", "HOOK", "HOOK_CHAIN", "yes", "HOOK", "clean_challenge", "deploy_args", "idx", "some", "like", "this", "line", "should", "appear", "CHALLENGETYPE", "http", "NUMBER", "n", "HOOK", "HOOK_CHAIN", "yes", "HOOK", "clean_challenge", "deploy_args", "idx", "be", "there", "a", "problem", "or", "be", "I", "miss", "something", "Hey", "there", "When", "I", "run", "this", "script", "under", "FreeBSD", "s", "etc", "crontab", "the", "default", "path", "be", "PATH", "etc", "bin", "sbin", "usr", "bin", "usr", "sbin", "Even", "though", "I", "m", "calling", "Dehydrated", "via", "its", "full", "path", "it", "fail", "to", "find", "curl", "NUMBER", "Adding", "an", "override", "within", "the", "script", "to", "set", "the", "environment", "or", "to", "specify", "the", "full", "path", "to", "curl", "would", "be", "useful", "NUMBER", "Thanks", "NUMBER", "In", "my", "own", "experience", "I", "have", "find", "it", "be", "best", "practice", "to", "be", "able", "to", "specify", "the", "full", "path", "to", "executables", "in", "scripts", "run", "via", "crontab", "to", "avoid", "issue", "with", "PATH", "searching", "NUMBER", "Also", "there", "be", "already", "an", "option", "to", "allow", "you", "to", "specify", "the", "OpenSSL", "binary", "defaults", "to", "openssl", "but", "could", "be", "set", "to", "a", "full", "path", "so", "it", "makes", "sense", "there", "should", "be", "one", "for", "curl", "too", "NUMBER", "I", "keep", "get", "Must", "agree", "to", "subscriber", "agreement", "before", "any", "further", "actions", "when", "trying", "to", "get", "a", "wildcard", "certificate", "NUMBER", "I", "have", "start", "with", "a", "clean", "install", "only", "thing", "I", "change", "be", "the", "staging", "server", "in", "the", "config", "NUMBER", "Maybe", "just", "I", "be", "doing", "something", "wrong", "NUMBER", "The", "hook", "NUMBER", "sh", "be", "my", "own", "hook", "script", "LINK", "NUMBER", "manual", "as", "neither", "the", "name", "server", "nor", "the", "web", "server", "be", "located", "on", "this", "machine", "NUMBER", "Replaced", "my", "domain", "with", "example", "NUMBER", "com", "NUMBER", "And", "I", "think", "in", "hindsight", "that", "use", "this", "private", "key", "be", "not", "recommended", "NUMBER", "openssl", "genrsa", "des", "NUMBER", "out", "example", "NUMBER", "com", "NUMBER", "key", "NUMBER", "NUMBER", "openssl", "req", "new", "key", "example", "NUMBER", "com", "NUMBER", "key", "out", "test", "NUMBER", "csr", "NUMBER", "Common", "Name", "e", "NUMBER", "g", "NUMBER", "server", "FQDN", "or", "YOUR", "name", "example", "NUMBER", "com", "NUMBER", "NUMBER", "dehydrated", "register", "privkey", "example", "NUMBER", "com", "NUMBER", "key", "accept", "terms", "INFO", "Using", "main", "config", "file", "home", "user", "dehydrated", "config", "Using", "private", "key", "example", "NUMBER", "com", "NUMBER", "key", "instead", "of", "account", "key", "Enter", "pass", "phrase", "for", "example", "NUMBER", "com", "NUMBER", "key", "Enter", "pass", "phrase", "for", "example", "NUMBER", "com", "NUMBER", "key", "Enter", "pass", "phrase", "for", "example", "NUMBER", "com", "NUMBER", "key", "Account", "already", "registered", "NUMBER", "dehydrated", "signcsr", "test", "NUMBER", "csr", "privkey", "example", "NUMBER", "com", "NUMBER", "key", "out", "test", "NUMBER", "crt", "challenge", "dns", "NUMBER", "hook", "NUMBER", "hook", "NUMBER", "sh", "domain", "NUMBER", "example", "NUMBER", "com", "INFO", "Using", "main", "config", "file", "home", "user", "dehydrated", "config", "Using", "private", "key", "example", "NUMBER", "com", "NUMBER", "key", "instead", "of", "account", "key", "Enter", "pass", "phrase", "for", "example", "NUMBER", "com", "NUMBER", "key", "Enter", "pass", "phrase", "for", "example", "NUMBER", "com", "NUMBER", "key", "Enter", "pass", "phrase", "for", "example", "NUMBER", "com", "NUMBER", "key", "Fetching", "miss", "account", "information", "from", "CA", "NUMBER", "Enter", "pass", "phrase", "for", "example", "NUMBER", "com", "NUMBER", "key", "Enter", "pass", "phrase", "for", "example", "NUMBER", "com", "NUMBER", "key", "Requesting", "authorization", "for", "example", "NUMBER", "com", "NUMBER", "Enter", "pass", "phrase", "for", "example", "NUMBER", "com", "NUMBER", "key", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "authz", "Status", "NUMBER", "Details", "HTTP", "NUMBER", "NUMBER", "Continue", "Expires", "xxx", "Cache", "Control", "max", "age", "NUMBER", "no", "cache", "no", "store", "Pragma", "no", "cache", "HTTP", "NUMBER", "NUMBER", "Forbidden", "Server", "nginx", "Content", "Type", "application", "problem", "json", "Content", "Length", "NUMBER", "Boulder", "Requester", "xxx", "Replay", "Nonce", "xxx", "Expires", "xxx", "Cache", "Control", "max", "age", "NUMBER", "no", "cache", "no", "store", "Pragma", "no", "cache", "Date", "xxx", "Connection", "close", "type", "urn", "acme", "error", "unauthorized", "detail", "Must", "agree", "to", "subscriber", "agreement", "before", "any", "further", "actions", "status", "NUMBER", "rm", "cannot", "remove", "home", "user", "dehydrated", "domains", "NUMBER", "txt", "No", "such", "file", "or", "directory", "Hmm", "when", "I", "be", "not", "use", "privkey", "the", "script", "just", "works", "fine", "NUMBER", "NUMBER", "dehydrated", "register", "accept", "terms", "INFO", "Using", "main", "config", "file", "home", "user", "dehydrated", "config", "Generating", "account", "key", "NUMBER", "Registering", "account", "key", "with", "ACME", "server", "NUMBER", "Done", "NUMBER", "dehydrated", "signcsr", "test", "NUMBER", "csr", "out", "test", "NUMBER", "crt", "challenge", "dns", "NUMBER", "hook", "NUMBER", "hook", "NUMBER", "sh", "domain", "NUMBER", "example", "NUMBER", "com", "INFO", "Using", "main", "config", "file", "home", "user", "dehydrated", "config", "Requesting", "authorization", "for", "example", "NUMBER", "com", "NUMBER", "NUMBER", "pending", "challenge", "s", "Deploying", "challenge", "tokens", "NUMBER", "Add", "the", "following", "to", "the", "zone", "definition", "of", "example", "NUMBER", "com", "_acme", "challenge", "NUMBER", "example", "NUMBER", "com", "NUMBER", "IN", "TXT", "xxx", "Press", "enter", "to", "continue", "NUMBER", "Responding", "to", "challenge", "for", "example", "NUMBER", "com", "authorization", "NUMBER", "Challenge", "be", "valid", "Cleaning", "challenge", "tokens", "NUMBER", "Now", "you", "can", "remove", "the", "following", "from", "the", "zone", "definition", "of", "example", "NUMBER", "com", "_acme", "challenge", "NUMBER", "example", "NUMBER", "com", "NUMBER", "IN", "TXT", "xxx", "Press", "enter", "to", "continue", "NUMBER", "Requesting", "certificate", "NUMBER", "Checking", "certificate", "NUMBER", "Done", "CERT", "BEGIN", "CERTIFICATE", "xxx", "END", "CERTIFICATE", "So", "it", "looks", "like", "when", "use", "a", "private", "key", "from", "file", "instead", "of", "account", "key", "the", "ToS", "acceptance", "be", "not", "work", "for", "some", "reason", "NUMBER", "Any", "error", "message", "about", "ToS", "not", "be", "accepted", "actually", "seem", "to", "be", "a", "boulder", "issue", "because", "boulder", "doesn", "t", "implement", "the", "only", "return", "exist", "flag", "for", "account", "registration", "information", "NUMBER", "I", "won", "t", "change", "anything", "about", "this", "in", "dehydrated", "as", "it", "actually", "follows", "the", "protocol", "specification", "and", "the", "CA", "should", "return", "a", "different", "error", "in", "this", "case", "NUMBER", "Boulder", "do", "implement", "onlyReturnExisting", "LINK", "L", "NUMBER", "L", "NUMBER", "for", "ACME", "v", "NUMBER", "It", "s", "not", "something", "that", "was", "initially", "specified", "in", "ACME", "v", "NUMBER", "NUMBER", "This", "be", "the", "correct", "error", "message", "for", "an", "ACMEv", "NUMBER", "request", "that", "be", "use", "an", "account", "that", "has", "be", "created", "but", "that", "has", "not", "posted", "the", "agreement", "field", "NUMBER", "lukas", "NUMBER", "That", "divergences", "doc", "needs", "to", "be", "clarified", "it", "only", "applies", "to", "the", "V", "NUMBER", "endpoint", "and", "was", "write", "at", "the", "time", "when", "we", "didn", "t", "have", "an", "ACME", "v", "NUMBER", "implementation", "NUMBER", "The", "case", "was", "change", "from", "only", "return", "exist", "to", "onlyReturnExisting", "in", "a", "later", "draft", "and", "that", "page", "needs", "to", "be", "caught", "up", "with", "its", "references", "NUMBER", "ACME", "v", "NUMBER", "do", "implement", "this", "feature", "NUMBER", "ACME", "v", "NUMBER", "has", "no", "divergences", "page", "there", "s", "only", "the", "two", "mention", "at", "the", "end", "of", "the", "announcement", "LINK", "v", "NUMBER", "production", "environment", "wildcards", "NUMBER", "NUMBER", "NUMBER", "It", "s", "all", "a", "bit", "of", "a", "mess", "with", "regards", "to", "legacy", "ACME", "NUMBER", "There", "s", "no", "specific", "v", "NUMBER", "draft", "because", "the", "implementation", "and", "the", "point", "at", "which", "drafts", "were", "cut", "were", "not", "in", "lockstep", "NUMBER", "The", "latest", "V", "NUMBER", "specs", "be", "always", "here", "LINK", "ietf", "acme", "acme", "I", "currently", "can", "t", "renew", "my", "certificates", "NUMBER", "I", "be", "run", "dehydrated", "NUMBER", "it", "may", "be", "relate", "to", "my", "recent", "addition", "of", "CAA", "records", "to", "my", "DNS", "server", "NUMBER", "But", "I", "run", "a", "bunch", "of", "CAA", "testers", "for", "example", "this", "one", "LINK", "over", "it", "and", "they", "tell", "me", "it", "s", "fine", "NUMBER", "here", "s", "the", "error", "that", "s", "be", "produced", "DNS", "problem", "SERVFAIL", "looking", "up", "CAA", "for", "my", "domain", "name", "Or", "somewhat", "longer", "sh", "dehydrated", "letsencrypt", "update", "INFO", "Using", "main", "config", "file", "etc", "dehydrated", "config", "Processing", "www", "NUMBER", "my", "domain", "with", "alternative", "names", "my", "domain", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Certificate", "will", "expire", "Less", "than", "NUMBER", "days", "NUMBER", "Renewing", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Received", "NUMBER", "authorizations", "URLs", "from", "the", "CA", "Handling", "authorization", "for", "www", "NUMBER", "my", "domain", "Handling", "authorization", "for", "my", "domain", "NUMBER", "pending", "challenge", "s", "Deploying", "challenge", "tokens", "NUMBER", "Responding", "to", "challenge", "for", "www", "NUMBER", "my", "domain", "authorization", "NUMBER", "ERROR", "Challenge", "be", "invalid", "returned", "invalid", "result", "type", "http", "NUMBER", "status", "invalid", "error", "type", "urn", "ietf", "params", "acme", "error", "connection", "detail", "DNS", "problem", "SERVFAIL", "looking", "up", "CAA", "for", "my", "domain", "status", "NUMBER", "url", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "QbY", "NUMBER", "XmY", "redacted", "NUMBER", "z", "NUMBER", "os", "NUMBER", "NUMBER", "token", "EhQRH", "NUMBER", "ub", "redacted", "L", "xUsl", "NUMBER", "oR", "NUMBER", "nfs", "validationRecord", "url", "LINK", "redacted", "NUMBER", "well", "know", "acme", "challenge", "EhQRH", "NUMBER", "ubW", "redacted", "AjRLVEevPPwlL", "xUsl", "NUMBER", "oR", "NUMBER", "nfs", "hostname", "www", "NUMBER", "my", "domain", "port", "NUMBER", "addressesResolved", "redacted", "redacted", "v", "NUMBER", "addressUsed", "redacted", "v", "NUMBER", "Now", "I", "m", "not", "entirely", "sure", "that", "dehydrated", "be", "at", "fault", "at", "all", "NUMBER", "But", "I", "don", "t", "have", "any", "idea", "how", "to", "proceed", "debugging", "this", "NUMBER", "If", "you", "can", "state", "your", "domain", "name", "it", "would", "be", "easier", "to", "help", "you", "debug", "NUMBER", "I", "have", "CAA", "set", "for", "my", "domains", "and", "have", "no", "problem", "at", "all", "NUMBER", "This", "do", "appear", "to", "be", "an", "issue", "either", "with", "your", "DNS", "host", "or", "with", "Let", "s", "Encrypt", "s", "servers", "NUMBER", "Though", "the", "latter", "be", "less", "likely", "as", "it", "would", "be", "affecting", "far", "more", "users", "of", "Let", "s", "Encrypt", "if", "it", "were", "NUMBER", "So", "ultimately", "this", "be", "an", "issue", "you", "will", "likely", "need", "to", "take", "up", "with", "your", "DNS", "host", "NUMBER", "Even", "telling", "us", "the", "domain", "name", "itself", "won", "t", "help", "much", "as", "all", "we", "will", "be", "able", "to", "determine", "be", "whether", "it", "be", "just", "CAA", "records", "that", "be", "fail", "or", "if", "it", "s", "the", "whole", "domain", "that", "has", "an", "issue", "NUMBER", "Though", "it", "be", "also", "possible", "that", "DNSSEC", "be", "improperly", "setup", "for", "the", "domain", "too", "NUMBER", "I", "experienced", "that", "issue", "when", "I", "attempted", "to", "issue", "a", "certificate", "for", "one", "of", "my", "domains", "and", "get", "a", "SERVFAIL", "back", "from", "Let", "s", "Encrypt", "which", "turned", "out", "to", "be", "because", "there", "was", "an", "erroneous", "DS", "record", "still", "recorded", "at", "the", "NUMBER", "net", "DNS", "servers", "for", "the", "domain", "in", "question", "so", "DNSSEC", "validation", "was", "fail", "NUMBER", "Just", "a", "note", "to", "people", "come", "here", "from", "Google", "It", "appears", "to", "have", "be", "my", "DNS", "setup", "after", "all", "NUMBER", "For", "one", "thing", "the", "DNSSEC", "didn", "t", "sign", "my", "new", "CAA", "records", "fast", "enough", "NUMBER", "Then", "those", "change", "didn", "t", "propagate", "as", "fast", "as", "I", "would", "have", "thought", "they", "were", "probably", "cached", "somewhere", "from", "previous", "attempts", "NUMBER", "Most", "of", "this", "debugging", "was", "in", "the", "end", "waiting", "for", "the", "records", "to", "propagte", "NUMBER", "Take", "your", "time", "NUMBER", "Do", "a", "lot", "of", "dig", "ging", "NUMBER", "DNSviz", "LINK", "was", "also", "immensely", "helpful", "NUMBER", "Make", "sure", "to", "check", "the", "CAA", "line", "in", "the", "advance", "options", "screenshot", "below", "NUMBER", "This", "turned", "up", "the", "miss", "signature", "NUMBER", "Also", "the", "target", "domain", "of", "a", "CNAME", "may", "need", "its", "own", "CAA", "record", "I", "can", "t", "say", "for", "sure", "if", "this", "solve", "it", "because", "this", "happened", "somewhere", "along", "the", "way", "NUMBER", "dnsviz", "where", "to", "find", "the", "CAA", "setting", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "af", "NUMBER", "d", "NUMBER", "c", "NUMBER", "c", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "b", "NUMBER", "ef", "NUMBER", "png", "When", "use", "dns", "NUMBER", "with", "a", "hook", "script", "dehydrated", "moves", "directly", "from", "deploy_challenge", "to", "responding", "to", "challenge", "before", "the", "nsupdate", "has", "had", "time", "to", "complete", "NUMBER", "I", "have", "find", "that", "I", "need", "to", "wait", "at", "least", "NUMBER", "seconds", "after", "the", "deploy", "to", "ensure", "that", "the", "update", "has", "completed", "before", "responding", "to", "the", "challenge", "NUMBER", "This", "trivial", "patch", "works", "reliably", "in", "my", "environment", "NUMBER", "diff", "git", "a", "dehydrated", "b", "dehydrated", "index", "NUMBER", "f", "NUMBER", "ebfeb", "NUMBER", "a", "dehydrated", "b", "dehydrated", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "sign_csr", "Validate", "pending", "challenges", "local", "idx", "NUMBER", "echo", "Sleep", "for", "NUMBER", "seconds", "to", "allow", "dns", "NUMBER", "hook", "to", "complete", "and", "update", "sleep", "NUMBER", "while", "idx", "lt", "num_pending_challenges", "do", "echo", "Responding", "to", "challenge", "for", "challenge_names", "idx", "authorization", "NUMBER", "NUMBER", "this", "feature", "add", "support", "for", "fullkeyandchain", "NUMBER", "pem", "NUMBER", "It", "will", "contain", "the", "merge", "key", "and", "fullchain", "NUMBER", "I", "have", "some", "software", "which", "prefferes", "to", "get", "a", "combined", "key", "and", "fullchain", "pem", "so", "only", "one", "file", "be", "loaded", "NUMBER", "It", "would", "be", "great", "if", "the", "script", "would", "generate", "this", "in", "the", "certs", "directory", "next", "to", "the", "other", "output", "file", "like", "fullchain", "which", "be", "a", "combination", "of", "chain", "and", "cert", "as", "well", "etc", "NUMBER", "Right", "now", "i", "can", "do", "it", "with", "a", "hook", "but", "it", "would", "be", "great", "if", "you", "just", "run", "the", "script", "and", "the", "combined", "merge", "privkey_fullchain", "full", "NUMBER", "pem", "whould", "be", "generate", "Currently", "it", "seems", "KEY_ALGO", "can", "only", "be", "set", "to", "one", "value", "NUMBER", "I", "d", "like", "dehydrated", "to", "generate", "RSA", "and", "secp", "NUMBER", "r", "NUMBER", "keys", "automatically", "NUMBER", "I", "think", "I", "may", "work", "with", "two", "config", "file", "two", "cron", "jobs", "and", "two", "different", "certificate", "directories", "but", "for", "example", "acme", "NUMBER", "sh", "can", "do", "both", "NUMBER", "So", "it", "would", "be", "nice", "if", "dehydrated", "can", "do", "it", "as", "well", "NUMBER", "Sorry", "I", "miss", "NUMBER", "as", "I", "looked", "for", "duplicates", "NUMBER", "Subscribed", "there", "NUMBER", "Thank", "you", "NUMBER", "Hi", "NUMBER", "I", "install", "_dehydrated_", "on", "an", "internal", "server", "NUMBER", "It", "s", "behind", "a", "firewall", "but", "I", "opened", "port", "NUMBER", "and", "set", "a", "CNAME", "DDNS", "on", "our", "vServer", "with", "PLESK", "NUMBER", "The", "Plesk", "Server", "be", "www", "NUMBER", "example", "NUMBER", "org", "and", "the", "internal", "server", "be", "server", "NUMBER", "intern", "NUMBER", "example", "NUMBER", "org", "NUMBER", "This", "internal", "server", "can", "be", "reached", "via", "port", "NUMBER", "When", "I", "call", "LINK", "know", "acme", "challenge", "I", "can", "access", "an", "index", "NUMBER", "html", "and", "the", "token", "will", "be", "generate", "correctly", "NUMBER", "But", "when", "I", "try", "dehydrated", "cron", "I", "get", "this", "dehydrated", "cron", "INFO", "Using", "main", "config", "file", "etc", "dehydrated", "config", "Processing", "server", "NUMBER", "intern", "NUMBER", "example", "NUMBER", "org", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "server", "NUMBER", "intern", "NUMBER", "example", "NUMBER", "org", "NUMBER", "Hook", "Nothing", "to", "do", "NUMBER", "Responding", "to", "challenge", "for", "server", "NUMBER", "intern", "NUMBER", "example", "NUMBER", "org", "NUMBER", "Hook", "Nothing", "to", "do", "NUMBER", "Hook", "Nothing", "to", "do", "NUMBER", "ERROR", "Challenge", "be", "invalid", "returned", "invalid", "result", "type", "http", "NUMBER", "status", "invalid", "error", "type", "urn", "acme", "error", "connection", "detail", "Fetching", "LINK", "know", "acme", "challenge", "mbskngek\u00fcrztO", "NUMBER", "yk", "Timeout", "status", "NUMBER", "uri", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "Q", "NUMBER", "gbjgek\u00fcrzt", "NUMBER", "token", "mbsknIOgek\u00fcrzt", "NUMBER", "U", "NUMBER", "yk", "keyAuthorization", "mbskgek\u00fcrzt", "NUMBER", "U", "NUMBER", "yk", "NUMBER", "MqbIWBPjs", "validationRecord", "url", "LINK", "know", "acme", "challenge", "mgek\u00fcrzt", "NUMBER", "U", "NUMBER", "yk", "hostname", "server", "NUMBER", "intern", "NUMBER", "example", "NUMBER", "org", "port", "NUMBER", "addressesResolved", "NUMBER", "xxx", "NUMBER", "yyy", "NUMBER", "zzz", "addressUsed", "NUMBER", "xxx", "NUMBER", "yyy", "NUMBER", "zzz", "I", "have", "no", "idea", "what", "to", "do", "NUMBER", "IPv", "NUMBER", "be", "not", "activated", "so", "the", "fallback", "to", "IPv", "NUMBER", "should", "work", "NUMBER", "Any", "hints", "what", "to", "do", "Thanks", "NUMBER", "I", "m", "trying", "to", "use", "the", "domains", "NUMBER", "txt", "file", "with", "NUMBER", "domain", "NUMBER", "com", "wildcard", "NUMBER", "domain", "NUMBER", "com", "But", "when", "I", "use", "it", "I", "get", "ERROR", "Validating", "this", "certificate", "be", "not", "possible", "use", "http", "NUMBER", "Possible", "validation", "methods", "be", "dns", "NUMBER", "I", "m", "having", "a", "pretty", "hard", "time", "finding", "how", "to", "do", "this", "Unfortunately", "as", "a", "result", "of", "the", "issue", "of", "wildcard", "domain", "registration", "with", "their", "non", "wildcard", "counterpart", "see", "issue", "NUMBER", "LINK", "I", "cannot", "use", "dehydrated", "as", "the", "DNS", "provider", "s", "api", "do", "not", "support", "multiple", "TXT", "entry", "creation", "NUMBER", "The", "DNS", "provider", "I", "have", "only", "support", "this", "manually", "in", "their", "web", "GUI", "NUMBER", "I", "be", "sure", "that", "there", "be", "several", "DNS", "providers", "that", "have", "this", "same", "issue", "with", "no", "solution", "available", "in", "the", "near", "future", "NUMBER", "As", "a", "result", "I", "recommend", "we", "add", "a", "new", "feature", "to", "allow", "the", "user", "to", "optionally", "put", "the", "challenge", "token", "deployment", "inline", "with", "the", "logic", "where", "the", "validation", "be", "do", "NUMBER", "This", "way", "the", "challenge", "token", "be", "deployed", "and", "be", "then", "immediately", "validated", "before", "the", "next", "token", "be", "deployed", "NUMBER", "I", "have", "hacked", "this", "up", "myself", "and", "it", "works", "like", "a", "charm", "but", "I", "m", "sure", "others", "could", "benefit", "from", "this", "feature", "NUMBER", "For", "those", "who", "be", "interested", "just", "comment", "out", "the", "Deploy", "challenge", "tokens", "block", "and", "add", "the", "following", "code", "to", "the", "Validate", "pending", "challenges", "immediately", "after", "the", "while", "NUMBER", "do", "statement", "Deploy", "challenge", "token", "echo", "Deploying", "challenge", "token", "for", "challenge_names", "idx", "NUMBER", "HOOK", "deploy_challenge", "deploy_args", "idx", "Note", "This", "hack", "will", "make", "HOOK_CHAIN", "option", "moot", "NUMBER", "Out", "of", "curiosity", "which", "DNS", "provider", "be", "you", "use", "Because", "the", "one", "mention", "in", "issue", "NUMBER", "mentions", "that", "the", "hook", "script", "use", "has", "be", "fix", "to", "solve", "the", "issue", "NUMBER", "Because", "ultimately", "it", "sounds", "to", "me", "that", "the", "hook", "script", "you", "re", "use", "incorrectly", "replaces", "the", "TXT", "record", "with", "the", "same", "name", "instead", "of", "add", "a", "new", "one", "NUMBER", "Which", "also", "suggests", "to", "me", "a", "possibility", "that", "the", "author", "tried", "to", "save", "time", "not", "use", "the", "cleanup_challenge", "hook", "to", "remove", "old", "TXT", "records", "and", "just", "overwriting", "them", "every", "time", "instead", "NUMBER", "I", "be", "stuck", "use", "godaddy", "as", "its", "what", "the", "customer", "has", "NUMBER", "of", "their", "domains", "on", "NUMBER", "From", "my", "research", "the", "godaddy", "API", "LINK", "do", "not", "allow", "setting", "multiple", "TXT", "entries", "with", "the", "same", "name", "NUMBER", "The", "only", "applicable", "API", "for", "creating", "TXT", "records", "that", "I", "see", "be", "PUT", "v", "NUMBER", "domains", "domain", "records", "type", "name", "Replace", "all", "DNS", "Records", "for", "the", "specified", "Domain", "with", "the", "specified", "Type", "and", "Name", "If", "anyone", "can", "find", "a", "way", "to", "programatically", "set", "multiple", "TXT", "records", "with", "the", "same", "name", "in", "godaddy", "please", "let", "me", "know", "NUMBER", "GoDaddy", "s", "API", "do", "support", "add", "instead", "of", "replacing", "too", "but", "it", "appears", "to", "me", "the", "hook", "script", "listed", "for", "GoDaddy", "on", "LINK", "for", "DNS", "NUMBER", "hooks", "may", "or", "may", "not", "be", "use", "the", "wrong", "method", "of", "the", "godaddypy", "python", "library", "to", "update", "the", "DNS", "thus", "performing", "an", "update", "replace", "instead", "of", "an", "add", "NUMBER", "Sadly", "I", "don", "t", "have", "the", "resources", "to", "try", "and", "patch", "and", "test", "said", "script", "I", "don", "t", "use", "GoDaddy", "otherwise", "I", "d", "give", "it", "a", "try", "and", "test", "it", "NUMBER", "I", "was", "use", "lexicon", "which", "showed", "godaddy", "as", "support", "in", "their", "docs", "NUMBER", "I", "will", "try", "the", "py", "library", "listed", "today", "to", "see", "if", "they", "have", "an", "add", "api", "hook", "NUMBER", "I", "saw", "mention", "of", "this", "when", "someone", "was", "developing", "GoDaddy", "support", "for", "LINK", "IIRC", "GoDaddy", "s", "API", "erases", "all", "TXT", "records", "when", "you", "upload", "a", "new", "one", "I", "seem", "to", "remember", "something", "to", "the", "effect", "of", "having", "to", "poll", "for", "exist", "records", "first", "and", "saving", "them", "before", "add", "a", "new", "one", "to", "work", "around", "that", "NUMBER", "Is", "it", "possible", "that", "this", "poll", "save", "insert", "put", "flow", "be", "malfunctioning", "here", "I", "find", "the", "API", "hook", "LINK", "v", "NUMBER", "recordAdd", "in", "GoDaddy", "for", "add", "multiple", "records", "NUMBER", "Lexicon", "LINK", "do", "not", "use", "this", "Api", "call", "but", "its", "expose", "in", "pythons", "core", "library", "from", "godaddypy", "import", "Client", "Account", "DOMAIN", "_domain_", "API_KEY", "_api", "key_", "API_SECRET", "_api", "secret_", "REC_NAME", "_acme", "challenge", "client", "Client", "Account", "api_key", "API_KEY", "api_secret", "API_SECRET", "client", "NUMBER", "add_record", "DOMAIN", "data", "TEST_VAL_", "NUMBER", "name", "REC_NAME", "ttl", "NUMBER", "type", "TXT", "client", "NUMBER", "add_record", "DOMAIN", "data", "TEST_VAL_", "NUMBER", "name", "REC_NAME", "ttl", "NUMBER", "type", "TXT", "print", "DOMAIN", "Records", "listed", "should", "include", "TEST_VAL_", "NUMBER", "and", "TEST_VAL_", "NUMBER", "client", "NUMBER", "get_records", "DOMAIN", "record_type", "TXT", "The", "scary", "thing", "I", "see", "right", "now", "be", "that", "I", "cannot", "safely", "delete", "records", "via", "API", "as", "godaddy", "do", "not", "expose", "a", "safe", "call", "to", "do", "this", "NUMBER", "Here", "be", "a", "note", "from", "the", "python", "core", "library", "def", "delete_records", "This", "be", "haphazard", "functionality", "NUMBER", "I", "DO", "NOT", "recommend", "use", "this", "in", "Production", "code", "as", "your", "entire", "DNS", "record", "set", "could", "be", "delete", "depending", "on", "the", "fickleness", "of", "GoDaddy", "NUMBER", "Unfortunately", "they", "do", "not", "expose", "a", "proper", "delete", "record", "call", "so", "there", "isn", "t", "much", "one", "can", "do", "here", "NUMBER", "I", "read", "the", "code", "at", "it", "be", "very", "unsafe", "and", "not", "recommended", "NUMBER", "I", "guess", "for", "godaddy", "we", "can", "just", "spam", "TXT", "records", "in", "use", "the", "godaddypy", "API", "and", "delete", "them", "in", "a", "more", "safe", "way", "manually", "at", "a", "future", "date", "NUMBER", "I", "be", "on", "the", "fence", "regard", "this", "feature", "request", "ticket", "NUMBER", "There", "may", "still", "be", "merit", "in", "the", "approach", "NUMBER", "I", "run", "the", "script", "on", "just", "under", "NUMBER", "dns", "entries", "including", "wildcards", "use", "my", "hack", "at", "the", "top", "of", "this", "thread", "and", "it", "worked", "like", "a", "charm", "NUMBER", "lukas", "NUMBER", "Agreed", "NUMBER", "I", "spent", "the", "day", "work", "with", "le", "godaddy", "dns", "LINK", "godaddy", "dns", "and", "only", "had", "to", "add", "a", "small", "tweak", "to", "make", "the", "deploy_challenge", "hook", "invoke", "godaddypy", "client", "NUMBER", "add_record", "instead", "of", "update_record", "NUMBER", "I", "also", "add", "a", "tweak", "to", "update", "records", "to", "_dehydrated", "was", "here_", "during", "clean_challenge", "hook", "NUMBER", "The", "net", "result", "be", "a", "very", "fast", "cycle", "time", "for", "the", "cert", "generation", "and", "as", "I", "have", "to", "generate", "many", "certs", "with", "close", "to", "NUMBER", "dns", "entries", "in", "each", "this", "be", "a", "relief", "NUMBER", "I", "ll", "just", "ask", "the", "godaddy", "support", "guys", "to", "kill", "those", "TXT", "entries", "after", "I", "m", "do", "the", "cert", "deployment", "NUMBER", "FYI", "to", "others", "I", "be", "quite", "impressed", "with", "le", "godaddy", "dns", "NUMBER", "Its", "a", "very", "well", "write", "python", "library", "however", "it", "do", "need", "to", "be", "hacked", "to", "add", "functionality", "rather", "than", "configured", "NUMBER", "Thanks", "for", "dehydrated", "its", "an", "awesome", "library", "and", "will", "definitely", "be", "a", "reference", "when", "I", "need", "to", "do", "some", "advance", "bashing", "down", "the", "road", "JavaScriptDude", "Your", "hacky", "solution", "in", "comment", "LINK", "issuecomment", "NUMBER", "saved", "me", "after", "a", "couple", "of", "hours", "of", "pulling", "my", "hair", "why", "the", "challenge", "fail", "for", "DuckDNS", "NUMBER", "They", "only", "support", "one", "TXT", "record", "per", "domain", "and", "sub", "subdomains", "TXT", "count", "towards", "your", "account", "so", "you", "can", "have", "only", "one", "global", "TXT", "record", "for", "all", "your", "sub", "subdomains", "NUMBER", "E", "NUMBER", "g", "NUMBER", "something", "NUMBER", "duckdns", "NUMBER", "org", "returns", "the", "same", "TXT", "record", "as", "sub", "NUMBER", "something", "NUMBER", "duckdns", "NUMBER", "org", "or", "anothersub", "NUMBER", "something", "NUMBER", "duckdns", "NUMBER", "org", "NUMBER", "That", "be", "why", "the", "wildcard", "cert", "creation", "fail", "for", "me", "many", "many", "times", "before", "I", "find", "your", "comment", "NUMBER", "Thanks", "random", "Internet", "person", "smiley", "I", "have", "a", "little", "unusual", "problem", "I", "search", "for", "solution", "for", "hours", "and", "didn", "t", "find", "anything", "NUMBER", "I", "want", "certificate", "for", "ftp", "NUMBER", "example", "NUMBER", "net", "and", "the", "only", "option", "be", "DNS", "validation", "because", "there", "s", "no", "HTTP", "service", "on", "ftp", "NUMBER", "example", "NUMBER", "net", "NUMBER", "I", "also", "want", "to", "use", "the", "CNAME", "trick", "_acme", "challenge", "NUMBER", "example", "NUMBER", "net", "CNAME", "example", "net", "NUMBER", "acme", "NUMBER", "otherdomain", "NUMBER", "net", "for", "one", "reason", "or", "another", "either", "there", "s", "no", "automate", "access", "to", "example", "NUMBER", "net", "nameservers", "at", "all", "or", "it", "s", "all", "or", "nothing", "and", "I", "don", "t", "like", "the", "idea", "that", "the", "client", "could", "change", "any", "record", "under", "example", "NUMBER", "net", "NUMBER", "My", "expectation", "was", "that", "I", "simply", "set", "one", "CNAME", "for", "_acme", "challenge", "NUMBER", "example", "NUMBER", "net", "and", "it", "will", "be", "enough", "NUMBER", "But", "it", "isn", "t", "because", "Let", "s", "Encrypt", "be", "looking", "for", "_acme", "challenge", "NUMBER", "ftp", "NUMBER", "example", "NUMBER", "net", "NUMBER", "If", "it", "was", "only", "one", "subdomain", "it", "would", "be", "ok", "to", "add", "another", "CNAME", "NUMBER", "But", "what", "if", "I", "want", "ftp", "NUMBER", "to", "ftp", "NUMBER", "I", "don", "t", "want", "to", "add", "NUMBER", "CNAMEs", "NUMBER", "Luckily", "I", "can", "now", "solve", "it", "use", "wildcard", "certificate", "for", "NUMBER", "example", "NUMBER", "net", "and", "just", "one", "CNAME", "will", "be", "enough", "for", "that", "NUMBER", "But", "if", "_acme", "challenge", "NUMBER", "example", "NUMBER", "net", "be", "good", "enough", "for", "NUMBER", "example", "NUMBER", "net", "shouldn", "t", "it", "also", "suffice", "for", "ftp", "NUMBER", "example", "NUMBER", "net", "which", "be", "only", "tiny", "subset", "Is", "this", "something", "that", "dehydrated", "could", "influence", "or", "be", "it", "limitation", "of", "ACME", "protocol", "Unfortunately", "you", "will", "require", "a", "CNAME", "for", "EVERY", "specific", "host", "name", "you", "want", "to", "include", "in", "a", "certificate", "NUMBER", "Additionally", "this", "decision", "be", "not", "within", "dehydrated", "s", "control", "NUMBER", "It", "be", "a", "decision", "made", "either", "by", "Let", "s", "Encrypt", "or", "by", "the", "authors", "of", "the", "ACME", "protocol", "specification", "NUMBER", "I", "will", "admit", "I", "too", "be", "use", "the", "CNAME", "method", "so", "I", "don", "t", "have", "to", "enable", "dynamic", "DNS", "for", "all", "the", "domains", "I", "manage", "and", "the", "keys", "I", "have", "setup", "for", "my", "dynamic", "DNS", "only", "allow", "setting", "TXT", "records", "as", "an", "add", "security", "precaution", "even", "though", "the", "dynamic", "DNS", "zone", "I", "use", "be", "hosted", "o", "the", "same", "DNS", "servers", "as", "the", "other", "domains", "NUMBER", "No", "problem", "I", "will", "manage", "NUMBER", "I", "was", "just", "wondering", "about", "options", "NUMBER", "I", "thought", "that", "client", "could", "perhaps", "be", "allow", "to", "choose", "which", "domain", "to", "use", "for", "DNS", "verification", "the", "one", "it", "wants", "certificate", "for", "or", "its", "parent", "NUMBER", "Changing", "it", "to", "require", "_acme", "challenge", "only", "directly", "under", "main", "domain", "would", "be", "of", "course", "wrong", "for", "the", "exact", "reason", "you", "gave", "NUMBER", "But", "as", "it", "be", "now", "it", "s", "not", "exactly", "intuitive", "NUMBER", "If", "I", "control", "main", "domain", "it", "means", "I", "also", "control", "subdomains", "so", "it", "would", "make", "sense", "if", "I", "could", "prove", "ownership", "of", "either", "when", "I", "want", "certificate", "for", "subdomain", "NUMBER", "Now", "it", "feels", "strange", "it", "s", "like", "kid", "be", "refused", "to", "take", "one", "cookie", "certificate", "for", "specific", "subdomain", "but", "free", "to", "take", "a", "full", "bag", "of", "them", "wildcard", "certificate", "which", "include", "originally", "wanted", "one", "NUMBER", "Anyway", "thanks", "for", "info", "NUMBER", "Trying", "to", "run", "dehydrated", "on", "an", "older", "mac", "os", "x", "system", "I", "m", "run", "into", "this", "error", "dehydrated", "line", "NUMBER", "set", "pipefail", "invalid", "option", "name", "Output", "of", "bash", "x", "dehydrated", "c", "set", "e", "set", "u", "set", "o", "pipefail", "dehydrated", "line", "NUMBER", "set", "pipefail", "invalid", "option", "name", "Bash", "version", "be", "GNU", "bash", "version", "NUMBER", "b", "NUMBER", "NUMBER", "release", "powerpc", "apple", "darwin", "NUMBER", "On", "another", "Mac", "OS", "machine", "with", "a", "more", "recent", "bash", "version", "GNU", "bash", "version", "NUMBER", "NUMBER", "release", "x", "NUMBER", "_", "NUMBER", "apple", "darwin", "NUMBER", "I", "do", "not", "get", "this", "error", "NUMBER", "Is", "there", "any", "workaround", "for", "this", "On", "Mar", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "etanol", "NUMBER", "TAG", "write", "Is", "there", "any", "workaround", "for", "this", "brew", "install", "bash", "This", "be", "my", "signature", "NUMBER", "There", "be", "many", "like", "it", "but", "this", "one", "be", "mine", "NUMBER", "Many", "thanks", "this", "bash", "NUMBER", "solve", "the", "issue", "Thanks", "yes", "this", "be", "Mac", "OS", "NUMBER", "i", "think", "that", "Mac", "OS", "X", "NUMBER", "still", "can", "run", "on", "PPC", "and", "comes", "standard", "with", "BASH", "NUMBER", "so", "in", "that", "case", "that", "could", "work", "out", "of", "the", "box", "NUMBER", "FIY", "I", "tried", "the", "preinstalled", "zsh", "with", "zsh", "NUMBER", "dehydrated", "v", "and", "that", "did", "not", "work", "either", "NUMBER", "dehydrated", "set", "NUMBER", "no", "such", "option", "pipefail", "NUMBER", "dehydrated", "NUMBER", "parse", "error", "near", "local", "Thanks", "again", "I", "m", "not", "sure", "what", "cause", "this", "honestly", "NUMBER", "but", "here", "s", "what", "happened", "NUMBER", "This", "occur", "use", "dehydrated", "from", "master", "revision", "b", "NUMBER", "e", "NUMBER", "b", "during", "a", "normal", "cron", "run", "NUMBER", "One", "of", "my", "certificates", "has", "a", "certificate", "specific", "config", "file", "there", "which", "specifies", "a", "different", "hook", "file", "NUMBER", "There", "be", "no", "other", "variables", "set", "in", "that", "cert", "specific", "config", "NUMBER", "During", "the", "cron", "run", "I", "get", "the", "following", "output", "Processing", "TAG", "with", "alternative", "names", "TAG", "Using", "certificate", "specific", "config", "file", "HOOK", "srv", "dehydrated", "hooks", "dns", "NUMBER", "manual", "cron", "hook", "NUMBER", "sh", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Less", "than", "NUMBER", "days", "NUMBER", "Renewing", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Received", "NUMBER", "authorizations", "URLs", "from", "the", "CA", "Handling", "authorization", "for", "TAG", "Handling", "authorization", "for", "TAG", "Handling", "authorization", "for", "TAG", "Handling", "authorization", "for", "TAG", "Handling", "authorization", "for", "TAG", "Handling", "authorization", "for", "TAG", "NUMBER", "pending", "challenge", "s", "Deploying", "challenge", "tokens", "NUMBER", "The", "output", "for", "that", "certificate", "stopped", "there", "NUMBER", "As", "I", "had", "keep", "going", "set", "the", "run", "continued", "on", "to", "the", "next", "certificate", "in", "the", "list", "and", "wrapped", "up", "normally", "NUMBER", "I", "caught", "it", "on", "review", "of", "the", "log", "and", "didn", "t", "think", "much", "of", "it", "I", "d", "recently", "be", "fiddling", "with", "the", "hook", "script", "for", "that", "certificate", "and", "figured", "I", "had", "created", "an", "error", "of", "some", "sort", "that", "crashed", "the", "hook", "NUMBER", "But", "I", "also", "notice", "today", "that", "there", "was", "a", "new", "accounts", "directory", "in", "the", "certificate", "output", "directory", "for", "that", "certificate", "with", "a", "CA", "hash", "corresponding", "to", "the", "ACME", "v", "NUMBER", "endpoint", "with", "no", "contents", "NUMBER", "That", "be", "BASEDIR", "accounts", "ACME", "v", "NUMBER", "CA", "hash", "with", "account", "keys", "ACME", "v", "NUMBER", "CA", "hash", "symlink", "to", "v", "NUMBER", "folder", "certs", "domain", "accounts", "ACME", "v", "NUMBER", "CA", "hash", "no", "contents", "cert", "NUMBER", "pem", "fullchain", "NUMBER", "pem", "etc", "NUMBER", "I", "don", "t", "know", "how", "this", "new", "accounts", "directory", "get", "there", "NUMBER", "The", "time", "of", "creation", "matches", "the", "time", "when", "the", "cron", "job", "was", "executing", "NUMBER", "And", "there", "s", "zero", "chance", "my", "hook", "script", "was", "creating", "an", "accounts", "directory", "with", "the", "CA", "hash", "underneath", "it", "NUMBER", "The", "other", "certificates", "processed", "at", "the", "same", "time", "do", "not", "have", "a", "local", "accounts", "folder", "created", "NUMBER", "It", "only", "shows", "up", "in", "the", "directory", "for", "the", "certificate", "with", "the", "per", "certificate", "config", "file", "which", "incidentally", "never", "returned", "from", "the", "deploy", "hook", "but", "died", "quietly", "enough", "to", "move", "on", "to", "the", "next", "certificate", "without", "leaving", "an", "error", "in", "the", "cron", "log", "NUMBER", "I", "m", "not", "sure", "what", "to", "make", "of", "it", "honestly", "NUMBER", "Any", "thoughts", "The", "command", "as", "write", "in", "cron", "be", "srv", "dehydrated", "dehydrated", "cron", "keep", "going", "Main", "config", "file", "be", "located", "at", "srv", "dehydrated", "config", "NUMBER", "The", "certificate", "specific", "config", "file", "be", "located", "within", "the", "certificate", "directory", "but", "do", "not", "override", "the", "value", "of", "BASEDIR", "which", "be", "set", "within", "the", "main", "config", "file", "NUMBER", "I", "know", "it", "s", "weird", "NUMBER", "LINK", "be", "available", "in", "most", "distributions", "these", "days", "NUMBER", "Not", "on", "older", "systems", "though", "NUMBER", "Hi", "I", "be", "not", "NUMBER", "sure", "this", "be", "a", "dehydrated", "issue", "however", "it", "s", "just", "start", "on", "two", "different", "servers", "I", "control", "NUMBER", "I", "can", "t", "seem", "to", "create", "ECC", "certificates", "anymore", "only", "RSA", "ones", "NUMBER", "I", "have", "the", "following", "script", "I", "run", "every", "couple", "of", "weeks", "to", "generate", "my", "certs", "RSA", "Certificates", "usr", "local", "dehydrated", "dehydrated", "c", "x", "d", "muppetz", "NUMBER", "com", "d", "beaker", "NUMBER", "muppetz", "NUMBER", "com", "d", "reader", "NUMBER", "muppetz", "NUMBER", "com", "o", "etc", "letsencrypt", "rsa", "a", "rsa", "ECC", "Certificates", "usr", "local", "dehydrated", "dehydrated", "c", "x", "d", "muppetz", "NUMBER", "com", "d", "beaker", "NUMBER", "muppetz", "NUMBER", "com", "d", "www", "NUMBER", "muppetz", "NUMBER", "com", "d", "lice", "NUMBER", "muppetz", "NUMBER", "com", "d", "tjharman", "NUMBER", "com", "d", "www", "NUMBER", "tjharman", "NUMBER", "com", "d", "old", "NUMBER", "tjharman", "NUMBER", "com", "d", "gallery", "NUMBER", "tjharman", "NUMBER", "com", "d", "matchboxdigital", "NUMBER", "co", "NUMBER", "nz", "d", "www", "NUMBER", "matchboxdigital", "NUMBER", "co", "NUMBER", "nz", "d", "tasks", "NUMBER", "muppetz", "NUMBER", "com", "o", "etc", "letsencrypt", "ecc", "a", "secp", "NUMBER", "r", "NUMBER", "Today", "I", "did", "a", "git", "pull", "to", "ensure", "I", "m", "at", "the", "latest", "and", "recieved", "this", "root", "beaker", "usr", "local", "dehydrated", "NUMBER", "force", "update", "NUMBER", "sh", "WARNING", "No", "main", "config", "file", "find", "use", "default", "config", "Reusing", "account", "from", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "Processing", "muppetz", "NUMBER", "com", "with", "alternative", "names", "beaker", "NUMBER", "muppetz", "NUMBER", "com", "reader", "NUMBER", "muppetz", "NUMBER", "com", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Longer", "than", "NUMBER", "days", "NUMBER", "Ignoring", "because", "renew", "was", "forced", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Received", "NUMBER", "authorizations", "URLs", "from", "the", "CA", "Handling", "authorization", "for", "beaker", "NUMBER", "muppetz", "NUMBER", "com", "Handling", "authorization", "for", "muppetz", "NUMBER", "com", "Handling", "authorization", "for", "reader", "NUMBER", "muppetz", "NUMBER", "com", "NUMBER", "pending", "challenge", "s", "Deploying", "challenge", "tokens", "NUMBER", "Responding", "to", "challenge", "for", "beaker", "NUMBER", "muppetz", "NUMBER", "com", "authorization", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "muppetz", "NUMBER", "com", "authorization", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "reader", "NUMBER", "muppetz", "NUMBER", "com", "authorization", "NUMBER", "Challenge", "be", "valid", "Requesting", "certificate", "NUMBER", "Checking", "certificate", "NUMBER", "Done", "Creating", "fullchain", "NUMBER", "pem", "NUMBER", "Done", "RSA", "certs", "renewed", "no", "problem", "NUMBER", "But", "ECC", "gives", "me", "this", "WARNING", "No", "main", "config", "file", "find", "use", "default", "config", "Processing", "muppetz", "NUMBER", "com", "with", "alternative", "names", "beaker", "NUMBER", "muppetz", "NUMBER", "com", "www", "NUMBER", "muppetz", "NUMBER", "com", "lice", "NUMBER", "muppetz", "NUMBER", "com", "tjharman", "NUMBER", "com", "www", "NUMBER", "tjharman", "NUMBER", "com", "old", "NUMBER", "tjharman", "NUMBER", "com", "gallery", "NUMBER", "tjharman", "NUMBER", "com", "mat", "chboxdigital", "NUMBER", "co", "NUMBER", "nz", "www", "NUMBER", "matchboxdigital", "NUMBER", "co", "NUMBER", "nz", "tasks", "NUMBER", "muppetz", "NUMBER", "com", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Longer", "than", "NUMBER", "days", "NUMBER", "Ignoring", "because", "renew", "was", "forced", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Received", "NUMBER", "authorizations", "URLs", "from", "the", "CA", "Handling", "authorization", "for", "beaker", "NUMBER", "muppetz", "NUMBER", "com", "Handling", "authorization", "for", "old", "NUMBER", "tjharman", "NUMBER", "com", "Handling", "authorization", "for", "tasks", "NUMBER", "muppetz", "NUMBER", "com", "Handling", "authorization", "for", "muppetz", "NUMBER", "com", "Handling", "authorization", "for", "www", "NUMBER", "tjharman", "NUMBER", "com", "Handling", "authorization", "for", "www", "NUMBER", "matchboxdigital", "NUMBER", "co", "NUMBER", "nz", "Handling", "authorization", "for", "tjharman", "NUMBER", "com", "Handling", "authorization", "for", "www", "NUMBER", "muppetz", "NUMBER", "com", "Handling", "authorization", "for", "matchboxdigital", "NUMBER", "co", "NUMBER", "nz", "Handling", "authorization", "for", "gallery", "NUMBER", "tjharman", "NUMBER", "com", "Handling", "authorization", "for", "lice", "NUMBER", "muppetz", "NUMBER", "com", "NUMBER", "pending", "challenge", "s", "Deploying", "challenge", "tokens", "NUMBER", "Responding", "to", "challenge", "for", "beaker", "NUMBER", "muppetz", "NUMBER", "com", "authorization", "NUMBER", "ERROR", "Challenge", "be", "invalid", "returned", "result", "fq", "NUMBER", "ldiV", "NUMBER", "BvDY", "NUMBER", "h", "NUMBER", "kbgSF", "NUMBER", "aQFtrU", "NUMBER", "DJnloBtFgQ", "NUMBER", "nN", "NUMBER", "l", "NUMBER", "mws_vhiPTBOBS", "NUMBER", "dImBuq", "NUMBER", "Tuw", "NUMBER", "VY", "NUMBER", "jxC", "NUMBER", "qeBK", "NUMBER", "w", "I", "have", "be", "get", "a", "similar", "problem", "with", "ECC", "certs", "on", "another", "box", "for", "other", "NUMBER", "muppetz", "NUMBER", "com", "domains", "the", "ERROR", "Challenge", "be", "invalid", "returned", "result", "TAG", "use", "the", "latest", "dehydrated", "but", "I", "had", "assumed", "this", "was", "a", "rate", "limit", "error", "on", "that", "machine", "and", "ignored", "it", "for", "the", "moment", "NUMBER", "I", "have", "no", "problem", "accessing", "the", "NUMBER", "well", "know", "acme", "challenge", "XXXX", "URL", "this", "has", "be", "setup", "in", "Apache", "for", "the", "last", "year", "with", "no", "issue", "and", "works", "as", "you", "can", "see", "in", "the", "RSA", "request", "What", "do", "ERROR", "Challenge", "be", "invalid", "returned", "result", "TAG", "mean", "As", "I", "stated", "above", "I", "thought", "on", "my", "other", "box", "it", "was", "a", "rate", "limit", "issue", "but", "I", "have", "tried", "only", "twice", "to", "renew", "these", "ECC", "certs", "and", "be", "sure", "I", "m", "not", "be", "rate", "limited", "yet", "NUMBER", "So", "I", "thought", "I", "d", "test", "on", "a", "_third_", "server", "I", "have", "this", "one", "runs", "nginx", "NUMBER", "This", "be", "now", "really", "confusing", "me", "root", "animal", "usr", "local", "dehydrated", "usr", "local", "dehydrated", "dehydrated", "c", "x", "d", "animal", "NUMBER", "muppetz", "NUMBER", "com", "o", "etc", "letsencrypt", "rsa", "WARNING", "No", "main", "config", "file", "find", "use", "default", "config", "Processing", "animal", "NUMBER", "muppetz", "NUMBER", "com", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "Jun", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Certificate", "will", "not", "expire", "Longer", "than", "NUMBER", "days", "NUMBER", "Ignoring", "because", "renew", "was", "forced", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Received", "NUMBER", "authorizations", "URLs", "from", "the", "CA", "Handling", "authorization", "for", "animal", "NUMBER", "muppetz", "NUMBER", "com", "NUMBER", "pending", "challenge", "s", "Deploying", "challenge", "tokens", "NUMBER", "Responding", "to", "challenge", "for", "animal", "NUMBER", "muppetz", "NUMBER", "com", "authorization", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "know", "acme", "challenge", "h", "NUMBER", "jAxFPy", "NUMBER", "srhCfs", "NUMBER", "EWNlwub", "NUMBER", "MGkL", "NUMBER", "SQ", "NUMBER", "UczQP", "NUMBER", "XH", "NUMBER", "Status", "NUMBER", "Details", "HTTP", "NUMBER", "NUMBER", "Not", "Allowed", "Server", "nginx", "NUMBER", "Date", "Sun", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Content", "Type", "text", "html", "Content", "Length", "NUMBER", "Connection", "keep", "alive", "TAG", "TAG", "TAG", "NUMBER", "Not", "Allowed", "TAG", "TAG", "TAG", "TAG", "TAG", "NUMBER", "Not", "Allowed", "TAG", "TAG", "TAG", "TAG", "nginx", "NUMBER", "TAG", "TAG", "TAG", "root", "animal", "usr", "local", "dehydrated", "NUMBER", "dehydrated", "version", "WARNING", "No", "main", "config", "file", "find", "use", "default", "config", "Dehydrated", "by", "Lukas", "Schauer", "LINK", "Dehydrated", "version", "git", "master", "after", "NUMBER", "GIT", "Revision", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "e", "NUMBER", "d", "NUMBER", "fa", "NUMBER", "ff", "NUMBER", "bea", "NUMBER", "OS", "Debian", "GNU", "Linux", "NUMBER", "Used", "software", "bash", "NUMBER", "NUMBER", "release", "curl", "curl", "NUMBER", "awk", "GNU", "Awk", "NUMBER", "API", "NUMBER", "GNU", "MPFR", "NUMBER", "GNU", "MP", "NUMBER", "sed", "sed", "GNU", "sed", "NUMBER", "mktemp", "mktemp", "GNU", "coreutils", "NUMBER", "grep", "grep", "GNU", "grep", "NUMBER", "diff", "diff", "GNU", "diffutils", "NUMBER", "openssl", "OpenSSL", "NUMBER", "f", "NUMBER", "May", "NUMBER", "root", "animal", "usr", "local", "dehydrated", "root", "animal", "usr", "local", "dehydrated", "usr", "local", "dehydrated", "dehydrated", "c", "x", "d", "animal", "NUMBER", "muppetz", "NUMBER", "com", "o", "etc", "letsencrypt", "rsa", "WARNING", "No", "main", "config", "file", "find", "use", "default", "config", "Processing", "animal", "NUMBER", "muppetz", "NUMBER", "com", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "Jun", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Certificate", "will", "not", "expire", "Longer", "than", "NUMBER", "days", "NUMBER", "Ignoring", "because", "renew", "was", "forced", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Received", "NUMBER", "authorizations", "URLs", "from", "the", "CA", "Handling", "authorization", "for", "animal", "NUMBER", "muppetz", "NUMBER", "com", "type", "http", "NUMBER", "status", "valid", "url", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "umBGaJbxT", "NUMBER", "RyVXE", "NUMBER", "EHbAK", "NUMBER", "ahIB", "NUMBER", "bxYWcI_", "NUMBER", "YQvIGs", "NUMBER", "Y", "NUMBER", "token", "h", "NUMBER", "jAxFPy", "NUMBER", "srhCfs", "NUMBER", "EWNlwub", "NUMBER", "MGkL", "NUMBER", "SQ", "NUMBER", "UczQP", "NUMBER", "XH", "NUMBER", "validationRecord", "url", "LINK", "know", "acme", "challenge", "h", "NUMBER", "jAxFPy", "NUMBER", "srhCfs", "NUMBER", "EWNlwub", "NUMBER", "MGkL", "NUMBER", "SQ", "NUMBER", "UczQP", "NUMBER", "XH", "NUMBER", "hostname", "animal", "NUMBER", "muppetz", "NUMBER", "com", "port", "NUMBER", "addressesResolved", "NUMBER", "addressUsed", "NUMBER", "NUMBER", "pending", "challenge", "s", "Deploying", "challenge", "tokens", "NUMBER", "Responding", "to", "challenge", "for", "animal", "NUMBER", "muppetz", "NUMBER", "com", "authorization", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "know", "acme", "challenge", "h", "NUMBER", "jAxFPy", "NUMBER", "srhCfs", "NUMBER", "EWNlwub", "NUMBER", "MGkL", "NUMBER", "SQ", "NUMBER", "UczQP", "NUMBER", "XH", "NUMBER", "Status", "NUMBER", "Details", "HTTP", "NUMBER", "NUMBER", "Not", "Allowed", "Server", "nginx", "NUMBER", "Date", "Sun", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Content", "Type", "text", "html", "Content", "Length", "NUMBER", "Connection", "keep", "alive", "TAG", "TAG", "TAG", "NUMBER", "Not", "Allowed", "TAG", "TAG", "TAG", "TAG", "TAG", "NUMBER", "Not", "Allowed", "TAG", "TAG", "TAG", "TAG", "nginx", "NUMBER", "TAG", "TAG", "TAG", "I", "should", "note", "the", "NGINX", "server", "be", "the", "NUMBER", "server", "I", "m", "having", "problem", "with", "NUMBER", "The", "previous", "two", "that", "I", "posted", "where", "I", "get", "the", "ERROR", "Challenge", "be", "invalid", "returned", "result", "TAG", "be", "Apache", "NUMBER", "servers", "NUMBER", "Here", "s", "the", "modify", "output", "from", "the", "main", "one", "I", "wish", "to", "fix", "root", "micro", "usr", "local", "dehydrated", "usr", "local", "dehydrated", "dehydrated", "c", "x", "d", "micro", "NUMBER", "muppetz", "NUMBER", "com", "d", "radio", "NUMBER", "muppetz", "NUMBER", "com", "o", "etc", "letsencrypt", "rsa", "WARNING", "No", "main", "config", "file", "find", "use", "default", "config", "Processing", "micro", "NUMBER", "muppetz", "NUMBER", "com", "with", "alternative", "names", "radio", "NUMBER", "muppetz", "NUMBER", "com", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Certificate", "will", "not", "expire", "Longer", "than", "NUMBER", "days", "NUMBER", "Ignoring", "because", "renew", "was", "forced", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Received", "NUMBER", "authorizations", "URLs", "from", "the", "CA", "Handling", "authorization", "for", "micro", "NUMBER", "muppetz", "NUMBER", "com", "type", "http", "NUMBER", "status", "valid", "url", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "NUMBER", "b", "NUMBER", "cKCYIAoY_RWbkrAz", "NUMBER", "gWuhBrcmPitQExSyd", "NUMBER", "wIAsM", "NUMBER", "token", "NUMBER", "l", "NUMBER", "H", "NUMBER", "dn", "ijQgoUVgxmJMy", "NUMBER", "q", "NUMBER", "mFtjIhfEENNzzj_Q", "validationRecord", "url", "LINK", "know", "acme", "challenge", "NUMBER", "l", "NUMBER", "H", "NUMBER", "dn", "ijQgoUVgxmJMy", "NUMBER", "q", "NUMBER", "mFtjIhfEENNzzj_Q", "hostname", "micro", "NUMBER", "muppetz", "NUMBER", "com", "port", "NUMBER", "addressesResolved", "NUMBER", "addressUsed", "NUMBER", "Handling", "authorization", "for", "radio", "NUMBER", "muppetz", "NUMBER", "com", "type", "http", "NUMBER", "status", "valid", "url", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "ae", "NUMBER", "XbVpG", "NUMBER", "NcV_a", "NUMBER", "rrthu", "NUMBER", "zd", "NUMBER", "DMKD", "NUMBER", "_X", "NUMBER", "vWbNr", "NUMBER", "NUMBER", "token", "NUMBER", "do", "NUMBER", "inPqAdUIi", "Yi__gmL", "NUMBER", "gmJC", "NUMBER", "X", "NUMBER", "Rc", "NUMBER", "DwcJ", "NUMBER", "HuMp", "NUMBER", "validationRecord", "url", "LINK", "know", "acme", "challenge", "NUMBER", "do", "NUMBER", "inPqAdUIi", "Yi__gmL", "NUMBER", "gmJC", "NUMBER", "X", "NUMBER", "Rc", "NUMBER", "DwcJ", "NUMBER", "HuMp", "NUMBER", "hostname", "radio", "NUMBER", "muppetz", "NUMBER", "com", "port", "NUMBER", "addressesResolved", "NUMBER", "addressUsed", "NUMBER", "NUMBER", "pending", "challenge", "s", "Deploying", "challenge", "tokens", "NUMBER", "Responding", "to", "challenge", "for", "micro", "NUMBER", "muppetz", "NUMBER", "com", "authorization", "NUMBER", "ERROR", "Challenge", "be", "invalid", "returned", "result", "NUMBER", "l", "NUMBER", "H", "NUMBER", "dn", "ijQgoUVgxmJMy", "NUMBER", "q", "NUMBER", "mFtjIhfEENNzzj_Q", "NUMBER", "CVIsPnr", "NUMBER", "yFW", "NUMBER", "cY", "NUMBER", "rBQ", "NUMBER", "yPCDbeHFkCHHnemmEZTRD", "NUMBER", "T", "NUMBER", "root", "micro", "usr", "local", "dehydrated", "NUMBER", "dehydrated", "version", "WARNING", "No", "main", "config", "file", "find", "use", "default", "config", "Dehydrated", "by", "Lukas", "Schauer", "LINK", "Dehydrated", "version", "git", "master", "after", "NUMBER", "GIT", "Revision", "NUMBER", "c", "NUMBER", "c", "NUMBER", "a", "NUMBER", "e", "NUMBER", "d", "NUMBER", "fa", "NUMBER", "ff", "NUMBER", "bea", "NUMBER", "OS", "Debian", "GNU", "Linux", "NUMBER", "Used", "software", "bash", "NUMBER", "NUMBER", "release", "curl", "curl", "NUMBER", "awk", "GNU", "Awk", "NUMBER", "API", "NUMBER", "GNU", "MPFR", "NUMBER", "GNU", "MP", "NUMBER", "sed", "sed", "GNU", "sed", "NUMBER", "mktemp", "mktemp", "GNU", "coreutils", "NUMBER", "grep", "grep", "GNU", "grep", "NUMBER", "diff", "diff", "GNU", "diffutils", "NUMBER", "openssl", "OpenSSL", "NUMBER", "f", "NUMBER", "May", "NUMBER", "Can", "confirm", "your", "patch", "fix", "the", "problem", "for", "me", "Thank", "you", "root", "animal", "usr", "local", "dehydrated", "usr", "local", "dehydrated", "dehydrated", "c", "x", "d", "animal", "NUMBER", "muppetz", "NUMBER", "com", "o", "etc", "letsencrypt", "rsa", "WARNING", "No", "main", "config", "file", "find", "use", "default", "config", "Processing", "animal", "NUMBER", "muppetz", "NUMBER", "com", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "Jun", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Certificate", "will", "not", "expire", "Longer", "than", "NUMBER", "days", "NUMBER", "Ignoring", "because", "renew", "was", "forced", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Received", "NUMBER", "authorizations", "URLs", "from", "the", "CA", "Handling", "authorization", "for", "animal", "NUMBER", "muppetz", "NUMBER", "com", "type", "http", "NUMBER", "status", "valid", "url", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "umBGaJbxT", "NUMBER", "RyVXE", "NUMBER", "EHbAK", "NUMBER", "ahIB", "NUMBER", "bxYWcI_", "NUMBER", "YQvIGs", "NUMBER", "Y", "NUMBER", "token", "h", "NUMBER", "jAxFPy", "NUMBER", "srhCfs", "NUMBER", "EWNlwub", "NUMBER", "MGkL", "NUMBER", "SQ", "NUMBER", "UczQP", "NUMBER", "XH", "NUMBER", "validationRecord", "url", "LINK", "know", "acme", "challenge", "h", "NUMBER", "jAxFPy", "NUMBER", "srhCfs", "NUMBER", "EWNlwub", "NUMBER", "MGkL", "NUMBER", "SQ", "NUMBER", "UczQP", "NUMBER", "XH", "NUMBER", "hostname", "animal", "NUMBER", "muppetz", "NUMBER", "com", "port", "NUMBER", "addressesResolved", "NUMBER", "addressUsed", "NUMBER", "NUMBER", "pending", "challenge", "s", "Deploying", "challenge", "tokens", "NUMBER", "Responding", "to", "challenge", "for", "animal", "NUMBER", "muppetz", "NUMBER", "com", "authorization", "NUMBER", "Challenge", "be", "valid", "Requesting", "certificate", "NUMBER", "Checking", "certificate", "NUMBER", "Done", "Creating", "fullchain", "NUMBER", "pem", "NUMBER", "Done", "This", "has", "also", "fix", "the", "problem", "on", "my", "two", "other", "boxes", "THANK", "YOU", "With", "OCSP_FETCH", "yes", "the", "code", "responsible", "for", "fetching", "the", "OCSP", "response", "be", "run", "after", "the", "deploy_cert", "unchanged_cert", "hooks", "be", "call", "NUMBER", "This", "makes", "it", "impossible", "to", "update", "the", "stapling", "file", "for", "haproxy", "other", "webservers", "that", "require", "the", "file", "to", "be", "named", "in", "a", "specific", "way", "NUMBER", "Perhaps", "one", "way", "of", "solving", "it", "could", "be", "calling", "a", "new", "hook", "ocsp_update", "whenever", "the", "response", "be", "update", "n", "HOOK", "HOOK", "ocsp_update", "domain", "certdir", "ocsp", "NUMBER", "der", "dehydrated", "NUMBER", "FreeBSD", "Error", "after", "Handling", "authorization", "NUMBER", "sign_csr", "NUMBER", "challenge_identifiers", "assignment", "to", "invalid", "subscript", "range", "As", "someone", "who", "be", "use", "dehydrated", "with", "the", "v", "NUMBER", "API", "I", "can", "say", "thus", "far", "I", "be", "happy", "enough", "with", "the", "support", "that", "I", "have", "no", "problem", "with", "the", "idea", "of", "losing", "support", "for", "v", "NUMBER", "That", "be", "I", "have", "yet", "to", "find", "any", "reason", "to", "revert", "back", "to", "v", "NUMBER", "I", "guess", "it", "largely", "depends", "on", "your", "definition", "of", "in", "the", "long", "run", "NUMBER", "I", "personally", "wouldn", "t", "consider", "dropping", "support", "for", "a", "minimum", "of", "six", "months", "NUMBER", "in", "the", "NUMBER", "NUMBER", "month", "range", "I", "d", "probably", "look", "at", "it", "again", "and", "make", "the", "decision", "to", "drop", "support", "at", "that", "point", "NUMBER", "Of", "course", "anybody", "who", "needed", "v", "NUMBER", "support", "after", "that", "could", "always", "revert", "to", "an", "old", "version", "of", "the", "software", "too", "NUMBER", "Oh", "yeah", "if", "LE", "disables", "their", "API", "you", "have", "no", "reason", "to", "wait", "any", "longer", "than", "that", "Considering", "there", "be", "NUMBER", "No", "future", "development", "with", "the", "v", "NUMBER", "endpoint", "NUMBER", "No", "obvious", "issue", "with", "v", "NUMBER", "forcing", "people", "to", "use", "v", "NUMBER", "NUMBER", "It", "s", "know", "that", "v", "NUMBER", "will", "be", "shut", "down", "in", "the", "future", "and", "NUMBER", "v", "NUMBER", "LINK", "support", "it", "perfectly", "I", "don", "t", "see", "any", "issue", "in", "remove", "it", "from", "current", "future", "code", "NUMBER", "If", "there", "be", "any", "need", "for", "a", "fix", "with", "the", "v", "NUMBER", "implementation", "it", "d", "be", "easier", "to", "just", "branch", "from", "fd", "NUMBER", "fc", "NUMBER", "a", "and", "fix", "it", "there", "than", "keep", "support", "around", "NUMBER", "Six", "months", "seems", "reasonable", "NUMBER", "When", "you", "do", "the", "switch", "users", "who", "need", "v", "NUMBER", "can", "just", "download", "a", "specific", "version", "of", "dehydrated", "NUMBER", "I", "d", "drop", "it", "NUMBER", "i", "spent", "way", "too", "many", "hours", "looking", "at", "it", "myself", "on", "the", "weekend", "too", "many", "hacks", "required", "to", "try", "and", "support", "both", "Btw", "NUMBER", "wildcard", "certs", "that", "be", "in", "v", "NUMBER", "dehydrated", "has", "quite", "a", "few", "points", "at", "which", "the", "interpretation", "of", "the", "character", "goes", "awry", "NUMBER", "How", "be", "you", "considering", "dealing", "with", "it", "It", "seems", "to", "me", "having", "a", "configurable", "wildcard", "substitution", "that", "occur", "immediately", "prior", "to", "request", "signing", "ensure", "NUMBER", "in", "CN", "challenge", "deployment", "remove", "NUMBER", "etc", "may", "be", "the", "best", "way", "to", "approach", "it", "The", "spec", "seems", "to", "suggest", "that", "a", "number", "of", "interactions", "with", "the", "API", "that", "have", "or", "cause", "NUMBER", "to", "be", "drop", "from", "the", "name", "and", "a", "boolean", "wildcard", "value", "set", "as", "an", "indicator", "that", "it", "s", "a", "wildcard", "NUMBER", "e", "NUMBER", "g", "NUMBER", "WILDCARD_SUB", "wildcard", "So", "that", "wildcard", "NUMBER", "domain", "NUMBER", "tld", "will", "be", "test", "sub", "ed", "to", "NUMBER", "domain", "NUMBER", "tld", "or", "to", "domain", "NUMBER", "tld", "when", "necessary", "NUMBER", "Yeah", "NUMBER", "my", "bad", "NUMBER", "and", "just", "get", "around", "to", "reading", "some", "of", "the", "commit", "and", "realised", "you", "guys", "have", "already", "add", "a", "lot", "of", "support", "Thank", "you", "NUMBER", "cpu", "be", "there", "any", "plan", "within", "LE", "for", "disabling", "the", "ACME", "v", "NUMBER", "endpoint", "I", "d", "find", "nice", "if", "you", "could", "keep", "it", "run", "for", "at", "least", "the", "duration", "of", "debian", "NUMBER", "so", "NUMBER", "more", "years", "but", "I", "suppose", "it", "depends", "on", "how", "burdening", "it", "be", "for", "you", "and", "the", "amount", "of", "request", "you", "ll", "still", "receive", "at", "that", "endpoint", "in", "the", "future", "NUMBER", "cpu", "be", "there", "any", "plan", "within", "LE", "for", "disabling", "the", "ACME", "v", "NUMBER", "endpoint", "There", "s", "no", "plan", "or", "specific", "date", "decided", "for", "disabling", "ACME", "v", "NUMBER", "NUMBER", "years", "be", "a", "reasonable", "estimate", "NUMBER", "It", "won", "t", "be", "anything", "that", "happens", "suddenly", "or", "without", "a", "lot", "of", "pre", "announcement", "NUMBER", "At", "this", "point", "we", "have", "no", "immediate", "plan", "NUMBER", "Disclaimer", "I", "haven", "t", "really", "read", "the", "source", "code", "very", "thoroughly", "so", "forgive", "me", "if", "the", "question", "has", "an", "obvious", "answer", "NUMBER", "If", "you", "remove", "ACMEv", "NUMBER", "support", "will", "dehydrated", "still", "support", "upgrading", "old", "configs", "to", "the", "new", "version", "I", "m", "thinking", "about", "old", "installations", "that", "have", "be", "set", "up", "and", "forgotten", "as", "good", "automation", "tends", "to", "lead", "to", "which", "suddenly", "will", "need", "to", "be", "update", "NUMBER", "I", "think", "the", "discussion", "be", "more", "about", "the", "interaction", "with", "ACMEv", "NUMBER", "servers", "as", "oppose", "to", "how", "dehydrated", "handles", "it", "s", "own", "configuration", "NUMBER", "Therefore", "I", "would", "assume", "that", "given", "what", "the", "migration", "itself", "actually", "involves", "this", "shouldn", "t", "be", "an", "issue", "NUMBER", "ACMEv", "NUMBER", "support", "in", "dehydrated", "will", "be", "fully", "drop", "when", "LINK", "be", "fully", "support", "in", "Boulder", "and", "on", "the", "LE", "production", "systems", "NUMBER", "I", "think", "the", "change", "in", "request", "handle", "be", "a", "good", "point", "to", "draw", "a", "line", "especially", "considering", "that", "ACMEv", "NUMBER", "should", "really", "be", "considered", "deprecate", "by", "now", "and", "with", "the", "current", "dehydrated", "version", "be", "quite", "stable", "it", "s", "a", "good", "fallback", "for", "situations", "where", "ACMEv", "NUMBER", "be", "still", "required", "NUMBER", "While", "looking", "over", "my", "config", "file", "and", "considering", "setting", "a", "CONFIG_D", "I", "notice", "an", "inconsistency", "and", "I", "m", "wondering", "if", "it", "s", "intentional", "or", "overlooked", "NUMBER", "The", "main", "config", "file", "that", "dehydrated", "looks", "for", "be", "named", "config", "with", "no", "extension", "NUMBER", "Per", "certificate", "config", "file", "be", "also", "named", "either", "config", "or", "alias", "with", "no", "extension", "NUMBER", "But", "it", "looks", "like", "the", "other", "config", "file", "in", "CONFIG_D", "must", "have", "a", "NUMBER", "sh", "extension", "in", "order", "to", "be", "processed", "NUMBER", "It", "certainly", "says", "as", "much", "in", "the", "template", "config", "file", "NUMBER", "If", "CONFIG_D", "be", "set", "both", "the", "general", "config", "file", "with", "extension", "and", "any", "certificate", "specific", "config", "file", "without", "extension", "be", "going", "to", "be", "mix", "into", "the", "same", "directory", "NUMBER", "This", "leads", "to", "a", "scenario", "where", "a", "user", "following", "the", "directive", "in", "the", "template", "config", "that", "all", "config", "file", "in", "CONFIG_D", "must", "have", "a", "NUMBER", "sh", "extension", "might", "end", "up", "having", "their", "certificate", "specific", "config", "file", "ignored", "NUMBER", "This", "example", "became", "invalid", "since", "a", "wildcard", "request", "with", "base", "domain", "include", "needs", "two", "TXT", "records", "present", "at", "the", "same", "time", "NUMBER", "Simple", "example", "Use", "nsupdate", "with", "local", "named", "printf", "server", "NUMBER", "nupdate", "delete", "_acme", "challenge", "NUMBER", "s", "TXT", "s", "nsend", "n", "DOMAIN", "TOKEN_VALUE", "nsupdate", "k", "var", "run", "named", "session", "NUMBER", "key", "LINK", "base", "domain", "two", "txts", "timeout", "problem", "NUMBER", "That", "example", "be", "still", "perfectly", "valid", "NUMBER", "The", "hook", "script", "be", "call", "for", "EACH", "individual", "token", "value", "set", "for", "the", "TXT", "record", "that", "example", "deletes", "only", "the", "TXT", "record", "with", "the", "supplied", "token", "value", "NUMBER", "So", "that", "example", "will", "be", "call", "once", "for", "each", "TXT", "record", "even", "if", "they", "be", "the", "same", "name", "NUMBER", "I", "Currently", "use", "the", "nsupdate", "method", "with", "my", "setup", "for", "domain", "validations", "and", "I", "have", "yet", "to", "have", "an", "issue", "with", "either", "TXT", "records", "remaining", "where", "they", "shouldn", "t", "or", "with", "TXT", "records", "be", "delete", "when", "they", "shouldn", "t", "NUMBER", "Example", "of", "the", "output", "from", "dehydrated", "when", "use", "my", "hook", "script", "note", "the", "lines", "prefixed", "with", "ADD", "and", "DEL", "be", "from", "my", "hook", "script", "when", "it", "uses", "nsupdate", "to", "add", "or", "delete", "a", "TXT", "record", "Processing", "test", "NUMBER", "mdbnet", "NUMBER", "net", "with", "alternative", "names", "NUMBER", "test", "NUMBER", "mdbnet", "NUMBER", "net", "Creating", "new", "directory", "home", "dehydrated", "dehydrated", "certs", "test", "NUMBER", "mdbnet", "NUMBER", "net", "NUMBER", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Received", "NUMBER", "authorizations", "URLs", "from", "the", "CA", "Handling", "authorization", "for", "test", "NUMBER", "mdbnet", "NUMBER", "net", "Handling", "authorization", "for", "test", "NUMBER", "mdbnet", "NUMBER", "net", "NUMBER", "pending", "challenge", "s", "Deploying", "challenge", "tokens", "NUMBER", "ADD", "_acme", "challenge", "NUMBER", "test", "NUMBER", "mdbnet", "NUMBER", "net", "NUMBER", "NUMBER", "IN", "TXT", "CUcIs", "NUMBER", "zueUn", "NUMBER", "vVl", "NUMBER", "OdNyhnzhODxdKTugXbLeUxjEZg", "ADD", "_acme", "challenge", "NUMBER", "test", "NUMBER", "mdbnet", "NUMBER", "net", "NUMBER", "NUMBER", "IN", "TXT", "NUMBER", "n", "OMurTo", "NUMBER", "NbdLHZriNuSqz", "NUMBER", "oJfpOxPdsR", "_BX", "NUMBER", "Ags", "Responding", "to", "challenge", "for", "test", "NUMBER", "mdbnet", "NUMBER", "net", "authorization", "NUMBER", "DEL", "_acme", "challenge", "NUMBER", "test", "NUMBER", "mdbnet", "NUMBER", "net", "NUMBER", "NUMBER", "IN", "TXT", "CUcIs", "NUMBER", "zueUn", "NUMBER", "vVl", "NUMBER", "OdNyhnzhODxdKTugXbLeUxjEZg", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "test", "NUMBER", "mdbnet", "NUMBER", "net", "authorization", "NUMBER", "DEL", "_acme", "challenge", "NUMBER", "test", "NUMBER", "mdbnet", "NUMBER", "net", "NUMBER", "NUMBER", "IN", "TXT", "NUMBER", "n", "OMurTo", "NUMBER", "NbdLHZriNuSqz", "NUMBER", "oJfpOxPdsR", "_BX", "NUMBER", "Ags", "Challenge", "be", "valid", "Requesting", "certificate", "NUMBER", "Checking", "certificate", "NUMBER", "Done", "Creating", "fullchain", "NUMBER", "pem", "NUMBER", "Done", "Old", "Version", "VERSION", "NUMBER", "work", "no", "problem", "Vew", "Version", "VERSION", "git", "master", "after", "NUMBER", "throw", "this", "problem", "System", "ArchLinux", "x", "NUMBER", "I", "create", "an", "renew", "certificates", "with", "dehydrated", "NUMBER", "For", "this", "I", "call", "the", "script", "with", "a", "PHP", "Script", "with", "call", "the", "paramteres", "NUMBER", "A", "call", "looks", "like", "this", "cmd", "opt", "dehydrated", "dehydrated", "c", "o", "NUMBER", "CertStore", "NUMBER", "a", "NUMBER", "row", "NUMBER", "algo", "NUMBER", "d", "NUMBER", "row", "NUMBER", "domain", "NUMBER", "NUMBER", "NUMBER", "var", "log", "dehydrated", "dehydrated", "NUMBER", "log", "other", "Code", "for", "addional", "Domains", "and", "force", "Parameter", "if", "required", "exec", "cmd", "return", "ret_val", "In", "the", "old", "version", "everything", "works", "fine", "NUMBER", "New", "certificates", "be", "created", "an", "old", "ones", "be", "renewed", "NUMBER", "If", "this", "script", "be", "call", "in", "a", "cronjob", "I", "cot", "a", "broken", "pipe", "error", "cat", "Schreibfehler", "Daten\u00fcbergabe", "unterbrochen", "broken", "pipe", "The", "output", "of", "dehydrated", "which", "I", "pipe", "to", "a", "logfile", "be", "the", "folowing", "Do", "NUMBER", "M\u00e4r", "NUMBER", "NUMBER", "NUMBER", "CET", "NUMBER", "INFO", "Using", "main", "config", "file", "opt", "dehydrated", "config", "Processing", "tb", "itf", "NUMBER", "de", "with", "alternative", "names", "www", "NUMBER", "domain", "NUMBER", "de", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Certificate", "will", "expire", "Less", "than", "NUMBER", "days", "NUMBER", "Renewing", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "If", "I", "call", "the", "script", "directly", "on", "the", "bash", "everything", "works", "fine", "NUMBER", "I", "set", "the", "PATH", "and", "environment", "SHELL", "in", "the", "crontab", "NUMBER", "I", "also", "tried", "to", "run", "the", "command", "above", "with", "usr", "bin", "bash", "c", "but", "no", "change", "in", "the", "result", "NUMBER", "Any", "ideas", "Thank", "you", "Of", "course", "here", "it", "be", "bash", "x", "dehydrated", "c", "opt", "dehydrated", "dehydrated", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "var", "log", "dehydrated", "dehydrated", "NUMBER", "log", "NUMBER", "NUMBER", "set", "e", "set", "u", "set", "o", "pipefail", "n", "z", "shopt", "s", "nullglob", "set", "f", "umask", "NUMBER", "VERSION", "git", "master", "after", "NUMBER", "SOURCE", "dehydrated", "h", "dehydrated", "dirname", "dehydrated", "cd", "P", "NUMBER", "pwd", "SCRIPTDIR", "opt", "reksys", "BASEDIR", "opt", "reksys", "ORIGARGS", "c", "opt", "dehydrated", "dehydrated", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "var", "log", "dehydrated", "dehydrated", "NUMBER", "log", "NUMBER", "NUMBER", "d", "www", "NUMBER", "domain", "NUMBER", "de", "uname", "OSTYPE", "Linux", "N", "O", "O", "P", "main", "c", "opt", "dehydrated", "dehydrated", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "var", "log", "dehydrated", "dehydrated", "NUMBER", "log", "NUMBER", "NUMBER", "d", "www", "NUMBER", "domain", "NUMBER", "de", "COMMAND", "z", "c", "opt", "dehydrated", "dehydrated", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "var", "log", "dehydrated", "dehydrated", "NUMBER", "log", "NUMBER", "NUMBER", "d", "www", "NUMBER", "domain", "NUMBER", "de", "NUMBER", "case", "NUMBER", "in", "set_command", "sign_domains", "z", "COMMAND", "sign_domains", "shift", "NUMBER", "NUMBER", "case", "NUMBER", "in", "echo", "Unknown", "parameter", "detected", "opt", "dehydrated", "dehydrated", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "var", "log", "dehydrated", "dehydrated", "NUMBER", "log", "NUMBER", "NUMBER", "Unknown", "parameter", "detected", "opt", "dehydrated", "dehydrated", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "var", "log", "dehydrated", "dehydrated", "NUMBER", "log", "NUMBER", "NUMBER", "echo", "command_help", "printf", "Usage", "s", "h", "command", "argument", "parameter", "argument", "parameter", "argument", "NUMBER", "n", "n", "dehydrated", "Usage", "dehydrated", "h", "command", "argument", "parameter", "argument", "parameter", "argument", "NUMBER", "printf", "Default", "command", "help", "n", "n", "Default", "command", "help", "echo", "Commands", "Commands", "grep", "e", "space", "Usage", "e", "space", "Description", "e", "command_", "NUMBER", "space", "dehydrated", "read", "r", "usage", "grep", "dehydrated", "Datei", "oder", "Verzeichnis", "nicht", "gefunden", "read", "r", "description", "read", "r", "command", "Here", "it", "be", "but", "also", "with", "an", "unkown", "parameter", "detect", "bash", "x", "opt", "dehydrated", "dehydrated", "c", "opt", "dehydrated", "dehydrated", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "var", "log", "dehydrated", "dehydrated", "NUMBER", "log", "NUMBER", "NUMBER", "set", "e", "set", "u", "set", "o", "pipefail", "n", "z", "shopt", "s", "nullglob", "set", "f", "umask", "NUMBER", "VERSION", "git", "master", "after", "NUMBER", "SOURCE", "opt", "dehydrated", "dehydrated", "h", "opt", "dehydrated", "dehydrated", "dirname", "opt", "dehydrated", "dehydrated", "cd", "P", "opt", "dehydrated", "pwd", "SCRIPTDIR", "opt", "dehydrated", "BASEDIR", "opt", "dehydrated", "ORIGARGS", "c", "opt", "dehydrated", "dehydrated", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "var", "log", "dehydrated", "dehydrated", "NUMBER", "log", "NUMBER", "NUMBER", "d", "www", "NUMBER", "domain", "NUMBER", "de", "uname", "OSTYPE", "Linux", "N", "O", "O", "P", "main", "c", "opt", "dehydrated", "dehydrated", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "var", "log", "dehydrated", "dehydrated", "NUMBER", "log", "NUMBER", "NUMBER", "d", "www", "NUMBER", "domain", "NUMBER", "de", "COMMAND", "z", "c", "opt", "dehydrated", "dehydrated", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "var", "log", "dehydrated", "dehydrated", "NUMBER", "log", "NUMBER", "NUMBER", "d", "www", "NUMBER", "domain", "NUMBER", "de", "NUMBER", "case", "NUMBER", "in", "set_command", "sign_domains", "z", "COMMAND", "sign_domains", "shift", "NUMBER", "NUMBER", "case", "NUMBER", "in", "echo", "Unknown", "parameter", "detected", "opt", "dehydrated", "dehydrated", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "var", "log", "dehydrated", "dehydrated", "NUMBER", "log", "NUMBER", "NUMBER", "Unknown", "parameter", "detected", "opt", "dehydrated", "dehydrated", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "var", "log", "dehydrated", "dehydrated", "NUMBER", "log", "NUMBER", "NUMBER", "echo", "command_help", "printf", "Usage", "s", "h", "command", "argument", "parameter", "argument", "parameter", "argument", "NUMBER", "n", "n", "opt", "dehydrated", "dehydrated", "Usage", "opt", "dehydrated", "dehydrated", "h", "command", "argument", "parameter", "argument", "parameter", "argument", "NUMBER", "printf", "Default", "command", "help", "n", "n", "Default", "command", "help", "echo", "Commands", "Commands", "grep", "e", "space", "Usage", "e", "space", "Description", "e", "command_", "NUMBER", "space", "opt", "dehydrated", "dehydrated", "read", "r", "usage", "read", "r", "description", "read", "r", "command", "Usage", "version", "v", "Usage", "Description", "Print", "version", "information", "Description", "command_version", "command_", "printf", "NUMBER", "s", "s", "n", "version", "v", "Print", "version", "information", "version", "v", "Print", "version", "information", "read", "r", "usage", "read", "r", "description", "read", "r", "command", "Usage", "register", "Usage", "Description", "Register", "account", "key", "Description", "command_register", "command_", "printf", "NUMBER", "s", "s", "n", "register", "Register", "account", "key", "register", "Register", "account", "key", "read", "r", "usage", "read", "r", "description", "read", "r", "command", "Usage", "account", "Usage", "Description", "Update", "account", "contact", "information", "Description", "command_account", "command_", "printf", "NUMBER", "s", "s", "n", "account", "Update", "account", "contact", "information", "account", "Update", "account", "contact", "information", "read", "r", "usage", "read", "r", "description", "read", "r", "command", "Usage", "cron", "c", "Usage", "Description", "Sign", "renew", "non", "existent", "change", "expiring", "certificates", "NUMBER", "Description", "command_sign_domains", "command_", "printf", "NUMBER", "s", "s", "n", "cron", "c", "Sign", "renew", "non", "existent", "change", "expiring", "certificates", "NUMBER", "cron", "c", "Sign", "renew", "non", "existent", "change", "expiring", "certificates", "NUMBER", "read", "r", "usage", "read", "r", "description", "read", "r", "command", "Usage", "signcsr", "s", "path", "to", "csr", "NUMBER", "pem", "Usage", "Description", "Sign", "a", "given", "CSR", "output", "CRT", "on", "stdout", "advance", "usage", "Description", "command_sign_csr", "command_", "printf", "NUMBER", "s", "s", "n", "signcsr", "s", "path", "to", "csr", "NUMBER", "pem", "Sign", "a", "given", "CSR", "output", "CRT", "on", "stdout", "advance", "usage", "signcsr", "s", "path", "to", "csr", "NUMBER", "pem", "Sign", "a", "given", "CSR", "output", "CRT", "on", "stdout", "advance", "usage", "read", "r", "usage", "read", "r", "description", "read", "r", "command", "Usage", "revoke", "r", "path", "to", "cert", "NUMBER", "pem", "Usage", "Description", "Revoke", "specified", "certificate", "Description", "command_revoke", "command_", "printf", "NUMBER", "s", "s", "n", "revoke", "r", "path", "to", "cert", "NUMBER", "pem", "Revoke", "specified", "certificate", "revoke", "r", "path", "to", "cert", "NUMBER", "pem", "Revoke", "specified", "certificate", "read", "r", "usage", "read", "r", "description", "read", "r", "command", "Usage", "cleanup", "gc", "Usage", "Description", "Move", "unuse", "certificate", "file", "to", "archive", "directory", "Description", "command_cleanup", "command_", "printf", "NUMBER", "s", "s", "n", "cleanup", "gc", "Move", "unuse", "certificate", "file", "to", "archive", "directory", "cleanup", "gc", "Move", "unuse", "certificate", "file", "to", "archive", "directory", "read", "r", "usage", "read", "r", "description", "read", "r", "command", "Usage", "help", "h", "Usage", "Description", "Show", "help", "text", "Description", "command_help", "command_", "printf", "NUMBER", "s", "s", "n", "help", "h", "Show", "help", "text", "help", "h", "Show", "help", "text", "read", "r", "usage", "read", "r", "description", "read", "r", "command", "Usage", "env", "e", "Usage", "Description", "Output", "configuration", "variables", "for", "use", "in", "other", "scripts", "Description", "command_env", "command_", "printf", "NUMBER", "s", "s", "n", "env", "e", "Output", "configuration", "variables", "for", "use", "in", "other", "scripts", "env", "e", "Output", "configuration", "variables", "for", "use", "in", "other", "scripts", "read", "r", "usage", "read", "r", "description", "read", "r", "command", "printf", "nParameters", "n", "Parameters", "grep", "E", "e", "space", "PARAM_Usage", "e", "space", "PARAM_Description", "opt", "dehydrated", "dehydrated", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "accept", "terms", "Usage", "PARAM_Description", "Accept", "CAs", "terms", "of", "service", "Description", "printf", "NUMBER", "s", "s", "n", "accept", "terms", "Accept", "CAs", "terms", "of", "service", "accept", "terms", "Accept", "CAs", "terms", "of", "service", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "full", "chain", "fc", "Usage", "PARAM_Description", "Print", "full", "chain", "when", "use", "signcsr", "Description", "printf", "NUMBER", "s", "s", "n", "full", "chain", "fc", "Print", "full", "chain", "when", "use", "signcsr", "full", "chain", "fc", "Print", "full", "chain", "when", "use", "signcsr", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "ipv", "NUMBER", "NUMBER", "Usage", "PARAM_Description", "Resolve", "names", "to", "IPv", "NUMBER", "address", "only", "Description", "printf", "NUMBER", "s", "s", "n", "ipv", "NUMBER", "NUMBER", "Resolve", "names", "to", "IPv", "NUMBER", "address", "only", "ipv", "NUMBER", "NUMBER", "Resolve", "names", "to", "IPv", "NUMBER", "address", "only", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "ipv", "NUMBER", "NUMBER", "Usage", "PARAM_Description", "Resolve", "names", "to", "IPv", "NUMBER", "address", "only", "Description", "printf", "NUMBER", "s", "s", "n", "ipv", "NUMBER", "NUMBER", "Resolve", "names", "to", "IPv", "NUMBER", "address", "only", "ipv", "NUMBER", "NUMBER", "Resolve", "names", "to", "IPv", "NUMBER", "address", "only", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "domain", "d", "domain", "NUMBER", "tld", "Usage", "PARAM_Description", "Use", "specified", "domain", "name", "s", "instead", "of", "domains", "NUMBER", "txt", "entry", "one", "certificate", "Description", "printf", "NUMBER", "s", "s", "n", "domain", "d", "domain", "NUMBER", "tld", "Use", "specified", "domain", "name", "s", "instead", "of", "domains", "NUMBER", "txt", "entry", "one", "certificate", "domain", "d", "domain", "NUMBER", "tld", "Use", "specified", "domain", "name", "s", "instead", "of", "domains", "NUMBER", "txt", "entry", "one", "certificate", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "alias", "certalias", "Usage", "PARAM_Description", "Use", "specified", "name", "for", "certificate", "directory", "and", "per", "certificate", "config", "instead", "of", "the", "primary", "domain", "only", "use", "if", "domain", "be", "specified", "Description", "printf", "NUMBER", "s", "s", "n", "alias", "certalias", "Use", "specified", "name", "for", "certificate", "directory", "and", "per", "certificate", "config", "instead", "of", "the", "primary", "domain", "only", "use", "if", "domain", "be", "specified", "alias", "certalias", "Use", "specified", "name", "for", "certificate", "directory", "and", "per", "certificate", "config", "instead", "of", "the", "primary", "domain", "only", "use", "if", "domain", "be", "specified", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "keep", "going", "g", "Usage", "PARAM_Description", "Keep", "going", "after", "encountering", "an", "error", "while", "creating", "renewing", "multiple", "certificates", "in", "cron", "mode", "Description", "printf", "NUMBER", "s", "s", "n", "keep", "going", "g", "Keep", "going", "after", "encountering", "an", "error", "while", "creating", "renewing", "multiple", "certificates", "in", "cron", "mode", "keep", "going", "g", "Keep", "going", "after", "encountering", "an", "error", "while", "creating", "renewing", "multiple", "certificates", "in", "cron", "mode", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "force", "x", "Usage", "PARAM_Description", "Force", "renew", "of", "certificate", "even", "if", "it", "be", "longer", "valid", "than", "value", "in", "RENEW_DAYS", "Description", "printf", "NUMBER", "s", "s", "n", "force", "x", "Force", "renew", "of", "certificate", "even", "if", "it", "be", "longer", "valid", "than", "value", "in", "RENEW_DAYS", "force", "x", "Force", "renew", "of", "certificate", "even", "if", "it", "be", "longer", "valid", "than", "value", "in", "RENEW_DAYS", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "no", "lock", "n", "Usage", "PARAM_Description", "Don", "t", "use", "lockfile", "potentially", "dangerous", "Description", "printf", "NUMBER", "s", "s", "n", "no", "lock", "n", "Don", "t", "use", "lockfile", "potentially", "dangerous", "no", "lock", "n", "Don", "t", "use", "lockfile", "potentially", "dangerous", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "lock", "suffix", "example", "NUMBER", "com", "Usage", "PARAM_Description", "Suffix", "lockfile", "name", "with", "a", "string", "useful", "for", "with", "d", "Description", "printf", "NUMBER", "s", "s", "n", "lock", "suffix", "example", "NUMBER", "com", "Suffix", "lockfile", "name", "with", "a", "string", "useful", "for", "with", "d", "lock", "suffix", "example", "NUMBER", "com", "Suffix", "lockfile", "name", "with", "a", "string", "useful", "for", "with", "d", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "ocsp", "Usage", "PARAM_Description", "Sets", "option", "in", "CSR", "indicating", "OCSP", "stapling", "to", "be", "mandatory", "Description", "printf", "NUMBER", "s", "s", "n", "ocsp", "Sets", "option", "in", "CSR", "indicating", "OCSP", "stapling", "to", "be", "mandatory", "ocsp", "Sets", "option", "in", "CSR", "indicating", "OCSP", "stapling", "to", "be", "mandatory", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "privkey", "p", "path", "to", "key", "NUMBER", "pem", "Usage", "PARAM_Description", "Use", "specified", "private", "key", "instead", "of", "account", "key", "useful", "for", "revocation", "Description", "printf", "NUMBER", "s", "s", "n", "privkey", "p", "path", "to", "key", "NUMBER", "pem", "Use", "specified", "private", "key", "instead", "of", "account", "key", "useful", "for", "revocation", "privkey", "p", "path", "to", "key", "NUMBER", "pem", "Use", "specified", "private", "key", "instead", "of", "account", "key", "useful", "for", "revocation", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "config", "f", "path", "to", "config", "Usage", "PARAM_Description", "Use", "specified", "config", "file", "Description", "printf", "NUMBER", "s", "s", "n", "config", "f", "path", "to", "config", "Use", "specified", "config", "file", "config", "f", "path", "to", "config", "Use", "specified", "config", "file", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "hook", "k", "path", "to", "hook", "NUMBER", "sh", "Usage", "PARAM_Description", "Use", "specified", "script", "for", "hooks", "Description", "printf", "NUMBER", "s", "s", "n", "hook", "k", "path", "to", "hook", "NUMBER", "sh", "Use", "specified", "script", "for", "hooks", "hook", "k", "path", "to", "hook", "NUMBER", "sh", "Use", "specified", "script", "for", "hooks", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "out", "o", "certs", "directory", "Usage", "PARAM_Description", "Output", "certificates", "into", "the", "specified", "directory", "Description", "printf", "NUMBER", "s", "s", "n", "out", "o", "certs", "directory", "Output", "certificates", "into", "the", "specified", "directory", "out", "o", "certs", "directory", "Output", "certificates", "into", "the", "specified", "directory", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "challenge", "t", "http", "NUMBER", "dns", "NUMBER", "Usage", "PARAM_Description", "Which", "challenge", "should", "be", "use", "Currently", "http", "NUMBER", "and", "dns", "NUMBER", "be", "support", "Description", "printf", "NUMBER", "s", "s", "n", "challenge", "t", "http", "NUMBER", "dns", "NUMBER", "Which", "challenge", "should", "be", "use", "Currently", "http", "NUMBER", "and", "dns", "NUMBER", "be", "support", "challenge", "t", "http", "NUMBER", "dns", "NUMBER", "Which", "challenge", "should", "be", "use", "Currently", "http", "NUMBER", "and", "dns", "NUMBER", "be", "support", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "algo", "a", "rsa", "prime", "NUMBER", "v", "NUMBER", "secp", "NUMBER", "r", "NUMBER", "Usage", "PARAM_Description", "Which", "public", "key", "algorithm", "should", "be", "use", "Supported", "rsa", "prime", "NUMBER", "v", "NUMBER", "and", "secp", "NUMBER", "r", "NUMBER", "Description", "printf", "NUMBER", "s", "s", "n", "algo", "a", "rsa", "prime", "NUMBER", "v", "NUMBER", "secp", "NUMBER", "r", "NUMBER", "Which", "public", "key", "algorithm", "should", "be", "use", "Supported", "rsa", "prime", "NUMBER", "v", "NUMBER", "and", "secp", "NUMBER", "r", "NUMBER", "algo", "a", "rsa", "prime", "NUMBER", "v", "NUMBER", "secp", "NUMBER", "r", "NUMBER", "Which", "public", "key", "algorithm", "should", "be", "use", "Supported", "rsa", "prime", "NUMBER", "v", "NUMBER", "and", "secp", "NUMBER", "r", "NUMBER", "read", "r", "usage", "read", "r", "description", "exit", "NUMBER", "Oh", "above", "there", "s", "an", "error", "in", "the", "call", "of", "dehydratet", "NUMBER", "I", "fix", "that", "but", "the", "problem", "be", "still", "the", "same", "bash", "x", "opt", "dehydrated", "dehydrated", "c", "opt", "dehydrated", "dehydrated", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "d", "www", "NUMBER", "domain", "NUMBER", "de", "var", "log", "dehydrated", "dehydrated", "NUMBER", "log", "NUMBER", "NUMBER", "set", "e", "set", "u", "set", "o", "pipefail", "n", "z", "shopt", "s", "nullglob", "set", "f", "umask", "NUMBER", "VERSION", "git", "master", "after", "NUMBER", "SOURCE", "opt", "dehydrated", "dehydrated", "h", "opt", "dehydrated", "dehydrated", "dirname", "opt", "dehydrated", "dehydrated", "cd", "P", "opt", "dehydrated", "pwd", "SCRIPTDIR", "opt", "dehydrated", "BASEDIR", "opt", "dehydrated", "ORIGARGS", "c", "opt", "dehydrated", "dehydrated", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "d", "www", "NUMBER", "domain", "NUMBER", "de", "var", "log", "dehydrated", "dehydrated", "NUMBER", "log", "NUMBER", "NUMBER", "uname", "OSTYPE", "Linux", "N", "O", "O", "P", "main", "c", "opt", "dehydrated", "dehydrated", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "d", "www", "NUMBER", "domain", "NUMBER", "de", "var", "log", "dehydrated", "dehydrated", "NUMBER", "log", "NUMBER", "NUMBER", "COMMAND", "z", "c", "opt", "dehydrated", "dehydrated", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "d", "www", "NUMBER", "domain", "NUMBER", "de", "var", "log", "dehydrated", "dehydrated", "NUMBER", "log", "NUMBER", "NUMBER", "NUMBER", "case", "NUMBER", "in", "set_command", "sign_domains", "z", "COMMAND", "sign_domains", "shift", "NUMBER", "NUMBER", "case", "NUMBER", "in", "echo", "Unknown", "parameter", "detected", "opt", "dehydrated", "dehydrated", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "d", "www", "NUMBER", "domain", "NUMBER", "de", "var", "log", "dehydrated", "dehydrated", "NUMBER", "log", "NUMBER", "NUMBER", "Unknown", "parameter", "detected", "opt", "dehydrated", "dehydrated", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "d", "www", "NUMBER", "domain", "NUMBER", "de", "var", "log", "dehydrated", "dehydrated", "NUMBER", "log", "NUMBER", "NUMBER", "echo", "command_help", "printf", "Usage", "s", "h", "command", "argument", "parameter", "argument", "parameter", "argument", "NUMBER", "n", "n", "opt", "dehydrated", "dehydrated", "Usage", "opt", "dehydrated", "dehydrated", "h", "command", "argument", "parameter", "argument", "parameter", "argument", "NUMBER", "printf", "Default", "command", "help", "n", "n", "Default", "command", "help", "echo", "Commands", "Commands", "grep", "e", "space", "Usage", "e", "space", "Description", "e", "command_", "NUMBER", "space", "opt", "dehydrated", "dehydrated", "read", "r", "usage", "read", "r", "description", "read", "r", "command", "Usage", "version", "v", "Usage", "Description", "Print", "version", "information", "Description", "command_version", "command_", "printf", "NUMBER", "s", "s", "n", "version", "v", "Print", "version", "information", "version", "v", "Print", "version", "information", "read", "r", "usage", "read", "r", "description", "read", "r", "command", "Usage", "register", "Usage", "Description", "Register", "account", "key", "Description", "command_register", "command_", "printf", "NUMBER", "s", "s", "n", "register", "Register", "account", "key", "register", "Register", "account", "key", "read", "r", "usage", "read", "r", "description", "read", "r", "command", "Usage", "account", "Usage", "Description", "Update", "account", "contact", "information", "Description", "command_account", "command_", "printf", "NUMBER", "s", "s", "n", "account", "Update", "account", "contact", "information", "account", "Update", "account", "contact", "information", "read", "r", "usage", "read", "r", "description", "read", "r", "command", "Usage", "cron", "c", "Usage", "Description", "Sign", "renew", "non", "existent", "change", "expiring", "certificates", "NUMBER", "Description", "command_sign_domains", "command_", "printf", "NUMBER", "s", "s", "n", "cron", "c", "Sign", "renew", "non", "existent", "change", "expiring", "certificates", "NUMBER", "cron", "c", "Sign", "renew", "non", "existent", "change", "expiring", "certificates", "NUMBER", "read", "r", "usage", "read", "r", "description", "read", "r", "command", "Usage", "signcsr", "s", "path", "to", "csr", "NUMBER", "pem", "Usage", "Description", "Sign", "a", "given", "CSR", "output", "CRT", "on", "stdout", "advance", "usage", "Description", "command_sign_csr", "command_", "printf", "NUMBER", "s", "s", "n", "signcsr", "s", "path", "to", "csr", "NUMBER", "pem", "Sign", "a", "given", "CSR", "output", "CRT", "on", "stdout", "advance", "usage", "signcsr", "s", "path", "to", "csr", "NUMBER", "pem", "Sign", "a", "given", "CSR", "output", "CRT", "on", "stdout", "advance", "usage", "read", "r", "usage", "read", "r", "description", "read", "r", "command", "Usage", "revoke", "r", "path", "to", "cert", "NUMBER", "pem", "Usage", "Description", "Revoke", "specified", "certificate", "Description", "command_revoke", "command_", "printf", "NUMBER", "s", "s", "n", "revoke", "r", "path", "to", "cert", "NUMBER", "pem", "Revoke", "specified", "certificate", "revoke", "r", "path", "to", "cert", "NUMBER", "pem", "Revoke", "specified", "certificate", "read", "r", "usage", "read", "r", "description", "read", "r", "command", "Usage", "cleanup", "gc", "Usage", "Description", "Move", "unuse", "certificate", "file", "to", "archive", "directory", "Description", "command_cleanup", "command_", "printf", "NUMBER", "s", "s", "n", "cleanup", "gc", "Move", "unuse", "certificate", "file", "to", "archive", "directory", "cleanup", "gc", "Move", "unuse", "certificate", "file", "to", "archive", "directory", "read", "r", "usage", "read", "r", "description", "read", "r", "command", "Usage", "help", "h", "Usage", "Description", "Show", "help", "text", "Description", "command_help", "command_", "printf", "NUMBER", "s", "s", "n", "help", "h", "Show", "help", "text", "help", "h", "Show", "help", "text", "read", "r", "usage", "read", "r", "description", "read", "r", "command", "Usage", "env", "e", "Usage", "Description", "Output", "configuration", "variables", "for", "use", "in", "other", "scripts", "Description", "command_env", "command_", "printf", "NUMBER", "s", "s", "n", "env", "e", "Output", "configuration", "variables", "for", "use", "in", "other", "scripts", "env", "e", "Output", "configuration", "variables", "for", "use", "in", "other", "scripts", "read", "r", "usage", "read", "r", "description", "read", "r", "command", "printf", "nParameters", "n", "Parameters", "grep", "E", "e", "space", "PARAM_Usage", "e", "space", "PARAM_Description", "opt", "dehydrated", "dehydrated", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "accept", "terms", "Usage", "PARAM_Description", "Accept", "CAs", "terms", "of", "service", "Description", "printf", "NUMBER", "s", "s", "n", "accept", "terms", "Accept", "CAs", "terms", "of", "service", "accept", "terms", "Accept", "CAs", "terms", "of", "service", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "full", "chain", "fc", "Usage", "PARAM_Description", "Print", "full", "chain", "when", "use", "signcsr", "Description", "printf", "NUMBER", "s", "s", "n", "full", "chain", "fc", "Print", "full", "chain", "when", "use", "signcsr", "full", "chain", "fc", "Print", "full", "chain", "when", "use", "signcsr", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "ipv", "NUMBER", "NUMBER", "Usage", "PARAM_Description", "Resolve", "names", "to", "IPv", "NUMBER", "address", "only", "Description", "printf", "NUMBER", "s", "s", "n", "ipv", "NUMBER", "NUMBER", "Resolve", "names", "to", "IPv", "NUMBER", "address", "only", "ipv", "NUMBER", "NUMBER", "Resolve", "names", "to", "IPv", "NUMBER", "address", "only", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "ipv", "NUMBER", "NUMBER", "Usage", "PARAM_Description", "Resolve", "names", "to", "IPv", "NUMBER", "address", "only", "Description", "printf", "NUMBER", "s", "s", "n", "ipv", "NUMBER", "NUMBER", "Resolve", "names", "to", "IPv", "NUMBER", "address", "only", "ipv", "NUMBER", "NUMBER", "Resolve", "names", "to", "IPv", "NUMBER", "address", "only", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "domain", "d", "domain", "NUMBER", "tld", "Usage", "PARAM_Description", "Use", "specified", "domain", "name", "s", "instead", "of", "domains", "NUMBER", "txt", "entry", "one", "certificate", "Description", "printf", "NUMBER", "s", "s", "n", "domain", "d", "domain", "NUMBER", "tld", "Use", "specified", "domain", "name", "s", "instead", "of", "domains", "NUMBER", "txt", "entry", "one", "certificate", "domain", "d", "domain", "NUMBER", "tld", "Use", "specified", "domain", "name", "s", "instead", "of", "domains", "NUMBER", "txt", "entry", "one", "certificate", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "alias", "certalias", "Usage", "PARAM_Description", "Use", "specified", "name", "for", "certificate", "directory", "and", "per", "certificate", "config", "instead", "of", "the", "primary", "domain", "only", "use", "if", "domain", "be", "specified", "Description", "printf", "NUMBER", "s", "s", "n", "alias", "certalias", "Use", "specified", "name", "for", "certificate", "directory", "and", "per", "certificate", "config", "instead", "of", "the", "primary", "domain", "only", "use", "if", "domain", "be", "specified", "alias", "certalias", "Use", "specified", "name", "for", "certificate", "directory", "and", "per", "certificate", "config", "instead", "of", "the", "primary", "domain", "only", "use", "if", "domain", "be", "specified", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "keep", "going", "g", "Usage", "PARAM_Description", "Keep", "going", "after", "encountering", "an", "error", "while", "creating", "renewing", "multiple", "certificates", "in", "cron", "mode", "Description", "printf", "NUMBER", "s", "s", "n", "keep", "going", "g", "Keep", "going", "after", "encountering", "an", "error", "while", "creating", "renewing", "multiple", "certificates", "in", "cron", "mode", "keep", "going", "g", "Keep", "going", "after", "encountering", "an", "error", "while", "creating", "renewing", "multiple", "certificates", "in", "cron", "mode", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "force", "x", "Usage", "PARAM_Description", "Force", "renew", "of", "certificate", "even", "if", "it", "be", "longer", "valid", "than", "value", "in", "RENEW_DAYS", "Description", "printf", "NUMBER", "s", "s", "n", "force", "x", "Force", "renew", "of", "certificate", "even", "if", "it", "be", "longer", "valid", "than", "value", "in", "RENEW_DAYS", "force", "x", "Force", "renew", "of", "certificate", "even", "if", "it", "be", "longer", "valid", "than", "value", "in", "RENEW_DAYS", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "no", "lock", "n", "Usage", "PARAM_Description", "Don", "t", "use", "lockfile", "potentially", "dangerous", "Description", "printf", "NUMBER", "s", "s", "n", "no", "lock", "n", "Don", "t", "use", "lockfile", "potentially", "dangerous", "no", "lock", "n", "Don", "t", "use", "lockfile", "potentially", "dangerous", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "lock", "suffix", "example", "NUMBER", "com", "Usage", "PARAM_Description", "Suffix", "lockfile", "name", "with", "a", "string", "useful", "for", "with", "d", "Description", "printf", "NUMBER", "s", "s", "n", "lock", "suffix", "example", "NUMBER", "com", "Suffix", "lockfile", "name", "with", "a", "string", "useful", "for", "with", "d", "lock", "suffix", "example", "NUMBER", "com", "Suffix", "lockfile", "name", "with", "a", "string", "useful", "for", "with", "d", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "ocsp", "Usage", "PARAM_Description", "Sets", "option", "in", "CSR", "indicating", "OCSP", "stapling", "to", "be", "mandatory", "Description", "printf", "NUMBER", "s", "s", "n", "ocsp", "Sets", "option", "in", "CSR", "indicating", "OCSP", "stapling", "to", "be", "mandatory", "ocsp", "Sets", "option", "in", "CSR", "indicating", "OCSP", "stapling", "to", "be", "mandatory", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "privkey", "p", "path", "to", "key", "NUMBER", "pem", "Usage", "PARAM_Description", "Use", "specified", "private", "key", "instead", "of", "account", "key", "useful", "for", "revocation", "Description", "printf", "NUMBER", "s", "s", "n", "privkey", "p", "path", "to", "key", "NUMBER", "pem", "Use", "specified", "private", "key", "instead", "of", "account", "key", "useful", "for", "revocation", "privkey", "p", "path", "to", "key", "NUMBER", "pem", "Use", "specified", "private", "key", "instead", "of", "account", "key", "useful", "for", "revocation", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "config", "f", "path", "to", "config", "Usage", "PARAM_Description", "Use", "specified", "config", "file", "Description", "printf", "NUMBER", "s", "s", "n", "config", "f", "path", "to", "config", "Use", "specified", "config", "file", "config", "f", "path", "to", "config", "Use", "specified", "config", "file", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "hook", "k", "path", "to", "hook", "NUMBER", "sh", "Usage", "PARAM_Description", "Use", "specified", "script", "for", "hooks", "Description", "printf", "NUMBER", "s", "s", "n", "hook", "k", "path", "to", "hook", "NUMBER", "sh", "Use", "specified", "script", "for", "hooks", "hook", "k", "path", "to", "hook", "NUMBER", "sh", "Use", "specified", "script", "for", "hooks", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "out", "o", "certs", "directory", "Usage", "PARAM_Description", "Output", "certificates", "into", "the", "specified", "directory", "Description", "printf", "NUMBER", "s", "s", "n", "out", "o", "certs", "directory", "Output", "certificates", "into", "the", "specified", "directory", "out", "o", "certs", "directory", "Output", "certificates", "into", "the", "specified", "directory", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "challenge", "t", "http", "NUMBER", "dns", "NUMBER", "Usage", "PARAM_Description", "Which", "challenge", "should", "be", "use", "Currently", "http", "NUMBER", "and", "dns", "NUMBER", "be", "support", "Description", "printf", "NUMBER", "s", "s", "n", "challenge", "t", "http", "NUMBER", "dns", "NUMBER", "Which", "challenge", "should", "be", "use", "Currently", "http", "NUMBER", "and", "dns", "NUMBER", "be", "support", "challenge", "t", "http", "NUMBER", "dns", "NUMBER", "Which", "challenge", "should", "be", "use", "Currently", "http", "NUMBER", "and", "dns", "NUMBER", "be", "support", "read", "r", "usage", "read", "r", "description", "PARAM_Usage", "algo", "a", "rsa", "prime", "NUMBER", "v", "NUMBER", "secp", "NUMBER", "r", "NUMBER", "Usage", "PARAM_Description", "Which", "public", "key", "algorithm", "should", "be", "use", "Supported", "rsa", "prime", "NUMBER", "v", "NUMBER", "and", "secp", "NUMBER", "r", "NUMBER", "Description", "printf", "NUMBER", "s", "s", "n", "algo", "a", "rsa", "prime", "NUMBER", "v", "NUMBER", "secp", "NUMBER", "r", "NUMBER", "Which", "public", "key", "algorithm", "should", "be", "use", "Supported", "rsa", "prime", "NUMBER", "v", "NUMBER", "and", "secp", "NUMBER", "r", "NUMBER", "algo", "a", "rsa", "prime", "NUMBER", "v", "NUMBER", "secp", "NUMBER", "r", "NUMBER", "Which", "public", "key", "algorithm", "should", "be", "use", "Supported", "rsa", "prime", "NUMBER", "v", "NUMBER", "and", "secp", "NUMBER", "r", "NUMBER", "read", "r", "usage", "read", "r", "description", "exit", "NUMBER", "Oh", "sorry", "my", "fault", "NUMBER", "set", "e", "set", "u", "set", "o", "pipefail", "n", "z", "shopt", "s", "nullglob", "set", "f", "umask", "NUMBER", "VERSION", "git", "master", "after", "NUMBER", "SOURCE", "opt", "dehydrated", "dehydrated", "h", "opt", "dehydrated", "dehydrated", "dirname", "opt", "dehydrated", "dehydrated", "cd", "P", "opt", "dehydrated", "pwd", "SCRIPTDIR", "opt", "dehydrated", "BASEDIR", "opt", "dehydrated", "ORIGARGS", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "d", "www", "NUMBER", "domain", "NUMBER", "de", "uname", "OSTYPE", "Linux", "N", "O", "O", "P", "main", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "d", "www", "NUMBER", "domain", "NUMBER", "de", "COMMAND", "z", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "d", "www", "NUMBER", "domain", "NUMBER", "de", "NUMBER", "case", "NUMBER", "in", "set_command", "sign_domains", "z", "COMMAND", "sign_domains", "shift", "NUMBER", "NUMBER", "case", "NUMBER", "in", "shift", "NUMBER", "check_parameters", "etc", "ssl", "reksys", "z", "etc", "ssl", "reksys", "PARAM_CERTDIR", "etc", "ssl", "reksys", "shift", "NUMBER", "NUMBER", "case", "NUMBER", "in", "shift", "NUMBER", "check_parameters", "secp", "NUMBER", "r", "NUMBER", "z", "secp", "NUMBER", "r", "NUMBER", "s", "PARAM_KEY_ALGO", "secp", "NUMBER", "r", "NUMBER", "shift", "NUMBER", "NUMBER", "case", "NUMBER", "in", "shift", "NUMBER", "check_parameters", "domain", "NUMBER", "de", "z", "domain", "NUMBER", "de", "t", "z", "PARAM_DOMAIN", "domain", "NUMBER", "de", "shift", "NUMBER", "NUMBER", "case", "NUMBER", "in", "shift", "NUMBER", "check_parameters", "www", "NUMBER", "domain", "NUMBER", "de", "z", "www", "NUMBER", "domain", "NUMBER", "de", "w", "z", "domain", "NUMBER", "de", "PARAM_DOMAIN", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "shift", "NUMBER", "NUMBER", "case", "COMMAND", "in", "command_sign_domains", "init_system", "load_config", "z", "for", "check_config", "in", "etc", "dehydrated", "usr", "local", "etc", "dehydrated", "PWD", "SCRIPTDIR", "f", "etc", "dehydrated", "config", "for", "check_config", "in", "etc", "dehydrated", "usr", "local", "etc", "dehydrated", "PWD", "SCRIPTDIR", "f", "usr", "local", "etc", "dehydrated", "config", "for", "check_config", "in", "etc", "dehydrated", "usr", "local", "etc", "dehydrated", "PWD", "SCRIPTDIR", "f", "opt", "reksys", "config", "for", "check_config", "in", "etc", "dehydrated", "usr", "local", "etc", "dehydrated", "PWD", "SCRIPTDIR", "f", "opt", "dehydrated", "config", "BASEDIR", "opt", "dehydrated", "CONFIG", "opt", "dehydrated", "config", "break", "CA", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "OLDCA", "CERTDIR", "ACCOUNTDIR", "CHALLENGETYPE", "http", "NUMBER", "CONFIG_D", "CURL_OPTS", "DOMAINS_D", "DOMAINS_TXT", "HOOK", "HOOK_CHAIN", "no", "RENEW_DAYS", "NUMBER", "KEYSIZE", "NUMBER", "WELLKNOWN", "PRIVATE_KEY_RENEW", "yes", "PRIVATE_KEY_ROLLOVER", "no", "KEY_ALGO", "rsa", "OPENSSL", "openssl", "OPENSSL_CNF", "CONTACT_EMAIL", "LOCKFILE", "OCSP_MUST_STAPLE", "no", "OCSP_FETCH", "no", "IP_VERSION", "CHAINCACHE", "AUTO_CLEANUP", "no", "DEHYDRATED_USER", "DEHYDRATED_GROUP", "API", "auto", "z", "opt", "dehydrated", "config", "f", "opt", "dehydrated", "config", "echo", "INFO", "Using", "main", "config", "file", "opt", "dehydrated", "config", "INFO", "Using", "main", "config", "file", "opt", "dehydrated", "config", "dirname", "opt", "dehydrated", "config", "BASEDIR", "opt", "dehydrated", "NUMBER", "opt", "dehydrated", "config", "CHALLENGETYPE", "http", "NUMBER", "WELLKNOWN", "srv", "http", "dehydrated", "KEYSIZE", "NUMBER", "PRIVATE_KEY_RENEW", "yes", "KEY_ALGO", "rsa", "n", "n", "n", "check_dependencies", "openssl", "version", "_sed", "command", "v", "grep", "command", "v", "mktemp", "command", "v", "diff", "set", "e", "awk", "print", "NUMBER", "curl", "V", "head", "n", "NUMBER", "CURL_VERSION", "NUMBER", "retcode", "NUMBER", "set", "e", "NUMBER", "NUMBER", "opt", "dehydrated", "BASEDIR", "opt", "dehydrated", "d", "opt", "dehydrated", "z", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "h", "t", "t", "p", "s", "a", "c", "m", "e", "v", "NUMBER", "NUMBER", "NUMBER", "a", "p", "i", "NUMBER", "l", "e", "t", "s", "e", "n", "c", "r", "y", "p", "t", "NUMBER", "o", "r", "g", "d", "i", "r", "e", "c", "t", "o", "r", "y", "OLDCA", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "echo", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "urlbase", "NUMBER", "openssl", "base", "NUMBER", "e", "tr", "d", "n", "r", "_sed", "e", "s", "g", "e", "y", "_", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "e", "y", "_", "CAHASH", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "z", "ACCOUNTDIR", "opt", "dehydrated", "accounts", "e", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "f", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "config", "ACCOUNT_KEY", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "account_key", "NUMBER", "pem", "ACCOUNT_KEY_JSON", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "registration_info", "NUMBER", "json", "f", "opt", "dehydrated", "private_key", "NUMBER", "pem", "f", "opt", "dehydrated", "private_key", "NUMBER", "json", "z", "CERTDIR", "opt", "dehydrated", "certs", "z", "CHAINCACHE", "opt", "dehydrated", "chains", "z", "DOMAINS_TXT", "opt", "dehydrated", "domains", "NUMBER", "txt", "z", "srv", "http", "dehydrated", "z", "LOCKFILE", "opt", "dehydrated", "lock", "z", "openssl", "version", "d", "cut", "d", "f", "NUMBER", "OPENSSL_CNF", "etc", "ssl", "openssl", "NUMBER", "cnf", "n", "n", "n", "n", "etc", "ssl", "reksys", "CERTDIR", "etc", "ssl", "reksys", "n", "n", "secp", "NUMBER", "r", "NUMBER", "KEY_ALGO", "secp", "NUMBER", "r", "NUMBER", "n", "n", "noverify", "verify_config", "http", "NUMBER", "h", "t", "t", "p", "NUMBER", "NUMBER", "http", "NUMBER", "d", "n", "s", "NUMBER", "NUMBER", "http", "NUMBER", "h", "t", "t", "p", "NUMBER", "NUMBER", "d", "srv", "http", "dehydrated", "secp", "NUMBER", "r", "NUMBER", "r", "s", "a", "secp", "NUMBER", "r", "NUMBER", "p", "r", "i", "m", "e", "NUMBER", "NUMBER", "NUMBER", "v", "NUMBER", "secp", "NUMBER", "r", "NUMBER", "s", "e", "c", "p", "NUMBER", "NUMBER", "NUMBER", "r", "NUMBER", "n", "auto", "a", "u", "t", "o", "store_configvars", "__KEY_ALGO", "secp", "NUMBER", "r", "NUMBER", "__OCSP_MUST_STAPLE", "no", "__PRIVATE_KEY_RENEW", "yes", "__KEYSIZE", "NUMBER", "__CHALLENGETYPE", "http", "NUMBER", "__HOOK", "__WELLKNOWN", "srv", "http", "dehydrated", "__HOOK_CHAIN", "no", "__OPENSSL_CNF", "etc", "ssl", "openssl", "NUMBER", "cnf", "__RENEW_DAYS", "NUMBER", "__IP_VERSION", "n", "opt", "dehydrated", "lock", "dirname", "opt", "dehydrated", "lock", "LOCKDIR", "opt", "dehydrated", "w", "opt", "dehydrated", "trap", "remove_lock", "EXIT", "http_request", "get", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "tempcont", "tmp", "dehydrated", "B", "NUMBER", "Grah", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "tempheaders", "tmp", "dehydrated", "aRsALy", "n", "set", "e", "get", "h", "e", "a", "d", "get", "g", "e", "t", "curl", "A", "dehydr", "NUMBER", "ted", "git", "master", "after", "NUMBER", "curl", "NUMBER", "L", "s", "w", "http_code", "o", "tmp", "dehydrated", "B", "NUMBER", "Grah", "D", "tmp", "dehydrated", "aRsALy", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "statuscode", "NUMBER", "curlret", "NUMBER", "set", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cat", "tmp", "dehydrated", "aRsALy", "cat", "tmp", "dehydrated", "B", "NUMBER", "Grah", "rm", "f", "tmp", "dehydrated", "B", "NUMBER", "Grah", "rm", "f", "tmp", "dehydrated", "aRsALy", "CA_DIRECTORY", "NUMBER", "fyAybhlKz", "NUMBER", "LINK", "random", "entries", "to", "the", "directory", "NUMBER", "keyChange", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "key", "change", "meta", "termsOfService", "LINK", "SA", "v", "NUMBER", "November", "NUMBER", "NUMBER", "pdf", "newAccount", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "acct", "newNonce", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "newOrder", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "revokeCert", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "revoke", "cert", "auto", "a", "u", "t", "o", "grep", "q", "newOrder", "API", "NUMBER", "NUMBER", "eq", "NUMBER", "printf", "s", "NUMBER", "fyAybhlKz", "NUMBER", "LINK", "random", "entries", "to", "the", "directory", "NUMBER", "keyChange", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "key", "change", "meta", "termsOfService", "LINK", "SA", "v", "NUMBER", "November", "NUMBER", "NUMBER", "pdf", "newAccount", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "acct", "newNonce", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "newOrder", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "revokeCert", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "revoke", "cert", "get_json_string_value", "newOrder", "local", "filter", "printf", "s", "NUMBER", "s", "NUMBER", "NUMBER", "p", "newOrder", "filter", "s", "NUMBER", "newOrder", "NUMBER", "NUMBER", "p", "sed", "n", "s", "NUMBER", "newOrder", "NUMBER", "NUMBER", "p", "CA_NEW_ORDER", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "printf", "s", "NUMBER", "fyAybhlKz", "NUMBER", "LINK", "random", "entries", "to", "the", "directory", "NUMBER", "keyChange", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "key", "change", "meta", "termsOfService", "LINK", "SA", "v", "NUMBER", "November", "NUMBER", "NUMBER", "pdf", "newAccount", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "acct", "newNonce", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "newOrder", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "revokeCert", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "revoke", "cert", "get_json_string_value", "newNonce", "local", "filter", "printf", "s", "NUMBER", "s", "NUMBER", "NUMBER", "p", "newNonce", "filter", "s", "NUMBER", "newNonce", "NUMBER", "NUMBER", "p", "sed", "n", "s", "NUMBER", "newNonce", "NUMBER", "NUMBER", "p", "CA_NEW_NONCE", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "printf", "s", "NUMBER", "fyAybhlKz", "NUMBER", "LINK", "random", "entries", "to", "the", "directory", "NUMBER", "keyChange", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "key", "change", "meta", "termsOfService", "LINK", "SA", "v", "NUMBER", "November", "NUMBER", "NUMBER", "pdf", "newAccount", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "acct", "newNonce", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "newOrder", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "revokeCert", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "revoke", "cert", "get_json_string_value", "newAccount", "local", "filter", "printf", "s", "NUMBER", "s", "NUMBER", "NUMBER", "p", "newAccount", "filter", "s", "NUMBER", "newAccount", "NUMBER", "NUMBER", "p", "sed", "n", "s", "NUMBER", "newAccount", "NUMBER", "NUMBER", "p", "CA_NEW_ACCOUNT", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "acct", "printf", "s", "NUMBER", "fyAybhlKz", "NUMBER", "LINK", "random", "entries", "to", "the", "directory", "NUMBER", "keyChange", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "key", "change", "meta", "termsOfService", "LINK", "SA", "v", "NUMBER", "November", "NUMBER", "NUMBER", "pdf", "newAccount", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "acct", "newNonce", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "newOrder", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "revokeCert", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "revoke", "cert", "get_json_string_value", "termsOfService", "local", "filter", "printf", "s", "NUMBER", "s", "NUMBER", "NUMBER", "p", "termsOfService", "filter", "s", "NUMBER", "termsOfService", "NUMBER", "NUMBER", "p", "sed", "n", "s", "NUMBER", "termsOfService", "NUMBER", "NUMBER", "p", "CA_TERMS", "LINK", "SA", "v", "NUMBER", "November", "NUMBER", "NUMBER", "pdf", "printf", "s", "NUMBER", "fyAybhlKz", "NUMBER", "LINK", "random", "entries", "to", "the", "directory", "NUMBER", "keyChange", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "key", "change", "meta", "termsOfService", "LINK", "SA", "v", "NUMBER", "November", "NUMBER", "NUMBER", "pdf", "newAccount", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "acct", "newNonce", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "newOrder", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "revokeCert", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "revoke", "cert", "get_json_string_value", "revokeCert", "local", "filter", "printf", "s", "NUMBER", "s", "NUMBER", "NUMBER", "p", "revokeCert", "filter", "s", "NUMBER", "revokeCert", "NUMBER", "NUMBER", "p", "sed", "n", "s", "NUMBER", "revokeCert", "NUMBER", "NUMBER", "p", "CA_REVOKE_CERT", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "revoke", "cert", "CA_ACCOUNT", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "acct", "export", "WELLKNOWN", "BASEDIR", "CERTDIR", "CONFIG", "COMMAND", "register_new_key", "no", "n", "e", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "account_key", "NUMBER", "pem", "openssl", "rsa", "in", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "account_key", "NUMBER", "pem", "check", "hex", "NUMBER", "bin", "urlbase", "NUMBER", "openssl", "base", "NUMBER", "e", "tr", "d", "n", "r", "awk", "publicExponent", "print", "NUMBER", "openssl", "rsa", "in", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "account_key", "NUMBER", "pem", "noout", "text", "_sed", "e", "s", "g", "e", "y", "_", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "e", "y", "_", "_sed", "e", "s", "space", "g", "e", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "s", "NUMBER", "NUMBER", "x", "NUMBER", "g", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "space", "g", "e", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "s", "NUMBER", "NUMBER", "x", "NUMBER", "g", "cat", "printf", "x", "NUMBER", "printf", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "pubExponent", "NUMBER", "AQAB", "openssl", "rsa", "in", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "account_key", "NUMBER", "pem", "noout", "modulus", "cut", "d", "f", "NUMBER", "hex", "NUMBER", "bin", "urlbase", "NUMBER", "openssl", "base", "NUMBER", "e", "cat", "_sed", "e", "s", "space", "g", "e", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "s", "NUMBER", "NUMBER", "x", "NUMBER", "g", "_sed", "e", "s", "g", "e", "y", "_", "tr", "d", "n", "r", "Linux", "L", "i", "n", "u", "x", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "e", "y", "_", "sed", "r", "e", "s", "space", "g", "e", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "s", "NUMBER", "NUMBER", "x", "NUMBER", "g", "printf", "xD", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xED", "xB", "NUMBER", "x", "NUMBER", "x", "NUMBER", "D", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xA", "NUMBER", "x", "NUMBER", "x", "NUMBER", "C", "xAC", "x", "NUMBER", "F", "x", "NUMBER", "E", "xC", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xFF", "x", "NUMBER", "F", "x", "NUMBER", "E", "xD", "NUMBER", "xB", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "F", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "xEA", "x", "NUMBER", "xC", "NUMBER", "xE", "NUMBER", "xFB", "xD", "NUMBER", "x", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "xAB", "xB", "NUMBER", "xAC", "x", "NUMBER", "F", "x", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "xCA", "xEC", "xA", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "B", "xC", "NUMBER", "xF", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "xCC", "x", "NUMBER", "xDC", "xF", "NUMBER", "x", "NUMBER", "E", "xC", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "E", "xFA", "xBE", "x", "NUMBER", "F", "xF", "NUMBER", "x", "NUMBER", "E", "x", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "xA", "NUMBER", "x", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "B", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "D", "xAC", "x", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "xCA", "x", "NUMBER", "A", "x", "NUMBER", "E", "x", "NUMBER", "xF", "NUMBER", "xFD", "x", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "C", "x", "NUMBER", "D", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "D", "xFF", "xE", "NUMBER", "x", "NUMBER", "F", "xB", "NUMBER", "xBB", "xEB", "xD", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "E", "xE", "NUMBER", "x", "NUMBER", "xFF", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "B", "xC", "NUMBER", "x", "NUMBER", "xD", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "E", "x", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "xAD", "x", "NUMBER", "x", "NUMBER", "xA", "NUMBER", "x", "NUMBER", "F", "x", "NUMBER", "D", "xD", "NUMBER", "xE", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "D", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xAF", "x", "NUMBER", "xDA", "x", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "E", "x", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "x", "NUMBER", "C", "xDF", "xE", "NUMBER", "x", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xB", "NUMBER", "x", "NUMBER", "x", "NUMBER", "D", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "A", "xB", "NUMBER", "x", "NUMBER", "E", "x", "NUMBER", "xDE", "x", "NUMBER", "x", "NUMBER", "F", "xDC", "x", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "xDB", "x", "NUMBER", "F", "x", "NUMBER", "D", "xDE", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "E", "xEC", "xBC", "xEA", "xF", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "A", "xF", "NUMBER", "x", "NUMBER", "D", "xE", "NUMBER", "x", "NUMBER", "A", "x", "NUMBER", "x", "NUMBER", "B", "xB", "NUMBER", "xEF", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "F", "xCC", "x", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "A", "xE", "NUMBER", "x", "NUMBER", "xAB", "xCF", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "A", "xAC", "xE", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "xB", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xEF", "x", "NUMBER", "x", "NUMBER", "A", "x", "NUMBER", "E", "x", "NUMBER", "B", "x", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "F", "x", "NUMBER", "x", "NUMBER", "xB", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "F", "xCD", "x", "NUMBER", "C", "x", "NUMBER", "xAD", "x", "NUMBER", "xE", "NUMBER", "xB", "NUMBER", "x", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "x", "NUMBER", "F", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "F", "xE", "NUMBER", "x", "NUMBER", "xBE", "xE", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "xCA", "x", "NUMBER", "F", "x", "NUMBER", "xC", "NUMBER", "xBF", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "xF", "NUMBER", "xED", "x", "NUMBER", "F", "x", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "xCE", "x", "NUMBER", "B", "x", "NUMBER", "C", "xED", "x", "NUMBER", "xE", "NUMBER", "xB", "NUMBER", "x", "NUMBER", "x", "NUMBER", "A", "x", "NUMBER", "x", "NUMBER", "F", "xD", "NUMBER", "x", "NUMBER", "xA", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xBC", "xA", "NUMBER", "x", "NUMBER", "E", "x", "NUMBER", "xED", "x", "NUMBER", "E", "xB", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xFC", "x", "NUMBER", "F", "x", "NUMBER", "xFF", "x", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xAD", "x", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "A", "x", "NUMBER", "x", "NUMBER", "F", "xDD", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "F", "x", "NUMBER", "C", "xAA", "x", "NUMBER", "xAC", "xAB", "xED", "x", "NUMBER", "A", "xF", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xEE", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xBD", "x", "NUMBER", "E", "x", "NUMBER", "F", "x", "NUMBER", "x", "NUMBER", "B", "xEC", "x", "NUMBER", "xC", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xAB", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "F", "xE", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "xFC", "xFB", "xE", "NUMBER", "x", "NUMBER", "x", "NUMBER", "F", "x", "NUMBER", "D", "x", "NUMBER", "x", "NUMBER", "D", "xA", "NUMBER", "xDF", "x", "NUMBER", "F", "x", "NUMBER", "D", "xD", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xE", "NUMBER", "xD", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "A", "xD", "NUMBER", "xAF", "x", "NUMBER", "x", "NUMBER", "xFF", "x", "NUMBER", "xA", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xBE", "xA", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "E", "xA", "NUMBER", "x", "NUMBER", "E", "xFC", "xF", "NUMBER", "x", "NUMBER", "x", "NUMBER", "D", "x", "NUMBER", "xA", "NUMBER", "xBF", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "E", "xE", "NUMBER", "xF", "NUMBER", "xFB", "xE", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "xB", "NUMBER", "x", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "E", "xB", "NUMBER", "xC", "NUMBER", "xB", "NUMBER", "xE", "NUMBER", "xC", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xA", "NUMBER", "x", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "B", "xE", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "D", "xAB", "x", "NUMBER", "A", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xB", "NUMBER", "x", "NUMBER", "A", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "F", "xC", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xCD", "x", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "C", "xC", "NUMBER", "x", "NUMBER", "B", "xA", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "E", "xC", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "A", "xC", "NUMBER", "pubMod", "NUMBER", "NUMBER", "luVIUjtsSJdQggopGB", "NUMBER", "rI", "NUMBER", "ewOVEl_", "NUMBER", "_XtO", "NUMBER", "DBERn", "NUMBER", "Fnlsfqg", "NUMBER", "jg", "NUMBER", "Vz", "NUMBER", "COruax_ARTCyuygA", "NUMBER", "AQksSbyPL", "NUMBER", "AcwA", "NUMBER", "PWOxtgO", "r", "NUMBER", "f", "NUMBER", "h", "NUMBER", "J", "NUMBER", "mmohXuXa", "NUMBER", "I", "NUMBER", "UPYFJgCNrFgYycqKPpj", "NUMBER", "_WVMjG", "NUMBER", "JAxY", "NUMBER", "_", "cvsbvr", "NUMBER", "vMO", "NUMBER", "BD_Vzk", "NUMBER", "xUfY", "NUMBER", "SWLkmI", "hof", "NUMBER", "rQYVqI", "NUMBER", "t", "NUMBER", "Ob", "NUMBER", "LVUmVxSvF", "NUMBER", "qGwZdlgWxx", "NUMBER", "WfHlM", "NUMBER", "Fl", "NUMBER", "IDoOQC", "NUMBER", "Yw", "NUMBER", "JhGEas", "NUMBER", "j", "NUMBER", "ikv", "NUMBER", "EfgFduPLd", "NUMBER", "bhXuVLuy", "NUMBER", "vXIKCr", "NUMBER", "feRaKZu", "NUMBER", "zZ", "NUMBER", "P", "NUMBER", "wQMsLCR", "NUMBER", "BBSuAhq", "NUMBER", "ERQSEFExqrOWW", "NUMBER", "bUYVfvdypum", "NUMBER", "PDLyRUsuIA", "NUMBER", "C_NLFitQ", "m", "NUMBER", "d", "NUMBER", "wxnyYpi", "NUMBER", "_hJr", "NUMBER", "nnAfKX", "NUMBER", "fFv", "NUMBER", "YHJPX", "NUMBER", "S", "NUMBER", "MvGVws", "NUMBER", "PO", "NUMBER", "LAYekR_", "NUMBER", "pij", "NUMBER", "GBzZLyjDgXtLrRWRvwvVf", "TU", "NUMBER", "YJWIethCt", "NUMBER", "O", "NUMBER", "OKYl_dgpgTWcHXW", "NUMBER", "qpesq", "NUMBER", "a", "NUMBER", "IkBobuZ", "NUMBER", "ETvV", "NUMBER", "vh", "NUMBER", "vsmcHIKVKrkhAf", "NUMBER", "Rxw_PvoBR", "NUMBER", "dlY", "NUMBER", "k", "NUMBER", "x", "N", "NUMBER", "AJX", "NUMBER", "tL", "NUMBER", "MPgcitevIFL_J", "NUMBER", "iCEGEHvqLGNy", "NUMBER", "kbvzzYI", "NUMBER", "UoL", "XQkdu", "NUMBER", "PL", "NUMBER", "kjxZbckjCeQfrfBsujD", "NUMBER", "UUXCaRhm", "NUMBER", "hxZvXxW", "Ig", "NUMBER", "H", "NUMBER", "rGjdHmLhKJQhvw", "NUMBER", "V", "NUMBER", "l", "NUMBER", "k", "NUMBER", "xWY", "NUMBER", "Ts", "NUMBER", "xEui", "NUMBER", "EjFdG", "NUMBER", "H", "NUMBER", "IhIKsM", "printf", "e", "s", "kty", "RSA", "n", "s", "AQAB", "NUMBER", "luVIUjtsSJdQggopGB", "NUMBER", "rI", "NUMBER", "ewOVEl_", "NUMBER", "_XtO", "NUMBER", "DBERn", "NUMBER", "Fnlsfqg", "NUMBER", "jg", "NUMBER", "Vz", "NUMBER", "COruax_ARTCyuygA", "NUMBER", "AQksSbyPL", "NUMBER", "AcwA", "NUMBER", "PWOxtgO", "r", "NUMBER", "f", "NUMBER", "h", "NUMBER", "J", "NUMBER", "mmohXuXa", "NUMBER", "I", "NUMBER", "UPYFJgCNrFgYycqKPpj", "NUMBER", "_WVMjG", "NUMBER", "JAxY", "NUMBER", "_", "cvsbvr", "NUMBER", "vMO", "NUMBER", "BD_Vzk", "NUMBER", "xUfY", "NUMBER", "SWLkmI", "hof", "NUMBER", "rQYVqI", "NUMBER", "t", "NUMBER", "Ob", "NUMBER", "LVUmVxSvF", "NUMBER", "qGwZdlgWxx", "NUMBER", "WfHlM", "NUMBER", "Fl", "NUMBER", "IDoOQC", "NUMBER", "Yw", "NUMBER", "JhGEas", "NUMBER", "j", "NUMBER", "ikv", "NUMBER", "EfgFduPLd", "NUMBER", "bhXuVLuy", "NUMBER", "vXIKCr", "NUMBER", "feRaKZu", "NUMBER", "zZ", "NUMBER", "P", "NUMBER", "wQMsLCR", "NUMBER", "BBSuAhq", "NUMBER", "ERQSEFExqrOWW", "NUMBER", "bUYVfvdypum", "NUMBER", "PDLyRUsuIA", "NUMBER", "C_NLFitQ", "m", "NUMBER", "d", "NUMBER", "wxnyYpi", "NUMBER", "_hJr", "NUMBER", "nnAfKX", "NUMBER", "fFv", "NUMBER", "YHJPX", "NUMBER", "S", "NUMBER", "MvGVws", "NUMBER", "PO", "NUMBER", "LAYekR_", "NUMBER", "pij", "NUMBER", "GBzZLyjDgXtLrRWRvwvVf", "TU", "NUMBER", "YJWIethCt", "NUMBER", "O", "NUMBER", "OKYl_dgpgTWcHXW", "NUMBER", "qpesq", "NUMBER", "a", "NUMBER", "IkBobuZ", "NUMBER", "ETvV", "NUMBER", "vh", "NUMBER", "vsmcHIKVKrkhAf", "NUMBER", "Rxw_PvoBR", "NUMBER", "dlY", "NUMBER", "k", "NUMBER", "x", "N", "NUMBER", "AJX", "NUMBER", "tL", "NUMBER", "MPgcitevIFL_J", "NUMBER", "iCEGEHvqLGNy", "NUMBER", "kbvzzYI", "NUMBER", "UoL", "XQkdu", "NUMBER", "PL", "NUMBER", "kjxZbckjCeQfrfBsujD", "NUMBER", "UUXCaRhm", "NUMBER", "hxZvXxW", "Ig", "NUMBER", "H", "NUMBER", "rGjdHmLhKJQhvw", "NUMBER", "V", "NUMBER", "l", "NUMBER", "k", "NUMBER", "xWY", "NUMBER", "Ts", "NUMBER", "xEui", "NUMBER", "EjFdG", "NUMBER", "H", "NUMBER", "IhIKsM", "openssl", "dgst", "sha", "NUMBER", "binary", "urlbase", "NUMBER", "openssl", "base", "NUMBER", "e", "tr", "d", "n", "r", "_sed", "e", "s", "g", "e", "y", "_", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "e", "y", "_", "thumbprint", "VXESrd", "NUMBER", "m", "NUMBER", "rm", "NUMBER", "wgbUmDI", "NUMBER", "cr", "NUMBER", "fyUE", "NUMBER", "DTX", "NUMBER", "gi", "NUMBER", "StpxhgI", "no", "y", "e", "s", "sign_domains", "r", "e", "g", "i", "s", "t", "e", "r", "e", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "registration_info", "NUMBER", "json", "cat", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "registration_info", "NUMBER", "json", "get_json_int_value", "id", "local", "filter", "printf", "s", "NUMBER", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "p", "id", "filter", "s", "NUMBER", "id", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "p", "sed", "n", "s", "NUMBER", "id", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "p", "ACCOUNT_ID", "NUMBER", "NUMBER", "eq", "NUMBER", "ACCOUNT_URL", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "acct", "NUMBER", "hookscript_bricker_hook", "n", "n", "d", "opt", "dehydrated", "chains", "n", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "DOMAINS_TXT", "tmp", "dehydrated", "qsGIOe", "n", "printf", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "ORIGIFS", "IFS", "tr", "d", "r", "awk", "print", "tolower", "NUMBER", "_sed", "e", "s", "space", "g", "e", "s", "space", "g", "e", "s", "space", "g", "e", "s", "NUMBER", "g", "e", "s", "g", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "space", "g", "e", "s", "space", "g", "e", "s", "space", "g", "e", "s", "NUMBER", "g", "e", "s", "g", "grep", "vE", "for", "line", "in", "TAG", "NUMBER", "g", "e", "s", "g", "grep", "vE", "true", "reset_configvars", "KEY_ALGO", "secp", "NUMBER", "r", "NUMBER", "OCSP_MUST_STAPLE", "no", "PRIVATE_KEY_RENEW", "yes", "KEYSIZE", "NUMBER", "CHALLENGETYPE", "http", "NUMBER", "HOOK", "WELLKNOWN", "srv", "http", "dehydrated", "HOOK_CHAIN", "no", "OPENSSL_CNF", "etc", "ssl", "openssl", "NUMBER", "cnf", "RENEW_DAYS", "NUMBER", "IP_VERSION", "IFS", "grep", "Eo", "true", "alias", "_sed", "e", "s", "g", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "line", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "grep", "Eo", "awk", "END", "print", "NR", "true", "aliascount", "NUMBER", "NUMBER", "gt", "NUMBER", "printf", "s", "n", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "cut", "d", "f", "NUMBER", "domain", "domain", "NUMBER", "de", "printf", "s", "n", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "cut", "s", "d", "f", "NUMBER", "morenames", "www", "NUMBER", "domain", "NUMBER", "de", "NUMBER", "lt", "NUMBER", "alias", "domain", "NUMBER", "de", "export", "alias", "z", "www", "NUMBER", "domain", "NUMBER", "de", "echo", "Processing", "domain", "NUMBER", "de", "with", "alternative", "names", "www", "NUMBER", "domain", "NUMBER", "de", "Processing", "domain", "NUMBER", "de", "with", "alternative", "names", "www", "NUMBER", "domain", "NUMBER", "de", "tb", "NUMBER", "local", "certdir", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "pem", "chain", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "chain", "NUMBER", "pem", "force_renew", "no", "date", "s", "timestamp", "NUMBER", "e", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "n", "certconfig", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "config", "f", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "config", "verify_config", "http", "NUMBER", "h", "t", "t", "p", "NUMBER", "NUMBER", "http", "NUMBER", "d", "n", "s", "NUMBER", "NUMBER", "http", "NUMBER", "h", "t", "t", "p", "NUMBER", "NUMBER", "d", "srv", "http", "dehydrated", "secp", "NUMBER", "r", "NUMBER", "r", "s", "a", "secp", "NUMBER", "r", "NUMBER", "p", "r", "i", "m", "e", "NUMBER", "NUMBER", "NUMBER", "v", "NUMBER", "secp", "NUMBER", "r", "NUMBER", "s", "e", "c", "p", "NUMBER", "NUMBER", "NUMBER", "r", "NUMBER", "n", "NUMBER", "a", "u", "t", "o", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "hookscript_bricker_hook", "n", "export", "WELLKNOWN", "CHALLENGETYPE", "KEY_ALGO", "PRIVATE_KEY_ROLLOVER", "skip", "no", "local", "csr", "n", "e", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "pem", "printf", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "openssl", "x", "NUMBER", "in", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "pem", "text", "noout", "grep", "DNS", "_sed", "s", "DNS", "g", "Linux", "L", "i", "n", "u", "x", "sed", "r", "s", "DNS", "g", "tr", "n", "tr", "d", "sort", "u", "tr", "n", "_sed", "s", "Linux", "L", "i", "n", "u", "x", "sed", "r", "s", "certnames", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "echo", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "tr", "n", "sort", "u", "tr", "n", "_sed", "s", "Linux", "L", "i", "n", "u", "x", "sed", "r", "s", "_sed", "s", "Linux", "L", "i", "n", "u", "x", "sed", "r", "s", "givennames", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "t", "b", "i", "t", "f", "NUMBER", "d", "e", "w", "w", "w", "NUMBER", "t", "b", "i", "t", "f", "NUMBER", "d", "e", "echo", "unchanged", "NUMBER", "unchanged", "NUMBER", "e", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "pem", "echo", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "openssl", "x", "NUMBER", "enddate", "noout", "in", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "pem", "cut", "d", "f", "NUMBER", "valid", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "printf", "Valid", "till", "s", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Valid", "till", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "openssl", "x", "NUMBER", "checkend", "NUMBER", "noout", "in", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "pem", "Certificate", "will", "expire", "echo", "Less", "than", "NUMBER", "days", "NUMBER", "Renewing", "Less", "than", "NUMBER", "days", "NUMBER", "Renewing", "local", "update_ocsp", "update_ocsp", "no", "no", "y", "e", "s", "update_ocsp", "yes", "z", "y", "e", "s", "sign_domain", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "NUMBER", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "local", "certdir", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "shift", "timestamp", "NUMBER", "shift", "domain", "domain", "NUMBER", "de", "altnames", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "export", "altnames", "echo", "Signing", "domains", "NUMBER", "Signing", "domains", "NUMBER", "NUMBER", "eq", "NUMBER", "NUMBER", "eq", "NUMBER", "z", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "local", "privkey", "privkey", "NUMBER", "pem", "e", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "csr", "r", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "pem", "yes", "y", "e", "s", "echo", "Generating", "private", "key", "NUMBER", "Generating", "private", "key", "NUMBER", "privkey", "privkey", "NUMBER", "pem", "case", "KEY_ALGO", "in", "_openssl", "ecparam", "genkey", "name", "secp", "NUMBER", "r", "NUMBER", "out", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "pem", "set", "e", "openssl", "ecparam", "genkey", "name", "secp", "NUMBER", "r", "NUMBER", "out", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "pem", "out", "res", "NUMBER", "set", "e", "NUMBER", "ne", "NUMBER", "r", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "pem", "r", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "roll", "NUMBER", "pem", "r", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "roll", "NUMBER", "pem", "no", "y", "e", "s", "r", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "roll", "NUMBER", "pem", "echo", "Generating", "signing", "request", "NUMBER", "Generating", "signing", "request", "NUMBER", "SAN", "for", "altname", "in", "altnames", "SAN", "DNS", "domain", "NUMBER", "de", "for", "altname", "in", "altnames", "SAN", "DNS", "domain", "NUMBER", "de", "DNS", "www", "NUMBER", "domain", "NUMBER", "de", "SAN", "DNS", "domain", "NUMBER", "de", "DNS", "www", "NUMBER", "domain", "NUMBER", "de", "local", "tmp_openssl_cnf", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "tmp_openssl_cnf", "tmp", "dehydrated", "CcSKF", "NUMBER", "cat", "etc", "ssl", "openssl", "NUMBER", "cnf", "printf", "SAN", "nsubjectAltName", "s", "DNS", "domain", "NUMBER", "de", "DNS", "www", "NUMBER", "domain", "NUMBER", "de", "no", "yes", "SUBJ", "CN", "domain", "NUMBER", "de", "Linux", "M", "I", "N", "G", "W", "openssl", "req", "new", "sha", "NUMBER", "key", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "pem", "out", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "csr", "subj", "CN", "domain", "NUMBER", "de", "reqexts", "SAN", "config", "tmp", "dehydrated", "CcSKF", "NUMBER", "rm", "f", "tmp", "dehydrated", "CcSKF", "NUMBER", "crt_path", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "pem", "sign_csr", "BEGIN", "CERTIFICATE", "REQUEST", "MIIBQjCByQIBADAUMRIwEAYDVQQDDAl", "NUMBER", "Yi", "NUMBER", "pdGYuZGUwdjAQBgcqhkjOPQIBBgUr", "gQQAIgNiAARY", "NUMBER", "Y", "NUMBER", "cRAXz", "NUMBER", "KayEaFiY", "NUMBER", "XJXfBthZ", "NUMBER", "NSwQF", "NUMBER", "mUNHyNK", "NUMBER", "BXYXxiC", "NUMBER", "y", "NUMBER", "I", "NUMBER", "jnF", "SuKAFQvVl", "NUMBER", "HRnm", "NUMBER", "nYK", "NUMBER", "lGT", "NUMBER", "nLutqygdHMQNm", "NUMBER", "FfTbAjAiu", "NUMBER", "uIbjmn", "NUMBER", "PYJ", "jrnCTJ", "DC", "RVToZ", "NUMBER", "IuNuXU", "NUMBER", "eAqVtuFu", "NUMBER", "LFtKiHEqiPRlAkRzQ", "END", "CERTIFICATE", "REQUEST", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "csr", "BEGIN", "CERTIFICATE", "REQUEST", "MIIBQjCByQIBADAUMRIwEAYDVQQDDAl", "NUMBER", "Yi", "NUMBER", "pdGYuZGUwdjAQBgcqhkjOPQIBBgUr", "gQQAIgNiAARY", "NUMBER", "Y", "NUMBER", "cRAXz", "NUMBER", "KayEaFiY", "NUMBER", "XJXfBthZ", "NUMBER", "NSwQF", "NUMBER", "mUNHyNK", "NUMBER", "BXYXxiC", "NUMBER", "y", "NUMBER", "I", "NUMBER", "jnF", "SuKAFQvVl", "NUMBER", "HRnm", "NUMBER", "nYK", "NUMBER", "lGT", "NUMBER", "nLutqygdHMQNm", "NUMBER", "FfTbAjAiu", "NUMBER", "uIbjmn", "NUMBER", "PYJ", "jrnCTJ", "DC", "RVToZ", "NUMBER", "IuNuXU", "NUMBER", "eAqVtuFu", "NUMBER", "LFtKiHEqiPRlAkRzQ", "END", "CERTIFICATE", "REQUEST", "shift", "NUMBER", "export", "altnames", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "altnames", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "NUMBER", "eq", "NUMBER", "NUMBER", "eq", "NUMBER", "z", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "n", "local", "a", "challenge_identifiers", "challenge_uris", "challenge_tokens", "authorizations", "keyauths", "deploy_args", "NUMBER", "eq", "NUMBER", "for", "altname", "in", "altnames", "printf", "type", "dns", "value", "s", "domain", "NUMBER", "de", "challenge_identifiers", "type", "dns", "value", "domain", "NUMBER", "de", "for", "altname", "in", "altnames", "printf", "type", "dns", "value", "s", "www", "NUMBER", "domain", "NUMBER", "de", "challenge_identifiers", "type", "dns", "value", "www", "NUMBER", "domain", "NUMBER", "de", "challenge_identifiers", "type", "dns", "value", "domain", "NUMBER", "de", "type", "dns", "value", "www", "NUMBER", "domain", "NUMBER", "de", "echo", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "signed_request", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "identifiers", "type", "dns", "value", "domain", "NUMBER", "de", "type", "dns", "value", "www", "NUMBER", "domain", "NUMBER", "de", "printf", "s", "identifiers", "type", "dns", "value", "domain", "NUMBER", "de", "type", "dns", "value", "www", "NUMBER", "domain", "NUMBER", "de", "urlbase", "NUMBER", "openssl", "base", "NUMBER", "e", "tr", "d", "n", "r", "_sed", "e", "s", "g", "e", "y", "_", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "e", "y", "_", "payload", "NUMBER", "eyJpZGVudGlmaWVycyI", "NUMBER", "IFt", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInRiLWl", "NUMBER", "Zi", "NUMBER", "kZSJ", "NUMBER", "LCB", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInd", "NUMBER", "dy", "NUMBER", "Yi", "NUMBER", "pdGYuZGUifV", "NUMBER", "NUMBER", "eq", "NUMBER", "http_request", "head", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "grep", "Replay", "Nonce", "awk", "F", "print", "NUMBER", "tr", "d", "n", "r", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "tempcont", "tmp", "dehydrated", "PCKWNe", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "tempheaders", "tmp", "dehydrated", "Ur", "NUMBER", "gmS", "n", "set", "e", "head", "h", "e", "a", "d", "curl", "A", "dehydr", "NUMBER", "ted", "git", "master", "after", "NUMBER", "curl", "NUMBER", "s", "w", "http_code", "o", "tmp", "dehydrated", "PCKWNe", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "I", "statuscode", "NUMBER", "touch", "tmp", "dehydrated", "Ur", "NUMBER", "gmS", "curlret", "NUMBER", "set", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cat", "tmp", "dehydrated", "Ur", "NUMBER", "gmS", "cat", "tmp", "dehydrated", "PCKWNe", "rm", "f", "tmp", "dehydrated", "PCKWNe", "rm", "f", "tmp", "dehydrated", "Ur", "NUMBER", "gmS", "nonce", "UT", "NUMBER", "G", "NUMBER", "O", "NUMBER", "FxgF", "NUMBER", "v", "NUMBER", "XsqB", "GcnIC", "NUMBER", "WssnoPATviVkSruhw", "header", "alg", "RS", "NUMBER", "jwk", "e", "AQAB", "kty", "RSA", "n", "NUMBER", "luVIUjtsSJdQggopGB", "NUMBER", "rI", "NUMBER", "ewOVEl_", "NUMBER", "_XtO", "NUMBER", "DBERn", "NUMBER", "Fnlsfqg", "NUMBER", "jg", "NUMBER", "Vz", "NUMBER", "COruax_ARTCyuygA", "NUMBER", "AQksSbyPL", "NUMBER", "AcwA", "NUMBER", "PWOxtgO", "r", "NUMBER", "f", "NUMBER", "h", "NUMBER", "J", "NUMBER", "mmohXuXa", "NUMBER", "I", "NUMBER", "UPYFJgCNrFgYycqKPpj", "NUMBER", "_WVMjG", "NUMBER", "JAxY", "NUMBER", "_", "cvsbvr", "NUMBER", "vMO", "NUMBER", "BD_Vzk", "NUMBER", "xUfY", "NUMBER", "SWLkmI", "hof", "NUMBER", "rQYVqI", "NUMBER", "t", "NUMBER", "Ob", "NUMBER", "LVUmVxSvF", "NUMBER", "qGwZdlgWxx", "NUMBER", "WfHlM", "NUMBER", "Fl", "NUMBER", "IDoOQC", "NUMBER", "Yw", "NUMBER", "JhGEas", "NUMBER", "j", "NUMBER", "ikv", "NUMBER", "EfgFduPLd", "NUMBER", "bhXuVLuy", "NUMBER", "vXIKCr", "NUMBER", "feRaKZu", "NUMBER", "zZ", "NUMBER", "P", "NUMBER", "wQMsLCR", "NUMBER", "BBSuAhq", "NUMBER", "ERQSEFExqrOWW", "NUMBER", "bUYVfvdypum", "NUMBER", "PDLyRUsuIA", "NUMBER", "C_NLFitQ", "m", "NUMBER", "d", "NUMBER", "wxnyYpi", "NUMBER", "_hJr", "NUMBER", "nnAfKX", "NUMBER", "fFv", "NUMBER", "YHJPX", "NUMBER", "S", "NUMBER", "MvGVws", "NUMBER", "PO", "NUMBER", "LAYekR_", "NUMBER", "pij", "NUMBER", "GBzZLyjDgXtLrRWRvwvVf", "TU", "NUMBER", "YJWIethCt", "NUMBER", "O", "NUMBER", "OKYl_dgpgTWcHXW", "NUMBER", "qpesq", "NUMBER", "a", "NUMBER", "IkBobuZ", "NUMBER", "ETvV", "NUMBER", "vh", "NUMBER", "vsmcHIKVKrkhAf", "NUMBER", "Rxw_PvoBR", "NUMBER", "dlY", "NUMBER", "k", "NUMBER", "x", "N", "NUMBER", "AJX", "NUMBER", "tL", "NUMBER", "MPgcitevIFL_J", "NUMBER", "iCEGEHvqLGNy", "NUMBER", "kbvzzYI", "NUMBER", "UoL", "XQkdu", "NUMBER", "PL", "NUMBER", "kjxZbckjCeQfrfBsujD", "NUMBER", "UUXCaRhm", "NUMBER", "hxZvXxW", "Ig", "NUMBER", "H", "NUMBER", "rGjdHmLhKJQhvw", "NUMBER", "V", "NUMBER", "l", "NUMBER", "k", "NUMBER", "xWY", "NUMBER", "Ts", "NUMBER", "xEui", "NUMBER", "EjFdG", "NUMBER", "H", "NUMBER", "IhIKsM", "NUMBER", "eq", "NUMBER", "n", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "acct", "NUMBER", "protected", "alg", "RS", "NUMBER", "kid", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "acct", "NUMBER", "url", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "nonce", "UT", "NUMBER", "G", "NUMBER", "O", "NUMBER", "FxgF", "NUMBER", "v", "NUMBER", "XsqB", "GcnIC", "NUMBER", "WssnoPATviVkSruhw", "printf", "s", "alg", "RS", "NUMBER", "kid", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "acct", "NUMBER", "url", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "nonce", "UT", "NUMBER", "G", "NUMBER", "O", "NUMBER", "FxgF", "NUMBER", "v", "NUMBER", "XsqB", "GcnIC", "NUMBER", "WssnoPATviVkSruhw", "urlbase", "NUMBER", "openssl", "base", "NUMBER", "e", "tr", "d", "n", "r", "_sed", "e", "s", "g", "e", "y", "_", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "e", "y", "_", "protected", "NUMBER", "eyJhbGciOiAiUlMyNTYiLCAia", "NUMBER", "lkIjogImh", "NUMBER", "dHBzOi", "NUMBER", "vYWNtZS", "NUMBER", "MDIuYXBpLmxldHNlbmNyeXB", "NUMBER", "Lm", "NUMBER", "yZy", "NUMBER", "hY", "NUMBER", "lL", "NUMBER", "FjY", "NUMBER", "QvNDkzNTU", "NUMBER", "NCIsICJ", "NUMBER", "cmwiOiAiaHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "FjbWUvbmV", "NUMBER", "LW", "NUMBER", "yZGVyIiwgIm", "NUMBER", "vbmNlIjogIlVUMkcxTzBGeGdGNy", "NUMBER", "NlhzcUItR", "NUMBER", "NuSUMxV", "NUMBER", "Nzbm", "NUMBER", "QQVR", "NUMBER", "aVZrU", "NUMBER", "J", "NUMBER", "aHcifQ", "printf", "s", "eyJhbGciOiAiUlMyNTYiLCAia", "NUMBER", "lkIjogImh", "NUMBER", "dHBzOi", "NUMBER", "vYWNtZS", "NUMBER", "MDIuYXBpLmxldHNlbmNyeXB", "NUMBER", "Lm", "NUMBER", "yZy", "NUMBER", "hY", "NUMBER", "lL", "NUMBER", "FjY", "NUMBER", "QvNDkzNTU", "NUMBER", "NCIsICJ", "NUMBER", "cmwiOiAiaHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "FjbWUvbmV", "NUMBER", "LW", "NUMBER", "yZGVyIiwgIm", "NUMBER", "vbmNlIjogIlVUMkcxTzBGeGdGNy", "NUMBER", "NlhzcUItR", "NUMBER", "NuSUMxV", "NUMBER", "Nzbm", "NUMBER", "QQVR", "NUMBER", "aVZrU", "NUMBER", "J", "NUMBER", "aHcifQ", "NUMBER", "eyJpZGVudGlmaWVycyI", "NUMBER", "IFt", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInRiLWl", "NUMBER", "Zi", "NUMBER", "kZSJ", "NUMBER", "LCB", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInd", "NUMBER", "dy", "NUMBER", "Yi", "NUMBER", "pdGYuZGUifV", "NUMBER", "openssl", "dgst", "sha", "NUMBER", "sign", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "account_key", "NUMBER", "pem", "urlbase", "NUMBER", "openssl", "base", "NUMBER", "e", "tr", "d", "n", "r", "_sed", "e", "s", "g", "e", "y", "_", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "e", "y", "_", "sign", "NUMBER", "QBzpQ", "NUMBER", "dQoIcYzNJCtv", "NUMBER", "qRofVHNOqrrHiTElFMeobXgoE", "ESwMXmkB", "DTuxAcW", "NUMBER", "yRx", "KDl", "NUMBER", "HRafl_iSpCDZgAzrTngUQTcU_Mhk", "NUMBER", "XtetHGmevWrJhjA", "NUMBER", "t", "NUMBER", "TVuSVa", "NUMBER", "futxErmIymmARYgxaisqXb", "NUMBER", "CJSBDpaAI_tURIe", "NUMBER", "qhOmzno_EVqvtmgclpNRbhkLcb", "NUMBER", "ezVIoV", "NUMBER", "D", "NUMBER", "hUTCn", "NUMBER", "KUChAxp", "NUMBER", "pbOaivSw", "NUMBER", "oDWuFwzZ", "NUMBER", "a", "NUMBER", "i", "NUMBER", "vKPnVs", "NUMBER", "ceks", "NUMBER", "lKn", "NUMBER", "KEjpdPgW", "NUMBER", "QaNMEBn_gQQpD", "NUMBER", "fgd", "NUMBER", "YTQGqvipIcZ", "NUMBER", "ZMVxTySfIOMUlLEhtFLqycm", "NUMBER", "DwL", "NUMBER", "bbMZ_Yb", "NUMBER", "siIa", "NUMBER", "U", "NUMBER", "MBmYGW", "NUMBER", "KYDf", "NUMBER", "UtVJx", "NUMBER", "hibIR", "NUMBER", "OtLJCG", "NUMBER", "GoVaw", "NUMBER", "JYnew", "NUMBER", "xfvYEbiOpyxkZUoBg", "NUMBER", "z", "NUMBER", "VqxSy", "NUMBER", "p", "NUMBER", "Z", "NUMBER", "WBDZHICnPig", "NUMBER", "S", "NUMBER", "rzapGcL", "NUMBER", "EPLUVUtcjnZicL", "NUMBER", "hauCFCXHYRF", "NUMBER", "waX", "sJa", "NUMBER", "oWYyZyDF", "NUMBER", "v", "NUMBER", "m", "NUMBER", "vQSwxscCr", "NUMBER", "aQeTgytMmp_rHWeICM", "NUMBER", "TglQZJQbkgbRsDjIIdqk", "NUMBER", "BqPBJ", "lN", "NUMBER", "wuuClANJs", "NUMBER", "zF", "NUMBER", "vZMXwGU", "NUMBER", "bGH", "NUMBER", "yapJuYMT", "NUMBER", "YKJuXzt", "NUMBER", "oiwClp", "NUMBER", "P", "NUMBER", "zufPY", "NUMBER", "cYG", "L", "NUMBER", "E", "NUMBER", "_lFCHs", "NUMBER", "f", "NUMBER", "ab", "NUMBER", "_j", "NUMBER", "pTJ", "NUMBER", "sFFlAhUozdN", "NUMBER", "Q", "NUMBER", "Jmgu", "NUMBER", "pPNy", "NUMBER", "xW", "NUMBER", "khDfx", "NUMBER", "GIU", "NUMBER", "sNa", "NUMBER", "v", "NUMBER", "AE", "NUMBER", "RhY", "NUMBER", "eq", "NUMBER", "data", "protected", "eyJhbGciOiAiUlMyNTYiLCAia", "NUMBER", "lkIjogImh", "NUMBER", "dHBzOi", "NUMBER", "vYWNtZS", "NUMBER", "MDIuYXBpLmxldHNlbmNyeXB", "NUMBER", "Lm", "NUMBER", "yZy", "NUMBER", "hY", "NUMBER", "lL", "NUMBER", "FjY", "NUMBER", "QvNDkzNTU", "NUMBER", "NCIsICJ", "NUMBER", "cmwiOiAiaHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "FjbWUvbmV", "NUMBER", "LW", "NUMBER", "yZGVyIiwgIm", "NUMBER", "vbmNlIjogIlVUMkcxTzBGeGdGNy", "NUMBER", "NlhzcUItR", "NUMBER", "NuSUMxV", "NUMBER", "Nzbm", "NUMBER", "QQVR", "NUMBER", "aVZrU", "NUMBER", "J", "NUMBER", "aHcifQ", "payload", "eyJpZGVudGlmaWVycyI", "NUMBER", "IFt", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInRiLWl", "NUMBER", "Zi", "NUMBER", "kZSJ", "NUMBER", "LCB", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInd", "NUMBER", "dy", "NUMBER", "Yi", "NUMBER", "pdGYuZGUifV", "NUMBER", "signature", "QBzpQ", "NUMBER", "dQoIcYzNJCtv", "NUMBER", "qRofVHNOqrrHiTElFMeobXgoE", "ESwMXmkB", "DTuxAcW", "NUMBER", "yRx", "KDl", "NUMBER", "HRafl_iSpCDZgAzrTngUQTcU_Mhk", "NUMBER", "XtetHGmevWrJhjA", "NUMBER", "t", "NUMBER", "TVuSVa", "NUMBER", "futxErmIymmARYgxaisqXb", "NUMBER", "CJSBDpaAI_tURIe", "NUMBER", "qhOmzno_EVqvtmgclpNRbhkLcb", "NUMBER", "ezVIoV", "NUMBER", "D", "NUMBER", "hUTCn", "NUMBER", "KUChAxp", "NUMBER", "pbOaivSw", "NUMBER", "oDWuFwzZ", "NUMBER", "a", "NUMBER", "i", "NUMBER", "vKPnVs", "NUMBER", "ceks", "NUMBER", "lKn", "NUMBER", "KEjpdPgW", "NUMBER", "QaNMEBn_gQQpD", "NUMBER", "fgd", "NUMBER", "YTQGqvipIcZ", "NUMBER", "ZMVxTySfIOMUlLEhtFLqycm", "NUMBER", "DwL", "NUMBER", "bbMZ_Yb", "NUMBER", "siIa", "NUMBER", "U", "NUMBER", "MBmYGW", "NUMBER", "KYDf", "NUMBER", "UtVJx", "NUMBER", "hibIR", "NUMBER", "OtLJCG", "NUMBER", "GoVaw", "NUMBER", "JYnew", "NUMBER", "xfvYEbiOpyxkZUoBg", "NUMBER", "z", "NUMBER", "VqxSy", "NUMBER", "p", "NUMBER", "Z", "NUMBER", "WBDZHICnPig", "NUMBER", "S", "NUMBER", "rzapGcL", "NUMBER", "EPLUVUtcjnZicL", "NUMBER", "hauCFCXHYRF", "NUMBER", "waX", "sJa", "NUMBER", "oWYyZyDF", "NUMBER", "v", "NUMBER", "m", "NUMBER", "vQSwxscCr", "NUMBER", "aQeTgytMmp_rHWeICM", "NUMBER", "TglQZJQbkgbRsDjIIdqk", "NUMBER", "BqPBJ", "lN", "NUMBER", "wuuClANJs", "NUMBER", "zF", "NUMBER", "vZMXwGU", "NUMBER", "bGH", "NUMBER", "yapJuYMT", "NUMBER", "YKJuXzt", "NUMBER", "oiwClp", "NUMBER", "P", "NUMBER", "zufPY", "NUMBER", "cYG", "L", "NUMBER", "E", "NUMBER", "_lFCHs", "NUMBER", "f", "NUMBER", "ab", "NUMBER", "_j", "NUMBER", "pTJ", "NUMBER", "sFFlAhUozdN", "NUMBER", "Q", "NUMBER", "Jmgu", "NUMBER", "pPNy", "NUMBER", "xW", "NUMBER", "khDfx", "NUMBER", "GIU", "NUMBER", "sNa", "NUMBER", "v", "NUMBER", "AE", "NUMBER", "RhY", "http_request", "post", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "protected", "eyJhbGciOiAiUlMyNTYiLCAia", "NUMBER", "lkIjogImh", "NUMBER", "dHBzOi", "NUMBER", "vYWNtZS", "NUMBER", "MDIuYXBpLmxldHNlbmNyeXB", "NUMBER", "Lm", "NUMBER", "yZy", "NUMBER", "hY", "NUMBER", "lL", "NUMBER", "FjY", "NUMBER", "QvNDkzNTU", "NUMBER", "NCIsICJ", "NUMBER", "cmwiOiAiaHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "FjbWUvbmV", "NUMBER", "LW", "NUMBER", "yZGVyIiwgIm", "NUMBER", "vbmNlIjogIlVUMkcxTzBGeGdGNy", "NUMBER", "NlhzcUItR", "NUMBER", "NuSUMxV", "NUMBER", "Nzbm", "NUMBER", "QQVR", "NUMBER", "aVZrU", "NUMBER", "J", "NUMBER", "aHcifQ", "payload", "eyJpZGVudGlmaWVycyI", "NUMBER", "IFt", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInRiLWl", "NUMBER", "Zi", "NUMBER", "kZSJ", "NUMBER", "LCB", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInd", "NUMBER", "dy", "NUMBER", "Yi", "NUMBER", "pdGYuZGUifV", "NUMBER", "signature", "QBzpQ", "NUMBER", "dQoIcYzNJCtv", "NUMBER", "qRofVHNOqrrHiTElFMeobXgoE", "ESwMXmkB", "DTuxAcW", "NUMBER", "yRx", "KDl", "NUMBER", "HRafl_iSpCDZgAzrTngUQTcU_Mhk", "NUMBER", "XtetHGmevWrJhjA", "NUMBER", "t", "NUMBER", "TVuSVa", "NUMBER", "futxErmIymmARYgxaisqXb", "NUMBER", "CJSBDpaAI_tURIe", "NUMBER", "qhOmzno_EVqvtmgclpNRbhkLcb", "NUMBER", "ezVIoV", "NUMBER", "D", "NUMBER", "hUTCn", "NUMBER", "KUChAxp", "NUMBER", "pbOaivSw", "NUMBER", "oDWuFwzZ", "NUMBER", "a", "NUMBER", "i", "NUMBER", "vKPnVs", "NUMBER", "ceks", "NUMBER", "lKn", "NUMBER", "KEjpdPgW", "NUMBER", "QaNMEBn_gQQpD", "NUMBER", "fgd", "NUMBER", "YTQGqvipIcZ", "NUMBER", "ZMVxTySfIOMUlLEhtFLqycm", "NUMBER", "DwL", "NUMBER", "bbMZ_Yb", "NUMBER", "siIa", "NUMBER", "U", "NUMBER", "MBmYGW", "NUMBER", "KYDf", "NUMBER", "UtVJx", "NUMBER", "hibIR", "NUMBER", "OtLJCG", "NUMBER", "GoVaw", "NUMBER", "JYnew", "NUMBER", "xfvYEbiOpyxkZUoBg", "NUMBER", "z", "NUMBER", "VqxSy", "NUMBER", "p", "NUMBER", "Z", "NUMBER", "WBDZHICnPig", "NUMBER", "S", "NUMBER", "rzapGcL", "NUMBER", "EPLUVUtcjnZicL", "NUMBER", "hauCFCXHYRF", "NUMBER", "waX", "sJa", "NUMBER", "oWYyZyDF", "NUMBER", "v", "NUMBER", "m", "NUMBER", "vQSwxscCr", "NUMBER", "aQeTgytMmp_rHWeICM", "NUMBER", "TglQZJQbkgbRsDjIIdqk", "NUMBER", "BqPBJ", "lN", "NUMBER", "wuuClANJs", "NUMBER", "zF", "NUMBER", "vZMXwGU", "NUMBER", "bGH", "NUMBER", "yapJuYMT", "NUMBER", "YKJuXzt", "NUMBER", "oiwClp", "NUMBER", "P", "NUMBER", "zufPY", "NUMBER", "cYG", "L", "NUMBER", "E", "NUMBER", "_lFCHs", "NUMBER", "f", "NUMBER", "ab", "NUMBER", "_j", "NUMBER", "pTJ", "NUMBER", "sFFlAhUozdN", "NUMBER", "Q", "NUMBER", "Jmgu", "NUMBER", "pPNy", "NUMBER", "xW", "NUMBER", "khDfx", "NUMBER", "GIU", "NUMBER", "sNa", "NUMBER", "v", "NUMBER", "AE", "NUMBER", "RhY", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "tempcont", "tmp", "dehydrated", "Qn", "NUMBER", "Nu", "NUMBER", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "tempheaders", "tmp", "dehydrated", "kMe", "NUMBER", "wM", "n", "set", "e", "post", "h", "e", "a", "d", "post", "g", "e", "t", "post", "p", "o", "s", "t", "curl", "A", "dehydr", "NUMBER", "ted", "git", "master", "after", "NUMBER", "curl", "NUMBER", "s", "w", "http_code", "o", "tmp", "dehydrated", "Qn", "NUMBER", "Nu", "NUMBER", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "D", "tmp", "dehydrated", "kMe", "NUMBER", "wM", "H", "Content", "Type", "application", "jose", "json", "d", "protected", "eyJhbGciOiAiUlMyNTYiLCAia", "NUMBER", "lkIjogImh", "NUMBER", "dHBzOi", "NUMBER", "vYWNtZS", "NUMBER", "MDIuYXBpLmxldHNlbmNyeXB", "NUMBER", "Lm", "NUMBER", "yZy", "NUMBER", "hY", "NUMBER", "lL", "NUMBER", "FjY", "NUMBER", "QvNDkzNTU", "NUMBER", "NCIsICJ", "NUMBER", "cmwiOiAiaHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "FjbWUvbmV", "NUMBER", "LW", "NUMBER", "yZGVyIiwgIm", "NUMBER", "vbmNlIjogIlVUMkcxTzBGeGdGNy", "NUMBER", "NlhzcUItR", "NUMBER", "NuSUMxV", "NUMBER", "Nzbm", "NUMBER", "QQVR", "NUMBER", "aVZrU", "NUMBER", "J", "NUMBER", "aHcifQ", "payload", "eyJpZGVudGlmaWVycyI", "NUMBER", "IFt", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInRiLWl", "NUMBER", "Zi", "NUMBER", "kZSJ", "NUMBER", "LCB", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInd", "NUMBER", "dy", "NUMBER", "Yi", "NUMBER", "pdGYuZGUifV", "NUMBER", "signature", "QBzpQ", "NUMBER", "dQoIcYzNJCtv", "NUMBER", "qRofVHNOqrrHiTElFMeobXgoE", "ESwMXmkB", "DTuxAcW", "NUMBER", "yRx", "KDl", "NUMBER", "HRafl_iSpCDZgAzrTngUQTcU_Mhk", "NUMBER", "XtetHGmevWrJhjA", "NUMBER", "t", "NUMBER", "TVuSVa", "NUMBER", "futxErmIymmARYgxaisqXb", "NUMBER", "CJSBDpaAI_tURIe", "NUMBER", "qhOmzno_EVqvtmgclpNRbhkLcb", "NUMBER", "ezVIoV", "NUMBER", "D", "NUMBER", "hUTCn", "NUMBER", "KUChAxp", "NUMBER", "pbOaivSw", "NUMBER", "oDWuFwzZ", "NUMBER", "a", "NUMBER", "i", "NUMBER", "vKPnVs", "NUMBER", "ceks", "NUMBER", "lKn", "NUMBER", "KEjpdPgW", "NUMBER", "QaNMEBn_gQQpD", "NUMBER", "fgd", "NUMBER", "YTQGqvipIcZ", "NUMBER", "ZMVxTySfIOMUlLEhtFLqycm", "NUMBER", "DwL", "NUMBER", "bbMZ_Yb", "NUMBER", "siIa", "NUMBER", "U", "NUMBER", "MBmYGW", "NUMBER", "KYDf", "NUMBER", "UtVJx", "NUMBER", "hibIR", "NUMBER", "OtLJCG", "NUMBER", "GoVaw", "NUMBER", "JYnew", "NUMBER", "xfvYEbiOpyxkZUoBg", "NUMBER", "z", "NUMBER", "VqxSy", "NUMBER", "p", "NUMBER", "Z", "NUMBER", "WBDZHICnPig", "NUMBER", "S", "NUMBER", "rzapGcL", "NUMBER", "EPLUVUtcjnZicL", "NUMBER", "hauCFCXHYRF", "NUMBER", "waX", "sJa", "NUMBER", "oWYyZyDF", "NUMBER", "v", "NUMBER", "m", "NUMBER", "vQSwxscCr", "NUMBER", "aQeTgytMmp_rHWeICM", "NUMBER", "TglQZJQbkgbRsDjIIdqk", "NUMBER", "BqPBJ", "lN", "NUMBER", "wuuClANJs", "NUMBER", "zF", "NUMBER", "vZMXwGU", "NUMBER", "bGH", "NUMBER", "yapJuYMT", "NUMBER", "YKJuXzt", "NUMBER", "oiwClp", "NUMBER", "P", "NUMBER", "zufPY", "NUMBER", "cYG", "L", "NUMBER", "E", "NUMBER", "_lFCHs", "NUMBER", "f", "NUMBER", "ab", "NUMBER", "_j", "NUMBER", "pTJ", "NUMBER", "sFFlAhUozdN", "NUMBER", "Q", "NUMBER", "Jmgu", "NUMBER", "pPNy", "NUMBER", "xW", "NUMBER", "khDfx", "NUMBER", "GIU", "NUMBER", "sNa", "NUMBER", "v", "NUMBER", "AE", "NUMBER", "RhY", "statuscode", "NUMBER", "curlret", "NUMBER", "set", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cat", "tmp", "dehydrated", "kMe", "NUMBER", "wM", "cat", "Schreibfehler", "Daten\u00fcbergabe", "unterbrochen", "broken", "pipe", "result", "remove_lock", "rm", "f", "opt", "dehydrated", "lock", "Here", "s", "the", "version", "output", "NUMBER", "dehydrated", "version", "INFO", "Using", "main", "config", "file", "opt", "dehydrated", "config", "Dehydrated", "by", "Lukas", "Schauer", "LINK", "Dehydrated", "version", "git", "master", "after", "NUMBER", "GIT", "Revision", "b", "NUMBER", "eac", "NUMBER", "c", "NUMBER", "be", "NUMBER", "bf", "NUMBER", "c", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "OS", "Arch", "Linux", "Used", "software", "bash", "NUMBER", "NUMBER", "release", "curl", "curl", "NUMBER", "awk", "GNU", "Awk", "NUMBER", "API", "NUMBER", "GNU", "MPFR", "NUMBER", "GNU", "MP", "NUMBER", "sed", "sed", "GNU", "sed", "NUMBER", "mktemp", "mktemp", "GNU", "coreutils", "NUMBER", "grep", "grep", "GNU", "grep", "NUMBER", "diff", "diff", "GNU", "diffutils", "NUMBER", "openssl", "OpenSSL", "NUMBER", "g", "NUMBER", "Nov", "NUMBER", "And", "here", "s", "the", "output", "including", "your", "Debug", "Code", "set", "e", "set", "u", "set", "o", "pipefail", "n", "z", "shopt", "s", "nullglob", "set", "f", "umask", "NUMBER", "VERSION", "git", "master", "after", "NUMBER", "SOURCE", "opt", "dehydrated", "dehydrated", "h", "opt", "dehydrated", "dehydrated", "dirname", "opt", "dehydrated", "dehydrated", "cd", "P", "opt", "dehydrated", "pwd", "SCRIPTDIR", "opt", "dehydrated", "BASEDIR", "opt", "dehydrated", "ORIGARGS", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "d", "www", "NUMBER", "domain", "NUMBER", "de", "uname", "OSTYPE", "Linux", "N", "O", "O", "P", "main", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "d", "www", "NUMBER", "domain", "NUMBER", "de", "COMMAND", "z", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "d", "www", "NUMBER", "domain", "NUMBER", "de", "NUMBER", "case", "NUMBER", "in", "set_command", "sign_domains", "z", "COMMAND", "sign_domains", "shift", "NUMBER", "NUMBER", "case", "NUMBER", "in", "shift", "NUMBER", "check_parameters", "etc", "ssl", "reksys", "z", "etc", "ssl", "reksys", "PARAM_CERTDIR", "etc", "ssl", "reksys", "shift", "NUMBER", "NUMBER", "case", "NUMBER", "in", "shift", "NUMBER", "check_parameters", "secp", "NUMBER", "r", "NUMBER", "z", "secp", "NUMBER", "r", "NUMBER", "s", "PARAM_KEY_ALGO", "secp", "NUMBER", "r", "NUMBER", "shift", "NUMBER", "NUMBER", "case", "NUMBER", "in", "shift", "NUMBER", "check_parameters", "domain", "NUMBER", "de", "z", "domain", "NUMBER", "de", "t", "z", "PARAM_DOMAIN", "domain", "NUMBER", "de", "shift", "NUMBER", "NUMBER", "case", "NUMBER", "in", "shift", "NUMBER", "check_parameters", "www", "NUMBER", "domain", "NUMBER", "de", "z", "www", "NUMBER", "domain", "NUMBER", "de", "w", "z", "domain", "NUMBER", "de", "PARAM_DOMAIN", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "shift", "NUMBER", "NUMBER", "case", "COMMAND", "in", "command_sign_domains", "init_system", "load_config", "z", "for", "check_config", "in", "etc", "dehydrated", "usr", "local", "etc", "dehydrated", "PWD", "SCRIPTDIR", "f", "etc", "dehydrated", "config", "for", "check_config", "in", "etc", "dehydrated", "usr", "local", "etc", "dehydrated", "PWD", "SCRIPTDIR", "f", "usr", "local", "etc", "dehydrated", "config", "for", "check_config", "in", "etc", "dehydrated", "usr", "local", "etc", "dehydrated", "PWD", "SCRIPTDIR", "f", "opt", "reksys", "config", "for", "check_config", "in", "etc", "dehydrated", "usr", "local", "etc", "dehydrated", "PWD", "SCRIPTDIR", "f", "opt", "dehydrated", "config", "BASEDIR", "opt", "dehydrated", "CONFIG", "opt", "dehydrated", "config", "break", "CA", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "OLDCA", "CERTDIR", "ACCOUNTDIR", "CHALLENGETYPE", "http", "NUMBER", "CONFIG_D", "CURL_OPTS", "DOMAINS_D", "DOMAINS_TXT", "HOOK", "HOOK_CHAIN", "no", "RENEW_DAYS", "NUMBER", "KEYSIZE", "NUMBER", "WELLKNOWN", "PRIVATE_KEY_RENEW", "yes", "PRIVATE_KEY_ROLLOVER", "no", "KEY_ALGO", "rsa", "OPENSSL", "openssl", "OPENSSL_CNF", "CONTACT_EMAIL", "LOCKFILE", "OCSP_MUST_STAPLE", "no", "OCSP_FETCH", "no", "IP_VERSION", "CHAINCACHE", "AUTO_CLEANUP", "no", "DEHYDRATED_USER", "DEHYDRATED_GROUP", "API", "auto", "z", "opt", "dehydrated", "config", "f", "opt", "dehydrated", "config", "echo", "INFO", "Using", "main", "config", "file", "opt", "dehydrated", "config", "INFO", "Using", "main", "config", "file", "opt", "dehydrated", "config", "dirname", "opt", "dehydrated", "config", "BASEDIR", "opt", "dehydrated", "NUMBER", "opt", "dehydrated", "config", "CHALLENGETYPE", "http", "NUMBER", "WELLKNOWN", "srv", "http", "dehydrated", "KEYSIZE", "NUMBER", "PRIVATE_KEY_RENEW", "yes", "KEY_ALGO", "rsa", "n", "n", "n", "check_dependencies", "openssl", "version", "_sed", "command", "v", "grep", "command", "v", "mktemp", "command", "v", "diff", "set", "e", "awk", "print", "NUMBER", "head", "n", "NUMBER", "curl", "V", "CURL_VERSION", "NUMBER", "retcode", "NUMBER", "set", "e", "NUMBER", "NUMBER", "opt", "dehydrated", "BASEDIR", "opt", "dehydrated", "d", "opt", "dehydrated", "z", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "h", "t", "t", "p", "s", "a", "c", "m", "e", "v", "NUMBER", "NUMBER", "NUMBER", "a", "p", "i", "NUMBER", "l", "e", "t", "s", "e", "n", "c", "r", "y", "p", "t", "NUMBER", "o", "r", "g", "d", "i", "r", "e", "c", "t", "o", "r", "y", "OLDCA", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "echo", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "urlbase", "NUMBER", "_sed", "e", "s", "g", "e", "y", "_", "tr", "d", "n", "r", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "e", "y", "_", "openssl", "base", "NUMBER", "e", "CAHASH", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "z", "ACCOUNTDIR", "opt", "dehydrated", "accounts", "e", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "f", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "config", "ACCOUNT_KEY", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "account_key", "NUMBER", "pem", "ACCOUNT_KEY_JSON", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "registration_info", "NUMBER", "json", "f", "opt", "dehydrated", "private_key", "NUMBER", "pem", "f", "opt", "dehydrated", "private_key", "NUMBER", "json", "z", "CERTDIR", "opt", "dehydrated", "certs", "z", "CHAINCACHE", "opt", "dehydrated", "chains", "z", "DOMAINS_TXT", "opt", "dehydrated", "domains", "NUMBER", "txt", "z", "srv", "http", "dehydrated", "z", "LOCKFILE", "opt", "dehydrated", "lock", "z", "cut", "d", "f", "NUMBER", "openssl", "version", "d", "OPENSSL_CNF", "etc", "ssl", "openssl", "NUMBER", "cnf", "n", "n", "n", "n", "etc", "ssl", "reksys", "CERTDIR", "etc", "ssl", "reksys", "n", "n", "secp", "NUMBER", "r", "NUMBER", "KEY_ALGO", "secp", "NUMBER", "r", "NUMBER", "n", "n", "noverify", "verify_config", "http", "NUMBER", "h", "t", "t", "p", "NUMBER", "NUMBER", "http", "NUMBER", "d", "n", "s", "NUMBER", "NUMBER", "http", "NUMBER", "h", "t", "t", "p", "NUMBER", "NUMBER", "d", "srv", "http", "dehydrated", "secp", "NUMBER", "r", "NUMBER", "r", "s", "a", "secp", "NUMBER", "r", "NUMBER", "p", "r", "i", "m", "e", "NUMBER", "NUMBER", "NUMBER", "v", "NUMBER", "secp", "NUMBER", "r", "NUMBER", "s", "e", "c", "p", "NUMBER", "NUMBER", "NUMBER", "r", "NUMBER", "n", "auto", "a", "u", "t", "o", "store_configvars", "__KEY_ALGO", "secp", "NUMBER", "r", "NUMBER", "__OCSP_MUST_STAPLE", "no", "__PRIVATE_KEY_RENEW", "yes", "__KEYSIZE", "NUMBER", "__CHALLENGETYPE", "http", "NUMBER", "__HOOK", "__WELLKNOWN", "srv", "http", "dehydrated", "__HOOK_CHAIN", "no", "__OPENSSL_CNF", "etc", "ssl", "openssl", "NUMBER", "cnf", "__RENEW_DAYS", "NUMBER", "__IP_VERSION", "n", "opt", "dehydrated", "lock", "dirname", "opt", "dehydrated", "lock", "LOCKDIR", "opt", "dehydrated", "w", "opt", "dehydrated", "trap", "remove_lock", "EXIT", "http_request", "get", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "tempcont", "tmp", "dehydrated", "KiC", "NUMBER", "gb", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "tempheaders", "tmp", "dehydrated", "exvjsg", "n", "set", "e", "get", "h", "e", "a", "d", "get", "g", "e", "t", "curl", "A", "dehydr", "NUMBER", "ted", "git", "master", "after", "NUMBER", "curl", "NUMBER", "L", "s", "w", "http_code", "o", "tmp", "dehydrated", "KiC", "NUMBER", "gb", "D", "tmp", "dehydrated", "exvjsg", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "statuscode", "NUMBER", "curlret", "NUMBER", "set", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "echo", "checking", "pipe", "NUMBER", "checking", "pipe", "NUMBER", "echo", "use", "pipe", "NUMBER", "use", "pipe", "NUMBER", "cat", "tmp", "dehydrated", "exvjsg", "echo", "get", "curl", "output", "get", "curl", "output", "cat", "tmp", "dehydrated", "KiC", "NUMBER", "gb", "echo", "deleting", "temp", "file", "deleting", "temp", "file", "rm", "f", "tmp", "dehydrated", "KiC", "NUMBER", "gb", "rm", "f", "tmp", "dehydrated", "exvjsg", "CA_DIRECTORY", "CxMsOnJE", "NUMBER", "t", "NUMBER", "LINK", "random", "entries", "to", "the", "directory", "NUMBER", "keyChange", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "key", "change", "meta", "termsOfService", "LINK", "SA", "v", "NUMBER", "November", "NUMBER", "NUMBER", "pdf", "newAccount", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "acct", "newNonce", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "newOrder", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "revokeCert", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "revoke", "cert", "auto", "a", "u", "t", "o", "grep", "q", "newOrder", "API", "NUMBER", "NUMBER", "eq", "NUMBER", "printf", "s", "CxMsOnJE", "NUMBER", "t", "NUMBER", "LINK", "random", "entries", "to", "the", "directory", "NUMBER", "keyChange", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "key", "change", "meta", "termsOfService", "LINK", "SA", "v", "NUMBER", "November", "NUMBER", "NUMBER", "pdf", "newAccount", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "acct", "newNonce", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "newOrder", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "revokeCert", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "revoke", "cert", "get_json_string_value", "newOrder", "local", "filter", "printf", "s", "NUMBER", "s", "NUMBER", "NUMBER", "p", "newOrder", "filter", "s", "NUMBER", "newOrder", "NUMBER", "NUMBER", "p", "sed", "n", "s", "NUMBER", "newOrder", "NUMBER", "NUMBER", "p", "CA_NEW_ORDER", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "printf", "s", "CxMsOnJE", "NUMBER", "t", "NUMBER", "LINK", "random", "entries", "to", "the", "directory", "NUMBER", "keyChange", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "key", "change", "meta", "termsOfService", "LINK", "SA", "v", "NUMBER", "November", "NUMBER", "NUMBER", "pdf", "newAccount", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "acct", "newNonce", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "newOrder", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "revokeCert", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "revoke", "cert", "get_json_string_value", "newNonce", "local", "filter", "printf", "s", "NUMBER", "s", "NUMBER", "NUMBER", "p", "newNonce", "filter", "s", "NUMBER", "newNonce", "NUMBER", "NUMBER", "p", "sed", "n", "s", "NUMBER", "newNonce", "NUMBER", "NUMBER", "p", "CA_NEW_NONCE", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "printf", "s", "CxMsOnJE", "NUMBER", "t", "NUMBER", "LINK", "random", "entries", "to", "the", "directory", "NUMBER", "keyChange", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "key", "change", "meta", "termsOfService", "LINK", "SA", "v", "NUMBER", "November", "NUMBER", "NUMBER", "pdf", "newAccount", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "acct", "newNonce", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "newOrder", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "revokeCert", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "revoke", "cert", "get_json_string_value", "newAccount", "local", "filter", "printf", "s", "NUMBER", "s", "NUMBER", "NUMBER", "p", "newAccount", "filter", "s", "NUMBER", "newAccount", "NUMBER", "NUMBER", "p", "sed", "n", "s", "NUMBER", "newAccount", "NUMBER", "NUMBER", "p", "CA_NEW_ACCOUNT", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "acct", "printf", "s", "CxMsOnJE", "NUMBER", "t", "NUMBER", "LINK", "random", "entries", "to", "the", "directory", "NUMBER", "keyChange", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "key", "change", "meta", "termsOfService", "LINK", "SA", "v", "NUMBER", "November", "NUMBER", "NUMBER", "pdf", "newAccount", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "acct", "newNonce", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "newOrder", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "revokeCert", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "revoke", "cert", "get_json_string_value", "termsOfService", "local", "filter", "printf", "s", "NUMBER", "s", "NUMBER", "NUMBER", "p", "termsOfService", "filter", "s", "NUMBER", "termsOfService", "NUMBER", "NUMBER", "p", "sed", "n", "s", "NUMBER", "termsOfService", "NUMBER", "NUMBER", "p", "CA_TERMS", "LINK", "SA", "v", "NUMBER", "November", "NUMBER", "NUMBER", "pdf", "printf", "s", "CxMsOnJE", "NUMBER", "t", "NUMBER", "LINK", "random", "entries", "to", "the", "directory", "NUMBER", "keyChange", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "key", "change", "meta", "termsOfService", "LINK", "SA", "v", "NUMBER", "November", "NUMBER", "NUMBER", "pdf", "newAccount", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "acct", "newNonce", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "newOrder", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "revokeCert", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "revoke", "cert", "get_json_string_value", "revokeCert", "local", "filter", "printf", "s", "NUMBER", "s", "NUMBER", "NUMBER", "p", "revokeCert", "filter", "s", "NUMBER", "revokeCert", "NUMBER", "NUMBER", "p", "sed", "n", "s", "NUMBER", "revokeCert", "NUMBER", "NUMBER", "p", "CA_REVOKE_CERT", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "revoke", "cert", "CA_ACCOUNT", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "acct", "export", "WELLKNOWN", "BASEDIR", "CERTDIR", "CONFIG", "COMMAND", "register_new_key", "no", "n", "e", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "account_key", "NUMBER", "pem", "openssl", "rsa", "in", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "account_key", "NUMBER", "pem", "check", "hex", "NUMBER", "bin", "urlbase", "NUMBER", "openssl", "rsa", "in", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "account_key", "NUMBER", "pem", "noout", "text", "openssl", "base", "NUMBER", "e", "cat", "_sed", "e", "s", "g", "e", "y", "_", "awk", "publicExponent", "print", "NUMBER", "_sed", "e", "s", "space", "g", "e", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "s", "NUMBER", "NUMBER", "x", "NUMBER", "g", "tr", "d", "n", "r", "Linux", "L", "i", "n", "u", "x", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "e", "y", "_", "sed", "r", "e", "s", "space", "g", "e", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "s", "NUMBER", "NUMBER", "x", "NUMBER", "g", "printf", "x", "NUMBER", "printf", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "pubExponent", "NUMBER", "AQAB", "openssl", "rsa", "in", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "account_key", "NUMBER", "pem", "noout", "modulus", "cut", "d", "f", "NUMBER", "urlbase", "NUMBER", "hex", "NUMBER", "bin", "openssl", "base", "NUMBER", "e", "tr", "d", "n", "r", "_sed", "e", "s", "g", "e", "y", "_", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "e", "y", "_", "cat", "_sed", "e", "s", "space", "g", "e", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "s", "NUMBER", "NUMBER", "x", "NUMBER", "g", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "space", "g", "e", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "s", "NUMBER", "NUMBER", "x", "NUMBER", "g", "printf", "xD", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xED", "xB", "NUMBER", "x", "NUMBER", "x", "NUMBER", "D", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xA", "NUMBER", "x", "NUMBER", "x", "NUMBER", "C", "xAC", "x", "NUMBER", "F", "x", "NUMBER", "E", "xC", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xFF", "x", "NUMBER", "F", "x", "NUMBER", "E", "xD", "NUMBER", "xB", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "F", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "xEA", "x", "NUMBER", "xC", "NUMBER", "xE", "NUMBER", "xFB", "xD", "NUMBER", "x", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "xAB", "xB", "NUMBER", "xAC", "x", "NUMBER", "F", "x", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "xCA", "xEC", "xA", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "B", "xC", "NUMBER", "xF", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "xCC", "x", "NUMBER", "xDC", "xF", "NUMBER", "x", "NUMBER", "E", "xC", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "E", "xFA", "xBE", "x", "NUMBER", "F", "xF", "NUMBER", "x", "NUMBER", "E", "x", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "xA", "NUMBER", "x", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "B", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "D", "xAC", "x", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "xCA", "x", "NUMBER", "A", "x", "NUMBER", "E", "x", "NUMBER", "xF", "NUMBER", "xFD", "x", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "C", "x", "NUMBER", "D", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "D", "xFF", "xE", "NUMBER", "x", "NUMBER", "F", "xB", "NUMBER", "xBB", "xEB", "xD", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "E", "xE", "NUMBER", "x", "NUMBER", "xFF", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "B", "xC", "NUMBER", "x", "NUMBER", "xD", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "E", "x", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "xAD", "x", "NUMBER", "x", "NUMBER", "xA", "NUMBER", "x", "NUMBER", "F", "x", "NUMBER", "D", "xD", "NUMBER", "xE", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "D", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xAF", "x", "NUMBER", "xDA", "x", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "E", "x", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "x", "NUMBER", "C", "xDF", "xE", "NUMBER", "x", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xB", "NUMBER", "x", "NUMBER", "x", "NUMBER", "D", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "A", "xB", "NUMBER", "x", "NUMBER", "E", "x", "NUMBER", "xDE", "x", "NUMBER", "x", "NUMBER", "F", "xDC", "x", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "xDB", "x", "NUMBER", "F", "x", "NUMBER", "D", "xDE", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "E", "xEC", "xBC", "xEA", "xF", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "A", "xF", "NUMBER", "x", "NUMBER", "D", "xE", "NUMBER", "x", "NUMBER", "A", "x", "NUMBER", "x", "NUMBER", "B", "xB", "NUMBER", "xEF", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "F", "xCC", "x", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "A", "xE", "NUMBER", "x", "NUMBER", "xAB", "xCF", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "A", "xAC", "xE", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "xB", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xEF", "x", "NUMBER", "x", "NUMBER", "A", "x", "NUMBER", "E", "x", "NUMBER", "B", "x", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "F", "x", "NUMBER", "x", "NUMBER", "xB", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "F", "xCD", "x", "NUMBER", "C", "x", "NUMBER", "xAD", "x", "NUMBER", "xE", "NUMBER", "xB", "NUMBER", "x", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "x", "NUMBER", "F", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "F", "xE", "NUMBER", "x", "NUMBER", "xBE", "xE", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "xCA", "x", "NUMBER", "F", "x", "NUMBER", "xC", "NUMBER", "xBF", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "xF", "NUMBER", "xED", "x", "NUMBER", "F", "x", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "xCE", "x", "NUMBER", "B", "x", "NUMBER", "C", "xED", "x", "NUMBER", "xE", "NUMBER", "xB", "NUMBER", "x", "NUMBER", "x", "NUMBER", "A", "x", "NUMBER", "x", "NUMBER", "F", "xD", "NUMBER", "x", "NUMBER", "xA", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xBC", "xA", "NUMBER", "x", "NUMBER", "E", "x", "NUMBER", "xED", "x", "NUMBER", "E", "xB", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xFC", "x", "NUMBER", "F", "x", "NUMBER", "xFF", "x", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xAD", "x", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "A", "x", "NUMBER", "x", "NUMBER", "F", "xDD", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "F", "x", "NUMBER", "C", "xAA", "x", "NUMBER", "xAC", "xAB", "xED", "x", "NUMBER", "A", "xF", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xEE", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xBD", "x", "NUMBER", "E", "x", "NUMBER", "F", "x", "NUMBER", "x", "NUMBER", "B", "xEC", "x", "NUMBER", "xC", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xAB", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "F", "xE", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "xFC", "xFB", "xE", "NUMBER", "x", "NUMBER", "x", "NUMBER", "F", "x", "NUMBER", "D", "x", "NUMBER", "x", "NUMBER", "D", "xA", "NUMBER", "xDF", "x", "NUMBER", "F", "x", "NUMBER", "D", "xD", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xE", "NUMBER", "xD", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "A", "xD", "NUMBER", "xAF", "x", "NUMBER", "x", "NUMBER", "xFF", "x", "NUMBER", "xA", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xBE", "xA", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "E", "xA", "NUMBER", "x", "NUMBER", "E", "xFC", "xF", "NUMBER", "x", "NUMBER", "x", "NUMBER", "D", "x", "NUMBER", "xA", "NUMBER", "xBF", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "E", "xE", "NUMBER", "xF", "NUMBER", "xFB", "xE", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "xB", "NUMBER", "x", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "E", "xB", "NUMBER", "xC", "NUMBER", "xB", "NUMBER", "xE", "NUMBER", "xC", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xA", "NUMBER", "x", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "B", "xE", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "D", "xAB", "x", "NUMBER", "A", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xB", "NUMBER", "x", "NUMBER", "A", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "F", "xC", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xCD", "x", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "C", "xC", "NUMBER", "x", "NUMBER", "B", "xA", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "E", "xC", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "A", "xC", "NUMBER", "pubMod", "NUMBER", "NUMBER", "luVIUjtsSJdQggopGB", "NUMBER", "rI", "NUMBER", "ewOVEl_", "NUMBER", "_XtO", "NUMBER", "DBERn", "NUMBER", "Fnlsfqg", "NUMBER", "jg", "NUMBER", "Vz", "NUMBER", "COruax_ARTCyuygA", "NUMBER", "AQksSbyPL", "NUMBER", "AcwA", "NUMBER", "PWOxtgO", "r", "NUMBER", "f", "NUMBER", "h", "NUMBER", "J", "NUMBER", "mmohXuXa", "NUMBER", "I", "NUMBER", "UPYFJgCNrFgYycqKPpj", "NUMBER", "_WVMjG", "NUMBER", "JAxY", "NUMBER", "_", "cvsbvr", "NUMBER", "vMO", "NUMBER", "BD_Vzk", "NUMBER", "xUfY", "NUMBER", "SWLkmI", "hof", "NUMBER", "rQYVqI", "NUMBER", "t", "NUMBER", "Ob", "NUMBER", "LVUmVxSvF", "NUMBER", "qGwZdlgWxx", "NUMBER", "WfHlM", "NUMBER", "Fl", "NUMBER", "IDoOQC", "NUMBER", "Yw", "NUMBER", "JhGEas", "NUMBER", "j", "NUMBER", "ikv", "NUMBER", "EfgFduPLd", "NUMBER", "bhXuVLuy", "NUMBER", "vXIKCr", "NUMBER", "feRaKZu", "NUMBER", "zZ", "NUMBER", "P", "NUMBER", "wQMsLCR", "NUMBER", "BBSuAhq", "NUMBER", "ERQSEFExqrOWW", "NUMBER", "bUYVfvdypum", "NUMBER", "PDLyRUsuIA", "NUMBER", "C_NLFitQ", "m", "NUMBER", "d", "NUMBER", "wxnyYpi", "NUMBER", "_hJr", "NUMBER", "nnAfKX", "NUMBER", "fFv", "NUMBER", "YHJPX", "NUMBER", "S", "NUMBER", "MvGVws", "NUMBER", "PO", "NUMBER", "LAYekR_", "NUMBER", "pij", "NUMBER", "GBzZLyjDgXtLrRWRvwvVf", "TU", "NUMBER", "YJWIethCt", "NUMBER", "O", "NUMBER", "OKYl_dgpgTWcHXW", "NUMBER", "qpesq", "NUMBER", "a", "NUMBER", "IkBobuZ", "NUMBER", "ETvV", "NUMBER", "vh", "NUMBER", "vsmcHIKVKrkhAf", "NUMBER", "Rxw_PvoBR", "NUMBER", "dlY", "NUMBER", "k", "NUMBER", "x", "N", "NUMBER", "AJX", "NUMBER", "tL", "NUMBER", "MPgcitevIFL_J", "NUMBER", "iCEGEHvqLGNy", "NUMBER", "kbvzzYI", "NUMBER", "UoL", "XQkdu", "NUMBER", "PL", "NUMBER", "kjxZbckjCeQfrfBsujD", "NUMBER", "UUXCaRhm", "NUMBER", "hxZvXxW", "Ig", "NUMBER", "H", "NUMBER", "rGjdHmLhKJQhvw", "NUMBER", "V", "NUMBER", "l", "NUMBER", "k", "NUMBER", "xWY", "NUMBER", "Ts", "NUMBER", "xEui", "NUMBER", "EjFdG", "NUMBER", "H", "NUMBER", "IhIKsM", "printf", "e", "s", "kty", "RSA", "n", "s", "AQAB", "NUMBER", "luVIUjtsSJdQggopGB", "NUMBER", "rI", "NUMBER", "ewOVEl_", "NUMBER", "_XtO", "NUMBER", "DBERn", "NUMBER", "Fnlsfqg", "NUMBER", "jg", "NUMBER", "Vz", "NUMBER", "COruax_ARTCyuygA", "NUMBER", "AQksSbyPL", "NUMBER", "AcwA", "NUMBER", "PWOxtgO", "r", "NUMBER", "f", "NUMBER", "h", "NUMBER", "J", "NUMBER", "mmohXuXa", "NUMBER", "I", "NUMBER", "UPYFJgCNrFgYycqKPpj", "NUMBER", "_WVMjG", "NUMBER", "JAxY", "NUMBER", "_", "cvsbvr", "NUMBER", "vMO", "NUMBER", "BD_Vzk", "NUMBER", "xUfY", "NUMBER", "SWLkmI", "hof", "NUMBER", "rQYVqI", "NUMBER", "t", "NUMBER", "Ob", "NUMBER", "LVUmVxSvF", "NUMBER", "qGwZdlgWxx", "NUMBER", "WfHlM", "NUMBER", "Fl", "NUMBER", "IDoOQC", "NUMBER", "Yw", "NUMBER", "JhGEas", "NUMBER", "j", "NUMBER", "ikv", "NUMBER", "EfgFduPLd", "NUMBER", "bhXuVLuy", "NUMBER", "vXIKCr", "NUMBER", "feRaKZu", "NUMBER", "zZ", "NUMBER", "P", "NUMBER", "wQMsLCR", "NUMBER", "BBSuAhq", "NUMBER", "ERQSEFExqrOWW", "NUMBER", "bUYVfvdypum", "NUMBER", "PDLyRUsuIA", "NUMBER", "C_NLFitQ", "m", "NUMBER", "d", "NUMBER", "wxnyYpi", "NUMBER", "_hJr", "NUMBER", "nnAfKX", "NUMBER", "fFv", "NUMBER", "YHJPX", "NUMBER", "S", "NUMBER", "MvGVws", "NUMBER", "PO", "NUMBER", "LAYekR_", "NUMBER", "pij", "NUMBER", "GBzZLyjDgXtLrRWRvwvVf", "TU", "NUMBER", "YJWIethCt", "NUMBER", "O", "NUMBER", "OKYl_dgpgTWcHXW", "NUMBER", "qpesq", "NUMBER", "a", "NUMBER", "IkBobuZ", "NUMBER", "ETvV", "NUMBER", "vh", "NUMBER", "vsmcHIKVKrkhAf", "NUMBER", "Rxw_PvoBR", "NUMBER", "dlY", "NUMBER", "k", "NUMBER", "x", "N", "NUMBER", "AJX", "NUMBER", "tL", "NUMBER", "MPgcitevIFL_J", "NUMBER", "iCEGEHvqLGNy", "NUMBER", "kbvzzYI", "NUMBER", "UoL", "XQkdu", "NUMBER", "PL", "NUMBER", "kjxZbckjCeQfrfBsujD", "NUMBER", "UUXCaRhm", "NUMBER", "hxZvXxW", "Ig", "NUMBER", "H", "NUMBER", "rGjdHmLhKJQhvw", "NUMBER", "V", "NUMBER", "l", "NUMBER", "k", "NUMBER", "xWY", "NUMBER", "Ts", "NUMBER", "xEui", "NUMBER", "EjFdG", "NUMBER", "H", "NUMBER", "IhIKsM", "urlbase", "NUMBER", "openssl", "dgst", "sha", "NUMBER", "binary", "openssl", "base", "NUMBER", "e", "_sed", "e", "s", "g", "e", "y", "_", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "e", "y", "_", "tr", "d", "n", "r", "thumbprint", "VXESrd", "NUMBER", "m", "NUMBER", "rm", "NUMBER", "wgbUmDI", "NUMBER", "cr", "NUMBER", "fyUE", "NUMBER", "DTX", "NUMBER", "gi", "NUMBER", "StpxhgI", "no", "y", "e", "s", "sign_domains", "r", "e", "g", "i", "s", "t", "e", "r", "e", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "registration_info", "NUMBER", "json", "cat", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "registration_info", "NUMBER", "json", "get_json_int_value", "id", "local", "filter", "printf", "s", "NUMBER", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "p", "id", "filter", "s", "NUMBER", "id", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "p", "sed", "n", "s", "NUMBER", "id", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "p", "ACCOUNT_ID", "NUMBER", "NUMBER", "eq", "NUMBER", "ACCOUNT_URL", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "acct", "NUMBER", "hookscript_bricker_hook", "n", "n", "d", "opt", "dehydrated", "chains", "n", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "DOMAINS_TXT", "tmp", "dehydrated", "NUMBER", "e", "NUMBER", "T", "n", "printf", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "ORIGIFS", "IFS", "tr", "d", "r", "_sed", "e", "s", "space", "g", "e", "s", "space", "g", "e", "s", "space", "g", "e", "s", "NUMBER", "g", "e", "s", "g", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "space", "g", "e", "s", "space", "g", "e", "s", "space", "g", "e", "s", "NUMBER", "g", "e", "s", "g", "grep", "vE", "awk", "print", "tolower", "NUMBER", "for", "line", "in", "TAG", "NUMBER", "g", "e", "s", "g", "grep", "vE", "true", "reset_configvars", "KEY_ALGO", "secp", "NUMBER", "r", "NUMBER", "OCSP_MUST_STAPLE", "no", "PRIVATE_KEY_RENEW", "yes", "KEYSIZE", "NUMBER", "CHALLENGETYPE", "http", "NUMBER", "HOOK", "WELLKNOWN", "srv", "http", "dehydrated", "HOOK_CHAIN", "no", "OPENSSL_CNF", "etc", "ssl", "openssl", "NUMBER", "cnf", "RENEW_DAYS", "NUMBER", "IP_VERSION", "IFS", "grep", "Eo", "true", "alias", "_sed", "e", "s", "g", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "line", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "grep", "Eo", "awk", "END", "print", "NR", "true", "aliascount", "NUMBER", "NUMBER", "gt", "NUMBER", "printf", "s", "n", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "cut", "d", "f", "NUMBER", "domain", "domain", "NUMBER", "de", "printf", "s", "n", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "cut", "s", "d", "f", "NUMBER", "morenames", "www", "NUMBER", "domain", "NUMBER", "de", "NUMBER", "lt", "NUMBER", "alias", "domain", "NUMBER", "de", "export", "alias", "z", "www", "NUMBER", "domain", "NUMBER", "de", "echo", "Processing", "domain", "NUMBER", "de", "with", "alternative", "names", "www", "NUMBER", "domain", "NUMBER", "de", "Processing", "domain", "NUMBER", "de", "with", "alternative", "names", "www", "NUMBER", "domain", "NUMBER", "de", "tb", "NUMBER", "local", "certdir", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "pem", "chain", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "chain", "NUMBER", "pem", "force_renew", "no", "date", "s", "timestamp", "NUMBER", "e", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "n", "certconfig", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "config", "f", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "config", "verify_config", "http", "NUMBER", "h", "t", "t", "p", "NUMBER", "NUMBER", "http", "NUMBER", "d", "n", "s", "NUMBER", "NUMBER", "http", "NUMBER", "h", "t", "t", "p", "NUMBER", "NUMBER", "d", "srv", "http", "dehydrated", "secp", "NUMBER", "r", "NUMBER", "r", "s", "a", "secp", "NUMBER", "r", "NUMBER", "p", "r", "i", "m", "e", "NUMBER", "NUMBER", "NUMBER", "v", "NUMBER", "secp", "NUMBER", "r", "NUMBER", "s", "e", "c", "p", "NUMBER", "NUMBER", "NUMBER", "r", "NUMBER", "n", "NUMBER", "a", "u", "t", "o", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "hookscript_bricker_hook", "n", "export", "WELLKNOWN", "CHALLENGETYPE", "KEY_ALGO", "PRIVATE_KEY_ROLLOVER", "skip", "no", "local", "csr", "n", "e", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "pem", "printf", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "openssl", "x", "NUMBER", "in", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "pem", "text", "noout", "grep", "DNS", "_sed", "s", "DNS", "g", "tr", "d", "Linux", "L", "i", "n", "u", "x", "sed", "r", "s", "DNS", "g", "tr", "n", "tr", "n", "sort", "u", "_sed", "s", "Linux", "L", "i", "n", "u", "x", "sed", "r", "s", "certnames", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "echo", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "tr", "n", "sort", "u", "tr", "n", "_sed", "s", "Linux", "L", "i", "n", "u", "x", "sed", "r", "s", "_sed", "s", "Linux", "L", "i", "n", "u", "x", "sed", "r", "s", "givennames", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "t", "b", "i", "t", "f", "NUMBER", "d", "e", "w", "w", "w", "NUMBER", "t", "b", "i", "t", "f", "NUMBER", "d", "e", "echo", "unchanged", "NUMBER", "unchanged", "NUMBER", "e", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "pem", "echo", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "openssl", "x", "NUMBER", "enddate", "noout", "in", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "pem", "cut", "d", "f", "NUMBER", "valid", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "printf", "Valid", "till", "s", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Valid", "till", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "openssl", "x", "NUMBER", "checkend", "NUMBER", "noout", "in", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "pem", "Certificate", "will", "expire", "echo", "Less", "than", "NUMBER", "days", "NUMBER", "Renewing", "Less", "than", "NUMBER", "days", "NUMBER", "Renewing", "local", "update_ocsp", "update_ocsp", "no", "no", "y", "e", "s", "update_ocsp", "yes", "z", "y", "e", "s", "sign_domain", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "NUMBER", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "local", "certdir", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "shift", "timestamp", "NUMBER", "shift", "domain", "domain", "NUMBER", "de", "altnames", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "export", "altnames", "echo", "Signing", "domains", "NUMBER", "Signing", "domains", "NUMBER", "NUMBER", "eq", "NUMBER", "NUMBER", "eq", "NUMBER", "z", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "local", "privkey", "privkey", "NUMBER", "pem", "e", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "csr", "r", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "pem", "yes", "y", "e", "s", "echo", "Generating", "private", "key", "NUMBER", "Generating", "private", "key", "NUMBER", "privkey", "privkey", "NUMBER", "pem", "case", "KEY_ALGO", "in", "_openssl", "ecparam", "genkey", "name", "secp", "NUMBER", "r", "NUMBER", "out", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "pem", "set", "e", "openssl", "ecparam", "genkey", "name", "secp", "NUMBER", "r", "NUMBER", "out", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "pem", "out", "res", "NUMBER", "set", "e", "NUMBER", "ne", "NUMBER", "r", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "pem", "r", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "roll", "NUMBER", "pem", "r", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "roll", "NUMBER", "pem", "no", "y", "e", "s", "r", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "roll", "NUMBER", "pem", "echo", "Generating", "signing", "request", "NUMBER", "Generating", "signing", "request", "NUMBER", "SAN", "for", "altname", "in", "altnames", "SAN", "DNS", "domain", "NUMBER", "de", "for", "altname", "in", "altnames", "SAN", "DNS", "domain", "NUMBER", "de", "DNS", "www", "NUMBER", "domain", "NUMBER", "de", "SAN", "DNS", "domain", "NUMBER", "de", "DNS", "www", "NUMBER", "domain", "NUMBER", "de", "local", "tmp_openssl_cnf", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "tmp_openssl_cnf", "tmp", "dehydrated", "cLPxsl", "cat", "etc", "ssl", "openssl", "NUMBER", "cnf", "printf", "SAN", "nsubjectAltName", "s", "DNS", "domain", "NUMBER", "de", "DNS", "www", "NUMBER", "domain", "NUMBER", "de", "no", "yes", "SUBJ", "CN", "domain", "NUMBER", "de", "Linux", "M", "I", "N", "G", "W", "openssl", "req", "new", "sha", "NUMBER", "key", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "pem", "out", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "csr", "subj", "CN", "domain", "NUMBER", "de", "reqexts", "SAN", "config", "tmp", "dehydrated", "cLPxsl", "rm", "f", "tmp", "dehydrated", "cLPxsl", "crt_path", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "pem", "sign_csr", "BEGIN", "CERTIFICATE", "REQUEST", "MIIBQjCByQIBADAUMRIwEAYDVQQDDAl", "NUMBER", "Yi", "NUMBER", "pdGYuZGUwdjAQBgcqhkjOPQIBBgUr", "gQQAIgNiAAQS", "NUMBER", "Nm", "NUMBER", "UE", "NUMBER", "byVuXzn", "NUMBER", "tec", "NUMBER", "aoarTyHe", "NUMBER", "lQmWH", "NUMBER", "A", "NUMBER", "uGW", "NUMBER", "z", "NUMBER", "oN", "NUMBER", "D", "NUMBER", "G", "NUMBER", "A", "NUMBER", "NUMBER", "NUMBER", "Lf", "NUMBER", "LaJc", "NUMBER", "FG", "NUMBER", "WcUEHhlhpOU", "NUMBER", "A", "F", "wzfiefkO", "NUMBER", "SLVvj", "NUMBER", "aEkeVAjBAdHpFotmL", "NUMBER", "u", "NUMBER", "Q", "QKyysfUpz", "NUMBER", "bxGgA", "NUMBER", "tY", "NUMBER", "GSrL", "NUMBER", "vSyrqX", "NUMBER", "pGKv", "NUMBER", "sdqNl", "RuyAIc", "M", "END", "CERTIFICATE", "REQUEST", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "csr", "BEGIN", "CERTIFICATE", "REQUEST", "MIIBQjCByQIBADAUMRIwEAYDVQQDDAl", "NUMBER", "Yi", "NUMBER", "pdGYuZGUwdjAQBgcqhkjOPQIBBgUr", "gQQAIgNiAAQS", "NUMBER", "Nm", "NUMBER", "UE", "NUMBER", "byVuXzn", "NUMBER", "tec", "NUMBER", "aoarTyHe", "NUMBER", "lQmWH", "NUMBER", "A", "NUMBER", "uGW", "NUMBER", "z", "NUMBER", "oN", "NUMBER", "D", "NUMBER", "G", "NUMBER", "A", "NUMBER", "NUMBER", "NUMBER", "Lf", "NUMBER", "LaJc", "NUMBER", "FG", "NUMBER", "WcUEHhlhpOU", "NUMBER", "A", "F", "wzfiefkO", "NUMBER", "SLVvj", "NUMBER", "aEkeVAjBAdHpFotmL", "NUMBER", "u", "NUMBER", "Q", "QKyysfUpz", "NUMBER", "bxGgA", "NUMBER", "tY", "NUMBER", "GSrL", "NUMBER", "vSyrqX", "NUMBER", "pGKv", "NUMBER", "sdqNl", "RuyAIc", "M", "END", "CERTIFICATE", "REQUEST", "shift", "NUMBER", "export", "altnames", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "altnames", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "NUMBER", "eq", "NUMBER", "NUMBER", "eq", "NUMBER", "z", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "n", "local", "a", "challenge_identifiers", "challenge_uris", "challenge_tokens", "authorizations", "keyauths", "deploy_args", "NUMBER", "eq", "NUMBER", "for", "altname", "in", "altnames", "printf", "type", "dns", "value", "s", "domain", "NUMBER", "de", "challenge_identifiers", "type", "dns", "value", "domain", "NUMBER", "de", "for", "altname", "in", "altnames", "printf", "type", "dns", "value", "s", "www", "NUMBER", "domain", "NUMBER", "de", "challenge_identifiers", "type", "dns", "value", "www", "NUMBER", "domain", "NUMBER", "de", "challenge_identifiers", "type", "dns", "value", "domain", "NUMBER", "de", "type", "dns", "value", "www", "NUMBER", "domain", "NUMBER", "de", "echo", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "signed_request", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "identifiers", "type", "dns", "value", "domain", "NUMBER", "de", "type", "dns", "value", "www", "NUMBER", "domain", "NUMBER", "de", "printf", "s", "identifiers", "type", "dns", "value", "domain", "NUMBER", "de", "type", "dns", "value", "www", "NUMBER", "domain", "NUMBER", "de", "urlbase", "NUMBER", "openssl", "base", "NUMBER", "e", "_sed", "e", "s", "g", "e", "y", "_", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "e", "y", "_", "tr", "d", "n", "r", "payload", "NUMBER", "eyJpZGVudGlmaWVycyI", "NUMBER", "IFt", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInRiLWl", "NUMBER", "Zi", "NUMBER", "kZSJ", "NUMBER", "LCB", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInd", "NUMBER", "dy", "NUMBER", "Yi", "NUMBER", "pdGYuZGUifV", "NUMBER", "NUMBER", "eq", "NUMBER", "http_request", "head", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "awk", "F", "print", "NUMBER", "tr", "d", "n", "r", "grep", "Replay", "Nonce", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "tempcont", "tmp", "dehydrated", "G", "NUMBER", "Ruem", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "tempheaders", "tmp", "dehydrated", "MG", "NUMBER", "i", "NUMBER", "n", "set", "e", "head", "h", "e", "a", "d", "curl", "A", "dehydr", "NUMBER", "ted", "git", "master", "after", "NUMBER", "curl", "NUMBER", "s", "w", "http_code", "o", "tmp", "dehydrated", "G", "NUMBER", "Ruem", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "I", "statuscode", "NUMBER", "touch", "tmp", "dehydrated", "MG", "NUMBER", "i", "NUMBER", "curlret", "NUMBER", "set", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "echo", "checking", "pipe", "NUMBER", "checking", "pipe", "NUMBER", "echo", "use", "pipe", "NUMBER", "use", "pipe", "NUMBER", "cat", "tmp", "dehydrated", "MG", "NUMBER", "i", "NUMBER", "echo", "get", "curl", "output", "get", "curl", "output", "cat", "tmp", "dehydrated", "G", "NUMBER", "Ruem", "echo", "deleting", "temp", "file", "deleting", "temp", "file", "rm", "f", "tmp", "dehydrated", "G", "NUMBER", "Ruem", "rm", "f", "tmp", "dehydrated", "MG", "NUMBER", "i", "NUMBER", "nonce", "NUMBER", "THrq", "NUMBER", "H", "NUMBER", "UPDCLVzRxJqfgMQ", "Nvb", "NUMBER", "mMSMj", "NUMBER", "ctDrSFl", "NUMBER", "header", "alg", "RS", "NUMBER", "jwk", "e", "AQAB", "kty", "RSA", "n", "NUMBER", "luVIUjtsSJdQggopGB", "NUMBER", "rI", "NUMBER", "ewOVEl_", "NUMBER", "_XtO", "NUMBER", "DBERn", "NUMBER", "Fnlsfqg", "NUMBER", "jg", "NUMBER", "Vz", "NUMBER", "COruax_ARTCyuygA", "NUMBER", "AQksSbyPL", "NUMBER", "AcwA", "NUMBER", "PWOxtgO", "r", "NUMBER", "f", "NUMBER", "h", "NUMBER", "J", "NUMBER", "mmohXuXa", "NUMBER", "I", "NUMBER", "UPYFJgCNrFgYycqKPpj", "NUMBER", "_WVMjG", "NUMBER", "JAxY", "NUMBER", "_", "cvsbvr", "NUMBER", "vMO", "NUMBER", "BD_Vzk", "NUMBER", "xUfY", "NUMBER", "SWLkmI", "hof", "NUMBER", "rQYVqI", "NUMBER", "t", "NUMBER", "Ob", "NUMBER", "LVUmVxSvF", "NUMBER", "qGwZdlgWxx", "NUMBER", "WfHlM", "NUMBER", "Fl", "NUMBER", "IDoOQC", "NUMBER", "Yw", "NUMBER", "JhGEas", "NUMBER", "j", "NUMBER", "ikv", "NUMBER", "EfgFduPLd", "NUMBER", "bhXuVLuy", "NUMBER", "vXIKCr", "NUMBER", "feRaKZu", "NUMBER", "zZ", "NUMBER", "P", "NUMBER", "wQMsLCR", "NUMBER", "BBSuAhq", "NUMBER", "ERQSEFExqrOWW", "NUMBER", "bUYVfvdypum", "NUMBER", "PDLyRUsuIA", "NUMBER", "C_NLFitQ", "m", "NUMBER", "d", "NUMBER", "wxnyYpi", "NUMBER", "_hJr", "NUMBER", "nnAfKX", "NUMBER", "fFv", "NUMBER", "YHJPX", "NUMBER", "S", "NUMBER", "MvGVws", "NUMBER", "PO", "NUMBER", "LAYekR_", "NUMBER", "pij", "NUMBER", "GBzZLyjDgXtLrRWRvwvVf", "TU", "NUMBER", "YJWIethCt", "NUMBER", "O", "NUMBER", "OKYl_dgpgTWcHXW", "NUMBER", "qpesq", "NUMBER", "a", "NUMBER", "IkBobuZ", "NUMBER", "ETvV", "NUMBER", "vh", "NUMBER", "vsmcHIKVKrkhAf", "NUMBER", "Rxw_PvoBR", "NUMBER", "dlY", "NUMBER", "k", "NUMBER", "x", "N", "NUMBER", "AJX", "NUMBER", "tL", "NUMBER", "MPgcitevIFL_J", "NUMBER", "iCEGEHvqLGNy", "NUMBER", "kbvzzYI", "NUMBER", "UoL", "XQkdu", "NUMBER", "PL", "NUMBER", "kjxZbckjCeQfrfBsujD", "NUMBER", "UUXCaRhm", "NUMBER", "hxZvXxW", "Ig", "NUMBER", "H", "NUMBER", "rGjdHmLhKJQhvw", "NUMBER", "V", "NUMBER", "l", "NUMBER", "k", "NUMBER", "xWY", "NUMBER", "Ts", "NUMBER", "xEui", "NUMBER", "EjFdG", "NUMBER", "H", "NUMBER", "IhIKsM", "NUMBER", "eq", "NUMBER", "n", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "acct", "NUMBER", "protected", "alg", "RS", "NUMBER", "kid", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "acct", "NUMBER", "url", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "nonce", "NUMBER", "THrq", "NUMBER", "H", "NUMBER", "UPDCLVzRxJqfgMQ", "Nvb", "NUMBER", "mMSMj", "NUMBER", "ctDrSFl", "NUMBER", "printf", "s", "alg", "RS", "NUMBER", "kid", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "acct", "NUMBER", "url", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "nonce", "NUMBER", "THrq", "NUMBER", "H", "NUMBER", "UPDCLVzRxJqfgMQ", "Nvb", "NUMBER", "mMSMj", "NUMBER", "ctDrSFl", "NUMBER", "urlbase", "NUMBER", "openssl", "base", "NUMBER", "e", "tr", "d", "n", "r", "_sed", "e", "s", "g", "e", "y", "_", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "e", "y", "_", "protected", "NUMBER", "eyJhbGciOiAiUlMyNTYiLCAia", "NUMBER", "lkIjogImh", "NUMBER", "dHBzOi", "NUMBER", "vYWNtZS", "NUMBER", "MDIuYXBpLmxldHNlbmNyeXB", "NUMBER", "Lm", "NUMBER", "yZy", "NUMBER", "hY", "NUMBER", "lL", "NUMBER", "FjY", "NUMBER", "QvNDkzNTU", "NUMBER", "NCIsICJ", "NUMBER", "cmwiOiAiaHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "FjbWUvbmV", "NUMBER", "LW", "NUMBER", "yZGVyIiwgIm", "NUMBER", "vbmNlIjogIjdUSHJxNUg", "NUMBER", "VVBEQ", "NUMBER", "xWelJ", "NUMBER", "SnFmZ", "NUMBER", "RLU", "NUMBER", "YjdtTVNNajZjdERyU", "NUMBER", "ZsMDgifQ", "printf", "s", "eyJhbGciOiAiUlMyNTYiLCAia", "NUMBER", "lkIjogImh", "NUMBER", "dHBzOi", "NUMBER", "vYWNtZS", "NUMBER", "MDIuYXBpLmxldHNlbmNyeXB", "NUMBER", "Lm", "NUMBER", "yZy", "NUMBER", "hY", "NUMBER", "lL", "NUMBER", "FjY", "NUMBER", "QvNDkzNTU", "NUMBER", "NCIsICJ", "NUMBER", "cmwiOiAiaHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "FjbWUvbmV", "NUMBER", "LW", "NUMBER", "yZGVyIiwgIm", "NUMBER", "vbmNlIjogIjdUSHJxNUg", "NUMBER", "VVBEQ", "NUMBER", "xWelJ", "NUMBER", "SnFmZ", "NUMBER", "RLU", "NUMBER", "YjdtTVNNajZjdERyU", "NUMBER", "ZsMDgifQ", "NUMBER", "eyJpZGVudGlmaWVycyI", "NUMBER", "IFt", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInRiLWl", "NUMBER", "Zi", "NUMBER", "kZSJ", "NUMBER", "LCB", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInd", "NUMBER", "dy", "NUMBER", "Yi", "NUMBER", "pdGYuZGUifV", "NUMBER", "openssl", "dgst", "sha", "NUMBER", "sign", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "account_key", "NUMBER", "pem", "urlbase", "NUMBER", "openssl", "base", "NUMBER", "e", "_sed", "e", "s", "g", "e", "y", "_", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "e", "y", "_", "tr", "d", "n", "r", "sign", "NUMBER", "aJWcBpn", "NUMBER", "kjTLpODS", "NUMBER", "vGr", "NUMBER", "MPCS", "NUMBER", "LTfydmWyzzeTLaj", "NUMBER", "WpQMk", "NUMBER", "DwYeTXSJ", "NUMBER", "XF", "HfvlO", "NUMBER", "MDVwih", "NUMBER", "e", "NUMBER", "bwXf", "NUMBER", "Czne", "NUMBER", "MkPH", "NUMBER", "eCAfHp", "NUMBER", "D", "DFdgaL", "NUMBER", "WxDJSs", "NUMBER", "EXP", "NUMBER", "Oix", "NUMBER", "Hsm", "NUMBER", "_fZEYlPEMciWh", "NUMBER", "s_RkmrXJX", "NUMBER", "ge_JX", "NUMBER", "HsrOCzEtYllK", "ZEtTlEr_jbcOp", "hd", "NUMBER", "dGOQw", "NUMBER", "lU", "NUMBER", "NLHIZ", "NUMBER", "lpNrXUlYCCSLSmMa", "NUMBER", "oJ", "NUMBER", "WHmJ", "NUMBER", "KjpwKbz", "NUMBER", "SycTU", "NUMBER", "PrbRmtXmaehYm", "NUMBER", "IU", "NUMBER", "X", "NUMBER", "ISM", "NUMBER", "tkz", "NUMBER", "_wVsA_LJSe", "NUMBER", "q", "NUMBER", "gR", "NUMBER", "cSUBOPNmcS", "NUMBER", "YC", "NUMBER", "JPzkuIgGZxRfwlZKG", "NUMBER", "GJGVXMlGZAKou", "NUMBER", "g", "HUM", "NUMBER", "DdbP", "NUMBER", "gS", "NUMBER", "MXvVcPUrQnT", "u", "NUMBER", "UyeBbbja", "NUMBER", "cXZ", "Qd", "NUMBER", "NUMBER", "Jvyq", "NUMBER", "vph", "NUMBER", "dUTqm", "NUMBER", "xlpSg", "NUMBER", "iDTaxjGch", "NUMBER", "puM", "NUMBER", "k", "NUMBER", "ek", "NUMBER", "xnu", "NUMBER", "A", "E_HJpNepzlvUWNry", "NUMBER", "YOBkXOi", "NUMBER", "Da_fTGToB", "NUMBER", "N", "NUMBER", "HVWErgmZUtRjT", "NUMBER", "J", "NUMBER", "UQkb", "NUMBER", "_fv", "NUMBER", "em", "NUMBER", "jsUQSbHgThcLfqm", "NUMBER", "v", "NUMBER", "NoiBaOMhxBkeSXB", "NUMBER", "Wa", "NUMBER", "wyVLX", "NUMBER", "Gh", "NUMBER", "sOniaJFAfdRblnLVyCDrKahJBI", "NUMBER", "AzOD", "NUMBER", "FCD", "NUMBER", "kh", "NUMBER", "hdnF", "NUMBER", "LWfWc", "NUMBER", "Vf", "NUMBER", "_", "NUMBER", "QqfT", "NUMBER", "YpBbQglEWo", "NUMBER", "KVOZa", "NUMBER", "p", "NUMBER", "C_ribSWAY", "NUMBER", "AkLOTWsaiE", "NUMBER", "M", "NUMBER", "PQTYLpxc", "axNtD", "NUMBER", "cRvYcpEK", "Hg", "NUMBER", "eq", "NUMBER", "data", "protected", "eyJhbGciOiAiUlMyNTYiLCAia", "NUMBER", "lkIjogImh", "NUMBER", "dHBzOi", "NUMBER", "vYWNtZS", "NUMBER", "MDIuYXBpLmxldHNlbmNyeXB", "NUMBER", "Lm", "NUMBER", "yZy", "NUMBER", "hY", "NUMBER", "lL", "NUMBER", "FjY", "NUMBER", "QvNDkzNTU", "NUMBER", "NCIsICJ", "NUMBER", "cmwiOiAiaHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "FjbWUvbmV", "NUMBER", "LW", "NUMBER", "yZGVyIiwgIm", "NUMBER", "vbmNlIjogIjdUSHJxNUg", "NUMBER", "VVBEQ", "NUMBER", "xWelJ", "NUMBER", "SnFmZ", "NUMBER", "RLU", "NUMBER", "YjdtTVNNajZjdERyU", "NUMBER", "ZsMDgifQ", "payload", "eyJpZGVudGlmaWVycyI", "NUMBER", "IFt", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInRiLWl", "NUMBER", "Zi", "NUMBER", "kZSJ", "NUMBER", "LCB", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInd", "NUMBER", "dy", "NUMBER", "Yi", "NUMBER", "pdGYuZGUifV", "NUMBER", "signature", "aJWcBpn", "NUMBER", "kjTLpODS", "NUMBER", "vGr", "NUMBER", "MPCS", "NUMBER", "LTfydmWyzzeTLaj", "NUMBER", "WpQMk", "NUMBER", "DwYeTXSJ", "NUMBER", "XF", "HfvlO", "NUMBER", "MDVwih", "NUMBER", "e", "NUMBER", "bwXf", "NUMBER", "Czne", "NUMBER", "MkPH", "NUMBER", "eCAfHp", "NUMBER", "D", "DFdgaL", "NUMBER", "WxDJSs", "NUMBER", "EXP", "NUMBER", "Oix", "NUMBER", "Hsm", "NUMBER", "_fZEYlPEMciWh", "NUMBER", "s_RkmrXJX", "NUMBER", "ge_JX", "NUMBER", "HsrOCzEtYllK", "ZEtTlEr_jbcOp", "hd", "NUMBER", "dGOQw", "NUMBER", "lU", "NUMBER", "NLHIZ", "NUMBER", "lpNrXUlYCCSLSmMa", "NUMBER", "oJ", "NUMBER", "WHmJ", "NUMBER", "KjpwKbz", "NUMBER", "SycTU", "NUMBER", "PrbRmtXmaehYm", "NUMBER", "IU", "NUMBER", "X", "NUMBER", "ISM", "NUMBER", "tkz", "NUMBER", "_wVsA_LJSe", "NUMBER", "q", "NUMBER", "gR", "NUMBER", "cSUBOPNmcS", "NUMBER", "YC", "NUMBER", "JPzkuIgGZxRfwlZKG", "NUMBER", "GJGVXMlGZAKou", "NUMBER", "g", "HUM", "NUMBER", "DdbP", "NUMBER", "gS", "NUMBER", "MXvVcPUrQnT", "u", "NUMBER", "UyeBbbja", "NUMBER", "cXZ", "Qd", "NUMBER", "NUMBER", "Jvyq", "NUMBER", "vph", "NUMBER", "dUTqm", "NUMBER", "xlpSg", "NUMBER", "iDTaxjGch", "NUMBER", "puM", "NUMBER", "k", "NUMBER", "ek", "NUMBER", "xnu", "NUMBER", "A", "E_HJpNepzlvUWNry", "NUMBER", "YOBkXOi", "NUMBER", "Da_fTGToB", "NUMBER", "N", "NUMBER", "HVWErgmZUtRjT", "NUMBER", "J", "NUMBER", "UQkb", "NUMBER", "_fv", "NUMBER", "em", "NUMBER", "jsUQSbHgThcLfqm", "NUMBER", "v", "NUMBER", "NoiBaOMhxBkeSXB", "NUMBER", "Wa", "NUMBER", "wyVLX", "NUMBER", "Gh", "NUMBER", "sOniaJFAfdRblnLVyCDrKahJBI", "NUMBER", "AzOD", "NUMBER", "FCD", "NUMBER", "kh", "NUMBER", "hdnF", "NUMBER", "LWfWc", "NUMBER", "Vf", "NUMBER", "_", "NUMBER", "QqfT", "NUMBER", "YpBbQglEWo", "NUMBER", "KVOZa", "NUMBER", "p", "NUMBER", "C_ribSWAY", "NUMBER", "AkLOTWsaiE", "NUMBER", "M", "NUMBER", "PQTYLpxc", "axNtD", "NUMBER", "cRvYcpEK", "Hg", "http_request", "post", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "protected", "eyJhbGciOiAiUlMyNTYiLCAia", "NUMBER", "lkIjogImh", "NUMBER", "dHBzOi", "NUMBER", "vYWNtZS", "NUMBER", "MDIuYXBpLmxldHNlbmNyeXB", "NUMBER", "Lm", "NUMBER", "yZy", "NUMBER", "hY", "NUMBER", "lL", "NUMBER", "FjY", "NUMBER", "QvNDkzNTU", "NUMBER", "NCIsICJ", "NUMBER", "cmwiOiAiaHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "FjbWUvbmV", "NUMBER", "LW", "NUMBER", "yZGVyIiwgIm", "NUMBER", "vbmNlIjogIjdUSHJxNUg", "NUMBER", "VVBEQ", "NUMBER", "xWelJ", "NUMBER", "SnFmZ", "NUMBER", "RLU", "NUMBER", "YjdtTVNNajZjdERyU", "NUMBER", "ZsMDgifQ", "payload", "eyJpZGVudGlmaWVycyI", "NUMBER", "IFt", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInRiLWl", "NUMBER", "Zi", "NUMBER", "kZSJ", "NUMBER", "LCB", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInd", "NUMBER", "dy", "NUMBER", "Yi", "NUMBER", "pdGYuZGUifV", "NUMBER", "signature", "aJWcBpn", "NUMBER", "kjTLpODS", "NUMBER", "vGr", "NUMBER", "MPCS", "NUMBER", "LTfydmWyzzeTLaj", "NUMBER", "WpQMk", "NUMBER", "DwYeTXSJ", "NUMBER", "XF", "HfvlO", "NUMBER", "MDVwih", "NUMBER", "e", "NUMBER", "bwXf", "NUMBER", "Czne", "NUMBER", "MkPH", "NUMBER", "eCAfHp", "NUMBER", "D", "DFdgaL", "NUMBER", "WxDJSs", "NUMBER", "EXP", "NUMBER", "Oix", "NUMBER", "Hsm", "NUMBER", "_fZEYlPEMciWh", "NUMBER", "s_RkmrXJX", "NUMBER", "ge_JX", "NUMBER", "HsrOCzEtYllK", "ZEtTlEr_jbcOp", "hd", "NUMBER", "dGOQw", "NUMBER", "lU", "NUMBER", "NLHIZ", "NUMBER", "lpNrXUlYCCSLSmMa", "NUMBER", "oJ", "NUMBER", "WHmJ", "NUMBER", "KjpwKbz", "NUMBER", "SycTU", "NUMBER", "PrbRmtXmaehYm", "NUMBER", "IU", "NUMBER", "X", "NUMBER", "ISM", "NUMBER", "tkz", "NUMBER", "_wVsA_LJSe", "NUMBER", "q", "NUMBER", "gR", "NUMBER", "cSUBOPNmcS", "NUMBER", "YC", "NUMBER", "JPzkuIgGZxRfwlZKG", "NUMBER", "GJGVXMlGZAKou", "NUMBER", "g", "HUM", "NUMBER", "DdbP", "NUMBER", "gS", "NUMBER", "MXvVcPUrQnT", "u", "NUMBER", "UyeBbbja", "NUMBER", "cXZ", "Qd", "NUMBER", "NUMBER", "Jvyq", "NUMBER", "vph", "NUMBER", "dUTqm", "NUMBER", "xlpSg", "NUMBER", "iDTaxjGch", "NUMBER", "puM", "NUMBER", "k", "NUMBER", "ek", "NUMBER", "xnu", "NUMBER", "A", "E_HJpNepzlvUWNry", "NUMBER", "YOBkXOi", "NUMBER", "Da_fTGToB", "NUMBER", "N", "NUMBER", "HVWErgmZUtRjT", "NUMBER", "J", "NUMBER", "UQkb", "NUMBER", "_fv", "NUMBER", "em", "NUMBER", "jsUQSbHgThcLfqm", "NUMBER", "v", "NUMBER", "NoiBaOMhxBkeSXB", "NUMBER", "Wa", "NUMBER", "wyVLX", "NUMBER", "Gh", "NUMBER", "sOniaJFAfdRblnLVyCDrKahJBI", "NUMBER", "AzOD", "NUMBER", "FCD", "NUMBER", "kh", "NUMBER", "hdnF", "NUMBER", "LWfWc", "NUMBER", "Vf", "NUMBER", "_", "NUMBER", "QqfT", "NUMBER", "YpBbQglEWo", "NUMBER", "KVOZa", "NUMBER", "p", "NUMBER", "C_ribSWAY", "NUMBER", "AkLOTWsaiE", "NUMBER", "M", "NUMBER", "PQTYLpxc", "axNtD", "NUMBER", "cRvYcpEK", "Hg", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "tempcont", "tmp", "dehydrated", "enUC", "NUMBER", "f", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "tempheaders", "tmp", "dehydrated", "cD", "NUMBER", "Yk", "NUMBER", "n", "set", "e", "post", "h", "e", "a", "d", "post", "g", "e", "t", "post", "p", "o", "s", "t", "curl", "A", "dehydr", "NUMBER", "ted", "git", "master", "after", "NUMBER", "curl", "NUMBER", "s", "w", "http_code", "o", "tmp", "dehydrated", "enUC", "NUMBER", "f", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "D", "tmp", "dehydrated", "cD", "NUMBER", "Yk", "NUMBER", "H", "Content", "Type", "application", "jose", "json", "d", "protected", "eyJhbGciOiAiUlMyNTYiLCAia", "NUMBER", "lkIjogImh", "NUMBER", "dHBzOi", "NUMBER", "vYWNtZS", "NUMBER", "MDIuYXBpLmxldHNlbmNyeXB", "NUMBER", "Lm", "NUMBER", "yZy", "NUMBER", "hY", "NUMBER", "lL", "NUMBER", "FjY", "NUMBER", "QvNDkzNTU", "NUMBER", "NCIsICJ", "NUMBER", "cmwiOiAiaHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "FjbWUvbmV", "NUMBER", "LW", "NUMBER", "yZGVyIiwgIm", "NUMBER", "vbmNlIjogIjdUSHJxNUg", "NUMBER", "VVBEQ", "NUMBER", "xWelJ", "NUMBER", "SnFmZ", "NUMBER", "RLU", "NUMBER", "YjdtTVNNajZjdERyU", "NUMBER", "ZsMDgifQ", "payload", "eyJpZGVudGlmaWVycyI", "NUMBER", "IFt", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInRiLWl", "NUMBER", "Zi", "NUMBER", "kZSJ", "NUMBER", "LCB", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInd", "NUMBER", "dy", "NUMBER", "Yi", "NUMBER", "pdGYuZGUifV", "NUMBER", "signature", "aJWcBpn", "NUMBER", "kjTLpODS", "NUMBER", "vGr", "NUMBER", "MPCS", "NUMBER", "LTfydmWyzzeTLaj", "NUMBER", "WpQMk", "NUMBER", "DwYeTXSJ", "NUMBER", "XF", "HfvlO", "NUMBER", "MDVwih", "NUMBER", "e", "NUMBER", "bwXf", "NUMBER", "Czne", "NUMBER", "MkPH", "NUMBER", "eCAfHp", "NUMBER", "D", "DFdgaL", "NUMBER", "WxDJSs", "NUMBER", "EXP", "NUMBER", "Oix", "NUMBER", "Hsm", "NUMBER", "_fZEYlPEMciWh", "NUMBER", "s_RkmrXJX", "NUMBER", "ge_JX", "NUMBER", "HsrOCzEtYllK", "ZEtTlEr_jbcOp", "hd", "NUMBER", "dGOQw", "NUMBER", "lU", "NUMBER", "NLHIZ", "NUMBER", "lpNrXUlYCCSLSmMa", "NUMBER", "oJ", "NUMBER", "WHmJ", "NUMBER", "KjpwKbz", "NUMBER", "SycTU", "NUMBER", "PrbRmtXmaehYm", "NUMBER", "IU", "NUMBER", "X", "NUMBER", "ISM", "NUMBER", "tkz", "NUMBER", "_wVsA_LJSe", "NUMBER", "q", "NUMBER", "gR", "NUMBER", "cSUBOPNmcS", "NUMBER", "YC", "NUMBER", "JPzkuIgGZxRfwlZKG", "NUMBER", "GJGVXMlGZAKou", "NUMBER", "g", "HUM", "NUMBER", "DdbP", "NUMBER", "gS", "NUMBER", "MXvVcPUrQnT", "u", "NUMBER", "UyeBbbja", "NUMBER", "cXZ", "Qd", "NUMBER", "NUMBER", "Jvyq", "NUMBER", "vph", "NUMBER", "dUTqm", "NUMBER", "xlpSg", "NUMBER", "iDTaxjGch", "NUMBER", "puM", "NUMBER", "k", "NUMBER", "ek", "NUMBER", "xnu", "NUMBER", "A", "E_HJpNepzlvUWNry", "NUMBER", "YOBkXOi", "NUMBER", "Da_fTGToB", "NUMBER", "N", "NUMBER", "HVWErgmZUtRjT", "NUMBER", "J", "NUMBER", "UQkb", "NUMBER", "_fv", "NUMBER", "em", "NUMBER", "jsUQSbHgThcLfqm", "NUMBER", "v", "NUMBER", "NoiBaOMhxBkeSXB", "NUMBER", "Wa", "NUMBER", "wyVLX", "NUMBER", "Gh", "NUMBER", "sOniaJFAfdRblnLVyCDrKahJBI", "NUMBER", "AzOD", "NUMBER", "FCD", "NUMBER", "kh", "NUMBER", "hdnF", "NUMBER", "LWfWc", "NUMBER", "Vf", "NUMBER", "_", "NUMBER", "QqfT", "NUMBER", "YpBbQglEWo", "NUMBER", "KVOZa", "NUMBER", "p", "NUMBER", "C_ribSWAY", "NUMBER", "AkLOTWsaiE", "NUMBER", "M", "NUMBER", "PQTYLpxc", "axNtD", "NUMBER", "cRvYcpEK", "Hg", "statuscode", "NUMBER", "curlret", "NUMBER", "set", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "echo", "checking", "pipe", "NUMBER", "checking", "pipe", "NUMBER", "echo", "use", "pipe", "NUMBER", "use", "pipe", "NUMBER", "cat", "tmp", "dehydrated", "cD", "NUMBER", "Yk", "NUMBER", "cat", "Schreibfehler", "Daten\u00fcbergabe", "unterbrochen", "broken", "pipe", "result", "remove_lock", "rm", "f", "opt", "dehydrated", "lock", "I", "change", "the", "script", "to", "this", "usr", "bin", "env", "bash", "dehydrated", "by", "lukas", "NUMBER", "Source", "LINK", "This", "script", "be", "licensed", "under", "The", "MIT", "License", "see", "LICENSE", "for", "more", "information", "NUMBER", "true", "NUMBER", "NUMBER", "dev", "null", "true", "set", "e", "set", "u", "set", "o", "pipefail", "n", "ZSH_VERSION", "set", "o", "SH_WORD_SPLIT", "set", "o", "FUNCTION_ARGZERO", "set", "o", "NULL_GLOB", "set", "o", "noglob", "z", "ZSH_VERSION", "shopt", "s", "nullglob", "set", "f", "But", "there", "be", "noch", "change", "if", "I", "see", "that", "right", "set", "e", "set", "u", "set", "o", "pipefail", "n", "z", "shopt", "s", "nullglob", "set", "f", "umask", "NUMBER", "VERSION", "git", "master", "after", "NUMBER", "SOURCE", "opt", "dehydrated", "dehydrated", "h", "opt", "dehydrated", "dehydrated", "dirname", "opt", "dehydrated", "dehydrated", "cd", "P", "opt", "dehydrated", "pwd", "SCRIPTDIR", "opt", "dehydrated", "BASEDIR", "opt", "dehydrated", "ORIGARGS", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "d", "www", "NUMBER", "domain", "NUMBER", "de", "uname", "OSTYPE", "Linux", "N", "O", "O", "P", "main", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "d", "www", "NUMBER", "domain", "NUMBER", "de", "COMMAND", "z", "c", "o", "etc", "ssl", "reksys", "a", "secp", "NUMBER", "r", "NUMBER", "d", "domain", "NUMBER", "de", "d", "www", "NUMBER", "domain", "NUMBER", "de", "NUMBER", "case", "NUMBER", "in", "set_command", "sign_domains", "z", "COMMAND", "sign_domains", "shift", "NUMBER", "NUMBER", "case", "NUMBER", "in", "shift", "NUMBER", "check_parameters", "etc", "ssl", "reksys", "z", "etc", "ssl", "reksys", "PARAM_CERTDIR", "etc", "ssl", "reksys", "shift", "NUMBER", "NUMBER", "case", "NUMBER", "in", "shift", "NUMBER", "check_parameters", "secp", "NUMBER", "r", "NUMBER", "z", "secp", "NUMBER", "r", "NUMBER", "s", "PARAM_KEY_ALGO", "secp", "NUMBER", "r", "NUMBER", "shift", "NUMBER", "NUMBER", "case", "NUMBER", "in", "shift", "NUMBER", "check_parameters", "domain", "NUMBER", "de", "z", "domain", "NUMBER", "de", "t", "z", "PARAM_DOMAIN", "domain", "NUMBER", "de", "shift", "NUMBER", "NUMBER", "case", "NUMBER", "in", "shift", "NUMBER", "check_parameters", "www", "NUMBER", "domain", "NUMBER", "de", "z", "www", "NUMBER", "domain", "NUMBER", "de", "w", "z", "domain", "NUMBER", "de", "PARAM_DOMAIN", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "shift", "NUMBER", "NUMBER", "case", "COMMAND", "in", "command_sign_domains", "init_system", "load_config", "z", "for", "check_config", "in", "etc", "dehydrated", "usr", "local", "etc", "dehydrated", "PWD", "SCRIPTDIR", "f", "etc", "dehydrated", "config", "for", "check_config", "in", "etc", "dehydrated", "usr", "local", "etc", "dehydrated", "PWD", "SCRIPTDIR", "f", "usr", "local", "etc", "dehydrated", "config", "for", "check_config", "in", "etc", "dehydrated", "usr", "local", "etc", "dehydrated", "PWD", "SCRIPTDIR", "f", "opt", "reksys", "config", "for", "check_config", "in", "etc", "dehydrated", "usr", "local", "etc", "dehydrated", "PWD", "SCRIPTDIR", "f", "opt", "dehydrated", "config", "BASEDIR", "opt", "dehydrated", "CONFIG", "opt", "dehydrated", "config", "break", "CA", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "OLDCA", "CERTDIR", "ACCOUNTDIR", "CHALLENGETYPE", "http", "NUMBER", "CONFIG_D", "CURL_OPTS", "DOMAINS_D", "DOMAINS_TXT", "HOOK", "HOOK_CHAIN", "no", "RENEW_DAYS", "NUMBER", "KEYSIZE", "NUMBER", "WELLKNOWN", "PRIVATE_KEY_RENEW", "yes", "PRIVATE_KEY_ROLLOVER", "no", "KEY_ALGO", "rsa", "OPENSSL", "openssl", "OPENSSL_CNF", "CONTACT_EMAIL", "LOCKFILE", "OCSP_MUST_STAPLE", "no", "OCSP_FETCH", "no", "IP_VERSION", "CHAINCACHE", "AUTO_CLEANUP", "no", "DEHYDRATED_USER", "DEHYDRATED_GROUP", "API", "auto", "z", "opt", "dehydrated", "config", "f", "opt", "dehydrated", "config", "echo", "INFO", "Using", "main", "config", "file", "opt", "dehydrated", "config", "INFO", "Using", "main", "config", "file", "opt", "dehydrated", "config", "dirname", "opt", "dehydrated", "config", "BASEDIR", "opt", "dehydrated", "NUMBER", "opt", "dehydrated", "config", "CHALLENGETYPE", "http", "NUMBER", "WELLKNOWN", "srv", "http", "dehydrated", "KEYSIZE", "NUMBER", "PRIVATE_KEY_RENEW", "yes", "KEY_ALGO", "rsa", "n", "n", "n", "check_dependencies", "openssl", "version", "_sed", "command", "v", "grep", "command", "v", "mktemp", "command", "v", "diff", "set", "e", "curl", "V", "head", "n", "NUMBER", "awk", "print", "NUMBER", "CURL_VERSION", "NUMBER", "retcode", "NUMBER", "set", "e", "NUMBER", "NUMBER", "opt", "dehydrated", "BASEDIR", "opt", "dehydrated", "d", "opt", "dehydrated", "z", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "h", "t", "t", "p", "s", "a", "c", "m", "e", "v", "NUMBER", "NUMBER", "NUMBER", "a", "p", "i", "NUMBER", "l", "e", "t", "s", "e", "n", "c", "r", "y", "p", "t", "NUMBER", "o", "r", "g", "d", "i", "r", "e", "c", "t", "o", "r", "y", "OLDCA", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "echo", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "urlbase", "NUMBER", "openssl", "base", "NUMBER", "e", "tr", "d", "n", "r", "_sed", "e", "s", "g", "e", "y", "_", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "e", "y", "_", "CAHASH", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "z", "ACCOUNTDIR", "opt", "dehydrated", "accounts", "e", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "f", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "config", "ACCOUNT_KEY", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "account_key", "NUMBER", "pem", "ACCOUNT_KEY_JSON", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "registration_info", "NUMBER", "json", "f", "opt", "dehydrated", "private_key", "NUMBER", "pem", "f", "opt", "dehydrated", "private_key", "NUMBER", "json", "z", "CERTDIR", "opt", "dehydrated", "certs", "z", "CHAINCACHE", "opt", "dehydrated", "chains", "z", "DOMAINS_TXT", "opt", "dehydrated", "domains", "NUMBER", "txt", "z", "srv", "http", "dehydrated", "z", "LOCKFILE", "opt", "dehydrated", "lock", "z", "openssl", "version", "d", "cut", "d", "f", "NUMBER", "OPENSSL_CNF", "etc", "ssl", "openssl", "NUMBER", "cnf", "n", "n", "n", "n", "etc", "ssl", "reksys", "CERTDIR", "etc", "ssl", "reksys", "n", "n", "secp", "NUMBER", "r", "NUMBER", "KEY_ALGO", "secp", "NUMBER", "r", "NUMBER", "n", "n", "noverify", "verify_config", "http", "NUMBER", "h", "t", "t", "p", "NUMBER", "NUMBER", "http", "NUMBER", "d", "n", "s", "NUMBER", "NUMBER", "http", "NUMBER", "h", "t", "t", "p", "NUMBER", "NUMBER", "d", "srv", "http", "dehydrated", "secp", "NUMBER", "r", "NUMBER", "r", "s", "a", "secp", "NUMBER", "r", "NUMBER", "p", "r", "i", "m", "e", "NUMBER", "NUMBER", "NUMBER", "v", "NUMBER", "secp", "NUMBER", "r", "NUMBER", "s", "e", "c", "p", "NUMBER", "NUMBER", "NUMBER", "r", "NUMBER", "n", "auto", "a", "u", "t", "o", "store_configvars", "__KEY_ALGO", "secp", "NUMBER", "r", "NUMBER", "__OCSP_MUST_STAPLE", "no", "__PRIVATE_KEY_RENEW", "yes", "__KEYSIZE", "NUMBER", "__CHALLENGETYPE", "http", "NUMBER", "__HOOK", "__WELLKNOWN", "srv", "http", "dehydrated", "__HOOK_CHAIN", "no", "__OPENSSL_CNF", "etc", "ssl", "openssl", "NUMBER", "cnf", "__RENEW_DAYS", "NUMBER", "__IP_VERSION", "n", "opt", "dehydrated", "lock", "dirname", "opt", "dehydrated", "lock", "LOCKDIR", "opt", "dehydrated", "w", "opt", "dehydrated", "trap", "remove_lock", "EXIT", "http_request", "get", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "tempcont", "tmp", "dehydrated", "I", "NUMBER", "qVXc", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "tempheaders", "tmp", "dehydrated", "mryB", "NUMBER", "k", "n", "set", "e", "get", "h", "e", "a", "d", "get", "g", "e", "t", "curl", "A", "dehydr", "NUMBER", "ted", "git", "master", "after", "NUMBER", "curl", "NUMBER", "L", "s", "w", "http_code", "o", "tmp", "dehydrated", "I", "NUMBER", "qVXc", "D", "tmp", "dehydrated", "mryB", "NUMBER", "k", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "statuscode", "NUMBER", "curlret", "NUMBER", "set", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "echo", "checking", "pipe", "NUMBER", "checking", "pipe", "NUMBER", "echo", "use", "pipe", "NUMBER", "use", "pipe", "NUMBER", "cat", "tmp", "dehydrated", "mryB", "NUMBER", "k", "echo", "get", "curl", "output", "get", "curl", "output", "cat", "tmp", "dehydrated", "I", "NUMBER", "qVXc", "echo", "deleting", "temp", "file", "deleting", "temp", "file", "rm", "f", "tmp", "dehydrated", "I", "NUMBER", "qVXc", "rm", "f", "tmp", "dehydrated", "mryB", "NUMBER", "k", "CA_DIRECTORY", "Bo", "NUMBER", "r", "NUMBER", "Vx", "NUMBER", "GGk", "LINK", "random", "entries", "to", "the", "directory", "NUMBER", "keyChange", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "key", "change", "meta", "termsOfService", "LINK", "SA", "v", "NUMBER", "November", "NUMBER", "NUMBER", "pdf", "newAccount", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "acct", "newNonce", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "newOrder", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "revokeCert", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "revoke", "cert", "auto", "a", "u", "t", "o", "grep", "q", "newOrder", "API", "NUMBER", "NUMBER", "eq", "NUMBER", "printf", "s", "Bo", "NUMBER", "r", "NUMBER", "Vx", "NUMBER", "GGk", "LINK", "random", "entries", "to", "the", "directory", "NUMBER", "keyChange", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "key", "change", "meta", "termsOfService", "LINK", "SA", "v", "NUMBER", "November", "NUMBER", "NUMBER", "pdf", "newAccount", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "acct", "newNonce", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "newOrder", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "revokeCert", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "revoke", "cert", "get_json_string_value", "newOrder", "local", "filter", "printf", "s", "NUMBER", "s", "NUMBER", "NUMBER", "p", "newOrder", "filter", "s", "NUMBER", "newOrder", "NUMBER", "NUMBER", "p", "sed", "n", "s", "NUMBER", "newOrder", "NUMBER", "NUMBER", "p", "CA_NEW_ORDER", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "printf", "s", "Bo", "NUMBER", "r", "NUMBER", "Vx", "NUMBER", "GGk", "LINK", "random", "entries", "to", "the", "directory", "NUMBER", "keyChange", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "key", "change", "meta", "termsOfService", "LINK", "SA", "v", "NUMBER", "November", "NUMBER", "NUMBER", "pdf", "newAccount", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "acct", "newNonce", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "newOrder", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "revokeCert", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "revoke", "cert", "get_json_string_value", "newNonce", "local", "filter", "printf", "s", "NUMBER", "s", "NUMBER", "NUMBER", "p", "newNonce", "filter", "s", "NUMBER", "newNonce", "NUMBER", "NUMBER", "p", "sed", "n", "s", "NUMBER", "newNonce", "NUMBER", "NUMBER", "p", "CA_NEW_NONCE", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "printf", "s", "Bo", "NUMBER", "r", "NUMBER", "Vx", "NUMBER", "GGk", "LINK", "random", "entries", "to", "the", "directory", "NUMBER", "keyChange", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "key", "change", "meta", "termsOfService", "LINK", "SA", "v", "NUMBER", "November", "NUMBER", "NUMBER", "pdf", "newAccount", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "acct", "newNonce", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "newOrder", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "revokeCert", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "revoke", "cert", "get_json_string_value", "newAccount", "local", "filter", "printf", "s", "NUMBER", "s", "NUMBER", "NUMBER", "p", "newAccount", "filter", "s", "NUMBER", "newAccount", "NUMBER", "NUMBER", "p", "sed", "n", "s", "NUMBER", "newAccount", "NUMBER", "NUMBER", "p", "CA_NEW_ACCOUNT", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "acct", "printf", "s", "Bo", "NUMBER", "r", "NUMBER", "Vx", "NUMBER", "GGk", "LINK", "random", "entries", "to", "the", "directory", "NUMBER", "keyChange", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "key", "change", "meta", "termsOfService", "LINK", "SA", "v", "NUMBER", "November", "NUMBER", "NUMBER", "pdf", "newAccount", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "acct", "newNonce", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "newOrder", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "revokeCert", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "revoke", "cert", "get_json_string_value", "termsOfService", "local", "filter", "printf", "s", "NUMBER", "s", "NUMBER", "NUMBER", "p", "termsOfService", "filter", "s", "NUMBER", "termsOfService", "NUMBER", "NUMBER", "p", "sed", "n", "s", "NUMBER", "termsOfService", "NUMBER", "NUMBER", "p", "CA_TERMS", "LINK", "SA", "v", "NUMBER", "November", "NUMBER", "NUMBER", "pdf", "printf", "s", "Bo", "NUMBER", "r", "NUMBER", "Vx", "NUMBER", "GGk", "LINK", "random", "entries", "to", "the", "directory", "NUMBER", "keyChange", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "key", "change", "meta", "termsOfService", "LINK", "SA", "v", "NUMBER", "November", "NUMBER", "NUMBER", "pdf", "newAccount", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "acct", "newNonce", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "newOrder", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "revokeCert", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "revoke", "cert", "get_json_string_value", "revokeCert", "local", "filter", "printf", "s", "NUMBER", "s", "NUMBER", "NUMBER", "p", "revokeCert", "filter", "s", "NUMBER", "revokeCert", "NUMBER", "NUMBER", "p", "sed", "n", "s", "NUMBER", "revokeCert", "NUMBER", "NUMBER", "p", "CA_REVOKE_CERT", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "revoke", "cert", "CA_ACCOUNT", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "acct", "export", "WELLKNOWN", "BASEDIR", "CERTDIR", "CONFIG", "COMMAND", "register_new_key", "no", "n", "e", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "account_key", "NUMBER", "pem", "openssl", "rsa", "in", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "account_key", "NUMBER", "pem", "check", "hex", "NUMBER", "bin", "urlbase", "NUMBER", "tr", "d", "n", "r", "openssl", "rsa", "in", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "account_key", "NUMBER", "pem", "noout", "text", "_sed", "e", "s", "g", "e", "y", "_", "awk", "publicExponent", "print", "NUMBER", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "e", "y", "_", "cat", "_sed", "e", "s", "space", "g", "e", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "s", "NUMBER", "NUMBER", "x", "NUMBER", "g", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "space", "g", "e", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "s", "NUMBER", "NUMBER", "x", "NUMBER", "g", "openssl", "base", "NUMBER", "e", "printf", "x", "NUMBER", "printf", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "pubExponent", "NUMBER", "AQAB", "openssl", "rsa", "in", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "account_key", "NUMBER", "pem", "noout", "modulus", "cut", "d", "f", "NUMBER", "hex", "NUMBER", "bin", "urlbase", "NUMBER", "cat", "_sed", "e", "s", "space", "g", "e", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "s", "NUMBER", "NUMBER", "x", "NUMBER", "g", "Linux", "L", "i", "n", "u", "x", "_sed", "e", "s", "g", "e", "y", "_", "sed", "r", "e", "s", "space", "g", "e", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "s", "NUMBER", "NUMBER", "x", "NUMBER", "g", "Linux", "L", "i", "n", "u", "x", "openssl", "base", "NUMBER", "e", "sed", "r", "e", "s", "g", "e", "y", "_", "tr", "d", "n", "r", "printf", "xD", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xED", "xB", "NUMBER", "x", "NUMBER", "x", "NUMBER", "D", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xA", "NUMBER", "x", "NUMBER", "x", "NUMBER", "C", "xAC", "x", "NUMBER", "F", "x", "NUMBER", "E", "xC", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xFF", "x", "NUMBER", "F", "x", "NUMBER", "E", "xD", "NUMBER", "xB", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "F", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "xEA", "x", "NUMBER", "xC", "NUMBER", "xE", "NUMBER", "xFB", "xD", "NUMBER", "x", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "xAB", "xB", "NUMBER", "xAC", "x", "NUMBER", "F", "x", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "xCA", "xEC", "xA", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "B", "xC", "NUMBER", "xF", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "xCC", "x", "NUMBER", "xDC", "xF", "NUMBER", "x", "NUMBER", "E", "xC", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "E", "xFA", "xBE", "x", "NUMBER", "F", "xF", "NUMBER", "x", "NUMBER", "E", "x", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "xA", "NUMBER", "x", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "B", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "D", "xAC", "x", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "xCA", "x", "NUMBER", "A", "x", "NUMBER", "E", "x", "NUMBER", "xF", "NUMBER", "xFD", "x", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "C", "x", "NUMBER", "D", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "D", "xFF", "xE", "NUMBER", "x", "NUMBER", "F", "xB", "NUMBER", "xBB", "xEB", "xD", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "E", "xE", "NUMBER", "x", "NUMBER", "xFF", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "B", "xC", "NUMBER", "x", "NUMBER", "xD", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "E", "x", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "xAD", "x", "NUMBER", "x", "NUMBER", "xA", "NUMBER", "x", "NUMBER", "F", "x", "NUMBER", "D", "xD", "NUMBER", "xE", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "D", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xAF", "x", "NUMBER", "xDA", "x", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "E", "x", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "x", "NUMBER", "C", "xDF", "xE", "NUMBER", "x", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xB", "NUMBER", "x", "NUMBER", "x", "NUMBER", "D", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "A", "xB", "NUMBER", "x", "NUMBER", "E", "x", "NUMBER", "xDE", "x", "NUMBER", "x", "NUMBER", "F", "xDC", "x", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "xDB", "x", "NUMBER", "F", "x", "NUMBER", "D", "xDE", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "E", "xEC", "xBC", "xEA", "xF", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "A", "xF", "NUMBER", "x", "NUMBER", "D", "xE", "NUMBER", "x", "NUMBER", "A", "x", "NUMBER", "x", "NUMBER", "B", "xB", "NUMBER", "xEF", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "F", "xCC", "x", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "A", "xE", "NUMBER", "x", "NUMBER", "xAB", "xCF", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "A", "xAC", "xE", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "xB", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xEF", "x", "NUMBER", "x", "NUMBER", "A", "x", "NUMBER", "E", "x", "NUMBER", "B", "x", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "F", "x", "NUMBER", "x", "NUMBER", "xB", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "F", "xCD", "x", "NUMBER", "C", "x", "NUMBER", "xAD", "x", "NUMBER", "xE", "NUMBER", "xB", "NUMBER", "x", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "x", "NUMBER", "F", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "F", "xE", "NUMBER", "x", "NUMBER", "xBE", "xE", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "xCA", "x", "NUMBER", "F", "x", "NUMBER", "xC", "NUMBER", "xBF", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "xF", "NUMBER", "xED", "x", "NUMBER", "F", "x", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "xCE", "x", "NUMBER", "B", "x", "NUMBER", "C", "xED", "x", "NUMBER", "xE", "NUMBER", "xB", "NUMBER", "x", "NUMBER", "x", "NUMBER", "A", "x", "NUMBER", "x", "NUMBER", "F", "xD", "NUMBER", "x", "NUMBER", "xA", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xBC", "xA", "NUMBER", "x", "NUMBER", "E", "x", "NUMBER", "xED", "x", "NUMBER", "E", "xB", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xFC", "x", "NUMBER", "F", "x", "NUMBER", "xFF", "x", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xAD", "x", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "A", "x", "NUMBER", "x", "NUMBER", "F", "xDD", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "F", "x", "NUMBER", "C", "xAA", "x", "NUMBER", "xAC", "xAB", "xED", "x", "NUMBER", "A", "xF", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xEE", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xBD", "x", "NUMBER", "E", "x", "NUMBER", "F", "x", "NUMBER", "x", "NUMBER", "B", "xEC", "x", "NUMBER", "xC", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xAB", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "F", "xE", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "xFC", "xFB", "xE", "NUMBER", "x", "NUMBER", "x", "NUMBER", "F", "x", "NUMBER", "D", "x", "NUMBER", "x", "NUMBER", "D", "xA", "NUMBER", "xDF", "x", "NUMBER", "F", "x", "NUMBER", "D", "xD", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xE", "NUMBER", "xD", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "A", "xD", "NUMBER", "xAF", "x", "NUMBER", "x", "NUMBER", "xFF", "x", "NUMBER", "xA", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xBE", "xA", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "E", "xA", "NUMBER", "x", "NUMBER", "E", "xFC", "xF", "NUMBER", "x", "NUMBER", "x", "NUMBER", "D", "x", "NUMBER", "xA", "NUMBER", "xBF", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "E", "xE", "NUMBER", "xF", "NUMBER", "xFB", "xE", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "xB", "NUMBER", "x", "NUMBER", "x", "NUMBER", "C", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "E", "xB", "NUMBER", "xC", "NUMBER", "xB", "NUMBER", "xE", "NUMBER", "xC", "NUMBER", "xD", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xA", "NUMBER", "x", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "B", "xE", "NUMBER", "x", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "D", "xAB", "x", "NUMBER", "A", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xB", "NUMBER", "x", "NUMBER", "A", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "F", "xC", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xCD", "x", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "x", "NUMBER", "xE", "NUMBER", "x", "NUMBER", "B", "x", "NUMBER", "C", "xC", "NUMBER", "x", "NUMBER", "B", "xA", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "xC", "NUMBER", "x", "NUMBER", "x", "NUMBER", "E", "xC", "NUMBER", "xF", "NUMBER", "x", "NUMBER", "x", "NUMBER", "x", "NUMBER", "A", "xC", "NUMBER", "pubMod", "NUMBER", "NUMBER", "luVIUjtsSJdQggopGB", "NUMBER", "rI", "NUMBER", "ewOVEl_", "NUMBER", "_XtO", "NUMBER", "DBERn", "NUMBER", "Fnlsfqg", "NUMBER", "jg", "NUMBER", "Vz", "NUMBER", "COruax_ARTCyuygA", "NUMBER", "AQksSbyPL", "NUMBER", "AcwA", "NUMBER", "PWOxtgO", "r", "NUMBER", "f", "NUMBER", "h", "NUMBER", "J", "NUMBER", "mmohXuXa", "NUMBER", "I", "NUMBER", "UPYFJgCNrFgYycqKPpj", "NUMBER", "_WVMjG", "NUMBER", "JAxY", "NUMBER", "_", "cvsbvr", "NUMBER", "vMO", "NUMBER", "BD_Vzk", "NUMBER", "xUfY", "NUMBER", "SWLkmI", "hof", "NUMBER", "rQYVqI", "NUMBER", "t", "NUMBER", "Ob", "NUMBER", "LVUmVxSvF", "NUMBER", "qGwZdlgWxx", "NUMBER", "WfHlM", "NUMBER", "Fl", "NUMBER", "IDoOQC", "NUMBER", "Yw", "NUMBER", "JhGEas", "NUMBER", "j", "NUMBER", "ikv", "NUMBER", "EfgFduPLd", "NUMBER", "bhXuVLuy", "NUMBER", "vXIKCr", "NUMBER", "feRaKZu", "NUMBER", "zZ", "NUMBER", "P", "NUMBER", "wQMsLCR", "NUMBER", "BBSuAhq", "NUMBER", "ERQSEFExqrOWW", "NUMBER", "bUYVfvdypum", "NUMBER", "PDLyRUsuIA", "NUMBER", "C_NLFitQ", "m", "NUMBER", "d", "NUMBER", "wxnyYpi", "NUMBER", "_hJr", "NUMBER", "nnAfKX", "NUMBER", "fFv", "NUMBER", "YHJPX", "NUMBER", "S", "NUMBER", "MvGVws", "NUMBER", "PO", "NUMBER", "LAYekR_", "NUMBER", "pij", "NUMBER", "GBzZLyjDgXtLrRWRvwvVf", "TU", "NUMBER", "YJWIethCt", "NUMBER", "O", "NUMBER", "OKYl_dgpgTWcHXW", "NUMBER", "qpesq", "NUMBER", "a", "NUMBER", "IkBobuZ", "NUMBER", "ETvV", "NUMBER", "vh", "NUMBER", "vsmcHIKVKrkhAf", "NUMBER", "Rxw_PvoBR", "NUMBER", "dlY", "NUMBER", "k", "NUMBER", "x", "N", "NUMBER", "AJX", "NUMBER", "tL", "NUMBER", "MPgcitevIFL_J", "NUMBER", "iCEGEHvqLGNy", "NUMBER", "kbvzzYI", "NUMBER", "UoL", "XQkdu", "NUMBER", "PL", "NUMBER", "kjxZbckjCeQfrfBsujD", "NUMBER", "UUXCaRhm", "NUMBER", "hxZvXxW", "Ig", "NUMBER", "H", "NUMBER", "rGjdHmLhKJQhvw", "NUMBER", "V", "NUMBER", "l", "NUMBER", "k", "NUMBER", "xWY", "NUMBER", "Ts", "NUMBER", "xEui", "NUMBER", "EjFdG", "NUMBER", "H", "NUMBER", "IhIKsM", "printf", "e", "s", "kty", "RSA", "n", "s", "AQAB", "NUMBER", "luVIUjtsSJdQggopGB", "NUMBER", "rI", "NUMBER", "ewOVEl_", "NUMBER", "_XtO", "NUMBER", "DBERn", "NUMBER", "Fnlsfqg", "NUMBER", "jg", "NUMBER", "Vz", "NUMBER", "COruax_ARTCyuygA", "NUMBER", "AQksSbyPL", "NUMBER", "AcwA", "NUMBER", "PWOxtgO", "r", "NUMBER", "f", "NUMBER", "h", "NUMBER", "J", "NUMBER", "mmohXuXa", "NUMBER", "I", "NUMBER", "UPYFJgCNrFgYycqKPpj", "NUMBER", "_WVMjG", "NUMBER", "JAxY", "NUMBER", "_", "cvsbvr", "NUMBER", "vMO", "NUMBER", "BD_Vzk", "NUMBER", "xUfY", "NUMBER", "SWLkmI", "hof", "NUMBER", "rQYVqI", "NUMBER", "t", "NUMBER", "Ob", "NUMBER", "LVUmVxSvF", "NUMBER", "qGwZdlgWxx", "NUMBER", "WfHlM", "NUMBER", "Fl", "NUMBER", "IDoOQC", "NUMBER", "Yw", "NUMBER", "JhGEas", "NUMBER", "j", "NUMBER", "ikv", "NUMBER", "EfgFduPLd", "NUMBER", "bhXuVLuy", "NUMBER", "vXIKCr", "NUMBER", "feRaKZu", "NUMBER", "zZ", "NUMBER", "P", "NUMBER", "wQMsLCR", "NUMBER", "BBSuAhq", "NUMBER", "ERQSEFExqrOWW", "NUMBER", "bUYVfvdypum", "NUMBER", "PDLyRUsuIA", "NUMBER", "C_NLFitQ", "m", "NUMBER", "d", "NUMBER", "wxnyYpi", "NUMBER", "_hJr", "NUMBER", "nnAfKX", "NUMBER", "fFv", "NUMBER", "YHJPX", "NUMBER", "S", "NUMBER", "MvGVws", "NUMBER", "PO", "NUMBER", "LAYekR_", "NUMBER", "pij", "NUMBER", "GBzZLyjDgXtLrRWRvwvVf", "TU", "NUMBER", "YJWIethCt", "NUMBER", "O", "NUMBER", "OKYl_dgpgTWcHXW", "NUMBER", "qpesq", "NUMBER", "a", "NUMBER", "IkBobuZ", "NUMBER", "ETvV", "NUMBER", "vh", "NUMBER", "vsmcHIKVKrkhAf", "NUMBER", "Rxw_PvoBR", "NUMBER", "dlY", "NUMBER", "k", "NUMBER", "x", "N", "NUMBER", "AJX", "NUMBER", "tL", "NUMBER", "MPgcitevIFL_J", "NUMBER", "iCEGEHvqLGNy", "NUMBER", "kbvzzYI", "NUMBER", "UoL", "XQkdu", "NUMBER", "PL", "NUMBER", "kjxZbckjCeQfrfBsujD", "NUMBER", "UUXCaRhm", "NUMBER", "hxZvXxW", "Ig", "NUMBER", "H", "NUMBER", "rGjdHmLhKJQhvw", "NUMBER", "V", "NUMBER", "l", "NUMBER", "k", "NUMBER", "xWY", "NUMBER", "Ts", "NUMBER", "xEui", "NUMBER", "EjFdG", "NUMBER", "H", "NUMBER", "IhIKsM", "openssl", "dgst", "sha", "NUMBER", "binary", "urlbase", "NUMBER", "openssl", "base", "NUMBER", "e", "tr", "d", "n", "r", "_sed", "e", "s", "g", "e", "y", "_", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "e", "y", "_", "thumbprint", "VXESrd", "NUMBER", "m", "NUMBER", "rm", "NUMBER", "wgbUmDI", "NUMBER", "cr", "NUMBER", "fyUE", "NUMBER", "DTX", "NUMBER", "gi", "NUMBER", "StpxhgI", "no", "y", "e", "s", "sign_domains", "r", "e", "g", "i", "s", "t", "e", "r", "e", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "registration_info", "NUMBER", "json", "cat", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "registration_info", "NUMBER", "json", "get_json_int_value", "id", "local", "filter", "printf", "s", "NUMBER", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "p", "id", "filter", "s", "NUMBER", "id", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "p", "sed", "n", "s", "NUMBER", "id", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "p", "ACCOUNT_ID", "NUMBER", "NUMBER", "eq", "NUMBER", "ACCOUNT_URL", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "acct", "NUMBER", "hookscript_bricker_hook", "n", "n", "d", "opt", "dehydrated", "chains", "n", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "DOMAINS_TXT", "tmp", "dehydrated", "FgkSDL", "n", "printf", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "ORIGIFS", "IFS", "tr", "d", "r", "awk", "print", "tolower", "NUMBER", "_sed", "e", "s", "space", "g", "e", "s", "space", "g", "e", "s", "space", "g", "e", "s", "NUMBER", "g", "e", "s", "g", "grep", "vE", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "space", "g", "e", "s", "space", "g", "e", "s", "space", "g", "e", "s", "NUMBER", "g", "e", "s", "g", "for", "line", "in", "TAG", "NUMBER", "g", "e", "s", "g", "grep", "vE", "true", "reset_configvars", "KEY_ALGO", "secp", "NUMBER", "r", "NUMBER", "OCSP_MUST_STAPLE", "no", "PRIVATE_KEY_RENEW", "yes", "KEYSIZE", "NUMBER", "CHALLENGETYPE", "http", "NUMBER", "HOOK", "WELLKNOWN", "srv", "http", "dehydrated", "HOOK_CHAIN", "no", "OPENSSL_CNF", "etc", "ssl", "openssl", "NUMBER", "cnf", "RENEW_DAYS", "NUMBER", "IP_VERSION", "IFS", "grep", "Eo", "true", "alias", "_sed", "e", "s", "g", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "line", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "grep", "Eo", "awk", "END", "print", "NR", "true", "aliascount", "NUMBER", "NUMBER", "gt", "NUMBER", "printf", "s", "n", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "cut", "d", "f", "NUMBER", "domain", "domain", "NUMBER", "de", "printf", "s", "n", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "cut", "s", "d", "f", "NUMBER", "morenames", "www", "NUMBER", "domain", "NUMBER", "de", "NUMBER", "lt", "NUMBER", "alias", "domain", "NUMBER", "de", "export", "alias", "z", "www", "NUMBER", "domain", "NUMBER", "de", "echo", "Processing", "domain", "NUMBER", "de", "with", "alternative", "names", "www", "NUMBER", "domain", "NUMBER", "de", "Processing", "domain", "NUMBER", "de", "with", "alternative", "names", "www", "NUMBER", "domain", "NUMBER", "de", "tb", "NUMBER", "local", "certdir", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "pem", "chain", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "chain", "NUMBER", "pem", "force_renew", "no", "date", "s", "timestamp", "NUMBER", "e", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "n", "certconfig", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "config", "f", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "config", "verify_config", "http", "NUMBER", "h", "t", "t", "p", "NUMBER", "NUMBER", "http", "NUMBER", "d", "n", "s", "NUMBER", "NUMBER", "http", "NUMBER", "h", "t", "t", "p", "NUMBER", "NUMBER", "d", "srv", "http", "dehydrated", "secp", "NUMBER", "r", "NUMBER", "r", "s", "a", "secp", "NUMBER", "r", "NUMBER", "p", "r", "i", "m", "e", "NUMBER", "NUMBER", "NUMBER", "v", "NUMBER", "secp", "NUMBER", "r", "NUMBER", "s", "e", "c", "p", "NUMBER", "NUMBER", "NUMBER", "r", "NUMBER", "n", "NUMBER", "a", "u", "t", "o", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "hookscript_bricker_hook", "n", "export", "WELLKNOWN", "CHALLENGETYPE", "KEY_ALGO", "PRIVATE_KEY_ROLLOVER", "skip", "no", "local", "csr", "n", "e", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "pem", "printf", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "openssl", "x", "NUMBER", "in", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "pem", "text", "noout", "grep", "DNS", "_sed", "s", "DNS", "g", "Linux", "L", "i", "n", "u", "x", "sed", "r", "s", "DNS", "g", "tr", "d", "tr", "n", "sort", "u", "_sed", "s", "Linux", "L", "i", "n", "u", "x", "sed", "r", "s", "tr", "n", "certnames", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "echo", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "tr", "n", "sort", "u", "tr", "n", "_sed", "s", "Linux", "L", "i", "n", "u", "x", "sed", "r", "s", "_sed", "s", "Linux", "L", "i", "n", "u", "x", "sed", "r", "s", "givennames", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "t", "b", "i", "t", "f", "NUMBER", "d", "e", "w", "w", "w", "NUMBER", "t", "b", "i", "t", "f", "NUMBER", "d", "e", "echo", "unchanged", "NUMBER", "unchanged", "NUMBER", "e", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "pem", "echo", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "openssl", "x", "NUMBER", "enddate", "noout", "in", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "pem", "cut", "d", "f", "NUMBER", "valid", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "printf", "Valid", "till", "s", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Valid", "till", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "openssl", "x", "NUMBER", "checkend", "NUMBER", "noout", "in", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "pem", "Certificate", "will", "expire", "echo", "Less", "than", "NUMBER", "days", "NUMBER", "Renewing", "Less", "than", "NUMBER", "days", "NUMBER", "Renewing", "local", "update_ocsp", "update_ocsp", "no", "no", "y", "e", "s", "update_ocsp", "yes", "z", "y", "e", "s", "sign_domain", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "NUMBER", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "local", "certdir", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "shift", "timestamp", "NUMBER", "shift", "domain", "domain", "NUMBER", "de", "altnames", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "export", "altnames", "echo", "Signing", "domains", "NUMBER", "Signing", "domains", "NUMBER", "NUMBER", "eq", "NUMBER", "NUMBER", "eq", "NUMBER", "z", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "local", "privkey", "privkey", "NUMBER", "pem", "e", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "csr", "r", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "pem", "yes", "y", "e", "s", "echo", "Generating", "private", "key", "NUMBER", "Generating", "private", "key", "NUMBER", "privkey", "privkey", "NUMBER", "pem", "case", "KEY_ALGO", "in", "_openssl", "ecparam", "genkey", "name", "secp", "NUMBER", "r", "NUMBER", "out", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "pem", "set", "e", "openssl", "ecparam", "genkey", "name", "secp", "NUMBER", "r", "NUMBER", "out", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "pem", "out", "res", "NUMBER", "set", "e", "NUMBER", "ne", "NUMBER", "r", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "pem", "r", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "roll", "NUMBER", "pem", "r", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "roll", "NUMBER", "pem", "no", "y", "e", "s", "r", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "roll", "NUMBER", "pem", "echo", "Generating", "signing", "request", "NUMBER", "Generating", "signing", "request", "NUMBER", "SAN", "for", "altname", "in", "altnames", "SAN", "DNS", "domain", "NUMBER", "de", "for", "altname", "in", "altnames", "SAN", "DNS", "domain", "NUMBER", "de", "DNS", "www", "NUMBER", "domain", "NUMBER", "de", "SAN", "DNS", "domain", "NUMBER", "de", "DNS", "www", "NUMBER", "domain", "NUMBER", "de", "local", "tmp_openssl_cnf", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "tmp_openssl_cnf", "tmp", "dehydrated", "NUMBER", "OBhF", "cat", "etc", "ssl", "openssl", "NUMBER", "cnf", "printf", "SAN", "nsubjectAltName", "s", "DNS", "domain", "NUMBER", "de", "DNS", "www", "NUMBER", "domain", "NUMBER", "de", "no", "yes", "SUBJ", "CN", "domain", "NUMBER", "de", "Linux", "M", "I", "N", "G", "W", "openssl", "req", "new", "sha", "NUMBER", "key", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "privkey", "NUMBER", "pem", "out", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "csr", "subj", "CN", "domain", "NUMBER", "de", "reqexts", "SAN", "config", "tmp", "dehydrated", "NUMBER", "OBhF", "rm", "f", "tmp", "dehydrated", "NUMBER", "OBhF", "crt_path", "etc", "ssl", "reksys", "domain", "NUMBER", "de", "cert", "NUMBER", "pem", "sign_csr", "BEGIN", "CERTIFICATE", "REQUEST", "MIIBQjCByQIBADAUMRIwEAYDVQQDDAl", "NUMBER", "Yi", "NUMBER", "pdGYuZGUwdjAQBgcqhkjOPQIBBgUr", "gQQAIgNiAAS", "NUMBER", "k", "NUMBER", "FBwJC", "I", "vujHqCZb", "NUMBER", "v", "NUMBER", "SO", "NUMBER", "crMmIC", "NUMBER", "ismpjh", "NUMBER", "oDHXB", "NUMBER", "IGRGf", "NUMBER", "NUMBER", "nVuuav", "aivS", "STAZFQbLcGrqBOFDItDack", "NUMBER", "yti", "NUMBER", "F", "UIdWAjBHJD", "NUMBER", "WqFC", "NUMBER", "nm", "NUMBER", "SAy", "NUMBER", "FgipsC", "NUMBER", "m", "NUMBER", "Hy", "NUMBER", "KC", "NUMBER", "z", "NUMBER", "aUQh", "NUMBER", "ZODVz", "NUMBER", "cgONRib", "NUMBER", "EDtTX", "NUMBER", "ra", "NUMBER", "A", "END", "CERTIFICATE", "REQUEST", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "csr", "BEGIN", "CERTIFICATE", "REQUEST", "MIIBQjCByQIBADAUMRIwEAYDVQQDDAl", "NUMBER", "Yi", "NUMBER", "pdGYuZGUwdjAQBgcqhkjOPQIBBgUr", "gQQAIgNiAAS", "NUMBER", "k", "NUMBER", "FBwJC", "I", "vujHqCZb", "NUMBER", "v", "NUMBER", "SO", "NUMBER", "crMmIC", "NUMBER", "ismpjh", "NUMBER", "oDHXB", "NUMBER", "IGRGf", "NUMBER", "NUMBER", "nVuuav", "aivS", "STAZFQbLcGrqBOFDItDack", "NUMBER", "yti", "NUMBER", "F", "UIdWAjBHJD", "NUMBER", "WqFC", "NUMBER", "nm", "NUMBER", "SAy", "NUMBER", "FgipsC", "NUMBER", "m", "NUMBER", "Hy", "NUMBER", "KC", "NUMBER", "z", "NUMBER", "aUQh", "NUMBER", "ZODVz", "NUMBER", "cgONRib", "NUMBER", "EDtTX", "NUMBER", "ra", "NUMBER", "A", "END", "CERTIFICATE", "REQUEST", "shift", "NUMBER", "export", "altnames", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "altnames", "domain", "NUMBER", "de", "www", "NUMBER", "domain", "NUMBER", "de", "NUMBER", "eq", "NUMBER", "NUMBER", "eq", "NUMBER", "z", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "n", "local", "a", "challenge_identifiers", "challenge_uris", "challenge_tokens", "authorizations", "keyauths", "deploy_args", "NUMBER", "eq", "NUMBER", "for", "altname", "in", "altnames", "printf", "type", "dns", "value", "s", "domain", "NUMBER", "de", "challenge_identifiers", "type", "dns", "value", "domain", "NUMBER", "de", "for", "altname", "in", "altnames", "printf", "type", "dns", "value", "s", "www", "NUMBER", "domain", "NUMBER", "de", "challenge_identifiers", "type", "dns", "value", "www", "NUMBER", "domain", "NUMBER", "de", "challenge_identifiers", "type", "dns", "value", "domain", "NUMBER", "de", "type", "dns", "value", "www", "NUMBER", "domain", "NUMBER", "de", "echo", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "signed_request", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "identifiers", "type", "dns", "value", "domain", "NUMBER", "de", "type", "dns", "value", "www", "NUMBER", "domain", "NUMBER", "de", "printf", "s", "identifiers", "type", "dns", "value", "domain", "NUMBER", "de", "type", "dns", "value", "www", "NUMBER", "domain", "NUMBER", "de", "urlbase", "NUMBER", "openssl", "base", "NUMBER", "e", "tr", "d", "n", "r", "_sed", "e", "s", "g", "e", "y", "_", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "e", "y", "_", "payload", "NUMBER", "eyJpZGVudGlmaWVycyI", "NUMBER", "IFt", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInRiLWl", "NUMBER", "Zi", "NUMBER", "kZSJ", "NUMBER", "LCB", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInd", "NUMBER", "dy", "NUMBER", "Yi", "NUMBER", "pdGYuZGUifV", "NUMBER", "NUMBER", "eq", "NUMBER", "http_request", "head", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "grep", "Replay", "Nonce", "awk", "F", "print", "NUMBER", "tr", "d", "n", "r", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "tempcont", "tmp", "dehydrated", "HqxbIU", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "tempheaders", "tmp", "dehydrated", "spf", "NUMBER", "YA", "n", "set", "e", "head", "h", "e", "a", "d", "curl", "A", "dehydr", "NUMBER", "ted", "git", "master", "after", "NUMBER", "curl", "NUMBER", "s", "w", "http_code", "o", "tmp", "dehydrated", "HqxbIU", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "nonce", "I", "statuscode", "NUMBER", "touch", "tmp", "dehydrated", "spf", "NUMBER", "YA", "curlret", "NUMBER", "set", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "echo", "checking", "pipe", "NUMBER", "checking", "pipe", "NUMBER", "echo", "use", "pipe", "NUMBER", "use", "pipe", "NUMBER", "cat", "tmp", "dehydrated", "spf", "NUMBER", "YA", "echo", "get", "curl", "output", "get", "curl", "output", "cat", "tmp", "dehydrated", "HqxbIU", "echo", "deleting", "temp", "file", "deleting", "temp", "file", "rm", "f", "tmp", "dehydrated", "HqxbIU", "rm", "f", "tmp", "dehydrated", "spf", "NUMBER", "YA", "nonce", "QERa", "NUMBER", "pVhhvNWH", "NUMBER", "qt", "NUMBER", "JL", "NUMBER", "czKyp_IrG", "FlEDlO", "NUMBER", "Sg_KxI", "header", "alg", "RS", "NUMBER", "jwk", "e", "AQAB", "kty", "RSA", "n", "NUMBER", "luVIUjtsSJdQggopGB", "NUMBER", "rI", "NUMBER", "ewOVEl_", "NUMBER", "_XtO", "NUMBER", "DBERn", "NUMBER", "Fnlsfqg", "NUMBER", "jg", "NUMBER", "Vz", "NUMBER", "COruax_ARTCyuygA", "NUMBER", "AQksSbyPL", "NUMBER", "AcwA", "NUMBER", "PWOxtgO", "r", "NUMBER", "f", "NUMBER", "h", "NUMBER", "J", "NUMBER", "mmohXuXa", "NUMBER", "I", "NUMBER", "UPYFJgCNrFgYycqKPpj", "NUMBER", "_WVMjG", "NUMBER", "JAxY", "NUMBER", "_", "cvsbvr", "NUMBER", "vMO", "NUMBER", "BD_Vzk", "NUMBER", "xUfY", "NUMBER", "SWLkmI", "hof", "NUMBER", "rQYVqI", "NUMBER", "t", "NUMBER", "Ob", "NUMBER", "LVUmVxSvF", "NUMBER", "qGwZdlgWxx", "NUMBER", "WfHlM", "NUMBER", "Fl", "NUMBER", "IDoOQC", "NUMBER", "Yw", "NUMBER", "JhGEas", "NUMBER", "j", "NUMBER", "ikv", "NUMBER", "EfgFduPLd", "NUMBER", "bhXuVLuy", "NUMBER", "vXIKCr", "NUMBER", "feRaKZu", "NUMBER", "zZ", "NUMBER", "P", "NUMBER", "wQMsLCR", "NUMBER", "BBSuAhq", "NUMBER", "ERQSEFExqrOWW", "NUMBER", "bUYVfvdypum", "NUMBER", "PDLyRUsuIA", "NUMBER", "C_NLFitQ", "m", "NUMBER", "d", "NUMBER", "wxnyYpi", "NUMBER", "_hJr", "NUMBER", "nnAfKX", "NUMBER", "fFv", "NUMBER", "YHJPX", "NUMBER", "S", "NUMBER", "MvGVws", "NUMBER", "PO", "NUMBER", "LAYekR_", "NUMBER", "pij", "NUMBER", "GBzZLyjDgXtLrRWRvwvVf", "TU", "NUMBER", "YJWIethCt", "NUMBER", "O", "NUMBER", "OKYl_dgpgTWcHXW", "NUMBER", "qpesq", "NUMBER", "a", "NUMBER", "IkBobuZ", "NUMBER", "ETvV", "NUMBER", "vh", "NUMBER", "vsmcHIKVKrkhAf", "NUMBER", "Rxw_PvoBR", "NUMBER", "dlY", "NUMBER", "k", "NUMBER", "x", "N", "NUMBER", "AJX", "NUMBER", "tL", "NUMBER", "MPgcitevIFL_J", "NUMBER", "iCEGEHvqLGNy", "NUMBER", "kbvzzYI", "NUMBER", "UoL", "XQkdu", "NUMBER", "PL", "NUMBER", "kjxZbckjCeQfrfBsujD", "NUMBER", "UUXCaRhm", "NUMBER", "hxZvXxW", "Ig", "NUMBER", "H", "NUMBER", "rGjdHmLhKJQhvw", "NUMBER", "V", "NUMBER", "l", "NUMBER", "k", "NUMBER", "xWY", "NUMBER", "Ts", "NUMBER", "xEui", "NUMBER", "EjFdG", "NUMBER", "H", "NUMBER", "IhIKsM", "NUMBER", "eq", "NUMBER", "n", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "acct", "NUMBER", "protected", "alg", "RS", "NUMBER", "kid", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "acct", "NUMBER", "url", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "nonce", "QERa", "NUMBER", "pVhhvNWH", "NUMBER", "qt", "NUMBER", "JL", "NUMBER", "czKyp_IrG", "FlEDlO", "NUMBER", "Sg_KxI", "printf", "s", "alg", "RS", "NUMBER", "kid", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "acct", "NUMBER", "url", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "nonce", "QERa", "NUMBER", "pVhhvNWH", "NUMBER", "qt", "NUMBER", "JL", "NUMBER", "czKyp_IrG", "FlEDlO", "NUMBER", "Sg_KxI", "urlbase", "NUMBER", "openssl", "base", "NUMBER", "e", "tr", "d", "n", "r", "_sed", "e", "s", "g", "e", "y", "_", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "e", "y", "_", "protected", "NUMBER", "eyJhbGciOiAiUlMyNTYiLCAia", "NUMBER", "lkIjogImh", "NUMBER", "dHBzOi", "NUMBER", "vYWNtZS", "NUMBER", "MDIuYXBpLmxldHNlbmNyeXB", "NUMBER", "Lm", "NUMBER", "yZy", "NUMBER", "hY", "NUMBER", "lL", "NUMBER", "FjY", "NUMBER", "QvNDkzNTU", "NUMBER", "NCIsICJ", "NUMBER", "cmwiOiAiaHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "FjbWUvbmV", "NUMBER", "LW", "NUMBER", "yZGVyIiwgIm", "NUMBER", "vbmNlIjogIlFFUmE", "NUMBER", "cFZoaHZOV", "NUMBER", "g", "NUMBER", "cXQ", "NUMBER", "Skw", "NUMBER", "Y", "NUMBER", "pLeXBfSXJHLUZsRURsTzVTZ", "NUMBER", "LeEkifQ", "openssl", "dgst", "sha", "NUMBER", "sign", "opt", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "account_key", "NUMBER", "pem", "urlbase", "NUMBER", "openssl", "base", "NUMBER", "e", "_sed", "e", "s", "g", "e", "y", "_", "tr", "d", "n", "r", "Linux", "L", "i", "n", "u", "x", "sed", "r", "e", "s", "g", "e", "y", "_", "printf", "s", "eyJhbGciOiAiUlMyNTYiLCAia", "NUMBER", "lkIjogImh", "NUMBER", "dHBzOi", "NUMBER", "vYWNtZS", "NUMBER", "MDIuYXBpLmxldHNlbmNyeXB", "NUMBER", "Lm", "NUMBER", "yZy", "NUMBER", "hY", "NUMBER", "lL", "NUMBER", "FjY", "NUMBER", "QvNDkzNTU", "NUMBER", "NCIsICJ", "NUMBER", "cmwiOiAiaHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "FjbWUvbmV", "NUMBER", "LW", "NUMBER", "yZGVyIiwgIm", "NUMBER", "vbmNlIjogIlFFUmE", "NUMBER", "cFZoaHZOV", "NUMBER", "g", "NUMBER", "cXQ", "NUMBER", "Skw", "NUMBER", "Y", "NUMBER", "pLeXBfSXJHLUZsRURsTzVTZ", "NUMBER", "LeEkifQ", "NUMBER", "eyJpZGVudGlmaWVycyI", "NUMBER", "IFt", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInRiLWl", "NUMBER", "Zi", "NUMBER", "kZSJ", "NUMBER", "LCB", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInd", "NUMBER", "dy", "NUMBER", "Yi", "NUMBER", "pdGYuZGUifV", "NUMBER", "sign", "NUMBER", "npm", "NUMBER", "fZvoJr", "NUMBER", "vtdwBVPvaz", "NUMBER", "gZGDGDAh", "NUMBER", "B", "NUMBER", "Zlmr", "NUMBER", "Yb", "NUMBER", "AJoTjIwE", "NUMBER", "IMTZkwVfOS", "NUMBER", "qEahnyDHLugsLVh", "NUMBER", "HsIwFOJoKApQLNCHDaMJCBp", "NUMBER", "EqA", "NUMBER", "SLVHuInWVANLGLW", "NUMBER", "QHGOircmx", "NUMBER", "UB", "NUMBER", "yVhMZypWfLKC", "NUMBER", "ls", "NUMBER", "fc", "NUMBER", "OaAyFifHPP", "NUMBER", "oH", "NUMBER", "BCSsOup", "NUMBER", "iVDoRx", "NUMBER", "StgOzmP", "hKyQxUkwyFBE", "NUMBER", "d", "NUMBER", "y", "NUMBER", "qikdRCiUZE", "NUMBER", "HLNOeP", "NUMBER", "xUNBjeDCYNclMp", "NUMBER", "HDB", "NUMBER", "OA", "NUMBER", "oreWcSJE", "NUMBER", "Ma", "NUMBER", "Q", "NUMBER", "wmXJhyURz", "NUMBER", "w", "NUMBER", "ZTsNpjQBSGv", "NUMBER", "uUJziHAclay", "NUMBER", "CyORytmqSFLW", "NUMBER", "MK", "JRCUHli", "NUMBER", "vkPSDsLOPrK", "NUMBER", "uT", "tU", "NUMBER", "EyROhDXfv", "NUMBER", "vupHnhyBn", "NUMBER", "XwGVYR", "NUMBER", "axTSY", "NUMBER", "hTx", "NUMBER", "e", "NUMBER", "gRxkYsGa", "NUMBER", "rnz", "NUMBER", "ZUnF", "NUMBER", "_hOgcifCSuJBO", "GkK", "NUMBER", "naFWWVx", "NUMBER", "u", "NUMBER", "oPUQCO", "NUMBER", "mwCeFF", "NUMBER", "m", "NUMBER", "JELghpgWx", "NUMBER", "fWF", "D", "NUMBER", "f", "NUMBER", "St", "NUMBER", "AH_P", "NUMBER", "RfzHzyKjwuJ", "NUMBER", "t", "NUMBER", "igN", "NUMBER", "e", "NUMBER", "k", "NUMBER", "IUSz_S", "NUMBER", "E", "NUMBER", "lg", "NUMBER", "J", "NUMBER", "qFIvIfBfxK", "NUMBER", "LyFH", "NUMBER", "Piyra", "NUMBER", "jsNZz_", "NUMBER", "FKR", "NUMBER", "whHDTg", "NUMBER", "WrAUYnDvP", "NUMBER", "Rp", "NUMBER", "kEK", "NUMBER", "KAaSU", "NUMBER", "fyJrj", "NUMBER", "aJhoZPvlQBKePRVF", "NUMBER", "wCtcn", "NUMBER", "_XNtsyShPK", "NUMBER", "JlfvQFCQYuHrkE", "NUMBER", "a", "NUMBER", "DAH", "NUMBER", "m", "NUMBER", "Bl", "NUMBER", "RP", "NUMBER", "iN_juEKBt", "NUMBER", "vgk", "NUMBER", "jMKDS", "NUMBER", "ha", "NUMBER", "ZaAjZDWImw", "NUMBER", "eq", "NUMBER", "data", "protected", "eyJhbGciOiAiUlMyNTYiLCAia", "NUMBER", "lkIjogImh", "NUMBER", "dHBzOi", "NUMBER", "vYWNtZS", "NUMBER", "MDIuYXBpLmxldHNlbmNyeXB", "NUMBER", "Lm", "NUMBER", "yZy", "NUMBER", "hY", "NUMBER", "lL", "NUMBER", "FjY", "NUMBER", "QvNDkzNTU", "NUMBER", "NCIsICJ", "NUMBER", "cmwiOiAiaHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "FjbWUvbmV", "NUMBER", "LW", "NUMBER", "yZGVyIiwgIm", "NUMBER", "vbmNlIjogIlFFUmE", "NUMBER", "cFZoaHZOV", "NUMBER", "g", "NUMBER", "cXQ", "NUMBER", "Skw", "NUMBER", "Y", "NUMBER", "pLeXBfSXJHLUZsRURsTzVTZ", "NUMBER", "LeEkifQ", "payload", "eyJpZGVudGlmaWVycyI", "NUMBER", "IFt", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInRiLWl", "NUMBER", "Zi", "NUMBER", "kZSJ", "NUMBER", "LCB", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInd", "NUMBER", "dy", "NUMBER", "Yi", "NUMBER", "pdGYuZGUifV", "NUMBER", "signature", "npm", "NUMBER", "fZvoJr", "NUMBER", "vtdwBVPvaz", "NUMBER", "gZGDGDAh", "NUMBER", "B", "NUMBER", "Zlmr", "NUMBER", "Yb", "NUMBER", "AJoTjIwE", "NUMBER", "IMTZkwVfOS", "NUMBER", "qEahnyDHLugsLVh", "NUMBER", "HsIwFOJoKApQLNCHDaMJCBp", "NUMBER", "EqA", "NUMBER", "SLVHuInWVANLGLW", "NUMBER", "QHGOircmx", "NUMBER", "UB", "NUMBER", "yVhMZypWfLKC", "NUMBER", "ls", "NUMBER", "fc", "NUMBER", "OaAyFifHPP", "NUMBER", "oH", "NUMBER", "BCSsOup", "NUMBER", "iVDoRx", "NUMBER", "StgOzmP", "hKyQxUkwyFBE", "NUMBER", "d", "NUMBER", "y", "NUMBER", "qikdRCiUZE", "NUMBER", "HLNOeP", "NUMBER", "xUNBjeDCYNclMp", "NUMBER", "HDB", "NUMBER", "OA", "NUMBER", "oreWcSJE", "NUMBER", "Ma", "NUMBER", "Q", "NUMBER", "wmXJhyURz", "NUMBER", "w", "NUMBER", "ZTsNpjQBSGv", "NUMBER", "uUJziHAclay", "NUMBER", "CyORytmqSFLW", "NUMBER", "MK", "JRCUHli", "NUMBER", "vkPSDsLOPrK", "NUMBER", "uT", "tU", "NUMBER", "EyROhDXfv", "NUMBER", "vupHnhyBn", "NUMBER", "XwGVYR", "NUMBER", "axTSY", "NUMBER", "hTx", "NUMBER", "e", "NUMBER", "gRxkYsGa", "NUMBER", "rnz", "NUMBER", "ZUnF", "NUMBER", "_hOgcifCSuJBO", "GkK", "NUMBER", "naFWWVx", "NUMBER", "u", "NUMBER", "oPUQCO", "NUMBER", "mwCeFF", "NUMBER", "m", "NUMBER", "JELghpgWx", "NUMBER", "fWF", "D", "NUMBER", "f", "NUMBER", "St", "NUMBER", "AH_P", "NUMBER", "RfzHzyKjwuJ", "NUMBER", "t", "NUMBER", "igN", "NUMBER", "e", "NUMBER", "k", "NUMBER", "IUSz_S", "NUMBER", "E", "NUMBER", "lg", "NUMBER", "J", "NUMBER", "qFIvIfBfxK", "NUMBER", "LyFH", "NUMBER", "Piyra", "NUMBER", "jsNZz_", "NUMBER", "FKR", "NUMBER", "whHDTg", "NUMBER", "WrAUYnDvP", "NUMBER", "Rp", "NUMBER", "kEK", "NUMBER", "KAaSU", "NUMBER", "fyJrj", "NUMBER", "aJhoZPvlQBKePRVF", "NUMBER", "wCtcn", "NUMBER", "_XNtsyShPK", "NUMBER", "JlfvQFCQYuHrkE", "NUMBER", "a", "NUMBER", "DAH", "NUMBER", "m", "NUMBER", "Bl", "NUMBER", "RP", "NUMBER", "iN_juEKBt", "NUMBER", "vgk", "NUMBER", "jMKDS", "NUMBER", "ha", "NUMBER", "ZaAjZDWImw", "http_request", "post", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "protected", "eyJhbGciOiAiUlMyNTYiLCAia", "NUMBER", "lkIjogImh", "NUMBER", "dHBzOi", "NUMBER", "vYWNtZS", "NUMBER", "MDIuYXBpLmxldHNlbmNyeXB", "NUMBER", "Lm", "NUMBER", "yZy", "NUMBER", "hY", "NUMBER", "lL", "NUMBER", "FjY", "NUMBER", "QvNDkzNTU", "NUMBER", "NCIsICJ", "NUMBER", "cmwiOiAiaHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "FjbWUvbmV", "NUMBER", "LW", "NUMBER", "yZGVyIiwgIm", "NUMBER", "vbmNlIjogIlFFUmE", "NUMBER", "cFZoaHZOV", "NUMBER", "g", "NUMBER", "cXQ", "NUMBER", "Skw", "NUMBER", "Y", "NUMBER", "pLeXBfSXJHLUZsRURsTzVTZ", "NUMBER", "LeEkifQ", "payload", "eyJpZGVudGlmaWVycyI", "NUMBER", "IFt", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInRiLWl", "NUMBER", "Zi", "NUMBER", "kZSJ", "NUMBER", "LCB", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInd", "NUMBER", "dy", "NUMBER", "Yi", "NUMBER", "pdGYuZGUifV", "NUMBER", "signature", "npm", "NUMBER", "fZvoJr", "NUMBER", "vtdwBVPvaz", "NUMBER", "gZGDGDAh", "NUMBER", "B", "NUMBER", "Zlmr", "NUMBER", "Yb", "NUMBER", "AJoTjIwE", "NUMBER", "IMTZkwVfOS", "NUMBER", "qEahnyDHLugsLVh", "NUMBER", "HsIwFOJoKApQLNCHDaMJCBp", "NUMBER", "EqA", "NUMBER", "SLVHuInWVANLGLW", "NUMBER", "QHGOircmx", "NUMBER", "UB", "NUMBER", "yVhMZypWfLKC", "NUMBER", "ls", "NUMBER", "fc", "NUMBER", "OaAyFifHPP", "NUMBER", "oH", "NUMBER", "BCSsOup", "NUMBER", "iVDoRx", "NUMBER", "StgOzmP", "hKyQxUkwyFBE", "NUMBER", "d", "NUMBER", "y", "NUMBER", "qikdRCiUZE", "NUMBER", "HLNOeP", "NUMBER", "xUNBjeDCYNclMp", "NUMBER", "HDB", "NUMBER", "OA", "NUMBER", "oreWcSJE", "NUMBER", "Ma", "NUMBER", "Q", "NUMBER", "wmXJhyURz", "NUMBER", "w", "NUMBER", "ZTsNpjQBSGv", "NUMBER", "uUJziHAclay", "NUMBER", "CyORytmqSFLW", "NUMBER", "MK", "JRCUHli", "NUMBER", "vkPSDsLOPrK", "NUMBER", "uT", "tU", "NUMBER", "EyROhDXfv", "NUMBER", "vupHnhyBn", "NUMBER", "XwGVYR", "NUMBER", "axTSY", "NUMBER", "hTx", "NUMBER", "e", "NUMBER", "gRxkYsGa", "NUMBER", "rnz", "NUMBER", "ZUnF", "NUMBER", "_hOgcifCSuJBO", "GkK", "NUMBER", "naFWWVx", "NUMBER", "u", "NUMBER", "oPUQCO", "NUMBER", "mwCeFF", "NUMBER", "m", "NUMBER", "JELghpgWx", "NUMBER", "fWF", "D", "NUMBER", "f", "NUMBER", "St", "NUMBER", "AH_P", "NUMBER", "RfzHzyKjwuJ", "NUMBER", "t", "NUMBER", "igN", "NUMBER", "e", "NUMBER", "k", "NUMBER", "IUSz_S", "NUMBER", "E", "NUMBER", "lg", "NUMBER", "J", "NUMBER", "qFIvIfBfxK", "NUMBER", "LyFH", "NUMBER", "Piyra", "NUMBER", "jsNZz_", "NUMBER", "FKR", "NUMBER", "whHDTg", "NUMBER", "WrAUYnDvP", "NUMBER", "Rp", "NUMBER", "kEK", "NUMBER", "KAaSU", "NUMBER", "fyJrj", "NUMBER", "aJhoZPvlQBKePRVF", "NUMBER", "wCtcn", "NUMBER", "_XNtsyShPK", "NUMBER", "JlfvQFCQYuHrkE", "NUMBER", "a", "NUMBER", "DAH", "NUMBER", "m", "NUMBER", "Bl", "NUMBER", "RP", "NUMBER", "iN_juEKBt", "NUMBER", "vgk", "NUMBER", "jMKDS", "NUMBER", "ha", "NUMBER", "ZaAjZDWImw", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "tempcont", "tmp", "dehydrated", "iO", "NUMBER", "JdR", "_mktemp", "mktemp", "tmp", "dehydrated", "XXXXXX", "tempheaders", "tmp", "dehydrated", "rXx", "NUMBER", "pq", "n", "set", "e", "post", "h", "e", "a", "d", "post", "g", "e", "t", "post", "p", "o", "s", "t", "curl", "A", "dehydr", "NUMBER", "ted", "git", "master", "after", "NUMBER", "curl", "NUMBER", "s", "w", "http_code", "o", "tmp", "dehydrated", "iO", "NUMBER", "JdR", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "order", "D", "tmp", "dehydrated", "rXx", "NUMBER", "pq", "H", "Content", "Type", "application", "jose", "json", "d", "protected", "eyJhbGciOiAiUlMyNTYiLCAia", "NUMBER", "lkIjogImh", "NUMBER", "dHBzOi", "NUMBER", "vYWNtZS", "NUMBER", "MDIuYXBpLmxldHNlbmNyeXB", "NUMBER", "Lm", "NUMBER", "yZy", "NUMBER", "hY", "NUMBER", "lL", "NUMBER", "FjY", "NUMBER", "QvNDkzNTU", "NUMBER", "NCIsICJ", "NUMBER", "cmwiOiAiaHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMi", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "FjbWUvbmV", "NUMBER", "LW", "NUMBER", "yZGVyIiwgIm", "NUMBER", "vbmNlIjogIlFFUmE", "NUMBER", "cFZoaHZOV", "NUMBER", "g", "NUMBER", "cXQ", "NUMBER", "Skw", "NUMBER", "Y", "NUMBER", "pLeXBfSXJHLUZsRURsTzVTZ", "NUMBER", "LeEkifQ", "payload", "eyJpZGVudGlmaWVycyI", "NUMBER", "IFt", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInRiLWl", "NUMBER", "Zi", "NUMBER", "kZSJ", "NUMBER", "LCB", "NUMBER", "InR", "NUMBER", "cGUiOiAiZG", "NUMBER", "zIiwgInZhbHVlIjogInd", "NUMBER", "dy", "NUMBER", "Yi", "NUMBER", "pdGYuZGUifV", "NUMBER", "signature", "npm", "NUMBER", "fZvoJr", "NUMBER", "vtdwBVPvaz", "NUMBER", "gZGDGDAh", "NUMBER", "B", "NUMBER", "Zlmr", "NUMBER", "Yb", "NUMBER", "AJoTjIwE", "NUMBER", "IMTZkwVfOS", "NUMBER", "qEahnyDHLugsLVh", "NUMBER", "HsIwFOJoKApQLNCHDaMJCBp", "NUMBER", "EqA", "NUMBER", "SLVHuInWVANLGLW", "NUMBER", "QHGOircmx", "NUMBER", "UB", "NUMBER", "yVhMZypWfLKC", "NUMBER", "ls", "NUMBER", "fc", "NUMBER", "OaAyFifHPP", "NUMBER", "oH", "NUMBER", "BCSsOup", "NUMBER", "iVDoRx", "NUMBER", "StgOzmP", "hKyQxUkwyFBE", "NUMBER", "d", "NUMBER", "y", "NUMBER", "qikdRCiUZE", "NUMBER", "HLNOeP", "NUMBER", "xUNBjeDCYNclMp", "NUMBER", "HDB", "NUMBER", "OA", "NUMBER", "oreWcSJE", "NUMBER", "Ma", "NUMBER", "Q", "NUMBER", "wmXJhyURz", "NUMBER", "w", "NUMBER", "ZTsNpjQBSGv", "NUMBER", "uUJziHAclay", "NUMBER", "CyORytmqSFLW", "NUMBER", "MK", "JRCUHli", "NUMBER", "vkPSDsLOPrK", "NUMBER", "uT", "tU", "NUMBER", "EyROhDXfv", "NUMBER", "vupHnhyBn", "NUMBER", "XwGVYR", "NUMBER", "axTSY", "NUMBER", "hTx", "NUMBER", "e", "NUMBER", "gRxkYsGa", "NUMBER", "rnz", "NUMBER", "ZUnF", "NUMBER", "_hOgcifCSuJBO", "GkK", "NUMBER", "naFWWVx", "NUMBER", "u", "NUMBER", "oPUQCO", "NUMBER", "mwCeFF", "NUMBER", "m", "NUMBER", "JELghpgWx", "NUMBER", "fWF", "D", "NUMBER", "f", "NUMBER", "St", "NUMBER", "AH_P", "NUMBER", "RfzHzyKjwuJ", "NUMBER", "t", "NUMBER", "igN", "NUMBER", "e", "NUMBER", "k", "NUMBER", "IUSz_S", "NUMBER", "E", "NUMBER", "lg", "NUMBER", "J", "NUMBER", "qFIvIfBfxK", "NUMBER", "LyFH", "NUMBER", "Piyra", "NUMBER", "jsNZz_", "NUMBER", "FKR", "NUMBER", "whHDTg", "NUMBER", "WrAUYnDvP", "NUMBER", "Rp", "NUMBER", "kEK", "NUMBER", "KAaSU", "NUMBER", "fyJrj", "NUMBER", "aJhoZPvlQBKePRVF", "NUMBER", "wCtcn", "NUMBER", "_XNtsyShPK", "NUMBER", "JlfvQFCQYuHrkE", "NUMBER", "a", "NUMBER", "DAH", "NUMBER", "m", "NUMBER", "Bl", "NUMBER", "RP", "NUMBER", "iN_juEKBt", "NUMBER", "vgk", "NUMBER", "jMKDS", "NUMBER", "ha", "NUMBER", "ZaAjZDWImw", "statuscode", "NUMBER", "curlret", "NUMBER", "set", "e", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "echo", "checking", "pipe", "NUMBER", "checking", "pipe", "NUMBER", "echo", "use", "pipe", "NUMBER", "use", "pipe", "NUMBER", "cat", "tmp", "dehydrated", "rXx", "NUMBER", "pq", "cat", "Schreibfehler", "Daten\u00fcbergabe", "unterbrochen", "broken", "pipe", "result", "remove_lock", "rm", "f", "opt", "dehydrated", "lock", "IT", "WORKED", "D", "The", "Certificate", "was", "created", "sucessfully", "NUMBER", "I", "will", "test", "it", "the", "next", "days", "but", "at", "the", "moment", "that", "could", "be", "the", "solutions", "for", "this", "strange", "problem", "NUMBER", "I", "add", "NUMBER", "domain", "NUMBER", "de", "to", "my", "domains", "NUMBER", "txt", "NUMBER", "After", "run", "NUMBER", "dehydrated", "c", "i", "get", "the", "message", "that", "this", "only", "works", "with", "dns", "NUMBER", "but", "i", "cant", "figure", "out", "how", "dns", "NUMBER", "works", "NUMBER", "I", "have", "a", "debian", "NUMBER", "server", "NUMBER", "can", "you", "explain", "it", "me", "lukas", "NUMBER", "I", "already", "search", "but", "i", "dont", "understand", "how", "i", "can", "figure", "out", "my", "dns", "server", "and", "how", "i", "can", "push", "the", "stuff", "to", "the", "dns", "server", "NUMBER", "dns", "NUMBER", "be", "a", "method", "of", "validating", "your", "control", "of", "a", "domain", "NUMBER", "It", "requires", "the", "use", "of", "a", "hook", "script", "NUMBER", "In", "order", "to", "implement", "this", "you", "will", "need", "to", "keep", "a", "few", "things", "in", "mind", "If", "your", "domains", "NUMBER", "txt", "has", "a", "wildcard", "as", "the", "first", "entry", "on", "a", "line", "you", "will", "need", "to", "set", "an", "alias", "for", "the", "certificate", "NUMBER", "You", "will", "need", "to", "select", "the", "dns", "NUMBER", "challenge", "type", "in", "your", "main", "config", "or", "in", "your", "per", "certificate", "config", "NUMBER", "You", "will", "need", "to", "implement", "a", "hook", "script", "in", "order", "to", "process", "the", "dns", "NUMBER", "challenges", "NUMBER", "Examples", "be", "given", "in", "the", "link", "lukas", "NUMBER", "gave", "you", "NUMBER", "lukas", "NUMBER", "txr", "NUMBER", "I", "think", "my", "dns", "provider", "has", "no", "api", "so", "i", "want", "to", "add", "it", "manuell", "NUMBER", "Should", "no", "problem", "because", "i", "only", "have", "ONE", "domain", "NUMBER", "Where", "i", "can", "find", "a", "tutorial", "for", "manuell", "dns", "NUMBER", "challenge", "Falseee", "I", "don", "t", "know", "where", "you", "can", "find", "a", "tutorial", "for", "that", "but", "there", "be", "DNS", "hooks", "available", "that", "can", "print", "the", "required", "domains", "on", "the", "console", "LINK", "NUMBER", "manual", "or", "email", "them", "to", "you", "LINK", "email", "notify", "hook", "NUMBER", "These", "be", "both", "linked", "from", "the", "examples", "page", "that", "Lukas", "gave", "you", "NUMBER", "I", "have", "personally", "implement", "both", "of", "these", "hooks", "for", "various", "cases", "and", "they", "will", "certainly", "work", "NUMBER", "but", "the", "details", "of", "exactly", "_how_", "they", "work", "will", "depend", "greatly", "on", "your", "own", "environment", "and", "that", "s", "very", "likely", "not", "something", "that", "we", "can", "coach", "you", "through", "in", "this", "environment", "NUMBER", "On", "NUMBER", "Mar", "NUMBER", "at", "NUMBER", "NUMBER", "txr", "NUMBER", "TAG", "write", "dns", "NUMBER", "be", "a", "method", "of", "validating", "your", "control", "of", "a", "domain", "NUMBER", "It", "requires", "the", "use", "of", "a", "hook", "script", "NUMBER", "I", "can", "t", "simply", "add", "the", "txt", "records", "to", "the", "DNS", "entry", "I", "be", "overwhelmed", "by", "the", "choices", "available", "and", "no", "mention", "of", "bind", "which", "I", "use", "for", "DNS", "NUMBER", "The", "issue", "on", "reading", "up", "on", "DNS", "NUMBER", "be", "that", "NUMBER", "be", "a", "challenge", "string", "but", "I", "don", "t", "know", "where", "that", "comes", "from", "NUMBER", "For", "BIND", "you", "will", "need", "to", "enable", "dynamic", "update", "on", "the", "zone", "use", "allow", "update", "or", "update", "policy", "and", "then", "use", "the", "nsupdate", "method", "NUMBER", "For", "a", "beginner", "with", "dynamic", "DNS", "in", "BIND", "I", "d", "suggest", "starting", "off", "with", "allow", "update", "as", "that", "method", "only", "authenticates", "based", "on", "IP", "address", "of", "the", "client", "NUMBER", "However", "use", "update", "policy", "be", "far", "more", "secure", "in", "the", "long", "run", "NUMBER", "An", "example", "of", "an", "allow", "update", "configuration", "add", "INSIDE", "a", "zone", "block", "which", "would", "allow", "dynamic", "update", "from", "clients", "who", "s", "IP", "address", "be", "NUMBER", "allow", "update", "NUMBER", "To", "use", "update", "policy", "instead", "simply", "run", "the", "command", "ddns", "confgen", "on", "your", "command", "line", "will", "give", "you", "some", "basic", "instructions", "and", "generate", "you", "a", "new", "random", "key", "like", "so", "To", "activate", "this", "key", "place", "the", "following", "in", "named", "NUMBER", "conf", "and", "in", "a", "separate", "keyfile", "on", "the", "system", "or", "systems", "from", "which", "nsupdate", "will", "be", "run", "key", "ddns", "key", "algorithm", "hmac", "sha", "NUMBER", "secret", "GnYdTr", "NUMBER", "w", "NUMBER", "nVkqXGympmFeBkcN", "NUMBER", "ysvMz", "v", "NUMBER", "sfk", "NUMBER", "M", "Then", "in", "the", "zone", "statement", "for", "each", "zone", "you", "wish", "to", "dynamically", "update", "place", "an", "update", "policy", "statement", "granting", "update", "permission", "to", "this", "key", "NUMBER", "For", "example", "the", "following", "statement", "grants", "this", "key", "permission", "to", "update", "any", "name", "within", "the", "zone", "update", "policy", "grant", "ddns", "key", "zonesub", "ANY", "After", "the", "keyfile", "has", "be", "placed", "the", "following", "command", "will", "execute", "nsupdate", "use", "this", "key", "nsupdate", "k", "TAG", "Note", "After", "enabling", "dynamic", "update", "for", "a", "zone", "in", "BIND", "you", "will", "not", "be", "able", "to", "simply", "edit", "the", "zone", "file", "and", "run", "rndc", "reload", "to", "update", "the", "DNS", "anymore", "NUMBER", "The", "procedure", "to", "do", "so", "be", "either", "use", "nsupdate", "or", "run", "rndc", "freeze", "TAG", "edit", "the", "zone", "file", "then", "run", "rndc", "thaw", "TAG", "to", "reload", "the", "update", "data", "LwsBtlr", "You", "absolutely", "can", "edit", "DNS", "by", "hand", "NUMBER", "Some", "of", "the", "hook", "scripts", "be", "build", "for", "that", "they", "tell", "you", "what", "TXT", "entries", "to", "make", "and", "wait", "for", "you", "to", "do", "so", "NUMBER", "But", "given", "a", "method", "to", "make", "your", "update", "automate", "like", "jobe", "NUMBER", "has", "outlined", "you", "should", "definitely", "look", "at", "it", "NUMBER", "The", "whole", "point", "of", "this", "be", "to", "have", "an", "Automated", "Certificate", "Management", "Environment", "after", "all", "NUMBER", "On", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "MDT", "Matthew", "Beeching", "TAG", "write", "However", "use", "update", "policy", "be", "far", "more", "secure", "in", "the", "long", "run", "NUMBER", "Is", "there", "LE", "specific", "documentation", "on", "how", "to", "do", "this", "update", "policy", "isn", "t", "something", "I", "ve", "run", "into", "before", "I", "be", "not", "on", "dynamic", "DNS", "NUMBER", "I", "m", "trying", "use", "ACMEv", "NUMBER", "and", "wildcard", "and", "I", "have", "some", "issue", "NUMBER", "My", "domains", "NUMBER", "txt", "contains", "something", "like", "foo", "NUMBER", "domain", "NUMBER", "tld", "NUMBER", "foo", "NUMBER", "domain", "NUMBER", "tld", "bar", "NUMBER", "domain", "NUMBER", "tld", "Config", "for", "hook", "CHALLENGETYPE", "dns", "NUMBER", "HOOK", "opt", "pdns_api", "NUMBER", "sh", "pdns_api", "NUMBER", "sh", "HOOK_CHAIN", "yes", "When", "deploying", "use", "pdns_api", "NUMBER", "sh", "dns", "hook", "I", "get", "created", "two", "entries", "with", "a", "different", "challenge", "_acme", "challenge", "NUMBER", "foo", "TXT", "SOME_VALUE", "NUMBER", "_acme", "challenge", "NUMBER", "bar", "TXT", "SOME_VALUE", "NUMBER", "But", "in", "logs", "I", "get", "Processing", "foo", "NUMBER", "domain", "NUMBER", "tld", "with", "alternative", "names", "NUMBER", "domain", "NUMBER", "tld", "bar", "NUMBER", "domain", "NUMBER", "tld", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Received", "NUMBER", "authorizations", "URLs", "from", "the", "CA", "Handling", "authorization", "for", "foo", "NUMBER", "domain", "NUMBER", "tld", "Handling", "authorization", "for", "bar", "NUMBER", "domain", "NUMBER", "tld", "Handling", "authorization", "for", "foo", "NUMBER", "domain", "NUMBER", "tld", "NUMBER", "pending", "challenge", "s", "Deploying", "challenge", "tokens", "NUMBER", "Responding", "to", "challenge", "for", "foo", "NUMBER", "domain", "NUMBER", "tld", "authorization", "NUMBER", "ERROR", "Challenge", "be", "invalid", "returned", "invalid", "result", "type", "dns", "NUMBER", "status", "invalid", "error", "type", "urn", "ietf", "params", "acme", "error", "unauthorized", "detail", "Incorrect", "TXT", "record", "SOME_VALUE", "NUMBER", "find", "at", "_acme", "challenge", "NUMBER", "foo", "NUMBER", "domain", "NUMBER", "tld", "status", "NUMBER", "url", "LINK", "staging", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "xxx", "xxx", "token", "xxx", "keyAuthorization", "xxx", "I", "also", "tried", "first", "with", "the", "production", "ACMEv", "NUMBER", "and", "get", "the", "same", "issue", "NUMBER", "I", "run", "with", "debug", "in", "config", "file", "and", "at", "one", "point", "it", "shows", "Name", "_acme", "challenge", "NUMBER", "bar", "NUMBER", "domain", "NUMBER", "tld", "NUMBER", "Token", "SOME_VALUE", "NUMBER", "Zone", "domain", "NUMBER", "tld", "NUMBER", "Name", "_acme", "challenge", "NUMBER", "foo", "NUMBER", "domain", "NUMBER", "tld", "NUMBER", "Token", "SOME_VALUE", "NUMBER", "Zone", "domain", "NUMBER", "tld", "NUMBER", "Name", "_acme", "challenge", "NUMBER", "foo", "NUMBER", "domain", "NUMBER", "tld", "NUMBER", "Token", "SOME_VALUE", "NUMBER", "Zone", "domain", "NUMBER", "tld", "NUMBER", "I", "see", "the", "same", "thing", "be", "push", "to", "pdns", "with", "obviously", "only", "the", "last", "challenge", "in", "the", "update", "list", "be", "accepted", "for", "foo", "NUMBER", "domain", "NUMBER", "tld", "NUMBER", "Is", "it", "support", "to", "have", "a", "cert", "with", "foo", "NUMBER", "domain", "NUMBER", "tld", "NUMBER", "foo", "NUMBER", "domain", "NUMBER", "tld", "bar", "NUMBER", "domain", "NUMBER", "tld", "or", "there", "be", "a", "bug", "somewhere", "Also", "I", "can", "t", "everytime", "reproduce", "it", "properly", "because", "randomly", "I", "only", "get", "a", "challenge", "generate", "for", "foo", "NUMBER", "domain", "NUMBER", "tld", "and", "nothing", "for", "bar", "NUMBER", "domain", "NUMBER", "tld", "Your", "hook", "and", "or", "DNS", "software", "may", "need", "to", "be", "update", "NUMBER", "dehydrated", "be", "generating", "the", "correct", "values", "for", "your", "DNS", "records", "NUMBER", "ACME", "validates", "a", "wildcard", "domain", "NUMBER", "foo", "NUMBER", "domain", "NUMBER", "tld", "use", "the", "same", "DNS", "record", "name", "as", "for", "the", "parent", "non", "wildcard", "domain", "foo", "NUMBER", "domain", "NUMBER", "tld", "but", "with", "a", "different", "record", "_value_", "NUMBER", "Your", "debug", "file", "be", "correctly", "showing", "you", "that", "you", "will", "need", "to", "have", "two", "different", "tokens", "uploaded", "but", "both", "with", "the", "same", "name", "NUMBER", "This", "be", "allowable", "under", "DNS", "NUMBER", "For", "example", "if", "you", "look", "for", "TXT", "records", "under", "google", "NUMBER", "com", "NUMBER", "you", "will", "see", "two", "of", "them", "NUMBER", "One", "be", "an", "SPF", "record", "the", "other", "be", "a", "Docusign", "record", "NUMBER", "When", "validating", "your", "certificate", "ACME", "will", "check", "for", "all", "records", "under", "the", "required", "name", "NUMBER", "One", "will", "match", "the", "wildcard", "validator", "and", "the", "other", "will", "match", "the", "non", "wildcard", "validator", "NUMBER", "I", "don", "t", "know", "where", "the", "issue", "here", "lies", "your", "hook", "may", "be", "calling", "an", "update", "operation", "in", "pdns", "which", "overwrites", "the", "first", "token", "or", "pdns", "may", "not", "correctly", "support", "multiple", "TXT", "records", "for", "the", "same", "DNS", "name", "NUMBER", "But", "the", "issue", "do", "not", "lie", "within", "dehydrated", "NUMBER", "If", "you", "have", "successfully", "validated", "bar", "NUMBER", "domain", "NUMBER", "tld", "you", "may", "not", "be", "get", "a", "challenge", "generate", "for", "it", "on", "follow", "up", "runs", "since", "ACME", "will", "re", "use", "validated", "identifiers", "without", "requiring", "reauthorization", "at", "least", "within", "a", "certain", "time", "frame", "NUMBER", "Actually", "it", "doesn", "t", "need", "the", "wildcard", "to", "break", "at", "all", "NUMBER", "I", "ve", "find", "that", "it", "needs", "NUMBER", "things", "to", "be", "in", "place", "at", "the", "same", "time", "NUMBER", "If", "I", "use", "v", "NUMBER", "endpoint", "either", "prod", "or", "staging", "AND", "Use", "top", "level", "domain", "i", "NUMBER", "e", "NUMBER", "foobar", "NUMBER", "com", "AND", "Use", "an", "alias", "I", "get", "this", "error", "NUMBER", "The", "NUMBER", "one", "suggests", "that", "maybe", "it", "s", "something", "messed", "up", "dehydrated", "itself", "NUMBER", "If", "any", "of", "this", "isn", "t", "true", "it", "works", "fine", "NUMBER", "bviktor", "If", "you", "re", "get", "an", "error", "when", "use", "v", "NUMBER", "validating", "the", "domain", "apex", "and", "use", "an", "alias", "but", "NOT", "validating", "a", "wildcard", "you", "may", "want", "to", "open", "a", "separate", "issue", "NUMBER", "This", "one", "be", "specific", "to", "validating", "a", "wildcard", "and", "non", "wildcard", "at", "the", "same", "time", "whether", "there", "s", "an", "alias", "in", "use", "or", "not", "NUMBER", "My", "point", "be", "that", "these", "be", "most", "likely", "relate", "to", "the", "same", "root", "problem", "NUMBER", "In", "fact", "having", "foo", "NUMBER", "com", "foo", "NUMBER", "com", "Can", "be", "substituted", "with", "foo", "NUMBER", "com", "NUMBER", "foo", "NUMBER", "com", "They", "both", "result", "in", "the", "same", "exact", "problem", "assuming", "the", "other", "NUMBER", "conditions", "be", "also", "present", "of", "course", "wildcard", "cert", "implies", "v", "NUMBER", "NUMBER", "While", "foo", "NUMBER", "com", "Or", "NUMBER", "foo", "NUMBER", "com", "Or", "foo", "NUMBER", "com", "bar", "NUMBER", "foo", "NUMBER", "com", "All", "work", "NUMBER", "So", "it", "seems", "an", "issue", "with", "aliases", "and", "maybe", "the", "same", "mechanism", "be", "in", "place", "when", "a", "wildcard", "cert", "be", "present", "after", "the", "root", "domain", "NUMBER", "That", "s", "not", "correct", "NUMBER", "For", "one", "multiple", "people", "report", "that", "request", "a", "certificate", "with", "wildcard", "and", "non", "wildcard", "_works_", "NUMBER", "This", "issue", "be", "specific", "to", "the", "pdns", "hook", "NUMBER", "Aliases", "be", "processed", "differently", "NUMBER", "Your", "second", "example", "of", "foo", "NUMBER", "com", "NUMBER", "foo", "NUMBER", "com", "do", "not", "use", "an", "alias", "at", "all", "so", "it", "won", "t", "be", "triggering", "whatever", "be", "cause", "your", "alias", "issue", "to", "occur", "NUMBER", "Aliases", "be", "not", "a", "substitute", "for", "a", "wildcard", "and", "wildcards", "cannot", "be", "substituted", "for", "aliases", "NUMBER", "For", "one", "multiple", "people", "report", "that", "request", "a", "certificate", "with", "wildcard", "and", "non", "wildcard", "works", "NUMBER", "This", "issue", "be", "specific", "to", "the", "pdns", "hook", "NUMBER", "It", "s", "definitely", "not", "specific", "to", "the", "pdns", "hook", "because", "it", "happens", "to", "me", "with", "the", "certzure", "hook", "NUMBER", "Aliases", "be", "processed", "differently", "NUMBER", "Your", "second", "example", "of", "foo", "NUMBER", "com", "NUMBER", "foo", "NUMBER", "com", "do", "not", "use", "an", "alias", "at", "all", "so", "it", "won", "t", "be", "triggering", "whatever", "be", "cause", "your", "alias", "issue", "to", "occur", "NUMBER", "But", "dehydrated", "needs", "to", "generate", "a", "name", "for", "it", "doesn", "t", "it", "It", "won", "t", "create", "a", "foo", "NUMBER", "com", "NUMBER", "foo", "NUMBER", "com", "folder", "it", "ll", "be", "foo", "NUMBER", "com", "NUMBER", "Just", "like", "with", "an", "alias", "NUMBER", "Okay", "then", "aliases", "have", "nothing", "to", "do", "with", "it", "NUMBER", "This", "issue", "be", "specifically", "about", "validating", "wildcards", "and", "non", "wildcards", "in", "the", "same", "call", "NUMBER", "Does", "the", "certzure", "hook", "allow", "you", "to", "create", "multiple", "records", "with", "the", "same", "DNS", "name", "simultaneously", "Can", "you", "verify", "that", "you", "can", "see", "all", "records", "created", "via", "the", "hook", "in", "your", "DNS", "server", "or", "be", "some", "miss", "It", "can", "t", "create", "multiple", "records", "but", "I", "don", "t", "understand", "why", "it", "s", "only", "a", "requirement", "for", "the", "above", "NUMBER", "conditions", "at", "the", "same", "time", "NUMBER", "I", "mean", "foo", "NUMBER", "com", "bar", "NUMBER", "foo", "NUMBER", "com", "Also", "requires", "NUMBER", "records", "but", "dehydrated", "deploys", "and", "validates", "them", "one", "by", "one", "be", "it", "v", "NUMBER", "or", "v", "NUMBER", "Why", "change", "this", "if", "having", "an", "alias", "_or_", "a", "toplevel", "wildcard", "Also", "why", "would", "you", "need", "NUMBER", "records", "_at", "the", "same", "time_", "for", "foo", "NUMBER", "com", "foo", "NUMBER", "com", "It", "s", "most", "certainly", "just", "one", "record", "NUMBER", "This", "multiple", "records", "at", "once", "reasoning", "doesn", "t", "add", "up", "for", "me", "NUMBER", "Let", "alone", "aliases", "have", "nothing", "to", "do", "with", "it", "NUMBER", "Yes", "they", "do", "NUMBER", "There", "s", "no", "multiple", "records", "there", "s", "no", "wildcard", "yet", "it", "still", "breaks", "NUMBER", "I", "remove", "the", "alias", "and", "it", "starts", "work", "NUMBER", "This", "issue", "be", "for", "validating", "a", "wildcard", "and", "non", "wildcard", "domain", "at", "the", "same", "time", "NUMBER", "Specifically", "this", "be", "use", "HOOK_CHAIN", "yes", "NUMBER", "Which", "means", "the", "hook", "must", "be", "capable", "of", "deploying", "two", "TXT", "records", "both", "of", "the", "form", "_acme", "challenge", "NUMBER", "foo", "NUMBER", "com", "NUMBER", "but", "with", "two", "different", "tokens", "NUMBER", "One", "will", "validate", "the", "wildcard", "and", "one", "will", "validate", "the", "non", "wildcard", "NUMBER", "If", "you", "re", "validating", "foo", "NUMBER", "com", "and", "bar", "NUMBER", "foo", "NUMBER", "com", "and", "they", "be", "be", "validated", "one", "by", "one", "instead", "of", "at", "the", "same", "time", "then", "you", "would", "appear", "to", "not", "be", "use", "HOOK_CHAIN", "yes", "NUMBER", "And", "even", "if", "you", "were", "you", "wouldn", "t", "be", "uploading", "two", "records", "of", "the", "same", "name", "you", "would", "have", "two", "names", "one", "of", "_acme", "challenge", "NUMBER", "foo", "NUMBER", "com", "NUMBER", "and", "one", "of", "_acme", "challenge", "NUMBER", "bar", "NUMBER", "foo", "NUMBER", "com", "NUMBER", "NUMBER", "If", "you", "re", "having", "troubles", "with", "an", "alias", "that", "s", "different", "again", "NUMBER", "An", "alias", "be", "use", "as", "a", "directory", "name", "certificate", "specific", "config", "filename", "no", "more", "and", "no", "less", "NUMBER", "It", "do", "not", "impact", "the", "validation", "records", "at", "all", "NUMBER", "So", "if", "you", "re", "experience", "an", "issue", "with", "an", "alias", "it", "should", "be", "put", "in", "a", "separate", "issue", "so", "it", "doesn", "t", "get", "lost", "in", "the", "discussion", "over", "validation", "records", "NUMBER", "Is", "there", "documentation", "about", "how", "to", "do", "so", "Currently", "this", "be", "what", "happens", "deploy_challenge", "A", "deploy_challenge", "B", "clean_challenge", "A", "valid", "clean_challenge", "B", "invalid", "Which", "be", "kinda", "weird", "to", "me", "because", "if", "deploy_challenge", "B", "overwrote", "A", "with", "B", "which", "it", "did", "then", "I", "d", "assume", "that", "clean_challenge", "A", "should", "fail", "and", "clean_challenge", "B", "should", "succeed", "NUMBER", "Unless", "I", "m", "miss", "something", "here", "NUMBER", "Do", "I", "have", "to", "add", "the", "token", "to", "the", "same", "_acme", "challenge", "record", "as", "a", "NUMBER", "value", "But", "then", "which", "clean_challenge", "should", "delete", "which", "value", "Will", "try", "to", "port", "certzure", "to", "azure", "cli", "v", "NUMBER", "coz", "I", "don", "t", "feel", "like", "messing", "around", "with", "Java", "too", "much", "NUMBER", "WIll", "make", "test", "and", "debugging", "easier", "too", "NUMBER", "Then", "I", "ll", "get", "back", "to", "this", "issue", "NUMBER", "In", "the", "meanwhile", "what", "s", "hook", "chaining", "and", "how", "do", "I", "use", "it", "Google", "doesn", "t", "show", "up", "much", "NUMBER", "For", "those", "affected", "by", "this", "issue", "there", "s", "a", "fix", "for", "pdns_api", "NUMBER", "sh", "LINK", "_api", "NUMBER", "sh", "pull", "NUMBER", "I", "think", "that", "this", "code", "will", "be", "more", "usable", "in", "production", "NUMBER", "If", "I", "switch", "to", "dns", "NUMBER", "generation", "of", "all", "certificates", "this", "be", "not", "very", "convenient", "NUMBER", "Improve", "the", "documentation", "on", "how", "to", "use", "wildcard", "domains", "NUMBER", "Change", "Id", "Ie", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "bb", "NUMBER", "d", "NUMBER", "a", "NUMBER", "b", "NUMBER", "c", "NUMBER", "d", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "NUMBER", "The", "new", "CA", "URL", "be", "already", "the", "default", "so", "the", "first", "part", "of", "your", "PR", "would", "probably", "confuse", "some", "people", "NUMBER", "The", "domains", "NUMBER", "txt", "change", "be", "a", "nice", "touch", "though", "NUMBER", "Kinda", "obvious", "but", "probably", "still", "a", "good", "idea", "NUMBER", "I", "m", "somewhat", "concerned", "that", "the", "update", "would", "be", "confusing", "NUMBER", "We", "have", "the", "note", "about", "needing", "to", "use", "an", "alias", "if", "the", "wildcard", "be", "the", "first", "or", "only", "domain", "NUMBER", "followed", "by", "a", "for", "example", "that", "doesn", "t", "actually", "provide", "an", "example", "of", "that", "behavior", "at", "all", "NUMBER", "The", "example", "given", "be", "good", "for", "a", "certificate", "which", "has", "the", "wildcard", "as", "not", "the", "first", "or", "only", "domain", "NUMBER", "Set", "as", "an", "example", "implicitly", "of", "the", "alias", "functionality", "it", "could", "just", "be", "more", "confusing", "NUMBER", "I", "m", "somewhat", "concerned", "that", "the", "update", "would", "be", "confusing", "NUMBER", "We", "have", "the", "note", "about", "needing", "to", "use", "an", "alias", "if", "the", "wildcard", "be", "the", "first", "or", "only", "domain", "NUMBER", "followed", "by", "a", "for", "example", "that", "doesn", "t", "actually", "provide", "an", "example", "of", "that", "behavior", "at", "all", "NUMBER", "Can", "you", "give", "an", "example", "of", "what", "you", "think", "it", "should", "be", "That", "was", "the", "only", "way", "I", "could", "figure", "out", "how", "to", "make", "a", "wildcard", "work", "NUMBER", "Kinda", "obvious", "but", "probably", "still", "a", "good", "idea", "NUMBER", "Well", "since", "it", "took", "me", "about", "NUMBER", "minutes", "trying", "to", "figure", "it", "out", "it", "didn", "t", "seem", "obvious", "to", "me", "I", "first", "tried", "NUMBER", "NUMBER", "service", "NUMBER", "example", "NUMBER", "com", "Then", "NUMBER", "service", "NUMBER", "example", "NUMBER", "com", "service", "NUMBER", "example", "NUMBER", "com", "Then", "start", "add", "debug", "code", "before", "I", "figured", "it", "out", "NUMBER", "uhm", "but", "it", "state", "that", "so", "right", "at", "the", "end", "of", "the", "document", "NUMBER", "anyways", "i", "agree", "that", "this", "part", "of", "the", "change", "doesn", "t", "hurt", "while", "the", "first", "part", "probably", "would", "NUMBER", "uhm", "but", "it", "state", "that", "so", "right", "at", "the", "end", "of", "the", "document", "NUMBER", "anyways", "i", "agree", "that", "this", "part", "of", "the", "change", "doesn", "t", "hurt", "while", "the", "first", "part", "probably", "would", "NUMBER", "That", "be", "my", "point", "NUMBER", "It", "didn", "t", "make", "sense", "to", "me", "NUMBER", "In", "one", "part", "of", "the", "document", "it", "talks", "about", "alternative", "names", "in", "another", "part", "it", "talks", "about", "alias", "NUMBER", "I", "m", "not", "sure", "if", "they", "be", "the", "same", "thing", "or", "not", "NUMBER", "Certificates", "with", "a", "wildcard", "domain", "as", "first", "or", "only", "name", "require", "an", "alias", "to", "be", "set", "NUMBER", "Aliases", "can", "t", "start", "with", "NUMBER", "NUMBER", "To", "me", "that", "implied", "that", "the", "wildcard", "domain", "be", "first", "since", "it", "uses", "the", "word", "first", "NUMBER", "The", "new", "CA", "URL", "be", "already", "the", "default", "so", "the", "first", "part", "of", "your", "PR", "would", "probably", "confuse", "some", "people", "NUMBER", "Okay", "NUMBER", "One", "question", "though", "NUMBER", "If", "someone", "has", "already", "be", "use", "dehydrated", "do", "they", "need", "to", "change", "the", "CA", "or", "be", "it", "already", "change", "When", "I", "change", "it", "then", "I", "had", "to", "register", "and", "accept", "the", "terms", "NUMBER", "So", "it", "made", "me", "think", "it", "was", "not", "use", "the", "v", "NUMBER", "endpoint", "NUMBER", "Can", "you", "give", "an", "example", "of", "what", "you", "think", "it", "should", "be", "That", "was", "the", "only", "way", "I", "could", "figure", "out", "how", "to", "make", "a", "wildcard", "work", "NUMBER", "For", "example", "you", "can", "use", "service", "NUMBER", "example", "NUMBER", "com", "NUMBER", "service", "NUMBER", "example", "NUMBER", "com", "to", "create", "a", "certificate", "which", "covers", "both", "the", "domain", "itself", "and", "all", "subdomains", "under", "it", "NUMBER", "Which", "be", "an", "extremely", "common", "use", "case", "The", "certificate", "directory", "name", "will", "be", "service", "NUMBER", "example", "NUMBER", "com", "NUMBER", "If", "you", "wish", "to", "create", "a", "certificate", "which", "_starts", "with_", "a", "wildcard", "domain", "you", "must", "use", "an", "alias", "NUMBER", "Your", "domains", "NUMBER", "txt", "file", "would", "then", "look", "like", "this", "NUMBER", "service", "NUMBER", "example", "NUMBER", "com", "certificate", "alias", "In", "this", "case", "the", "certificate", "directory", "name", "will", "be", "certificate", "alias", "The", "reason", "why", "this", "be", "required", "be", "because", "the", "first", "domain", "of", "a", "certificate", "be", "usually", "use", "as", "the", "directory", "name", "NUMBER", "However", "if", "the", "first", "domain", "on", "a", "certificate", "be", "a", "wildcard", "that", "would", "result", "in", "a", "directory", "name", "of", "NUMBER", "service", "NUMBER", "example", "NUMBER", "com", "NUMBER", "As", "the", "star", "character", "be", "also", "use", "in", "many", "filesystems", "to", "represent", "a", "wildcard", "it", "can", "lead", "to", "confusion", "or", "unexpect", "unusual", "behavior", "while", "trying", "to", "navigate", "the", "filesystem", "NUMBER", "For", "this", "reason", "if", "you", "wish", "to", "use", "a", "wildcard", "domain", "as", "the", "first", "domain", "in", "a", "certificate", "an", "alias", "must", "be", "set", "so", "that", "the", "directory", "in", "the", "filesystem", "can", "be", "use", "without", "potential", "issue", "NUMBER", "If", "someone", "has", "already", "be", "use", "dehydrated", "do", "they", "need", "to", "change", "the", "CA", "or", "be", "it", "already", "change", "If", "the", "CA", "be", "set", "to", "Let", "s", "Encrypt", "s", "V", "NUMBER", "endpoint", "whether", "manually", "or", "by", "default", "_and_", "an", "account", "exists", "for", "the", "V", "NUMBER", "endpoint", "dehydrated", "will", "symlink", "the", "V", "NUMBER", "account", "to", "a", "V", "NUMBER", "account", "transparently", "NUMBER", "txr", "NUMBER", "Thanks", "That", "cleared", "up", "things", "a", "lot", "for", "me", "NUMBER", "I", "will", "make", "some", "update", "JohnVillalovos", "I", "like", "the", "new", "change", "I", "think", "that", "s", "much", "clearer", "NUMBER", "There", "s", "one", "more", "thing", "I", "want", "to", "mention", "NUMBER", "It", "s", "not", "so", "much", "a", "documentation", "issue", "so", "much", "as", "an", "additional", "point", "that", "_may_", "influence", "the", "documentation", "or", "merit", "additional", "explanation", "NUMBER", "The", "catch", "be", "this", "a", "certificate", "for", "NUMBER", "service", "NUMBER", "example", "NUMBER", "com", "be", "not", "valid", "for", "service", "NUMBER", "example", "NUMBER", "com", "NUMBER", "That", "wildcard", "be", "only", "valid", "for", "the", "subdomains", "_under_", "service", "NUMBER", "example", "NUMBER", "com", "NUMBER", "Which", "be", "why", "it", "s", "so", "common", "to", "see", "a", "certificate", "which", "has", "service", "NUMBER", "example", "NUMBER", "com", "and", "then", "NUMBER", "service", "NUMBER", "example", "NUMBER", "com", "as", "an", "alternate", "name", "NUMBER", "In", "which", "case", "no", "alias", "be", "needed", "at", "all", "NUMBER", "That", "s", "why", "dehydrated", "requires", "an", "alias", "rather", "than", "simply", "stripping", "off", "the", "wildcard", "character", "NUMBER", "Which", "was", "a", "potential", "solution", "discussed", "at", "the", "time", "NUMBER", "This", "be", "not", "to", "mention", "the", "fact", "that", "if", "you", "have", "a", "certificate", "for", "service", "NUMBER", "example", "NUMBER", "com", "as", "well", "now", "the", "two", "certificates", "will", "collide", "NUMBER", "My", "_suggestion_", "would", "be", "to", "give", "an", "example", "with", "a", "proper", "alias", "rather", "than", "simply", "stripping", "off", "the", "wildcard", "character", "NUMBER", "You", "may", "even", "wish", "to", "include", "the", "note", "about", "the", "fact", "that", "a", "wildcard", "doesn", "t", "cover", "the", "parent", "domain", "I", "know", "that", "caught", "me", "by", "surprise", "the", "first", "time", "I", "run", "into", "it", "NUMBER", "Because", "my", "guess", "be", "the", "vast", "majority", "of", "users", "be", "going", "to", "want", "something", "that", "covers", "service", "NUMBER", "example", "NUMBER", "com", "and", "everything", "underneath", "it", "NUMBER", "The", "catch", "be", "this", "a", "certificate", "for", "NUMBER", "service", "NUMBER", "example", "NUMBER", "com", "be", "not", "valid", "for", "service", "NUMBER", "example", "NUMBER", "com", "NUMBER", "That", "wildcard", "be", "only", "valid", "for", "the", "subdomains", "under", "service", "NUMBER", "example", "NUMBER", "com", "NUMBER", "Which", "be", "why", "it", "s", "so", "common", "to", "see", "a", "certificate", "which", "has", "service", "NUMBER", "example", "NUMBER", "com", "and", "then", "NUMBER", "service", "NUMBER", "example", "NUMBER", "com", "as", "an", "alternate", "name", "NUMBER", "In", "which", "case", "no", "alias", "be", "needed", "at", "all", "NUMBER", "I", "ll", "add", "a", "note", "that", "about", "NUMBER", "service", "NUMBER", "example", "NUMBER", "com", "be", "not", "valid", "for", "service", "NUMBER", "example", "NUMBER", "com", "My", "suggestion", "would", "be", "to", "give", "an", "example", "with", "a", "proper", "alias", "rather", "than", "simply", "stripping", "off", "the", "wildcard", "character", "NUMBER", "You", "may", "even", "wish", "to", "include", "the", "note", "about", "the", "fact", "that", "a", "wildcard", "doesn", "t", "cover", "the", "parent", "domain", "I", "know", "that", "caught", "me", "by", "surprise", "the", "first", "time", "I", "run", "into", "it", "NUMBER", "Because", "my", "guess", "be", "the", "vast", "majority", "of", "users", "be", "going", "to", "want", "something", "that", "covers", "service", "NUMBER", "example", "NUMBER", "com", "and", "everything", "underneath", "it", "NUMBER", "Is", "the", "example", "at", "the", "bottom", "use", "an", "alternative", "name", "not", "good", "I", "can", "make", "a", "note", "that", "it", "support", "both", "NUMBER", "service", "NUMBER", "example", "NUMBER", "com", "and", "service", "NUMBER", "example", "NUMBER", "com", "I", "ll", "push", "up", "a", "new", "patch", "NUMBER", "My", "suggestion", "would", "be", "to", "give", "an", "example", "with", "a", "proper", "alias", "rather", "than", "simply", "stripping", "off", "the", "wildcard", "character", "NUMBER", "I", "didn", "t", "quite", "understand", "this", "at", "first", "but", "I", "think", "I", "do", "now", "NUMBER", "I", "update", "the", "patch", "to", "take", "that", "into", "account", "NUMBER", "The", "certificate", "retrieved", "from", "Let", "s", "Encrypt", "ACMEv", "NUMBER", "endpoint", "both", "staging", "and", "production", "contains", "both", "the", "end", "certificate", "and", "the", "intermediate", "certificate", "which", "be", "conforming", "to", "NUMBER", "of", "the", "ACME", "draft", "NUMBER", "As", "a", "result", "now", "the", "fullchain", "NUMBER", "pem", "file", "contains", "the", "intermediate", "certificate", "twice", "NUMBER", "Also", "worth", "noting", "be", "that", "the", "intermediate", "certificate", "include", "in", "the", "cert", "TAG", "NUMBER", "pem", "file", "seems", "to", "have", "Windows", "EOL", "while", "the", "certificate", "above", "has", "proper", "UNIX", "EOL", "so", "there", "a", "newline", "type", "mix", "in", "the", "file", "this", "be", "on", "RHEL", "NUMBER", "NUMBER", "Also", "worth", "noting", "be", "that", "the", "intermediate", "certificate", "include", "in", "the", "cert", "TAG", "NUMBER", "pem", "file", "seems", "to", "have", "Windows", "EOL", "thias", "I", "think", "this", "be", "a", "mistake", "on", "the", "Let", "s", "Encrypt", "side", "NUMBER", "I", "opened", "LINK", "to", "track", "fix", "this", "NUMBER", "I", "think", "you", "could", "just", "process", "the", "file", "use", "the", "openssl", "x", "NUMBER", "module", "NUMBER", "On", "my", "system", "version", "NUMBER", "g", "the", "following", "command", "yields", "the", "right", "result", "openssl", "x", "NUMBER", "in", "cert", "NUMBER", "pem", "out", "cert", "NUMBER", "pem", "Also", "worth", "noting", "be", "that", "the", "intermediate", "certificate", "include", "in", "the", "cert", "TAG", "NUMBER", "pem", "file", "seems", "to", "have", "Windows", "EOL", "while", "the", "certificate", "above", "has", "proper", "UNIX", "EOL", "so", "there", "a", "newline", "type", "mix", "in", "the", "file", "this", "be", "on", "RHEL", "NUMBER", "NUMBER", "thias", "This", "be", "fix", "and", "should", "be", "consistently", "UNIX", "newlines", "now", "NUMBER", "Thanks", "for", "flagging", "it", "NUMBER", "lukas", "NUMBER", "cpu", "Thanks", "for", "the", "quick", "fix", "NUMBER", "Let", "s", "Encrypt", "with", "wildcard", "certificates", "rocks", "Thank", "you", "sooo", "much", "for", "your", "great", "work", "on", "your", "respective", "projects", "it", "s", "MUCH", "appreciated", "NUMBER", "Hi", "Lukas", "First", "of", "all", "great", "piece", "of", "code", "NUMBER", "I", "really", "really", "like", "it", "NUMBER", "In", "my", "certificates", "I", "like", "to", "have", "a", "complete", "Distinguished", "Name", "Subject", "containing", "company", "name", "state", "locality", "and", "so", "on", "NUMBER", "Nothing", "really", "outstanding", "NUMBER", "I", "was", "pleased", "to", "see", "that", "there", "be", "an", "OPENSSL_CNF", "variable", "in", "the", "config", "to", "link", "to", "a", "corresponding", "OpenSSL", "template", "NUMBER", "Unfortunately", "in", "your", "function", "creating", "your", "CSR", "sign_domain", "line", "NUMBER", "as", "you", "call", "openssl", "you", "use", "the", "option", "subj", "which", "replaces", "whatever", "configured", "DN", "with", "what", "you", "give", "then", "NUMBER", "In", "dehydrator", "s", "case", "the", "common", "name", "only", "NUMBER", "An", "easy", "fix", "to", "this", "could", "be", "instead", "of", "giving", "the", "CN", "to", "openssl", "via", "an", "argument", "simply", "stick", "it", "into", "the", "temporary", "openssl", "config", "you", "already", "have", "tmp_openssl_cnf", "NUMBER", "Let", "me", "know", "if", "you", "be", "interested", "in", "code", "contributions", "or", "prefer", "to", "fix", "simples", "like", "this", "yourself", "NUMBER", "Greets", "Stefan", "Are", "you", "use", "dehydrated", "with", "Let", "s", "Encrypt", "If", "so", "as", "I", "start", "in", "issue", "NUMBER", "it", "be", "worth", "noting", "LetsEncrypt", "strips", "out", "any", "field", "from", "the", "subject", "identifier", "other", "then", "a", "commonName", "CN", "containing", "the", "primary", "host", "name", "of", "the", "certificate", "NUMBER", "So", "even", "if", "your", "CSR", "contained", "them", "the", "certificate", "issue", "by", "LetsEncrypt", "would", "not", "NUMBER", "Basically", "the", "only", "time", "allowing", "additional", "field", "in", "the", "subject", "would", "be", "acceptable", "be", "if", "you", "re", "use", "dehydrated", "with", "an", "ACME", "certificate", "authority", "service", "that", "allows", "field", "other", "then", "commonName", "CN", "in", "the", "subject", "Hi", "jobe", "NUMBER", "Hi", "lukas", "NUMBER", "Sorry", "for", "wasting", "you", "time", "wasn", "t", "aware", "of", "Lets", "Encrypt", "be", "stripping", "the", "DN", "NUMBER", "WHY", "Whatever", "thank", "you", "guys", "NUMBER", "Greets", "Stefan", "NUMBER", "D", "I", "already", "checked", "the", "docs", "NUMBER", "nginx", "and", "apache", "can", "do", "it", "NUMBER", "I", "will", "find", "out", "if", "haproxy", "can", "do", "it", "soon", "NUMBER", "Haproxy", "can", "do", "it", "perfectly", "provide", "NUMBER", "The", "file", "be", "processed", "as", "before", "FULLCHAINFILE", "KEYFILE", "be", "combined", "into", "one", "NUMBER", "pem", "NUMBER", "The", "resulting", "file", "be", "named", "as", "example", "NUMBER", "com", "NUMBER", "pem", "NUMBER", "rsa", "example", "NUMBER", "com", "NUMBER", "pem", "NUMBER", "ecdsa", "I", "currently", "have", "a", "setup", "like", "this", "run", "by", "use", "two", "configs", "sharing", "the", "same", "account", "NUMBER", "Such", "an", "option", "would", "prove", "rather", "useful", "NUMBER", "For", "doing", "bundling", "the", "file", "endings", "be", "required", "and", "cannot", "be", "configured", "to", "be", "different", "NUMBER", "However", "if", "a", "setup", "only", "uses", "an", "RSA", "ECDSA", "certificate", "it", "doesn", "t", "require", "the", "extension", "NUMBER", "The", "config", "manual", "explains", "how", "it", "works", "towards", "the", "lower", "half", "of", "the", "relevant", "section", "LINK", "dconv", "NUMBER", "configuration", "NUMBER", "html", "NUMBER", "crt", "NUMBER", "Nginx", "can", "do", "it", "but", "you", "can", "t", "use", "it", "with", "ssl_stapling_file", "NUMBER", "As", "Nginx", "allows", "multiple", "ssl_certificate", "statements", "but", "only", "allows", "one", "stapling", "file", "NUMBER", "Postfix", "can", "do", "it", "as", "well", "NUMBER", "I", "intend", "to", "use", "it", "with", "Postfix", "and", "look", "forward", "to", "this", "feature", "NUMBER", "NUMBER", "I", "d", "like", "to", "use", "this", "feature", "as", "well", "NUMBER", "Would", "be", "great", "to", "have", "it", "NUMBER", "Thanks", "for", "your", "work", "lukas", "NUMBER", "would", "love", "to", "see", "this", "as", "well", "NUMBER", "LINK", "v", "NUMBER", "and", "wildcard", "certificate", "support", "be", "live", "NUMBER", "Hi", "lukas", "Thanks", "for", "your", "script", "NUMBER", "by", "default", "your", "script", "will", "request", "the", "certificate", "on", "the", "port", "NUMBER", "but", "may", "I", "request", "a", "parameter", "to", "choose", "other", "port", "to", "request", "the", "certificate", "thanks", "What", "do", "you", "mean", "by", "request", "it", "on", "a", "different", "port", "Dehydrated", "do", "not", "control", "the", "ports", "use", "at", "all", "NUMBER", "ACME", "servers", "run", "on", "a", "predetermined", "port", "NUMBER", "The", "challenges", "be", "laid", "out", "by", "the", "ACME", "specification", "NUMBER", "These", "be", "not", "optional", "NUMBER", "Once", "you", "have", "a", "certificate", "you", "can", "use", "it", "on", "any", "port", "you", "like", "NUMBER", "Dehydrated", "do", "not", "control", "this", "either", "NUMBER", "I", "get", "this", "error", "once", "Requesting", "authorization", "for", "games", "NUMBER", "home", "NUMBER", "hotblocks", "NUMBER", "nl", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "authz", "Status", "NUMBER", "Details", "HTTP", "NUMBER", "NUMBER", "Continue", "Expires", "Sat", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Cache", "Control", "max", "age", "NUMBER", "no", "cache", "no", "store", "Pragma", "no", "cache", "HTTP", "NUMBER", "NUMBER", "Internal", "Server", "Error", "Server", "AkamaiGHost", "Mime", "Version", "NUMBER", "Content", "Type", "text", "html", "Content", "Length", "NUMBER", "Expires", "Sat", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Cache", "Control", "max", "age", "NUMBER", "no", "cache", "no", "store", "Pragma", "no", "cache", "Date", "Sat", "NUMBER", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Connection", "close", "TAG", "TAG", "TAG", "Error", "TAG", "TAG", "TAG", "An", "error", "occur", "while", "processing", "your", "request", "NUMBER", "TAG", "Reference", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "ed", "NUMBER", "bc", "TAG", "TAG", "Then", "I", "update", "Dehydrated", "LINK", "to", "head", "and", "then", "it", "worked", "NUMBER", "So", "no", "real", "problem", "just", "sharing", "NUMBER", "Not", "sure", "if", "it", "was", "LE", "s", "fault", "or", "Dehydrated", "s", "NUMBER", "Do", "with", "it", "what", "you", "want", "NUMBER", "Dehydrated", "be", "successfully", "creating", "the", "certificate", "for", "my", "domain", "but", "be", "fail", "when", "attempting", "to", "create", "the", "fullchain", "file", "NUMBER", "This", "happens", "with", "both", "the", "staging", "and", "production", "environment", "of", "Letsencrypt", "NUMBER", "I", "m", "use", "the", "script", "cloned", "from", "master", "NUMBER", "e", "NUMBER", "ddc", "NUMBER", "f", "NUMBER", "abe", "NUMBER", "abfc", "NUMBER", "a", "NUMBER", "ebc", "NUMBER", "ff", "NUMBER", "NUMBER", "Here", "be", "the", "relevant", "output", "from", "dehydrated", "configured", "to", "use", "the", "staging", "CA", "in", "this", "case", "ERROR", "Problem", "connecting", "to", "server", "get", "for", "LINK", "int", "x", "NUMBER", "letsencrypt", "NUMBER", "org", "curl", "returned", "with", "NUMBER", "ERROR", "Walking", "chain", "has", "fail", "your", "certificate", "has", "be", "created", "and", "can", "be", "find", "at", "NUMBER", "I", "use", "openssl", "to", "verify", "the", "CA", "Issuers", "for", "certs", "come", "from", "letsencrypt", "NUMBER", "For", "the", "staging", "CA", "CA", "Issuers", "URI", "LINK", "int", "x", "NUMBER", "letsencrypt", "NUMBER", "org", "For", "the", "production", "CA", "CA", "Issuers", "URI", "LINK", "x", "NUMBER", "letsencrypt", "NUMBER", "org", "The", "curl", "command", "that", "fail", "be", "staging", "CA", "in", "this", "case", "curl", "NUMBER", "A", "dehydr", "NUMBER", "ted", "NUMBER", "curl", "NUMBER", "L", "s", "w", "http_code", "o", "tmp", "dehydrated", "HbaofE", "D", "tmp", "dehydrated", "hJegeK", "LINK", "x", "NUMBER", "letsencrypt", "NUMBER", "org", "If", "the", "command", "be", "run", "with", "the", "k", "flag", "the", "letsencrypt", "server", "be", "responding", "with", "NUMBER", "I", "m", "not", "sure", "if", "this", "be", "an", "issue", "with", "how", "dehydrated", "be", "trying", "to", "walk", "the", "chain", "or", "with", "how", "letsencrypt", "be", "issue", "serving", "the", "certs", "NUMBER", "ccitro", "This", "be", "cause", "by", "an", "ongoing", "website", "incident", "LINK", "Apologies", "NUMBER", "lukas", "NUMBER", "More", "generally", "for", "ACMEv", "NUMBER", "it", "would", "be", "preferable", "if", "Dehydrated", "fetched", "the", "issuer", "use", "the", "up", "Link", "header", "that", "s", "provide", "in", "the", "response", "from", "new", "cert", "instead", "of", "pulling", "it", "out", "of", "the", "Certificate", "s", "AIA", "field", "NUMBER", "This", "be", "the", "more", "canonical", "ACME", "way", "of", "finding", "the", "issuer", "and", "in", "this", "particular", "case", "would", "result", "in", "a", "URL", "that", "isn", "t", "affected", "by", "the", "website", "outage", "NUMBER", "For", "ACMEv", "NUMBER", "its", "a", "non", "issue", "the", "full", "chain", "be", "returned", "with", "the", "certificate", "NUMBER", "cpu", "be", "there", "a", "work", "around", "we", "can", "do", "to", "assemble", "the", "cert", "chain", "manually", "since", "we", "already", "have", "the", "certs", "in", "hand", "jasonbouffard", "If", "you", "want", "to", "assemble", "a", "chain", "by", "hand", "the", "Let", "s", "Encrypt", "Authority", "X", "NUMBER", "certificate", "that", "be", "the", "issuer", "for", "end", "entity", "certificates", "at", "the", "time", "of", "write", "NUMBER", "NUMBER", "NUMBER", "be", "BEGIN", "CERTIFICATE", "MIIEkjCCA", "NUMBER", "qgAwIBAgIQCgFBQgAAAVOFc", "NUMBER", "oLheynCDANBgkqhkiG", "NUMBER", "w", "NUMBER", "BAQsFADA", "MSQwIgYDVQQKExtEaWdpdGFsIFNpZ", "NUMBER", "hdHVyZSBUcnVzdCBDby", "NUMBER", "xFzAVBgNVBAMT", "DkRTVCBSb", "NUMBER", "IENBIFgzMB", "NUMBER", "XDTE", "NUMBER", "MDMxNzE", "NUMBER", "NDA", "NUMBER", "NloXDTIxMDMxNzE", "NUMBER", "NDA", "NUMBER", "Nlow", "SjELMAkGA", "NUMBER", "UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY", "NUMBER", "J", "NUMBER", "cHQxIzAhBgNVBAMT", "GkxldCdzIEVuY", "NUMBER", "J", "NUMBER", "cHQgQXV", "NUMBER", "aG", "NUMBER", "yaXR", "NUMBER", "IFgzMIIBIjANBgkqhkiG", "NUMBER", "w", "NUMBER", "BAQEFAAOC", "AQ", "NUMBER", "AMIIBCgKCAQEAnNMM", "NUMBER", "FrlLke", "NUMBER", "cl", "NUMBER", "g", "NUMBER", "NoYzDq", "NUMBER", "zUmGSXhvb", "NUMBER", "XCSL", "NUMBER", "e", "NUMBER", "S", "NUMBER", "EF", "q", "NUMBER", "meNQhY", "NUMBER", "LEqxGiHC", "NUMBER", "PjdeTm", "NUMBER", "dicbp", "NUMBER", "gWAf", "NUMBER", "Gan", "PQeGdxyGkOlZHP", "uaZ", "NUMBER", "WA", "NUMBER", "SMx", "yk", "NUMBER", "EiSdRxta", "NUMBER", "nsHjcAHJyse", "NUMBER", "cF", "NUMBER", "s", "NUMBER", "K", "NUMBER", "B", "NUMBER", "TaYucv", "NUMBER", "bTyWaN", "NUMBER", "jKkKQDIZ", "NUMBER", "Z", "NUMBER", "h", "pZq", "NUMBER", "UmEUEz", "NUMBER", "l", "NUMBER", "YKHy", "NUMBER", "v", "NUMBER", "Dlb", "NUMBER", "honzhT", "Xhq", "w", "NUMBER", "Brvaw", "NUMBER", "VFn", "NUMBER", "EK", "NUMBER", "BlspkENnWA", "a", "NUMBER", "xK", "NUMBER", "xuQSXgvopZPKiAlKQTGdMDQMc", "NUMBER", "PMTiVFrqoM", "NUMBER", "hD", "NUMBER", "bEfwzB", "onkxEz", "NUMBER", "tNvjj", "PIzark", "NUMBER", "McWvxI", "NUMBER", "NHWQWM", "NUMBER", "r", "NUMBER", "hCm", "NUMBER", "AvA", "NUMBER", "H", "NUMBER", "DkwIDAQABo", "NUMBER", "IBfTCCAXkwEgYDVR", "NUMBER", "T", "AQH", "BAgwBgEB", "wIBADAOBgNVHQ", "NUMBER", "BAf", "NUMBER", "EBAMCAYYwfwYIKwYBBQUHAQEEczBxMDIG", "CCsGAQUFBzABhiZodHRwOi", "NUMBER", "vaXNyZy", "NUMBER", "cnVzdGlkLm", "NUMBER", "jc", "NUMBER", "AuaWRlbnRydXN", "NUMBER", "LmNv", "bTA", "NUMBER", "BggrBgEFBQcwAoYvaHR", "NUMBER", "cDovL", "NUMBER", "FwcHMuaWRlbnRydXN", "NUMBER", "LmNvbS", "NUMBER", "yb", "NUMBER", "cy", "NUMBER", "k", "c", "NUMBER", "Ryb", "NUMBER", "Y", "NUMBER", "F", "NUMBER", "My", "NUMBER", "wN", "NUMBER", "MwHwYDVR", "NUMBER", "jBBgwFoAUxKexpHsscfrb", "NUMBER", "UuQdf", "EFWCFiRAw", "VAYDVR", "NUMBER", "gBE", "NUMBER", "wSzAIBgZngQwBAgEwPwYLKwYBBAGC", "NUMBER", "xMBAQEwMDAuBggrBgEFBQcC", "ARYiaHR", "NUMBER", "cDovL", "NUMBER", "Nwcy", "NUMBER", "yb", "NUMBER", "LXgxLmxldHNlbmNyeXB", "NUMBER", "Lm", "NUMBER", "yZzA", "NUMBER", "BgNVHR", "NUMBER", "ENTAz", "MDGgL", "NUMBER", "AthitodHRwOi", "NUMBER", "vY", "NUMBER", "JsLmlkZW", "NUMBER", "cnVzdC", "NUMBER", "jb", "NUMBER", "vRFNUUk", "NUMBER", "PVENBWDNDUkwu", "Y", "NUMBER", "JsMB", "NUMBER", "GA", "NUMBER", "UdDgQWBBSoSmpjBH", "NUMBER", "duubRObemRWXv", "NUMBER", "jsoTANBgkqhkiG", "NUMBER", "w", "NUMBER", "BAQsF", "AAOCAQEA", "NUMBER", "TPXEfNjWDjdGBX", "NUMBER", "CVW", "dla", "NUMBER", "cEilaUcne", "NUMBER", "IkCJLxWh", "NUMBER", "KEik", "NUMBER", "JHRRHGJo", "uM", "NUMBER", "VcGfl", "NUMBER", "S", "NUMBER", "TihRzZvoroed", "NUMBER", "ti", "NUMBER", "WqEBmtzw", "NUMBER", "Wodatg", "VyOeph", "NUMBER", "EYpr", "NUMBER", "wXKtx", "NUMBER", "wApIvJSwtmVi", "NUMBER", "MFU", "NUMBER", "aMqrSDE", "NUMBER", "ea", "NUMBER", "Mj", "NUMBER", "tcMyo", "NUMBER", "jMd", "NUMBER", "jmeWUHK", "NUMBER", "so", "joWUoHOUgwu", "X", "NUMBER", "Po", "NUMBER", "QYz", "NUMBER", "dszkDqMp", "NUMBER", "fklxBwXRsW", "NUMBER", "KXzPMTZ", "sOPAveyxindmjkW", "NUMBER", "lGy", "QsRlG", "PfZ", "G", "NUMBER", "Z", "NUMBER", "h", "NUMBER", "mjem", "NUMBER", "Y", "iWlkYcV", "NUMBER", "PIWL", "NUMBER", "iwBi", "NUMBER", "saCbGS", "NUMBER", "jN", "NUMBER", "p", "NUMBER", "M", "X", "Q", "NUMBER", "UNKEkROb", "NUMBER", "N", "NUMBER", "KOqkqm", "NUMBER", "TH", "NUMBER", "H", "NUMBER", "eDJAkSnh", "NUMBER", "DNFu", "NUMBER", "Qg", "END", "CERTIFICATE", "NUMBER", "Challenge", "be", "valid", "Requesting", "certificate", "NUMBER", "Checking", "certificate", "NUMBER", "Done", "Creating", "fullchain", "NUMBER", "pem", "NUMBER", "Walking", "chain", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "get", "request", "to", "LINK", "x", "NUMBER", "letsencrypt", "NUMBER", "org", "Status", "NUMBER", "Details", "ERROR", "Walking", "chain", "has", "fail", "your", "certificate", "has", "be", "created", "and", "can", "be", "find", "at", "etc", "dehydrated", "certs", "domain", "NUMBER", "com", "cert", "NUMBER", "pem", "the", "corresponding", "private", "key", "at", "privkey", "NUMBER", "pem", "NUMBER", "If", "you", "want", "you", "can", "manually", "continue", "on", "creating", "and", "link", "all", "necessary", "file", "NUMBER", "If", "this", "error", "occur", "again", "you", "should", "manually", "generate", "the", "certificate", "chain", "and", "place", "it", "under", "etc", "dehydrated", "chains", "NUMBER", "f", "NUMBER", "f", "NUMBER", "d", "NUMBER", "chain", "see", "LINK", "x", "NUMBER", "letsencrypt", "NUMBER", "org", "As", "a", "workaround", "you", "could", "add", "the", "curl", "parameter", "L", "in", "the", "dehydrated", "script", "NUMBER", "Seems", "like", "curl", "be", "not", "following", "a", "redirect", "http", "to", "https", "statuscode", "curl", "ip_version", "CURL_OPTS", "s", "w", "http_code", "o", "tempcont", "NUMBER", "statuscode", "curl", "ip_version", "CURL_OPTS", "L", "s", "w", "http_code", "o", "tempcont", "NUMBER", "LINK", "L", "NUMBER", "bobcanthelpyou", "This", "be", "already", "fix", "in", "master", "see", "commit", "NUMBER", "a", "NUMBER", "e", "NUMBER", "c", "NUMBER", "Firefox", "says", "dehydrated", "NUMBER", "de", "uses", "an", "invalid", "security", "certificate", "NUMBER", "The", "certificate", "expired", "on", "March", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "The", "current", "time", "be", "March", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Error", "code", "SEC_ERROR_EXPIRED_CERTIFICATE", "thanks", "As", "stated", "on", "LINK", "post", "content", "type", "header", "enforcement", "NUMBER", "by", "cpu", "ACMEv", "NUMBER", "API", "clients", "will", "be", "required", "to", "send", "all", "POST", "request", "with", "a", "Content", "Type", "header", "of", "application", "jose", "json", "We", "just", "upgrade", "to", "the", "last", "version", "of", "dehydrated", "prior", "version", "was", "NUMBER", "X", "NUMBER", "After", "that", "when", "run", "the", "script", "I", "see", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Unknown", "command", "this_hookscript_is_broken__dehydrated_is_working_fine__please_ignore_unknown_hooks_in_your_script", "In", "the", "CHANGELOG", "I", "could", "find", "this", "Calling", "random", "hook", "on", "startup", "to", "make", "it", "clear", "to", "hook", "script", "authors", "that", "unknown", "hooks", "should", "just", "be", "ignored", "NUMBER", "The", "function", "that", "throw", "this", "message", "just", "checks", "whether", "the", "HOOK", "variable", "has", "any", "content", "and", "then", "it", "shows", "the", "message", "NUMBER", "I", "also", "understand", "that", "this", "be", "do", "on", "purpose", "but", "I", "just", "can", "t", "understand", "the", "reason", "Will", "it", "be", "wrong", "to", "specify", "a", "hook", "from", "now", "on", "In", "our", "case", "this", "hook", "do", "a", "lot", "of", "work", "in", "terms", "of", "integration", "with", "our", "DNS", "server", "so", "it", "be", "unthinkable", "to", "remove", "it", "NUMBER", "If", "this", "be", "the", "wrong", "way", "to", "go", "be", "there", "any", "other", "recommended", "way", "to", "do", "this", "nkovacne", "The", "example", "hook", "script", "in", "the", "repo", "illustrates", "how", "to", "whitelist", "particular", "function", "in", "a", "hook", "script", "NUMBER", "All", "others", "will", "be", "ignored", "NUMBER", "If", "you", "implement", "something", "like", "that", "and", "whitelist", "only", "the", "function", "implement", "by", "your", "hook", "script", "the", "error", "will", "go", "away", "NUMBER", "txr", "NUMBER", "Yep", "in", "fact", "it", "was", "my", "fault", "NUMBER", "My", "hook", "file", "actually", "caught", "any", "undefined", "hook", "and", "sent", "to", "stdout", "the", "error", "message", "that", "I", "write", "in", "my", "first", "message", "which", "I", "thought", "was", "sent", "by", "the", "dehydrated", "script", "NUMBER", "I", "simply", "remove", "the", "echo", "statement", "and", "it", "stopped", "showing", "up", "NUMBER", "Thanks", "NUMBER", "i", "m", "test", "my", "setup", "with", "the", "current", "v", "NUMBER", "staging", "setup", "and", "dehydrated", "c", "fail", "in", "walk", "chain", "because", "LINK", "int", "x", "NUMBER", "letsencrypt", "NUMBER", "org", "be", "no", "longer", "available", "in", "that", "location", "instead", "letsencrypt", "redirects", "you", "to", "LINK", "workaround", "for", "me", "tell", "curl", "to", "follow", "redirections", "ie", "add", "CURL_OPTS", "L", "to", "the", "dehydrated", "config", "NUMBER", "dehydrated", "e", "NUMBER", "declare", "CA", "LINK", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "NUMBER", "dehydrated", "c", "NUMBER", "Creating", "fullchain", "NUMBER", "pem", "NUMBER", "Walking", "chain", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "get", "request", "to", "LINK", "int", "x", "NUMBER", "letsencrypt", "NUMBER", "org", "Status", "NUMBER", "Details", "TAG", "TAG", "TAG", "NUMBER", "Moved", "Permanently", "TAG", "TAG", "TAG", "TAG", "TAG", "NUMBER", "Moved", "Permanently", "TAG", "TAG", "TAG", "TAG", "nginx", "TAG", "TAG", "TAG", "ERROR", "Walking", "chain", "has", "fail", "your", "certificate", "has", "be", "created", "and", "can", "be", "find", "at", "TAG", "the", "corresponding", "private", "key", "at", "TAG", "NUMBER", "you", "re", "right", "NUMBER", "i", "m", "sorry", "for", "the", "noise", "i", "m", "use", "NUMBER", "and", "somehow", "i", "miss", "the", "commit", "comment", "about", "this", "having", "be", "fix", "since", "the", "release", "NUMBER", "If", "you", "make", "a", "Let", "s", "Encrypt", "cert", "for", "NUMBER", "example", "NUMBER", "com", "it", "do", "not", "cover", "example", "NUMBER", "com", "NUMBER", "This", "be", "normal", "NUMBER", "Most", "wildcard", "certs", "from", "other", "providers", "include", "the", "naked", "apex", "domain", "in", "the", "SAN", "to", "cover", "it", "NUMBER", "The", "problem", "be", "that", "LE", "will", "validate", "both", "the", "wildcard", "and", "the", "apex", "domain", "use", "the", "same", "key", "_acme", "challenge", "NUMBER", "example", "NUMBER", "com", "and", "dehydrated", "be", "set", "up", "to", "deploy", "all", "challenge", "tokens", "before", "validation", "even", "with", "HOOK_CHAIN", "no", "NUMBER", "NUMBER", "dehydrated", "c", "d", "NUMBER", "example", "NUMBER", "com", "d", "example", "NUMBER", "com", "t", "dns", "NUMBER", "k", "NUMBER", "hook", "NUMBER", "sh", "Processing", "NUMBER", "example", "NUMBER", "com", "with", "alternative", "names", "example", "NUMBER", "com", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "change", "Domain", "name", "s", "be", "not", "matching", "Names", "in", "old", "certificate", "NUMBER", "example", "NUMBER", "com", "Configured", "names", "NUMBER", "example", "NUMBER", "com", "example", "NUMBER", "com", "Forcing", "renew", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Longer", "than", "NUMBER", "days", "NUMBER", "Ignoring", "because", "renew", "was", "forced", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Received", "NUMBER", "authorizations", "URLs", "from", "the", "CA", "Handling", "authorization", "for", "example", "NUMBER", "com", "Handling", "authorization", "for", "example", "NUMBER", "com", "NUMBER", "pending", "challenge", "s", "Deploying", "challenge", "tokens", "NUMBER", "Creating", "challenge", "record", "for", "example", "NUMBER", "com", "in", "zone", "example", "NUMBER", "com", "Created", "record", "_acme", "challenge", "NUMBER", "example", "NUMBER", "com", "NUMBER", "NUMBER", "IN", "TXT", "abc", "NUMBER", "Waiting", "for", "sync", "NUMBER", "Completed", "Creating", "challenge", "record", "for", "example", "NUMBER", "com", "in", "zone", "example", "NUMBER", "com", "Created", "record", "_acme", "challenge", "NUMBER", "example", "NUMBER", "com", "NUMBER", "NUMBER", "IN", "TXT", "xyz", "NUMBER", "Waiting", "for", "sync", "NUMBER", "Completed", "Responding", "to", "challenge", "for", "example", "NUMBER", "com", "authorization", "NUMBER", "Failed", "to", "issue", "SSL", "cert", "for", "example", "NUMBER", "com", "type", "dns", "NUMBER", "status", "invalid", "error", "type", "urn", "ietf", "params", "acme", "error", "unauthorized", "detail", "Incorrect", "TXT", "record", "xyz", "NUMBER", "find", "at", "_acme", "challenge", "NUMBER", "example", "NUMBER", "com", "status", "NUMBER", "url", "LINK", "staging", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "NUMBER", "token", "NUMBER", "keyAuthorization", "NUMBER", "Ah", "yes", "I", "had", "forgotten", "that", "you", "can", "have", "multiple", "TXT", "records", "with", "the", "same", "name", "NUMBER", "I", "just", "now", "told", "my", "hook", "script", "to", "append", "the", "record", "instead", "of", "replacing", "it", "LINK", "route", "NUMBER", "hook", "script", "blob", "NUMBER", "dd", "NUMBER", "c", "hook", "NUMBER", "sh", "L", "NUMBER", "NUMBER", "Both", "values", "were", "then", "in", "DNS", "and", "both", "were", "accepted", "by", "LE", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Received", "NUMBER", "authorizations", "URLs", "from", "the", "CA", "Handling", "authorization", "for", "example", "NUMBER", "com", "Handling", "authorization", "for", "example", "NUMBER", "com", "NUMBER", "pending", "challenge", "s", "Deploying", "challenge", "tokens", "NUMBER", "Creating", "challenge", "record", "for", "example", "NUMBER", "com", "in", "zone", "example", "NUMBER", "com", "Created", "record", "_acme", "challenge", "NUMBER", "example", "NUMBER", "com", "NUMBER", "NUMBER", "IN", "TXT", "abc", "NUMBER", "Waiting", "for", "sync", "NUMBER", "Completed", "Creating", "challenge", "record", "for", "example", "NUMBER", "com", "in", "zone", "example", "NUMBER", "com", "Created", "record", "_acme", "challenge", "NUMBER", "example", "NUMBER", "com", "NUMBER", "NUMBER", "IN", "TXT", "xyz", "NUMBER", "Waiting", "for", "sync", "NUMBER", "Completed", "Responding", "to", "challenge", "for", "example", "NUMBER", "com", "authorization", "NUMBER", "Deleting", "challenge", "record", "for", "example", "NUMBER", "com", "from", "zone", "example", "NUMBER", "com", "NUMBER", "record", "sets", "delete", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "example", "NUMBER", "com", "authorization", "NUMBER", "Deleting", "challenge", "record", "for", "example", "NUMBER", "com", "from", "zone", "example", "NUMBER", "com", "Warning", "no", "records", "matched", "nothing", "delete", "Challenge", "be", "valid", "Requesting", "certificate", "NUMBER", "Checking", "certificate", "NUMBER", "Done", "Thanks", "for", "your", "quick", "reply", "NUMBER", "NUMBER", "Hi", "lukas", "NUMBER", "It", "looks", "like", "presently", "dehydrated", "doesn", "t", "send", "its", "own", "User", "Agent", "header", "in", "its", "ACME", "request", "instead", "use", "the", "UA", "set", "by", "curl", "NUMBER", "I", "did", "a", "quick", "search", "and", "it", "seems", "like", "you", "took", "a", "crack", "at", "setting", "one", "in", "LINK", "but", "backed", "the", "change", "out", "in", "LINK", "Would", "you", "consider", "re", "introduce", "a", "custom", "UA", "for", "dehydrated", "It", "s", "a", "big", "help", "for", "ACME", "server", "operators", "that", "may", "be", "troubleshooting", "behaviour", "from", "server", "logs", "trying", "to", "correlate", "with", "specific", "client", "implementations", "NUMBER", "Section", "NUMBER", "LINK", "ietf", "acme", "acme", "NUMBER", "section", "NUMBER", "of", "the", "ACME", "spec", "even", "goes", "as", "far", "as", "to", "say", "clients", "SHOULD", "set", "a", "UA", "ACME", "clients", "SHOULD", "send", "a", "User", "Agent", "header", "in", "accordance", "with", "RFC", "NUMBER", "including", "the", "name", "and", "version", "of", "the", "ACME", "software", "in", "addition", "to", "the", "name", "and", "version", "of", "the", "underlying", "HTTP", "client", "software", "NUMBER", "Thanks", "lukas", "NUMBER", "Ugh", "anger", "NUMBER", "I", "ll", "ask", "our", "operations", "team", "to", "see", "if", "there", "s", "something", "in", "the", "Akamai", "configuration", "that", "causes", "this", "NUMBER", "lukas", "NUMBER", "They", "re", "going", "to", "look", "into", "this", "over", "the", "next", "day", "or", "two", "NUMBER", "I", "ll", "keep", "you", "update", "here", "NUMBER", "Going", "forward", "please", "feel", "free", "to", "flag", "this", "sort", "of", "API", "issue", "on", "the", "Boulder", "repo", "LINK", "or", "in", "the", "community", "forum", "LINK", "NUMBER", "I", "definitely", "had", "no", "idea", "this", "was", "happening", "laughing", "I", "guess", "this", "makes", "dehydr", "NUMBER", "ted", "the", "most", "NUMBER", "client", "option", "available", "NUMBER", "Haha", "NUMBER", "trophy", "computer", "cpu", "any", "update", "on", "this", "I", "poked", "our", "operations", "team", "about", "this", "again", "this", "morning", "and", "its", "on", "their", "radar", "but", "hasn", "t", "be", "address", "yet", "NUMBER", "If", "you", "d", "like", "I", "can", "close", "this", "issue", "for", "now", "and", "reopen", "it", "when", "I", "ve", "heard", "back", "NUMBER", "I", "promise", "I", "won", "t", "forget", "it", "s", "in", "my", "notebook", "every", "day", "Quick", "update", "There", "s", "a", "change", "be", "staged", "that", "should", "resolve", "this", "in", "the", "next", "few", "days", "NUMBER", "I", "ll", "comment", "again", "when", "the", "change", "be", "active", "for", "staging", "prod", "NUMBER", "Thanks", "lukas", "NUMBER", "Good", "news", "I", "m", "told", "the", "functionality", "cause", "the", "hydra", "substring", "block", "be", "disabled", "now", "NUMBER", "I", "m", "not", "able", "to", "replicate", "it", "as", "before", "NUMBER", "You", "should", "be", "able", "to", "drop", "your", "NUMBER", "spelling", "now", "lukas", "NUMBER", "Blech", "The", "V", "NUMBER", "environment", "be", "the", "one", "I", "use", "to", "spot", "check", "the", "fix", "NUMBER", "Thanks", "I", "ll", "pass", "this", "feedback", "along", "NUMBER", "lukas", "NUMBER", "I", "ll", "have", "to", "confirm", "with", "our", "ops", "team", "I", "don", "t", "have", "any", "visibility", "into", "Akamai", "settings", "NUMBER", "I", "believe", "it", "s", "part", "of", "the", "default", "WAF", "rules", "I", "don", "t", "know", "if", "the", "WAF", "be", "enable", "by", "default", "for", "Akamai", "customers", "NUMBER", "It", "s", "a", "very", "silly", "naive", "rule", "that", "I", "expect", "was", "originally", "meant", "to", "deal", "with", "thc", "hydra", "an", "old", "tool", "for", "run", "online", "password", "guessing", "attacks", "NUMBER", "The", "plan", "I", "ve", "advocated", "that", "I", "believe", "be", "in", "progress", "be", "to", "remove", "the", "WAF", "outright", "for", "API", "traffic", "We", "don", "t", "benefit", "from", "the", "WAF", "in", "a", "way", "that", "justifies", "the", "surprising", "effect", "support", "burden", "NUMBER", "Once", "disabled", "there", "shouldn", "t", "come", "a", "time", "when", "it", "gets", "reenabled", "suddenly", "with", "the", "default", "ruleset", "NUMBER", "Thanks", "for", "your", "patience", "help", "Another", "update", "The", "operations", "team", "member", "that", "was", "work", "on", "this", "has", "be", "out", "sick", "for", "several", "days", "NUMBER", "I", "will", "update", "here", "again", "when", "they", "re", "back", "and", "have", "had", "a", "chance", "to", "look", "into", "the", "incomplete", "fix", "NUMBER", "lukas", "NUMBER", "I", "was", "generating", "some", "s", "in", "a", "pretty", "adhoc", "way", "to", "satisfy", "my", "own", "curiosity", "ahead", "of", "the", "public", "launch", "of", "ACME", "v", "NUMBER", "I", "don", "t", "think", "there", "has", "be", "any", "discussion", "about", "sharing", "usage", "statistics", "with", "client", "authors", "NUMBER", "I", "ll", "ask", "around", "maybe", "I", "can", "share", "some", "rough", "s", "with", "you", "lukas", "NUMBER", "Ok", "I", "think", "the", "UA", "WAF", "problem", "be", "finally", "resolve", "NUMBER", "I", "m", "able", "to", "hit", "the", "V", "NUMBER", "staging", "env", "the", "V", "NUMBER", "staging", "env", "the", "V", "NUMBER", "prod", "env", "and", "the", "V", "NUMBER", "prod", "env", "with", "the", "Dehydrated", "UA", "without", "any", "error", "NUMBER", "Can", "you", "confirm", "you", "re", "seeing", "the", "same", "While", "hitting", "a", "Let", "s", "Encrypt", "rate", "limit", "dehydrated", "printed", "this", "error", "sed", "invalid", "option", "E", "This", "be", "cause", "by", "one", "occurrence", "in", "dehydrated", "where", "sed", "be", "use", "directly", "instead", "of", "the", "_sed", "wrapper", "NUMBER", "This", "pull", "request", "fix", "this", "NUMBER", "I", "vote", "for", "fail", "if", "no", "alias", "be", "defined", "NUMBER", "I", "vote", "for", "star_example", "NUMBER", "com", "because", "the", "previous", "convention", "I", "ve", "seen", "so", "far", "has", "be", "to", "use", "star", "in", "place", "of", "wildcard", "NUMBER", "Come", "to", "think", "of", "it", "maybe", "davidolrik", "s", "way", "be", "the", "least", "confusing", "so", "NUMBER", "for", "that", "no", "wildcard", "if", "no", "alias", "with", "a", "big", "fat", "error", "explaining", "the", "cause", "NUMBER", "How", "do", "other", "clients", "handle", "this", "I", "d", "be", "neat", "to", "agree", "upon", "a", "semi", "standard", "for", "this", "NUMBER", "Failing", "without", "an", "alias", "seems", "the", "right", "decision", "as", "long", "as", "there", "be", "a", "clear", "error", "along", "the", "line", "of", "wildcard", "domains", "must", "have", "an", "alias", "defined", "NUMBER", "followed", "by", "a", "wildcard", "example", "NUMBER", "com", "with", "an", "alias", "Why", "not", "use", "wildcard", "NUMBER", "example", "NUMBER", "com", "Technically", "asterisk", "NUMBER", "example", "NUMBER", "com", "would", "be", "more", "correct", "then", "star", "NUMBER", "example", "NUMBER", "com", "but", "i", "can", "see", "that", "both", "names", "be", "more", "likely", "to", "be", "use", "in", "the", "wild", "than", "somebody", "actually", "having", "the", "hostname", "wildcard", "NUMBER", "example", "NUMBER", "com", "If", "you", "think", "that", "s", "too", "risky", "wildcard_example", "NUMBER", "com", "would", "get", "my", "vote", "NUMBER", "Dr\u00f6lf", "times", "more", "than", "star_example", "NUMBER", "com", "at", "least", "NUMBER", "What", "about", "forcing", "the", "apex", "as", "the", "alias", "if", "none", "be", "defined", "and", "then", "use", "the", "apex", "as", "the", "identifier", "If", "somebody", "wants", "to", "have", "a", "dedicated", "separate", "cert", "for", "the", "apex", "they", "d", "only", "need", "to", "define", "an", "alias", "for", "the", "wildcard", "domain", "even", "if", "it", "s", "just", "wildcard", "NUMBER", "example", "NUMBER", "com", "NUMBER", "I", "vote", "for", "wildcard_example", "NUMBER", "com", "NUMBER", "Seems", "be", "best", "solution", "NUMBER", "I", "d", "love", "to", "know", "how", "certbot", "be", "going", "to", "tackle", "this", "NUMBER", "The", "original", "naming", "scheme", "was", "basically", "copied", "from", "certbot", "and", "it", "would", "be", "great", "to", "keep", "some", "compatibility", "if", "their", "solution", "seems", "nice", "NUMBER", "Does", "anybody", "know", "something", "about", "that", "Our", "plan", "for", "Certbot", "be", "to", "remove", "the", "leading", "NUMBER", "so", "if", "you", "the", "first", "domain", "you", "provide", "to", "Certbot", "be", "NUMBER", "example", "NUMBER", "org", "the", "name", "of", "the", "file", "and", "directories", "we", "create", "by", "default", "will", "be", "example", "NUMBER", "org", "NUMBER", "I", "hate", "to", "reopen", "this", "but", "I", "m", "actually", "run", "into", "an", "issue", "because", "of", "this", "NUMBER", "I", "do", "not", "have", "the", "option", "for", "add", "example", "NUMBER", "com", "as", "an", "alias", "for", "NUMBER", "example", "NUMBER", "com", "because", "we", "be", "blocking", "non", "wildcard", "issuance", "at", "the", "apex", "of", "the", "domain", "since", "our", "customers", "have", "their", "own", "hostnames", "as", "TAG", "example", "NUMBER", "com", "and", "we", "want", "to", "avoid", "add", "hundreds", "of", "thousands", "of", "CAA", "records", "NUMBER", "Our", "only", "other", "option", "seems", "to", "be", "if", "we", "want", "to", "keep", "use", "dehydrated", "for", "this", "be", "to", "use", "another", "name", "that", "will", "either", "not", "be", "use", "or", "be", "duplicate", "because", "it", "s", "already", "matched", "by", "NUMBER", "example", "NUMBER", "com", "NUMBER", "I", "do", "believe", "that", "certbot", "s", "way", "of", "doing", "this", "be", "better", "since", "validation", "be", "also", "do", "at", "the", "same", "_acme", "challenge", "NUMBER", "example", "NUMBER", "com", "NUMBER", "But", "perhaps", "make", "it", "optional", "with", "default", "of", "requiring", "the", "alias", "and", "certbot", "s", "behaviour", "otherwise", "We", "have", "to", "strip", "NUMBER", "for", "the", "wildcard", "anyway", "hook", "script", "for", "example", "NUMBER", "If", "your", "certificate", "only", "contains", "a", "wild", "card", "name", "such", "as", "NUMBER", "example", "NUMBER", "com", "you", "can", "have", "it", "place", "the", "certificates", "in", "a", "directory", "call", "wild", "NUMBER", "example", "NUMBER", "com", "by", "specify", "the", "certificate", "in", "domains", "NUMBER", "txt", "like", "this", "NUMBER", "example", "NUMBER", "com", "wild", "NUMBER", "example", "NUMBER", "com", "When", "the", "script", "exits", "with", "a", "fatal", "error", "_exiterr", "the", "name", "of", "the", "script", "be", "not", "include", "NUMBER", "When", "the", "error", "be", "simply", "a", "message", "like", "This", "script", "requires", "curl", "NUMBER", "and", "this", "message", "appears", "in", "a", "system", "log", "file", "it", "can", "be", "challenging", "to", "determine", "which", "script", "requires", "curl", "NUMBER", "The", "propose", "change", "be", "to", "include", "the", "script", "name", "in", "the", "message", "printed", "with", "_exiterr", "NUMBER", "Let", "s", "just", "say", "that", "if", "I", "already", "knew", "which", "script", "needed", "a", "logger", "pipe", "I", "wouldn", "t", "have", "had", "this", "problem", "in", "the", "first", "place", "NUMBER", "I", "figured", "it", "out", "but", "my", "propose", "change", "was", "to", "help", "the", "next", "person", "with", "the", "same", "problem", "NUMBER", "dehydrated", "c", "silently", "quits", "without", "doing", "anything", "in", "the", "current", "master", "When", "commenting", "out", "this", "line", "and", "add", "an", "echo", "in", "the", "line", "after", "it", "works", "as", "expected", "LINK", "L", "NUMBER", "Tested", "on", "Debian", "Jessie", "and", "Ubuntu", "NUMBER", "I", "don", "t", "have", "a", "hook", "script", "so", "it", "can", "t", "be", "an", "issue", "with", "the", "script", "NUMBER", "I", "ll", "check", "it", "again", "in", "a", "few", "hours", "if", "the", "issue", "be", "fix", "One", "of", "the", "change", "made", "today", "appears", "to", "have", "start", "make", "Dehydrated", "start", "exiting", "with", "a", "non", "zero", "status", "even", "when", "everything", "goes", "fine", "NUMBER", "We", "be", "seeing", "the", "problem", "on", "Laravel", "Forge", "NUMBER", "Needs", "command", "line", "usage", "examples", "NUMBER", "dehydrated", "c", "d", "example", "NUMBER", "etc", "t", "dns", "NUMBER", "k", "hooks", "cloudflare", "hook", "NUMBER", "py", "INFO", "Using", "main", "config", "file", "root", "dehydrated", "config", "CloudFlare", "hook", "executing", "some", "key", "Traceback", "most", "recent", "call", "last", "File", "hooks", "cloudflare", "hook", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "main", "sys", "NUMBER", "argv", "NUMBER", "File", "hooks", "cloudflare", "hook", "NUMBER", "py", "line", "NUMBER", "in", "main", "ops", "argv", "NUMBER", "argv", "NUMBER", "KeyError", "some", "key", "sorry", "wrong", "script", "issue", "for", "hook", "script", "I", "was", "having", "this", "exact", "same", "error", "with", "le", "godaddy", "dns", "hook", "NUMBER", "I", "ve", "managed", "to", "make", "it", "work", "by", "use", "an", "old", "version", "of", "Dehydrated", "NUMBER", "Here", "s", "my", "original", "post", "with", "the", "dev", "josteink", "le", "godaddy", "dns", "NUMBER", "lukas", "NUMBER", "Awesome", "thank", "you", "Sir", "I", "ve", "always", "just", "build", "from", "master", "and", "be", "now", "use", "tag", "release", "NUMBER", "This", "be", "along", "with", "the", "recommended", "cloudflare", "hook", "kappataumu", "letsencrypt", "cloudflare", "hook", "Thanks", "lukas", "NUMBER", "lukas", "NUMBER", "Apologies", "for", "this", "should", "have", "address", "the", "issue", "earlier", "NUMBER", "The", "host", "names", "of", "these", "devices", "will", "still", "need", "to", "be", "publicly", "reachable", "though", "right", "Or", "be", "I", "miss", "something", "here", "NUMBER", "That", "s", "what", "I", "figured", "NUMBER", "I", "ll", "have", "to", "look", "into", "DNS", "based", "verification", "some", "more", "NUMBER", "Thanks", "for", "the", "quick", "reply", "and", "dehydrated", "in", "general", "Since", "dehydrated", "NUMBER", "when", "I", "run", "dehydrated", "c", "g", "only", "the", "first", "domain", "in", "my", "domains", "NUMBER", "txt", "be", "be", "checked", "renewed", "NUMBER", "The", "cron", "job", "works", "as", "expected", "run", "via", "FreeBSD", "periodic", "scripts", "but", "when", "I", "run", "it", "manually", "only", "one", "domain", "gets", "checked", "NUMBER", "There", "be", "no", "exit", "code", "the", "execution", "just", "ends", "note", "that", "since", "I", "add", "an", "alias", "for", "the", "first", "domain", "the", "first", "two", "lines", "be", "be", "executed", "dehydrated", "c", "g", "INFO", "Using", "main", "config", "file", "usr", "local", "etc", "dehydrated", "config", "Processing", "www", "NUMBER", "XXX", "NUMBER", "com", "with", "alternative", "names", "XXX", "NUMBER", "com", "www", "NUMBER", "XXX", "NUMBER", "de", "XXX", "NUMBER", "de", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Longer", "than", "NUMBER", "days", "NUMBER", "Skipping", "renew", "OSCP", "stapling", "file", "be", "still", "valid", "skipping", "update", "Processing", "www", "NUMBER", "XXX", "NUMBER", "com", "with", "alternative", "names", "XXX", "NUMBER", "com", "www", "NUMBER", "XXX", "NUMBER", "de", "XXX", "NUMBER", "de", "Using", "certificate", "specific", "config", "file", "KEY_ALGO", "secp", "NUMBER", "r", "NUMBER", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Longer", "than", "NUMBER", "days", "NUMBER", "Skipping", "renew", "Updating", "OCSP", "stapling", "file", "This", "be", "my", "main", "config", "note", "that", "for", "some", "reason", "the", "file", "registration_info", "NUMBER", "json", "do", "not", "exist", "dehydrated", "e", "dehydrated", "configuration", "INFO", "Using", "main", "config", "file", "usr", "local", "etc", "dehydrated", "config", "declare", "CA", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "declare", "LICENSE", "declare", "CERTDIR", "usr", "local", "etc", "dehydrated", "certs", "declare", "CHALLENGETYPE", "http", "NUMBER", "declare", "DOMAINS_D", "declare", "DOMAINS_TXT", "usr", "local", "etc", "dehydrated", "domains", "NUMBER", "txt", "declare", "HOOK", "usr", "local", "etc", "dehydrated", "hook", "NUMBER", "sh", "declare", "HOOK_CHAIN", "no", "declare", "RENEW_DAYS", "NUMBER", "declare", "ACCOUNT_KEY", "usr", "local", "etc", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMS", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "account_key", "NUMBER", "pem", "declare", "ACCOUNT_KEY_JSON", "usr", "local", "etc", "dehydrated", "accounts", "aHR", "NUMBER", "cHM", "NUMBER", "Ly", "NUMBER", "hY", "NUMBER", "lLXYwMS", "NUMBER", "hcGkubGV", "NUMBER", "c", "NUMBER", "VuY", "NUMBER", "J", "NUMBER", "cHQub", "NUMBER", "JnL", "NUMBER", "RpcmVjdG", "NUMBER", "yeQo", "registration_info", "NUMBER", "json", "declare", "KEYSIZE", "NUMBER", "declare", "WELLKNOWN", "usr", "local", "www", "dehydrated", "declare", "PRIVATE_KEY_RENEW", "yes", "declare", "OPENSSL_CNF", "usr", "local", "etc", "ssl", "openssl", "NUMBER", "cnf", "declare", "CONTACT_EMAIL", "hostmaster", "XXX", "NUMBER", "comcom", "declare", "LOCKFILE", "usr", "local", "etc", "dehydrated", "lock", "This", "be", "my", "domains", "NUMBER", "txt", "www", "NUMBER", "XXX", "NUMBER", "com", "XXX", "NUMBER", "com", "www", "NUMBER", "XXX", "NUMBER", "de", "XXX", "NUMBER", "de", "www", "NUMBER", "XXX", "NUMBER", "com", "XXX", "NUMBER", "com", "www", "NUMBER", "XXX", "NUMBER", "de", "XXX", "NUMBER", "de", "www", "NUMBER", "XXX", "NUMBER", "com", "NUMBER", "ecdsa", "cloud", "NUMBER", "XXX", "NUMBER", "com", "cloud", "NUMBER", "XXX", "NUMBER", "com", "cloud", "NUMBER", "XXX", "NUMBER", "com", "NUMBER", "ecdsa", "tool", "NUMBER", "XXX", "NUMBER", "com", "push", "NUMBER", "XXX", "NUMBER", "com", "adminer", "NUMBER", "XXX", "NUMBER", "com", "webmail", "NUMBER", "XXX", "NUMBER", "com", "rspamd", "NUMBER", "XXX", "NUMBER", "com", "tool", "NUMBER", "XXX", "NUMBER", "com", "push", "NUMBER", "XXX", "NUMBER", "com", "adminer", "NUMBER", "XXX", "NUMBER", "com", "webmail", "NUMBER", "XXX", "NUMBER", "com", "rspamd", "NUMBER", "XXX", "NUMBER", "com", "tool", "NUMBER", "XXX", "NUMBER", "com", "NUMBER", "ecdsa", "mail", "NUMBER", "XXX", "NUMBER", "com", "mail", "NUMBER", "XXX", "NUMBER", "com", "mail", "NUMBER", "XXX", "NUMBER", "com", "NUMBER", "ecdsa", "and", "this", "be", "my", "www", "NUMBER", "XXX", "NUMBER", "com", "NUMBER", "ecdsa", "config", "Which", "public", "key", "algorithm", "should", "be", "use", "Supported", "rsa", "prime", "NUMBER", "v", "NUMBER", "and", "secp", "NUMBER", "r", "NUMBER", "KEY_ALGO", "secp", "NUMBER", "r", "NUMBER", "yes", "it", "works", "when", "disabling", "COSP_FETCH", "Any", "information", "on", "why", "I", "don", "t", "have", "the", "file", "registration_info", "NUMBER", "json", "And", "Is", "IP_VERSION", "on", "a", "per", "certificate", "basis", "planned", "for", "future", "release", "Thanks", "These", "be", "the", "last", "few", "dozen", "lines", "echo", "cert", "NUMBER", "csr", "cut", "d", "NUMBER", "f", "NUMBER", "filebase", "cert", "echo", "cert", "NUMBER", "csr", "cut", "d", "NUMBER", "f", "NUMBER", "fileext", "csr", "for", "file", "in", "certdir", "filebase", "NUMBER", "fileext", "certdir", "filebase", "NUMBER", "fileext", "revoked", "basename", "usr", "local", "etc", "dehydrated", "certs", "www", "NUMBER", "XXX", "NUMBER", "com", "NUMBER", "ecdsa", "cert", "NUMBER", "csr", "filename", "cert", "NUMBER", "csr", "cert", "NUMBER", "csr", "c", "e", "r", "t", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "c", "s", "r", "for", "filetype", "in", "cert", "NUMBER", "csr", "cert", "NUMBER", "pem", "chain", "NUMBER", "pem", "fullchain", "NUMBER", "pem", "privkey", "NUMBER", "pem", "ocsp", "NUMBER", "der", "r", "usr", "local", "etc", "dehydrated", "certs", "www", "NUMBER", "XXX", "NUMBER", "com", "NUMBER", "ecdsa", "cert", "NUMBER", "pem", "readlink", "usr", "local", "etc", "dehydrated", "certs", "www", "NUMBER", "XXX", "NUMBER", "com", "NUMBER", "ecdsa", "cert", "NUMBER", "pem", "basename", "cert", "NUMBER", "pem", "current", "cert", "NUMBER", "pem", "echo", "cert", "NUMBER", "pem", "cut", "d", "NUMBER", "f", "NUMBER", "filebase", "cert", "echo", "cert", "NUMBER", "pem", "cut", "d", "NUMBER", "f", "NUMBER", "fileext", "pem", "for", "file", "in", "certdir", "filebase", "NUMBER", "fileext", "certdir", "filebase", "NUMBER", "fileext", "revoked", "basename", "usr", "local", "etc", "dehydrated", "certs", "www", "NUMBER", "XXX", "NUMBER", "com", "NUMBER", "ecdsa", "cert", "NUMBER", "pem", "filename", "cert", "NUMBER", "pem", "cert", "NUMBER", "pem", "c", "e", "r", "t", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "p", "e", "m", "for", "filetype", "in", "cert", "NUMBER", "csr", "cert", "NUMBER", "pem", "chain", "NUMBER", "pem", "fullchain", "NUMBER", "pem", "privkey", "NUMBER", "pem", "ocsp", "NUMBER", "der", "r", "usr", "local", "etc", "dehydrated", "certs", "www", "NUMBER", "XXX", "NUMBER", "com", "NUMBER", "ecdsa", "chain", "NUMBER", "pem", "readlink", "usr", "local", "etc", "dehydrated", "certs", "www", "NUMBER", "XXX", "NUMBER", "com", "NUMBER", "ecdsa", "chain", "NUMBER", "pem", "basename", "chain", "NUMBER", "pem", "current", "chain", "NUMBER", "pem", "echo", "chain", "NUMBER", "pem", "cut", "d", "NUMBER", "f", "NUMBER", "filebase", "chain", "echo", "chain", "NUMBER", "pem", "cut", "d", "NUMBER", "f", "NUMBER", "fileext", "pem", "for", "file", "in", "certdir", "filebase", "NUMBER", "fileext", "certdir", "filebase", "NUMBER", "fileext", "revoked", "basename", "usr", "local", "etc", "dehydrated", "certs", "www", "NUMBER", "XXX", "NUMBER", "com", "NUMBER", "ecdsa", "chain", "NUMBER", "pem", "filename", "chain", "NUMBER", "pem", "chain", "NUMBER", "pem", "c", "h", "a", "i", "n", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "p", "e", "m", "for", "filetype", "in", "cert", "NUMBER", "csr", "cert", "NUMBER", "pem", "chain", "NUMBER", "pem", "fullchain", "NUMBER", "pem", "privkey", "NUMBER", "pem", "ocsp", "NUMBER", "der", "r", "usr", "local", "etc", "dehydrated", "certs", "www", "NUMBER", "XXX", "NUMBER", "com", "NUMBER", "ecdsa", "fullchain", "NUMBER", "pem", "readlink", "usr", "local", "etc", "dehydrated", "certs", "www", "NUMBER", "XXX", "NUMBER", "com", "NUMBER", "ecdsa", "fullchain", "NUMBER", "pem", "basename", "fullchain", "NUMBER", "pem", "current", "fullchain", "NUMBER", "pem", "echo", "fullchain", "NUMBER", "pem", "cut", "d", "NUMBER", "f", "NUMBER", "filebase", "fullchain", "echo", "fullchain", "NUMBER", "pem", "cut", "d", "NUMBER", "f", "NUMBER", "fileext", "pem", "for", "file", "in", "certdir", "filebase", "NUMBER", "fileext", "certdir", "filebase", "NUMBER", "fileext", "revoked", "basename", "usr", "local", "etc", "dehydrated", "certs", "www", "NUMBER", "XXX", "NUMBER", "com", "NUMBER", "ecdsa", "fullchain", "NUMBER", "pem", "filename", "fullchain", "NUMBER", "pem", "fullchain", "NUMBER", "pem", "f", "u", "l", "l", "c", "h", "a", "i", "n", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "p", "e", "m", "for", "filetype", "in", "cert", "NUMBER", "csr", "cert", "NUMBER", "pem", "chain", "NUMBER", "pem", "fullchain", "NUMBER", "pem", "privkey", "NUMBER", "pem", "ocsp", "NUMBER", "der", "r", "usr", "local", "etc", "dehydrated", "certs", "www", "NUMBER", "XXX", "NUMBER", "com", "NUMBER", "ecdsa", "privkey", "NUMBER", "pem", "readlink", "usr", "local", "etc", "dehydrated", "certs", "www", "NUMBER", "XXX", "NUMBER", "com", "NUMBER", "ecdsa", "privkey", "NUMBER", "pem", "basename", "privkey", "NUMBER", "pem", "current", "privkey", "NUMBER", "pem", "echo", "privkey", "NUMBER", "pem", "cut", "d", "NUMBER", "f", "NUMBER", "filebase", "privkey", "echo", "privkey", "NUMBER", "pem", "cut", "d", "NUMBER", "f", "NUMBER", "fileext", "pem", "for", "file", "in", "certdir", "filebase", "NUMBER", "fileext", "certdir", "filebase", "NUMBER", "fileext", "revoked", "basename", "usr", "local", "etc", "dehydrated", "certs", "www", "NUMBER", "XXX", "NUMBER", "com", "NUMBER", "ecdsa", "privkey", "NUMBER", "pem", "filename", "privkey", "NUMBER", "pem", "privkey", "NUMBER", "pem", "p", "r", "i", "v", "k", "e", "y", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "p", "e", "m", "for", "filetype", "in", "cert", "NUMBER", "csr", "cert", "NUMBER", "pem", "chain", "NUMBER", "pem", "fullchain", "NUMBER", "pem", "privkey", "NUMBER", "pem", "ocsp", "NUMBER", "der", "r", "usr", "local", "etc", "dehydrated", "certs", "www", "NUMBER", "XXX", "NUMBER", "com", "NUMBER", "ecdsa", "ocsp", "NUMBER", "der", "readlink", "usr", "local", "etc", "dehydrated", "certs", "www", "NUMBER", "XXX", "NUMBER", "com", "NUMBER", "ecdsa", "ocsp", "NUMBER", "der", "basename", "ocsp", "NUMBER", "der", "current", "ocsp", "NUMBER", "der", "echo", "ocsp", "NUMBER", "der", "cut", "d", "NUMBER", "f", "NUMBER", "filebase", "ocsp", "echo", "ocsp", "NUMBER", "der", "cut", "d", "NUMBER", "f", "NUMBER", "fileext", "der", "for", "file", "in", "certdir", "filebase", "NUMBER", "fileext", "certdir", "filebase", "NUMBER", "fileext", "revoked", "basename", "usr", "local", "etc", "dehydrated", "certs", "www", "NUMBER", "XXX", "NUMBER", "com", "NUMBER", "ecdsa", "ocsp", "NUMBER", "der", "filename", "ocsp", "NUMBER", "der", "ocsp", "NUMBER", "der", "o", "c", "s", "p", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "d", "e", "r", "exit", "NUMBER", "remove_lock", "rm", "f", "usr", "local", "etc", "dehydrated", "lock", "e", "usr", "local", "etc", "dehydrated", "certs", "cloud", "NUMBER", "XXX", "NUMBER", "com", "cert", "NUMBER", "pem", "echo", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "openssl", "x", "NUMBER", "enddate", "noout", "in", "usr", "local", "etc", "dehydrated", "certs", "cloud", "NUMBER", "XXX", "NUMBER", "com", "cert", "NUMBER", "pem", "cut", "d", "f", "NUMBER", "valid", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "printf", "Valid", "till", "s", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Valid", "till", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "openssl", "x", "NUMBER", "checkend", "NUMBER", "noout", "in", "usr", "local", "etc", "dehydrated", "certs", "cloud", "NUMBER", "XXX", "NUMBER", "com", "cert", "NUMBER", "pem", "printf", "Longer", "than", "d", "days", "NUMBER", "NUMBER", "Longer", "than", "NUMBER", "days", "NUMBER", "no", "y", "e", "s", "echo", "Skipping", "renew", "Skipping", "renew", "n", "usr", "local", "etc", "dehydrated", "hook", "NUMBER", "sh", "usr", "local", "etc", "dehydrated", "hook", "NUMBER", "sh", "unchanged_cert", "cloud", "NUMBER", "XXX", "NUMBER", "com", "usr", "local", "etc", "dehydrated", "certs", "cloud", "NUMBER", "XXX", "NUMBER", "com", "privkey", "NUMBER", "pem", "usr", "local", "etc", "dehydrated", "certs", "cloud", "NUMBER", "XXX", "NUMBER", "com", "cert", "NUMBER", "pem", "usr", "local", "etc", "dehydrated", "certs", "cloud", "NUMBER", "XXX", "NUMBER", "com", "fullchain", "NUMBER", "pem", "usr", "local", "etc", "dehydrated", "certs", "cloud", "NUMBER", "XXX", "NUMBER", "com", "chain", "NUMBER", "pem", "skip", "yes", "local", "update_ocsp", "update_ocsp", "no", "yes", "y", "e", "s", "yes", "y", "e", "s", "local", "ocsp_url", "get_ocsp_url", "usr", "local", "etc", "dehydrated", "certs", "cloud", "NUMBER", "XXX", "NUMBER", "com", "cert", "NUMBER", "pem", "certificate", "usr", "local", "etc", "dehydrated", "certs", "cloud", "NUMBER", "XXX", "NUMBER", "com", "cert", "NUMBER", "pem", "openssl", "x", "NUMBER", "in", "usr", "local", "etc", "dehydrated", "certs", "cloud", "NUMBER", "XXX", "NUMBER", "com", "cert", "NUMBER", "pem", "noout", "ocsp_uri", "ocsp_url", "LINK", "x", "NUMBER", "letsencrypt", "NUMBER", "org", "e", "usr", "local", "etc", "dehydrated", "certs", "cloud", "NUMBER", "XXX", "NUMBER", "com", "ocsp", "NUMBER", "der", "update_ocsp", "yes", "yes", "y", "e", "s", "echo", "Updating", "OCSP", "stapling", "file", "Updating", "OCSP", "stapling", "file", "date", "s", "ocsp_timestamp", "NUMBER", "grep", "qE", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "openssl", "version", "awk", "print", "NUMBER", "openssl", "ocsp", "no_nonce", "issuer", "usr", "local", "etc", "dehydrated", "certs", "cloud", "NUMBER", "XXX", "NUMBER", "com", "chain", "NUMBER", "pem", "verify_other", "usr", "local", "etc", "dehydrated", "certs", "cloud", "NUMBER", "XXX", "NUMBER", "com", "chain", "NUMBER", "pem", "cert", "usr", "local", "etc", "dehydrated", "certs", "cloud", "NUMBER", "XXX", "NUMBER", "com", "cert", "NUMBER", "pem", "respout", "usr", "local", "etc", "dehydrated", "certs", "cloud", "NUMBER", "XXX", "NUMBER", "com", "ocsp", "NUMBER", "der", "url", "LINK", "x", "NUMBER", "letsencrypt", "NUMBER", "org", "remove_lock", "rm", "f", "usr", "local", "etc", "dehydrated", "lock", "openssl", "version", "LibreSSL", "NUMBER", "It", "do", "work", "in", "any", "case", "with", "OpenSSL", "just", "checked", "With", "the", "globbing", "change", "made", "in", "NUMBER", "cf", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "ec", "NUMBER", "to", "globally", "disable", "globbing", "by", "default", "this", "broke", "the", "ability", "to", "load", "the", "CONFIG_D", "NUMBER", "sh", "file", "NUMBER", "This", "re", "enable", "globbing", "when", "reading", "these", "NUMBER", "sh", "file", "and", "then", "disables", "it", "again", "afterwards", "NUMBER", "Note", "that", "this", "also", "keep", "globbing", "enable", "inside", "the", "loop", "when", "sourcing", "the", "individual", "NUMBER", "sh", "file", "for", "backwards", "compatibility", "so", "if", "the", "individual", "config", "scripts", "relied", "on", "the", "default", "of", "globbing", "be", "enable", "there", "won", "t", "be", "any", "change", "in", "behavior", "NUMBER", "openssl", "genrsa", "and", "openssl", "ecparam", "genkey", "tend", "to", "chmod", "the", "output", "file", "to", "make", "the", "private", "key", "unreadable", "by", "group", "and", "others", "NUMBER", "This", "breaks", "a", "workflow", "where", "admin", "uses", "POSIX", "ACLs", "to", "manage", "keys", "access", "rights", "because", "POSIX", "ACLs", "reuse", "group", "permissions", "for", "the", "ACL", "mask", "hence", "forcing", "group", "permissions", "to", "NUMBER", "with", "plain", "chmod", "masks", "away", "all", "extend", "ACLs", "NUMBER", "By", "redirecting", "genrsa", "output", "from", "stdout", "we", "avoid", "this", "behavior", "while", "staying", "secure", "even", "if", "ACLs", "be", "not", "use", "because", "we", "explicitly", "set", "umask", "NUMBER", "in", "the", "beginning", "of", "the", "script", "NUMBER", "Example", "of", "the", "broken", "behavior", "pwd", "etc", "admin", "certs", "intelfx", "NUMBER", "name", "getfacl", "NUMBER", "file", "NUMBER", "owner", "letsencrypt", "group", "letsencrypt", "user", "rwx", "group", "group", "http", "cert", "r", "x", "mask", "r", "x", "other", "default", "user", "rwx", "default", "group", "default", "group", "http", "cert", "r", "x", "default", "mask", "r", "x", "default", "other", "getfacl", "cert", "NUMBER", "pem", "file", "cert", "NUMBER", "pem", "owner", "letsencrypt", "group", "letsencrypt", "user", "rw", "group", "group", "http", "cert", "r", "mask", "r", "other", "getfacl", "privkey", "NUMBER", "pem", "file", "privkey", "NUMBER", "pem", "owner", "letsencrypt", "group", "letsencrypt", "user", "rw", "group", "group", "http", "cert", "r", "effective", "mask", "other", "Here", "I", "run", "dehydrated", "as", "letsencrypt", "letsencrypt", "and", "use", "group", "http", "cert", "for", "all", "applications", "that", "need", "access", "to", "the", "certificates", "and", "the", "private", "key", "NUMBER", "The", "output", "directory", "be", "modify", "as", "follows", "setfacl", "m", "u", "rwX", "g", "NUMBER", "o", "NUMBER", "m", "g", "http", "cert", "rX", "NUMBER", "setfacl", "d", "m", "u", "rwX", "g", "NUMBER", "o", "NUMBER", "m", "g", "http", "cert", "rX", "NUMBER", "Note", "that", "I", "had", "to", "non", "trivially", "change", "the", "definition", "of", "_openssl", "to", "let", "stdout", "through", "while", "my", "bash", "fu", "be", "mostly", "fine", "I", "don", "t", "really", "know", "if", "this", "be", "OK", "semantically", "NUMBER", "Ugh", "so", "it", "be", "_not_", "at", "least", "when", "checking", "certificate", "for", "corruption", "it", "makes", "certificate", "details", "leak", "to", "the", "terminal", "NUMBER", "OK", "made", "it", "a", "separate", "wrapper", "which", "we", "use", "only", "for", "genrsa", "genkey", "NUMBER", "openssl", "NUMBER", "g", "can", "reproduce", "NUMBER", "export", "LC_ALL", "C", "pacman", "Qi", "openssl", "grep", "Version", "Version", "NUMBER", "g", "NUMBER", "getfacl", "NUMBER", "file", "NUMBER", "owner", "operator", "group", "users", "user", "rwx", "group", "group", "http", "cert", "r", "x", "mask", "r", "x", "other", "default", "user", "rwx", "default", "group", "default", "group", "http", "cert", "r", "x", "default", "mask", "r", "x", "default", "other", "openssl", "genrsa", "out", "key", "NUMBER", "rsa", "NUMBER", "Generating", "RSA", "private", "key", "NUMBER", "bit", "long", "modulus", "NUMBER", "NUMBER", "e", "be", "NUMBER", "NUMBER", "x", "NUMBER", "openssl", "genrsa", "NUMBER", "key", "NUMBER", "rsa", "Generating", "RSA", "private", "key", "NUMBER", "bit", "long", "modulus", "NUMBER", "NUMBER", "e", "be", "NUMBER", "NUMBER", "x", "NUMBER", "getfacl", "key", "NUMBER", "rsa", "key", "NUMBER", "rsa", "file", "key", "NUMBER", "rsa", "owner", "operator", "group", "users", "user", "rw", "group", "group", "http", "cert", "r", "x", "effective", "mask", "other", "file", "key", "NUMBER", "rsa", "owner", "operator", "group", "users", "user", "rw", "group", "group", "http", "cert", "r", "x", "effective", "r", "mask", "r", "other", "lukas", "NUMBER", "any", "progress", "This", "be", "literally", "a", "no", "brainer", "NUMBER", "lukas", "NUMBER", "Yep", "works", "for", "me", "NUMBER", "I", "find", "the", "solution", "via", "temporary", "file", "to", "be", "dirtier", "but", "well", "whatever", "NUMBER", "The", "symbolic", "link", "point", "to", "the", "latest", "ocsp", "NUMBER", "der", "be", "incorrect", "check", "how", "ln", "s", "be", "use", "to", "create", "other", "links", "those", "other", "work", "NUMBER", "gives", "output", "like", "fork", "NUMBER", "pl", "NUMBER", "VALID", "Dec", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "test", "NUMBER", "fork", "NUMBER", "pl", "NUMBER", "RENEWAL", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "domain", "NUMBER", "domain", "NUMBER", "domain", "NUMBER", "com", "NUMBER", "EXPIRED", "Sep", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "and", "exit", "code", "NUMBER", "NUMBER", "or", "NUMBER", "NUMBER", "for", "at", "least", "one", "to", "be", "renewed", "NUMBER", "for", "at", "least", "one", "expired", "My", "only", "suggestion", "be", "to", "use", "obviously", "unique", "exit", "statuses", "NUMBER", "Perhaps", "NUMBER", "the", "current", "ones", "This", "will", "help", "ensure", "that", "the", "results", "aren", "t", "potentially", "parsed", "as", "error", "conditions", "whether", "by", "human", "or", "by", "machine", "NUMBER", "lewellyn", "LINK", "plugins", "NUMBER", "org", "doc", "guidelines", "NUMBER", "html", "AEN", "NUMBER", "I", "have", "dehydrated", "run", "in", "a", "cron", "script", "so", "I", "haven", "t", "change", "my", "config", "in", "a", "while", "NUMBER", "However", "it", "recently", "stopped", "work", "NUMBER", "I", "run", "it", "manually", "and", "get", "the", "following", "error", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "LxPiZ", "NUMBER", "RIVyEMv", "l", "NUMBER", "GcUA", "NUMBER", "PU", "NUMBER", "kbXGPvxQ", "NUMBER", "p", "NUMBER", "Vo", "NUMBER", "g", "NUMBER", "Status", "NUMBER", "Details", "type", "urn", "acme", "error", "malformed", "detail", "Unable", "to", "update", "challenge", "The", "challenge", "be", "not", "pending", "NUMBER", "status", "NUMBER", "I", "don", "t", "think", "I", "have", "ever", "seen", "that", "NUMBER", "Have", "you", "tried", "update", "dehydrated", "Yes", "this", "was", "from", "the", "git", "master", "NUMBER", "I", "m", "seeing", "this", "to", "Any", "soulution", "to", "it", "ludeeus", "Can", "you", "provide", "the", "full", "output", "you", "re", "seeing", "Ideally", "with", "the", "authorization", "challenge", "URL", "The", "example", "from", "bjmgeek", "be", "too", "old", "for", "me", "to", "find", "in", "the", "server", "side", "logs", "for", "the", "Let", "s", "Encrypt", "validation", "authority", "NUMBER", "If", "I", "had", "to", "guess", "I", "d", "say", "this", "might", "be", "relate", "to", "a", "recent", "Aug", "NUMBER", "change", "to", "recycle", "pending", "authorizations", "LINK", "recycling", "of", "pending", "authorizations", "NUMBER", "NUMBER", "lukas", "NUMBER", "Is", "there", "any", "chance", "that", "two", "threads", "instances", "of", "Dehydrated", "could", "be", "request", "an", "authorization", "get", "back", "the", "same", "one", "and", "then", "trip", "over", "each", "other", "when", "one", "instance", "POSTs", "the", "authorization", "change", "the", "state", "from", "pending", "invalid", "valid", "before", "the", "second", "instance", "POSTs", "the", "same", "authorization", "receiving", "the", "error", "about", "it", "be", "in", "a", "non", "pending", "state", "cpu", "i", "don", "t", "think", "this", "be", "a", "threading", "issue", "dehydrated", "should", "prevent", "this", "and", "in", "case", "it", "doesn", "t", "the", "variance", "in", "latencies", "be", "so", "big", "that", "probably", "around", "the", "third", "run", "one", "of", "the", "instances", "would", "just", "win", "the", "race", "condition", "bjmgeek", "do", "you", "by", "any", "chance", "remember", "if", "the", "issue", "just", "went", "away", "after", "around", "NUMBER", "days", "that", "would", "indicate", "a", "problem", "with", "the", "recycled", "authorizations", "maybe", "for", "some", "reason", "dehydrated", "doesn", "t", "notice", "the", "verification", "be", "already", "valid", "and", "thinks", "it", "s", "still", "pending", "i", "ll", "have", "a", "look", "at", "how", "that", "might", "be", "possible", "NUMBER", "maybe", "for", "some", "reason", "dehydrated", "doesn", "t", "notice", "the", "verification", "be", "already", "valid", "and", "thinks", "it", "s", "still", "pending", "i", "ll", "have", "a", "look", "at", "how", "that", "might", "be", "possible", "NUMBER", "That", "seems", "like", "a", "more", "plausible", "explanation", "than", "my", "threading", "guesses", "cpu", "Tried", "again", "now", "and", "it", "worked", "NUMBER", "But", "it", "looked", "the", "same", "as", "bjmgeek", "Well", "let", "me", "try", "again", "NUMBER", "I", "m", "still", "seeing", "an", "error", "but", "not", "the", "malformed", "one", "bminton", "etc", "cron", "NUMBER", "weekly", "letsencrypt", "INFO", "Using", "main", "config", "file", "var", "local", "dehydrated", "rsa", "config", "Processing", "brian", "NUMBER", "minton", "NUMBER", "name", "with", "alternative", "names", "www", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "secure", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "blog", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "photos", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "music", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "bjmgeek", "NUMBER", "science", "meadowfen", "NUMBER", "farm", "meadowfenfarm", "NUMBER", "com", "www", "NUMBER", "meadowfen", "NUMBER", "farm", "www", "NUMBER", "meadowfenfarm", "NUMBER", "com", "meadowfen", "NUMBER", "farm", "blog", "NUMBER", "meadowfen", "NUMBER", "farm", "gallery", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "bminton", "NUMBER", "be", "a", "geek", "NUMBER", "net", "caelonna", "NUMBER", "be", "a", "geek", "NUMBER", "net", "www", "NUMBER", "bminton", "NUMBER", "be", "a", "geek", "NUMBER", "net", "www", "NUMBER", "caelonna", "NUMBER", "be", "a", "geek", "NUMBER", "net", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "change", "Domain", "name", "s", "be", "not", "matching", "Names", "in", "old", "certificate", "bjmgeek", "NUMBER", "science", "blog", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "blog", "NUMBER", "meadowfen", "NUMBER", "farm", "bminton", "NUMBER", "be", "a", "geek", "NUMBER", "net", "brian", "NUMBER", "minton", "NUMBER", "name", "caelonna", "NUMBER", "be", "a", "geek", "NUMBER", "net", "gallery", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "meadowfen", "NUMBER", "farm", "meadowfenfarm", "NUMBER", "com", "music", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "photos", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "secure", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "www", "NUMBER", "bjmgeek", "NUMBER", "science", "www", "NUMBER", "bminton", "NUMBER", "be", "a", "geek", "NUMBER", "net", "www", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "www", "NUMBER", "caelonna", "NUMBER", "be", "a", "geek", "NUMBER", "net", "www", "NUMBER", "meadowfen", "NUMBER", "farm", "www", "NUMBER", "meadowfenfarm", "NUMBER", "com", "Configured", "names", "bjmgeek", "NUMBER", "science", "blog", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "blog", "NUMBER", "meadowfen", "NUMBER", "farm", "bminton", "NUMBER", "be", "a", "geek", "NUMBER", "net", "brian", "NUMBER", "minton", "NUMBER", "name", "caelonna", "NUMBER", "be", "a", "geek", "NUMBER", "net", "gallery", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "meadowfen", "NUMBER", "farm", "meadowfenfarm", "NUMBER", "com", "music", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "photos", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "secure", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "www", "NUMBER", "bminton", "NUMBER", "be", "a", "geek", "NUMBER", "net", "www", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "www", "NUMBER", "caelonna", "NUMBER", "be", "a", "geek", "NUMBER", "net", "www", "NUMBER", "meadowfen", "NUMBER", "farm", "www", "NUMBER", "meadowfenfarm", "NUMBER", "com", "Forcing", "renew", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "Aug", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Certificate", "will", "expire", "Less", "than", "NUMBER", "days", "NUMBER", "Renewing", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "brian", "NUMBER", "minton", "NUMBER", "name", "NUMBER", "Already", "validated", "Requesting", "challenge", "for", "www", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "NUMBER", "Already", "validated", "Requesting", "challenge", "for", "secure", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "NUMBER", "Already", "validated", "Requesting", "challenge", "for", "blog", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "NUMBER", "Already", "validated", "Requesting", "challenge", "for", "photos", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "NUMBER", "Already", "validated", "Requesting", "challenge", "for", "music", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "NUMBER", "Already", "validated", "Requesting", "challenge", "for", "bjmgeek", "NUMBER", "science", "NUMBER", "Already", "validated", "Requesting", "challenge", "for", "meadowfen", "NUMBER", "farm", "NUMBER", "Requesting", "challenge", "for", "meadowfenfarm", "NUMBER", "com", "NUMBER", "Requesting", "challenge", "for", "www", "NUMBER", "meadowfen", "NUMBER", "farm", "NUMBER", "Requesting", "challenge", "for", "www", "NUMBER", "meadowfenfarm", "NUMBER", "com", "NUMBER", "Requesting", "challenge", "for", "meadowfen", "NUMBER", "farm", "NUMBER", "Requesting", "challenge", "for", "blog", "NUMBER", "meadowfen", "NUMBER", "farm", "NUMBER", "Requesting", "challenge", "for", "gallery", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "NUMBER", "Requesting", "challenge", "for", "bminton", "NUMBER", "be", "a", "geek", "NUMBER", "net", "NUMBER", "Already", "validated", "Requesting", "challenge", "for", "caelonna", "NUMBER", "be", "a", "geek", "NUMBER", "net", "NUMBER", "Requesting", "challenge", "for", "www", "NUMBER", "bminton", "NUMBER", "be", "a", "geek", "NUMBER", "net", "NUMBER", "Already", "validated", "Requesting", "challenge", "for", "www", "NUMBER", "caelonna", "NUMBER", "be", "a", "geek", "NUMBER", "net", "NUMBER", "Responding", "to", "challenge", "for", "meadowfen", "NUMBER", "farm", "NUMBER", "ERROR", "Challenge", "be", "invalid", "returned", "invalid", "result", "type", "http", "NUMBER", "status", "invalid", "error", "type", "urn", "acme", "error", "tls", "detail", "Fetching", "LINK", "know", "acme", "challenge", "YnBrrDhEH", "NUMBER", "MS_VUtzLWebjXL", "NUMBER", "Vu", "NUMBER", "hmXNVSXFidXik", "remote", "error", "tls", "handshake", "failure", "status", "NUMBER", "uri", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "ab", "NUMBER", "eJAjutzyUyw", "NUMBER", "yKMkZoRj", "NUMBER", "rxveUoGhnRPE", "NUMBER", "pfo", "NUMBER", "token", "YnBrrDhEH", "NUMBER", "MS_VUtzLWebjXL", "NUMBER", "Vu", "NUMBER", "hmXNVSXFidXik", "keyAuthorization", "YnBrrDhEH", "NUMBER", "MS_VUtzLWebjXL", "NUMBER", "Vu", "NUMBER", "hmXNVSXFidXik", "NUMBER", "cmLjPBGSVyPZAIrbFOMeUhOUSmH", "NUMBER", "n", "NUMBER", "DW", "NUMBER", "urqTP", "NUMBER", "k", "validationRecord", "url", "LINK", "know", "acme", "challenge", "YnBrrDhEH", "NUMBER", "MS_VUtzLWebjXL", "NUMBER", "Vu", "NUMBER", "hmXNVSXFidXik", "hostname", "meadowfen", "NUMBER", "farm", "port", "NUMBER", "addressesResolved", "NUMBER", "addressUsed", "NUMBER", "addressesTried", "url", "LINK", "know", "acme", "challenge", "YnBrrDhEH", "NUMBER", "MS_VUtzLWebjXL", "NUMBER", "Vu", "NUMBER", "hmXNVSXFidXik", "hostname", "meadowfen", "NUMBER", "farm", "port", "NUMBER", "addressesResolved", "NUMBER", "addressUsed", "NUMBER", "addressesTried", "INFO", "Using", "main", "config", "file", "var", "local", "dehydrated", "ecc", "config", "Processing", "brian", "NUMBER", "minton", "NUMBER", "name", "with", "alternative", "names", "www", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "secure", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "blog", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "photos", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "music", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "bjmgeek", "NUMBER", "science", "meadowfen", "NUMBER", "farm", "meadowfenfarm", "NUMBER", "com", "www", "NUMBER", "meadowfen", "NUMBER", "farm", "www", "NUMBER", "meadowfenfarm", "NUMBER", "com", "meadowfen", "NUMBER", "farm", "blog", "NUMBER", "meadowfen", "NUMBER", "farm", "gallery", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "bminton", "NUMBER", "be", "a", "geek", "NUMBER", "net", "caelonna", "NUMBER", "be", "a", "geek", "NUMBER", "net", "www", "NUMBER", "bminton", "NUMBER", "be", "a", "geek", "NUMBER", "net", "www", "NUMBER", "caelonna", "NUMBER", "be", "a", "geek", "NUMBER", "net", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "change", "Domain", "name", "s", "be", "not", "matching", "Names", "in", "old", "certificate", "bjmgeek", "NUMBER", "science", "blog", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "blog", "NUMBER", "meadowfen", "NUMBER", "farm", "bminton", "NUMBER", "be", "a", "geek", "NUMBER", "net", "brian", "NUMBER", "minton", "NUMBER", "name", "caelonna", "NUMBER", "be", "a", "geek", "NUMBER", "net", "gallery", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "meadowfen", "NUMBER", "farm", "meadowfenfarm", "NUMBER", "com", "music", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "photos", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "secure", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "www", "NUMBER", "bjmgeek", "NUMBER", "science", "www", "NUMBER", "bminton", "NUMBER", "be", "a", "geek", "NUMBER", "net", "www", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "www", "NUMBER", "caelonna", "NUMBER", "be", "a", "geek", "NUMBER", "net", "www", "NUMBER", "meadowfen", "NUMBER", "farm", "www", "NUMBER", "meadowfenfarm", "NUMBER", "com", "Configured", "names", "bjmgeek", "NUMBER", "science", "blog", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "blog", "NUMBER", "meadowfen", "NUMBER", "farm", "bminton", "NUMBER", "be", "a", "geek", "NUMBER", "net", "brian", "NUMBER", "minton", "NUMBER", "name", "caelonna", "NUMBER", "be", "a", "geek", "NUMBER", "net", "gallery", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "meadowfen", "NUMBER", "farm", "meadowfenfarm", "NUMBER", "com", "music", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "photos", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "secure", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "www", "NUMBER", "bminton", "NUMBER", "be", "a", "geek", "NUMBER", "net", "www", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "www", "NUMBER", "caelonna", "NUMBER", "be", "a", "geek", "NUMBER", "net", "www", "NUMBER", "meadowfen", "NUMBER", "farm", "www", "NUMBER", "meadowfenfarm", "NUMBER", "com", "Forcing", "renew", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "Aug", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Certificate", "will", "expire", "Less", "than", "NUMBER", "days", "NUMBER", "Renewing", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "brian", "NUMBER", "minton", "NUMBER", "name", "NUMBER", "Already", "validated", "Requesting", "challenge", "for", "www", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "NUMBER", "Already", "validated", "Requesting", "challenge", "for", "secure", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "NUMBER", "Already", "validated", "Requesting", "challenge", "for", "blog", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "NUMBER", "Already", "validated", "Requesting", "challenge", "for", "photos", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "NUMBER", "Already", "validated", "Requesting", "challenge", "for", "music", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "NUMBER", "Already", "validated", "Requesting", "challenge", "for", "bjmgeek", "NUMBER", "science", "NUMBER", "Already", "validated", "Requesting", "challenge", "for", "meadowfen", "NUMBER", "farm", "NUMBER", "Requesting", "challenge", "for", "meadowfenfarm", "NUMBER", "com", "NUMBER", "Requesting", "challenge", "for", "www", "NUMBER", "meadowfen", "NUMBER", "farm", "NUMBER", "Requesting", "challenge", "for", "www", "NUMBER", "meadowfenfarm", "NUMBER", "com", "NUMBER", "Requesting", "challenge", "for", "meadowfen", "NUMBER", "farm", "NUMBER", "Requesting", "challenge", "for", "blog", "NUMBER", "meadowfen", "NUMBER", "farm", "NUMBER", "Requesting", "challenge", "for", "gallery", "NUMBER", "brian", "NUMBER", "minton", "NUMBER", "name", "NUMBER", "Requesting", "challenge", "for", "bminton", "NUMBER", "be", "a", "geek", "NUMBER", "net", "NUMBER", "Already", "validated", "Requesting", "challenge", "for", "caelonna", "NUMBER", "be", "a", "geek", "NUMBER", "net", "NUMBER", "Requesting", "challenge", "for", "www", "NUMBER", "bminton", "NUMBER", "be", "a", "geek", "NUMBER", "net", "NUMBER", "Already", "validated", "Requesting", "challenge", "for", "www", "NUMBER", "caelonna", "NUMBER", "be", "a", "geek", "NUMBER", "net", "NUMBER", "Responding", "to", "challenge", "for", "meadowfen", "NUMBER", "farm", "NUMBER", "ERROR", "Challenge", "be", "invalid", "returned", "invalid", "result", "type", "http", "NUMBER", "status", "invalid", "error", "type", "urn", "acme", "error", "tls", "detail", "Fetching", "LINK", "know", "acme", "challenge", "xFiN_DW", "NUMBER", "fpXNYvMkEmGFUJOd", "NUMBER", "qjDPu", "OPImav", "NUMBER", "voA", "remote", "error", "tls", "handshake", "failure", "status", "NUMBER", "uri", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "NUMBER", "WYYga", "NUMBER", "hQzhVu", "NUMBER", "olce", "NUMBER", "VHCTTFLPDO", "NUMBER", "p", "NUMBER", "pwe", "NUMBER", "xlxZ", "NUMBER", "o", "NUMBER", "token", "xFiN_DW", "NUMBER", "fpXNYvMkEmGFUJOd", "NUMBER", "qjDPu", "OPImav", "NUMBER", "voA", "keyAuthorization", "xFiN_DW", "NUMBER", "fpXNYvMkEmGFUJOd", "NUMBER", "qjDPu", "OPImav", "NUMBER", "voA", "NUMBER", "EpzKSq", "NUMBER", "tAP", "GpNV", "kX", "NUMBER", "q", "NUMBER", "Wez", "NUMBER", "B", "NUMBER", "Ru", "NUMBER", "P", "NUMBER", "XZkpIcgN", "NUMBER", "validationRecord", "url", "LINK", "know", "acme", "challenge", "xFiN_DW", "NUMBER", "fpXNYvMkEmGFUJOd", "NUMBER", "qjDPu", "OPImav", "NUMBER", "voA", "hostname", "meadowfen", "NUMBER", "farm", "port", "NUMBER", "addressesResolved", "NUMBER", "addressUsed", "NUMBER", "addressesTried", "url", "LINK", "know", "acme", "challenge", "xFiN_DW", "NUMBER", "fpXNYvMkEmGFUJOd", "NUMBER", "qjDPu", "OPImav", "NUMBER", "voA", "hostname", "meadowfen", "NUMBER", "farm", "port", "NUMBER", "addressesResolved", "NUMBER", "addressUsed", "NUMBER", "addressesTried", "bminton", "bjmgeek", "this", "looks", "like", "a", "completely", "unrelated", "issue", "which", "seems", "to", "be", "on", "your", "side", "NUMBER", "maybe", "it", "s", "a", "problem", "with", "the", "expired", "certificate", "and", "your", "forced", "ssl", "redirect", "Perhaps", "NUMBER", "In", "any", "case", "I", "m", "trying", "with", "a", "dns", "NUMBER", "challenge", "now", "NUMBER", "In", "January", "NUMBER", "Lets", "Encrypt", "will", "launch", "a", "new", "ACME", "v", "NUMBER", "Endpoint", "that", "will", "allow", "wildcard", "certificates", "NUMBER", "Any", "plan", "to", "implement", "this", "Is", "your", "mic", "on", "Yes", "I", "have", "a", "few", "use", "cases", "for", "wildcard", "certificates", "too", "so", "this", "will", "definitively", "get", "implement", "Great", "news", "Do", "you", "have", "any", "timeline", "Is", "there", "any", "way", "we", "can", "collaborate", "help", "you", "in", "this", "effort", "Leonid", "Belkind", "Co", "Founder", "CTO", "Luminate", "Security", "Mobile", "NUMBER", "NUMBER", "NUMBER", "leonid", "luminatesec", "NUMBER", "com", "TAG", "id", "image", "NUMBER", "png", "NUMBER", "D", "NUMBER", "E", "NUMBER", "CE", "NUMBER", "B", "NUMBER", "__________________________________________________________________", "This", "message", "may", "contain", "confidential", "and", "or", "proprietary", "information", "and", "be", "intended", "only", "for", "the", "person", "entity", "to", "whom", "it", "was", "originally", "address", "NUMBER", "The", "content", "of", "this", "message", "may", "contain", "private", "views", "and", "opinions", "which", "do", "not", "constitute", "a", "formal", "disclosure", "or", "commitment", "unless", "specifically", "stated", "NUMBER", "From", "Lukas", "Schauer", "TAG", "Reply", "To", "lukas", "NUMBER", "dehydrated", "TAG", "Date", "Thursday", "NUMBER", "December", "NUMBER", "at", "NUMBER", "NUMBER", "To", "lukas", "NUMBER", "dehydrated", "TAG", "Cc", "Leonid", "Belkind", "TAG", "Author", "TAG", "Subject", "Re", "lukas", "NUMBER", "dehydrated", "ACME", "v", "NUMBER", "Support", "NUMBER", "Yes", "I", "have", "a", "few", "use", "cases", "for", "wildcard", "certificates", "too", "so", "this", "will", "definitively", "get", "implement", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "I", "haven", "t", "actually", "read", "the", "spec", "yet", "NUMBER", "If", "not", "too", "much", "has", "change", "this", "may", "be", "implement", "in", "January", "certainly", "only", "push", "to", "master", "after", "the", "new", "endpoint", "be", "online", "NUMBER", "If", "it", "s", "more", "time", "consuming", "I", "m", "guessing", "late", "Feb", "or", "Mar", "NUMBER", "Certificate", "handle", "probably", "doesn", "t", "need", "to", "be", "touched", "a", "lot", "support", "for", "wildcard", "certificates", "should", "be", "easily", "handle", "script", "internally", "as", "if", "they", "would", "just", "be", "a", "normal", "subdomain", "I", "m", "kinda", "hoping", "that", "only", "a", "few", "api", "calls", "have", "to", "be", "change", "NUMBER", "A", "great", "help", "would", "be", "a", "short", "summary", "if", "in", "any", "way", "possible", "NUMBER", "of", "the", "major", "change", "in", "the", "protocol", "NUMBER", "If", "a", "lot", "has", "change", "a", "proof", "of", "concept", "shell", "or", "python", "or", "some", "other", "easily", "readable", "language", "script", "with", "api", "calls", "against", "the", "new", "version", "would", "be", "great", "NUMBER", "Just", "something", "that", "gives", "a", "good", "starting", "point", "for", "figuring", "out", "how", "stuff", "works", "nothing", "more", "NUMBER", "Can", "t", "say", "that", "I", "be", "familiar", "with", "the", "current", "Boulder", "implementation", "of", "ACME", "enough", "to", "comment", "on", "the", "diff", "NUMBER", "I", "be", "looking", "at", "the", "latest", "IETF", "standardized", "ACME", "implementation", "which", "according", "to", "the", "ITRG", "people", "will", "serve", "as", "the", "basis", "for", "their", "ACME", "V", "NUMBER", "Endpoint", "LINK", "ietf", "acme", "acme", "NUMBER", "this", "be", "at", "least", "the", "latest", "available", "draft", "I", "be", "looking", "at", "the", "RFC", "diff", "LINK", "LINK", "ietf", "acme", "acme", "NUMBER", "txt", "url", "NUMBER", "LINK", "ietf", "acme", "acme", "NUMBER", "txt", "The", "protocol", "was", "enriched", "significantly", "the", "question", "be", "what", "be", "the", "minimal", "delta", "to", "support", "the", "new", "capabilities", "My", "personal", "interest", "in", "ACME", "V", "NUMBER", "be", "around", "the", "wildcard", "certificates", "NUMBER", "From", "Lukas", "Schauer", "mailto", "notifications", "github", "NUMBER", "com", "Sent", "Friday", "December", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "AM", "To", "lukas", "NUMBER", "dehydrated", "TAG", "Cc", "Leonid", "Belkind", "TAG", "Author", "TAG", "Subject", "Re", "lukas", "NUMBER", "dehydrated", "ACME", "v", "NUMBER", "Support", "NUMBER", "I", "haven", "t", "actually", "read", "the", "spec", "yet", "NUMBER", "If", "not", "too", "much", "has", "change", "this", "may", "be", "implement", "in", "January", "certainly", "only", "push", "to", "master", "after", "the", "new", "endpoint", "be", "online", "NUMBER", "If", "it", "s", "more", "time", "consuming", "I", "m", "guessing", "late", "Feb", "or", "Mar", "NUMBER", "Certificate", "handle", "probably", "doesn", "t", "need", "to", "be", "touched", "a", "lot", "support", "for", "wildcard", "certificates", "should", "be", "easily", "handle", "script", "internally", "as", "if", "they", "would", "just", "be", "a", "normal", "subdomain", "I", "m", "kinda", "hoping", "that", "only", "a", "few", "api", "calls", "have", "to", "be", "change", "NUMBER", "A", "great", "help", "would", "be", "a", "short", "summary", "if", "in", "any", "way", "possible", "NUMBER", "of", "the", "major", "change", "in", "the", "protocol", "NUMBER", "If", "a", "lot", "has", "change", "a", "proof", "of", "concept", "shell", "or", "python", "or", "some", "other", "easily", "readable", "language", "script", "with", "api", "calls", "against", "the", "new", "version", "would", "be", "great", "NUMBER", "Just", "something", "that", "gives", "a", "good", "starting", "point", "for", "figuring", "out", "how", "stuff", "works", "nothing", "more", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "I", "be", "looking", "at", "the", "latest", "IETF", "standardized", "ACME", "implementation", "which", "according", "to", "the", "ITRG", "people", "will", "serve", "as", "the", "basis", "for", "their", "ACME", "V", "NUMBER", "Endpoint", "LINK", "ietf", "acme", "acme", "NUMBER", "this", "be", "at", "least", "the", "latest", "available", "draft", "lbelkind", "That", "s", "actually", "two", "drafts", "behind", "the", "latest", "Draft", "NUMBER", "LINK", "ietf", "acme", "acme", "NUMBER", "be", "the", "latest", "and", "was", "cut", "a", "few", "days", "ago", "NUMBER", "The", "Boulder", "divergences", "doc", "be", "a", "little", "bit", "behind", "LINK", "NUMBER", "A", "great", "help", "would", "be", "a", "short", "summary", "if", "in", "any", "way", "possible", "NUMBER", "of", "the", "major", "change", "in", "the", "protocol", "NUMBER", "lukas", "NUMBER", "I", "d", "love", "to", "eventually", "sit", "down", "and", "write", "something", "like", "this", "but", "I", "m", "still", "tied", "up", "implement", "the", "new", "protocol", "get", "ready", "for", "launch", "in", "Jan", "Feb", "NUMBER", "Here", "s", "a", "off", "the", "top", "of", "my", "head", "summary", "of", "some", "major", "change", "that", "will", "hopefully", "help", "The", "authorization", "issuance", "flow", "has", "change", "NUMBER", "Prev", "NUMBER", "you", "request", "your", "own", "authz", "s", "per", "identifier", "and", "then", "submitted", "a", "CSR", "to", "new", "cert", "NUMBER", "Now", "you", "submit", "a", "request", "for", "an", "order", "for", "a", "set", "of", "identifiers", "the", "server", "gives", "you", "back", "authorizations", "to", "satisfy", "and", "you", "issue", "a", "certificate", "by", "POSTing", "a", "CSR", "to", "the", "order", "s", "finalize", "URL", "NUMBER", "The", "JWS", "authorization", "of", "request", "has", "change", "NUMBER", "Only", "the", "new", "account", "JWS", "has", "an", "embedded", "JWK", "now", "all", "other", "endpoints", "consume", "a", "JWS", "with", "a", "key", "ID", "NUMBER", "JWS", "bodies", "don", "t", "include", "the", "resource", "field", "anymore", "the", "client", "needs", "to", "put", "the", "URL", "it", "intends", "the", "message", "for", "in", "a", "protected", "header", "of", "the", "JWS", "NUMBER", "Lots", "of", "resources", "change", "to", "be", "camelCase", "throughout", "revokeCertificate", "newAccount", "etc", "In", "terms", "of", "LE", "specific", "things", "to", "know", "Order", "identifiers", "with", "a", "wildcard", "prefix", "will", "be", "given", "an", "authorization", "with", "only", "a", "DNS", "NUMBER", "challenge", "to", "solve", "NUMBER", "The", "TLS", "SNI", "NUMBER", "challenge", "type", "won", "t", "be", "present", "in", "the", "V", "NUMBER", "API", "We", "ll", "only", "offer", "its", "successor", "TLS", "SNI", "NUMBER", "Those", "be", "some", "of", "the", "bigger", "change", "that", "come", "to", "mind", "right", "off", "the", "bat", "NUMBER", "Definitely", "not", "a", "comprehensive", "list", "NUMBER", "I", "would", "certainly", "welcome", "a", "community", "contribution", "of", "a", "more", "thorough", "document", "as", "a", "PR", "to", "the", "Let", "s", "Encrypt", "website", "LINK", "if", "someone", "be", "feeling", "like", "spending", "more", "time", "diffing", "RFCs", "cpu", "thank", "you", "NUMBER", "that", "doesn", "t", "sound", "too", "bad", "sure", "a", "lot", "of", "change", "things", "but", "it", "actually", "sounds", "quite", "easy", "to", "implement", "and", "a", "lot", "faster", "and", "less", "error", "prone", "than", "the", "previous", "api", "NUMBER", "FYI", "The", "staging", "v", "NUMBER", "endpoint", "be", "now", "available", "LINK", "endpoint", "for", "acme", "v", "NUMBER", "NUMBER", "Only", "DNS", "NUMBER", "validation", "for", "wildcard", "domains", "That", "screws", "with", "my", "full", "automation", "NUMBER", "Will", "Dehydrated", "support", "plugins", "for", "add", "DNS", "APIs", "since", "every", "domain", "provider", "has", "its", "own", "API", "NUMBER", "rudiedirkx", "Dehydrated", "already", "support", "DNS", "hooks", "I", "m", "currently", "use", "the", "one", "for", "Cloudflare", "which", "works", "great", "LINK", "cloudflare", "hook", "NUMBER", "Not", "sure", "whether", "you", "know", "Python", "at", "all", "but", "you", "might", "be", "able", "to", "modify", "that", "to", "your", "own", "purposes", "Wait", "waat", "I", "did", "not", "know", "that", "NUMBER", "I", "will", "reread", "Dehydrated", "NUMBER", "Python", "should", "work", "or", "any", "other", "language", "if", "it", "s", "just", "a", "bash", "call", "NUMBER", "Thanks", "all", "NUMBER", "rudiedirkx", "You", "should", "look", "into", "LINK", "as", "that", "allows", "you", "to", "use", "a", "standardized", "syntax", "to", "interface", "with", "multiple", "DNS", "providers", "NUMBER", "Any", "update", "soon", "planned", "NUMBER", "contains", "support", "for", "v", "NUMBER", "API", "NUMBER", "Regex", "handle", "seems", "to", "block", "wildcard", "domains", "but", "I", "don", "t", "have", "time", "to", "look", "at", "that", "NUMBER", "So", "its", "still", "useless", "belliash", "That", "seems", "harsh", "considering", "how", "much", "of", "the", "v", "NUMBER", "API", "_has_", "be", "implement", "NUMBER", "belliash", "production", "endpoint", "v", "NUMBER", "will", "only", "be", "available", "at", "NUMBER", "february", "anyway", "NUMBER", "I", "have", "merge", "crza", "s", "initial", "implementation", "NUMBER", "There", "still", "seems", "to", "be", "a", "bit", "of", "work", "required", "and", "I", "didn", "t", "yet", "test", "if", "it", "actually", "works", "but", "if", "anybody", "wants", "to", "give", "it", "a", "try", "feel", "free", "Replace", "the", "CA", "variable", "and", "set", "API", "NUMBER", "in", "the", "config", "NUMBER", "I", "was", "able", "to", "test", "the", "change", "and", "I", "was", "able", "to", "acquire", "a", "few", "certificates", "including", "wildcard", "certificates", "tada", "from", "the", "staging", "API", "NUMBER", "There", "be", "still", "a", "few", "issue", "e", "NUMBER", "g", "NUMBER", "I", "had", "an", "invalid", "authorization", "that", "I", "just", "wasn", "t", "able", "to", "get", "rid", "of", "I", "didn", "t", "have", "much", "time", "to", "look", "into", "that", "issue", "it", "seem", "like", "a", "server", "side", "bug", "to", "me", "but", "I", "ll", "have", "to", "look", "into", "this", "a", "bit", "more", "NUMBER", "I", "had", "an", "invalid", "authorization", "that", "I", "just", "wasn", "t", "able", "to", "get", "rid", "of", "I", "didn", "t", "have", "much", "time", "to", "look", "into", "that", "issue", "it", "seem", "like", "a", "server", "side", "bug", "to", "me", "but", "I", "ll", "have", "to", "look", "into", "this", "a", "bit", "more", "NUMBER", "lukas", "NUMBER", "this", "be", "LINK", "and", "indeed", "a", "server", "side", "bug", "NUMBER", "cpu", "thanks", "for", "the", "clarification", "definitively", "saved", "me", "from", "a", "few", "more", "hours", "of", "debugging", "this", "issue", "Worked", "for", "me", "on", "the", "staging", "endpoint", "was", "able", "to", "request", "certs", "for", "various", "subdomains", "and", "a", "wildcard", "cert", "NUMBER", "I", "m", "get", "several", "error", "while", "test", "a", "SAN", "certificate", "NUMBER", "The", "Dehydrated", "feedback", "has", "change", "maybe", "because", "the", "ACME", "flow", "has", "change", "NUMBER", "Old", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "cn", "NUMBER", "example", "NUMBER", "com", "NUMBER", "Already", "validated", "Requesting", "challenge", "for", "san", "NUMBER", "example", "NUMBER", "com", "NUMBER", "Requesting", "challenge", "for", "san", "NUMBER", "example", "NUMBER", "com", "NUMBER", "Requesting", "challenge", "for", "san", "NUMBER", "example", "NUMBER", "com", "NUMBER", "TAG", "Responding", "to", "challenge", "for", "san", "NUMBER", "example", "NUMBER", "com", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "san", "NUMBER", "example", "NUMBER", "com", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "san", "NUMBER", "example", "NUMBER", "com", "NUMBER", "Challenge", "be", "valid", "TAG", "Requesting", "certificate", "NUMBER", "Very", "obvious", "that", "NUMBER", "NUMBER", "domains", "was", "already", "validated", "and", "NUMBER", "others", "be", "be", "challenged", "now", "NUMBER", "New", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenges", "for", "cn", "NUMBER", "example", "NUMBER", "com", "san", "NUMBER", "example", "NUMBER", "com", "san", "NUMBER", "example", "NUMBER", "com", "san", "NUMBER", "example", "NUMBER", "com", "NUMBER", "Already", "validated", "TAG", "Responding", "to", "challenge", "for", "cn", "NUMBER", "example", "NUMBER", "com", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "staging", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "C", "NUMBER", "FKeAYUL", "NUMBER", "svnxV", "NUMBER", "eaGd", "NUMBER", "QUWxv", "NUMBER", "GLxPD", "ElxqiMnBlY", "NUMBER", "Status", "NUMBER", "Details", "type", "urn", "ietf", "params", "acme", "error", "malformed", "detail", "Unable", "to", "update", "challenge", "The", "challenge", "be", "not", "pending", "NUMBER", "status", "NUMBER", "The", "strange", "error", "aside", "this", "feedback", "be", "much", "less", "clear", "NUMBER", "Which", "domains", "were", "valid", "Which", "be", "pass", "to", "the", "dns", "hook", "And", "then", "the", "strange", "error", "of", "course", "challenge", "not", "pending", "NUMBER", "It", "try", "NUMBER", "of", "the", "NUMBER", "but", "not", "the", "first", "but", "that", "shouldn", "t", "matter", "NUMBER", "I", "m", "request", "a", "new", "version", "of", "an", "exist", "certificate", "new", "SAN", "domains", "same", "CN", "domain", "NUMBER", "I", "think", "v", "NUMBER", "creates", "a", "new", "account", "automatically", "I", "had", "to", "register", "accept", "terms", "anyway", "NUMBER", "For", "a", "new", "certificate", "with", "a", "new", "account", "it", "all", "works", "but", "that", "s", "probably", "not", "the", "usual", "case", "after", "having", "use", "Dehydrated", "before", "NUMBER", "rudiedirkx", "the", "challenge", "not", "pending", "bug", "be", "what", "cpu", "was", "talking", "about", "this", "be", "a", "serverside", "bug", "and", "not", "a", "dehydrated", "bug", "the", "server", "returns", "an", "invalid", "challenge", "that", "can", "t", "be", "cleared", "and", "dehydrated", "doesn", "t", "expect", "that", "to", "happen", "as", "it", "should", "never", "happen", "NUMBER", "other", "than", "that", "what", "exactly", "be", "your", "problem", "with", "the", "output", "not", "be", "clear", "it", "clearly", "state", "what", "domain", "it", "s", "checking", "NUMBER", "also", "there", "be", "differences", "on", "how", "challenges", "be", "generate", "they", "no", "longer", "have", "to", "be", "request", "domain", "by", "domain", "they", "will", "be", "delivered", "by", "the", "server", "as", "part", "of", "the", "order", "and", "dehydrated", "will", "only", "tell", "the", "server", "that", "the", "challenges", "be", "ready", "which", "still", "happens", "for", "each", "domain", "Requesting", "challenges", "for", "cn", "NUMBER", "example", "NUMBER", "com", "san", "NUMBER", "example", "NUMBER", "com", "san", "NUMBER", "example", "NUMBER", "com", "san", "NUMBER", "example", "NUMBER", "com", "NUMBER", "Already", "validated", "That", "s", "not", "very", "clear", "to", "me", "NUMBER", "Is", "NUMBER", "domain", "already", "validated", "Or", "all", "NUMBER", "The", "old", "method", "be", "unambiguous", "NUMBER", "The", "order", "be", "also", "strange", "Responding", "to", "challenge", "for", "A", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "NUMBER", "A", "NUMBER", "TAG", "TAG", "TAG", "TAG", "TAG", "ERROR", "Challenge", "be", "invalid", "returned", "invalid", "result", "type", "dns", "NUMBER", "status", "invalid", "error", "type", "urn", "ietf", "params", "acme", "error", "unauthorized", "detail", "Incorrect", "TXT", "record", "odpkYcpEaObZt", "NUMBER", "djoRGBD", "NUMBER", "VVFbkF", "NUMBER", "qCyo", "NUMBER", "bJ", "NUMBER", "X", "NUMBER", "E", "find", "at", "_acme", "challenge", "NUMBER", "A", "status", "NUMBER", "url", "LINK", "staging", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "r", "NUMBER", "Z", "NUMBER", "k", "NUMBER", "C", "NUMBER", "Hk", "NUMBER", "lF", "QMVUTHCX", "NUMBER", "ty", "NUMBER", "qe", "NUMBER", "mUdKO", "NUMBER", "OcYI", "NUMBER", "token", "vwGI", "NUMBER", "QVYDV", "NUMBER", "eoBXO", "NUMBER", "q_AJ", "NUMBER", "ovgl", "NUMBER", "TrbGnwPhj", "NUMBER", "FMM", "keyAuthorization", "vwGI", "NUMBER", "QVYDV", "NUMBER", "eoBXO", "NUMBER", "q_AJ", "NUMBER", "ovgl", "NUMBER", "TrbGnwPhj", "NUMBER", "FMM", "NUMBER", "xVneMCNmuRpkmgiO", "NUMBER", "PGeoDwTtuaqYlo", "NUMBER", "URll", "NUMBER", "rKRJI", "The", "DNS", "hook", "be", "call", "in", "between", "validations", "Or", "after", "the", "first", "failure", "but", "before", "printing", "that", "failure", "Should", "the", "challenge", "for", "NUMBER", "foo", "NUMBER", "example", "NUMBER", "com", "be", "in", "_acme", "challenge", "NUMBER", "foo", "NUMBER", "example", "NUMBER", "com", "or", "_acme", "challenge", "NUMBER", "example", "NUMBER", "com", "I", "m", "get", "mix", "report", "and", "mix", "results", "NUMBER", "Maybe", "it", "s", "all", "me", "NUMBER", "This", "be", "my", "first", "time", "acmev", "NUMBER", "ing", "NUMBER", "It", "s", "get", "stranger", "and", "stranger", "Requesting", "challenges", "for", "wc", "NUMBER", "example", "NUMBER", "com", "NUMBER", "wc", "NUMBER", "example", "NUMBER", "com", "NUMBER", "example", "NUMBER", "com", "NUMBER", "TAG", "Responding", "to", "challenge", "for", "wc", "NUMBER", "example", "NUMBER", "com", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "NUMBER", "wc", "NUMBER", "example", "NUMBER", "com", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "NUMBER", "example", "NUMBER", "com", "NUMBER", "TAG", "ERROR", "Challenge", "be", "invalid", "returned", "invalid", "result", "type", "dns", "NUMBER", "status", "invalid", "error", "type", "urn", "ietf", "params", "acme", "error", "unauthorized", "detail", "Incorrect", "TXT", "record", "putPxdJTu", "NUMBER", "e", "NUMBER", "FDnXekp", "NUMBER", "e", "NUMBER", "kYR", "NUMBER", "jAUdSqrIz", "NUMBER", "KO", "NUMBER", "kVk", "and", "NUMBER", "more", "find", "at", "_acme", "challenge", "NUMBER", "wc", "NUMBER", "example", "NUMBER", "com", "status", "NUMBER", "url", "LINK", "staging", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "_", "NUMBER", "AY", "NUMBER", "BT_nCtXgaub", "NUMBER", "dJhUQVFON", "NUMBER", "v", "kYHusi", "NUMBER", "ZbWxg", "NUMBER", "token", "rTMVk", "NUMBER", "UGtrzlghg", "NUMBER", "LaiHzYHnnTU", "NUMBER", "bhfaT", "NUMBER", "uMMCZrDDU", "keyAuthorization", "rTMVk", "NUMBER", "UGtrzlghg", "NUMBER", "LaiHzYHnnTU", "NUMBER", "bhfaT", "NUMBER", "uMMCZrDDU", "NUMBER", "xVneMCNmuRpkmgiO", "NUMBER", "PGeoDwTtuaqYlo", "NUMBER", "URll", "NUMBER", "rKRJI", "It", "s", "Responding", "to", "challenge", "for", "NUMBER", "example", "NUMBER", "com", "NUMBER", "but", "finds", "the", "wrong", "record", "at", "_acme", "challenge", "NUMBER", "wc", "NUMBER", "example", "NUMBER", "com", "NUMBER", "Why", "would", "it", "be", "looking", "at", "_acme", "challenge", "NUMBER", "wc", "NUMBER", "example", "NUMBER", "com", "There", "must", "be", "something", "wrong", "with", "the", "feedback", "order", "NUMBER", "Sometimes", "all", "validations", "succeed", "and", "I", "get", "a", "cert", "and", "sometimes", "not", "NUMBER", "V", "NUMBER", "mode", "always", "works", "always", "but", "no", "wildcards", "of", "course", "NUMBER", "There", "s", "definitely", "something", "wrong", "and", "it", "s", "not", "just", "the", "feedback", "display", "NUMBER", "Processing", "wc", "NUMBER", "example", "NUMBER", "com", "with", "alternative", "names", "NUMBER", "wc", "NUMBER", "example", "NUMBER", "com", "NUMBER", "example", "NUMBER", "com", "Signing", "domains", "NUMBER", "Creating", "new", "directory", "var", "www", "letsencrypt", "le", "config", "home", "staging", "certs", "wc", "NUMBER", "example", "NUMBER", "com", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenges", "for", "wc", "NUMBER", "example", "NUMBER", "com", "NUMBER", "wc", "NUMBER", "example", "NUMBER", "com", "NUMBER", "example", "NUMBER", "com", "NUMBER", "Already", "validated", "TAG", "Responding", "to", "challenge", "for", "NUMBER", "wc", "NUMBER", "example", "NUMBER", "com", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "NUMBER", "example", "NUMBER", "com", "NUMBER", "TAG", "ERROR", "Challenge", "be", "invalid", "returned", "invalid", "result", "type", "dns", "NUMBER", "status", "invalid", "error", "type", "urn", "ietf", "params", "acme", "error", "unauthorized", "detail", "Incorrect", "TXT", "record", "NUMBER", "dJ", "NUMBER", "P", "NUMBER", "CRBVmEoW", "NUMBER", "SyLSV", "MbQPIRkivYf", "NUMBER", "XFkS", "NUMBER", "LQ", "find", "at", "_acme", "challenge", "NUMBER", "wc", "NUMBER", "example", "NUMBER", "com", "status", "NUMBER", "url", "LINK", "staging", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "DAlRTcc", "NUMBER", "kKvu", "NUMBER", "mV", "NUMBER", "shlH_SpZqfYQF", "sAc", "NUMBER", "Bw", "NUMBER", "Rg", "NUMBER", "token", "ZIVZsdXSmROyaVC_RiNZbvKAzNa", "NUMBER", "c", "NUMBER", "P_EjHtxsqRUY", "keyAuthorization", "ZIVZsdXSmROyaVC_RiNZbvKAzNa", "NUMBER", "c", "NUMBER", "P_EjHtxsqRUY", "NUMBER", "xVneMCNmuRpkmgiO", "NUMBER", "PGeoDwTtuaqYlo", "NUMBER", "URll", "NUMBER", "rKRJI", "I", "ve", "definitely", "never", "ever", "validated", "wc", "NUMBER", "example", "NUMBER", "com", "before", "but", "example", "NUMBER", "com", "might", "be", "valid", "NUMBER", "Dehydrated", "must", "think", "wc", "NUMBER", "example", "NUMBER", "com", "be", "valid", "because", "it", "fires", "the", "dns", "hook", "for", "NUMBER", "wc", "NUMBER", "example", "NUMBER", "com", "and", "NUMBER", "example", "NUMBER", "com", "NUMBER", "So", "something", "in", "the", "new", "V", "NUMBER", "flow", "be", "wrong", "NUMBER", "And", "now", "I", "ll", "stop", "spamming", "NUMBER", "rudiedirkx", "there", "was", "a", "miss", "log", "statement", "i", "add", "it", "in", "NUMBER", "fd", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "e", "NUMBER", "f", "NUMBER", "c", "NUMBER", "ae", "NUMBER", "cb", "NUMBER", "e", "NUMBER", "ff", "it", "should", "now", "be", "clear", "what", "the", "script", "be", "doing", "NUMBER", "Your", "last", "issue", "seems", "to", "be", "that", "both", "NUMBER", "wc", "NUMBER", "example", "NUMBER", "com", "and", "wc", "NUMBER", "example", "NUMBER", "com", "would", "have", "to", "be", "validated", "at", "the", "same", "record", "this", "can", "t", "be", "support", "with", "HOOK_CHAIN", "enable", "as", "both", "records", "would", "have", "be", "set", "at", "the", "exact", "same", "time", "NUMBER", "I", "ll", "add", "a", "warning", "and", "an", "automatic", "fallback", "to", "non", "chaining", "behaviour", "for", "this", "NUMBER", "That", "should", "solve", "the", "issue", "NUMBER", "With", "wildcards", "you", "shouldn", "t", "have", "too", "many", "domains", "in", "that", "certificate", "so", "that", "shouldn", "t", "be", "much", "of", "a", "problem", "anyway", "NUMBER", "Additionally", "to", "the", "hook", "chaining", "problem", "I", "find", "another", "flaw", "that", "might", "lead", "to", "swapped", "challenges", "which", "in", "turn", "will", "result", "in", "invalid", "authorizations", "NUMBER", "I", "ll", "be", "rewriting", "most", "of", "the", "authorization", "handle", "code", "as", "in", "it", "s", "current", "form", "it", "s", "basically", "broken", "with", "ACME", "v", "NUMBER", "Thanks", "for", "bringing", "your", "issue", "up", "rudiedirkx", "wouldn", "t", "have", "find", "that", "flaw", "until", "much", "later", "NUMBER", "I", "think", "ACME", "and", "LE", "support", "multiple", "records", "on", "the", "same", "domain", "to", "validatie", "different", "domains", "NUMBER", "A", "very", "normal", "scenario", "be", "NUMBER", "example", "NUMBER", "com", "and", "example", "NUMBER", "com", "NUMBER", "ACME", "will", "require", "NUMBER", "TXT", "records", "in", "_acme", "challenge", "NUMBER", "example", "NUMBER", "com", "NUMBER", "It", "seems", "from", "the", "many", "error", "message", "I", "ve", "read", "LE", "looks", "at", "all", "the", "TXT", "records", "NUMBER", "When", "you", "ve", "fix", "the", "challenge", "swapping", "problem", "I", "ll", "try", "my", "rubbish", "again", "NUMBER", "I", "really", "hope", "HOOK_CHAIN", "still", "works", "in", "all", "v", "NUMBER", "scenario", "s", "because", "it", "s", "a", "huge", "speed", "gain", "NUMBER", "Also", "maybe", "a", "different", "issue", "wildcard", "dirs", "Creating", "new", "directory", "certs", "NUMBER", "example", "NUMBER", "com", "NUMBER", "Not", "every", "OS", "fs", "loves", "dirs", "starting", "with", "or", "even", "containing", "a", "NUMBER", "Maybe", "replace", "with", "or", "__", "or", "something", "else", "less", "dangerous", "but", "still", "unique", "Also", "for", "a", "cert", "with", "only", "NUMBER", "domain", "a", "wildcard", "already", "validated", "Found", "valid", "authorization", "for", "example", "NUMBER", "com", "NUMBER", "pending", "challenge", "s", "NUMBER", "NUMBER", "letsencrypt", "NUMBER", "sh", "dehydrated", "line", "NUMBER", "challenge_identifier", "unbound", "variable", "Requesting", "certificate", "NUMBER", "Checking", "certificate", "NUMBER", "Done", "It", "seems", "to", "have", "worked", "anyway", "though", "NUMBER", "All", "my", "weird", "challenge", "validation", "test", "work", "with", "your", "change", "and", "the", "feedback", "be", "great", "NUMBER", "Thanks", "rudiedirkx", "Oh", "boulder", "can", "validate", "with", "multiple", "TXT", "records", "set", "I", "didn", "t", "know", "that", "that", "change", "a", "lot", "and", "would", "also", "resolve", "the", "issue", "I", "file", "with", "boulder", "LINK", "NUMBER", "I", "ll", "look", "into", "the", "undefined", "variable", "thing", "and", "will", "test", "the", "hook", "chaining", "thing", "if", "it", "works", "I", "ll", "remove", "my", "workaround", "NUMBER", "rudiedirkx", "You", "were", "right", "deploying", "multiple", "tokens", "works", "perfectly", "I", "m", "going", "to", "change", "the", "loop", "behaviour", "a", "bit", "so", "it", "will", "work", "with", "both", "HOOK_CHAIN", "enable", "and", "disabled", "NUMBER", "Mentioned", "change", "were", "implement", "in", "afba", "NUMBER", "c", "NUMBER", "cb", "NUMBER", "a", "NUMBER", "d", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "a", "NUMBER", "c", "NUMBER", "a", "NUMBER", "Seems", "to", "work", "very", "nicely", "Very", "good", "feedback", "NUMBER", "No", "error", "if", "NUMBER", "pending", "challenges", "NUMBER", "With", "any", "domain", "order", "NUMBER", "With", "and", "without", "wildcards", "NUMBER", "Only", "tried", "with", "HOOK_CHAIN", "enable", "because", "duh", "NUMBER", "I", "can", "t", "wait", "for", "Feb", "NUMBER", "I", "m", "guessing", "the", "LE", "servers", "will", "be", "very", "busy", "NUMBER", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Received", "NUMBER", "authorizations", "URLs", "from", "the", "CA", "Handling", "authorization", "for", "test", "NUMBER", "org", "NUMBER", "pending", "challenge", "s", "Deploying", "challenge", "tokens", "NUMBER", "Waiting", "NUMBER", "seconds", "to", "propagate", "DNS", "change", "Responding", "to", "challenge", "for", "test", "NUMBER", "org", "authorization", "NUMBER", "Challenge", "be", "valid", "Requesting", "certificate", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "staging", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "order", "NUMBER", "NUMBER", "finalize", "order", "Status", "NUMBER", "Details", "type", "urn", "ietf", "params", "acme", "error", "unauthorized", "detail", "Error", "finalizing", "order", "Order", "include", "different", "number", "of", "names", "than", "CSR", "specifies", "status", "NUMBER", "CSR", "include", "test", "NUMBER", "org", "and", "NUMBER", "test", "NUMBER", "org", "So", "something", "be", "not", "work", "with", "CSR", "when", "launching", "dehydrated", "accept", "terms", "ocsp", "signcsr", "NUMBER", "test", "NUMBER", "csr", "INFO", "Using", "main", "config", "file", "etc", "dehydrated", "config", "Requesting", "new", "certificate", "order", "from", "CA", "NUMBER", "Received", "NUMBER", "authorizations", "URLs", "from", "the", "CA", "Handling", "authorization", "for", "test", "NUMBER", "org", "Handling", "authorization", "for", "test", "NUMBER", "org", "NUMBER", "pending", "challenge", "s", "Deploying", "challenge", "tokens", "NUMBER", "array", "NUMBER", "file", "string", "NUMBER", "qrJB", "NUMBER", "iHDj", "NUMBER", "jBnoRob", "NUMBER", "Cupm", "NUMBER", "h", "xmtoGNqC", "NUMBER", "vYJOy", "NUMBER", "token", "string", "NUMBER", "A", "NUMBER", "jqehG", "NUMBER", "Tei", "NUMBER", "JkYo", "NUMBER", "NUMBER", "S", "NUMBER", "xIjXzPnP", "NUMBER", "N", "NUMBER", "XCzzzUfatk", "array", "NUMBER", "file", "string", "NUMBER", "NUMBER", "GvVlpAkr_vESJJNYGDTwXS", "NUMBER", "oW", "NUMBER", "LrlwhNsDanZajmJA", "token", "string", "NUMBER", "qNipbS_bokld", "NUMBER", "wp", "NUMBER", "IYyGn", "NUMBER", "xixuWNE", "NUMBER", "MGV", "NUMBER", "_aIduCCI", "Waiting", "NUMBER", "seconds", "to", "propagate", "DNS", "change", "Responding", "to", "challenge", "for", "test", "NUMBER", "org", "authorization", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "staging", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "NUMBER", "wW", "NUMBER", "W", "NUMBER", "Y", "NUMBER", "GR", "NUMBER", "EbeqERTKKnKgZcnzzRbmU", "NUMBER", "sUv", "NUMBER", "ml_U", "NUMBER", "Status", "NUMBER", "Details", "type", "urn", "ietf", "params", "acme", "error", "malformed", "detail", "Unable", "to", "update", "challenge", "The", "challenge", "be", "not", "pending", "NUMBER", "status", "NUMBER", "As", "you", "can", "see", "the", "autorization", "be", "for", "test", "NUMBER", "org", "twice", "NUMBER", "not", "test", "NUMBER", "org", "and", "NUMBER", "test", "NUMBER", "org", "NUMBER", "Im", "not", "usre", "if", "its", "ok", "or", "not", "but", "afterwars", "my", "DNS", "hook", "script", "write", "in", "PHP", "has", "add", "the", "following", "entries", "_acme", "challenge", "NUMBER", "test", "NUMBER", "org", "NUMBER", "NUMBER", "IN", "TXT", "A", "NUMBER", "jqehG", "NUMBER", "Tei", "NUMBER", "JkYo", "NUMBER", "NUMBER", "S", "NUMBER", "xIjXzPnP", "NUMBER", "N", "NUMBER", "XCzzzUfatk", "_acme", "challenge", "NUMBER", "test", "NUMBER", "org", "NUMBER", "NUMBER", "IN", "TXT", "qNipbS_bokld", "NUMBER", "wp", "NUMBER", "IYyGn", "NUMBER", "xixuWNE", "NUMBER", "MGV", "NUMBER", "_aIduCCI", "so", "it", "looks", "ok", "to", "me", "but", "anyway", "I", "cannot", "obtain", "wildcard", "certificate", "NUMBER", "Any", "ideas", "what", "be", "wrong", "NUMBER", "for", "NUMBER", "domain", "NUMBER", "com", "not", "be", "a", "good", "idea", "NUMBER", "Most", "CAs", "usually", "use", "star_domain_com", "we", "might", "as", "well", "resort", "to", "star_domain", "NUMBER", "com", "NUMBER", "How", "do", "I", "tell", "dehydrated", "to", "request", "a", "wildcard", "cert", "Can", "t", "seem", "to", "find", "this", "info", "anywhere", "NUMBER", "Is", "it", "NUMBER", "domain", "NUMBER", "com", "in", "domains", "NUMBER", "txt", "Yeah", "thanks", "successfully", "request", "a", "wildcard", "one", "from", "staging", "v", "NUMBER", "no", "change", "needed", "for", "the", "DNS", "hook", "sweet", "Can", "t", "wait", "for", "prod", "rollout", "NUMBER", "Will", "there", "be", "no", "dns", "NUMBER", "Coz", "I", "assumed", "so", "NUMBER", "v", "NUMBER", "should", "be", "available", "no", "LINK", "v", "NUMBER", "api", "NUMBER", "html", "But", "where", "s", "the", "directory", "And", "the", "announcement", "LetsEncrypt", "has", "delayed", "the", "release", "of", "the", "production", "ACME", "v", "NUMBER", "API", "end", "point", "NUMBER", "See", "LINK", "certificates", "come", "jan", "NUMBER", "html", "and", "the", "linked", "post", "at", "LINK", "and", "wildcard", "launch", "delay", "NUMBER", "for", "more", "information", "NUMBER", "And", "now", "the", "ACMEv", "NUMBER", "API", "be", "public", "with", "wildcard", "support", "LINK", "v", "NUMBER", "and", "wildcard", "certificate", "support", "be", "live", "NUMBER", "Congrats", "on", "the", "hard", "work", "LE", "team", "Thanks", "lukas", "NUMBER", "for", "be", "ahead", "of", "this", "and", "landing", "ACMEv", "NUMBER", "support", "already", "Awesome", "work", "everyone", "Feels", "goood", "to", "use", "Dehydrated", "for", "reals", "NUMBER", "All", "worked", "perfectly", "lukas", "NUMBER", "I", "hope", "it", "s", "appropriate", "if", "i", "hihack", "this", "issue", "as", "i", "think", "this", "be", "the", "same", "or", "at", "least", "a", "similar", "issue", "NUMBER", "I", "ve", "update", "dehydrated", "change", "my", "domains", "NUMBER", "txt", "to", "betadiff", "NUMBER", "com", "NUMBER", "betadiff", "NUMBER", "com", "and", "now", "i", "m", "only", "get", "this", "error", "ERROR", "Challenge", "be", "invalid", "returned", "invalid", "result", "type", "dns", "NUMBER", "status", "invalid", "error", "type", "urn", "ietf", "params", "acme", "error", "unauthorized", "detail", "Incorrect", "TXT", "record", "NUMBER", "QqvUbs", "NUMBER", "BLtz", "NUMBER", "h", "NUMBER", "wpypVtmwtiHvzlXJlSN", "NUMBER", "T", "NUMBER", "bSDR", "NUMBER", "find", "at", "_acme", "challenge", "NUMBER", "betadiff", "NUMBER", "com", "status", "NUMBER", "url", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "kXZvhKmuF", "NUMBER", "G", "NUMBER", "VTLcj", "NUMBER", "JYed", "NUMBER", "Qe", "P_tDrUfh", "NUMBER", "EiB", "NUMBER", "OTCI", "NUMBER", "token", "VLkybskPD", "purQx", "NUMBER", "i", "NUMBER", "TXQ_Cx", "NUMBER", "v", "NUMBER", "KCSFIh", "NUMBER", "I", "NUMBER", "sP", "NUMBER", "sBQ", "keyAuthorization", "VLkybskPD", "purQx", "NUMBER", "i", "NUMBER", "TXQ_Cx", "NUMBER", "v", "NUMBER", "KCSFIh", "NUMBER", "I", "NUMBER", "sP", "NUMBER", "sBQ", "NUMBER", "ymn", "NUMBER", "rrjFsLBQUTzWYgdoacDjsIe", "B", "NUMBER", "saKrAYkAh", "NUMBER", "Tk", "The", "DNS", "NUMBER", "challenge", "was", "previously", "work", "fine", "and", "my", "DNS", "slaves", "do", "the", "AXFR", "well", "within", "the", "wait", "period", "i", "ve", "set", "use", "pdns_api", "NUMBER", "sh", "by", "the", "way", "so", "i", "m", "assuming", "this", "be", "directly", "relate", "to", "the", "ACME", "v", "NUMBER", "endpoint", "change", "I", "just", "checked", "with", "_only_", "the", "wildcard", "domain", "so", "my", "domains", "NUMBER", "txt", "looked", "like", "this", "NUMBER", "betadiff", "NUMBER", "com", "betadiff", "NUMBER", "com", "This", "works", "but", "i", "d", "still", "like", "to", "have", "both", "the", "apex", "and", "the", "wildcard", "in", "the", "same", "cert", "so", "i", "tried", "with", "the", "apex", "the", "wildcard", "and", "also", "defining", "an", "alias", "betadiff", "NUMBER", "com", "NUMBER", "betadiff", "NUMBER", "com", "betadiff", "NUMBER", "com", "And", "this", "now", "also", "works", "So", "it", "looks", "like", "the", "alias", "be", "mandatory", "if", "you", "re", "use", "a", "wildcard", "Another", "observation", "for", "a", "different", "domain", "It", "only", "works", "if", "i", "first", "request", "the", "wildcard", "cert", "with", "an", "alias", "and", "then", "add", "the", "apex", "and", "renew", "the", "certificate", "with", "the", "additional", "name", "which", "doesn", "t", "need", "the", "alias", "anymore", "NUMBER", "So", "for", "every", "domain", "i", "need", "two", "separate", "runs", "first", "NUMBER", "betadiff", "NUMBER", "com", "betadiff", "NUMBER", "com", "then", "betadiff", "NUMBER", "com", "NUMBER", "betadiff", "NUMBER", "com", "Yes", "the", "alias", "be", "mandatory", "for", "wildcard", "see", "LINK", "Yes", "i", "know", "that", "it", "s", "mandatory", "if", "you", "use", "only", "a", "wildcard", "but", "it", "seem", "as", "if", "it", "was", "also", "mandatory", "if", "you", "re", "use", "a", "wildcard", "as", "the", "SAN", "only", "so", "in", "theory", "no", "alias", "would", "be", "required", "together", "with", "a", "regular", "domain", "name", "because", "it", "worked", "for", "me", "on", "the", "second", "try", "after", "successfully", "request", "a", "cert", "for", "only", "the", "wildcard", "first", "NUMBER", "But", "NUMBER", "NUMBER", "as", "my", "most", "recent", "comment", "showed", "that", "assumption", "by", "me", "be", "not", "true", "it", "just", "doesn", "t", "work", "at", "all", "for", "me", "if", "i", "request", "a", "cert", "for", "a", "regular", "domain", "with", "the", "wildcard", "as", "a", "SAN", "with", "or", "without", "the", "alias", "unless", "i", "first", "request", "it", "for", "only", "the", "wildcard", "use", "the", "alias", "and", "then", "for", "the", "domain", "and", "the", "wildcard", "combined", "either", "with", "or", "without", "alias", "again", "NUMBER", "btw", "be", "your", "lukas", "NUMBER", "Amazon", "Wishlist", "still", "up", "to", "date", "Certificates", "like", "betadiff", "NUMBER", "com", "NUMBER", "betadiff", "NUMBER", "com", "work", "perfectly", "for", "me", "NUMBER", "Does", "your", "DNS", "hook", "add", "and", "keep", "NUMBER", "records", "I", "ve", "be", "use", "pdns_api", "NUMBER", "sh", "LINK", "_api", "NUMBER", "sh", "blob", "master", "pdns_api", "NUMBER", "sh", "for", "quite", "some", "time", "now", "and", "it", "worked", "fine", "until", "yesterday", "NUMBER", "Some", "certs", "of", "mine", "have", "had", "dozens", "of", "SANs", "so", "that", "would", "mean", "that", "it", "s", "only", "broken", "for", "wildcards", "then", "NUMBER", "I", "also", "wonder", "why", "it", "works", "on", "subsequent", "runs", "with", "multiple", "names", "just", "not", "for", "the", "initial", "run", "NUMBER", "Somebody", "else", "has", "the", "same", "issue", "with", "pdns", "in", "NUMBER", "Probably", "safe", "to", "say", "there", "s", "something", "wrong", "with", "either", "the", "hook", "or", "pdns", "itself", "NUMBER", "Subsequent", "runs", "with", "multiple", "names", "be", "probably", "re", "use", "the", "validations", "do", "from", "earlier", "so", "you", "don", "t", "have", "to", "re", "validate", "them", "simultaneously", "NUMBER", "Hi", "I", "have", "a", "few", "cases", "where", "hardlinking", "be", "better", "suited", "I", "thought", "you", "might", "find", "this", "a", "useful", "patch", "to", "add", "NUMBER", "Thanks", "It", "s", "useful", "inside", "of", "volumized", "container", "such", "as", "dockers", "when", "the", "main", "file", "live", "outside", "the", "volume", "NUMBER", "For", "instance", "having", "multiple", "dockers", "needing", "the", "same", "certificates", "keys", "they", "can", "live", "on", "the", "host", "and", "be", "linked", "into", "the", "docker", "volume", "rather", "than", "having", "to", "have", "a", "copy", "inside", "each", "docker", "NUMBER", "Also", "useful", "for", "permissions", "purposes", "again", "use", "something", "like", "SNI", "and", "needing", "multiple", "copies", "of", "the", "same", "certificate", "key", "pair", "but", "needing", "different", "applications", "to", "be", "able", "to", "access", "them", "ie", "nginx", "user", "postfix", "user", "ftpd", "user", "NUMBER", "These", "program", "typically", "drop", "root", "privileges", "and", "do", "not", "always", "have", "permission", "to", "something", "like", "etc", "ssl", "NUMBER", "Being", "able", "to", "hard", "link", "the", "cert", "key", "to", "a", "location", "suitable", "for", "the", "application", "and", "then", "change", "the", "permissions", "on", "the", "linked", "file", "to", "readable", "by", "the", "user", "that", "application", "runs", "as", "NUMBER", "These", "be", "things", "that", "soft", "links", "symlinks", "cannot", "do", "NUMBER", "Sounds", "good", "thank", "you", "I", "notice", "that", "the", "new", "OPENSSL", "variable", "add", "in", "commit", "LINK", "doesn", "t", "add", "a", "corresponding", "item", "to", "the", "config", "file", "NUMBER", "Is", "this", "omission", "by", "design", "or", "an", "oversight", "Starting", "today", "all", "our", "customers", "have", "start", "receiving", "this", "error", "when", "issue", "certificates", "use", "deydrated", "INFO", "Using", "main", "config", "file", "root", "letsencrypt", "NUMBER", "config", "NUMBER", "dehydrated", "line", "NUMBER", "CA_REVOKE_CERT", "unbound", "variable", "You", "can", "easily", "fix", "that", "by", "use", "lazy", "evaluation", "in", "bash", "like", "this", "if", "statuscode", "NUMBER", "NUMBER", "CA_REVOKE_CERT", "then", "However", "after", "fix", "it", "I", "m", "get", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "cert", "Status", "NUMBER", "Details", "type", "urn", "acme", "error", "serverInternal", "detail", "Error", "creating", "new", "cert", "status", "NUMBER", "So", "I", "guess", "there", "s", "something", "more", "to", "it", "NUMBER", "I", "figured", "it", "out", "you", "ll", "need", "to", "update", "your", "code", "to", "the", "latest", "version", "first", "NUMBER", "Then", "you", "can", "apply", "the", "patch", "NUMBER", "C", "This", "seems", "to", "work", "for", "me", "don", "t", "know", "if", "it", "be", "correct", "That", "looks", "like", "an", "awfully", "LE", "specific", "value", "to", "be", "hard", "code", "like", "that", "NUMBER", "Bearing", "in", "mind", "that", "this", "needs", "to", "work", "across", "_any_", "ACME", "compliant", "CA", "be", "there", "a", "more", "dynamic", "way", "to", "detect", "and", "set", "this", "if", "it", "s", "required", "I", "don", "t", "know", "NUMBER", "What", "do", "ocsp_url", "evaluate", "to", "Is", "there", "a", "way", "to", "extract", "the", "desired", "host", "header", "from", "that", "LINK", "x", "NUMBER", "letsencrypt", "NUMBER", "org", "I", "can", "t", "write", "the", "code", "while", "I", "m", "mobile", "but", "what", "about", "use", "cut", "splitting", "on", "the", "forward", "slashes", "and", "just", "keep", "the", "third", "field", "I", "think", "that", "should", "extract", "just", "the", "host", "NUMBER", "user", "server", "dehydrated", "NUMBER", "dehydrated", "version", "INFO", "Using", "main", "config", "file", "etc", "dehydrated", "config", "Dehydrated", "by", "Lukas", "Schauer", "LINK", "Dehydrated", "version", "NUMBER", "GIT", "Revision", "NUMBER", "f", "NUMBER", "bd", "NUMBER", "e", "NUMBER", "e", "NUMBER", "e", "NUMBER", "cb", "NUMBER", "c", "NUMBER", "ba", "NUMBER", "c", "OS", "S", "Used", "software", "bash", "NUMBER", "NUMBER", "release", "sed", "sed", "GNU", "sed", "NUMBER", "curl", "curl", "NUMBER", "awk", "GNU", "Awk", "NUMBER", "grep", "grep", "GNU", "grep", "NUMBER", "mktemp", "mktemp", "GNU", "coreutils", "NUMBER", "diff", "diff", "GNU", "diffutils", "NUMBER", "openssl", "OpenSSL", "NUMBER", "e", "fips", "NUMBER", "Feb", "NUMBER", "I", "be", "get", "this", "error", "without", "the", "HOST", "parameter", "openssl", "ocsp", "no_nonce", "issuer", "NUMBER", "chain", "verify_other", "NUMBER", "chain", "cert", "NUMBER", "certs", "test", "NUMBER", "com", "cert", "NUMBER", "pem", "respout", "test", "NUMBER", "der", "url", "LINK", "x", "NUMBER", "letsencrypt", "NUMBER", "org", "Error", "querying", "OCSP", "responsder", "NUMBER", "error", "NUMBER", "OCSP", "routines", "PARSE_HTTP_LINE", "NUMBER", "server", "response", "error", "ocsp_ht", "NUMBER", "c", "NUMBER", "Code", "NUMBER", "Reason", "Bad", "Request", "Doesn", "t", "seem", "to", "work", "NUMBER", "echo", "LINK", "x", "NUMBER", "letsencrypt", "NUMBER", "org", "sed", "s", "http", "s", "outputs", "LINK", "x", "NUMBER", "letsencrypt", "NUMBER", "org", "The", "SED", "commands", "above", "output", "the", "same", "on", "my", "machine", "NUMBER", "yup", "remove", "the", "ocsp", "NUMBER", "der", "file", "and", "call", "dehydrated", "no", "new", "file", "NUMBER", "aaah", "yeah", "that", "makes", "sense", "NUMBER", "yes", "that", "seems", "to", "work", "One", "question", "everytime", "I", "call", "the", "dehydrated", "script", "will", "it", "generate", "a", "new", "ocsp", "NUMBER", "der", "file", "aah", "there", "be", "a", "age", "check", "in", "there", "I", "see", "So", "to", "summarize", "older", "version", "of", "openssl", "did", "not", "include", "the", "Host", "header", "for", "OCSP", "request", "and", "on", "top", "of", "that", "the", "syntax", "of", "specify", "headers", "change", "NUMBER", "Between", "version", "NUMBER", "and", "NUMBER", "That", "s", "interesting", "NUMBER", "I", "be", "run", "Centos", "NUMBER", "openssl", "version", "OpenSSL", "NUMBER", "e", "fips", "NUMBER", "Feb", "NUMBER", "Putting", "this", "here", "as", "a", "note", "in", "case", "anyone", "downloads", "from", "Master", "before", "you", "get", "up", "NUMBER", "There", "be", "an", "undefined", "subroutine", "startup_hook", "be", "request", "which", "causes", "the", "script", "to", "fail", "NUMBER", "It", "looks", "like", "this", "be", "a", "work", "in", "progress", "but", "I", "would", "suggest", "use", "NUMBER", "until", "this", "be", "completed", "NUMBER", "There", "be", "a", "duplication", "of", "the", "short", "parameter", "a", "for", "account", "and", "algo", "NUMBER", "After", "the", "update", "today", "all", "my", "certificate", "request", "fail", "with", "Unknown", "parameter", "detected", "rsa", "NUMBER", "We", "should", "remove", "the", "short", "parameter", "a", "for", "account", "so", "all", "software", "that", "uses", "your", "script", "ie", "NUMBER", "puppet", "modules", "will", "continue", "to", "work", "NUMBER", "Thanks", "Hi", "because", "this", "script", "be", "use", "on", "mailcow", "mail", "instances", "after", "each", "renewing", "Nginx", "stop", "work", "and", "mail", "stop", "receiving", "due", "to", "restart", "Nginx", "NUMBER", "Does", "this", "script", "have", "some", "hooks", "for", "restarting", "Nginx", "after", "renewing", "NUMBER", "Thanks", "lukas", "NUMBER", "Thank", "you", "lukas", "on", "answer", "NUMBER", "Sorry", "for", "spam", "I", "know", "you", "close", "this", "issue", "but", "I", "read", "documentation", "and", "I", "don", "t", "understand", "how", "to", "integrate", "that", "NUMBER", "I", "m", "newbie", "I", "m", "use", "mailcow", "instance", "with", "yours", "script", "and", "config", "file", "NUMBER", "Please", "if", "you", "can", "help", "me", "how", "to", "integrate", "this", "NUMBER", "lukas", "NUMBER", "Please", "can", "you", "give", "me", "answer", "petarkozic", "I", "would", "suggest", "use", "the", "example", "hook", "in", "the", "documentation", "and", "customizing", "the", "desired", "function", "from", "there", "NUMBER", "Make", "sure", "the", "function", "be", "white", "listed", "and", "the", "hook", "be", "set", "correctly", "in", "your", "config", "calling", "script", "NUMBER", "dehydrated", "full", "chain", "s", "etc", "ssl", "vso", "key", "NUMBER", "csr", "etc", "ssl", "vso", "letsencrypt", "NUMBER", "crt", "INFO", "Using", "main", "config", "file", "etc", "dehydrated", "config", "WARNING", "Extra", "configuration", "directory", "etc", "dehydrated", "conf", "NUMBER", "d", "exists", "but", "no", "configuration", "find", "in", "it", "NUMBER", "Requesting", "challenge", "for", "www", "NUMBER", "vi", "server", "NUMBER", "org", "NUMBER", "Responding", "to", "challenge", "for", "www", "NUMBER", "vi", "server", "NUMBER", "org", "NUMBER", "Challenge", "be", "valid", "Requesting", "certificate", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "cert", "Status", "NUMBER", "Details", "type", "urn", "acme", "error", "unauthorized", "detail", "Error", "creating", "new", "cert", "authorizations", "for", "these", "names", "not", "find", "or", "expired", "vi", "server", "NUMBER", "org", "status", "NUMBER", "The", "same", "script", "worked", "some", "time", "before", "NUMBER", "don", "t", "really", "care", "about", "a", "certificates", "Common", "Name", "What", "be", "it", "be", "a", "simple", "certificate", "that", "only", "has", "a", "Common", "Name", "and", "no", "tricky", "extensions", "Here", "be", "the", "partial", "text", "dump", "of", "the", "csr", "Certificate", "Request", "Data", "Version", "NUMBER", "NUMBER", "x", "NUMBER", "Subject", "CN", "vi", "server", "NUMBER", "org", "Subject", "Public", "Key", "Info", "Public", "Key", "Algorithm", "rsaEncryption", "Public", "Key", "NUMBER", "bit", "Modulus", "NUMBER", "Exponent", "NUMBER", "NUMBER", "x", "NUMBER", "Attributes", "Requested", "Extensions", "X", "NUMBER", "v", "NUMBER", "Subject", "Alternative", "Name", "DNS", "www", "NUMBER", "vi", "server", "NUMBER", "org", "Signature", "Algorithm", "sha", "NUMBER", "WithRSAEncryption", "NUMBER", "I", "think", "it", "should", "also", "request", "challenge", "for", "vi", "server", "NUMBER", "org", "bases", "on", "CN", "NUMBER", "If", "browsers", "accept", "it", "and", "Let", "s", "Encrypt", "look", "at", "it", "why", "dehydrated", "shouldn", "t", "After", "add", "more", "names", "to", "the", "Subject", "Alternative", "Name", "it", "works", "NUMBER", "Maybe", "dehydrated", "should", "warn", "about", "poor", "CSRs", "Why", "should", "dehydrated", "warn", "about", "poor", "CSRs", "The", "sign", "csr", "functionality", "be", "clearly", "marked", "advance", "usage", "NUMBER", "I", "have", "a", "machine", "that", "be", "not", "allow", "to", "make", "outbound", "connections", "on", "port", "NUMBER", "NUMBER", "be", "work", "fine", "NUMBER", "As", "a", "result", "when", "dehydrated", "runs", "it", "goes", "through", "all", "the", "steps", "and", "issue", "the", "certificate", "but", "then", "it", "try", "to", "download", "the", "chain", "before", "saving", "moving", "the", "file", "in", "place", "and", "curl", "fail", "NUMBER", "Then", "on", "consequential", "runs", "since", "it", "doesn", "t", "find", "the", "issue", "certificate", "it", "reissues", "it", "but", "it", "fail", "again", "NUMBER", "This", "leads", "to", "quickly", "reaching", "domain", "limit", "of", "NUMBER", "for", "NUMBER", "days", "and", "blocks", "any", "other", "subdomains", "for", "issue", "new", "certificates", "NUMBER", "I", "suggest", "the", "cert", "file", "to", "be", "write", "write", "after", "it", "be", "downloaded", "and", "moved", "in", "place", "NUMBER", "And", "then", "let", "the", "chain", "fail", "NUMBER", "That", "way", "unwanted", "reissuing", "of", "the", "certificate", "will", "be", "avoided", "The", "cache", "would", "work", "great", "NUMBER", "I", "would", "just", "install", "the", "chain", "with", "my", "initial", "update", "routines", "NUMBER", "Thank", "you", "very", "much", "Having", "an", "issue", "with", "crontab", "NUMBER", "On", "the", "command", "line", "everything", "works", "but", "in", "crontab", "the", "ouput", "of", "the", "same", "command", "be", "To", "use", "dehydrated", "with", "this", "certificate", "authority", "you", "have", "to", "agree", "to", "their", "terms", "of", "service", "which", "you", "can", "find", "here", "LINK", "SA", "v", "NUMBER", "August", "NUMBER", "NUMBER", "pdf", "To", "accept", "these", "terms", "of", "service", "run", "jffs", "LetsEncrypt", "dehydrated", "register", "accept", "terms", "NUMBER", "However", "I", "have", "already", "run", "the", "command", "with", "register", "accept", "terms", "NUMBER", "I", "also", "thought", "so", "but", "I", "have", "tried", "run", "it", "with", "the", "c", "flag", "to", "use", "the", "same", "config", "which", "isn", "t", "needed", "when", "run", "it", "from", "the", "shell", "but", "it", "returns", "the", "same", "NUMBER", "Any", "further", "ideas", "I", "m", "run", "it", "on", "a", "Linux", "embedded", "router", "probably", "nbothing", "special", "NUMBER", "dulemis", "The", "c", "option", "be", "the", "command", "for", "cron", "mode", "NUMBER", "You", "ll", "want", "to", "try", "use", "the", "f", "flag", "to", "specify", "the", "location", "of", "your", "config", "file", "NUMBER", "Sorry", "I", "meant", "config", "NUMBER", "Im", "redirecting", "the", "cron", "output", "to", "a", "textfile", "and", "it", "logs", "at", "the", "top", "that", "its", "use", "the", "correct", "config", "NUMBER", "However", "it", "still", "acts", "like", "its", "The", "first", "run", "NUMBER", "Anyone", "having", "an", "idea", "why", "dehydrated", "thinks", "i", "m", "run", "it", "for", "the", "first", "time", "in", "cron", "I", "have", "specified", "the", "config", "parameter", "and", "everything", "works", "on", "the", "command", "line", "NUMBER", "No", "one", "NUMBER", "Hey", "I", "d", "like", "to", "emit", "a", "certificate", "with", "ALT", "names", "for", "example", "NUMBER", "org", "and", "example", "NUMBER", "com", "BUT", "example", "NUMBER", "org", "be", "managed", "by", "CloudFlare", "and", "example", "NUMBER", "com", "by", "Route", "NUMBER", "So", "I", "can", "t", "use", "the", "same", "hook", "with", "the", "two", "providers", "because", "one", "of", "the", "two", "will", "fail", "NUMBER", "Do", "you", "think", "this", "can", "be", "interesting", "to", "be", "implement", "or", "be", "it", "such", "a", "corner", "case", "that", "it", "s", "not", "worth", "the", "time", "Thanks", "I", "d", "suggest", "write", "a", "hook", "that", "can", "handle", "this", "case", "NUMBER", "For", "example", "write", "a", "hook", "specific", "config", "file", "that", "matches", "domains", "to", "DNS", "providers", "NUMBER", "Then", "your", "hook", "can", "match", "the", "pass", "domain", "to", "the", "config", "file", "and", "call", "the", "next", "script", "in", "turn", "NUMBER", "Basically", "you", "need", "to", "create", "a", "master", "hook", "script", "that", "can", "be", "call", "by", "dehydrated", "which", "will", "then", "handle", "the", "logic", "of", "figuring", "out", "what", "other", "hooks", "should", "be", "call", "in", "which", "cases", "NUMBER", "This", "change", "add", "a", "feature", "where", "each", "line", "in", "domains", "NUMBER", "txt", "can", "be", "prefixed", "by", "alias", "alias", "name", "where", "the", "given", "alias", "name", "be", "use", "instead", "of", "the", "primary", "first", "domain", "name", "on", "that", "line", "for", "looking", "up", "the", "configuration", "and", "for", "storing", "the", "certificate", "NUMBER", "With", "that", "change", "it", "be", "possible", "to", "generate", "multiple", "certificates", "with", "the", "same", "primary", "domain", "name", "and", "differentiate", "the", "configuration", "and", "output", "path", "via", "the", "alias", "name", "NUMBER", "One", "use", "case", "be", "for", "generating", "both", "an", "RSA", "and", "an", "ECDSA", "key", "cert", "combination", "NUMBER", "This", "change", "fix", "NUMBER", "x", "test", "manually", "x", "add", "simple", "test", "case", "to", "test", "NUMBER", "sh", "x", "add", "documentation", "update", "Note", "This", "seems", "a", "little", "relate", "but", "in", "the", "end", "quite", "different", "to", "NUMBER", "Using", "domains", "NUMBER", "txt", "afaik", "it", "be", "not", "possible", "to", "create", "multiple", "keys", "certs", "for", "a", "domain", "or", "set", "of", "domains", "at", "the", "same", "time", "NUMBER", "For", "example", "if", "I", "want", "to", "have", "a", "RSA", "and", "a", "ECDSA", "key", "for", "a", "domain", "I", "cannot", "use", "domains", "NUMBER", "txt", "but", "have", "to", "do", "my", "own", "scripting", "around", "NUMBER", "One", "aspect", "worth", "discussing", "be", "what", "the", "hooks", "should", "be", "call", "with", "the", "primary", "domain", "as", "now", "possibly", "use", "for", "multiple", "certificates", "and", "thus", "likely", "not", "the", "best", "information", "for", "the", "hook", "script", "or", "the", "alias", "name", "which", "would", "change", "the", "semantics", "of", "the", "hook", "call", "slightly", "NUMBER", "Please", "re", "open", "for", "further", "discussion", "NUMBER", "I", "don", "t", "understand", "your", "answer", "to", "NUMBER", "With", "domains", "NUMBER", "txt", "and", "domains", "NUMBER", "d", "we", "have", "everything", "we", "need", "for", "make", "per", "domain", "per", "certificate", "configuration", "change", "except", "for", "the", "alias", "name", "feature", "I", "suggested", "NUMBER", "What", "s", "the", "point", "in", "putting", "another", "configuration", "wrapper", "around", "that", "What", "if", "I", "have", "domains", "that", "shouldn", "t", "get", "a", "dual", "key", "setup", "like", "the", "other", "domains", "would", "I", "create", "another", "config", "file", "and", "another", "separate", "call", "to", "dehydrated", "just", "for", "these", "Then", "why", "do", "we", "have", "domains", "NUMBER", "d", "after", "all", "If", "I", "have", "say", "hundreds", "of", "domains", "and", "want", "to", "have", "dual", "key", "cert", "setups", "for", "all", "of", "them", "well", "it", "could", "be", "some", "work", "to", "setup", "the", "config", "file", "in", "config", "NUMBER", "d", "NUMBER", "But", "then", "I", "d", "have", "some", "scripting", "for", "creating", "the", "entries", "already", "wouldn", "t", "I", "Or", "I", "could", "maintain", "file", "links", "for", "keep", "common", "configuration", "specializations", "in", "one", "file", "NUMBER", "Why", "should", "I", "put", "a", "script", "around", "dehydrated", "if", "your", "tool", "can", "already", "handle", "an", "arbitrary", "number", "of", "individually", "configured", "domains", "Now", "to", "the", "implementation", "I", "offered", "in", "NUMBER", "It", "was", "thought", "to", "be", "fully", "backwards", "compatible", "that", "s", "why", "it", "looks", "like", "it", "do", "NUMBER", "I", "can", "understand", "that", "you", "don", "t", "like", "the", "way", "the", "alias", "be", "use", "in", "domains", "NUMBER", "txt", "but", "please", "suggest", "an", "alternative", "that", "suite", "your", "taste", "better", "and", "serves", "the", "same", "purpose", "NUMBER", "And", "please", "don", "t", "close", "an", "issue", "just", "because", "you", "don", "t", "like", "one", "aspect", "of", "the", "relate", "pull", "request", "NUMBER", "If", "I", "had", "a", "word", "on", "it", "I", "d", "transform", "domains", "NUMBER", "txt", "and", "domains", "NUMBER", "d", "into", "domains", "NUMBER", "yml", "and", "have", "all", "configuration", "options", "in", "this", "single", "file", "including", "of", "course", "the", "alias", "name", "feature", "NUMBER", "But", "I", "think", "we", "should", "consider", "that", "separately", "NUMBER", "BTW", "I", "d", "really", "suggest", "to", "merge", "at", "least", "cd", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "and", "NUMBER", "fe", "NUMBER", "c", "NUMBER", "c", "as", "they", "improve", "the", "code", "without", "add", "functionality", "NUMBER", "domain", "be", "already", "given", "the", "wrong", "name", "be", "it", "be", "only", "the", "primary", "or", "CN", "domain", "and", "altnames", "for", "all", "domains", "except", "the", "primary", "be", "also", "wrong", "as", "the", "SAN", "have", "to", "include", "the", "primary", "domain", "as", "well", "NUMBER", "And", "the", "repetitive", "use", "of", "CERTDIR", "domain", "be", "also", "worth", "simplification", "don", "t", "you", "think", "Thanks", "lukas", "NUMBER", "for", "reconsideration", "NUMBER", "Regarding", "NUMBER", "fe", "NUMBER", "I", "agree", "NUMBER", "Sorry", "for", "push", "that", "too", "hard", "the", "main", "change", "I", "d", "like", "to", "see", "there", "be", "certdir", "be", "defined", "outside", "of", "sign_domain", "and", "renaming", "domain", "NUMBER", "Let", "s", "stay", "with", "altnames", "but", "change", "domain", "into", "something", "like", "cndomain", "because", "its", "only", "role", "be", "specify", "the", "CN", "field", "NUMBER", "I", "can", "rebuild", "the", "commit", "NUMBER", "I", "would", "be", "really", "happy", "if", "it", "was", "easy", "to", "specify", "the", "alias", "name", "in", "the", "certificate", "s", "config", "file", "in", "domains", "NUMBER", "d", "but", "well", "the", "alias", "should", "already", "be", "the", "key", "to", "that", "config", "file", "that", "s", "why", "there", "be", "this", "unpleasant", "alias", "thing", "in", "domains", "NUMBER", "txt", "NUMBER", "How", "about", "the", "following", "syntax", "NUMBER", "The", "last", "line", "shows", "the", "compatibility", "with", "the", "current", "syntax", "NUMBER", "web", "rsa", "example", "NUMBER", "com", "www", "NUMBER", "example", "NUMBER", "com", "web", "ecdsa", "example", "NUMBER", "com", "www", "NUMBER", "example", "NUMBER", "com", "smtp", "imap", "example", "NUMBER", "com", "imap", "NUMBER", "example", "NUMBER", "com", "smtp", "NUMBER", "example", "NUMBER", "com", "other", "NUMBER", "example", "NUMBER", "com", "www", "NUMBER", "other", "NUMBER", "example", "NUMBER", "com", "Would", "you", "accept", "that", "change", "thanks", "for", "merge", "cd", "NUMBER", "e", "NUMBER", "a", "NUMBER", "be", "NUMBER", "ab", "NUMBER", "NUMBER", "NUMBER", "Great", "idea", "Do", "you", "think", "we", "should", "support", "all", "corner", "cases", "as", "well", "like", "the", "following", "alias", "NUMBER", "example", "NUMBER", "org", "example", "NUMBER", "org", "alias", "NUMBER", "example", "NUMBER", "org", "alias", "NUMBER", "lukas", "NUMBER", "how", "about", "allowing", "multiple", "alias", "entities", "per", "line", "This", "would", "allow", "us", "to", "make", "multiple", "certs", "in", "one", "line", "like", "so", "example", "NUMBER", "org", "example", "NUMBER", "com", "example", "rsa", "example", "ecdsa", "In", "some", "situations", "it", "might", "be", "necessary", "to", "pass", "extra", "commands", "to", "the", "curl", "binary", "e", "NUMBER", "g", "NUMBER", "proxy", "authentication", "credentials", "NUMBER", "Adds", "the", "CURL_OPTS", "config", "option", "NUMBER", "Bash", "NUMBER", "and", "others", "seem", "to", "have", "serious", "issue", "run", "dehydrated", "NUMBER", "LINK", "tracks", "the", "problem", "but", "get", "close", "as", "it", "seems", "too", "hard", "to", "support", "stone", "age", "distributions", "NUMBER", "Turns", "out", "it", "be", "actually", "only", "a", "three", "line", "change", "NUMBER", "No", "worries", "NUMBER", "I", "would", "normally", "not", "have", "bothered", "but", "the", "patch", "was", "super", "simple", "NUMBER", "As", "long", "as", "it", "s", "easy", "to", "maintain", "I", "be", "happy", "to", "send", "another", "patch", "when", "it", "breaks", "NUMBER", "If", "it", "be", "too", "hard", "we", "can", "always", "just", "sunset", "older", "bash", "support", "NUMBER", "It", "has", "be", "nearly", "a", "decade", "after", "all", "NUMBER", "I", "have", "a", "use", "case", "where", "I", "want", "to", "periodically", "renew", "a", "cert", "but", "I", "have", "to", "use", "a", "CSR", "I", "created", "elsewhere", "NUMBER", "I", "could", "use", "signcsr", "but", "then", "I", "d", "have", "to", "reimplement", "all", "of", "the", "renewal", "logic", "that", "dehydrated", "already", "provides", "NUMBER", "What", "do", "you", "think", "about", "an", "enhancement", "to", "allow", "a", "csr", "parameter", "that", "skips", "the", "CSR", "generation", "step", "and", "uses", "the", "provide", "one", "instead", "In", "my", "case", "I", "need", "to", "generate", "a", "certificate", "for", "a", "Jabber", "IM", "server", "that", "uses", "the", "same", "domain", "as", "my", "website", "NUMBER", "My", "best", "option", "be", "to", "generate", "a", "private", "key", "and", "CSR", "on", "the", "Jabber", "server", "then", "copy", "the", "CSR", "over", "to", "my", "web", "host", "to", "complete", "the", "ACME", "flow", "NUMBER", "I", "d", "like", "to", "just", "keep", "that", "CSR", "there", "and", "have", "a", "cron", "job", "that", "uses", "dehydrated", "to", "renew", "the", "cert", "and", "then", "ship", "the", "cert", "back", "to", "my", "Jabber", "server", "NUMBER", "This", "would", "make", "it", "a", "lot", "easier", "to", "use", "Let", "s", "Encrypt", "for", "non", "website", "TLS", "I", "understand", "that", "one", "complication", "be", "that", "this", "would", "limit", "the", "request", "to", "a", "single", "domain", "at", "a", "time", "perhaps", "requiring", "the", "domain", "parameter", "NUMBER", "Are", "there", "other", "complications", "with", "this", "request", "Yes", "I", "would", "be", "run", "a", "different", "instance", "of", "dehydrated", "NUMBER", "Forwarding", "be", "not", "easy", "because", "NUMBER", "well", "know", "acme", "challenge", "needs", "to", "be", "accessible", "for", "both", "the", "web", "server", "s", "verification", "and", "the", "Jabber", "server", "s", "verification", "NUMBER", "DNS", "verification", "be", "decidedly", "not", "easy", "because", "even", "if", "my", "host", "support", "API", "access", "to", "DNS", "I", "m", "not", "sure", "I", "d", "want", "to", "distribute", "such", "sensitive", "keys", "to", "my", "Jabber", "server", "NUMBER", "That", "s", "why", "I", "m", "interested", "in", "precomputing", "a", "CSR", "and", "giving", "that", "to", "dehydrated", "NUMBER", "Does", "that", "make", "sense", "Testing", "an", "issue", "that", "s", "kind", "of", "relate", "to", "Issue", "NUMBER", "the", "other", "day", "and", "I", "d", "forgotten", "to", "enter", "any", "FQDNs", "into", "domains", "NUMBER", "txt", "NUMBER", "Complete", "user", "error", "NUMBER", "But", "the", "output", "when", "doing", "so", "was", "just", "root", "dehydrated", "test", "dehydrated", "c", "INFO", "Using", "main", "config", "file", "etc", "dehydrated", "config", "root", "dehydrated", "test", "It", "might", "be", "helpful", "to", "have", "a", "message", "like", "ERROR", "Nothing", "in", "path", "to", "domains", "NUMBER", "txt", "nothing", "to", "do", "Would", "have", "saved", "me", "some", "time", "anyway", "NUMBER", "be", "it", "possible", "to", "call", "dehydrated", "cleanup", "from", "within", "a", "hook", "e", "NUMBER", "g", "NUMBER", "exit_hook", "Definitively", "needs", "some", "more", "work", "but", "be", "a", "good", "starting", "point", "NUMBER", "Why", "do", "you", "check", "the", "value", "of", "FAILED", "just", "after", "setting", "it", "this", "will", "always", "be", "true", "seems", "completely", "unnecessary", "and", "makes", "the", "code", "harder", "to", "read", "NUMBER", "Some", "parameters", "need", "to", "be", "in", "quotes", "especially", "for", "that", "mv", "command", "at", "the", "end", "NUMBER", "Errors", "should", "be", "redirected", "to", "stderr", "ideally", "use", "_exiterr", "NUMBER", "For", "temporary", "file", "NEW_ACCOUNT_KEY_JSON", "please", "use", "_mktemp", "NUMBER", "Maybe", "write", "a", "backup", "file", "for", "the", "old", "json", "would", "be", "a", "good", "idea", "in", "case", "something", "went", "wrong", "that", "wasn", "t", "catched", "anywhere", "NUMBER", "A", "bit", "more", "information", "for", "the", "user", "on", "what", "be", "going", "on", "would", "be", "nice", "as", "far", "as", "I", "can", "see", "this", "code", "only", "really", "logs", "anything", "on", "error", "but", "a", "Updating", "account", "information", "NUMBER", "message", "or", "something", "similar", "would", "be", "nice", "NUMBER", "Re", "FAILED", "You", "be", "correct", "NUMBER", "I", "ve", "copy", "paste", "from", "the", "Init", "function", "and", "left", "it", "for", "polishing", "later", "NUMBER", "Fixed", "now", "NUMBER", "I", "ve", "quoted", "parameters", "where", "appropriate", "NUMBER", "Used", "_exitcode", "for", "exiting", "with", "error", "Used", "_mktemp", "for", "temporary", "file", "Make", "a", "backup", "file", "if", "the", "new", "one", "differs", "from", "the", "old", "one", "and", "don", "t", "touch", "anything", "otherwise", "Added", "information", "to", "the", "user", "what", "be", "happening", "Hey", "do", "you", "need", "anything", "else", "in", "this", "pull", "request", "lukavia", "hey", "sorry", "i", "know", "it", "s", "be", "a", "while", "i", "m", "a", "bit", "busy", "but", "i", "ll", "look", "into", "your", "change", "soon", "hopefully", "later", "this", "week", "I", "m", "run", "a", "server", "behind", "a", "dynamic", "IP", "NUMBER", "Just", "before", "a", "cert", "was", "about", "to", "expire", "and", "the", "cronjob", "to", "renew", "it", "kicked", "in", "the", "IP", "address", "change", "NUMBER", "Due", "to", "a", "NUMBER", "instance", "of", "dehydrated", "run", "on", "the", "same", "network", "LE", "s", "dns", "servers", "had", "cached", "the", "old", "IP", "address", "for", "NUMBER", "seconds", "DNS", "TTL", "NUMBER", "This", "lead", "to", "a", "situation", "where", "request", "could", "not", "be", "verify", "and", "many", "pending", "authorizations", "were", "created", "ultimately", "leading", "to", "hitting", "LE", "s", "rate", "limit", "NUMBER", "This", "can", "easily", "be", "avoided", "by", "either", "deactivating", "the", "authorizations", "explicitly", "if", "one", "in", "the", "chain", "required", "for", "the", "cert", "fail", "or", "just", "trying", "to", "validate", "them", "NUMBER", "It", "doesn", "t", "matter", "if", "the", "request", "succeeds", "or", "not", "The", "pending", "authorization", "will", "be", "gone", "NUMBER", "Alternatively", "dehydrated", "could", "cache", "the", "values", "and", "use", "them", "in", "later", "request", "NUMBER", "A", "similar", "issue", "and", "the", "solution", "mention", "above", "be", "documented", "on", "the", "LE", "forums", "here", "LINK", "pending", "authorizations", "NUMBER", "This", "be", "to", "work", "around", "an", "nginx", "bug", "but", "perhaps", "it", "d", "be", "useful", "for", "others", "too", "NUMBER", "It", "s", "be", "nice", "to", "be", "able", "to", "tell", "dehydrated", "to", "also", "download", "the", "OCSP", "response", "and", "keep", "it", "up", "to", "date", "as", "part", "of", "cron", "NUMBER", "That", "way", "I", "can", "configure", "nginx", "with", "ssl_stapling_file", "LINK", "_http_ssl_module", "NUMBER", "html", "ssl_stapling_file", "to", "read", "the", "response", "at", "start", "NUMBER", "Right", "now", "at", "least", "with", "nginx", "NUMBER", "on", "CentOS", "NUMBER", "when", "nginx", "starts", "it", "do", "not", "immediately", "request", "the", "OCSP", "and", "so", "doesn", "t", "staple", "it", "to", "the", "response", "NUMBER", "With", "OCSP_MUST_STAPLE", "enable", "Firefox", "will", "complain", "when", "you", "first", "access", "the", "server", "and", "for", "a", "few", "more", "seconds", "beyond", "that", "too", "NUMBER", "Saving", "the", "response", "to", "disk", "should", "in", "theory", "prevent", "this", "problem", "NUMBER", "Perhaps", "etc", "dehydrated", "certs", "domain", "NUMBER", "name", "ocsp", "NUMBER", "der", "I", "believe", "that", "Let", "s", "Encrypt", "only", "signs", "the", "OCSP", "responses", "for", "a", "few", "days", "NUMBER", "Depending", "on", "how", "often", "a", "user", "runs", "their", "cron", "job", "the", "response", "may", "expire", "NUMBER", "I", "d", "be", "inclined", "to", "write", "something", "outside", "of", "dehydrated", "to", "handle", "that", "to", "avoid", "any", "instances", "of", "OCSP", "responses", "expiring", "on", "folks", "in", "between", "cron", "jobs", "NUMBER", "For", "Let", "s", "Encrypt", "the", "OCSP", "responses", "be", "valid", "for", "NUMBER", "week", "NUMBER", "So", "users", "would", "need", "to", "run", "the", "cron", "job", "at", "least", "once", "every", "NUMBER", "days", "probably", "a", "little", "bit", "more", "often", "than", "that", "to", "allow", "them", "time", "to", "react", "to", "failures", "NUMBER", "Reading", "up", "on", "nginx", "s", "behaviour", "it", "seems", "like", "if", "the", "ocsp", "response", "isn", "t", "valid", "any", "more", "it", "will", "go", "and", "query", "OCSP", "on", "it", "s", "own", "like", "normal", "anyways", "NUMBER", "So", "if", "the", "cron", "job", "be", "miss", "it", "doesn", "t", "block", "the", "server", "NUMBER", "On", "top", "of", "all", "of", "that", "this", "be", "a", "niche", "situation", "NUMBER", "How", "many", "people", "have", "turned", "on", "OCSP", "Must", "Staple", "And", "how", "many", "of", "them", "be", "use", "Nginx", "I", "figure", "the", "numbers", "be", "small", "enough", "that", "it", "would", "not", "be", "enable", "by", "default", "and", "would", "be", "another", "configuration", "option", "NUMBER", "If", "it", "s", "enable", "manage", "the", "OCSP", "response", "NUMBER", "Some", "references", "online", "LINK", "NUMBER", "LINK", "stapling", "busted", "LINK", "lukas", "NUMBER", "I", "enable", "OCSP_FETCH", "yes", "this", "option", "in", "the", "config", "file", "and", "regenerated", "but", "no", "ocsp", "NUMBER", "der", "file", "be", "showing", "up", "NUMBER", "Seems", "you", "need", "to", "add", "a", "HOST", "parameter", "to", "the", "request", "LINK", "responses", "inconsistent", "between", "different", "ocsp", "servers", "NUMBER", "NUMBER", "Added", "a", "PR", "NUMBER", "Closing", "this", "as", "OCSP", "stapling", "update", "seem", "to", "be", "work", "fine", "now", "NUMBER", "The", "cleanup", "command", "do", "not", "move", "file", "like", "cert", "NUMBER", "pem", "revoked", "to", "the", "archive", "directory", "NUMBER", "Is", "this", "by", "design", "or", "should", "the", "cleanup", "procedure", "actually", "move", "those", "file", "as", "well", "Thank", "you", "NUMBER", "This", "be", "as", "far", "as", "I", "can", "tell", "by", "design", "NUMBER", "The", "cleanup", "procedure", "checks", "the", "symlinks", "to", "determine", "the", "current", "target", "then", "archives", "the", "file", "of", "that", "type", "that", "be", "not", "currently", "linked", "NUMBER", "I", "m", "going", "just", "from", "memory", "here", "but", "I", "believe", "this", "procedure", "doesn", "t", "work", "for", "revoked", "file", "since", "they", "re", "no", "longer", "in", "the", "same", "naming", "convention", "as", "the", "subroutine", "checks", "for", "NUMBER", "This", "be", "a", "duplicate", "of", "NUMBER", "I", "ve", "be", "meaning", "to", "write", "some", "code", "to", "address", "this", "but", "I", "haven", "t", "figured", "out", "a", "good", "way", "to", "archive", "all", "revoked", "certs", "without", "touching", "any", "other", "user", "created", "file", "in", "the", "filespace", "NUMBER", "It", "s", "not", "a", "bug", "it", "be", "a", "feature", "Just", "kidding", "I", "be", "glad", "someone", "be", "aware", "of", "the", "problem", "and", "I", "be", "sure", "it", "will", "get", "sorted", "out", "eventually", "NUMBER", "For", "some", "reason", "dehydrated", "try", "to", "reach", "out", "for", "the", "issuer", "certificate", "of", "the", "intermediate", "cert", "also", "NUMBER", "As", "this", "be", "located", "on", "apps", "NUMBER", "identrust", "NUMBER", "com", "which", "das", "no", "IPv", "NUMBER", "connectivity", "dehydrated", "throw", "this", "error", "ERROR", "Problem", "connecting", "to", "server", "get", "for", "LINK", "curl", "returned", "with", "NUMBER", "and", "stops", "after", "that", "if", "our", "host", "has", "only", "IPv", "NUMBER", "connectivity", "NUMBER", "Our", "request", "certificate", "was", "already", "successfully", "issue", "by", "letsencrypt", "at", "this", "point", "NUMBER", "Is", "there", "any", "reason", "why", "dehydrated", "try", "to", "fetch", "this", "root", "cert", "In", "any", "case", "a", "failure", "here", "should", "not", "break", "the", "processing", "of", "dehydrated", "here", "IMHO", "NUMBER", "dehydrated", "try", "to", "walk", "the", "chain", "to", "fetch", "all", "required", "intermediate", "certificates", "it", "can", "t", "reliably", "detect", "the", "root", "certificate", "without", "fetching", "it", "first", "i", "think", "the", "real", "issue", "here", "be", "that", "identrust", "has", "no", "ipv", "NUMBER", "support", "on", "their", "hosts", "but", "as", "a", "workaround", "it", "may", "be", "possible", "to", "allow", "manual", "specification", "of", "a", "certificate", "chain", "instead", "of", "querying", "for", "it", "i", "think", "the", "real", "issue", "here", "be", "that", "identrust", "has", "no", "ipv", "NUMBER", "support", "on", "their", "hosts", "sure", "this", "be", "the", "main", "problem", "NUMBER", "But", "as", "The", "identrust", "server", "actually", "doesn", "t", "need", "to", "be", "contacted", "for", "our", "certificate", "chain", "we", "don", "t", "include", "the", "root", "cert", "we", "could", "just", "ignore", "that", "if", "we", "run", "into", "this", "problem", "but", "as", "a", "workaround", "it", "may", "be", "possible", "to", "allow", "manual", "specification", "of", "a", "certificate", "chain", "instead", "of", "querying", "for", "it", "or", "add", "an", "option", "to", "just", "fetch", "n", "certificates", "from", "the", "cert", "chain", "and", "not", "fetch", "all", "certs", "down", "to", "a", "root", "NUMBER", "For", "now", "and", "I", "guess", "for", "a", "long", "time", "on", "people", "with", "IPv", "NUMBER", "only", "hosts", "could", "then", "simply", "set", "this", "value", "to", "NUMBER", "and", "the", "problem", "would", "be", "solve", "NUMBER", "we", "don", "t", "include", "the", "root", "cert", "yea", "but", "the", "only", "way", "to", "find", "out", "if", "it", "actually", "be", "the", "root", "cert", "be", "to", "actually", "download", "it", "and", "check", "if", "it", "has", "a", "issuer", "certificate", "just", "fetch", "n", "certificates", "no", "definitively", "not", "either", "full", "manual", "definition", "of", "the", "chain", "or", "the", "automatic", "way", "but", "this", "n", "certificates", "sounds", "like", "it", "may", "end", "up", "with", "a", "lot", "of", "incomplete", "chains", "which", "i", "definitively", "want", "to", "avoid", "either", "full", "manual", "definition", "of", "the", "chain", "or", "the", "automatic", "way", "but", "this", "n", "certificates", "sounds", "like", "it", "may", "end", "up", "with", "a", "lot", "of", "incomplete", "chains", "which", "i", "definitively", "want", "to", "avoid", "I", "don", "t", "see", "howa", "manual", "definition", "makes", "it", "any", "better", "NUMBER", "I", "will", "make", "it", "worse", "NUMBER", "If", "the", "intermediate", "change", "like", "from", "X", "NUMBER", "to", "X", "NUMBER", "silently", "this", "will", "not", "be", "notice", "and", "end", "up", "in", "a", "broken", "chain", "then", "NUMBER", "The", "number", "of", "intermediate", "certs", "that", "need", "to", "be", "fetched", "will", "most", "probably", "not", "change", "any", "time", "soon", "NUMBER", "I", "don", "t", "see", "howa", "manual", "definition", "makes", "it", "any", "better", "NUMBER", "I", "will", "make", "it", "worse", "NUMBER", "If", "the", "intermediate", "change", "like", "from", "X", "NUMBER", "to", "X", "NUMBER", "silently", "this", "will", "not", "be", "notice", "and", "end", "up", "in", "a", "broken", "chain", "then", "NUMBER", "Well", "obviously", "NUMBER", "But", "that", "s", "the", "risk", "any", "administrator", "takes", "any", "time", "they", "decide", "to", "set", "things", "to", "a", "manual", "process", "NUMBER", "Staying", "with", "the", "automatic", "cert", "walk", "be", "a", "better", "way", "to", "go", "for", "most", "people", "NUMBER", "The", "number", "of", "intermediate", "certs", "that", "need", "to", "be", "fetched", "will", "most", "probably", "not", "change", "any", "time", "soon", "NUMBER", "The", "number", "of", "intermediates", "for", "what", "CA", "This", "script", "be", "designed", "to", "work", "with", "any", "ACME", "compliant", "CA", "in", "the", "general", "case", "NUMBER", "If", "the", "intermediate", "change", "like", "from", "X", "NUMBER", "to", "X", "NUMBER", "silently", "this", "will", "not", "be", "notice", "and", "end", "up", "in", "a", "broken", "chain", "then", "NUMBER", "So", "what", "be", "different", "with", "n", "whatever", "walks", "here", "Like", "txr", "NUMBER", "said", "the", "chain", "can", "be", "completely", "different", "than", "Let", "s", "Encrypts", "current", "design", "since", "it", "s", "a", "generic", "ACME", "client", "also", "Let", "s", "Encrypt", "may", "at", "any", "time", "decide", "to", "change", "their", "internal", "intermediate", "structure", "which", "will", "just", "continue", "work", "when", "the", "chain", "be", "walked", "correctly", "but", "will", "probably", "break", "the", "chain", "of", "trust", "for", "your", "certificate", "because", "of", "miss", "certificates", "NUMBER", "One", "possibility", "I", "see", "would", "be", "to", "cache", "intermediate", "certificates", "by", "fingerprint", "which", "iirc", "should", "already", "be", "available", "from", "the", "child", "certificate", "and", "if", "it", "can", "t", "be", "fetched", "automatically", "you", "have", "the", "option", "to", "fill", "in", "the", "miss", "certificates", "yourself", "and", "it", "will", "just", "work", "on", "the", "next", "run", "NUMBER", "I", "would", "probably", "also", "add", "a", "fix", "chains", "command", "with", "that", "so", "that", "there", "be", "no", "need", "to", "run", "through", "the", "whole", "signing", "process", "again", "if", "there", "be", "any", "issue", "NUMBER", "it", "s", "a", "generic", "ACME", "client", "I", "had", "the", "focus", "only", "only", "Letsencrypt", "for", "generic", "ACME", "you", "be", "right", "of", "course", "also", "Let", "s", "Encrypt", "may", "at", "any", "time", "decide", "to", "change", "their", "internal", "intermediate", "structure", "not", "that", "easy", "any", "time", "because", "their", "intermediate", "certs", "have", "a", "basic", "constraint", "Maximum", "number", "of", "intermediate", "CAs", "NUMBER", "Anyway", "with", "the", "generic", "ACME", "in", "mind", "just", "close", "this", "issue", "if", "you", "want", "the", "only", "clean", "way", "to", "solve", "this", "issue", "be", "that", "the", "root", "CAs", "finally", "support", "IPv", "NUMBER", "on", "their", "servers", "NUMBER", "I", "ll", "leave", "this", "open", "as", "a", "reminder", "to", "implement", "caching", "of", "chain", "certificates", "which", "would", "basically", "solve", "your", "issue", "with", "minimal", "manual", "interaction", "NUMBER", "Hello", "I", "have", "similar", "issue", "like", "this", "use", "CentOS", "NUMBER", "on", "Digitalocean", "server", "NUMBER", "Please", "advice", "the", "correct", "fix", "NUMBER", "Thanks", "LINK", "le", "certificate", "chain", "on", "ipv", "NUMBER", "only", "host", "not", "possible", "Link", "broken", "NUMBER", "Proper", "one", "be", "LINK", "lets", "encrypt", "intermediates", "over", "ipv", "NUMBER", "address", "NUMBER", "While", "looking", "into", "NUMBER", "I", "notice", "a", "few", "lines", "were", "still", "printed", "to", "stdout", "instead", "of", "stderr", "NUMBER", "And", "two", "lines", "where", "redirection", "happens", "twice", "NUMBER", "The", "build", "failure", "seems", "to", "be", "a", "network", "hickup", "test", "run", "OK", "locally", "NUMBER", "Please", "restart", "them", "NUMBER", "add", "new", "quiet", "silent", "argument", "so", "program", "report", "only", "error", "cron", "NUMBER", "error", "to", "stderr", "temp", "sollution", "dehydrated", "cron", "egrep", "v", "INFO", "Checking", "Valid", "till", "Processing", "tnx", "Most", "error", "already", "went", "to", "STDERR", "two", "remainig", "ones", "be", "fix", "in", "NUMBER", "To", "get", "quiet", "behaviour", "I", "suggest", "redirecting", "the", "STDOUT", "to", "a", "logfile", "instead", "of", "grepping", "it", "away", "NUMBER", "dehydrated", "cron", "var", "log", "dehydrated", "NUMBER", "log", "j", "NUMBER", "Hu", "be", "right", "normal", "operation", "without", "any", "change", "should", "be", "quit", "for", "cron", "NUMBER", "Another", "logfile", "which", "needs", "rotation", "and", "stuff", "be", "too", "much", "in", "my", "opinion", "NUMBER", "But", "what", "I", "want", "to", "know", "be", "when", "there", "actually", "was", "a", "renewal", "or", "if", "that", "renewal", "fail", "NUMBER", "I", "m", "glad", "I", "find", "this", "script", "as", "it", "s", "a", "much", "nicer", "solution", "for", "my", "purpose", "NUMBER", "I", "was", "going", "to", "replace", "certbot", "with", "this", "script", "across", "all", "my", "servers", "until", "I", "saw", "this", "issue", "NUMBER", "I", "agree", "that", "a", "non", "verbose", "cron", "operation", "would", "be", "more", "useful", "NUMBER", "One", "workaround", "be", "to", "run", "with", "a", "wrapper", "a", "nice", "one", "be", "Cronic", "LINK", "enable", "dehydrated", "to", "use", "an", "exist", "CSR", "when", "run", "in", "cron", "mode", "NUMBER", "Add", "the", "variable", "USE_EXISTING_CSR", "TAG", "to", "CERTDIR", "domain", "config", "I", "have", "a", "couple", "of", "HP", "systems", "with", "a", "management", "console", "call", "iLO", "NUMBER", "The", "devices", "will", "issue", "a", "CSR", "on", "request", "and", "then", "you", "can", "upload", "the", "certificate", "generate", "with", "this", "CSR", "into", "the", "device", "NUMBER", "It", "be", "not", "possible", "to", "upload", "a", "certificate", "key", "pair", "NUMBER", "But", "I", "still", "would", "like", "to", "update", "the", "certificates", "automatically", "NUMBER", "While", "I", "m", "not", "use", "LE", "for", "this", "yet", "other", "hardware", "vendors", "integrated", "management", "solutions", "like", "Dell", "s", "iDRAC", "Fujitsu", "s", "iRMC", "etc", "behave", "similarly", "NUMBER", "They", "give", "you", "a", "CSR", "to", "sign", "no", "way", "to", "push", "own", "keys", "NUMBER", "Just", "my", "NUMBER", "NUMBER", "Currently", "the", "HOOK", "variable", "be", "use", "like", "this", "from", "the", "default", "config", "file", "Program", "or", "function", "call", "in", "certain", "situations", "After", "generating", "the", "challenge", "response", "or", "after", "fail", "challenge", "in", "this", "case", "altname", "be", "empty", "Given", "argument", "clean_challenge", "deploy_challenge", "altname", "token", "filename", "token", "content", "After", "successfully", "signing", "certificate", "Given", "argument", "deploy_cert", "domain", "path", "to", "privkey", "NUMBER", "pem", "path", "to", "cert", "NUMBER", "pem", "path", "to", "fullchain", "NUMBER", "pem", "BASEDIR", "and", "WELLKNOWN", "variables", "be", "export", "and", "can", "be", "use", "in", "an", "external", "program", "default", "TAG", "IMO", "this", "do", "not", "make", "much", "sense", "because", "in", "the", "case", "of", "DNS", "NUMBER", "challenges", "challenge", "deployment", "be", "completely", "unrelated", "to", "certificate", "deployment", "NUMBER", "A", "useful", "feature", "would", "therefore", "be", "to", "be", "able", "to", "specify", "different", "hooks", "for", "different", "operations", "for", "example", "HOOK_DEPLOY_CERT", "would", "be", "call", "for", "deploy_cert", "operations", "NUMBER", "If", "HOOK_DEPLOY_CERT", "were", "unset", "HOOK", "would", "be", "call", "instead", "thereby", "preserving", "backwards", "compatibility", "NUMBER", "Of", "course", "the", "other", "operations", "would", "get", "their", "own", "environment", "variables", "as", "well", "NUMBER", "This", "be", "more", "of", "a", "nice", "to", "have", "though", "because", "it", "s", "pretty", "trivial", "to", "work", "around", "this", "limitation", "by", "make", "a", "hook", "that", "simply", "routes", "the", "right", "hook", "calls", "to", "the", "right", "script", "NUMBER", "A", "couple", "of", "minor", "change", "to", "not", "break", "under", "MSYS", "eg", "NUMBER", "git", "bash", "on", "Windows", "NUMBER", "Feel", "free", "to", "reject", "this", "if", "you", "don", "t", "care", "NUMBER", "Hi", "I", "have", "dehydrated", "run", "as", "a", "cron", "process", "with", "the", "c", "option", "and", "I", "need", "the", "process", "to", "send", "out", "an", "email", "whenever", "a", "new", "certificate", "be", "successfully", "obtained", "i", "NUMBER", "e", "NUMBER", "no", "Valid", "till", "NUMBER", "Skipping", "renew", "message", "but", "also", "no", "NUMBER", "error", "from", "letsencrypt", "no", "issue", "write", "to", "the", "NUMBER", "well", "know", "dir", "etc", "NUMBER", "What", "be", "the", "best", "way", "the", "check", "whether", "a", "new", "certificate", "has", "be", "obtained", "after", "run", "dehydrated", "I", "guess", "one", "way", "would", "be", "to", "grep", "through", "the", "output", "and", "look", "for", "something", "like", "Done", "but", "I", "d", "like", "something", "more", "failsafe", "NUMBER", "Thanks", "Misha", "I", "personally", "have", "a", "small", "script", "for", "this", "purpose", "NUMBER", "It", "goes", "through", "all", "my", "certs", "and", "compares", "the", "SHA", "NUMBER", "hash", "of", "the", "current", "fullchain", "NUMBER", "pem", "to", "the", "previous", "value", "NUMBER", "If", "the", "hash", "has", "change", "it", "fires", "whatever", "update", "be", "needed", "for", "that", "particular", "certificate", "NUMBER", "You", "may", "also", "be", "able", "to", "use", "the", "deploy_cert", "hook", "for", "this", "purpose", "since", "that", "be", "call", "once", "for", "each", "certificate", "that", "has", "be", "produced", "NUMBER", "Would", "you", "mind", "sharing", "the", "hash", "comparison", "script", "or", "at", "least", "the", "relevant", "parts", "I", "don", "t", "mind", "at", "all", "NUMBER", "I", "ve", "uploaded", "it", "here", "LINK", "certs", "NUMBER", "txt", "for", "your", "convenience", "NUMBER", "Basically", "it", "loops", "over", "all", "certificate", "directories", "in", "CERTDIR", "NUMBER", "In", "each", "directory", "it", "calculates", "the", "current", "hash", "for", "private", "key", "and", "fullchain", "checks", "for", "the", "previously", "saved", "hash", "for", "the", "private", "key", "and", "fullchain", "and", "determines", "whether", "those", "file", "have", "change", "NUMBER", "If", "a", "change", "be", "find", "then", "we", "check", "the", "certificate", "directory", "for", "a", "per", "certificate", "override", "file", "telling", "us", "what", "actions", "to", "take", "NUMBER", "If", "find", "execute", "that", "script", "NUMBER", "Otherwise", "we", "perform", "the", "default", "actions", "NUMBER", "Then", "we", "fire", "off", "an", "email", "notifying", "us", "of", "what", "needs", "to", "be", "do", "save", "the", "new", "hash", "values", "to", "the", "certificate", "directory", "and", "move", "on", "NUMBER", "Additional", "points", "of", "note", "this", "script", "assumes", "that", "a", "change", "in", "the", "main", "certificate", "file", "be", "enough", "to", "trigger", "a", "set", "of", "actions", "regardless", "of", "whether", "the", "private", "key", "change", "or", "not", "NUMBER", "If", "you", "need", "other", "actions", "to", "be", "taken", "depending", "on", "whether", "the", "private", "key", "also", "change", "you", "ll", "need", "to", "move", "that", "check", "up", "accordingly", "NUMBER", "if", "you", "don", "t", "care", "about", "whether", "the", "private", "key", "update", "for", "example", "if", "you", "have", "set", "PRIVATE_KEY_RENEW", "yes", "and", "don", "t", "have", "that", "overridden", "anywhere", "then", "you", "can", "remove", "the", "checks", "for", "private", "key", "hash", "and", "the", "second", "email", "completely", "NUMBER", "Thank", "you", "so", "much", "This", "be", "really", "helpful", "NUMBER", "Yes", "I", "ended", "up", "implement", "a", "deploy_cert", "hook", "and", "it", "works", "great", "NUMBER", "Sorry", "for", "not", "closing", "this", "earlier", "and", "thanks", "so", "much", "for", "your", "help", "NUMBER", "Release", "NUMBER", "add", "the", "Skip", "challenges", "for", "already", "validated", "domains", "feature", "NUMBER", "While", "the", "feature", "makes", "sense", "this", "makes", "it", "difficult", "to", "test", "hooks", "NUMBER", "Please", "add", "an", "option", "to", "disable", "this", "feature", "or", "make", "skipping", "it", "part", "of", "force", "NUMBER", "nh", "NUMBER", "Does", "this", "happen", "in", "staging", "as", "well", "Does", "this", "happen", "in", "staging", "as", "well", "Yes", "it", "says", "Requesting", "challenge", "for", "mydomain", "NUMBER", "com", "NUMBER", "Already", "validated", "How", "to", "work", "around", "this", "Need", "to", "force", "this", "tool", "really", "quick", "as", "my", "certificates", "expire", "NUMBER", "Trying", "to", "work", "around", "this", "issue", "for", "two", "days", "now", "NUMBER", "Here", "be", "solution", "rm", "rf", "etc", "dehydrated", "accounts", "rm", "rf", "etc", "dehydrated", "certs", "widder", "What", "be", "the", "issue", "you", "re", "experience", "The", "already", "validated", "response", "will", "not", "block", "the", "renewal", "of", "certificates", "NUMBER", "And", "I", "think", "it", "a", "very", "bad", "solution", "to", "register", "a", "brand", "new", "account", "with", "the", "CA", "every", "time", "you", "want", "a", "new", "certificate", "NUMBER", "txr", "NUMBER", "I", "m", "not", "widder", "but", "I", "might", "be", "able", "to", "provide", "some", "insight", "into", "a", "comparable", "situation", "NUMBER", "The", "problem", "I", "ve", "get", "be", "trying", "to", "get", "a", "validation", "hook", "to", "work", "properly", "NUMBER", "The", "Already", "validated", "feature", "as", "excellent", "and", "useful", "as", "it", "be", "in", "normal", "situations", "be", "interfering", "with", "repeated", "test", "of", "the", "hook", "against", "LE", "s", "staging", "network", "NUMBER", "I", "can", "test", "the", "hook", "on", "its", "own", "but", "one", "of", "the", "problem", "it", "s", "wrought", "with", "be", "actually", "its", "integration", "with", "dehydrated", "occasionally", "it", "will", "complain", "it", "s", "not", "be", "call", "with", "the", "right", "argument", "NUMBER", "So", "basically", "I", "d", "like", "a", "way", "to", "skip", "validation", "caching", "too", "to", "try", "and", "force", "more", "deterministic", "behaviour", "out", "of", "this", "hook", "I", "m", "trying", "to", "run", "NUMBER", "That", "said", "I", "m", "going", "to", "see", "if", "I", "can", "take", "care", "of", "this", "with", "a", "sloppy", "hack", "on", "my", "end", "or", "less", "sloppy", "if", "I", "get", "lucky", "so", "there", "s", "hopefully", "no", "urgency", "but", "I", "wanted", "to", "explain", "a", "possible", "usecase", "in", "this", "ticket", "NUMBER", "tl", "dr", "Flag", "would", "be", "useful", "for", "hook", "TAG", "dehydrated", "integration", "test", "against", "LE", "s", "staging", "network", "NUMBER", "What", "pinkgothic", "says", "be", "correct", "NUMBER", "I", "m", "not", "use", "dehydrated", "any", "more", "because", "of", "its", "inability", "to", "use", "it", "with", "staging", "NUMBER", "lukas", "NUMBER", "There", "do", "seem", "to", "be", "a", "solid", "use", "case", "for", "wanting", "to", "skip", "the", "validation", "caching", "NUMBER", "Rather", "than", "add", "a", "new", "flag", "what", "about", "the", "suggestion", "of", "make", "force", "also", "request", "a", "new", "validation", "See", "referenced", "commit", "this", "should", "allow", "you", "to", "do", "what", "you", "be", "trying", "to", "do", "NUMBER", "Thanks", "txr", "NUMBER", "for", "the", "suggestion", "NUMBER", "Found", "use", "mwic", "LINK", "NUMBER", "dehydrated", "creates", "symlinks", "to", "the", "current", "PEM", "encoded", "certificate", "file", "NUMBER", "These", "be", "named", "cert", "NUMBER", "pem", "and", "cert", "NUMBER", "csr", "for", "the", "certificate", "resp", "NUMBER", "the", "CSR", "chain", "NUMBER", "pem", "for", "the", "intermediary", "certifcate", "which", "the", "server", "needs", "to", "send", "too", "fullchain", "NUMBER", "pem", "for", "the", "concatenation", "of", "the", "above", "two", "privkey", "NUMBER", "pem", "for", "the", "file", "containing", "the", "private", "key", "Please", "make", "the", "names", "of", "these", "links", "configurable", "NUMBER", "It", "would", "help", "with", "integration", "where", "not", "all", "certificates", "be", "managed", "by", "dehydrated", "NUMBER", "Usecase", "Per", "service", "domains", "NUMBER", "txt", "NUMBER", "For", "instance", "ejabberd", "and", "nginx", "need", "certificates", "for", "the", "same", "domain", "but", "with", "different", "parameters", "NUMBER", "See", "systemd", "usage", "NUMBER", "md", "how", "the", "D", "parameter", "helps", "streamlining", "dehydrated", "usage", "NUMBER", "Hello", "all", "I", "want", "to", "know", "if", "you", "have", "any", "experience", "with", "implement", "let", "s", "encrypt", "for", "servers", "behind", "an", "F", "NUMBER", "BIG", "IP", "Load", "Balancer", "NUMBER", "I", "have", "read", "the", "article", "below", "LINK", "for", "internal", "servers", "and", "servers", "behind", "load", "balancers", "NUMBER", "In", "addition", "I", "find", "out", "that", "there", "be", "an", "script", "in", "the", "F", "NUMBER", "forum", "with", "several", "file", "and", "rules", "to", "configure", "to", "achieve", "the", "automation", "NUMBER", "This", "be", "the", "forum", "article", "LINK", "encrypt", "on", "a", "big", "ip", "lc", "NUMBER", "LINK", "_s_encrypt_", "_how_to_issue_certificates_from_a_bigip", "I", "read", "all", "the", "article", "took", "a", "high", "level", "overview", "at", "the", "code", "and", "I", "have", "some", "question", "NUMBER", "All", "this", "points", "to", "the", "work", "do", "by", "lukas", "NUMBER", "Thanks", "lukas", "NUMBER", "My", "goal", "be", "to", "clearly", "understand", "step", "by", "step", "the", "way", "to", "implement", "this", "NUMBER", "Based", "on", "the", "article", "from", "wiki", "NUMBER", "lnxgeek", "NUMBER", "org", "this", "be", "what", "I", "understand", "NUMBER", "Create", "a", "Data", "group", "to", "contain", "the", "challenge", "response", "values", "with", "the", "following", "command", "tmsh", "create", "ltm", "data", "group", "internal", "acme_responses", "type", "string", "NUMBER", "Where", "should", "I", "execute", "this", "Any", "pre", "requisites", "to", "execute", "it", "I", "m", "not", "keen", "on", "F", "NUMBER", "I", "would", "appreciate", "some", "details", "on", "this", "NUMBER", "NUMBER", "Create", "an", "iRule", "NUMBER", "Where", "should", "I", "create", "the", "iRule", "within", "F", "NUMBER", "console", "NUMBER", "Client", "SSL", "Profiles", "NUMBER", "How", "this", "works", "Should", "I", "create", "any", "object", "for", "this", "NUMBER", "Fill", "the", "domains", "NUMBER", "txt", "file", "with", "the", "domains", "you", "want", "to", "retrieve", "a", "certificate", "renew", "NUMBER", "If", "I", "need", "to", "create", "a", "brand", "new", "certificate", "for", "a", "farm", "of", "webservers", "I", "just", "add", "a", "brand", "new", "line", "to", "this", "domains", "NUMBER", "txt", "file", "like", "mainDomain", "san", "NUMBER", "san", "NUMBER", "one", "per", "line", "and", "that", "s", "all", "NUMBER", "How", "the", "renewal", "works", "here", "I", "check", "that", "in", "the", "config", "file", "you", "can", "put", "the", "amount", "of", "days", "to", "renew", "NUMBER", "NUMBER", "Customize", "your", "script", "with", "the", "config", "file", "NUMBER", "Where", "should", "I", "put", "all", "these", "file", "wrapper", "NUMBER", "sh", "letsencrypt", "NUMBER", "sh", "hook", "NUMBER", "sh", "config", "Inside", "any", "folder", "within", "F", "NUMBER", "NUMBER", "Execute", "the", "wrapper", "NUMBER", "sh", "or", "directly", "the", "letsencrypt", "NUMBER", "sh", "with", "c", "parameter", "NUMBER", "How", "the", "flow", "works", "F", "NUMBER", "be", "passing", "the", "challenge", "to", "one", "specific", "web", "server", "to", "do", "the", "challenge", "response", "or", "F", "NUMBER", "itself", "be", "the", "one", "that", "carry", "this", "out", "NUMBER", "Does", "this", "script", "distribute", "the", "new", "certificate", "request", "or", "renew", "to", "all", "the", "web", "servers", "in", "my", "farm", "NUMBER", "It", "has", "any", "support", "to", "automatically", "configure", "IIS", "Apache", "or", "other", "webservers", "or", "it", "only", "gets", "the", "certificate", "and", "be", "up", "to", "the", "administrator", "to", "configure", "the", "certificate", "on", "each", "web", "server", "NUMBER", "Has", "this", "script", "any", "limitations", "in", "terms", "of", "webserver", "s", "platforms", "or", "be", "independent", "Thanks", "in", "advance", "In", "reference", "to", "NUMBER", "After", "each", "request", "challenges", "be", "stored", "in", "a", "local", "file", "NUMBER", "In", "the", "case", "of", "failure", "the", "challenges", "be", "read", "from", "the", "file", "in", "the", "subsequent", "run", "NUMBER", "Challenges", "for", "each", "alternate", "name", "be", "fetched", "and", "then", "challenges", "be", "deployed", "NUMBER", "Due", "to", "some", "network", "error", "the", "script", "exits", "and", "the", "challenge", "tokens", "be", "lost", "NUMBER", "This", "leads", "to", "exceeding", "the", "rate", "limit", "NUMBER", "Please", "consider", "to", "merge", "this", "functionality", "from", "my", "fork", "NUMBER", "Thanks", "NUMBER", "Add", "a", "method", "to", "pass", "the", "subject", "alt", "names", "to", "the", "hook", "script", "so", "the", "hook", "script", "and", "process", "these", "NUMBER", "Ideal", "for", "use", "with", "add", "TLSA", "dns", "records", "after", "certificate", "signing", "NUMBER", "I", "would", "also", "like", "to", "create", "symlinks", "for", "all", "alternative", "names", "NUMBER", "I", "assume", "the", "request", "from", "this", "issue", "be", "required", "for", "that", "Thanks", "if", "dehydrated", "be", "in", "dehyrdrated", "with", "no", "config", "file", "use", "args", "only", "it", "fail", "as", "it", "strips", "from", "BASEDIR", "leaving", "it", "as", "an", "empty", "string", "NUMBER", "Use", "this", "diff", "to", "allow", "signing", "of", "work", "xmpp", "s", "NUMBER", "s", "certs", "NUMBER", "others", "NUMBER", "diff", "NUMBER", "txt", "LINK", "you", "need", "something", "like", "this", "for", "correct", "s", "NUMBER", "s", "support", "subjectAltName", "subject_alternative_name", "subject_alternative_name", "DNS", "NUMBER", "TAG", "DNS", "NUMBER", "conference", "NUMBER", "TAG", "DNS", "NUMBER", "proxy", "NUMBER", "TAG", "otherName", "NUMBER", "NUMBER", "IA", "NUMBER", "STRING", "_xmpp", "client", "NUMBER", "TAG", "otherName", "NUMBER", "NUMBER", "IA", "NUMBER", "STRING", "_xmpp", "server", "NUMBER", "TAG", "otherName", "NUMBER", "NUMBER", "FORMAT", "UTF", "NUMBER", "UTF", "NUMBER", "TAG", "otherName", "NUMBER", "NUMBER", "FORMAT", "UTF", "NUMBER", "UTF", "NUMBER", "conference", "NUMBER", "TAG", "otherName", "NUMBER", "NUMBER", "FORMAT", "UTF", "NUMBER", "UTF", "NUMBER", "proxy", "NUMBER", "TAG", "Seems", "like", "it", "be", "support", "NUMBER", "I", "make", "my", "xmpp", "certs", "with", "this", "othername", "directive", "and", "sign", "them", "with", "the", "pathed", "version", "NUMBER", "I", "never", "have", "problem", "NUMBER", "If", "I", "make", "a", "cert", "without", "it", "I", "get", "s", "NUMBER", "s", "error", "from", "the", "server", "NUMBER", "Need", "to", "dig", "into", "the", "oneliner", "for", "parsing", "domains", "NUMBER", "txt", "but", "I", "d", "like", "to", "add", "a", "way", "to", "set", "per", "domain", "specific", "configuration", "bundled", "as", "part", "of", "the", "same", "source", "instead", "of", "having", "it", "stored", "with", "the", "certificates", "NUMBER", "This", "way", "things", "like", "NUMBER", "would", "be", "very", "powerful", "one", "can", "read", "it", "from", "a", "database", "or", "whatever", "source", "NUMBER", "The", "idea", "be", "to", "do", "something", "in", "style", "with", "bash", "env", "variables", "txt", "CHALLENGETYPE", "dns", "NUMBER", "foo", "NUMBER", "com", "bar", "NUMBER", "foo", "NUMBER", "com", "bar", "NUMBER", "com", "foo", "NUMBER", "bar", "NUMBER", "com", "NUMBER", "Thoughts", "Thanks", "for", "your", "quick", "reply", "NUMBER", "I", "agree", "with", "all", "you", "said", "and", "be", "personally", "fighting", "with", "argument", "against", "why", "two", "different", "configs", "isn", "t", "a", "better", "solution", "NUMBER", "I", "guess", "a", "major", "version", "bump", "could", "introduce", "a", "new", "config", "format", "make", "things", "like", "this", "easier", "NUMBER", "Going", "to", "close", "this", "NUMBER", "Splitting", "domains", "up", "in", "your", "cronjob", "be", "clearly", "a", "better", "approach", "NUMBER", "I", "add", "support", "for", "a", "new", "config", "option", "HOOK_DOMAINS", "defaults", "to", "no", "which", "allows", "to", "get", "the", "domains", "list", "from", "the", "hook", "instead", "of", "domains", "NUMBER", "txt", "NUMBER", "I", "update", "all", "the", "documentation", "I", "could", "find", "to", "mention", "this", "new", "option", "and", "the", "corresponding", "new", "hook", "command", "NUMBER", "My", "use", "case", "be", "run", "dehydrated", "on", "a", "server", "that", "be", "run", "a", "name", "server", "NSD", "in", "my", "case", "so", "I", "already", "have", "a", "list", "of", "domains", "and", "host", "names", "in", "the", "zone", "file", "for", "the", "server", "and", "I", "don", "t", "want", "the", "burden", "of", "maintaining", "the", "two", "separate", "file", "NUMBER", "I", "can", "publish", "the", "NUMBER", "line", "script", "I", "write", "that", "parses", "the", "zone", "file", "and", "outputs", "in", "a", "domains", "NUMBER", "txt", "like", "format", "if", "you", "can", "provide", "me", "with", "a", "location", "or", "file", "where", "that", "would", "be", "fitting", "NUMBER", "Nice", "It", "makes", "it", "even", "more", "obvious", "that", "passing", "options", "per", "certificate", "domain", "other", "than", "in", "certificate", "output_dir", "should", "be", "a", "thing", "Perhaps", "expand", "each", "line", "in", "domains", "NUMBER", "txt", "env", "style", "CONFIG_FOO", "bar", "domain", "NUMBER", "com", "www", "NUMBER", "domain", "NUMBER", "com", "I", "finished", "my", "DNS", "zone", "file", "hook", "NUMBER", "If", "you", "re", "interested", "in", "seeing", "how", "it", "integrates", "and", "needs", "this", "pull", "request", "you", "can", "find", "it", "at", "LINK", "zonefiles", "hook", "NUMBER", "lukas", "NUMBER", "thanks", "for", "your", "feedback", "NUMBER", "raffaellod", "we", "should", "probably", "extend", "the", "wiki", "with", "best", "practices", "NUMBER", "lukas", "NUMBER", "I", "did", "think", "of", "the", "option", "you", "suggest", "after", "I", "was", "finished", "and", "I", "could", "see", "what", "my", "work", "amounted", "to", "split", "between", "this", "PR", "and", "the", "separate", "hook", "project", "NUMBER", "I", "chose", "to", "submit", "the", "pull", "request", "anyway", "because", "my", "solution", "doesn", "t", "involve", "temporary", "file", "and", "it", "has", "arguably", "a", "more", "build", "in", "appeal", "to", "it", "NUMBER", "These", "be", "really", "the", "only", "things", "this", "PR", "would", "improve", "over", "what", "you", "suggest", "as", "alternative", "NUMBER", "Obviously", "this", "be", "not", "a", "really", "good", "reason", "so", "I", "understand", "your", "decision", "NUMBER", "I", "think", "I", "ll", "submit", "a", "separate", "PR", "to", "avoid", "the", "temporary", "creation", "of", "domains", "NUMBER", "txt", "within", "dehydrated", "anyway", "since", "that", "s", "IMO", "a", "nice", "side", "effect", "of", "what", "I", "write", "NUMBER", "It", "will", "make", "dehydrated", "shrink", "by", "a", "few", "lines", "overall", "I", "think", "that", "s", "desirable", "NUMBER", "If", "you", "think", "otherwise", "please", "let", "me", "know", "anytime", "so", "I", "won", "t", "bother", "NUMBER", "jbergstroem", "I", "d", "be", "happy", "to", "update", "the", "wiki", "and", "if", "possible", "add", "a", "reference", "to", "the", "hook", "script", "I", "write", "after", "I", "ll", "give", "it", "a", "README", "which", "I", "was", "waiting", "the", "end", "of", "this", "PR", "to", "write", "since", "its", "usage", "change", "without", "this", "PR", "obviously", "NUMBER", "The", "walk_chain", "request", "certificates", "from", "remote", "server", "each", "time", "NUMBER", "It", "can", "use", "local", "certificate", "copy", "instead", "NUMBER", "Algo", "NUMBER", "Get", "certificate", "issuer", "hash", "ISSUER_HASH", "OPENSSL", "x", "NUMBER", "in", "CERT", "noout", "issuer_hash", "NUMBER", "Check", "if", "we", "already", "have", "its", "local", "copy", "in", "cache", "NUMBER", "If", "have", "use", "it", "if", "no", "download", "and", "store", "to", "cache", "filename", "be", "formed", "as", "ISSUER_HASH", "NUMBER", "crt", "NUMBER", "The", "similar", "be", "implement", "in", "LINK", "_ssl_cert", "commit", "cf", "NUMBER", "d", "NUMBER", "b", "NUMBER", "dc", "NUMBER", "c", "NUMBER", "aae", "NUMBER", "d", "NUMBER", "efdc", "NUMBER", "d", "NUMBER", "a", "NUMBER", "Although", "that", "be", "much", "more", "important", "there", "in", "monitoring", "it", "request", "much", "more", "often", "than", "in", "renewal", "process", "NUMBER", "What", "do", "you", "think", "about", "this", "feature", "Thanks", "for", "your", "tool", "NUMBER", "NUMBER", "dehydrated", "grep", "version", "version", "v", "Show", "version", "NUMBER", "dehydrated", "version", "dehydrated", "NUMBER", "NUMBER", "dehydrated", "v", "dehydrated", "NUMBER", "We", "could", "leave", "the", "VERSION", "variable", "empty", "in", "master", "NUMBER", "In", "command_version", "we", "could", "check", "for", "that", "and", "do", "a", "git", "rev", "parse", "short", "HEAD", "if", "no", "version", "be", "specified", "NUMBER", "When", "doing", "a", "release", "the", "VERSION", "variable", "has", "to", "be", "filled", "though", "NUMBER", "I", "miss", "this", "too", "NUMBER", "My", "take", "would", "be", "to", "bite", "the", "bullet", "and", "add", "VERSION", "NUMBER", "to", "dehydrated", "NUMBER", "Could", "be", "commit", "as", "part", "of", "your", "changelog", "update", "NUMBER", "Edit", "NUMBER", "and", "as", "muffl", "NUMBER", "n", "suggested", "do", "VERSION", "git", "or", "similar", "that", "triggers", "a", "git", "command", "NUMBER", "In", "general", "perhaps", "decouple", "release", "artifacts", "aka", "make", "dist", "from", "be", "a", "mirror", "of", "the", "git", "repo", "NUMBER", "That", "way", "it", "would", "be", "much", "simpler", "to", "just", "pin", "git", "version", "in", "there", "NUMBER", "This", "behavior", "was", "tripping", "me", "up", "and", "forced", "me", "to", "work", "around", "it", "any", "reason", "not", "to", "accept", "this", "change", "Thanks", "After", "upgrade", "to", "new", "release", "with", "new", "hooks", "it", "be", "required", "to", "edit", "your", "hook", "NUMBER", "sh", "manually", "and", "insert", "those", "new", "empty", "hook", "function", "NUMBER", "Without", "this", "everything", "be", "broken", "NUMBER", "dehydrated", "c", "INFO", "Using", "main", "config", "file", "var", "lib", "le", "config", "Processing", "x", "NUMBER", "org", "with", "alternative", "names", "y", "NUMBER", "org", "z", "NUMBER", "org", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Longer", "than", "NUMBER", "days", "NUMBER", "Skipping", "renew", "var", "lib", "le", "hook", "NUMBER", "sh", "NUMBER", "var", "lib", "le", "hook", "NUMBER", "sh", "exit_hook", "not", "find", "Is", "it", "possible", "to", "modify", "behavior", "of", "hook", "handle", "so", "that", "if", "a", "hook", "function", "be", "not", "defined", "then", "ignore", "it", "Thanks", "for", "looking", "into", "this", "but", "your", "commit", "e", "NUMBER", "complicates", "it", "even", "more", "to", "sync", "between", "old", "and", "new", "hook", "NUMBER", "sh", "a", "pattern", "list", "must", "be", "inserted", "update", "too", "NUMBER", "Isn", "t", "it", "be", "better", "to", "let", "user", "only", "edit", "his", "scripts", "and", "not", "play", "with", "hook", "NUMBER", "sh", "E", "NUMBER", "g", "NUMBER", "by", "expecting", "user", "scripts", "in", "folders", "like", "NUMBER", "hook", "hook_function_name", "NUMBER", "d", "and", "run", "them", "via", "run", "parts", "with", "exporting", "required", "variables", "If", "I", "m", "reading", "this", "correctly", "I", "believe", "commit", "NUMBER", "a", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "cd", "NUMBER", "de", "NUMBER", "d", "NUMBER", "be", "NUMBER", "cf", "NUMBER", "now", "creates", "chain", "NUMBER", "pem", "as", "intermediate", "root", "and", "fullchain", "NUMBER", "pem", "as", "cert", "intermediate", "root", "If", "that", "s", "correct", "then", "I", "would", "like", "to", "request", "that", "the", "intermediate", "certificate", "be", "output", "separately", "NUMBER", "When", "I", "upload", "chained", "certificate", "file", "I", "need", "the", "intermediate", "certificate", "far", "more", "often", "than", "I", "need", "the", "root", "certificate", "NUMBER", "Some", "tool", "such", "as", "the", "Qualys", "SSL", "server", "test", "LINK", "throw", "a", "warning", "about", "configuration", "when", "the", "root", "certificate", "be", "include", "in", "the", "bundle", "since", "the", "expectation", "be", "that", "the", "trusting", "party", "should", "have", "the", "root", "already", "in", "their", "trust", "store", "NUMBER", "For", "similar", "reasons", "I", "have", "often", "needed", "to", "upload", "the", "LE", "intermediate", "certificate", "as", "a", "separate", "file", "for", "applications", "which", "don", "t", "support", "chained", "certificates", "but", "I", "ve", "never", "had", "to", "upload", "the", "root", "NUMBER", "Having", "the", "intermediate", "certificate", "available", "would", "allow", "me", "to", "do", "a", "partial", "chain", "of", "cert", "intermediate", "or", "access", "the", "intermediate", "separately", "as", "needed", "NUMBER", "This", "was", "the", "previous", "behavior", "of", "the", "fullchain", "and", "chain", "file", "NUMBER", "I", "can", "replicate", "the", "partial", "chain", "easily", "enough", "through", "hooks", "or", "other", "scripts", "as", "long", "as", "the", "intermediate", "be", "available", "in", "some", "form", "NUMBER", "I", "agree", "that", "the", "new", "walk", "function", "be", "a", "useful", "addition", "NUMBER", "And", "if", "LE", "ever", "reorganized", "such", "that", "there", "were", "multiple", "intermediate", "certs", "to", "include", "then", "it", "would", "change", "the", "parsing", "needs", "dramatically", "NUMBER", "There", "s", "already", "a", "test", "for", "issuer_cert_uri", "and", "a", "null", "result", "indicates", "we", "re", "do", "parsing", "the", "chain", "NUMBER", "So", "if", "we", "receive", "a", "null", "result", "for", "issuer_cert_uri", "we", "can", "write", "out", "the", "current", "certificate", "as", "root", "NUMBER", "pem", "NUMBER", "As", "we", "return", "from", "our", "recursion", "we", "could", "write", "out", "the", "successive", "certs", "as", "intermediate", "NUMBER", "pem", "intermediate", "NUMBER", "pem", "etc", "NUMBER", "Once", "we", "returned", "from", "the", "walk", "we", "d", "have", "the", "whole", "chain", "as", "root", "intermediate", "NUMBER", "NUMBER", "intermediateX", "issue", "cert", "NUMBER", "Though", "of", "course", "the", "fullchain", "file", "itself", "would", "go", "in", "reverse", "order", "The", "fullchain", "file", "can", "still", "point", "to", "the", "whole", "bundle", "root", "include", "NUMBER", "But", "that", "way", "we", "have", "the", "intermediates", "available", "separately", "and", "the", "root", "too", "for", "whatever", "needs", "we", "may", "have", "NUMBER", "and", "it", "should", "be", "future", "proof", "in", "case", "of", "CA", "structure", "change", "NUMBER", "I", "m", "totally", "cool", "with", "extending", "my", "own", "scripts", "to", "create", "my", "own", "certificate", "chain", "file", "out", "of", "the", "various", "bits", "and", "pieces", "NUMBER", "So", "basically", "when", "they", "set", "new", "license", "URL", "in", "some", "monthes", "what", "be", "steps", "to", "update", "automate", "setups", "Manually", "update", "LICENSE", "in", "config", "Or", "nothing", "be", "required", "Until", "now", "License", "only", "seems", "to", "be", "verify", "on", "registration", "not", "entirely", "sure", "if", "there", "be", "some", "kind", "of", "account", "update", "for", "future", "license", "change", "The", "agreement", "URL", "be", "only", "enforced", "at", "the", "time", "of", "registration", "account", "creation", "NUMBER", "The", "word", "of", "the", "terms", "of", "service", "be", "such", "that", "exist", "accounts", "be", "automatically", "agreed", "to", "future", "update", "without", "needing", "to", "do", "any", "kind", "of", "account", "update", "for", "the", "new", "ToS", "if", "it", "change", "NUMBER", "Would", "it", "be", "possible", "for", "you", "to", "provide", "signatures", "for", "the", "release", "so", "one", "be", "able", "to", "ensure", "the", "pull", "in", "code", "for", "example", "into", "Debian", "wasn", "t", "tampered", "with", "along", "the", "way", "Here", "LINK", "NUMBER", "sign", "NUMBER", "GitHub", "NUMBER", "release", "be", "a", "small", "guide", "how", "to", "do", "this", "NUMBER", "Thanks", "Thanks", "that", "s", "great", "To", "make", "it", "easier", "to", "remember", "this", "if", "case", "you", "re", "use", "some", "sort", "of", "a", "script", "to", "do", "the", "release", "maybe", "it", "would", "be", "good", "to", "incorporate", "this", "inside", "there", "NUMBER", "Ah", "yeah", "I", "see", "NUMBER", "Not", "sure", "how", "this", "could", "work", "with", "the", "automatic", "release", "provide", "by", "GitHub", "NUMBER", "Maybe", "something", "like", "this", "LINK", "release", "could", "be", "of", "any", "help", "NUMBER", "I", "use", "dehydrated", "from", "git", "checkout", "and", "run", "into", "the", "issue", "that", "v", "NUMBER", "checkout", "do", "not", "work", "for", "alternate", "names", "with", "dns", "authentication", "like", "example", "NUMBER", "org", "www", "NUMBER", "example", "NUMBER", "org", "So", "I", "currently", "have", "to", "checkout", "use", "master", "to", "get", "it", "work", "the", "issue", "was", "fix", "after", "v", "NUMBER", "NUMBER", "As", "dehydrated", "installation", "be", "automate", "via", "ansible", "I", "had", "to", "pin", "the", "current", "commit", "hash", "to", "have", "it", "reproducable", "which", "be", "a", "bit", "unpretty", "NUMBER", "I", "also", "imagine", "a", "lot", "of", "people", "just", "installing", "via", "pip", "run", "into", "this", "issue", "and", "not", "everybody", "wants", "to", "use", "the", "git", "version", "so", "a", "new", "release", "would", "be", "nice", "NUMBER", "No", "I", "didn", "t", "bisect", "it", "NUMBER", "I", "just", "couldn", "t", "get", "it", "work", "with", "NUMBER", "then", "upgrade", "to", "tip", "then", "it", "worked", "NUMBER", "Just", "guessing", "maybe", "that", "one", "LINK", "o", "dehydrated", "NUMBER", "NUMBER", "from", "Debian", "Sid", "on", "Debian", "Jessie", "NUMBER", "dehydrated", "forgets", "to", "add", "slash", "between", "hostname", "and", "NUMBER", "well", "know", "in", "fifth", "domain", "name", "in", "first", "line", "of", "domains", "NUMBER", "txt", "which", "contains", "a", "sign", "NUMBER", "It", "gets", "it", "correct", "for", "port", "NUMBER", "but", "not", "for", "port", "NUMBER", "I", "be", "not", "sure", "what", "of", "this", "triggers", "the", "issue", "NUMBER", "certbot", "can", "get", "certs", "for", "all", "domains", "without", "issue", "NUMBER", "TLD", "replaced", "NUMBER", "Will", "use", "certbot", "now", "maybe", "string", "handle", "in", "Bash", "just", "isn", "t", "such", "a", "good", "idea", "NUMBER", "cat", "etc", "dehydrated", "domains", "NUMBER", "txt", "example", "NUMBER", "de", "www", "NUMBER", "example", "NUMBER", "de", "mail", "NUMBER", "example", "NUMBER", "de", "martin", "NUMBER", "example", "NUMBER", "de", "martin", "alt", "NUMBER", "example", "NUMBER", "de", "some", "more", "domains", "example", "NUMBER", "de", "www", "NUMBER", "example", "NUMBER", "de", "example", "NUMBER", "de", "www", "NUMBER", "example", "NUMBER", "de", "Error", "output", "Responding", "to", "challenge", "for", "martin", "alt", "NUMBER", "example", "NUMBER", "de", "NUMBER", "ERROR", "Challenge", "be", "invalid", "returned", "invalid", "result", "type", "http", "NUMBER", "status", "invalid", "error", "type", "urn", "acme", "error", "connection", "detail", "Could", "not", "connect", "to", "martin", "alt", "NUMBER", "example", "NUMBER", "de", "NUMBER", "well", "know", "status", "NUMBER", "uri", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "N", "NUMBER", "ZBMW", "W", "NUMBER", "zY", "NUMBER", "JarjmY", "NUMBER", "bETgmacQEt", "NeY", "NUMBER", "KQBb", "mNU", "NUMBER", "token", "dgGNQ", "NUMBER", "VAKOcqwytPbAcC", "NUMBER", "BKCa", "p", "NUMBER", "X_", "NUMBER", "fUXr", "NUMBER", "koPwM", "NUMBER", "keyAuthorization", "dgGNQ", "NUMBER", "VAKOcqwytPbAcC", "NUMBER", "BKCa", "p", "NUMBER", "X_", "NUMBER", "fUXr", "NUMBER", "koPwM", "NUMBER", "kDORmaAUEf", "NUMBER", "wIyVtGEZv", "NUMBER", "smbfcz", "NUMBER", "px", "NUMBER", "LiYs", "NUMBER", "UGymXk", "validationRecord", "url", "LINK", "alt", "NUMBER", "example", "NUMBER", "de", "NUMBER", "well", "know", "acme", "challenge", "dgGNQ", "NUMBER", "VAKOcqwytPbAcC", "NUMBER", "BKCa", "p", "NUMBER", "X_", "NUMBER", "fUXr", "NUMBER", "koPwM", "NUMBER", "hostname", "martin", "alt", "NUMBER", "example", "NUMBER", "de", "port", "NUMBER", "addressesResolved", "IPv", "NUMBER", "address", "IPV", "NUMBER", "address", "addressUsed", "IPv", "NUMBER", "address", "url", "LINK", "alt", "NUMBER", "example", "NUMBER", "de", "NUMBER", "well", "know", "acme", "challenge", "dgGNQ", "NUMBER", "VAKOcqwytPbAcC", "NUMBER", "BKCa", "p", "NUMBER", "X_", "NUMBER", "fUXr", "NUMBER", "koPwM", "NUMBER", "hostname", "martin", "alt", "NUMBER", "example", "NUMBER", "de", "NUMBER", "well", "know", "port", "NUMBER", "addressesResolved", "null", "addressUsed", "Thanks", "Lukas", "that", "worked", "NUMBER", "It", "was", "a", "combination", "of", "miss", "slash", "in", "RedirectPermanent", "as", "well", "as", "for", "one", "domain", "another", "wrong", "rewrite", "rule", "that", "was", "hidden", "well", "by", "HSTP", "NUMBER", "I", "wonder", "why", "certbot", "didn", "t", "fail", "on", "this", "one", "tough", "NUMBER", "Maybe", "it", "use", "the", "HSTP", "redirect", "NUMBER", "Hallo", "there", "be", "file", "required", "for", "build", "basic", "debian", "package", "for", "dehydrated", "Thank", "for", "your", "work", "Vitexus", "According", "to", "cron", "file", "it", "be", "executed", "under", "root", "Unprivileged", "user", "should", "be", "use", "instead", "I", "believe", "NUMBER", "Vitexus", "var", "www", "letsencrypt", "should", "be", "change", "to", "var", "lib", "letsencrypt", "because", "it", "may", "interfere", "with", "user", "s", "other", "file", "in", "var", "www", "Why", "not", "use", "the", "packaging", "which", "be", "already", "available", "in", "the", "Debian", "repos", "LINK", "letsencrypt", "NUMBER", "sh", "Sorry", "man", "my", "mistake", "In", "my", "config", "file", "I", "set", "OCSP_MUST_STAPLE", "yes", "NUMBER", "I", "m", "already", "juggling", "with", "a", "multiple", "config", "file", "for", "different", "use", "cases", "i", "NUMBER", "e", "NUMBER", "to", "create", "RSA", "and", "EC", "keys", "in", "different", "cert", "directories", "NUMBER", "But", "now", "a", "subset", "of", "my", "hosts", "can", "t", "have", "OCSP_MUST_STAPLE", "NUMBER", "Either", "the", "server", "software", "do", "not", "support", "it", "e", "NUMBER", "g", "NUMBER", "mail", "servers", "or", "there", "be", "other", "hosts", "outside", "of", "my", "control", "which", "wont", "support", "it", "NUMBER", "If", "add", "in", "a", "configuration", "file", "the", "number", "of", "config", "file", "and", "cron", "tasks", "needed", "grows", "exponentially", "NUMBER", "If", "I", "could", "leave", "it", "on", "by", "default", "in", "my", "configs", "but", "set", "it", "off", "for", "a", "small", "subset", "of", "hosts", "by", "command", "line", "would", "be", "a", "great", "NUMBER", "Thank", "you", "for", "your", "consideration", "and", "your", "awesome", "script", "NUMBER", "Have", "a", "nice", "day", "NUMBER", "lukas", "NUMBER", "Given", "that", "the", "request", "was", "for", "a", "command", "line", "flag", "to", "unset", "the", "MUST_STAPLE", "option", "and", "given", "that", "there", "s", "already", "a", "flag", "which", "essentially", "sets", "MUST_STAPLE", "at", "execution", "time", "would", "it", "not", "be", "feasible", "to", "implement", "a", "flag", "to", "unset", "at", "execution", "time", "Read", "and", "process", "the", "config", "file", "then", "process", "script", "argument", "to", "set", "unset", "the", "needed", "option", "abort", "with", "error", "if", "both", "ocsp", "and", "no", "ocsp", "be", "given", "as", "argument", "NUMBER", "If", "I", "better", "understood", "how", "to", "properly", "fork", "a", "branch", "and", "submit", "a", "PR", "I", "d", "do", "that", "NUMBER", "When", "i", "try", "to", "sign", "my", "cert", "i", "get", "following", "error", "NUMBER", "Anyone", "had", "the", "same", "problem", "INFO", "Using", "main", "config", "file", "opt", "certificate", "dehydrated", "config", "Processing", "hackernet", "NUMBER", "se", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "Jan", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Less", "than", "NUMBER", "days", "NUMBER", "Renewing", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "hackernet", "NUMBER", "se", "NUMBER", "ERROR", "Error", "when", "trying", "to", "get", "nonce", "Added", "SERVERROOT", "which", "be", "common", "terminology", "to", "help", "web", "developers", "quickly", "identify", "the", "intended", "value", "of", "SERVERROOT", "and", "consequently", "the", "value", "of", "WELLKNOWN", "NUMBER", "Not", "so", "Lukas", "NUMBER", "These", "change", "NUMBER", "bridge", "a", "miss", "gap", "in", "the", "documentation", "for", "users", "that", "be", "not", "operate", "complex", "systems", "NUMBER", "fix", "some", "disjointed", "topics", "and", "ambiguous", "language", "and", "grammar", "and", "NUMBER", "update", "a", "description", "of", "WELLKNOWN", "per", "change", "in", "draft", "ACME", "standards", "NUMBER", "These", "change", "do", "not", "adversely", "affect", "any", "complex", "practice", "of", "WELLKNOWN", "in", "any", "way", "NUMBER", "SERVERROOT", "can", "be", "ignored", "for", "any", "that", "don", "t", "expect", "it", "NUMBER", "You", "be", "free", "to", "ignore", "this", "pull", "request", "or", "incorporate", "some", "or", "all", "of", "the", "change", "under", "your", "own", "authorship", "NUMBER", "best", "wishes", "Ben", "challenge", "tokens", "be", "created", "in", "WELLKNOWN", "dir", "instead", "of", "WELLKNOWN", "NUMBER", "well", "know", "acme", "challenge", "for", "bash", "under", "freeBSD", "NUMBER", "See", "NUMBER", "After", "commenting", "out", "line", "NUMBER", "CHALLENGETYPE", "http", "NUMBER", "rm", "f", "WELLKNOWN", "challenge_token", "The", "file", "be", "find", "in", "WELLKNOWN", "dir", "NUMBER", "I", "call", "it", "a", "documentation", "bug", "NUMBER", "Poorly", "explained", "NUMBER", "Okay", "NUMBER", "Will", "do", "NUMBER", "The", "acme", "standard", "requires", "the", "file", "to", "be", "served", "from", "NUMBER", "well", "know", "acme", "challenge", "The", "path", "at", "which", "the", "resource", "be", "provisioned", "be", "comprised", "of", "the", "fix", "prefix", "NUMBER", "well", "know", "acme", "challenge", "followed", "by", "the", "token", "value", "in", "the", "challenge", "NUMBER", "The", "value", "of", "the", "resource", "MUST", "be", "the", "ASCII", "representation", "of", "the", "key", "authorization", "NUMBER", "NUMBER", "well", "know", "acme", "challenge", "evaGxfADs", "NUMBER", "pSRb", "NUMBER", "LAv", "NUMBER", "IZf", "NUMBER", "Dt", "NUMBER", "juxGJ", "PCt", "NUMBER", "wr", "oA", "from", "LINK", "wg", "acme", "acme", "blob", "master", "draft", "ietf", "acme", "acme", "NUMBER", "md", "url", "So", "WELLKNOWN", "needs", "to", "include", "this", "fix", "value", "at", "the", "end", "NUMBER", "The", "pull", "request", "will", "reflect", "this", "description", "NUMBER", "cheer", "Ben", "What", "might", "be", "cause", "this", "error", "The", "diagnostics", "test", "provide", "in", "docs", "troubleshooting", "NUMBER", "md", "pass", "NUMBER", "See", "below", "NUMBER", "The", "config", "file", "be", "use", "staging", "CA", "per", "staging", "NUMBER", "md", "Here", "be", "complete", "history", "of", "latest", "attempt", "letsencrypt", "or", "NUMBER", "bash", "dehydrated", "dehydrated", "c", "f", "home", "letsencrypt", "config", "INFO", "Using", "main", "config", "file", "home", "letsencrypt", "config", "Processing", "or", "NUMBER", "net", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "or", "NUMBER", "net", "NUMBER", "Responding", "to", "challenge", "for", "or", "NUMBER", "net", "NUMBER", "ERROR", "Challenge", "be", "invalid", "returned", "invalid", "result", "type", "http", "NUMBER", "status", "invalid", "error", "type", "urn", "acme", "error", "unauthorized", "detail", "Invalid", "response", "from", "LINK", "know", "acme", "challenge", "VuYLOVM", "NUMBER", "NO_vVlYmbQYyBJcUVnNhEUhrIPS", "NUMBER", "auZjM", "NUMBER", "NUMBER", "NUMBER", "status", "NUMBER", "uri", "LINK", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "ScDB", "NUMBER", "W", "NUMBER", "f", "NUMBER", "fcLmt_", "NUMBER", "s", "NUMBER", "waNELOY", "NUMBER", "sJ", "NUMBER", "QInzkR", "NUMBER", "nkEeKeI", "NUMBER", "token", "VuYLOVM", "NUMBER", "NO_vVlYmbQYyBJcUVnNhEUhrIPS", "NUMBER", "auZjM", "NUMBER", "keyAuthorization", "VuYLOVM", "NUMBER", "NO_vVlYmbQYyBJcUVnNhEUhrIPS", "NUMBER", "auZjM", "NUMBER", "SjR", "NUMBER", "lX", "NUMBER", "eFmmOyCAllb", "NUMBER", "DCesuKnhj", "NUMBER", "ocuE", "NUMBER", "buM", "NUMBER", "iZIY", "validationRecord", "url", "LINK", "know", "acme", "challenge", "VuYLOVM", "NUMBER", "NO_vVlYmbQYyBJcUVnNhEUhrIPS", "NUMBER", "auZjM", "NUMBER", "hostname", "or", "NUMBER", "net", "port", "NUMBER", "addressesResolved", "NUMBER", "addressUsed", "NUMBER", "I", "created", "a", "replica", "file", "use", "the", "same", "user", "NUMBER", "Here", "s", "the", "results", "telnet", "or", "NUMBER", "net", "NUMBER", "Trying", "NUMBER", "Connected", "to", "or", "NUMBER", "net", "NUMBER", "Escape", "character", "be", "NUMBER", "GET", "NUMBER", "well", "know", "acme", "challenge", "VuYLOVM", "NUMBER", "NO_vVlYmbQYyBJcUVnNhEUhrIPS", "NUMBER", "auZjM", "NUMBER", "HTTP", "NUMBER", "Host", "or", "NUMBER", "net", "HTTP", "NUMBER", "NUMBER", "OK", "Server", "NaviServer", "NUMBER", "Date", "Thu", "NUMBER", "Jan", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Set", "Cookie", "ad_user_login", "Expires", "Fri", "NUMBER", "Jan", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Path", "Set", "Cookie", "ad_secure_token", "Expires", "Fri", "NUMBER", "Jan", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Path", "Secure", "Set", "Cookie", "ad_user_login_secure", "Expires", "Fri", "NUMBER", "Jan", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Path", "Secure", "Set", "Cookie", "ad_session_id", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "b", "NUMBER", "b", "NUMBER", "NUMBER", "b", "NUMBER", "NUMBER", "bD", "NUMBER", "F", "NUMBER", "CFD", "NUMBER", "A", "NUMBER", "A", "NUMBER", "AD", "NUMBER", "F", "NUMBER", "DBAEF", "NUMBER", "E", "NUMBER", "CD", "NUMBER", "BF", "NUMBER", "DDB", "NUMBER", "NUMBER", "d", "Expires", "Fri", "NUMBER", "Jan", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Path", "Discard", "HttpOnly", "Last", "Modified", "Thu", "NUMBER", "Jan", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Content", "Type", "Accept", "Ranges", "bytes", "Content", "Length", "NUMBER", "Connection", "keep", "alive", "success", "Connection", "close", "by", "foreign", "host", "NUMBER", "server", "log", "shows", "a", "slight", "variation", "of", "the", "GET", "url", "from", "letsencrypt", "staging", "server", "than", "the", "one", "test", "via", "telent", "ie", "a", "prefix", "NUMBER", "NUMBER", "Jan", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GET", "NUMBER", "well", "know", "acme", "challenge", "VuYLOVM", "NUMBER", "NO_vVlYmbQYyBJcUVnNhEUhrIPS", "NUMBER", "auZjM", "NUMBER", "HTTP", "NUMBER", "NUMBER", "NUMBER", "Mozilla", "NUMBER", "compatible", "Let", "s", "Encrypt", "validation", "server", "LINK", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "However", "all", "cases", "in", "the", "server", "log", "show", "the", "same", "GET", "url", "and", "there", "doesn", "t", "seem", "to", "be", "a", "different", "in", "the", "data", "returned", "via", "telnet", "on", "a", "retest", "with", "prefix", "You", "ll", "notice", "the", "server", "log", "shows", "NUMBER", "for", "this", "case", "but", "the", "log", "shows", "the", "server", "returns", "NUMBER", "for", "the", "test", "cases", "NUMBER", "Is", "it", "possible", "this", "be", "a", "timing", "issue", "between", "dehydrated", "and", "letsencrypt", "Is", "the", "script", "remove", "the", "file", "before", "it", "s", "checked", "or", "be", "it", "possible", "the", "file", "be", "created", "and", "remove", "after", "its", "checked", "You", "write", "WELLKNOWN", "should", "point", "directly", "to", "the", "directory", "you", "be", "serving", "under", "NUMBER", "well", "know", "acme", "challenge", "NUMBER", "To", "be", "clear", "I", "ve", "tried", "point", "WELLKNOWN", "at", "different", "directories", "in", "the", "server", "s", "delivery", "tree", "including", "one", "that", "doesn", "t", "send", "cookies", "with", "the", "content", "but", "letsencrypt", "response", "be", "consistently", "a", "NUMBER", "error", "with", "reference", "to", "the", "server", "s", "root", "directory", "NUMBER", "I", "know", "dehydrated", "be", "use", "other", "values", "from", "config", "The", "evidence", "be", "in", "the", "lack", "of", "error", "and", "the", "file", "returned", "in", "specified", "non", "default", "locations", "NUMBER", "Might", "value", "of", "WELLKNOWN", "get", "overwritten", "or", "lost", "somewhere", "Dehydration", "be", "supplied", "only", "NUMBER", "domain", "via", "domains", "NUMBER", "txt", "No", "www", "NUMBER", "or", "NUMBER", "net", "NUMBER", "Has", "this", "case", "be", "test", "btw", "bash", "version", "GNU", "bash", "version", "NUMBER", "NUMBER", "release", "uname", "r", "NUMBER", "STABLE", "This", "seems", "conspicuously", "similar", "to", "issue", "NUMBER", "except", "producing", "a", "silent", "error", "later", "on", "NUMBER", "My", "understanding", "of", "bash", "be", "limited", "but", "be", "investigating", "further", "NUMBER", "Hey", "first", "of", "all", "thanks", "for", "this", "great", "script", "NUMBER", "I", "have", "some", "domains", "on", "CloudFlare", "and", "others", "on", "Route", "NUMBER", "This", "forces", "me", "to", "rotate", "the", "file", "domains", "NUMBER", "txt", "to", "use", "different", "hooks", "NUMBER", "It", "would", "be", "nice", "if", "I", "could", "just", "specify", "as", "a", "parameter", "the", "right", "domains", "NUMBER", "txt", "file", "great", "let", "s", "make", "it", "more", "visible", "in", "the", "client", "help", "I", "just", "get", "through", "LINK", "and", "have", "a", "suggestion", "NUMBER", "I", "agree", "that", "doing", "detailed", "message", "and", "log", "handle", "in", "the", "script", "be", "difficult", "as", "many", "people", "have", "different", "opinions", "and", "needs", "for", "the", "message", "NUMBER", "Would", "it", "be", "possible", "to", "have", "a", "do", "hook", "that", "gets", "call", "with", "the", "exit", "status", "and", "unchanged", "change", "as", "a", "parameter", "Then", "the", "cron", "logging", "would", "work", "as", "follows", "cron", "job", "writes", "a", "logfile", "wherever", "can", "decide", "to", "dev", "null", "it", "tee", "it", "pipe", "it", "to", "a", "log", "whatever", "final", "hook", "gets", "the", "exit", "status", "and", "action", "status", "and", "can", "decide", "to", "mail", "the", "log", "do", "nothing", "or", "whatever", "The", "only", "question", "be", "if", "there", "need", "to", "be", "two", "hooks", "done_domain", "and", "done_dehydrated", "with", "one", "be", "call", "when", "each", "domain", "be", "do", "with", "result", "and", "action", "for", "each", "domain", "and", "the", "other", "with", "the", "success", "fail", "result", "for", "all", "domains", "when", "processing", "multiples", "and", "the", "action", "unchanged", "change", "NUMBER", "This", "seems", "like", "it", "would", "keep", "the", "dehydrated", "script", "simple", "only", "the", "exit", "code", "and", "action", "need", "to", "be", "tracked", "and", "the", "users", "can", "do", "whatever", "they", "need", "in", "the", "hook", "NUMBER", "LINK", "would", "be", "resolve", "by", "this", "as", "well", "NUMBER", "Sometimes", "sysadmins", "don", "t", "want", "to", "use", "_many_", "tool", "for", "one", "task", "and", "prefer", "to", "use", "one", "tool", "NUMBER", "Most", "of", "the", "time", "it", "s", "better", "to", "have", "multiple", "tool", "each", "doing", "one", "job", "really", "good", "instead", "of", "having", "one", "tool", "that", "do", "everything", "okayish", "Nobody", "here", "be", "ask", "about", "please", "create", "nice", "logging", "for", "us", "so", "tool", "would", "show", "its", "output", "only", "when", "problem", "exists", "to", "match", "principle", "no", "news", "be", "good", "news", "NUMBER", "People", "understand", "complexity", "of", "this", "task", "and", "do", "not", "prefer", "okayish", "solution", "NUMBER", "But", "add", "three", "lines", "of", "code", "calling", "done_dehydrated", "hook", "will", "not", "make", "tool", "worse", "NUMBER", "Thanks", "for", "exit_hook", "NUMBER", "I", "m", "use", "it", "this", "way", "hook", "NUMBER", "sh", "bin", "bash", "if", "NUMBER", "deploy_cert", "then", "touch", "BASEDIR", "NUMBER", "service", "nginx", "reload", "fi", "if", "NUMBER", "exit_hook", "then", "if", "r", "BASEDIR", "NUMBER", "service", "nginx", "reload", "then", "rm", "BASEDIR", "NUMBER", "service", "nginx", "reload", "service", "nginx", "reload", "fi", "fi", "I", "don", "t", "want", "nginx", "reload", "for", "each", "certificate", "renewed", "in", "batch", "NUMBER", "Thanks", "again", "NUMBER", "It", "would", "be", "a", "nice", "idea", "that", "if", "the", "hook", "runs", "and", "cert", "gets", "renewed", "that", "the", "old", "certificate", "that", "was", "replaced", "be", "revoked", "NUMBER", "This", "would", "mean", "if", "you", "do", "the", "renewal", "with", "NUMBER", "days", "left", "the", "previously", "active", "cert", "would", "be", "revoked", "once", "replaced", "NUMBER", "I", "guess", "this", "would", "be", "best", "implement", "as", "either", "a", "config", "option", "or", "a", "revoke", "type", "option", "NUMBER", "I", "currently", "use", "my", "own", "certbot", "auto", "certonly", "NUMBER", "process", "scripts", "to", "get", "my", "LE", "certs", "via", "standalone", "webserver", "mode", "NUMBER", "I", "currently", "require", "pass", "argument", "to", "certbot", "auto", "that", "include", "staple", "ocsp", "must", "staple", "redirect", "hsts", "uir", "I", "d", "like", "to", "switch", "to", "dns", "NUMBER", "challenge", "I", "m", "revisiting", "dehydrated", "script", "NUMBER", "In", "its", "options", "I", "find", "only", "ocsp", "Sets", "option", "in", "CSR", "indicating", "OCSP", "stapling", "and", "in", "docs", "per", "certificate", "config", "NUMBER", "md", "Currently", "support", "options", "PRIVATE_KEY_RENEW", "KEY_ALGO", "KEYSIZE", "OCSP_MUST_STAPLE", "CHALLENGETYPE", "HOOK", "HOOK_CHAIN", "WELLKNOWN", "OPENSSL_CNF", "RENEW_DAYS", "NUMBER", "be", "dehydrated", "s", "cmd", "lin", "ocsp", "option", "equivalent", "to", "staple", "ocsp", "must", "staple", "or", "be", "the", "OCSP_MUST_STAPLE", "config", "additionally", "required", "NUMBER", "do", "dehydrated", "support", "any", "of", "redirect", "hsts", "uir", "and", "if", "so", "what", "s", "the", "syntax", "usage", "ocsp", "OCSP_MUST_STAPLE", "be", "the", "dehydrated", "equivalent", "for", "must", "staple", "NUMBER", "Setting", "ocsp", "on", "the", "command", "line", "be", "equivalent", "to", "setting", "OCSP_MUST_STAPLE", "in", "a", "config", "file", "NUMBER", "staple", "ocsp", "redirect", "hsts", "and", "uir", "look", "like", "features", "not", "implement", "by", "dehydrated", "NUMBER", "This", "be", "largely", "because", "dehydrated", "be", "a", "script", "not", "a", "webserver", "NUMBER", "If", "you", "need", "your", "webserver", "to", "implement", "these", "options", "you", "should", "configure", "it", "accordingly", "NUMBER", "That", "would", "be", "outside", "the", "scope", "of", "dehydrated", "itself", "NUMBER", "Dehydrated", "do", "support", "the", "use", "of", "hook", "scripts", "and", "in", "fact", "requires", "them", "for", "handle", "dns", "NUMBER", "challenges", "NUMBER", "If", "you", "needed", "to", "configure", "a", "webserver", "during", "or", "after", "certificate", "renewal", "you", "may", "be", "able", "to", "do", "so", "with", "a", "hook", "script", "NUMBER", "But", "if", "you", "re", "going", "to", "switch", "to", "dns", "NUMBER", "challenges", "I", "don", "t", "think", "you", "d", "need", "the", "other", "flags", "besides", "OCSP_MUST_STAPLE", "NUMBER", "At", "least", "not", "in", "dehydrated", "NUMBER", "According", "to", "LINK", "The", "API", "to", "do", "this", "already", "exists", "on", "the", "boulder", "side", "POSTing", "a", "registration", "object", "with", "a", "change", "contacts", "field", "to", "acme", "reg", "should", "update", "the", "registration", "NUMBER", "It", "would", "be", "nice", "if", "there", "were", "an", "option", "to", "do", "this", "in", "dehydrated", "client", "NUMBER", "Or", "even", "better", "do", "it", "automatically", "if", "the", "address", "in", "the", "config", "doesn", "t", "match", "the", "address", "in", "registration_info", "NUMBER", "json", "It", "would", "be", "very", "helpful", "to", "have", "a", "way", "to", "update", "contact", "info", "from", "dehydrated", "NUMBER", "I", "m", "not", "as", "sure", "about", "update", "it", "automatically", "when", "a", "change", "be", "made", "to", "the", "config", "though", "NUMBER", "Given", "that", "the", "client", "can", "support", "multiple", "config", "file", "and", "multiple", "ACME", "servers", "I", "think", "I", "would", "personally", "prefer", "that", "the", "contact", "update", "operation", "only", "be", "issue", "through", "manual", "invocation", "rather", "than", "having", "something", "put", "through", "automatically", "NUMBER", "Perhaps", "a", "Your", "contact", "information", "in", "configuration", "doesn", "t", "match", "registration", "exiting", "NUMBER", "error", "or", "warning", "combined", "with", "a", "update", "registration", "option", "that", "would", "cause", "it", "to", "react", "to", "that", "situation", "by", "update", "the", "registration", "if", "needed", "NUMBER", "I", "like", "the", "thought", "of", "a", "notification", "be", "drop", "into", "the", "logs", "possibly", "notated", "as", "a", "warning", "NUMBER", "Shouldn", "t", "cause", "the", "client", "to", "exit", "or", "abort", "the", "current", "execution", "NUMBER", "update", "registration", "or", "whatever", "the", "option", "be", "should", "be", "able", "to", "be", "executed", "on", "its", "own", "NUMBER", "That", "be", "without", "an", "accompanying", "c", "or", "d", "options", "NUMBER", "In", "my", "own", "environment", "for", "example", "dehydrated", "be", "run", "under", "cron", "NUMBER", "I", "don", "t", "want", "change", "contact", "info", "to", "abort", "a", "scheduled", "run", "NUMBER", "but", "if", "a", "notification", "warning", "popped", "up", "in", "my", "cron", "logs", "I", "d", "be", "happy", "to", "log", "in", "and", "manually", "do", "an", "update", "registration", "to", "address", "that", "NUMBER", "The", "hook", "for", "invalid_challenge", "still", "had", "old", "notation", "from", "bash", "I", "converted", "the", "bash", "notation", "to", "sh", "notation", "NUMBER", "Proposal", "I", "d", "like", "to", "propose", "defining", "an", "allow", "prefix", "that", "end", "user", "can", "use", "to", "add", "custom", "settings", "to", "dehydrated", "config", "file", "e", "NUMBER", "g", "NUMBER", "CUSTOM_", "NUMBER", "This", "would", "work", "in", "the", "main", "config", "file", "and", "any", "custom", "settings", "can", "be", "add", "to", "or", "overridden", "in", "the", "per", "certificate", "config", "file", "NUMBER", "Any", "settings", "with", "the", "CUSTOM_", "prefix", "would", "be", "export", "in", "to", "the", "environment", "use", "to", "run", "the", "hook", "script", "via", "the", "HOOK", "setting", "NUMBER", "This", "would", "allow", "the", "hook", "script", "author", "to", "add", "parameterized", "custom", "behaviors", "on", "a", "global", "or", "per", "cert", "basis", "NUMBER", "For", "example", "to", "control", "the", "deploy_cert", "behavior", "user", "could", "define", "per", "certificate", "settings", "like", "CUSTOM_RESTART_APACHE", "yes", "CUSTOM_DEPLOY_CERT_DIR", "var", "www", "mysite", "certs", "or", "other", "behavior", "settings", "e", "NUMBER", "g", "NUMBER", "CUSTOM_DNS_CHALLENGE_API", "route", "NUMBER", "CUSTOM_RESTART_LIST", "httpd", "webmin", "postfix", "CUSTOM_NOTIFY_URL", "LINK", "CUSTOM_DEPLOY_SSH", "ssh", "server", "NUMBER", "example", "NUMBER", "com", "var", "www", "mysite", "NUMBER", "It", "would", "be", "up", "to", "hook", "script", "author", "to", "pull", "these", "settings", "from", "the", "script", "environment", "and", "implement", "the", "behaviors", "with", "in", "the", "hook", "function", "NUMBER", "Background", "dehydrated", "only", "a", "fix", "set", "of", "settings", "in", "its", "config", "file", "and", "only", "allows", "a", "fix", "set", "of", "settings", "to", "be", "overridden", "in", "per", "certificate", "config", "file", "NUMBER", "This", "be", "to", "protect", "the", "user", "from", "overriding", "an", "internal", "variable", "by", "mistake", "and", "breaking", "things", "NUMBER", "The", "custom", "prefix", "would", "be", "a", "safe", "way", "to", "extend", "the", "settings", "while", "keep", "this", "protection", "NUMBER", "read", "cert", "config", "for", "now", "this", "loads", "the", "certificate", "specific", "config", "in", "a", "subshell", "and", "parses", "a", "diff", "of", "set", "variables", "NUMBER", "we", "could", "just", "source", "the", "config", "file", "but", "i", "decided", "to", "go", "this", "way", "to", "protect", "people", "from", "accidentally", "overriding", "variables", "use", "internally", "by", "this", "script", "itself", "NUMBER", "I", "get", "that", "NUMBER", "The", "hook", "NUMBER", "sh", "could", "check", "for", "and", "source", "e", "NUMBER", "g", "NUMBER", "CERTDIR", "hook", "config", "to", "get", "this", "stuff", "NUMBER", "dehydrated", "allows", "for", "per", "certificate", "configuration", "of", "various", "parameters", "including", "the", "CHALLENGETYPE", "e", "NUMBER", "g", "NUMBER", "http", "NUMBER", "or", "dns", "NUMBER", "NUMBER", "I", "d", "like", "to", "propose", "this", "parameter", "be", "pass", "to", "the", "challenge", "relate", "function", "in", "the", "HOOK", "script", "if", "any", "NUMBER", "This", "would", "e", "NUMBER", "g", "NUMBER", "allow", "the", "hook", "script", "to", "only", "create", "dns", "NUMBER", "challenge", "records", "for", "those", "challenges", "and", "do", "nothing", "or", "something", "different", "for", "http", "NUMBER", "challenges", "NUMBER", "The", "CHALLENGETYPE", "parameter", "would", "be", "add", "at", "an", "additional", "last", "parameter", "to", "deploy_challenge", "clean_challenge", "invalid_challenge", "and", "so", "and", "would", "be", "backwards", "compatible", "with", "exist", "hook", "scripts", "NUMBER", "The", "CHALLENGETYPE", "could", "be", "an", "extra", "parameter", "for", "the", "HOOK_CHAIN", "case", "of", "X", "Y", "parameters", "but", "this", "would", "be", "a", "breaking", "change", "for", "people", "use", "HOOK_CHAIN", "NUMBER", "The", "extra", "parameter", "could", "also", "be", "entirely", "omitted", "in", "the", "HOOK_CHAIN", "case", "to", "maintain", "backward", "compatibility", "NUMBER", "It", "be", "possible", "to", "achieve", "the", "same", "result", "by", "specify", "per", "certificate", "hook", "scripts", "and", "maintaining", "separate", "hook", "scripts", "for", "each", "challenge", "type", "NUMBER", "However", "as", "the", "number", "of", "challenge", "types", "will", "grow", "over", "time", "it", "seems", "more", "cumbersome", "than", "parameterizing", "a", "single", "script", "NUMBER", "What", "to", "people", "think", "That", "will", "work", "thanks", "for", "exporting", "that", "As", "a", "comment", "NUMBER", "I", "think", "the", "challenge", "type", "be", "a", "pretty", "intrinsic", "part", "if", "a", "hook", "call", "since", "the", "hook", "script", "be", "there", "to", "facilitate", "the", "challenge", "types", "NUMBER", "So", "I", "would", "have", "thought", "it", "would", "be", "the", "first", "challenge", "hook", "call", "argument", "right", "before", "or", "after", "the", "domain", "name", "NUMBER", "But", "the", "export", "be", "equally", "as", "functional", "so", "I", "ll", "take", "it", "and", "shut", "up", "Hello", "When", "a", "challenge", "be", "in", "state", "valid", "the", "validation", "loop", "be", "skipped", "and", "variables", "be", "not", "initialized", "therefore", "the", "script", "crashes", "root", "magento", "NUMBER", "letsencrypt", "NUMBER", "sh", "NUMBER", "dehydrated", "c", "INFO", "Using", "main", "config", "file", "root", "letsencrypt", "NUMBER", "sh", "config", "Processing", "vm", "NUMBER", "xxx", "NUMBER", "fr", "Signing", "domains", "NUMBER", "Creating", "new", "directory", "root", "letsencrypt", "NUMBER", "sh", "certs", "vm", "NUMBER", "xxx", "NUMBER", "fr", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "vm", "NUMBER", "xxx", "NUMBER", "fr", "NUMBER", "Already", "validated", "NUMBER", "dehydrated", "line", "NUMBER", "deploy_args", "unbound", "variable", "commenting", "the", "continue", "at", "line", "NUMBER", "makes", "it", "work", "but", "I", "m", "not", "sure", "it", "s", "the", "best", "solution", "but", "I", "m", "not", "a", "bash", "expert", "root", "magento", "NUMBER", "letsencrypt", "NUMBER", "sh", "NUMBER", "dehydrated", "c", "INFO", "Using", "main", "config", "file", "root", "letsencrypt", "NUMBER", "sh", "config", "Processing", "vm", "NUMBER", "xxx", "NUMBER", "fr", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "vm", "NUMBER", "xxx", "NUMBER", "fr", "NUMBER", "Already", "validated", "Responding", "to", "challenge", "for", "vm", "NUMBER", "xxx", "NUMBER", "fr", "NUMBER", "Challenge", "be", "valid", "Requesting", "certificate", "NUMBER", "Checking", "certificate", "NUMBER", "Done", "Creating", "fullchain", "NUMBER", "pem", "NUMBER", "Done", "I", "know", "this", "be", "disabling", "the", "functionality", "It", "was", "not", "a", "propose", "fix", "only", "a", "workaround", "info", "Hi", "run", "dehydrated", "version", "NUMBER", "f", "NUMBER", "a", "NUMBER", "dad", "NUMBER", "c", "NUMBER", "f", "NUMBER", "aaa", "NUMBER", "cccb", "NUMBER", "ab", "on", "Debian", "NUMBER", "deploy_args", "be", "empty", "on", "line", "NUMBER", "if", "challenge_status", "be", "valid", "on", "line", "NUMBER", "LINK", "L", "NUMBER", "Joerg", "NUMBER", "dehydrated", "x", "c", "INFO", "Using", "main", "config", "file", "opt", "dehydrated", "config", "Processing", "www", "NUMBER", "xxxxx", "NUMBER", "xx", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Longer", "than", "NUMBER", "days", "NUMBER", "Ignoring", "because", "renew", "was", "forced", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "www", "NUMBER", "xxxxx", "NUMBER", "xx", "NUMBER", "Already", "validated", "NUMBER", "dehydrated", "line", "NUMBER", "deploy_args", "unbound", "variable", "Same", "problem", "some", "lines", "below", "with", "check_altnames", "NUMBER", "I", "solve", "this", "by", "surrounding", "with", "if", "deploy_args", "deploy_args", "then", "NUMBER", "fi", "if", "check_altnames", "ceck_altnames", "then", "NUMBER", "fi", "NUMBER", "But", "maybe", "there", "be", "a", "way", "for", "proper", "initialisation", "with", "Bash", "NUMBER", "Hi", "You", "have", "to", "comment", "the", "line", "NUMBER", "NUMBER", "challenge_status", "printf", "s", "response", "rm_json_arrays", "get_json_string_value", "status", "NUMBER", "if", "challenge_status", "valid", "then", "NUMBER", "echo", "Already", "validated", "NUMBER", "continue", "NUMBER", "fi", "Commenting", "out", "the", "continue", "works", "but", "break", "the", "feature", "it", "was", "supposed", "to", "add", "NUMBER", "I", "add", "a", "test", "for", "an", "empty", "array", "around", "the", "challenge", "loop", "that", "resolve", "it", "for", "me", "and", "the", "feature", "to", "skip", "the", "challenge", "for", "already", "validated", "names", "works", "NUMBER", "if", "challenge_altnames", "ne", "NUMBER", "then", "for", "altname", "in", "challenge_altnames", "NUMBER", "do", "NUMBER", "do", "fi", "I", "created", "a", "pull", "request", "NUMBER", "to", "make", "this", "change", "NUMBER", "Just", "install", "and", "run", "the", "patched", "code", "but", "be", "still", "get", "the", "same", "error", "that", "lingej", "posted", "NUMBER", "I", "m", "use", "GNU", "bash", "version", "NUMBER", "NUMBER", "release", "arm", "unknown", "linux", "gnueabihf", "on", "Raspbian", "Jessie", "NUMBER", "Just", "test", "your", "latest", "change", "and", "no", "more", "error", "NUMBER", "Thanks", "Hello", "Let", "s", "Encrypt", "now", "support", "issuance", "for", "Internationalized", "Domain", "Names", "IDNs", "LINK", "features", "NUMBER", "Please", "add", "IDNs", "support", "for", "your", "script", "NUMBER", "Thanks", "Add", "a", "possibily", "to", "the", "hook", "script", "to", "be", "call", "at", "the", "end", "of", "all", "processing", "when", "any", "deploy_cert", "has", "be", "call", "NUMBER", "That", "would", "be", "usefull", "for", "instance", "to", "restart", "reload", "the", "apache", "other", "webserver", "config", "only", "once", "instead", "of", "at", "each", "time", "a", "cert", "be", "deployed", "when", "there", "be", "many", "certs", "to", "deploy", "NUMBER", "I", "m", "not", "sure", "this", "be", "required", "NUMBER", "You", "could", "implement", "this", "with", "a", "normal", "hook", "say", "create", "a", "file", "call", "cert", "deployed", "NUMBER", "txt", "and", "add", "your", "domains", "to", "it", "within", "the", "HOOK", "NUMBER", "If", "this", "file", "change", "run", "something", "else", "ie", "bin", "bash", "if", "f", "deployed_domains", "NUMBER", "txt", "then", "rm", "f", "deployed_domains", "NUMBER", "txt", "fi", "dehydrated", "c", "if", "f", "deployed_domains", "NUMBER", "txt", "then", "systemctl", "reload", "httpd", "fi", "Then", "in", "your", "normal", "HOOK", "file", "touch", "the", "deployed_domains", "NUMBER", "txt", "file", "within", "the", "deploy_cert", "stage", "NUMBER", "Hi", "As", "what", "we", "know", "http", "and", "dns", "be", "use", "to", "verify", "domain", "owner", "in", "common", "NUMBER", "But", "our", "customer", "site", "block", "http", "port", "NUMBER", "and", "they", "don", "t", "have", "right", "or", "skill", "to", "modify", "dns", "record", "the", "only", "chance", "for", "us", "to", "verify", "domain", "owner", "be", "https", "port", "NUMBER", "NUMBER", "Does", "dehydrated", "support", "domain", "verification", "by", "https", "port", "NUMBER", "like", "letsencrytp", "auto", "standalone", "support", "challenges", "http", "NUMBER", "to", "use", "port", "NUMBER", "standalone", "support", "challenges", "tls", "sni", "NUMBER", "to", "use", "port", "NUMBER", "Thank", "in", "advance", "This", "a", "duplicate", "of", "NUMBER", "Under", "the", "following", "circumstances", "certificate", "specific", "config", "file", "will", "not", "be", "loaded", "Using", "http", "NUMBER", "in", "SCRIPTDIR", "config", "e", "NUMBER", "g", "use", "default", "config", "from", "docs", "examples", "config", "WELLKNOWN", "dir", "do", "not", "exists", "certificate", "specific", "config", "file", "placed", "in", "certs", "domain", "NUMBER", "tld", "config", "root", "host", "tmp", "root", "dehydrated", "dehydrated", "c", "d", "domain", "NUMBER", "tld", "INFO", "Using", "main", "config", "file", "root", "dehydrated", "config", "ERROR", "WELLKNOWN", "directory", "doesn", "t", "exist", "please", "create", "var", "www", "dehydrated", "and", "set", "appropriate", "permissions", "NUMBER", "Even", "if", "the", "certificate", "specific", "config", "be", "use", "dns", "NUMBER", "it", "seems", "to", "be", "odd", "to", "enforce", "an", "exist", "WELLKNOWN", "dir", "NUMBER", "Creating", "it", "be", "a", "simple", "workaround", "if", "you", "re", "use", "dns", "NUMBER", "only", "NUMBER", "Hello", "Is", "it", "possible", "to", "obtain", "challenges", "without", "verification", "and", "after", "that", "execute", "dehydrated", "again", "to", "verify", "domain", "Unfortunately", "I", "can", "t", "execute", "script", "on", "the", "server", "NUMBER", "But", "I", "can", "place", "any", "file", "manually", "under", "LINK", "know", "acme", "challenge", "something", "NUMBER", "It", "would", "be", "great", "to", "be", "able", "obtain", "challenges", "and", "verify", "domain", "with", "another", "command", "NUMBER", "Sincerely", "Alexandr", "LINK", "might", "be", "of", "help", "Unfortunately", "I", "can", "t", "create", "an", "account", "with", "that", "script", "because", "of", "this", "issue", "LINK", "Just", "cloned", "your", "repository", "configured", "config", "and", "all", "necessary", "file", "NUMBER", "Started", "a", "test", "with", "dehydrated", "f", "etc", "dehydrated", "config", "c", "and", "get", "the", "following", "root", "domain", "etc", "dehydrated", "opt", "dehydrated", "dehydrated", "f", "etc", "dehydrated", "config", "c", "INFO", "Using", "main", "config", "file", "etc", "dehydrated", "config", "INFO", "Using", "additional", "config", "file", "etc", "dehydrated", "hook", "NUMBER", "sh", "etc", "dehydrated", "hook", "NUMBER", "sh", "Zeile", "NUMBER", "NUMBER", "ist", "nicht", "gesetzt", "NUMBER", "So", "it", "seems", "that", "the", "script", "be", "call", "without", "parameter", "and", "get", "this", "exception", "NUMBER", "So", "I", "add", "in", "my", "pull", "request", "a", "simple", "if", "else", "statement", "Some", "name", "servers", "be", "really", "slow", "with", "reloading", "their", "zone", "file", "see", "NUMBER", "Therefore", "I", "need", "to", "have", "a", "sleep", "in", "my", "hook", "script", "NUMBER", "minutes", "to", "delay", "the", "challenge", "until", "the", "name", "servers", "be", "update", "NUMBER", "This", "be", "no", "problem", "when", "I", "only", "have", "one", "domain", "in", "my", "domains", "NUMBER", "txt", "NUMBER", "But", "when", "I", "have", "multiple", "domains", "dehydrated", "do", "call", "my", "hook", "for", "every", "domain", "I", "do", "the", "wait", "then", "it", "goes", "on", "with", "the", "challenge", "NUMBER", "Therefore", "I", "have", "NUMBER", "minutes", "wait", "time", "per", "domain", "NUMBER", "To", "solve", "this", "there", "should", "be", "another", "hook", "where", "dehydrated", "pass", "all", "domains", "at", "once", "to", "the", "hook", "script", "so", "it", "can", "create", "all", "TXT", "records", "and", "wait", "NUMBER", "Then", "the", "challenge", "can", "go", "on", "and", "all", "challenges", "succeed", "NUMBER", "I", "feel", "like", "HOOK_CHAIN", "might", "be", "what", "you", "re", "looking", "for", "which", "bundle", "all", "the", "challenges", "for", "a", "single", "certificate", "into", "one", "hook", "call", "NUMBER", "There", "be", "no", "function", "to", "pass", "all", "challenges", "from", "all", "certificates", "in", "a", "single", "execution", "pass", "into", "a", "single", "hook", "call", "NUMBER", "My", "gut", "instinct", "be", "that", "this", "be", "a", "good", "design", "decision", "bundling", "all", "challenges", "from", "all", "certificates", "would", "require", "a", "re", "work", "of", "the", "main", "script", "s", "logic", "NUMBER", "Right", "now", "it", "handles", "each", "certificate", "one", "at", "a", "time", "and", "use", "HOOK_CHAIN", "doesn", "t", "really", "disrupt", "that", "overall", "flow", "NUMBER", "But", "to", "implement", "a", "theoretical", "HOOK_CHAIN_ALL", "you", "d", "have", "to", "rewrite", "the", "logic", "to", "go", "through", "all", "certificates", "find", "the", "ones", "nearing", "expiry", "request", "all", "challenges", "for", "all", "certificates", "hook", "that", "out", "wait", "for", "all", "challenges", "to", "be", "available", "then", "request", "and", "update", "all", "the", "certificates", "which", "had", "to", "be", "expired", "and", "then", "call", "separate", "instances", "of", "deploy_cert", "through", "your", "hook", "script", "once", "for", "each", "certificate", "NUMBER", "Yes", "it", "could", "be", "do", "but", "it", "would", "be", "a", "pretty", "massive", "rewrite", "only", "to", "be", "use", "in", "the", "event", "of", "setting", "the", "HOOK_CHAIN_ALL", "flag", "NUMBER", "Okay", "that", "be", "better", "than", "nothing", "but", "do", "not", "help", "much", "if", "I", "want", "to", "update", "multiple", "domains", "at", "gandi", "NUMBER", "I", "had", "to", "put", "it", "all", "onto", "one", "certificate", "or", "wait", "the", "time", "for", "each", "certificate", "NUMBER", "That", "s", "correct", "NUMBER", "And", "at", "that", "point", "it", "s", "less", "a", "problem", "within", "dehydrated", "and", "more", "a", "problem", "at", "Gandi", "NUMBER", "I", "have", "followed", "the", "nice", "example", "at", "LINK", "bash", "client", "lets", "encrypt", "and", "have", "things", "setup", "on", "an", "Ubuntu", "NUMBER", "But", "I", "seem", "to", "have", "a", "miss", "slash", "somewhere", "and", "I", "cant", "find", "it", "NUMBER", "My", "output", "be", "Processing", "sub", "NUMBER", "mydomain", "NUMBER", "dk", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "sub", "NUMBER", "mydomain", "NUMBER", "dk", "NUMBER", "Responding", "to", "challenge", "for", "sub", "NUMBER", "mydomain", "NUMBER", "dk", "NUMBER", "ERROR", "Challenge", "be", "invalid", "returned", "invalid", "result", "type", "http", "NUMBER", "status", "invalid", "error", "type", "urn", "acme", "error", "connection", "detail", "Could", "not", "connect", "to", "sub", "NUMBER", "mydomain", "NUMBER", "dk", "NUMBER", "well", "know", "status", "NUMBER", "uri", "LINK", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "NUMBER", "LxKELET", "NUMBER", "eL", "NUMBER", "diD", "ovIPrKE", "NUMBER", "LHKQNGU", "NUMBER", "SmZh", "NUMBER", "MLsDc", "NUMBER", "NUMBER", "token", "KP", "NUMBER", "Um", "NUMBER", "SjkvoYi", "NUMBER", "fE", "NUMBER", "Hmsg", "NUMBER", "Gn", "NUMBER", "BClvPx", "NUMBER", "CjpNcqzTCo", "keyAuthorization", "KP", "NUMBER", "Um", "NUMBER", "SjkvoYi", "NUMBER", "fE", "NUMBER", "Hmsg", "NUMBER", "Gn", "NUMBER", "BClvPx", "NUMBER", "CjpNcqzTCo", "NUMBER", "RzSA_osSH", "NUMBER", "_aPw", "z", "NUMBER", "ZyR", "NUMBER", "ob", "NUMBER", "YOIOwsnySON", "NUMBER", "jA", "NUMBER", "zzE", "validationRecord", "url", "LINK", "know", "acme", "challenge", "KP", "NUMBER", "Um", "NUMBER", "SjkvoYi", "NUMBER", "fE", "NUMBER", "Hmsg", "NUMBER", "Gn", "NUMBER", "BClvPx", "NUMBER", "CjpNcqzTCo", "hostname", "sub", "NUMBER", "mydomain", "NUMBER", "dk", "port", "NUMBER", "addressesResolved", "NUMBER", "addressUsed", "NUMBER", "url", "LINK", "know", "acme", "challenge", "KP", "NUMBER", "Um", "NUMBER", "SjkvoYi", "NUMBER", "fE", "NUMBER", "Hmsg", "NUMBER", "Gn", "NUMBER", "BClvPx", "NUMBER", "CjpNcqzTCo", "hostname", "sub", "NUMBER", "mydomain", "NUMBER", "dk", "NUMBER", "well", "know", "port", "NUMBER", "addressesResolved", "null", "addressUsed", "I", "notice", "that", "the", "hostname", "be", "prepended", "with", "NUMBER", "well", "know", "Could", "that", "be", "the", "issue", "Regards", "and", "thanks", "for", "a", "nice", "script", "Supergoof", "I", "don", "t", "think", "it", "s", "that", "because", "I", "have", "the", "same", "problem", "and", "if", "I", "access", "the", "url", "in", "the", "browser", "with", "http", "instead", "of", "https", "it", "redirects", "correctly", "NUMBER", "And", "the", "alias", "be", "created", "like", "in", "your", "doc", "file", "NUMBER", "Hi", "I", "m", "trying", "to", "automate", "my", "renewal", "for", "certificates", "with", "hkpk", "dane", "in", "mind", "use", "singcsr", "path", "to", "my", "NUMBER", "csr", "out", "path", "to", "location", "but", "only", "get", "the", "cert", "as", "an", "output", "in", "shell", "NUMBER", "Am", "I", "miss", "something", "or", "be", "this", "not", "support", "I", "m", "use", "an", "older", "version", "of", "the", "letsencrypt", "NUMBER", "sh", "script", "from", "August", "I", "think", "NUMBER", "I", "have", "a", "domain", "with", "NUMBER", "subdomains", "that", "I", "be", "trying", "to", "renew", "the", "cert", "for", "NUMBER", "But", "the", "LE", "server", "seems", "to", "be", "busy", "right", "now", "and", "I", "have", "be", "unable", "to", "run", "the", "script", "all", "the", "way", "through", "without", "the", "script", "aborting", "with", "a", "Server", "Busy", "NUMBER", "error", "partway", "through", "execution", "NUMBER", "Here", "be", "the", "error", "message", "on", "one", "of", "the", "aborts", "Requesting", "challenge", "for", "va", "NUMBER", "walr", "NUMBER", "us", "NUMBER", "Requesting", "challenge", "for", "wa", "NUMBER", "walr", "NUMBER", "us", "NUMBER", "Requesting", "challenge", "for", "wv", "NUMBER", "walr", "NUMBER", "us", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "authz", "Status", "NUMBER", "Details", "TAG", "TAG", "TAG", "Error", "TAG", "TAG", "TAG", "An", "error", "occur", "while", "processing", "your", "request", "NUMBER", "TAG", "Reference", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cb", "NUMBER", "bf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "fbd", "NUMBER", "a", "TAG", "TAG", "And", "here", "be", "another", "Responding", "to", "challenge", "for", "mb", "NUMBER", "walr", "NUMBER", "us", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "nb", "NUMBER", "walr", "NUMBER", "us", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "nl", "NUMBER", "walr", "NUMBER", "us", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "QWH", "NUMBER", "zHZkedorybrcjyqpIVp", "NUMBER", "YzO", "lw", "NUMBER", "Lll", "NUMBER", "q", "NUMBER", "dw", "NUMBER", "Status", "NUMBER", "Details", "TAG", "TAG", "TAG", "Error", "TAG", "TAG", "TAG", "An", "error", "occur", "while", "processing", "your", "request", "NUMBER", "TAG", "Reference", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cb", "NUMBER", "bf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "a", "NUMBER", "ff", "TAG", "TAG", "I", "think", "the", "script", "should", "check", "for", "a", "Status", "NUMBER", "and", "delay", "for", "NUMBER", "seconds", "or", "so", "and", "then", "retry", "the", "post", "request", "NUMBER", "I", "be", "use", "DNS", "challenges", "so", "when", "the", "script", "aborts", "it", "leaves", "outstanding", "challenges", "and", "LE", "eventually", "makes", "me", "wait", "a", "week", "like", "happened", "to", "me", "tonight", "for", "the", "outstanding", "challenges", "to", "age", "off", "and", "allow", "me", "to", "try", "the", "script", "again", "NUMBER", "There", "be", "about", "issue", "in", "letsecrypt", "repo", "about", "it", "LINK", "issuecomment", "NUMBER", "facing", "this", "issue", "today", "despite", "that", "letsencrypt", "status", "be", "ok", "NUMBER", "It", "happens", "on", "about", "NUMBER", "request", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "authz", "Status", "NUMBER", "Details", "TAG", "TAG", "TAG", "Error", "TAG", "TAG", "TAG", "An", "error", "occur", "while", "processing", "your", "request", "NUMBER", "TAG", "Reference", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "fcd", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "f", "NUMBER", "TAG", "TAG", "CloudFlare", "hook", "executing", "clean_challenge", "http_request", "error", "in", "letsencrypt", "NUMBER", "sh", "less", "than", "NUMBER", "pass", "ok", "NUMBER", "I", "m", "use", "the", "latest", "version", "of", "dehydrated", "and", "this", "still", "happens", "for", "me", "NUMBER", "Any", "chance", "of", "a", "fix", "come", "soon", "Requesting", "challenge", "for", "imap", "NUMBER", "wi", "NUMBER", "walr", "NUMBER", "us", "NUMBER", "Requesting", "challenge", "for", "imap", "NUMBER", "wy", "NUMBER", "walr", "NUMBER", "us", "NUMBER", "CloudFlare", "hook", "executing", "deploy_challenge", "Settling", "down", "for", "NUMBER", "s", "NUMBER", "Responding", "to", "challenge", "for", "imap", "NUMBER", "ab", "NUMBER", "walr", "NUMBER", "us", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "imap", "NUMBER", "bc", "NUMBER", "walr", "NUMBER", "us", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "imap", "NUMBER", "mb", "NUMBER", "walr", "NUMBER", "us", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "imap", "NUMBER", "nb", "NUMBER", "walr", "NUMBER", "us", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "imap", "NUMBER", "nl", "NUMBER", "walr", "NUMBER", "us", "NUMBER", "Challenge", "be", "valid", "Responding", "to", "challenge", "for", "imap", "NUMBER", "nt", "NUMBER", "walr", "NUMBER", "us", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "icWKuzvIizvhXXM", "NUMBER", "SFY", "NUMBER", "xAEdlY", "NUMBER", "UDSzLVEjQjx", "NUMBER", "rE", "NUMBER", "Status", "NUMBER", "Details", "TAG", "TAG", "TAG", "Error", "TAG", "TAG", "TAG", "An", "error", "occur", "while", "processing", "your", "request", "NUMBER", "TAG", "Reference", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "df", "NUMBER", "bf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "TAG", "TAG", "Turns", "out", "this", "doesn", "t", "seem", "to", "be", "as", "bad", "a", "problem", "as", "it", "was", "before", "NUMBER", "When", "I", "re", "run", "dehydrated", "it", "didn", "t", "deploy_challenges", "for", "the", "ones", "that", "had", "previously", "succeeded", "NUMBER", "Instead", "it", "pick", "up", "with", "the", "challenge", "that", "had", "fail", "with", "the", "SERVER", "BUSY", "error", "NUMBER", "Still", "dehydrated", "should", "probably", "check", "for", "Status", "NUMBER", "and", "delay", "before", "retrying", "the", "post", "request", "NUMBER", "As", "it", "be", "now", "the", "script", "simply", "prints", "the", "error", "message", "and", "exits", "which", "be", "not", "very", "friendly", "in", "the", "case", "of", "a", "temporary", "problem", "like", "SERVER", "BUSY", "NUMBER", "Using", "the", "script", "for", "the", "first", "time", "it", "was", "not", "clear", "to", "me", "how", "to", "change", "the", "default", "config", "NUMBER", "See", "LINK", "Please", "consider", "fix", "these", "shellcheck", "warnings", "LINK", "ci", "NUMBER", "org", "lukas", "NUMBER", "dehydrated", "build", "NUMBER", "L", "NUMBER", "or", "insert", "bash", "shellcheck", "disable", "SC", "NUMBER", "See", "LINK", "NUMBER", "Ezen", "a", "k\u00e9sz\u00fcl\u00e9ken", "sok", "az", "el\u00fct\u00e9s", "NUMBER", "Eln\u00e9z\u00e9st", "On", "January", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "PM", "CET", "leonklingele", "TAG", "write", "leonklingele", "commented", "on", "this", "pull", "request", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Fail", "early", "set", "eu", "o", "pipefail", "NGROK_URL", "LINK", "stable", "linux", "amd", "NUMBER", "zip", "I", "m", "referring", "to", "the", "URL", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "Please", "see", "LINK", "stay", "at", "pending", "state", "acme", "client", "locks", "up", "NUMBER", "for", "a", "description", "of", "the", "problem", "and", "a", "possible", "solution", "NUMBER", "I", "m", "pretty", "sure", "this", "was", "address", "by", "NUMBER", "and", "NUMBER", "as", "dehydrated", "now", "checks", "for", "exist", "domain", "validations", "NUMBER", "Hi", "So", "I", "had", "some", "issue", "with", "LE", "dehydrated", "NUMBER", "I", "made", "a", "post", "on", "the", "LE", "Community", "LINK", "returned", "with", "NUMBER", "anti", "replay", "nonce", "seems", "ipv", "NUMBER", "relate", "NUMBER", "NUMBER", "The", "issue", "be", "specific", "to", "IPv", "NUMBER", "in", "my", "case", "cause", "the", "curl", "returned", "with", "NUMBER", "error", "NUMBER", "Forcing", "dehydrated", "and", "in", "turn", "curl", "to", "use", "IPv", "NUMBER", "with", "ipv", "NUMBER", "solve", "the", "issue", "NUMBER", "There", "be", "no", "noticable", "issue", "with", "our", "IPv", "NUMBER", "connectivity", "and", "RTT", "be", "also", "low", "towards", "the", "LE", "servers", "both", "on", "IPv", "NUMBER", "and", "IPv", "NUMBER", "but", "curl", "still", "ends", "up", "use", "a", "lot", "of", "time", "on", "some", "of", "the", "queries", "over", "IPv", "NUMBER", "Not", "sure", "if", "this", "be", "really", "an", "issue", "with", "LE", "s", "servers", "but", "nontheless", "dehydrated", "should", "probably", "handle", "those", "error", "more", "gracefully", "I", "NUMBER", "e", "NUMBER", "by", "either", "a", "retry", "the", "connection", "N", "times", "when", "it", "s", "error", "NUMBER", "or", "b", "extend", "the", "timeout", "afaik", "the", "default", "timeout", "of", "curl", "be", "NUMBER", "which", "be", "forever", "so", "not", "sure", "why", "error", "NUMBER", "be", "even", "the", "issue", "NUMBER", "My", "ugly", "measurement", "setup", "i", "NUMBER", "while", "true", "do", "echo", "date", "Measurement", "i", "timelol", "time", "curl", "s", "NUMBER", "LINK", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "authz", "dev", "null", "NUMBER", "NUMBER", "grep", "real", "perl", "wple", "s", "real", "s", "g", "seconds", "echo", "timelol", "cut", "d", "NUMBER", "f", "NUMBER", "perl", "wple", "s", "NUMBER", "m", "if", "seconds", "gt", "NUMBER", "then", "echo", "date", "Long", "measurement", "i", "timelol", "fi", "let", "i", "i", "NUMBER", "sleep", "NUMBER", "do", "Did", "about", "NUMBER", "measurements", "and", "NUMBER", "of", "them", "had", "NUMBER", "seconds", "NUMBER", "Most", "of", "them", "well", "below", "NUMBER", "seconds", "and", "all", "of", "them", "below", "NUMBER", "seconds", "NUMBER", "Any", "takers", "Results", "from", "the", "measurement", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "UTC", "NUMBER", "Long", "measurement", "NUMBER", "NUMBER", "m", "NUMBER", "s", "mtr", "over", "IPv", "NUMBER", "jocke", "kek", "mtr", "n", "NUMBER", "report", "acme", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "Start", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "HOST", "kek", "Loss", "Snt", "Last", "Avg", "Best", "Wrst", "StDevmtr", "over", "IPv", "NUMBER", "jocke", "kek", "mtr", "n", "NUMBER", "report", "acme", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "Start", "Thu", "Oct", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "HOST", "kek", "Loss", "Snt", "Last", "Avg", "Best", "Wrst", "StDev", "NUMBER", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ea", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "ff", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "e", "NUMBER", "ff", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "b", "NUMBER", "ffff", "ffff", "ffff", "ff", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "b", "NUMBER", "ffff", "ffff", "ffff", "ff", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "NUMBER", "f", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "So", "the", "high", "request", "time", "be", "gone", "for", "now", "but", "the", "point", "of", "this", "issue", "still", "remains", "i", "NUMBER", "e", "NUMBER", "dehydrated", "should", "handle", "timeouts", "better", "NUMBER", "Hi", "dehydrated", "already", "very", "handily", "creates", "the", "chain", "PEMs", "but", "e", "NUMBER", "g", "NUMBER", "lighttpd", "NUMBER", "requires", "a", "PEM", "file", "that", "s", "a", "combination", "of", "the", "key", "and", "the", "certificate", "NUMBER", "Would", "it", "be", "possible", "to", "also", "create", "that", "I", "could", "probably", "do", "that", "through", "a", "hook", "but", "that", "seems", "kind", "of", "bothersome", "NUMBER", "Thanks", "a", "lot", "Lukas", "NUMBER", "LINK", "_SSL", "For", "domains", "that", "be", "already", "validated", "we", "don", "t", "need", "to", "fulfill", "further", "challenges", "NUMBER", "If", "a", "challenge", "request", "for", "a", "domain", "returns", "status", "valid", "no", "further", "validation", "be", "required", "and", "further", "processing", "be", "skipped", "NUMBER", "Skipping", "this", "further", "processing", "also", "avoids", "parsing", "problem", "when", "the", "challenge", "response", "contains", "additional", "field", "for", "example", "describing", "a", "previous", "successful", "DNS", "challenge", "NUMBER", "The", "new", "variable", "challenge_altnames", "be", "use", "to", "keep", "track", "of", "the", "names", "that", "be", "not", "validated", "yet", "and", "still", "need", "do", "the", "challenge", "NUMBER", "When", "later", "iterating", "over", "this", "possibly", "empty", "array", "a", "NUMBER", "substring", "expansion", "has", "to", "be", "use", "to", "avoid", "bash", "complaining", "about", "an", "unbound", "variable", "it", "treats", "empty", "arrays", "as", "unset", "NUMBER", "This", "solves", "the", "same", "problem", "as", "pull", "request", "NUMBER", "hopefully", "in", "a", "more", "robust", "way", "NUMBER", "This", "patch", "causes", "error", "whenever", "a", "domain", "be", "already", "validated", "because", "the", "continue", "causes", "the", "initialization", "of", "several", "variables", "to", "be", "skipped", "NUMBER", "If", "all", "names", "on", "a", "cert", "be", "already", "validated", "the", "variable", "initialization", "be", "always", "skipped", "triggering", "the", "error", "in", "later", "code", "NUMBER", "Already", "validated", "NUMBER", "dehydrated", "line", "NUMBER", "challenge_altnames", "unbound", "variable", "See", "additional", "report", "of", "error", "cause", "by", "this", "patch", "in", "issue", "NUMBER", "Commenting", "out", "the", "continue", "be", "a", "workaround", "but", "of", "course", "defeats", "the", "goal", "of", "the", "patch", "NUMBER", "I", "created", "a", "pull", "request", "NUMBER", "to", "fix", "this", "issue", "by", "add", "an", "empty", "array", "test", "NUMBER", "Adds", "the", "necessary", "dependencies", "and", "file", "to", "a", "Dockerfile", "so", "the", "dehydrated", "script", "can", "be", "run", "inside", "a", "container", "NUMBER", "See", "LINK", "I", "add", "a", "wiki", "page", "LINK", "support", "NUMBER", "I", "m", "curious", "why", "nobody", "wants", "Docker", "support", "Because", "its", "utterly", "useless", "NUMBER", "Obviously", "people", "have", "drunk", "too", "much", "of", "the", "docker", "cool", "aid", "NUMBER", "Dehydrate", "be", "a", "simple", "script", "there", "be", "no", "need", "to", "use", "it", "as", "a", "docker", "NUMBER", "It", "also", "relies", "on", "a", "webserver", "or", "a", "dnsserver", "to", "fullfill", "the", "request", "so", "your", "docker", "image", "be", "invalid", "for", "practical", "points", "NUMBER", "That", "was", "incredibly", "rude", "NUMBER", "I", "was", "just", "ask", "a", "question", "NUMBER", "jmreicha", "that", "was", "me", "be", "nice", "sorry", "if", "you", "were", "offended", "NUMBER", "For", "small", "admin", "scripts", "containerizing", "them", "add", "to", "the", "management", "complexity", "NUMBER", "lukas", "NUMBER", "That", "makes", "sense", "I", "appreciate", "the", "explanation", "NUMBER", "Added", "PKCS", "NUMBER", "PFX", "cert", "output", "for", "importing", "into", "windows", "test", "on", "Server", "NUMBER", "R", "NUMBER", "with", "IIS", "NUMBER", "NUMBER", "Can", "specify", "a", "password", "to", "protect", "the", "key", "in", "config", "param", "otherwise", "defaults", "to", "blank", "password", "NUMBER", "PFX", "output", "should", "be", "optional", "not", "mandatory", "NUMBER", "I", "m", "currently", "use", "dehydrated", "on", "a", "single", "master", "certificate", "server", "for", "all", "domains", "and", "certificates", "across", "our", "company", "NUMBER", "Some", "certificates", "be", "required", "in", "PEM", "format", "some", "be", "required", "in", "PFX", "format", "and", "some", "in", "both", "formats", "have", "password", "requirements", "on", "the", "private", "key", "NUMBER", "I", "ve", "write", "a", "separate", "script", "to", "process", "the", "raw", "PEM", "file", "to", "add", "passwords", "or", "convert", "to", "PFX", "with", "or", "without", "passwords", "before", "outputting", "them", "to", "the", "required", "target", "NUMBER", "Given", "that", "this", "be", "a", "bash", "script", "it", "seems", "more", "likely", "to", "be", "run", "in", "a", "Linux", "environment", "where", "PEM", "file", "be", "pretty", "standard", "in", "my", "experience", "NUMBER", "Having", "PFX", "output", "as", "an", "option", "in", "dehydrated", "wouldn", "t", "be", "a", "bad", "thing", "but", "I", "wouldn", "t", "like", "it", "to", "be", "mandatory", "many", "servers", "will", "have", "no", "use", "for", "PFX", "file", "NUMBER", "If", "PFX", "output", "was", "made", "a", "configurable", "option", "though", "it", "could", "be", "turned", "on", "use", "a", "per", "certificate", "config", "file", "make", "it", "a", "more", "flexible", "and", "useful", "option", "to", "have", "NUMBER", "Good", "suggestion", "txr", "NUMBER", "with", "the", "latest", "commit", "PFX", "creation", "be", "optional", "disabled", "by", "default", "also", "it", "can", "be", "turned", "on", "off", "and", "password", "can", "be", "set", "on", "a", "per", "certificate", "basis", "use", "the", "method", "describe", "in", "docs", "per", "certificate", "config", "NUMBER", "md", "Thanks", "for", "your", "consideration", "for", "now", "I", "ll", "use", "my", "fork", "but", "will", "look", "into", "replacing", "it", "with", "a", "hook", "if", "I", "get", "the", "chance", "NUMBER", "Question", "since", "this", "be", "my", "first", "PR", "on", "Github", "NUMBER", "I", "figured", "you", "would", "squash", "on", "merge", "NUMBER", "Is", "it", "standard", "practice", "to", "rebase", "commit", "to", "clean", "them", "up", "before", "doing", "a", "PR", "Sorry", "that", "I", "m", "not", "sure", "if", "this", "be", "a", "problem", "of", "dehydrated", "it", "only", "appear", "on", "one", "of", "my", "servers", "with", "Ubuntu", "NUMBER", "LTS", "and", "the", "error", "message", "be", "very", "not", "help", "NUMBER", "Tried", "v", "NUMBER", "NUMBER", "same", "version", "and", "same", "parameters", "can", "work", "on", "one", "another", "server", "NUMBER", "Here", "be", "the", "error", "message", "INFO", "Using", "main", "config", "file", "etc", "letsencrypt", "NUMBER", "sh", "config", "NUMBER", "sh", "ERROR", "An", "error", "occur", "while", "sending", "get", "request", "to", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "Status", "NUMBER", "Details", "TAG", "TAG", "TAG", "Access", "Denied", "TAG", "TAG", "TAG", "TAG", "Access", "Denied", "TAG", "You", "don", "t", "have", "permission", "to", "access", "http", "NUMBER", "NUMBER", "NUMBER", "acme", "NUMBER", "v", "NUMBER", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "NUMBER", "directory", "on", "this", "server", "NUMBER", "TAG", "Reference", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "eb", "NUMBER", "b", "TAG", "TAG", "I", "tried", "to", "use", "a", "browser", "to", "see", "the", "message", "I", "get", "this", "Access", "Denied", "You", "don", "t", "have", "permission", "to", "access", "LINK", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "on", "this", "server", "NUMBER", "Reference", "NUMBER", "fbb", "NUMBER", "Googled", "also", "duckduckgo", "NUMBER", "fbb", "NUMBER", "but", "get", "nothing", "have", "no", "idea", "about", "how", "to", "do", "to", "debug", "this", "problem", "any", "suggest", "will", "be", "appriaciated", "thanks", "It", "seems", "like", "you", "tried", "to", "get", "access", "to", "ACME", "server", "via", "http", "instead", "of", "https", "CA", "variable", "in", "config", "file", "adduxa", "I", "thought", "the", "part", "you", "mention", "be", "just", "a", "mistake", "from", "the", "error", "message", "returned", "from", "ACME", "server", "the", "CA", "variable", "in", "the", "script", "be", "NUMBER", "https", "no", "problem", "and", "as", "I", "say", "the", "same", "same", "script", "different", "NUMBER", "version", "run", "on", "my", "two", "different", "server", "get", "two", "different", "result", "NUMBER", "Oh", "NUMBER", "Ok", "this", "be", "strange", "It", "s", "be", "a", "few", "weeks", "since", "did", "this", "on", "Ubuntu", "NUMBER", "LTS", "but", "it", "worked", "NUMBER", "But", "I", "recall", "having", "similar", "issue", "until", "I", "get", "the", "correct", "CA", "file", "and", "particularly", "the", "Intermed", "NUMBER", "CA", "NUMBER", "I", "was", "use", "Let", "s", "Encrypt", "Authority", "X", "NUMBER", "which", "be", "retired", "X", "NUMBER", "be", "current", "NUMBER", "Hy", "I", "ve", "write", "scripts", "to", "build", "a", "Debian", "package", "NUMBER", "Fell", "free", "to", "merge", "this", "NUMBER", "Thnak", "you", "GV", "Would", "it", "be", "possible", "to", "implement", "the", "ability", "to", "delay", "symlinking", "to", "the", "new", "cert", "for", "x", "days", "invocations", "etc", "to", "allow", "time", "to", "update", "TLSA", "records", "before", "the", "cert", "be", "made", "active", "NUMBER", "Perhaps", "create", "a", "new", "symlink", "when", "the", "cert", "be", "created", "such", "as", "fullchain", "new", "NUMBER", "pem", "chain", "new", "NUMBER", "pem", "cert", "new", "NUMBER", "pem", "which", "would", "give", "a", "good", "way", "for", "the", "tlsa", "script", "to", "grab", "the", "hash", "and", "then", "after", "x", "invocations", "or", "days", "pull", "the", "symlink", "and", "re", "symlink", "fullchain", "NUMBER", "pem", "to", "the", "new", "cert", "NUMBER", "I", "was", "also", "thinking", "about", "this", "exactly", "for", "the", "same", "reason", "NUMBER", "But", "I", "think", "this", "be", "already", "possible", "with", "a", "hook", "script", "NUMBER", "In", "this", "case", "I", "would", "not", "let", "my", "web", "server", "use", "the", "cert", "directly", "from", "BASEDIR", "certs", "DOMAIN", "but", "from", "a", "different", "location", "NUMBER", "The", "hook", "script", "then", "creates", "an", "entry", "in", "etc", "cron", "NUMBER", "d", "that", "waits", "for", "the", "TLSA", "record", "TTL", "to", "run", "out", "and", "then", "copies", "the", "certificate", "to", "the", "new", "location", "and", "restarts", "the", "web", "server", "NUMBER", "Yeah", "that", "d", "certainly", "work", "but", "would", "require", "a", "separate", "hook", "script", "for", "each", "service", "NUMBER", "I", "was", "trying", "to", "keep", "the", "hook", "script", "generic", "well", "specific", "to", "the", "DNS", "server", "but", "generic", "in", "terms", "of", "the", "service", "it", "s", "support", "NUMBER", "Hi", "I", "write", "this", "small", "Dockerfile", "NUMBER", "Mb", "based", "on", "Alpine", "Linux", "NUMBER", "Do", "you", "want", "use", "it", "LINK", "docker", "LINK", "Busybox", "systems", "have", "an", "implementation", "of", "tr", "that", "doesn", "t", "support", "classes", "so", "tr", "upper", "lower", "doesn", "t", "do", "what", "the", "script", "expects", "NUMBER", "This", "stackexchange", "page", "LINK", "lists", "some", "alternative", "implementation", "suitable", "for", "Busybox", "NUMBER", "With", "this", "change", "and", "a", "deploy_cert", "hook", "to", "change", "the", "certs", "to", "DER", "format", "dehydrated", "works", "fine", "on", "openwrt", "thanks", "paour", "with", "our", "somewhat", "old", "BusyBox", "v", "NUMBER", "this", "works", "echo", "RoadRunner", "tr", "upper", "lower", "roadrunner", "There", "be", "a", "BusyBox", "configuration", "option", "CONFIG_FEATURE_TR_CLASSES", "y", "config", "FEATURE_TR_CLASSES", "bool", "Enable", "character", "classes", "such", "as", "upper", "default", "y", "depends", "on", "TR", "help", "Enable", "character", "classes", "enabling", "commands", "such", "as", "tr", "upper", "lower", "to", "convert", "input", "into", "lowercase", "NUMBER", "lukas", "NUMBER", "Though", "use", "Busybox", "the", "u", "option", "for", "mktemp", "be", "not", "support", "this", "solves", "the", "test", "for", "mktemp", "_mktemp", "u", "dev", "null", "NUMBER", "NUMBER", "_exiterr", "This", "script", "requires", "mktemp", "NUMBER", "which", "mktemp", "dev", "null", "NUMBER", "NUMBER", "_exiterr", "This", "script", "requires", "mktemp", "NUMBER", "Possibly", "you", "could", "use", "which", "to", "test", "for", "all", "command", "dependencies", "NUMBER", "Hi", "I", "have", "problem", "on", "this", "line", "letsencrypt", "NUMBER", "sh", "dehydrated", "line", "NUMBER", "unexpect", "argument", "to", "conditional", "binary", "operator", "And", "i", "change", "argument", "with", "add", "in", "http", "NUMBER", "dns", "NUMBER", "from", "CHALLENGETYPE", "http", "NUMBER", "dns", "NUMBER", "_exiterr", "Unknown", "challenge", "type", "CHALLENGETYPE", "NUMBER", "can", "not", "continue", "NUMBER", "to", "CHALLENGETYPE", "http", "NUMBER", "dns", "NUMBER", "_exiterr", "Unknown", "challenge", "type", "CHALLENGETYPE", "NUMBER", "can", "not", "continue", "NUMBER", "after", "that", "NUMBER", "i", "run", "NUMBER", "letsencrypt", "NUMBER", "sh", "config", "etc", "pki", "config", "NUMBER", "sh", "cron", "and", "i", "get", "error", "ERROR", "Challenge", "be", "invalid", "returned", "invalid", "result", "type", "http", "NUMBER", "status", "invalid", "error", "type", "urn", "acme", "error", "unauthorized", "Additional", "information", "cat", "proc", "version", "Linux", "version", "NUMBER", "NUMBER", "el", "NUMBER", "brewbuilder", "ls", "NUMBER", "bc", "NUMBER", "NUMBER", "build", "NUMBER", "redhat", "NUMBER", "com", "gcc", "version", "NUMBER", "NUMBER", "Red", "Hat", "NUMBER", "NUMBER", "NUMBER", "SMP", "Fri", "Jan", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "EST", "NUMBER", "uname", "a", "Linux", "NUMBER", "NUMBER", "el", "NUMBER", "NUMBER", "SMP", "Fri", "Jan", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "EST", "NUMBER", "i", "NUMBER", "i", "NUMBER", "i", "NUMBER", "GNU", "Linux", "cat", "etc", "release", "Red", "Hat", "Enterprise", "Linux", "Server", "release", "NUMBER", "Tikanga", "what", "should", "i", "do", "to", "fix", "it", "Thank", "you", "in", "advance", "I", "have", "update", "new", "script", "but", "still", "error", "like", "it", "I", "just", "had", "an", "issue", "after", "switching", "from", "dns", "based", "challenges", "to", "http", "see", "serverfault", "LINK", "certificate", "renewal", "switching", "from", "dns", "to", "http", "and", "le", "community", "LINK", "renewal", "switching", "from", "dns", "to", "http", "NUMBER", "u", "dennisschuerholz", "so", "I", "made", "this", "quick", "fix", "which", "allow", "me", "to", "use", "dehydrated", "again", "NUMBER", "The", "change", "in", "Line", "NUMBER", "old", "NUMBER", "new", "corresponds", "to", "the", "bigger", "answer", "as", "mention", "in", "the", "serverfault", "post", "NUMBER", "Indeed", "it", "may", "not", "longer", "be", "necessary", "as", "I", "implement", "a", "quick", "escape", "before", "extracting", "the", "challenges", "but", "I", "would", "leave", "it", "there", "just", "in", "case", "NUMBER", "While", "calling", "nfsn", "setup", "NUMBER", "sh", "from", "LINK", "nfsn", "NUMBER", "sh", "which", "uses", "dehydrated", "Submodule", "path", "dehydrated", "checked", "out", "NUMBER", "dc", "NUMBER", "cf", "NUMBER", "d", "NUMBER", "baeb", "NUMBER", "b", "NUMBER", "e", "NUMBER", "a", "NUMBER", "aa", "NUMBER", "d", "NUMBER", "Generating", "configuration", "NUMBER", "Generating", "fallback", "configuration", "NUMBER", "Installing", "hook", "script", "NUMBER", "Generating", "domains", "NUMBER", "txt", "NUMBER", "Performing", "initial", "run", "NUMBER", "INFO", "Using", "main", "config", "file", "home", "private", "lets", "nfsn", "NUMBER", "sh", "dehydrated", "config", "Generating", "account", "key", "NUMBER", "Registering", "account", "key", "with", "ACME", "server", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "reg", "Status", "NUMBER", "Details", "type", "urn", "acme", "error", "malformed", "detail", "Key", "too", "large", "NUMBER", "u", "NUMBER", "e", "NUMBER", "status", "NUMBER", "Error", "registering", "account", "key", "NUMBER", "See", "message", "above", "for", "more", "information", "NUMBER", "Retrying", "doesn", "t", "help", "the", "key", "be", "always", "NUMBER", "bytes", "too", "long", "NUMBER", "Reverting", "NUMBER", "dc", "NUMBER", "cf", "NUMBER", "d", "NUMBER", "baeb", "NUMBER", "b", "NUMBER", "e", "NUMBER", "a", "NUMBER", "aa", "NUMBER", "d", "NUMBER", "fix", "this", "NUMBER", "This", "be", "FreeBSD", "NUMBER", "RELEASE", "p", "NUMBER", "Same", "error", "here", "FreeBSD", "NUMBER", "RELEASE", "p", "NUMBER", "Same", "error", "here", "FreeBSD", "NUMBER", "NUMBER", "RELEASE", "p", "NUMBER", "Any", "plan", "for", "solving", "this", "What", "about", "revert", "the", "change", "ixdy", "point", "out", "I", "use", "the", "below", "code", "locally", "to", "keep", "the", "trim", "leading", "nulls", "logic", "in", "a", "more", "portable", "way", "including", "FreeBSD", "s", "sed", "which", "doesn", "t", "like", "x", "NUMBER", "or", "semicolons", "between", "commands", "or", "branch", "commands", "to", "not", "yet", "declared", "labels", "for", "that", "matter", "NUMBER", "If", "you", "think", "this", "be", "not", "too", "ugly", "to", "use", "let", "me", "know", "and", "I", "ll", "send", "it", "as", "a", "pull", "request", "NUMBER", "It", "requires", "od", "which", "seems", "to", "be", "effectively", "universally", "available", "and", "with", "t", "x", "NUMBER", "to", "avoid", "any", "endianness", "issue", "NUMBER", "urlbase", "NUMBER", "printf", "od", "t", "x", "NUMBER", "An", "v", "tr", "d", "t", "r", "n", "_sed", "e", "s", "NUMBER", "a", "NUMBER", "NUMBER", "g", "e", "s", "NUMBER", "NUMBER", "x", "NUMBER", "g", "openssl", "base", "NUMBER", "e", "tr", "d", "r", "n", "_sed", "e", "s", "g", "e", "y", "_", "Hi", "I", "try", "to", "create", "a", "certificate", "with", "DNS", "validation", "but", "it", "always", "fail", "on", "fullchain", "creation", "Challenge", "be", "valid", "Requesting", "certificate", "NUMBER", "Checking", "certificate", "NUMBER", "Done", "Creating", "fullchain", "NUMBER", "pem", "NUMBER", "unable", "to", "load", "certificate", "NUMBER", "error", "NUMBER", "D", "NUMBER", "B", "asn", "NUMBER", "encoding", "routines", "ASN", "NUMBER", "_get_object", "header", "too", "long", "crypto", "asn", "NUMBER", "asn", "NUMBER", "_lib", "NUMBER", "c", "NUMBER", "I", "take", "a", "look", "on", "the", "code", "and", "after", "some", "debug", "I", "see", "that", "the", "certificate", "that", "fail", "comes", "from", "LINK", "x", "NUMBER", "letsencrypt", "NUMBER", "org", "Note", "I", "m", "work", "with", "OpenSSL", "NUMBER", "NUMBER", "Aug", "NUMBER", "I", "tried", "wget", "NUMBER", "LINK", "x", "NUMBER", "letsencrypt", "NUMBER", "org", "mv", "index", "NUMBER", "html", "test", "NUMBER", "pem", "openssl", "x", "NUMBER", "in", "test", "NUMBER", "pem", "inform", "DER", "out", "test", "NUMBER", "pem", "outform", "PEM", "fail", "wget", "NUMBER", "LINK", "x", "NUMBER", "letsencrypt", "NUMBER", "org", "mv", "index", "NUMBER", "html", "test", "NUMBER", "pem", "openssl", "x", "NUMBER", "in", "test", "NUMBER", "pem", "inform", "DER", "out", "test", "NUMBER", "pem", "outform", "PEM", "success", "The", "only", "difference", "be", "the", "name", "of", "the", "output", "file", "which", "be", "different", "from", "the", "input", "file", "NUMBER", "On", "your", "bash", "script", "you", "do", "the", "same", "thing", "openssl", "x", "NUMBER", "in", "CERTDIR", "domain", "chain", "timestamp", "NUMBER", "pem", "inform", "DER", "out", "CERTDIR", "domain", "chain", "timestamp", "NUMBER", "pem", "outform", "PEM", "I", "try", "a", "rename", "before", "mv", "CERTDIR", "domain", "chain", "timestamp", "NUMBER", "pem", "CERTDIR", "domain", "tmp", "chain", "timestamp", "NUMBER", "pem", "openssl", "x", "NUMBER", "in", "CERTDIR", "domain", "tmp", "chain", "timestamp", "NUMBER", "pem", "inform", "DER", "out", "CERTDIR", "domain", "chain", "timestamp", "NUMBER", "pem", "outform", "PEM", "and", "it", "works", "NUMBER", "Can", "you", "fix", "it", "Thanks", "I", "get", "a", "fail", "now", "don", "t", "know", "if", "it", "s", "a", "consequence", "of", "the", "fix", "Processing", "xxx", "NUMBER", "xxx", "with", "alternative", "names", "www", "NUMBER", "xxx", "NUMBER", "xxx", "Signing", "domains", "NUMBER", "Creating", "new", "directory", "home", "xxx", "dehydrated", "certs", "xxx", "NUMBER", "xxx", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "xxx", "NUMBER", "xxx", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "authz", "Status", "NUMBER", "Details", "type", "urn", "acme", "error", "unauthorized", "detail", "No", "registration", "exists", "matching", "provide", "key", "status", "NUMBER", "EDIT", "Sorry", "just", "see", "LINK", "All", "seems", "good", "but", "DNS", "validation", "be", "very", "slow", "I", "could", "validate", "as", "soon", "as", "it", "s", "finished", "That", "s", "OK", "temporary", "get", "a", "fail", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "NUMBER", "J", "NUMBER", "S", "NUMBER", "KbKiWRmhBISoUyOdhQMxFQT", "NUMBER", "F", "NUMBER", "yY", "NUMBER", "TLdTPz", "NUMBER", "U", "NUMBER", "Status", "NUMBER", "Details", "type", "urn", "acme", "error", "malformed", "detail", "JWS", "verification", "error", "status", "NUMBER", "OVH", "hook", "executing", "clean_challenge", "http_request", "error", "in", "letsencrypt", "NUMBER", "sh", "But", "after", "a", "retry", "all", "seems", "good", "Thanks", "create", "necessary", "directories", "that", "do", "not", "exist", "with", "create", "dirs", "or", "cd", "dehydrated", "c", "ERROR", "WELLKNOWN", "directory", "doesn", "t", "exist", "please", "create", "data", "web", "public", "NUMBER", "well", "know", "acme", "challenge", "and", "set", "appropriate", "permissions", "NUMBER", "dehydrated", "c", "create", "dirs", "Processing", "example", "NUMBER", "com", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "Dec", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Longer", "than", "NUMBER", "days", "NUMBER", "Skipping", "renew", "OK", "no", "problem", "that", "s", "a", "valid", "consideration", "NUMBER", "We", "put", "it", "in", "our", "fork", "LINK", "NUMBER", "Howto", "set", "all", "certs", "on", "NUMBER", "to", "get", "a", "better", "score", "I", "run", "the", "script", "like", "NUMBER", "letsencrypt", "NUMBER", "sh", "c", "The", "output", "NUMBER", "Sent", "by", "server", "Fingerprint", "SHA", "NUMBER", "NUMBER", "bc", "NUMBER", "b", "NUMBER", "fb", "NUMBER", "fd", "NUMBER", "f", "NUMBER", "ee", "NUMBER", "d", "NUMBER", "a", "NUMBER", "c", "NUMBER", "d", "Pin", "SHA", "NUMBER", "NUMBER", "d", "NUMBER", "OB", "NUMBER", "KT", "NUMBER", "OBcUvgs", "NUMBER", "BiZrqjPhNyozJNNBBexbQ", "NUMBER", "Q", "NUMBER", "MA", "RSA", "NUMBER", "bits", "e", "NUMBER", "SHA", "NUMBER", "withRSA", "NUMBER", "Sent", "by", "server", "Let", "s", "Encrypt", "Authority", "X", "NUMBER", "Fingerprint", "SHA", "NUMBER", "e", "NUMBER", "a", "NUMBER", "b", "NUMBER", "b", "NUMBER", "d", "NUMBER", "b", "NUMBER", "d", "NUMBER", "efe", "NUMBER", "d", "NUMBER", "ccb", "Pin", "SHA", "NUMBER", "YLh", "NUMBER", "dUR", "NUMBER", "y", "NUMBER", "Kja", "NUMBER", "RrAn", "NUMBER", "JKnbQG", "uEtLMkBgFF", "NUMBER", "Fuihg", "RSA", "NUMBER", "bits", "e", "NUMBER", "SHA", "NUMBER", "withRSA", "NUMBER", "In", "trust", "store", "DST", "Root", "CA", "X", "NUMBER", "Self", "sign", "Fingerprint", "SHA", "NUMBER", "dac", "NUMBER", "f", "NUMBER", "d", "NUMBER", "f", "NUMBER", "df", "NUMBER", "fb", "NUMBER", "ca", "NUMBER", "ad", "NUMBER", "c", "NUMBER", "Pin", "SHA", "NUMBER", "Vjs", "NUMBER", "r", "NUMBER", "z", "NUMBER", "wjNcr", "NUMBER", "YKepWQboSIRi", "NUMBER", "WsWXhIMN", "eWys", "RSA", "NUMBER", "bits", "e", "NUMBER", "SHA", "NUMBER", "withRSA", "Weak", "or", "insecure", "signature", "but", "no", "impact", "on", "root", "certificate", "Thank", "you", "for", "the", "reply", "So", "how", "can", "I", "fix", "this", "not", "an", "expert", "user", "NUMBER", "Remove", "the", "NUMBER", "NUMBER", "bit", "ca", "keys", "How", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "NUMBER", "NUMBER", "Lukas", "Schauer", "notifications", "github", "NUMBER", "com", "The", "certificates", "generate", "by", "this", "script", "be", "use", "NUMBER", "bit", "RSA", "keys", "by", "default", "the", "NUMBER", "bit", "key", "ist", "the", "root", "CA", "key", "which", "was", "generate", "by", "Let", "s", "Encrypt", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "or", "mute", "the", "thread", "LINK", "auth", "AMDb", "NUMBER", "UlUb", "NUMBER", "yVylR", "NUMBER", "u", "NUMBER", "zA", "NUMBER", "tWc", "NUMBER", "hGFRHks", "NUMBER", "qqQU", "gaJpZM", "NUMBER", "J", "NUMBER", "lsz", "NUMBER", "Is", "it", "in", "the", "sh", "script", "NUMBER", "Is", "it", "possible", "to", "add", "rsa", "key", "size", "NUMBER", "venigo", "there", "be", "no", "further", "action", "required", "from", "your", "side", "or", "this", "repository", "owner", "everything", "be", "work", "as", "it", "should", "and", "as", "you", "expect", "NUMBER", "You", "can", "not", "change", "anything", "relate", "to", "the", "intermediate", "cert", "or", "ca", "cert", "NUMBER", "Google", "be", "your", "friend", "to", "get", "more", "knowledge", "on", "digital", "certs", "NUMBER", "Hi", "there", "It", "seems", "that", "dehydrated", "be", "generating", "JWA", "JWK", "thumbprints", "that", "don", "t", "match", "the", "specification", "NUMBER", "This", "came", "to", "my", "attention", "as", "part", "of", "this", "Let", "s", "Encrypt", "community", "forum", "thread", "LINK", "with", "keyauthorization", "for", "dns", "provide", "key", "authorization", "was", "incorrect", "solve", "NUMBER", "NUMBER", "Section", "NUMBER", "of", "RFC", "NUMBER", "LINK", "section", "NUMBER", "defines", "Base", "NUMBER", "urlUInt", "as", "The", "representation", "of", "a", "positive", "or", "zero", "integer", "value", "as", "the", "base", "NUMBER", "url", "encoding", "of", "the", "value", "s", "unsigned", "big", "endian", "representation", "as", "an", "octet", "sequence", "NUMBER", "The", "octet", "sequence", "MUST", "utilize", "the", "minimum", "number", "of", "octets", "needed", "to", "represent", "the", "value", "NUMBER", "Zero", "be", "represented", "as", "BASE", "NUMBER", "URL", "single", "zero", "valued", "octet", "which", "be", "AA", "NUMBER", "Further", "Section", "NUMBER", "LINK", "section", "NUMBER", "indicates", "that", "all", "of", "the", "RSA", "key", "parameters", "be", "expressed", "as", "Base", "NUMBER", "urlUInt", "NUMBER", "It", "s", "not", "immediately", "obvious", "but", "the", "portion", "of", "the", "Base", "NUMBER", "urlUInt", "description", "that", "mandates", "that", "the", "sequence", "use", "the", "minimum", "number", "of", "octets", "means", "that", "leading", "zero", "s", "should", "be", "remove", "NUMBER", "You", "can", "see", "how", "Go", "Jose", "implement", "this", "LINK", "jose", "blob", "master", "encoding", "NUMBER", "go", "L", "NUMBER", "L", "NUMBER", "as", "one", "example", "of", "a", "complaint", "implementation", "NUMBER", "It", "doesn", "t", "look", "to", "me", "LINK", "L", "NUMBER", "that", "dehydrated", "strips", "leading", "zeroes", "presently", "to", "match", "the", "specification", "NUMBER", "I", "believe", "this", "might", "be", "the", "root", "cause", "of", "Issue", "NUMBER", "and", "be", "likely", "to", "cause", "further", "problem", "down", "the", "road", "for", "users", "that", "hit", "this", "corner", "case", "NUMBER", "Unfortunately", "I", "don", "t", "work", "with", "bash", "or", "dehydrated", "enough", "to", "propose", "a", "patch", "but", "hopefully", "it", "won", "t", "be", "difficult", "to", "address", "Let", "me", "know", "if", "I", "can", "provide", "any", "other", "information", "NUMBER", "lukas", "NUMBER", "I", "m", "afraid", "I", "m", "not", "a", "user", "of", "dehydrated", "and", "don", "t", "have", "a", "reproduction", "case", "NUMBER", "Apologies", "NUMBER", "Hi", "Lukas", "nice", "script", "NUMBER", "BTW", "I", "test", "it", "with", "the", "staging", "CA", "before", "going", "to", "real", "life", "NUMBER", "Path", "to", "certificate", "authority", "default", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "CA", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "CA_PROD", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "CA_TEST", "LINK", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "CA", "CA_TEST", "Duplicate", "of", "NUMBER", "Why", "dehydrated", "why", "not", "PopCerts", "or", "something", "Does", "not", "the", "image", "explain", "it", "wink", "I", "write", "some", "quick", "Debian", "packaging", "NUMBER", "This", "works", "but", "there", "be", "a", "couple", "issue", "NUMBER", "Running", "it", "as", "an", "unpriviliged", "user", "requires", "you", "to", "either", "modify", "the", "config", "file", "or", "chown", "var", "lib", "dehydrated", "NUMBER", "NUMBER", "Docs", "on", "how", "to", "properly", "get", "stuff", "work", "be", "miss", "but", "it", "be", "a", "little", "out", "of", "my", "scope", "right", "now", "NUMBER", "To", "build", "on", "ubuntu", "bash", "sudo", "apt", "get", "install", "build", "essential", "devscripts", "debhelper", "fakeroot", "fakeroot", "debian", "rules", "binary", "Woops", "NUMBER", "Well", "then", "On", "Wed", "Sep", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Lukas", "Schauer", "notifications", "github", "NUMBER", "com", "write", "There", "already", "be", "a", "package", "even", "in", "the", "debian", "repository", "LINK", "backports", "letsencrypt", "NUMBER", "sh", "I", "contacted", "one", "of", "the", "package", "maintainers", "about", "renaming", "the", "package", "and", "at", "some", "point", "I", "ll", "probably", "merge", "the", "debian", "control", "rules", "whatever", "file", "into", "this", "repository", "NUMBER", "Thanks", "anyway", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "or", "mute", "the", "thread", "LINK", "auth", "ABNEhpuyKk", "NUMBER", "Rz", "NUMBER", "FgTPqfBI", "NUMBER", "Yx", "NUMBER", "xw", "NUMBER", "Ncaks", "NUMBER", "qp", "NUMBER", "IcgaJpZM", "NUMBER", "J", "NUMBER", "ncg", "NUMBER", "Using", "hooks", "with", "letsencrypt", "NUMBER", "sh", "be", "a", "really", "useful", "thing", "In", "a", "more", "complex", "scenario", "one", "starts", "to", "have", "multiple", "hooks", "deploying", "challenge", "to", "the", "web", "server", "depoloying", "certs", "restarting", "server", "NUMBER", "Handling", "this", "in", "one", "big", "script", "can", "become", "confusing", "or", "even", "unmaintainable", "NUMBER", "Idea", "Run", "multiple", "scripts", "in", "a", "directory", "like", "with", "the", "config", "directory", "NUMBER", "In", "fact", "my", "current", "main", "hook", "script", "has", "a", "call", "to", "run", "parts", "in", "it", "to", "run", "the", "scripts", "in", "a", "directory", "NUMBER", "But", "maybe", "this", "wants", "to", "be", "integrated", "I", "be", "unsure", "on", "how", "this", "relate", "to", "the", "hook", "chain", "feature", "and", "how", "this", "works", "out", "for", "checking", "that", "a", "hook", "be", "available", "to", "deploy", "dns", "NUMBER", "challenges", "NUMBER", "This", "should", "be", "discussed", "if", "there", "be", "interest", "in", "including", "this", "feature", "NUMBER", "Well", "why", "do", "you", "have", "a", "conf", "NUMBER", "d", "then", "The", "admin", "could", "have", "write", "the", "for", "i", "in", "conf", "NUMBER", "d", "NUMBER", "conf", "do", "source", "i", "do", "into", "the", "main", "conf", "also", "Well", "I", "think", "hook", "NUMBER", "d", "be", "most", "interesting", "to", "packagers", "as", "well", "NUMBER", "See", "for", "example", "LINK", "And", "it", "might", "be", "helpful", "to", "have", "a", "consistent", "hook", "NUMBER", "d", "experience", "especially", "concerning", "the", "chain", "feature", "of", "hooks", "NUMBER", "Just", "to", "add", "my", "tuppence", "worth", "I", "m", "use", "a", "cloudflare", "hook", "for", "dns", "NUMBER", "verification", "but", "also", "need", "to", "restart", "my", "nginx", "server", "once", "it", "s", "successful", "NUMBER", "I", "don", "t", "want", "to", "pollute", "the", "cloudflare", "hook", "with", "this", "because", "I", "have", "many", "machines", "and", "not", "all", "of", "them", "run", "an", "nginx", "instance", "but", "all", "of", "them", "use", "cloudflare", "for", "verification", "NUMBER", "Having", "a", "directory", "of", "hooks", "would", "make", "this", "a", "lot", "easier", "Or", "just", "the", "ability", "to", "have", "multiple", "hooks", "be", "this", "possible", "I", "made", "a", "wiki", "page", "showing", "how", "to", "use", "multiple", "hooks", "LINK", "Using", "multiple", "hooks", "To", "us", "it", "be", "very", "useful", "to", "know", "when", "a", "challenge", "has", "fail", "we", "use", "the", "dns", "NUMBER", "method", "and", "sometimes", "it", "fail", "because", "TXT", "DNS", "record", "has", "not", "propagated", "yet", "so", "I", "created", "the", "invalid_challenge", "hook", "NUMBER", "This", "way", "we", "be", "aware", "and", "can", "act", "accordingly", "NUMBER", "I", "just", "add", "a", "hook", "chain", "example", "that", "involves", "an", "invalid", "challenge", "so", "the", "new", "hook", "gets", "call", "NUMBER", "If", "you", "think", "it", "be", "improper", "I", "will", "remove", "that", "NUMBER", "Challenge", "be", "invalid", "HOOK", "invalid_challenge", "lukas", "NUMBER", "im", "the_reason", "Oops", "you", "re", "right", "sorry", "bad", "place", "for", "that", "example", "NUMBER", "I", "guess", "the", "example", "in", "examples", "hook", "NUMBER", "sh", "should", "be", "enough", "NUMBER", "I", "also", "add", "another", "hook", "request_failure", "in", "case", "the", "curl", "call", "should", "fail", "for", "some", "reason", "NUMBER", "The", "http_request", "function", "already", "has", "a", "hook", "call", "clean_challenge", "but", "it", "be", "not", "exclusive", "for", "the", "request", "failure", "as", "clean_challenge", "be", "also", "call", "from", "other", "places", "where", "the", "request", "was", "ok", "NUMBER", "Up", "until", "now", "we", "ve", "get", "some", "NUMBER", "X", "code", "so", "it", "s", "good", "to", "us", "to", "know", "when", "this", "happens", "and", "in", "case", "failure", "extend", "in", "time", "to", "be", "aware", "that", "something", "be", "not", "work", "good", "probably", "on", "the", "client", "s", "server", "side", "NUMBER", "Sure", "I", "ll", "tidy", "up", "code", "and", "create", "separate", "PRs", "NUMBER", "I", "m", "trying", "to", "use", "letsencrypt", "NUMBER", "sh", "to", "generate", "certificates", "but", "I", "m", "get", "an", "error", "always", "NUMBER", "I", "initially", "use", "Debian", "packaged", "version", "but", "I", "then", "also", "tried", "the", "version", "from", "git", "NUMBER", "Error", "be", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "CENSORED", "CENCORED", "Status", "NUMBER", "Details", "type", "urn", "acme", "error", "malformed", "detail", "Unable", "to", "update", "challenge", "Provided", "key", "authorization", "was", "incorrect", "status", "NUMBER", "And", "Apache", "logs", "show", "no", "attempt", "to", "access", "NUMBER", "well", "know", "acme", "challenge", "Since", "I", "get", "it", "work", "with", "official", "cerbot", "client", "I", "will", "not", "be", "able", "to", "do", "additional", "verification", "NUMBER", "Just", "for", "information", "NUMBER", "So", "people", "can", "pull", "from", "here", "confidently", "NUMBER", "work", "on", "a", "PR", "as", "we", "speak", "NUMBER", "Currently", "the", "license", "agreement", "check", "fail", "NUMBER", "I", "don", "t", "think", "I", "can", "tag", "via", "PR", "anyway", "and", "all", "I", "would", "do", "be", "edit", "the", "CHANGELOG", "to", "include", "everything", "change", "thus", "far", "which", "I", "m", "not", "sure", "I", "want", "to", "do", "not", "knowing", "the", "state", "of", "affairs", "NUMBER", "Your", "call", "NUMBER", "I", "ve", "forked", "already", "so", "I", "m", "cool", "with", "it", "either", "way", "NUMBER", "Thanks", "for", "putting", "this", "together", "BTW", "NUMBER", "I", "notice", "that", "when", "I", "wanted", "to", "revoke", "a", "certificate", "it", "would", "complain", "about", "either", "not", "having", "a", "NUMBER", "well", "know", "directory", "to", "perform", "a", "http", "challenge", "NUMBER", "Using", "dns", "NUMBER", "it", "would", "say", "there", "isn", "t", "a", "hook", "given", "NUMBER", "Neither", "of", "these", "be", "required", "to", "revoke", "a", "certificate", "so", "for", "the", "config", "check", "it", "should", "short", "circuit", "out", "of", "the", "method", "NUMBER", "I", "had", "a", "problem", "use", "letencrypt", "NUMBER", "sh", "under", "pfsense", "FreeBsd", "NUMBER", "Finally", "i", "fix", "it", "with", "a", "grep", "v", "on", "commonName", "NUMBER", "My", "error", "message", "NUMBER", "Requesting", "challenge", "for", "example", "NUMBER", "com", "NUMBER", "Responding", "to", "challenge", "for", "example", "NUMBER", "com", "NUMBER", "Challenge", "be", "valid", "Requesting", "certificate", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "cert", "Status", "NUMBER", "Details", "type", "urn", "acme", "error", "malformed", "detail", "Error", "creating", "new", "cert", "policy", "forbids", "issue", "for", "common", "name", "eg", "your", "name", "status", "NUMBER", "openssl", "version", "d", "OPENSSLDIR", "etc", "ssl", "cat", "etc", "ssl", "openssl", "NUMBER", "cnf", "grep", "commonName", "commonName", "Common", "Name", "eg", "YOUR", "name", "Coded", "to", "your", "code", "standards", "shellchecked", "This", "will", "allow", "for", "the", "challenge", "to", "be", "retied", "for", "upto", "NUMBER", "times", "when", "it", "fail", "returns", "invalid", "Allot", "of", "our", "servers", "be", "via", "cdn", "load", "balancers", "and", "they", "do", "not", "always", "sync", "quick", "enough", "so", "will", "fail", "the", "first", "X", "attempts", "NUMBER", "This", "also", "allows", "your", "script", "to", "have", "resiliency", "with", "bad", "connections", "timeouts", "NUMBER", "letsencrypt", "NUMBER", "sh", "cron", "force", "retry", "Processing", "test", "NUMBER", "extremeshok", "NUMBER", "com", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "Nov", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Longer", "than", "NUMBER", "days", "NUMBER", "Ignoring", "because", "renew", "was", "forced", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "test", "NUMBER", "extremeshok", "NUMBER", "com", "NUMBER", "Responding", "to", "challenge", "for", "test", "NUMBER", "extremeshok", "NUMBER", "com", "NUMBER", "attempt", "NUMBER", "Invalid", "Requesting", "challenge", "for", "test", "NUMBER", "extremeshok", "NUMBER", "com", "NUMBER", "Responding", "to", "challenge", "for", "test", "NUMBER", "extremeshok", "NUMBER", "com", "NUMBER", "attempt", "NUMBER", "Challenge", "be", "valid", "Requesting", "certificate", "NUMBER", "Checking", "certificate", "NUMBER", "Done", "Creating", "fullchain", "NUMBER", "pem", "NUMBER", "Done", "Update", "to", "pull", "LINK", "Retries", "reduce", "the", "load", "NUMBER", "Here", "be", "the", "specific", "use", "case", "All", "NUMBER", "servers", "vm", "s", "be", "managed", "setup", "by", "idempotent", "configuration", "management", "NUMBER", "Spanning", "multiple", "data", "centers", "and", "countries", "NUMBER", "We", "run", "a", "single", "node", "aka", "ssl", "NUMBER", "domain", "NUMBER", "com", "which", "be", "responsible", "for", "all", "ssl", "deployments", "for", "all", "the", "servers", "NUMBER", "ie", "NUMBER", "All", "NUMBER", "well", "know", "acme", "challenge", "http", "request", "from", "all", "the", "NUMBER", "servers", "be", "proxied", "to", "the", "ssl", "NUMBER", "domain", "NUMBER", "com", "server", "NUMBER", "Under", "real", "world", "situations", "on", "production", "servers", "there", "be", "timeouts", "for", "the", "length", "the", "proxy", "request", "can", "take", "NUMBER", "Letsencrypt", "also", "has", "timeouts", "for", "the", "validation", "response", "NUMBER", "So", "fact", "be", "they", "can", "and", "will", "fail", "to", "validate", "because", "they", "timed", "out", "NUMBER", "Letsencrypt", "do", "and", "will", "rate", "limit", "the", "number", "for", "validation", "attempts", "for", "a", "domain", "so", "it", "provides", "no", "more", "load", "than", "the", "current", "script", "NUMBER", "Also", "if", "you", "look", "at", "the", "code", "I", "specifically", "slow", "down", "the", "retries", "by", "add", "a", "random", "NUMBER", "NUMBER", "second", "pause", "between", "each", "retry", "NUMBER", "I", "can", "understand", "your", "issue", "with", "someone", "setting", "NUMBER", "retries", "but", "this", "be", "virtually", "no", "different", "to", "them", "run", "the", "script", "NUMBER", "times", "in", "a", "loop", "until", "the", "certificate", "has", "generate", "NUMBER", "The", "major", "difference", "be", "the", "retries", "will", "have", "a", "far", "lower", "impact", "on", "the", "lets", "encrypt", "servers", "NUMBER", "Currently", "If", "you", "be", "creating", "a", "certificate", "with", "NUMBER", "sub", "domains", "and", "only", "one", "of", "the", "NUMBER", "sub", "domains", "fail", "ie", "number", "NUMBER", "validation", "you", "be", "forced", "to", "rerun", "the", "script", "and", "re", "validate", "all", "the", "sub", "domains", "which", "were", "already", "validated", "NUMBER", "Thus", "you", "increase", "the", "load", "NUMBER", "more", "times", "NUMBER", "With", "my", "retries", "only", "the", "fail", "validation", "will", "be", "retried", "thus", "you", "only", "have", "NUMBER", "extra", "validation", "NUMBER", "If", "you", "be", "concerned", "with", "the", "user", "setting", "a", "limit", "of", "NUMBER", "I", "have", "limited", "the", "retries", "to", "NUMBER", "In", "real", "world", "production", "all", "be", "verify", "by", "the", "NUMBER", "attempt", "NUMBER", "As", "to", "the", "propose", "add", "a", "hook", "script", "there", "be", "no", "place", "in", "the", "code", "for", "a", "hook", "after", "the", "json", "verification", "has", "be", "generate", "and", "before", "the", "verification", "has", "be", "validated", "NUMBER", "Not", "to", "mention", "the", "limitation", "with", "the", "hook", "scripts", "as", "they", "cant", "do", "retries", "for", "a", "timeout", "NUMBER", "Forgot", "to", "remove", "the", "comments", "NUMBER", "With", "regards", "to", "the", "duplicate", "code", "I", "can", "convert", "it", "to", "a", "do", "while", "loop", "instead", "of", "a", "while", "do", "loop", "or", "make", "a", "function", "call", "Coded", "to", "your", "code", "standards", "shellchecked", "This", "will", "allow", "for", "the", "challenge", "to", "be", "retied", "for", "X", "times", "when", "it", "fail", "returns", "invalid", "Allot", "of", "our", "servers", "be", "via", "cdn", "load", "balancers", "and", "they", "do", "not", "always", "sync", "quick", "enough", "so", "will", "fail", "the", "first", "X", "attempts", "NUMBER", "This", "also", "allows", "your", "script", "to", "have", "resiliency", "with", "bad", "connections", "timeouts", "NUMBER", "letsencrypt", "NUMBER", "sh", "cron", "force", "retries", "NUMBER", "Processing", "test", "NUMBER", "extremeshok", "NUMBER", "com", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "Nov", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Longer", "than", "NUMBER", "days", "NUMBER", "Ignoring", "because", "renew", "was", "forced", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "test", "NUMBER", "extremeshok", "NUMBER", "com", "NUMBER", "Responding", "to", "challenge", "for", "test", "NUMBER", "extremeshok", "NUMBER", "com", "NUMBER", "attempt", "NUMBER", "Invalid", "Requesting", "challenge", "for", "test", "NUMBER", "extremeshok", "NUMBER", "com", "NUMBER", "Responding", "to", "challenge", "for", "test", "NUMBER", "extremeshok", "NUMBER", "com", "NUMBER", "attempt", "NUMBER", "Challenge", "be", "valid", "Requesting", "certificate", "NUMBER", "Checking", "certificate", "NUMBER", "Done", "Creating", "fullchain", "NUMBER", "pem", "NUMBER", "Done", "Not", "sure", "how", "extra", "retries", "would", "help", "this", "would", "only", "overload", "the", "servers", "NUMBER", "if", "a", "challange", "fail", "it", "s", "usually", "a", "problem", "on", "the", "client", "s", "side", "NUMBER", "I", "ll", "admit", "though", "I", "had", "only", "one", "odd", "case", "where", "retries", "helped", "it", "ended", "up", "that", "when", "I", "turned", "off", "HTTPS", "redirect", "it", "would", "work", "every", "time", "with", "the", "redirection", "it", "worked", "only", "every", "NUMBER", "NUMBER", "attempts", "no", "problem", "with", "the", "text", "CA", "only", "with", "the", "production", "NUMBER", "But", "this", "problem", "has", "since", "be", "report", "and", "apparently", "fix", "NUMBER", "comment", "submitted", "to", "early", "Actually", "retries", "reduce", "the", "load", "NUMBER", "Here", "be", "the", "specific", "use", "case", "All", "NUMBER", "servers", "vm", "s", "be", "managed", "setup", "by", "idempotent", "configuration", "management", "NUMBER", "Spanning", "multiple", "data", "centers", "and", "countries", "NUMBER", "We", "run", "a", "single", "node", "aka", "ssl", "NUMBER", "domain", "NUMBER", "com", "which", "be", "responsible", "for", "all", "ssl", "deployments", "for", "all", "the", "servers", "NUMBER", "ie", "NUMBER", "All", "NUMBER", "well", "know", "acme", "challenge", "http", "request", "from", "all", "the", "NUMBER", "servers", "be", "proxied", "to", "the", "ssl", "NUMBER", "domain", "NUMBER", "com", "server", "NUMBER", "Under", "real", "world", "situations", "on", "production", "servers", "there", "be", "timeouts", "for", "the", "length", "the", "proxy", "request", "can", "take", "NUMBER", "Letsencrypt", "also", "has", "timeouts", "for", "the", "validation", "response", "NUMBER", "So", "fact", "be", "they", "can", "and", "will", "fail", "to", "validate", "because", "they", "timed", "out", "NUMBER", "Letsencrypt", "do", "and", "will", "rate", "limit", "the", "number", "for", "validation", "attempts", "for", "a", "domain", "so", "it", "provides", "no", "more", "load", "than", "the", "current", "script", "NUMBER", "Also", "if", "you", "look", "at", "the", "code", "I", "specifically", "slow", "down", "the", "retries", "by", "add", "a", "random", "NUMBER", "NUMBER", "second", "pause", "between", "each", "retry", "NUMBER", "I", "can", "understand", "your", "issue", "with", "someone", "setting", "NUMBER", "retries", "but", "this", "be", "virtually", "no", "different", "to", "them", "run", "the", "script", "NUMBER", "times", "in", "a", "loop", "until", "the", "certificate", "has", "generate", "NUMBER", "The", "major", "difference", "be", "the", "retries", "will", "have", "a", "far", "lower", "impact", "on", "the", "lets", "encrypt", "servers", "NUMBER", "Currently", "If", "you", "be", "creating", "a", "certificate", "with", "NUMBER", "sub", "domains", "and", "only", "one", "of", "the", "NUMBER", "sub", "domains", "fail", "ie", "number", "NUMBER", "validation", "you", "be", "forced", "to", "rerun", "the", "script", "and", "re", "validate", "all", "the", "sub", "domains", "which", "were", "already", "validated", "NUMBER", "Thus", "you", "increase", "the", "load", "NUMBER", "more", "times", "NUMBER", "With", "my", "retries", "only", "the", "fail", "validation", "will", "be", "retried", "thus", "you", "only", "have", "NUMBER", "extra", "validation", "NUMBER", "If", "you", "be", "concerned", "with", "the", "user", "setting", "a", "limit", "of", "NUMBER", "I", "have", "add", "another", "pull", "request", "which", "limits", "retries", "to", "NUMBER", "In", "real", "world", "production", "all", "be", "verify", "by", "the", "NUMBER", "attempt", "NUMBER", "As", "to", "the", "propose", "add", "a", "hook", "script", "there", "be", "no", "place", "in", "the", "code", "for", "a", "hook", "after", "the", "json", "verification", "has", "be", "generate", "and", "before", "the", "verification", "has", "be", "validated", "NUMBER", "Not", "to", "mention", "the", "limitation", "with", "the", "hook", "scripts", "as", "they", "cant", "do", "retries", "for", "a", "timeout", "NUMBER", "Forgot", "to", "remove", "the", "comments", "NUMBER", "With", "regards", "to", "the", "duplicate", "code", "I", "can", "convert", "it", "to", "a", "do", "while", "loop", "but", "did", "not", "want", "to", "change", "your", "logic", "NUMBER", "Otherwise", "one", "could", "make", "a", "function", "call", "NUMBER", "With", "regards", "to", "the", "deploy", "hook", "ill", "give", "you", "a", "real", "world", "example", "NUMBER", "Servers", "located", "in", "mainland", "china", "have", "around", "a", "NUMBER", "msec", "lag", "when", "connection", "to", "our", "usa", "datacenter", "NUMBER", "Even", "if", "one", "uses", "the", "hook", "to", "check", "the", "file", "be", "accessible", "NUMBER", "Letsencrypt", "can", "and", "do", "timeout", "fail", "NUMBER", "Another", "issue", "iis", "with", "geolocated", "servers", "and", "loadbalanced", "round", "robin", "dns", "NUMBER", "Its", "very", "difficult", "to", "predict", "the", "path", "route", "letsencrypt", "will", "use", "to", "communicate", "NUMBER", "One", "sub", "domain", "can", "be", "NUMBER", "locations", "NUMBER", "These", "all", "then", "need", "to", "proxy", "the", "request", "back", "NUMBER", "btw", "thanks", "for", "the", "script", "and", "feedback", "Even", "if", "one", "uses", "the", "hook", "to", "check", "the", "file", "be", "accessible", "NUMBER", "Letsencrypt", "can", "and", "do", "timeout", "fail", "NUMBER", "I", "don", "t", "understand", "this", "NUMBER", "You", "could", "e", "NUMBER", "g", "NUMBER", "use", "curl", "with", "with", "NUMBER", "retries", "and", "the", "code", "would", "block", "the", "check", "until", "curl", "terminates", "NUMBER", "You", "could", "also", "call", "sleep", "NUMBER", "to", "give", "your", "infrastructure", "NUMBER", "seconds", "to", "deploy", "the", "challenges", "NUMBER", "shoeper", "the", "validation", "be", "do", "via", "letscrypts", "own", "network", "NUMBER", "A", "curl", "would", "be", "do", "on", "the", "machine", "run", "the", "script", "aka", "your", "network", "NUMBER", "So", "even", "if", "the", "script", "can", "access", "the", "url", "do", "not", "mean", "letsencrypt", "will", "be", "able", "to", "NUMBER", "We", "do", "not", "deploy", "everything", "be", "do", "via", "nginx", "proxy", "and", "redirections", "NUMBER", "Letsencrypt", "the", "proxy", "and", "the", "ssl", "server", "can", "all", "timeout", "or", "fail", "a", "single", "request", "NUMBER", "BTW", "this", "be", "not", "theoretical", "from", "actual", "production", "usage", "over", "many", "months", "NUMBER", "This", "has", "be", "the", "only", "reliable", "and", "consistent", "method", "NUMBER", "If", "you", "have", "NUMBER", "domains", "NUMBER", "servers", "in", "more", "than", "NUMBER", "countries", "then", "you", "will", "understand", "why", "this", "be", "required", "NUMBER", "By", "the", "way", "once", "I", "get", "NUMBER", "x", "error", "code", "from", "ACME", "server", "on", "validation", "check", "request", "so", "at", "least", "curl", "with", "some", "retries", "looks", "like", "a", "good", "idea", "NUMBER", "lukas", "NUMBER", "The", "file", "be", "instantly", "deployed", "as", "they", "be", "on", "the", "ssl", "NUMBER", "domain", "NUMBER", "com", "server", "I", "dont", "think", "you", "understood", "what", "I", "write", "NUMBER", "We", "do", "not", "deploy", "everything", "be", "do", "via", "nginx", "proxy", "and", "redirections", "NUMBER", "Letsencrypt", "the", "proxy", "and", "the", "ssl", "server", "can", "all", "timeout", "or", "fail", "a", "single", "request", "NUMBER", "Assume", "you", "want", "to", "create", "certificates", "for", "some", "other", "service", "like", "jabber", "server", "NUMBER", "web", "server", "be", "turned", "off", "by", "default", "there", "and", "needs", "to", "be", "start", "_only_", "for", "letsencrypt", "auth", "NUMBER", "So", "some", "hooks", "for", "that", "would", "be", "nice", "NUMBER", "Right", "now", "I", "m", "doing", "it", "in", "a", "bit", "hacky", "way", "case", "NUMBER", "in", "deploy_cert", "NUMBER", "cat", "FULLCHAINCERT", "PRIVKEY", "etc", "openssl", "jabber", "NUMBER", "example", "NUMBER", "com", "NUMBER", "pem", "sbin", "service", "ejabberd", "reload", "sbin", "service", "lighttpd", "stop", "clean_challenge", "sbin", "service", "lighttpd", "stop", "deploy_challenge", "sbin", "service", "lighttpd", "start", "clean_challenge", "be", "not", "always", "call", "AFAIK", "and", "deploy_cert", "be", "call", "even", "if", "certificate", "did", "not", "change", "so", "these", "hooks", "be", "not", "best", "for", "such", "job", "NUMBER", "I", "m", "make", "preparations", "to", "do", "something", "very", "similar", "but", "with", "nginx", "instead", "NUMBER", "According", "to", "the", "documentation", "in", "docs", "examples", "hook", "NUMBER", "sh", "or", "at", "least", "what", "I", "make", "out", "of", "it", "the", "clean_challenge", "hook", "only", "gets", "call", "when", "there", "be", "something", "to", "clean", "NUMBER", "This", "can", "explain", "what", "you", "be", "experience", "when", "you", "say", "that", "it", "be", "not", "always", "call", "NUMBER", "For", "deploy_cert", "my", "understanding", "be", "that", "it", "only", "gets", "call", "when", "a", "new", "certificate", "has", "be", "produced", "retrieved", "NUMBER", "If", "deploy_cert", "always", "gets", "call", "for", "you", "then", "that", "sounds", "like", "either", "a", "bug", "inside", "the", "letsencrypt", "NUMBER", "sh", "script", "itself", "or", "an", "error", "in", "the", "documentation", "or", "something", "be", "wrong", "in", "your", "setup", "although", "the", "snippet", "you", "pasted", "looks", "good", "NUMBER", "For", "me", "in", "another", "setup", "that", "I", "have", "also", "an", "nginx", "webserver", "but", "one", "that", "be", "always", "run", "and", "needs", "certificates", "for", "itself", "the", "deploy_cert", "hook", "only", "gets", "call", "as", "describe", "in", "the", "documentation", "when", "a", "new", "certificate", "has", "be", "produced", "retrieved", "NUMBER", "Anyhow", "as", "I", "said", "I", "m", "make", "preparations", "write", "a", "hook", "script", "to", "do", "something", "very", "similar", "and", "as", "it", "be", "not", "ready", "yet", "I", "have", "yet", "to", "test", "it", "out", "against", "the", "LE", "staging", "server", "NUMBER", "What", "I", "m", "going", "to", "do", "be", "start", "the", "nginx", "server", "in", "deploy_challenge", "and", "then", "in", "deploy_cert", "I", "m", "stopping", "the", "nginx", "server", "and", "copying", "the", "new", "certificates", "to", "where", "they", "need", "to", "be", "NUMBER", "Provided", "the", "documentation", "be", "correct", "and", "my", "understanding", "of", "it", "be", "also", "correct", "I", "should", "have", "no", "problem", "with", "this", "and", "also", "not", "need", "any", "of", "the", "other", "hooks", "only", "the", "two", "hooks", "I", "mention", "NUMBER", "Edit", "I", "have", "test", "it", "and", "it", "be", "work", "as", "expected", "NUMBER", "I", "be", "however", "thinking", "of", "use", "clean_challenge", "to", "stop", "the", "webserver", "instead", "of", "doing", "it", "in", "deploy_cert", "since", "clean_challenge", "seems", "to", "be", "the", "better", "choice", "as", "it", "be", "always", "supposed", "to", "be", "call", "whether", "the", "challenge", "validation", "be", "successful", "or", "not", "NUMBER", "I", "NUMBER", "e", "NUMBER", "there", "be", "need", "in", "two", "hooks", "Before", "any", "update", "operation", "to", "start", "webserver", "After", "any", "update", "operation", "to", "stop", "webserver", "Last", "hook", "can", "be", "use", "for", "webserver", "reload", "in", "common", "HTTPS", "tasks", "as", "request", "in", "NUMBER", "NUMBER", "It", "would", "be", "great", "to", "have", "one", "hook", "run", "directly", "after", "starting", "dehydrated", "to", "do", "some", "initialization", "e", "NUMBER", "g", "NUMBER", "starting", "the", "web", "server", "or", "enabling", "firewall", "rules", "on", "systems", "which", "do", "not", "allow", "incoming", "connections", "on", "port", "NUMBER", "or", "outgoing", "connections", "on", "port", "NUMBER", "and", "NUMBER", "NUMBER", "Additionally", "one", "hook", "should", "be", "run", "just", "before", "exiting", "dehydrated", "to", "clean", "everything", "up", "regardless", "of", "new", "certificates", "be", "deployed", "or", "an", "error", "occured", "NUMBER", "So", "far", "I", "haven", "t", "seen", "any", "use", "case", "outlined", "here", "where", "the", "exist", "hooks", "would", "not", "suffice", "NUMBER", "deploy_challenge", "works", "for", "starting", "a", "web", "daemon", "and", "or", "altering", "firewall", "rules", "NUMBER", "clean_challenge", "works", "for", "killing", "the", "web", "daemon", "and", "or", "re", "altering", "firewall", "rules", "NUMBER", "deploy_cert", "works", "for", "write", "out", "the", "cert", "in", "whatever", "format", "be", "required", "and", "reloading", "whatever", "daemon", "needs", "to", "know", "about", "the", "new", "cert", "NUMBER", "If", "you", "expect", "to", "be", "doing", "a", "lot", "of", "challenges", "and", "don", "t", "want", "to", "be", "continually", "starting", "and", "stopping", "the", "daemon", "it", "seems", "trivial", "to", "write", "a", "script", "which", "do", "the", "needful", "before", "and", "after", "and", "simply", "calls", "dehydrated", "in", "the", "middle", "NUMBER", "I", "agree", "that", "deploy_cert", "be", "sufficient", "for", "restarting", "the", "daemons", "NUMBER", "However", "setting", "up", "firewall", "rules", "in", "deploy_", "and", "clean_challenge", "be", "not", "sufficient", "for", "systems", "which", "normally", "do", "not", "allow", "outgoing", "traffic", "on", "port", "NUMBER", "and", "NUMBER", "Having", "a", "generic", "initialization", "and", "cleanup", "hook", "would", "solve", "this", "problem", "and", "might", "be", "helpful", "in", "other", "use", "cases", "NUMBER", "Of", "course", "use", "a", "wrapper", "script", "calling", "dehydrated", "in", "the", "middle", "be", "possible", "but", "this", "feels", "like", "a", "workaround", "for", "miss", "hooks", "NUMBER", "The", "same", "hooks", "be", "request", "in", "NUMBER", "The", "flag", "grep", "A", "NUMBER", "on", "line", "NUMBER", "be", "not", "support", "in", "Open", "Solaris", "NUMBER", "If", "you", "have", "SANs", "this", "will", "be", "a", "problem", "NUMBER", "Therefore", "a", "simple", "change", "can", "be", "made", "and", "then", "everything", "works", "without", "a", "hitch", "I", "wasn", "t", "sure", "how", "best", "to", "submit", "this", "so", "I", "m", "just", "doing", "it", "here", "in", "the", "hopes", "anyone", "Googling", "for", "an", "answer", "will", "find", "it", "NUMBER", "Change", "altnames", "TAG", "LINK", "do", "not", "work", "anymore", "NUMBER", "It", "looks", "like", "dns", "entry", "be", "not", "created", "while", "use", "letsencrypt", "NUMBER", "sh", "Processing", "foo", "NUMBER", "bar", "NUMBER", "de", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "Jul", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Less", "than", "NUMBER", "days", "NUMBER", "Renewing", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "foo", "NUMBER", "bar", "NUMBER", "de", "NUMBER", "Responding", "to", "challenge", "for", "foo", "NUMBER", "bar", "NUMBER", "de", "NUMBER", "ERROR", "Challenge", "be", "invalid", "returned", "invalid", "result", "type", "dns", "NUMBER", "status", "invalid", "error", "type", "urn", "acme", "error", "connection", "detail", "DNS", "problem", "NXDOMAIN", "looking", "up", "TXT", "for", "_acme", "challenge", "NUMBER", "foo", "NUMBER", "bar", "NUMBER", "de", "status", "NUMBER", "uri", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "ZEes", "NUMBER", "isuj", "NUMBER", "AUjy_xEBKurn", "NUMBER", "IWJhhXTBgyalzAzUYZU", "NUMBER", "token", "HHzFaTGm", "Usb", "NUMBER", "_xEJJ", "NUMBER", "q", "NUMBER", "DeWoLLssiGvjpWIyjpTkI", "keyAuthorization", "HHzFaTGm", "Usb", "NUMBER", "_xEJJ", "NUMBER", "q", "NUMBER", "DeWoLLssiGvjpWIyjpTkI", "NUMBER", "_JeC", "NUMBER", "mchoXHGH", "NUMBER", "Jf", "NUMBER", "LzvreL", "NUMBER", "_bOSeC", "NUMBER", "H", "NUMBER", "NQ_", "NUMBER", "X", "NUMBER", "Y", "If", "I", "use", "deploy_challange", "directly", "use", "the", "hook", "script", "it", "works", "NUMBER", "inwx", "acme", "deploy_challenge", "foo", "NUMBER", "bar", "NUMBER", "de", "HHzFaTGm", "Usb", "NUMBER", "_xEJJ", "NUMBER", "q", "NUMBER", "DeWoLLssiGvjpWIyjpTkI", "HHzFaTGm", "Usb", "NUMBER", "_xEJJ", "NUMBER", "q", "NUMBER", "DeWoLLssiGvjpWIyjpTkI", "dig", "TXT", "_acme", "challenge", "NUMBER", "foo", "NUMBER", "bar", "NUMBER", "de", "TAG", "DiG", "NUMBER", "rpz", "NUMBER", "rl", "NUMBER", "P", "NUMBER", "TAG", "TXT", "_acme", "challenge", "NUMBER", "foo", "NUMBER", "bar", "NUMBER", "de", "global", "options", "cmd", "Got", "answer", "HEADER", "TAG", "I", "think", "hook", "scripts", "should", "ensure", "that", "the", "challenge", "be", "fully", "deployed", "before", "they", "return", "NUMBER", "So", "I", "would", "put", "the", "sleep", "at", "the", "end", "of", "deploy_challenge", "in", "the", "hook", "script", "if", "there", "be", "no", "better", "way", "to", "ensure", "deployment", "NUMBER", "I", "agree", "the", "best", "option", "would", "be", "that", "the", "hook", "scripts", "will", "check", "DNS", "entries", "after", "deploying", "them", "NUMBER", "But", "that", "s", "not", "implement", "yet", "NUMBER", "gertcuykens", "I", "already", "had", "put", "some", "sleeps", "into", "it", "but", "after", "that", "it", "was", "only", "work", "for", "the", "first", "domain", "of", "a", "multi", "domain", "certificate", "NUMBER", "I", "have", "now", "test", "a", "bit", "more", "an", "find", "a", "work", "version", "with", "NUMBER", "sleeps", "Respond", "to", "challenges", "idx", "NUMBER", "for", "altname", "in", "altnames", "do", "challenge_token", "challenge_tokens", "idx", "keyauth", "keyauths", "idx", "Wait", "for", "hook", "script", "to", "deploy", "the", "challenge", "if", "use", "shellcheck", "disable", "SC", "NUMBER", "n", "HOOK", "HOOK_CHAIN", "yes", "HOOK", "deploy_challenge", "deploy_args", "idx", "Tronic", "NUMBER", "wait", "NUMBER", "seconds", "NUMBER", "sleep", "NUMBER", "Ask", "the", "acme", "server", "to", "verify", "our", "challenge", "and", "wait", "until", "it", "be", "no", "longer", "pending", "echo", "Responding", "to", "challenge", "for", "altname", "NUMBER", "result", "signed_request", "challenge_uris", "idx", "resource", "challenge", "keyAuthorization", "keyauth", "clean_json", "reqstatus", "printf", "s", "n", "result", "get_json_string_value", "status", "while", "reqstatus", "pending", "do", "Tronic", "NUMBER", "wait", "NUMBER", "seconds", "NUMBER", "sleep", "NUMBER", "result", "http_request", "get", "challenge_uris", "idx", "reqstatus", "printf", "s", "n", "result", "get_json_string_value", "status", "do", "CHALLENGETYPE", "http", "NUMBER", "rm", "f", "WELLKNOWN", "challenge_token", "Wait", "for", "hook", "script", "to", "clean", "the", "challenge", "if", "use", "if", "n", "HOOK", "HOOK_CHAIN", "yes", "n", "challenge_token", "then", "shellcheck", "disable", "SC", "NUMBER", "HOOK", "clean_challenge", "deploy_args", "idx", "fi", "idx", "idx", "NUMBER", "if", "reqstatus", "valid", "then", "echo", "Challenge", "be", "valid", "else", "break", "fi", "Tronic", "NUMBER", "wait", "NUMBER", "seconds", "sleep", "NUMBER", "do", "I", "know", "the", "longer", "middle", "sleep", "default", "NUMBER", "makes", "not", "really", "sense", "but", "after", "increasing", "it", "it", "worked", "NUMBER", "Maybe", "the", "first", "and", "thrid", "sleep", "time", "should", "be", "configurable", "in", "config", "NUMBER", "This", "patch", "LINK", "should", "add", "the", "sleep", "time", "only", "if", "you", "be", "use", "CHALLENGETYPE", "dns", "NUMBER", "NUMBER", "You", "can", "apply", "it", "by", "sh", "cd", "opt", "letsencrypt", "NUMBER", "sh", "or", "where", "your", "cloned", "letsencrypt", "NUMBER", "sh", "repository", "be", "wget", "Osleep", "NUMBER", "patch", "LINK", "git", "apply", "sleep", "NUMBER", "patch", "Configurable", "sleep", "times", "should", "be", "possible", "by", "introduce", "someting", "like", "SLEEPTIME", "NUMBER", "in", "the", "config", "file", "and", "calling", "sleep", "SLEEPTIME", "instead", "of", "just", "sleep", "NUMBER", "in", "letsencrypt", "NUMBER", "sh", "NUMBER", "Reverting", "this", "patch", "be", "possible", "by", "sh", "git", "apply", "R", "sleep", "NUMBER", "patch", "rm", "sleep", "NUMBER", "patch", "wink", "I", "really", "feel", "like", "this", "should", "be", "handle", "in", "the", "relevant", "hook", "script", "s", "not", "as", "a", "patch", "to", "letsencrypt", "NUMBER", "sh", "itself", "NUMBER", "The", "challenge", "script", "should", "be", "responsible", "for", "deploying", "the", "change", "waiting", "till", "it", "s", "applied", "e", "NUMBER", "g", "NUMBER", "by", "querying", "DNS", "back", "again", "and", "then", "exiting", "NUMBER", "This", "be", "what", "letsencrypt", "NUMBER", "sh", "be", "expecting", "Commands", "account", "a", "Update", "contact", "information", "LINK", "wg", "acme", "NUMBER", "github", "NUMBER", "io", "acme", "registration", "For", "example", "to", "update", "the", "contact", "information", "in", "the", "above", "registration", "the", "client", "could", "send", "the", "following", "request", "POST", "acme", "reg", "asdf", "HTTP", "NUMBER", "Host", "example", "NUMBER", "com", "BEGIN", "JWS", "sign", "request", "body", "resource", "reg", "contact", "mailto", "certificates", "example", "NUMBER", "com", "tel", "NUMBER", "END", "JWS", "sign", "request", "body", "If", "one", "of", "them", "be", "be", "revoked", "all", "three", "of", "them", "be", "invalid", "NUMBER", "Currently", "NUMBER", "letsencrypt", "NUMBER", "sh", "r", "cert", "NUMBER", "pem", "do", "not", "rename", "certificates", "that", "be", "already", "revoked", "by", "a", "ohter", "client", "NUMBER", "Suggest", "to", "also", "rename", "with", "NUMBER", "pem", "revoked", "them", "when", "you", "get", "the", "following", "error", "NUMBER", "Revoking", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "revoke", "cert", "Status", "NUMBER", "Details", "type", "urn", "acme", "error", "malformed", "detail", "Certificate", "already", "revoked", "status", "NUMBER", "The", "registration_info", "NUMBER", "json", "get", "not", "generate", "anymore", "not", "right", "NUMBER", "you", "do", "nothing", "in", "your", "script", "to", "create", "this", "file", "okay", "sorry", "NUMBER", "strange", "NUMBER", "i", "see", "only", "my", "key", "and", "no", "json", "file", "NUMBER", "NUMBER", "currently", "proposes", "another", "hook", "for", "a", "cleaner", "deployment", "NUMBER", "NUMBER", "proposes", "a", "new", "challenge", "protocol", "NUMBER", "This", "idea", "goes", "a", "bit", "further", "maybe", "good", "for", "the", "next", "major", "version", "NUMBER", "I", "think", "we", "need", "two", "kinds", "of", "hooks", "hooks", "that", "interface", "to", "verify", "domain", "ownership", "this", "be", "what", "current", "deploy_challenge", "and", "clean_challenge", "NUMBER", "There", "be", "some", "letsencryptkey", "NUMBER", "sh", "hooks", "on", "the", "github", "already", "for", "different", "DNS", "providers", "NUMBER", "deployment", "hooks", "that", "respond", "to", "deploy_cert", "and", "unchanged_cert", "NUMBER", "Every", "SSL", "enable", "app", "should", "have", "one", "NUMBER", "For", "example", "there", "could", "have", "one", "file", "that", "deploys", "apache", "certificates", "or", "another", "that", "installs", "certs", "for", "BIND", "or", "sendmail", "or", "postfix", "NUMBER", "One", "could", "even", "write", "something", "to", "trigger", "chef", "or", "puppet", "or", "whatever", "NUMBER", "Those", "deployment", "hooks", "could", "be", "possibly", "generic", "and", "there", "user", "could", "map", "the", "domain", "to", "the", "deployment", "hook", "please", "deploy", "acme", "NUMBER", "org", "cert", "and", "keys", "to", "Apache", "and", "nginx", "but", "acme", "NUMBER", "net", "goes", "to", "dovecot", "and", "sendmail", "NUMBER", "This", "could", "be", "implement", "by", "having", "a", "way", "to", "let", "the", "hooks", "register", "themselves", "and", "say", "call", "me", "on", "deploy_cert", "NUMBER", "In", "the", "future", "those", "hooks", "could", "even", "be", "maintained", "by", "the", "developers", "of", "the", "applications", "themselves", "NUMBER", "For", "example", "apachectl", "to", "could", "be", "patched", "to", "provide", "a", "list", "of", "SSL", "domains", "currently", "configured", "in", "the", "httpd", "NUMBER", "conf", "and", "friends", "via", "the", "command", "similar", "to", "apachectl", "sslvhosts", "and", "then", "the", "Apache", "hook", "could", "just", "check", "if", "the", "domain", "be", "in", "the", "apache", "configuration", "NUMBER", "This", "way", "letsencrypt", "NUMBER", "sh", "could", "be", "integrated", "with", "the", "startup", "scripts", "imagine", "Apache", "request", "certificates", "on", "system", "startup", "in", "a", "similar", "way", "that", "some", "systems", "generate", "SSH", "keys", "on", "sshd", "startup", "NUMBER", "Or", "when", "doing", "configuration", "reload", "NUMBER", "One", "just", "needs", "to", "avoid", "a", "chicken", "and", "egg", "scenario", "in", "case", "the", "same", "Apache", "be", "use", "for", "both", "ownership", "proof", "and", "HTTPS", "NUMBER", "For", "this", "we", "probably", "need", "just", "to", "the", "possibility", "to", "specify", "multiple", "hooks", "in", "a", "directory", "or", "otherwise", "NUMBER", "If", "we", "let", "hooks", "register", "themselves", "we", "don", "t", "even", "need", "multiple", "hook", "directives", "for", "various", "kinds", "of", "hooks", "NUMBER", "Hey", "even", "BIND", "or", "nsd", "plugin", "could", "register", "one", "hook", "that", "implement", "dns", "NUMBER", "challenge", "and", "another", "one", "installing", "SSL", "keys", "for", "the", "CLI", "control", "tool", "or", "request", "keys", "certificates", "for", "DANE", "or", "whatever", "NUMBER", "It", "would", "be", "useful", "to", "be", "able", "to", "have", "different", "configuration", "file", "per", "domain", "s", "NUMBER", "Example", "use", "case", "Not", "all", "of", "my", "domains", "should", "use", "OCSP", "Must", "Staple", "but", "I", "still", "want", "to", "use", "the", "cron", "flag", "for", "auto", "renewal", "NUMBER", "Whoops", "NUMBER", "Nice", "thank", "you", "Hi", "firstly", "thanks", "for", "this", "amazing", "work", "NUMBER", "I", "ve", "question", "suggestion", "relate", "to", "cert", "permissions", "NUMBER", "I", "see", "that", "folder", "certs", "domain", "subfolders", "and", "all", "keys", "and", "cert", "have", "very", "restrictive", "permissions", "NUMBER", "Basically", "only", "owner", "can", "access", "keys", "and", "certs", "NUMBER", "How", "do", "you", "set", "your", "nginx", "then", "If", "nginx", "demon", "has", "no", "access", "to", "certs", "owned", "by", "letsencrypt", "user", "I", "be", "currently", "trying", "to", "use", "the", "script", "with", "the", "prosody", "xmpp", "server", "NUMBER", "This", "server", "be", "never", "run", "as", "root", "so", "I", "need", "to", "give", "more", "access", "to", "the", "certificate", "NUMBER", "I", "wanted", "to", "go", "with", "the", "create", "a", "special", "group", "for", "cert", "access", "approach", "NUMBER", "I", "created", "the", "group", "and", "chgrped", "the", "cert", "dir", "and", "all", "file", "to", "the", "new", "group", "NUMBER", "I", "then", "add", "the", "setgid", "bit", "to", "the", "directory", "to", "inherit", "the", "group", "to", "new", "file", "NUMBER", "Due", "to", "umask", "NUMBER", "new", "file", "be", "still", "not", "readable", "by", "the", "group", "NUMBER", "Could", "you", "maybe", "change", "the", "umask", "to", "NUMBER", "I", "did", "that", "on", "my", "end", "but", "want", "to", "avoid", "having", "unclean", "change", "For", "default", "setups", "it", "should", "be", "no", "more", "insecure", "as", "the", "directory", "be", "owned", "by", "something", "like", "root", "root", "or", "letsencrypt", "letsencrypt", "right", "This", "be", "what", "hooks", "be", "for", "Have", "a", "look", "at", "the", "examples", "NUMBER", "It", "s", "a", "bit", "convoluted", "to", "actually", "change", "the", "permissions", "cutting", "dirpath", "and", "filenames", "and", "inserting", "timestamp", "and", "it", "s", "a", "bit", "simpler", "if", "you", "intend", "to", "actually", "copy", "the", "file", "and", "replace", "the", "symlink", "and", "change", "the", "perms", "later", "NUMBER", "Issue", "be", "Name", "resolve", "to", "bunch", "of", "an", "IPv", "NUMBER", "and", "IPv", "NUMBER", "address", "but", "IPv", "NUMBER", "be", "unreachable", "from", "network", "NUMBER", "Hence", "ipv", "NUMBER", "be", "pass", "to", "curl", "NUMBER", "It", "s", "quite", "useful", "when", "you", "have", "no", "rights", "to", "change", "network", "config", "when", "corporative", "dns", "server", "be", "your", "only", "option", "others", "be", "just", "blocked", "and", "you", "have", "almost", "no", "means", "to", "change", "a", "thing", "or", "it", "will", "take", "really", "long", "time", "NUMBER", "Ofcourse", "there", "s", "an", "option", "to", "disable", "ipv", "NUMBER", "on", "a", "kernel", "level", "or", "just", "prioritize", "ipv", "NUMBER", "address", "but", "there", "be", "other", "applications", "that", "rely", "on", "internal", "ipv", "NUMBER", "addressing", "NUMBER", "would", "be", "great", "to", "have", "single", "env", "variable", "to", "tell", "resolver", "do", "only", "ipvX", "address", "per", "application", "but", "nah", "NUMBER", "Sum", "up", "to", "overcome", "weird", "configurations", "that", "you", "can", "t", "change", "NUMBER", "I", "have", "a", "scenario", "where", "during", "server", "deployment", "CERTDIR", "domain", "cert", "NUMBER", "pem", "be", "point", "to", "a", "self", "sign", "certificate", "NUMBER", "This", "be", "do", "to", "make", "sure", "applications", "won", "t", "complain", "about", "miss", "certificate", "if", "letsencrypt", "NUMBER", "sh", "didn", "t", "run", "yet", "NUMBER", "When", "run", "letsencrypt", "NUMBER", "sh", "in", "this", "scenario", "the", "script", "fail", "because", "the", "exist", "certificate", "doesn", "t", "contains", "the", "string", "DNS", "NUMBER", "The", "problem", "be", "with", "the", "following", "line", "certnames", "openssl", "x", "NUMBER", "in", "cert", "text", "noout", "grep", "DNS", "_sed", "s", "DNS", "g", "tr", "d", "tr", "n", "sort", "u", "tr", "n", "_sed", "s", "I", "guess", "that", "not", "finding", "the", "DNS", "string", "should", "not", "be", "considered", "as", "an", "error", "and", "should", "force", "a", "renew", "NUMBER", "I", "ve", "be", "run", "this", "nice", "script", "for", "some", "time", "now", "and", "I", "ve", "notice", "that", "my", "CERTDIR", "be", "filling", "up", "with", "old", "and", "expired", "certificate", "file", "NUMBER", "For", "example", "one", "of", "my", "servers", "already", "has", "more", "than", "NUMBER", "expired", "certificate", "file", "csr", "pem", "combos", "NUMBER", "Should", "this", "script", "be", "responsible", "for", "cleaning", "up", "those", "expired", "certificates", "or", "do", "you", "think", "we", "should", "write", "our", "own", "thing", "to", "clean", "them", "up", "I", "d", "appreciate", "your", "thoughts", "NUMBER", "Thank", "you", "NUMBER", "I", "personally", "would", "not", "want", "the", "script", "to", "clean", "this", "up", "by", "default", "NUMBER", "also", "it", "s", "a", "one", "line", "cron", "job", "to", "clean", "this", "up", "or", "in", "a", "hook", "so", "it", "s", "better", "to", "separate", "this", "functionality", "per", "the", "Unix", "doctrine", "NUMBER", "I", "had", "a", "requirement", "that", "i", "would", "start", "the", "script", "parallel", "with", "different", "argument", "NUMBER", "Therefore", "i", "wanted", "one", "incarnation", "to", "wait", "for", "the", "other", "to", "finish", "while", "not", "be", "required", "to", "start", "it", "again", "myself", "NUMBER", "True", "never", "thought", "about", "use", "another", "script", "Hello", "Its", "possible", "to", "support", "http", "NUMBER", "port", "protocol", "to", "allow", "non", "NUMBER", "port", "to", "be", "checked", "LetsEncrypt", "official", "client", "support", "change", "http", "port", "via", "this", "parameter", "Documentend", "in", "LINK", "Thanks", "This", "fix", "the", "issue", "I", "had", "in", "NUMBER", "by", "optionally", "accepting", "WELLKNOWN", "from", "the", "environment", "It", "looks", "like", "Let", "s", "Encrypt", "change", "the", "way", "they", "generate", "certificates", "early", "this", "morning", "NUMBER", "There", "be", "no", "longer", "DNS", "lines", "breaking", "the", "check", "to", "extract", "the", "cert", "name", "NUMBER", "We", "colans", "I", "just", "switched", "to", "looking", "in", "the", "CN", "NUMBER", "We", "haven", "t", "test", "with", "alt", "names", "yet", "but", "will", "be", "shortly", "NUMBER", "ergonlogic", "How", "to", "reproduce", "this", "problem", "We", "be", "use", "letsencrypt", "NUMBER", "sh", "NUMBER", "and", "it", "still", "works", "fine", "like", "before", "NUMBER", "Example", "LINK", "Thanks", "for", "looking", "into", "it", "NUMBER", "It", "s", "very", "possible", "that", "we", "were", "looking", "at", "the", "wrong", "certificate", "as", "we", "notice", "that", "our", "LE", "ones", "were", "sometimes", "be", "overwritten", "by", "self", "sign", "ones", "in", "our", "attempt", "to", "get", "this", "work", "with", "Aegir", "LINK", "NUMBER", "Sorry", "about", "that", "NUMBER", "The", "Lighttpd", "example", "may", "be", "confusing", "for", "some", "users", "NUMBER", "The", "alias", "given", "would", "require", "WELLKNOWN", "to", "be", "set", "to", "var", "www", "letsencrypt", "NUMBER", "acme", "challenges", "NUMBER", "The", "earlier", "examples", "for", "Apache", "and", "Nginx", "both", "use", "the", "given", "WELLKNOWN", "set", "to", "var", "www", "letsencrypt", "NUMBER", "I", "believe", "the", "Lighttpd", "example", "should", "be", "modify", "as", "follows", "alias", "NUMBER", "url", "NUMBER", "well", "know", "acme", "challenge", "var", "www", "letsencrypt", "This", "will", "allow", "users", "copying", "the", "example", "to", "use", "the", "same", "WELLKNOWN", "as", "given", "for", "the", "other", "examples", "NUMBER", "Apologies", "my", "bad", "NUMBER", "I", "ve", "use", "etc", "paths", "I", "think", "they", "re", "mention", "in", "some", "other", "docs", "here", "and", "then", "change", "to", "var", "without", "actually", "test", "NUMBER", "fix", "for", "NUMBER", "broke", "quoting", "NUMBER", "c", "NUMBER", "a", "argument", "with", "spaces", "get", "exploded", "to", "different", "args", "altho", "i", "don", "t", "have", "old", "enough", "bash", "to", "test", "with", "NUMBER", "did", "not", "indicate", "what", "version", "he", "had", "or", "was", "it", "even", "bash", "i", "m", "pretty", "sure", "this", "change", "be", "safe", "it", "expands", "to", "nothing", "with", "no", "args", "and", "expands", "to", "with", "args", "NUMBER", "thus", "fix", "for", "broken", "shell", "report", "originally", "NUMBER", "the", "thing", "be", "that", "expands", "words", "in", "it", "one", "word", "becomes", "two", "words", "it", "must", "be", "use", "as", "NUMBER", "saying", "that", "right", "now", "you", "evaluated", "only", "place", "its", "use", "be", "bad", "practice", "later", "you", "make", "more", "use", "cases", "and", "will", "totally", "forget", "that", "you", "have", "broken", "word", "expansion", "in", "place", "NUMBER", "if", "you", "intend", "to", "break", "word", "expansion", "on", "purpose", "use", "not", "NUMBER", "but", "i", "really", "just", "suggest", "to", "merge", "this", "NUMBER", "also", "given", "that", "you", "say", "the", "function", "always", "call", "with", "argument", "then", "the", "result", "be", "always", "not", "there", "be", "a", "difference", "NUMBER", "The", "current", "example", "be", "actually", "incorrect", "it", "seems", "It", "hasn", "t", "worked", "for", "me", "on", "NUMBER", "separate", "servers", "NUMBER", "Can", "you", "explain", "how", "and", "why", "nginx", "would", "guess", "the", "hidden", "acme", "challenges", "directory", "Or", "did", "my", "export", "not", "function", "properly", "for", "some", "reason", "So", "somehow", "the", "script", "be", "indeed", "not", "picking", "up", "on", "my", "environment", "variable", "NUMBER", "Thanks", "for", "the", "reply", "Ah", "thanks", "NUMBER", "That", "do", "explain", "Hi", "find", "a", "issue", "while", "playing", "around", "with", "your", "script", "NUMBER", "Seems", "all", "u", "in", "domains", "names", "get", "replaced", "by", "l", "regardless", "if", "the", "chars", "be", "in", "the", "domains", "NUMBER", "txt", "or", "manually", "entered", "by", "d", "NUMBER", "Some", "Sample", "output", "admin", "FileStore", "share", "homes", "Stefan", "letsencrypt", "NUMBER", "sh", "NUMBER", "letsencrypt", "NUMBER", "sh", "c", "d", "uuuu", "NUMBER", "uu", "INFO", "Using", "main", "config", "file", "share", "homes", "Stefan", "letsencrypt", "NUMBER", "sh", "config", "Processing", "llll", "NUMBER", "ll", "Signing", "domains", "NUMBER", "Creating", "new", "directory", "share", "MD", "NUMBER", "_DATA", "homes", "Stefan", "letsencrypt", "NUMBER", "sh", "certs", "llll", "NUMBER", "ll", "NUMBER", "Generating", "private", "key", "NUMBER", "with", "domains", "NUMBER", "txt", "NUMBER", "letsencrypt", "NUMBER", "sh", "c", "INFO", "Using", "main", "config", "file", "share", "homes", "Stefan", "letsencrypt", "NUMBER", "sh", "config", "Processing", "test", "ll", "NUMBER", "de", "Signing", "domains", "NUMBER", "Creating", "new", "directory", "share", "MD", "NUMBER", "_DATA", "homes", "Stefan", "letsencrypt", "NUMBER", "sh", "certs", "test", "ll", "NUMBER", "de", "NUMBER", "Generating", "private", "key", "NUMBER", "Domains", "looks", "like", "this", "admin", "FileStore", "share", "homes", "Stefan", "letsencrypt", "NUMBER", "sh", "cat", "domains", "NUMBER", "txt", "test", "uu", "NUMBER", "de", "I", "be", "use", "the", "script", "on", "a", "QNAP", "NAS", "system", "but", "this", "should", "not", "have", "any", "influence", "on", "the", "script", "NUMBER", "Hi", "Qnaps", "QTS", "Issing", "a", "busybox", "version", "of", "tr", "BusyBox", "v", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "multi", "call", "binary", "Usage", "tr", "cds", "STRING", "NUMBER", "STRING", "NUMBER", "Translate", "squeeze", "and", "or", "delete", "characters", "from", "standard", "input", "write", "to", "standard", "output", "NUMBER", "Options", "c", "take", "complement", "of", "STRING", "NUMBER", "d", "delete", "input", "characters", "code", "STRING", "NUMBER", "s", "squeeze", "multiple", "output", "characters", "of", "STRING", "NUMBER", "into", "one", "character", "diff", "on", "BSD", "OpenBSD", "has", "no", "v", "option", "NUMBER", "Replacing", "it", "with", "a", "diff", "between", "identical", "file", "works", "for", "every", "diff", "implement", "u", "NUMBER", "I", "have", "FreeBSD", "NUMBER", "RELEASE", "p", "NUMBER", "diff", "v", "diff", "GNU", "diffutils", "NUMBER", "which", "diff", "usr", "bin", "diff", "Sorry", "didn", "t", "try", "on", "FreeBSD", "NUMBER", "On", "OpenBSD", "I", "get", "diff", "v", "diff", "unknown", "option", "v", "usage", "diff", "abdipTtw", "c", "e", "f", "n", "q", "u", "I", "pattern", "L", "label", "file", "NUMBER", "file", "NUMBER", "diff", "abdipTtw", "I", "pattern", "L", "label", "C", "number", "file", "NUMBER", "file", "NUMBER", "diff", "abditw", "I", "pattern", "D", "string", "file", "NUMBER", "file", "NUMBER", "diff", "abdipTtw", "I", "pattern", "L", "label", "U", "number", "file", "NUMBER", "file", "NUMBER", "diff", "abdiNPprsTtw", "c", "e", "f", "n", "q", "u", "I", "pattern", "L", "label", "S", "name", "X", "file", "x", "pattern", "dir", "NUMBER", "dir", "NUMBER", "which", "diff", "usr", "bin", "diff", "Lukas", "Schauer", "notifications", "github", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "Thanks", "for", "bringing", "this", "up", "I", "change", "the", "check", "similar", "to", "what", "you", "suggested", "can", "you", "test", "if", "it", "be", "work", "fine", "for", "you", "now", "Yes", "it", "be", "work", "fine", "now", "NUMBER", "Thanks", "NUMBER", "Fixes", "NUMBER", "After", "this", "FreeBSD", "will", "be", "support", "NUMBER", "Beyond", "the", "base", "system", "only", "bash", "and", "curl", "be", "required", "from", "ports", "NUMBER", "I", "came", "back", "to", "look", "at", "this", "today", "it", "seems", "I", "had", "be", "use", "a", "version", "before", "the", "clean_json", "function", "NUMBER", "Using", "your", "branch", "unmodified", "on", "FreeBSD", "works", "As", "the", "spec", "for", "Account", "Deactivation", "LINK", "wg", "acme", "NUMBER", "github", "NUMBER", "io", "acme", "draft", "ietf", "acme", "acme", "NUMBER", "html", "rfc", "NUMBER", "section", "NUMBER", "says", "that", "the", "server", "should", "not", "revoke", "certificates", "should", "dehydrated", "ask", "for", "that", "action", "to", "the", "user", "EDIT", "It", "seems", "that", "what", "I", "linked", "be", "the", "draft", "for", "ACME", "v", "NUMBER", "protocol", "and", "the", "v", "NUMBER", "currently", "use", "do", "not", "include", "a", "way", "for", "deleting", "an", "account", "NUMBER", "I", "needed", "to", "deactivate", "some", "accounts", "and", "add", "a", "command", "to", "my", "dehydrated", "script", "NUMBER", "Here", "s", "the", "diff", "LINK", "_add_deactivate_command", "NUMBER", "diff", "NUMBER", "txt", "for", "anyone", "who", "also", "just", "needs", "a", "quick", "solution", "NUMBER", "And", "it", "really", "be", "minimal", "NUMBER", "It", "s", "ACME", "v", "NUMBER", "only", "v", "NUMBER", "really", "do", "not", "have", "the", "option", "just", "sends", "the", "command", "to", "the", "server", "and", "do", "not", "change", "the", "status", "or", "check", "for", "it", "in", "the", "local", "json", "file", "NUMBER", "I", "m", "not", "familiar", "enough", "with", "the", "script", "to", "add", "that", "NUMBER", "ACME", "v", "NUMBER", "allows", "account", "deactivation", "NUMBER", "There", "s", "no", "way", "to", "delete", "an", "account", "in", "ACME", "v", "NUMBER", "or", "ACME", "v", "NUMBER", "only", "deactivation", "NUMBER", "ACME", "v", "NUMBER", "account", "deactivation", "works", "the", "same", "way", "as", "in", "ACME", "v", "NUMBER", "Send", "an", "authenticated", "POST", "with", "the", "JWS", "body", "status", "deactivated", "to", "the", "account", "s", "URL", "NUMBER", "We", "be", "use", "your", "client", "in", "our", "TLS", "automation", "on", "line", "NUMBER", "the", "following", "change", "was", "made", "since", "this", "client", "just", "began", "to", "fail", "on", "NUMBER", "May", "NUMBER", "challenges", "printf", "s", "n", "response", "sed", "n", "s", "NUMBER", "challenges", "NUMBER", "NUMBER", "p", "challenges", "printf", "s", "n", "response", "tr", "d", "n", "sed", "n", "s", "NUMBER", "challenges", "NUMBER", "NUMBER", "p", "Notice", "that", "we", "needed", "to", "delete", "all", "newlines", "in", "the", "json", "response", "NUMBER", "Perhaps", "the", "response", "be", "now", "pretty", "format", "as", "oppose", "to", "a", "single", "line", "ok", "thanks", "did", "not", "realize", "that", "NUMBER", "appreciate", "the", "response", "NUMBER", "On", "Fri", "May", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Lukas", "Schauer", "notifications", "github", "NUMBER", "com", "write", "You", "also", "could", "just", "have", "downloaded", "the", "newest", "version", "which", "also", "include", "a", "similar", "change", "NUMBER", "Thanks", "anyway", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "or", "mute", "the", "thread", "LINK", "NUMBER", "I", "m", "trying", "to", "generate", "some", "certificates", "on", "AWS", "with", "Ubuntu", "NUMBER", "Whenever", "I", "run", "NUMBER", "letsencrypt", "NUMBER", "sh", "c", "I", "always", "get", "this", "error", "NUMBER", "I", "ve", "checked", "for", "any", "miss", "equal", "signs", "in", "the", "openssl", "config", "file", "and", "it", "appears", "to", "be", "valid", "NUMBER", "output", "Generating", "signing", "request", "NUMBER", "error", "on", "line", "NUMBER", "of", "tmp", "letsencrypt", "NUMBER", "sh", "s", "NUMBER", "jat", "NUMBER", "error", "NUMBER", "E", "NUMBER", "configuration", "file", "routines", "DEF_LOAD_BIO", "miss", "equal", "sign", "conf_def", "NUMBER", "c", "NUMBER", "line", "NUMBER", "contents", "of", "tmp", "letsencrypt", "NUMBER", "sh", "s", "NUMBER", "jat", "bin", "sh", "LD_LIBRARY_PATH", "opt", "bitnami", "common", "lib", "LD_LIBRARY_PATH", "DYLD_LIBRARY_PATH", "opt", "bitnami", "common", "lib", "DYLD_LIBRARY_PATH", "OPENSSL_CONF", "opt", "bitnami", "common", "openssl", "openssl", "NUMBER", "cnf", "OPENSSL_ENGINES", "opt", "bitnami", "common", "lib", "engines", "export", "LD_LIBRARY_PATH", "export", "DYLD_LIBRARY_PATH", "export", "OPENSSL_CONF", "export", "OPENSSL_ENGINES", "exec", "opt", "bitnami", "common", "bin", "openssl", "NUMBER", "bin", "SAN", "subjectAltName", "DNS", "testdomain", "NUMBER", "com", "DNS", "www", "NUMBER", "testdomain", "NUMBER", "com", "Here", "s", "the", "output", "of", "NUMBER", "letsencrypt", "NUMBER", "sh", "e", "letsencrypt", "NUMBER", "sh", "configuration", "INFO", "Using", "main", "config", "file", "opt", "bitnami", "apache", "NUMBER", "htdocs", "letsencrypt", "config", "declare", "CA", "LINK", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "declare", "LICENSE", "LINK", "SA", "v", "NUMBER", "July", "NUMBER", "NUMBER", "pdf", "declare", "CHALLENGETYPE", "http", "NUMBER", "declare", "DOMAINS_TXT", "opt", "bitnami", "apache", "NUMBER", "htdocs", "letsencrypt", "domains", "NUMBER", "txt", "declare", "HOOK", "declare", "HOOK_CHAIN", "no", "declare", "RENEW_DAYS", "NUMBER", "declare", "ACCOUNT_KEY", "opt", "bitnami", "apache", "NUMBER", "htdocs", "letsencrypt", "private_key", "NUMBER", "pem", "declare", "ACCOUNT_KEY_JSON", "opt", "bitnami", "apache", "NUMBER", "htdocs", "letsencrypt", "private_key", "NUMBER", "json", "declare", "KEYSIZE", "NUMBER", "declare", "WELLKNOWN", "opt", "bitnami", "apache", "NUMBER", "htdocs", "letsencrypt", "NUMBER", "well", "know", "acme", "challenge", "declare", "PRIVATE_KEY_RENEW", "yes", "declare", "OPENSSL_CNF", "opt", "bitnami", "common", "bin", "openssl", "declare", "CONTACT_EMAIL", "nil", "nil", "NUMBER", "gs", "declare", "LOCKFILE", "opt", "bitnami", "apache", "NUMBER", "htdocs", "letsencrypt", "lock", "I", "set", "OPENSSL_CNF", "to", "opt", "bitnami", "common", "bin", "openssl", "openssl", "NUMBER", "cnf", "in", "the", "config", "file", "and", "now", "see", "this", "error", "cat", "opt", "bitnami", "common", "bin", "openssl", "openssl", "NUMBER", "cnf", "Not", "a", "directory", "Which", "leads", "me", "to", "believe", "that", "it", "should", "be", "the", "directly", "shouldn", "t", "it", "Here", "s", "the", "entire", "config", "file", "This", "be", "the", "main", "config", "file", "for", "letsencrypt", "NUMBER", "sh", "This", "file", "be", "looked", "for", "in", "the", "following", "locations", "SCRIPTDIR", "config", "next", "to", "this", "script", "usr", "local", "etc", "letsencrypt", "NUMBER", "sh", "config", "etc", "letsencrypt", "NUMBER", "sh", "config", "PWD", "config", "in", "current", "work", "directory", "Default", "values", "of", "this", "config", "be", "in", "comments", "Path", "to", "certificate", "authority", "default", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "CA", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "CA", "LINK", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "Path", "to", "license", "agreement", "default", "LINK", "SA", "v", "NUMBER", "July", "NUMBER", "NUMBER", "pdf", "LICENSE", "LINK", "SA", "v", "NUMBER", "July", "NUMBER", "NUMBER", "pdf", "Which", "challenge", "should", "be", "use", "Currently", "http", "NUMBER", "and", "dns", "NUMBER", "be", "support", "CHALLENGETYPE", "http", "NUMBER", "Path", "to", "a", "directory", "containing", "additional", "config", "file", "allowing", "to", "override", "the", "defaults", "find", "in", "the", "main", "configuration", "file", "NUMBER", "Additional", "config", "file", "in", "this", "directory", "needs", "to", "be", "named", "with", "a", "NUMBER", "sh", "ending", "NUMBER", "default", "TAG", "CONFIG_D", "Base", "directory", "for", "account", "key", "generate", "certificates", "and", "list", "of", "domains", "default", "SCRIPTDIR", "uses", "config", "directory", "if", "undefined", "BASEDIR", "SCRIPTDIR", "File", "containing", "the", "list", "of", "domains", "to", "request", "certificates", "for", "default", "BASEDIR", "domains", "NUMBER", "txt", "DOMAINS_TXT", "BASEDIR", "domains", "NUMBER", "txt", "Output", "directory", "for", "challenge", "tokens", "to", "be", "served", "by", "webserver", "or", "deployed", "in", "HOOK", "default", "BASEDIR", "NUMBER", "acme", "challenges", "WELLKNOWN", "BASEDIR", "NUMBER", "well", "know", "acme", "challenge", "Location", "of", "private", "account", "key", "default", "BASEDIR", "private_key", "NUMBER", "pem", "ACCOUNT_KEY", "BASEDIR", "private_key", "NUMBER", "pem", "Location", "of", "private", "account", "registration", "information", "default", "BASEDIR", "private_key", "NUMBER", "json", "ACCOUNT_KEY_JSON", "BASEDIR", "private_key", "NUMBER", "json", "Default", "keysize", "for", "private", "keys", "default", "NUMBER", "KEYSIZE", "NUMBER", "Path", "to", "openssl", "config", "file", "default", "TAG", "try", "to", "figure", "out", "system", "default", "OPENSSL_CNF", "opt", "bitnami", "common", "bin", "openssl", "Program", "or", "function", "call", "in", "certain", "situations", "After", "generating", "the", "challenge", "response", "or", "after", "fail", "challenge", "in", "this", "case", "altname", "be", "empty", "Given", "argument", "clean_challenge", "deploy_challenge", "altname", "token", "filename", "token", "content", "After", "successfully", "signing", "certificate", "Given", "argument", "deploy_cert", "domain", "path", "to", "privkey", "NUMBER", "pem", "path", "to", "cert", "NUMBER", "pem", "path", "to", "fullchain", "NUMBER", "pem", "BASEDIR", "and", "WELLKNOWN", "variables", "be", "export", "and", "can", "be", "use", "in", "an", "external", "program", "default", "TAG", "HOOK", "Chain", "clean_challenge", "deploy_challenge", "argument", "together", "into", "one", "hook", "call", "per", "certificate", "default", "no", "HOOK_CHAIN", "no", "Minimum", "days", "before", "expiration", "to", "automatically", "renew", "certificate", "default", "NUMBER", "RENEW_DAYS", "NUMBER", "Regenerate", "private", "keys", "instead", "of", "just", "signing", "new", "certificates", "on", "renewal", "default", "yes", "PRIVATE_KEY_RENEW", "yes", "Which", "public", "key", "algorithm", "should", "be", "use", "Supported", "rsa", "prime", "NUMBER", "v", "NUMBER", "and", "secp", "NUMBER", "r", "NUMBER", "KEY_ALGO", "rsa", "E", "mail", "to", "use", "during", "the", "registration", "default", "TAG", "CONTACT_EMAIL", "Lockfile", "location", "to", "prevent", "concurrent", "access", "default", "BASEDIR", "lock", "LOCKFILE", "BASEDIR", "lock", "That", "fix", "that", "error", "I", "didn", "t", "see", "the", "extra", "bin", "in", "there", "NUMBER", "Thanks", "for", "the", "help", "NUMBER", "Particularly", "useful", "if", "you", "want", "to", "set", "up", "dual", "certificates", "you", "can", "set", "the", "config", "file", "to", "output", "into", "separate", "directories", "rather", "than", "use", "separate", "base", "directories", "for", "each", "NUMBER", "e", "NUMBER", "g", "NUMBER", "CERTDIR", "BASEDIR", "certs", "rsa", "and", "CERTDIR", "BASEDIR", "certs", "ecdsa", "Hello", "there", "I", "have", "the", "following", "setup", "NUMBER", "different", "certificates", "for", "nginx", "vhosts", "NUMBER", "cert", "for", "incoming", "mail", "server", "NUMBER", "cert", "for", "outgoing", "mail", "server", "What", "i", "want", "to", "archive", "be", "to", "restart", "nginx", "only", "once", "when", "any", "of", "the", "NUMBER", "vhost", "certificates", "have", "be", "renewed", "NUMBER", "I", "m", "already", "use", "the", "hooks", "that", "be", "present", "in", "the", "example", "directory", "but", "that", "function", "would", "be", "call", "for", "each", "certificate", "so", "NUMBER", "times", "in", "worse", "case", "which", "would", "mean", "NUMBER", "nginx", "restarts", "within", "a", "single", "letsencrypt", "NUMBER", "sh", "run", "NUMBER", "Is", "there", "any", "exist", "feature", "i", "can", "use", "to", "reach", "my", "goal", "Thanks", "in", "advance", "Michael", "Side", "note", "You", "could", "also", "reload", "the", "configuration", "instead", "of", "restarting", "the", "webserver", "NUMBER", "from", "now", "run", "cron", "silently", "stops", "on", "Requesting", "challenge", "letsencrypt", "NUMBER", "sh", "c", "INFO", "Using", "main", "config", "file", "usr", "local", "etc", "letsencrypt", "NUMBER", "sh", "config", "NUMBER", "sh", "Processing", "vpbx", "id", "NUMBER", "telecomax", "NUMBER", "net", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "vpbx", "id", "NUMBER", "telecomax", "NUMBER", "net", "NUMBER", "Seems", "letsencrypt", "behavior", "change", "recently", "NUMBER", "Using", "your", "tool", "_", "usr", "local", "sbin", "letsencrypt", "NUMBER", "sh", "cron", "domain", "some", "NUMBER", "pl", "domain", "www", "NUMBER", "some", "NUMBER", "pl", "challenge", "http", "NUMBER", "config", "NUMBER", "some", "NUMBER", "pl", "NUMBER", "dk", "NUMBER", "letsencrypt", "config", "NUMBER", "sh_", "were", "get", "_ERROR", "Challenge", "be", "invalid", "returned", "invalid", "result", "type", "http", "NUMBER", "status", "invalid", "error", "type", "urn", "acme", "error", "connection", "detail", "DNS", "problem", "NXDOMAIN", "looking", "up", "A", "for", "some", "NUMBER", "pl", "uri", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "yx", "NUMBER", "xQiXuFusLu", "MFtAnUFXcBxoIqWWImKq", "NUMBER", "mNdS", "NUMBER", "Uw", "NUMBER", "token", "hT", "NUMBER", "T", "NUMBER", "cDEGdnt", "NUMBER", "UvHPR", "NUMBER", "jFkt", "NUMBER", "C", "NUMBER", "kU", "NUMBER", "uoMau", "NUMBER", "hsp", "NUMBER", "BxZ", "NUMBER", "keyAuthorization", "hT", "NUMBER", "T", "NUMBER", "cDEGdnt", "NUMBER", "UvHPR", "NUMBER", "jFkt", "NUMBER", "C", "NUMBER", "kU", "NUMBER", "uoMau", "NUMBER", "hsp", "NUMBER", "BxZ", "NUMBER", "KqDpmIgUn", "NUMBER", "LbT", "NUMBER", "leEv", "NUMBER", "TfILZqkDmTU", "NUMBER", "_fuM", "NUMBER", "T", "NUMBER", "I", "validationRecord", "url", "LINK", "know", "acme", "challenge", "hT", "NUMBER", "T", "NUMBER", "cDEGdnt", "NUMBER", "UvHPR", "NUMBER", "jFkt", "NUMBER", "C", "NUMBER", "kU", "NUMBER", "uoMau", "NUMBER", "hsp", "NUMBER", "BxZ", "NUMBER", "hostname", "some", "NUMBER", "pl", "port", "NUMBER", "addressesResolved", "null", "addressUsed", "_", "from", "Fri", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "CEST", "NUMBER", "I", "get", "only", "_", "Requesting", "challenge", "for", "some", "NUMBER", "pl", "NUMBER", "_", "and", "then", "no", "thing", "no", "error", "Please", "mind", "some", "NUMBER", "pl", "or", "whatever", "be", "not", "registered", "so", "ERROR", "was", "correct", "output", "NUMBER", "The", "problem", "be", "no", "output", "at", "all", "since", "Fi", "May", "NUMBER", "night", "NUMBER", "No", "I", "think", "your", "script", "works", "perfect", "NUMBER", "I", "just", "trying", "to", "say", "letsencrypt", "site", "returns", "no", "error", "or", "different", "looked", "message", "while", "error", "happens", "NUMBER", "It", "seems", "to", "be", "change", "last", "Friday", "NUMBER", "Just", "FYI", "NUMBER", "No", "but", "I", "will", "try", "NUMBER", "It", "looks", "very", "nice", "now", "response", "contains", "much", "more", "readable", "info", "NUMBER", "Thank", "you", "so", "much", "I", "be", "run", "the", "latest", "git", "version", "of", "letsencrypt", "NUMBER", "sh", "Script", "run", "fine", "the", "last", "several", "weeks", "NUMBER", "Today", "when", "request", "a", "new", "cert", "it", "simply", "stops", "at", "the", "point", "NUMBER", "Processing", "foo", "NUMBER", "com", "Signing", "domains", "NUMBER", "Creating", "new", "directory", "etc", "ssl", "certs", "foo", "NUMBER", "com", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "foo", "NUMBER", "com", "NUMBER", "Looking", "into", "the", "script", "it", "runs", "fine", "until", "line", "NUMBER", "response", "signed_request", "CA_NEW_AUTHZ", "resource", "new", "authz", "identifier", "type", "dns", "value", "altname", "response", "be", "filled", "with", "a", "json", "response", "like", "this", "from", "letsencrypt", "so", "connection", "to", "Let", "s", "Encrypt", "API", "works", "NUMBER", "identifier", "type", "dns", "value", "bar", "NUMBER", "foo", "NUMBER", "com", "status", "pending", "expires", "NUMBER", "NUMBER", "NUMBER", "T", "NUMBER", "NUMBER", "NUMBER", "Z", "challenges", "type", "dns", "NUMBER", "status", "pending", "uri", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "AoeDKdkeJF", "PgaffffffffhJxsSTD", "NUMBER", "SBjARBOJHT", "NUMBER", "kd", "NUMBER", "ulWqq", "NUMBER", "NUMBER", "token", "bpcTwqRrZvhoHwEG", "NUMBER", "k", "NUMBER", "RODWbgaL", "NUMBER", "cTit_Iv", "NUMBER", "Nn", "NUMBER", "gwM", "type", "http", "NUMBER", "status", "pending", "uri", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "AoeEgVJF", "PgaffffffffhJxsSTD", "NUMBER", "SBjARBOJHT", "NUMBER", "kd", "NUMBER", "ulWqq", "NUMBER", "NUMBER", "token", "DwbZqn", "NUMBER", "oLukrVavxWtTpyNJXbN", "NUMBER", "FYBfLgc", "NUMBER", "Zyro", "NUMBER", "_s", "type", "tls", "sni", "NUMBER", "status", "pending", "uri", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "AoeEgVJF", "PgaffffffffhJxsSTD", "NUMBER", "SBjARBOJHT", "NUMBER", "kd", "NUMBER", "ulWqq", "NUMBER", "NUMBER", "token", "pGQFERvi", "NUMBER", "yW", "NUMBER", "fp", "NUMBER", "IXWuEpPV", "NUMBER", "F", "NUMBER", "W", "NUMBER", "JW", "NUMBER", "XiIwEnT", "NUMBER", "OeE", "combinations", "NUMBER", "NUMBER", "NUMBER", "The", "next", "line", "in", "letsencrypt", "NUMBER", "sh", "seems", "to", "fail", "although", "if", "I", "manually", "do", "the", "command", "on", "the", "cli", "on", "above", "content", "it", "greps", "the", "content", "fine", "and", "would", "put", "it", "in", "challenges", "NUMBER", "NUMBER", "Nothing", "else", "behinde", "line", "NUMBER", "be", "run", "and", "letsencrypt", "NUMBER", "sh", "simply", "exits", "NUMBER", "Any", "ideas", "what", "this", "could", "be", "It", "happens", "on", "several", "machines", "where", "I", "have", "letsencrypt", "NUMBER", "sh", "run", "fine", "for", "the", "last", "couple", "weeks", "NUMBER", "It", "s", "silently", "fail", "exactly", "that", "way", "for", "me", "too", "NUMBER", "I", "m", "run", "letsencrypt", "NUMBER", "sh", "in", "a", "FreeBSD", "NUMBER", "RELEASE", "jail", "and", "cannot", "figure", "out", "what", "s", "wrong", "NUMBER", "These", "be", "the", "relevant", "parts", "of", "my", "config", "NUMBER", "sh", "CHALLENGETYPE", "http", "NUMBER", "BASEDIR", "usr", "local", "etc", "letsencrypt", "NUMBER", "sh", "WELLKNOWN", "usr", "local", "www", "NUMBER", "well", "know", "acme", "challenge", "alias", "openssl", "usr", "local", "bin", "openssl", "Directory", "permissions", "ls", "lisa", "usr", "local", "www", "NUMBER", "well", "know", "acme", "challenge", "total", "NUMBER", "NUMBER", "NUMBER", "drwxrwxr", "x", "NUMBER", "root", "letsencrypt", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "drwxr", "xr", "x", "NUMBER", "root", "wheel", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "ls", "lisa", "usr", "local", "etc", "letsencrypt", "NUMBER", "sh", "total", "NUMBER", "NUMBER", "NUMBER", "drwxrwx", "NUMBER", "root", "letsencrypt", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "drwxr", "xr", "x", "NUMBER", "root", "wheel", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "drwxr", "xr", "x", "NUMBER", "root", "wheel", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "acme", "challenges", "NUMBER", "NUMBER", "drwx", "NUMBER", "letsencrypt", "letsencrypt", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "certs", "NUMBER", "NUMBER", "rw", "r", "r", "NUMBER", "root", "letsencrypt", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "config", "NUMBER", "sh", "NUMBER", "NUMBER", "rw", "r", "r", "NUMBER", "root", "wheel", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "config", "NUMBER", "sh", "NUMBER", "example", "NUMBER", "NUMBER", "rw", "r", "r", "NUMBER", "root", "letsencrypt", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "domains", "NUMBER", "txt", "NUMBER", "NUMBER", "rw", "r", "r", "NUMBER", "root", "wheel", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "domains", "NUMBER", "txt", "NUMBER", "example", "NUMBER", "NUMBER", "rw", "r", "r", "NUMBER", "root", "wheel", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "hook", "NUMBER", "sh", "NUMBER", "example", "NUMBER", "NUMBER", "rw", "NUMBER", "letsencrypt", "letsencrypt", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "private_key", "NUMBER", "json", "NUMBER", "NUMBER", "rw", "NUMBER", "letsencrypt", "letsencrypt", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "private_key", "NUMBER", "pem", "My", "nginx", "configuration", "looks", "like", "this", "server", "listen", "NUMBER", "default", "server_name", "pkg", "NUMBER", "embik", "NUMBER", "me", "root", "var", "package", "location", "autoindex", "on", "location", "NUMBER", "well", "know", "add_header", "Content", "Type", "text", "plain", "alias", "usr", "local", "www", "NUMBER", "well", "know", "Running", "letsencrypt", "NUMBER", "sh", "su", "m", "letsencrypt", "c", "bash", "usr", "local", "bin", "letsencrypt", "NUMBER", "sh", "cron", "INFO", "Using", "main", "config", "file", "usr", "local", "etc", "letsencrypt", "NUMBER", "sh", "config", "NUMBER", "sh", "Processing", "pkg", "NUMBER", "embik", "NUMBER", "me", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "pkg", "NUMBER", "embik", "NUMBER", "me", "NUMBER", "User", "letsencrypt", "be", "indeed", "member", "of", "the", "corresponding", "group", "and", "should", "be", "able", "to", "access", "the", "directory", "id", "letsencrypt", "uid", "NUMBER", "letsencrypt", "gid", "NUMBER", "letsencrypt", "group", "NUMBER", "letsencrypt", "I", "m", "eager", "to", "help", "debug", "this", "issue", "did", "u", "update", "it", "recently", "that", "looks", "like", "the", "json", "sed", "problem", "from", "the", "other", "ticket", "and", "yes", "the", "FreeBSD", "NUMBER", "RELEASE", "pkg", "version", "do", "not", "have", "this", "update", "The", "security", "letsencrypt", "NUMBER", "sh", "port", "LINK", "do", "not", "contain", "that", "commit", "indeed", "as", "it", "has", "be", "last", "update", "with", "v", "NUMBER", "NUMBER", "I", "cannot", "speak", "for", "OP", "of", "course", "NUMBER", "Will", "there", "be", "a", "minor", "release", "in", "the", "near", "future", "to", "push", "out", "these", "change", "to", "packaging", "systems", "not", "following", "master", "Thank", "you", "very", "much", "for", "creating", "letsencrypt", "NUMBER", "sh", "by", "the", "way", "NUMBER", "Cannot", "be", "stressed", "enough", "NUMBER", "lukas", "NUMBER", "you", "be", "right", "I", "be", "sorry", "NUMBER", "I", "actually", "use", "a", "fork", "of", "letsencrypt", "which", "do", "not", "have", "the", "commit", "you", "mention", "NUMBER", "After", "merge", "upstream", "it", "works", "again", "NUMBER", "Thank", "you", "very", "much", "It", "would", "be", "nice", "if", "instead", "of", "processing", "domains", "one", "at", "a", "time", "it", "would", "hand", "the", "txt", "challenge", "for", "ALL", "the", "domains", "to", "me", "at", "once", "then", "I", "could", "create", "all", "the", "txt", "records", "at", "once", "and", "it", "would", "plow", "through", "them", "all", "NUMBER", "As", "it", "be", "it", "be", "taking", "about", "an", "hour", "for", "each", "to", "propagate", "so", "my", "NUMBER", "domain", "cert", "be", "going", "to", "take", "all", "day", "NUMBER", "That", "would", "save", "me", "a", "LOT", "of", "time", "NUMBER", "Imagine", "when", "u", "have", "NUMBER", "domains", "NUMBER", "dns", "servers", "and", "most", "of", "the", "domains", "hosted", "via", "on", "private", "cdn", "s", "or", "geo", "located", "servers", "__________________________________", "NUMBER", "LINK", "NUMBER", "__________________________________", "On", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "PM", "captainwasabi", "write", "It", "would", "be", "nice", "if", "instead", "of", "processing", "domains", "one", "at", "a", "time", "it", "would", "hand", "the", "txt", "challenge", "for", "ALL", "the", "domains", "to", "me", "at", "once", "then", "I", "could", "create", "all", "the", "txt", "records", "at", "once", "and", "it", "would", "plow", "through", "them", "all", "NUMBER", "As", "it", "be", "it", "be", "taking", "about", "an", "hour", "for", "each", "to", "propagate", "so", "my", "NUMBER", "domain", "cert", "be", "going", "to", "take", "all", "day", "NUMBER", "That", "would", "save", "me", "a", "LOT", "of", "time", "NUMBER", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "Imagine", "when", "u", "have", "NUMBER", "domains", "NUMBER", "dns", "servers", "and", "most", "of", "the", "domains", "hosted", "via", "on", "private", "cdn", "s", "or", "geo", "located", "servers", "NUMBER", "__________________________________", "NUMBER", "LINK", "NUMBER", "__________________________________", "On", "NUMBER", "May", "NUMBER", "NUMBER", "NUMBER", "PM", "captainwasabi", "write", "It", "would", "be", "nice", "if", "instead", "of", "processing", "domains", "one", "at", "a", "time", "it", "would", "hand", "the", "txt", "challenge", "for", "ALL", "the", "domains", "to", "me", "at", "once", "then", "I", "could", "create", "all", "the", "txt", "records", "at", "once", "and", "it", "would", "plow", "through", "them", "all", "NUMBER", "As", "it", "be", "it", "be", "taking", "about", "an", "hour", "for", "each", "to", "propagate", "so", "my", "NUMBER", "domain", "cert", "be", "going", "to", "take", "all", "day", "NUMBER", "That", "would", "save", "me", "a", "LOT", "of", "time", "NUMBER", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "or", "view", "it", "on", "GitHub", "LINK", "I", "wouldn", "t", "do", "that", "with", "dns", "NUMBER", "then", "unless", "I", "could", "write", "an", "automatic", "hook", "script", "to", "add", "it", "to", "the", "bind", "server", "NUMBER", "I", "m", "currently", "only", "having", "to", "go", "through", "this", "because", "I", "m", "currently", "use", "a", "wildcard", "cert", "that", "it", "won", "t", "use", "NUMBER", "It", "would", "be", "faster", "if", "network", "solutions", "I", "hates", "em", "but", "it", "ain", "t", "my", "call", "propagated", "faster", "NUMBER", "A", "and", "CNAME", "records", "don", "t", "seem", "to", "take", "this", "long", "to", "get", "out", "there", "NUMBER", "captainwasabi", "extremeshok", "Take", "a", "look", "at", "LINK", "_chain", "NUMBER", "md", "NUMBER", "That", "should", "allow", "you", "to", "deploy", "all", "the", "challenges", "at", "once", "instead", "of", "one", "at", "a", "time", "NUMBER", "AHH", "trying", "it", "NUMBER", "Nope", "but", "I", "think", "that", "s", "because", "the", "first", "ones", "still", "existed", "from", "the", "run", "I", "was", "make", "NUMBER", "So", "I", "ll", "wait", "for", "those", "to", "clear", "out", "then", "try", "again", "NUMBER", "hmm", "when", "my", "hook", "prints", "the", "deploy", "challenge", "it", "s", "just", "showing", "the", "first", "domain", "listed", "in", "domains", "NUMBER", "txt", "domain", "NUMBER", "txt", "be", "like", "domain", "NUMBER", "com", "cloud", "NUMBER", "domain", "NUMBER", "com", "mail", "NUMBER", "domain", "NUMBER", "com", "smtp", "NUMBER", "domain", "NUMBER", "com", "imap", "NUMBER", "domain", "NUMBER", "com", "NUMBER", "Am", "I", "doing", "something", "wrong", "This", "be", "my", "config", "NUMBER", "sh", "CA", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "CHALLENGETYPE", "dns", "NUMBER", "HOOK", "NUMBER", "hooks", "hook", "HOOK_CHAIN", "yes", "CONTACT_EMAIL", "myemail", "mydomain", "NUMBER", "com", "My", "hook", "script", "bin", "bash", "if", "NUMBER", "deploy_challenge", "then", "echo", "NUMBER", "echo", "NUMBER", "echo", "NUMBER", "echo", "fi", "The", "results", "print", "the", "challenge", "for", "domain", "NUMBER", "com", "then", "Responding", "to", "challenge", "for", "domain", "NUMBER", "com", "NUMBER", "ERROR", "Challenge", "be", "invalid", "returned", "invalid", "result", "type", "dns", "NUMBER", "status", "invalid", "NUMBER", "Please", "read", "LINK", "_chain", "NUMBER", "md", "again", "NUMBER", "X", "Y", "paramters", "be", "provide", "to", "your", "hook", "script", "if", "you", "use", "HOOK_CHAIN", "Add", "echo", "to", "your", "script", "and", "you", "will", "see", "all", "parameters", "NUMBER", "HTH", "ah", "duh", "NUMBER", "Thanks", "sigh", "NUMBER", "I", "don", "t", "get", "it", "NUMBER", "Well", "I", "get", "all", "we", "re", "talking", "about", "here", "NUMBER", "But", "while", "I", "wait", "for", "the", "TTL", "to", "time", "out", "again", "I", "write", "a", "script", "to", "watch", "the", "dns", "entries", "NUMBER", "Most", "of", "them", "be", "rock", "solid", "but", "one", "of", "them", "returns", "Not", "Found", "almost", "half", "the", "time", "NUMBER", "Tried", "to", "go", "forward", "anyway", "and", "of", "course", "it", "fail", "on", "that", "one", "which", "was", "the", "last", "one", "NUMBER", "So", "I", "m", "trying", "one", "more", "time", "NUMBER", "It", "s", "very", "weird", "as", "the", "TTL", "times", "out", "the", "challenge", "txt", "strings", "start", "bouncing", "between", "the", "two", "values", "rather", "than", "just", "flipping", "to", "the", "new", "one", "like", "I", "d", "expect", "NUMBER", "Does", "anyone", "know", "what", "dns", "server", "the", "letsencrypt", "server", "be", "use", "to", "check", "I", "d", "prefer", "to", "check", "against", "that", "server", "if", "possible", "and", "only", "go", "forward", "once", "they", "be", "stable", "there", "NUMBER", "I", "need", "this", "to", "work", "because", "not", "all", "the", "services", "I", "want", "to", "use", "this", "cert", "with", "use", "https", "See", "LINK", "challenge", "be", "in", "staging", "NUMBER", "NUMBER", "If", "the", "responses", "be", "bouncing", "between", "values", "there", "be", "most", "likely", "multiple", "servers", "involved", "which", "be", "not", "yet", "in", "sync", "NUMBER", "If", "you", "can", "access", "all", "servers", "directly", "you", "have", "to", "check", "all", "servers", "with", "your", "script", "NUMBER", "If", "the", "servers", "be", "behind", "some", "kind", "of", "load", "balancer", "you", "be", "out", "of", "luck", "NUMBER", "You", "can", "only", "guess", "how", "long", "it", "takes", "until", "all", "servers", "have", "the", "new", "information", "NUMBER", "Yup", "use", "google", "s", "dns", "NUMBER", "gonna", "change", "my", "script", "to", "use", "the", "dig", "command", "NUMBER", "Thanks", "again", "I", "m", "also", "having", "intermittent", "failure", "with", "DNS", "NUMBER", "and", "Cloudflare", "DNS", "NUMBER", "I", "be", "use", "the", "hook", "LINK", "CloudFlare", "Hook", "which", "doesn", "t", "support", "HOOK_CHAIN", "yes", "so", "it", "deploys", "the", "challenges", "one", "by", "one", "and", "waits", "for", "each", "challenge", "to", "propagate", "before", "returning", "to", "letsencrypt", "NUMBER", "sh", "NUMBER", "Problem", "be", "that", "the", "TXT", "record", "occasionally", "has", "not", "propagated", "to", "the", "LE", "server", "when", "the", "letsencrypt", "NUMBER", "sh", "calls", "to", "do", "the", "challenge", "NUMBER", "The", "domain", "I", "be", "trying", "to", "generate", "the", "certs", "for", "has", "NUMBER", "alt", "names", "so", "I", "have", "be", "unable", "to", "get", "completely", "through", "all", "NUMBER", "challenges", "before", "the", "script", "encounters", "a", "problem", "NUMBER", "The", "best", "solution", "would", "be", "for", "the", "hook", "NUMBER", "sh", "script", "to", "support", "HOOK_CHAIN", "yes", "deploy", "all", "challenges", "and", "them", "wait", "for", "the", "challenges", "to", "propagate", "to", "my", "server", "and", "then", "maybe", "wait", "a", "little", "longer", "to", "increase", "the", "odds", "that", "the", "LE", "server", "sees", "the", "challenges", "and", "doesn", "t", "error", "out", "NUMBER", "But", "maybe", "you", "could", "make", "a", "change", "in", "the", "letsencrypt", "NUMBER", "sh", "script", "to", "repeatedly", "call", "the", "deploy_challenge", "hook", "even", "if", "HOOK_CHAIN", "no", "wait", "an", "optionally", "number", "of", "seconds", "and", "then", "re", "loop", "through", "the", "challenges", "sending", "them", "to", "LE", "server", "possibly", "retrying", "the", "challenge", "if", "the", "challenge", "wasn", "t", "propagated", "to", "the", "LE", "resolver", "NUMBER", "Also", "I", "run", "the", "letsencrypt", "NUMBER", "sh", "script", "multiple", "times", "to", "generate", "this", "NUMBER", "name", "cert", "and", "it", "error", "d", "out", "so", "many", "times", "that", "I", "must", "have", "hit", "some", "pending", "challenges", "limit", "so", "I", "can", "no", "longer", "run", "this", "script", "I", "guess", "I", "will", "have", "to", "wait", "a", "week", "or", "so", "to", "see", "if", "the", "LE", "server", "clears", "out", "those", "pending", "challenges", "so", "I", "can", "generate", "new", "ones", "and", "finally", "make", "it", "through", "to", "the", "end", "and", "get", "a", "cert", "for", "my", "domain", "NUMBER", "It", "would", "be", "nice", "if", "the", "script", "cleared", "out", "those", "pending", "challenges", "before", "it", "exits", "with", "an", "error", "NUMBER", "I", "use", "the", "hook", "from", "this", "Gist", "LINK", "It", "doesn", "t", "directly", "support", "the", "hook_chain", "but", "it", "do", "print", "out", "all", "the", "return", "values", "the", "last", "one", "in", "each", "set", "be", "the", "deploy", "challenge", "then", "it", "waits", "until", "you", "hit", "return", "to", "move", "forward", "NUMBER", "Good", "luck", "NUMBER", "I", "use", "this", "command", "to", "check", "propagation", "for", "each", "domain", "dig", "t", "txt", "_acme", "challenge", "NUMBER", "domain", "NUMBER", "com", "trace", "grep", "_acme", "grep", "v", "DiG", "This", "be", "what", "I", "m", "use", "now", "NUMBER", "LINK", "I", "find", "out", "the", "lets", "encrypt", "API", "returned", "pretty", "json", "with", "new", "lines", "which", "break", "the", "sed", "parsing", "NUMBER", "This", "patch", "just", "remove", "the", "new", "lines", "from", "the", "json", "NUMBER", "Great", "NUMBER", "I", "just", "find", "out", "this", "morning", "that", "the", "script", "wasn", "t", "work", "so", "I", "write", "the", "quick", "fix", "NUMBER", "Your", "solution", "be", "much", "better", "NUMBER", "Thanks", "NUMBER", "as", "I", "did", "not", "have", "the", "time", "to", "rewrite", "this", "fix", "for", "FreeBSD", "sed", "I", "replaced", "sed", "with", "gsed", "and", "this", "fix", "worked", "fine", "with", "testCA", "parameter", "you", "can", "use", "staging", "API", "with", "all", "commands", "without", "moving", "any", "file", "or", "change", "configuration", "NUMBER", "Solves", "NUMBER", "with", "minimal", "change", "to", "code", "and", "configuration", "NUMBER", "be", "it", "possible", "to", "extend", "the", "domain", "NUMBER", "txt", "config", "for", "use", "different", "challenges", "for", "each", "host", "aka", "i", "need", "to", "use", "dns", "NUMBER", "challenges", "for", "roundrobins", "and", "http", "NUMBER", "for", "some", "external", "domains", "host", "challenges", "for", "roundrobins", "be", "hard", "to", "deploy", "but", "dns", "access", "to", "external", "domains", "be", "not", "possible", "here", "be", "an", "example", "for", "an", "example", "NUMBER", "com", "certificate", "which", "i", "would", "like", "to", "build", "http", "NUMBER", "challenges", "for", "example", "NUMBER", "com", "www", "NUMBER", "example", "NUMBER", "com", "host", "NUMBER", "example", "NUMBER", "com", "host", "NUMBER", "otherdomain", "NUMBER", "com", "dns", "NUMBER", "challenges", "for", "roundrobin", "NUMBER", "example", "NUMBER", "com", "more", "NUMBER", "roundrobin", "NUMBER", "example", "NUMBER", "com", "Hi", "I", "have", "permissions", "to", "edit", "the", "wiki", "page", "but", "I", "thought", "I", "d", "ask", "first", "NUMBER", "Is", "it", "possible", "to", "add", "my", "hook", "to", "the", "list", "It", "allows", "for", "manipulating", "Azure", "DNS", "records", "for", "certificates", "NUMBER", "Here", "it", "be", "Certzure", "LINK", "Thanks", "in", "advance", "NUMBER", "Thanks", "Lukas", "Could", "this", "be", "made", "an", "option", "Or", "if", "it", "can", "be", "do", "with", "hook", "can", "you", "add", "a", "doc", "entry", "regard", "how", "to", "do", "it", "Hook", "should", "actually", "contain", "CERTFILE", "instead", "of", "FULLCHAINFILE", "echo", "HOOK", "Merging", "KEYFILE", "and", "CERTFILE", "to", "ssl", "NUMBER", "pem", "umask", "NUMBER", "cat", "KEYFILE", "CERTFILE", "BASEDIR", "certs", "DOMAIN", "ssl", "NUMBER", "pem", "Ah", "no", "no", "NUMBER", "Lighttpd", "has", "NUMBER", "config", "options", "ssl", "NUMBER", "pemfile", "and", "ssl", "NUMBER", "ca", "file", "NUMBER", "Former", "should", "contain", "both", "KEYFILE", "and", "CERTFILE", "latter", "be", "FULLCHAINFILE", "NUMBER", "Using", "the", "hook", "method", "now", "and", "it", "works", "fine", "thanks", "However", "you", "might", "still", "want", "to", "add", "this", "use", "case", "to", "documentation", "for", "googlers", "sake", "NUMBER", "Instead", "of", "a", "simple", "hook", "it", "would", "be", "nice", "to", "have", "a", "pre", "hook", "and", "post", "hook", "so", "we", "can", "do", "cleanups", "afterwards", "NUMBER", "Ok", "let", "s", "store", "this", "in", "the", "brainfart", "section", "NUMBER", "Doh", "I", "use", "the", "hash", "of", "the", "private", "key", "for", "HKPK", "root", "excession", "letsencrypt", "NUMBER", "sh", "NUMBER", "letsencrypt", "NUMBER", "sh", "c", "d", "excession", "NUMBER", "gtaxl", "NUMBER", "net", "d", "irc", "NUMBER", "gtaxl", "NUMBER", "net", "t", "dns", "NUMBER", "k", "hooks", "cloudflare", "hook", "NUMBER", "py", "INFO", "Using", "main", "config", "file", "root", "letsencrypt", "NUMBER", "sh", "config", "NUMBER", "sh", "Generating", "account", "key", "NUMBER", "Registering", "account", "key", "with", "letsencrypt", "NUMBER", "Processing", "excession", "NUMBER", "gtaxl", "NUMBER", "net", "with", "alternative", "names", "irc", "NUMBER", "gtaxl", "NUMBER", "net", "Signing", "domains", "NUMBER", "Creating", "new", "directory", "root", "letsencrypt", "NUMBER", "sh", "certs", "excession", "NUMBER", "gtaxl", "NUMBER", "net", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "excession", "NUMBER", "gtaxl", "NUMBER", "net", "NUMBER", "Requesting", "challenge", "for", "irc", "NUMBER", "gtaxl", "NUMBER", "net", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "hooks", "cloudflare", "hook", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "import", "dns", "NUMBER", "resolver", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "dns", "resolver", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "import", "dns", "NUMBER", "message", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "dns", "message", "NUMBER", "py", "line", "NUMBER", "print", "id", "d", "self", "NUMBER", "id", "file", "s", "SyntaxError", "invalid", "syntax", "I", "m", "on", "Debian", "NUMBER", "Please", "help", "I", "have", "no", "idea", "why", "Github", "formatted", "it", "like", "that", "sorry", "NUMBER", "Use", "three", "backticks", "hans", "The", "documentation", "for", "WELLKNOWN", "gives", "conflicting", "instructions", "NUMBER", "your", "WELLKNOWN", "variable", "must", "include", "the", "acme", "challenge", "subdirectory", "eg", "WELLKNOWN", "etc", "wellknown", "acme", "challenge", "not", "WELLKNOWN", "etc", "wellknown", "An", "example", "config", "would", "be", "to", "create", "a", "directory", "var", "www", "letsencrypt", "set", "WELLKNOWN", "var", "www", "letsencrypt", "So", "do", "WELLKNOWN", "have", "to", "have", "acme", "challenge", "at", "the", "end", "or", "not", "What", "be", "the", "difference", "between", "WELLKNOWN", "etc", "wellknown", "acme", "challenge", "not", "WELLKNOWN", "etc", "wellknown", "and", "create", "directory", "var", "www", "letsencrypt", "set", "WELLKNOWN", "var", "www", "letsencrypt", "So", "if", "you", "set", "WELLKNOWN", "var", "www", "letsencrypt", "do", "letsencrypt", "NUMBER", "sh", "automatically", "create", "NUMBER", "well", "know", "acme", "challenge", "in", "it", "Does", "your", "WELLKNOWN", "variable", "must", "include", "the", "acme", "challenge", "subdirectory", "mean", "The", "WELLKNOWN", "variable", "must", "have", "acme", "challenge", "at", "the", "end", "i", "NUMBER", "e", "NUMBER", "WELLKNOWN", "foo", "bar", "acme", "challenge", "or", "The", "path", "set", "by", "WELLKNOWN", "must", "have", "an", "acme", "challenge", "directory", "in", "it", "i", "NUMBER", "e", "NUMBER", "WELLKNOWN", "foo", "bar", "mkdir", "foo", "bar", "acme", "challenge", "Sorry", "for", "be", "dense", "but", "the", "docs", "sortof", "imply", "two", "different", "things", "at", "once", "NUMBER", "Okay", "it", "just", "clicked", "there", "thank", "you", "Yeah", "the", "word", "could", "be", "clearer", "NUMBER", "the", "WELLKNOWN", "needs", "to", "point", "to", "the", "directory", "that", "the", "webserver", "will", "serve", "as", "the", "absolute", "path", "URI", "etc", "NUMBER", "Cheers", "Slightly", "relate", "Apparently", "the", "default", "value", "for", "WELLKNOWN", "be", "BASEDIR", "NUMBER", "acme", "challenges", "note", "the", "s", "at", "the", "end", "but", "everywhere", "else", "discusses", "just", "NUMBER", "acme", "challenge", "NUMBER", "I", "get", "around", "it", "by", "overriding", "the", "default", "in", "the", "config", "NUMBER", "sh", "file", "NUMBER", "Good", "point", "and", "thanks", "NUMBER", "I", "m", "use", "DNS", "NUMBER", "I", "m", "creating", "a", "cert", "with", "multiple", "altnames", "NUMBER", "I", "exec", "letsencrypt", "NUMBER", "sh", "c", "force", "config", "NUMBER", "config", "NUMBER", "sh", "hook", "NUMBER", "hook", "NUMBER", "sh", "domain", "example", "NUMBER", "com", "www", "NUMBER", "example", "NUMBER", "com", "s", "NUMBER", "example", "NUMBER", "com", "s", "NUMBER", "example", "NUMBER", "com", "In", "letsencrypt", "NUMBER", "sh", "NUMBER", "domain", "param", "be", "main", "domain", "subsequent", "params", "be", "altnames", "NUMBER", "Create", "certificate", "for", "domain", "s", "sign_domain", "domain", "NUMBER", "altnames", "timestamp", "date", "s", "NUMBER", "Per", "docs", "dns", "verification", "NUMBER", "md", "in", "order", "to", "respond", "to", "the", "challenge", "my", "DNS", "must", "contain", "entries", "for", "all", "of", "the", "domain", "altnames", "NUMBER", "Here", "e", "NUMBER", "g", "NUMBER", "_acme", "challenge", "IN", "TXT", "NUMBER", "_acme", "challenge", "NUMBER", "www", "IN", "TXT", "NUMBER", "_acme", "challenge", "NUMBER", "s", "NUMBER", "IN", "TXT", "NUMBER", "_acme", "challenge", "NUMBER", "s", "NUMBER", "IN", "TXT", "NUMBER", "This", "DNS", "record", "prep", "needs", "to", "be", "do", "in", "my", "hook", "NUMBER", "sh", "NUMBER", "And", "I", "need", "to", "prepare", "the", "DNS", "and", "wait", "for", "it", "to", "fully", "propagate", "_before_", "answering", "the", "challenges", "NUMBER", "So", "I", "d", "like", "to", "create", "ALL", "the", "necessary", "DNS", "records", "and", "reload", "dns", "to", "propagate", "early", "in", "the", "hook", "NUMBER", "But", "when", "invoking", "the", "script", "at", "the", "initial", "invocation", "NUMBER", "params", "be", "pass", "NUMBER", "deploy_challenge", "NUMBER", "example", "NUMBER", "com", "NUMBER", "NUMBER", "gA", "NUMBER", "NUMBER", "GpU", "NUMBER", "with", "ONLY", "the", "main", "domain", "available", "at", "this", "stage", "NUMBER", "How", "can", "I", "get", "the", "full", "list", "of", "domain", "altnames", "from", "letsencrypt", "NUMBER", "sh", "into", "my", "hook", "on", "NUMBER", "call", "The", "info", "s", "there", "as", "sign_domain", "call", "s", "parsing", "the", "names", "NUMBER", "Do", "I", "have", "to", "separately", "manually", "replicate", "the", "parse", "in", "my", "hook", "NUMBER", "sh", "dealing", "with", "either", "domain", "NUMBER", "or", "domains", "NUMBER", "txt", "use", "HOOK_CHAIN", "see", "LINK", "_chain", "NUMBER", "md", "Great", "thx", "NUMBER", "With", "NUMBER", "config", "NUMBER", "sh", "NUMBER", "HOOK_CHAIN", "yes", "NUMBER", "The", "args", "pass", "to", "hook", "NUMBER", "sh", "now", "take", "the", "Y", "X", "parameters", "form", "deploy_challenge", "example", "NUMBER", "com", "NUMBER", "D", "NUMBER", "V", "NUMBER", "F", "NUMBER", "www", "NUMBER", "example", "NUMBER", "com", "NUMBER", "V", "NUMBER", "dTn", "NUMBER", "over", "which", "I", "need", "to", "parse", "iterate", "NUMBER", "The", "docs", "example", "point", "out", "NUMBER", "Program", "or", "function", "call", "in", "certain", "situations", "After", "generating", "the", "challenge", "response", "or", "after", "fail", "challenge", "in", "this", "case", "altname", "be", "empty", "Given", "argument", "clean_challenge", "deploy_challenge", "altname", "token", "filename", "token", "content", "After", "successfully", "signing", "certificate", "Given", "argument", "deploy_cert", "domain", "path", "to", "privkey", "NUMBER", "pem", "path", "to", "cert", "NUMBER", "pem", "path", "to", "fullchain", "NUMBER", "pem", "BASEDIR", "and", "WELLKNOWN", "variables", "be", "export", "and", "can", "be", "use", "in", "an", "external", "program", "default", "TAG", "HOOK", "Chain", "clean_challenge", "deploy_challenge", "argument", "together", "into", "one", "hook", "call", "per", "certificate", "default", "no", "HOOK_CHAIN", "no", "NUMBER", "Extrapolating", "in", "the", "hook", "chain", "case", "the", "return", "deploy_challenge", "example", "NUMBER", "com", "NUMBER", "D", "NUMBER", "V", "NUMBER", "F", "NUMBER", "www", "NUMBER", "example", "NUMBER", "com", "NUMBER", "V", "NUMBER", "dTn", "NUMBER", "be", "deploy_challenge", "main_domain", "NUMBER", "token", "filename", "NUMBER", "token", "content", "NUMBER", "altname", "NUMBER", "token", "filename", "NUMBER", "token", "content", "NUMBER", "Is", "that", "correct", "And", "more", "importantly", "be", "that", "stable", "unchanging", "syntax", "def", "d", "by", "acme", "lukas", "NUMBER", "I", "know", "but", "haven", "t", "seen", "that", "upstream", "s", "work", "on", "DNS", "NUMBER", "auth", "code", "still", "in", "beta", "NUMBER", "I", "assume", "that", "acme", "server", "at", "some", "point", "in", "the", "procedure", "ACKs", "returns", "the", "domain", "alt", "names", "as", "well", "as", "the", "challenge", "tokens", "NUMBER", "AfaYk", "be", "that", "format", "defined", "stable", "If", "so", "then", "possibly", "adopting", "it", "here", "would", "be", "helpful", "NUMBER", "If", "not", "of", "course", "then", "we", "just", "deal", "with", "it", "here", "NUMBER", "My", "domains", "currently", "parked", "at", "namecheap", "name", "server", "NUMBER", "I", "wanna", "to", "use", "DNS", "NUMBER", "challenge", "to", "renew", "certificate", "NUMBER", "However", "i", "see", "no", "namecheap", "support", "in", "the", "hook", "list", "NUMBER", "What", "else", "I", "can", "do", "to", "have", "automatic", "operation", "NUMBER", "bt", "LINK", "_dns_api_hook", "NUMBER", "sh", "Thanks", "be", "you", "willing", "to", "add", "this", "to", "the", "DNS", "hook", "list", "LINK", "for", "DNS", "NUMBER", "hooks", "samtombson", "bviktor", "Sure", "I", "willing", "NUMBER", "I", "m", "work", "on", "DNS", "auth", "with", "latest", "letsenctypt", "NUMBER", "sh", "git", "src", "git", "log", "head", "commit", "a", "NUMBER", "c", "NUMBER", "af", "NUMBER", "fbe", "NUMBER", "c", "NUMBER", "a", "NUMBER", "a", "NUMBER", "cc", "NUMBER", "ccd", "NUMBER", "bb", "NUMBER", "Author", "Lukas", "Schauer", "TAG", "Date", "Wed", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "remove", "donation", "button", "commit", "NUMBER", "ad", "NUMBER", "f", "NUMBER", "dbbbc", "NUMBER", "ab", "NUMBER", "eb", "NUMBER", "b", "NUMBER", "b", "NUMBER", "cbf", "NUMBER", "dc", "NUMBER", "Merge", "adef", "NUMBER", "c", "NUMBER", "c", "NUMBER", "b", "Author", "Lukas", "Schauer", "TAG", "Date", "Tue", "Apr", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "exec", "the", "script", "letsencrypt", "NUMBER", "sh", "c", "config", "NUMBER", "config", "NUMBER", "sh", "challenge", "dns", "NUMBER", "algo", "prime", "NUMBER", "v", "NUMBER", "hook", "NUMBER", "hook", "NUMBER", "sh", "domain", "example", "NUMBER", "com", "which", "returns", "NUMBER", "Responding", "to", "challenge", "for", "example", "NUMBER", "com", "NUMBER", "ERROR", "Challenge", "be", "invalid", "returned", "invalid", "result", "type", "dns", "NUMBER", "status", "invalid", "error", "type", "urn", "acme", "error", "unauthorized", "detail", "Correct", "value", "not", "find", "for", "DNS", "challenge", "uri", "LINK", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "challenge", "EY", "NUMBER", "llU", "NUMBER", "token", "g", "NUMBER", "r", "NUMBER", "avQ", "keyAuthorization", "g", "NUMBER", "r", "NUMBER", "avQ", "NUMBER", "Ytm", "NUMBER", "EUY", "My", "hook", "script", "add", "update", "the", "appropriate", "TXT", "record", "to", "my", "local", "hidden", "primary", "DNS", "during", "the", "script", "exec", "which", "in", "turn", "notifies", "the", "secondary", "and", "then", "in", "NUMBER", "NUMBER", "minutes", "it", "propagates", "out", "to", "the", "main", "public", "servers", "NUMBER", "E", "NUMBER", "g", "NUMBER", "aftere", "NUMBER", "mins", "dig", "TXT", "_acme", "challenge", "NUMBER", "example", "NUMBER", "com", "NUMBER", "grep", "ANSWER", "A", "NUMBER", "ANSWER", "SECTION", "_acme", "challenge", "NUMBER", "example", "NUMBER", "com", "NUMBER", "NUMBER", "IN", "TXT", "b", "M", "NUMBER", "MYY", "The", "le", "NUMBER", "sh", "dns", "doc", "says", "NUMBER", "That", "could", "be", "do", "manually", "as", "most", "providers", "don", "t", "have", "a", "DNS", "API", "by", "having", "your", "hook", "script", "echo", "NUMBER", "NUMBER", "and", "NUMBER", "and", "then", "wait", "read", "s", "r", "e", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "MB", "s", "in", "NUMBER", "s", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "MB", "s", "ngrok", "NUMBER", "zip", "saved", "NUMBER", "NUMBER", "Archive", "ngrok", "NUMBER", "zip", "inflating", "ngrok", "Checking", "if", "help", "command", "be", "work", "NUMBER", "Checking", "if", "log", "contains", "Default", "command", "help", "NUMBER", "PASS", "Checking", "if", "log", "contains", "help", "h", "NUMBER", "PASS", "Checking", "if", "log", "contains", "domain", "d", "domain", "NUMBER", "tld", "NUMBER", "PASS", "Checking", "if", "errorlog", "be", "empty", "NUMBER", "PASS", "First", "run", "in", "cron", "mode", "checking", "if", "private", "key", "be", "generate", "and", "registered", "Checking", "if", "log", "contains", "Registering", "account", "key", "NUMBER", "PASS", "Checking", "if", "file", "private_key", "NUMBER", "pem", "exists", "NUMBER", "PASS", "Checking", "if", "errorlog", "be", "empty", "NUMBER", "PASS", "Try", "signing", "use", "temporary", "config", "location", "and", "with", "domain", "as", "command", "line", "parameter", "Checking", "if", "log", "doesn", "t", "contain", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Generating", "private", "key", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Requesting", "challenge", "for", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "db", "NUMBER", "ngrok", "NUMBER", "io", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Requesting", "challenge", "for", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "ngrok", "NUMBER", "io", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Challenge", "be", "valid", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Creating", "fullchain", "NUMBER", "pem", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Done", "NUMBER", "PASS", "Checking", "if", "errorlog", "be", "empty", "NUMBER", "PASS", "Run", "in", "cron", "mode", "again", "this", "time", "add", "third", "domain", "should", "force", "renewal", "NUMBER", "Checking", "if", "log", "contains", "Domain", "name", "s", "be", "not", "matching", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Forcing", "renew", "NUMBER", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Requesting", "challenge", "for", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "db", "NUMBER", "ngrok", "NUMBER", "io", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Requesting", "challenge", "for", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "ngrok", "NUMBER", "io", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Requesting", "challenge", "for", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ngrok", "NUMBER", "io", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Challenge", "be", "valid", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Creating", "fullchain", "NUMBER", "pem", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Done", "NUMBER", "PASS", "Checking", "if", "errorlog", "be", "empty", "NUMBER", "PASS", "Run", "in", "cron", "mode", "again", "this", "time", "with", "domain", "in", "domains", "NUMBER", "txt", "should", "find", "non", "expiring", "certificate", "Checking", "if", "log", "contains", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Skipping", "NUMBER", "PASS", "Checking", "if", "errorlog", "be", "empty", "NUMBER", "PASS", "Run", "in", "cron", "mode", "one", "last", "time", "with", "domain", "in", "domains", "NUMBER", "txt", "and", "force", "resign", "Checking", "if", "log", "contains", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Ignoring", "because", "renew", "was", "forced", "NUMBER", "PASS", "Checking", "if", "log", "doesn", "t", "contain", "Generating", "private", "key", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Requesting", "challenge", "for", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "db", "NUMBER", "ngrok", "NUMBER", "io", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Requesting", "challenge", "for", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "ngrok", "NUMBER", "io", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Requesting", "challenge", "for", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ngrok", "NUMBER", "io", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Challenge", "be", "valid", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Creating", "fullchain", "NUMBER", "pem", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Done", "NUMBER", "PASS", "Checking", "if", "errorlog", "be", "empty", "NUMBER", "PASS", "Running", "signcsr", "command", "Checking", "if", "log", "contains", "BEGIN", "CERTIFICATE", "NUMBER", "PASS", "Checking", "if", "log", "contains", "END", "CERTIFICATE", "NUMBER", "PASS", "Checking", "if", "log", "doesn", "t", "contain", "ERROR", "NUMBER", "PASS", "Run", "in", "cron", "mode", "again", "to", "check", "if", "renewal", "works", "Checking", "if", "log", "contains", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Renewing", "NUMBER", "PASS", "Checking", "if", "errorlog", "be", "empty", "NUMBER", "PASS", "Verifying", "certificate", "NUMBER", "Verifying", "certificate", "on", "its", "own", "NUMBER", "PASS", "Checking", "if", "log", "contains", "CN", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "db", "NUMBER", "ngrok", "NUMBER", "io", "NUMBER", "PASS", "Checking", "if", "log", "contains", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "ngrok", "NUMBER", "io", "NUMBER", "PASS", "Verifying", "file", "with", "full", "chain", "NUMBER", "PASS", "Verifying", "certificate", "against", "CA", "certificate", "NUMBER", "PASS", "Checking", "if", "errorlog", "be", "empty", "NUMBER", "PASS", "Revoking", "certificate", "NUMBER", "Checking", "if", "log", "contains", "Revoking", "certs", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "db", "NUMBER", "ngrok", "NUMBER", "io", "cert", "NUMBER", "pem", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Done", "NUMBER", "NUMBER", "PASS", "Checking", "if", "file", "certs", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "db", "NUMBER", "ngrok", "NUMBER", "io", "cert", "NUMBER", "pem", "revoked", "exists", "NUMBER", "PASS", "Checking", "if", "errorlog", "be", "empty", "NUMBER", "PASS", "Cleaning", "up", "certificates", "Checking", "if", "log", "contains", "Moving", "unuse", "file", "to", "archive", "directory", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "db", "NUMBER", "ngrok", "NUMBER", "io", "cert", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Moving", "unuse", "file", "to", "archive", "directory", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "db", "NUMBER", "ngrok", "NUMBER", "io", "chain", "NUMBER", "PASS", "Checking", "if", "log", "contains", "Moving", "unuse", "file", "to", "archive", "directory", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "db", "NUMBER", "ngrok", "NUMBER", "io", "fullchain", "NUMBER", "PASS", "Checking", "if", "errorlog", "be", "empty", "NUMBER", "PASS", "Ah", "good", "catch", "NUMBER", "I", "m", "pretty", "sure", "I", "can", "fix", "that", "NUMBER", "I", "ll", "have", "an", "update", "later", "today", "NUMBER", "Ok", "I", "ve", "fix", "those", "by", "use", "sed", "n", "NUMBER", "Using", "your", "examples", "bash", "NUMBER", "echo", "bla", "test", "challenges", "sed", "n", "s", "NUMBER", "challenges", "NUMBER", "NUMBER", "bash", "NUMBER", "echo", "bla", "test", "nochallengesforyou", "sed", "n", "s", "NUMBER", "challenges", "NUMBER", "NUMBER", "bash", "NUMBER", "echo", "foo", "bar", "sed", "n", "s", "NUMBER", "foo", "NUMBER", "NUMBER", "bash", "NUMBER", "echo", "nofoo", "bar", "sed", "n", "s", "NUMBER", "foo", "NUMBER", "NUMBER", "bash", "NUMBER", "I", "get", "the", "same", "results", "on", "Linux", "Mac", "OS", "X", "and", "SmartOS", "NUMBER", "And", "I", "think", "the", "CI", "test", "failure", "be", "again", "a", "transient", "error", "NUMBER", "The", "test", "suite", "pass", "when", "use", "my", "test", "container", "as", "above", "NUMBER", "Yep", "you", "re", "right", "I", "did", "forget", "that", "NUMBER", "Fixed", "up", "now", "NUMBER", "This", "be", "similar", "to", "NUMBER", "NUMBER", "I", "be", "test", "against", "own", "instance", "of", "boulder", "run", "at", "NUMBER", "NUMBER", "When", "I", "run", "letsencrypt", "NUMBER", "sh", "c", "for", "the", "first", "time", "I", "get", "an", "error", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "reg", "Status", "NUMBER", "Details", "type", "urn", "acme", "error", "malformed", "detail", "Provided", "agreement", "URL", "LINK", "SA", "v", "NUMBER", "July", "NUMBER", "NUMBER", "pdf", "do", "not", "match", "current", "agreement", "URL", "LINK", "status", "NUMBER", "After", "I", "change", "the", "config", "NUMBER", "sh", "to", "set", "LICENSE", "to", "point", "to", "the", "test", "server", "and", "run", "letsencrypt", "NUMBER", "sh", "c", "I", "get", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "authz", "Status", "NUMBER", "Details", "type", "urn", "acme", "error", "unauthorized", "detail", "No", "registration", "exists", "matching", "provide", "key", "status", "NUMBER", "That", "be", "there", "were", "no", "attempts", "to", "try", "to", "register", "again", "after", "the", "previous", "fail", "attempt", "NUMBER", "To", "recover", "I", "had", "to", "delete", "private_key", "NUMBER", "pem", "NUMBER", "In", "certain", "environments", "a", "server", "cannot", "get", "HTTP", "S", "directly", "but", "only", "via", "a", "http_proxy", "NUMBER", "Would", "be", "nice", "to", "have", "a", "proxy", "seetting", "in", "etc", "letsencrypt", "NUMBER", "sh", "config", "NUMBER", "sh", "for", "curl", "to", "use", "it", "I", "agree", "that", "s", "the", "way", "I", "did", "it", "altho", "it", "d", "have", "be", "nice", "to", "have", "it", "configurable", "in", "the", "config", "_", "Hi", "your", "script", "seems", "very", "well", "maintained", "and", "I", "m", "against", "duplicating", "efforts", "so", "I", "d", "like", "to", "eliminate", "the", "need", "for", "my", "own", "LE", "renewal", "script", "NUMBER", "I", "think", "we", "agree", "that", "automating", "SSL", "renewals", "without", "actually", "checking", "if", "they", "succeed", "or", "not", "be", "pretty", "brave", "NUMBER", "For", "this", "reason", "it", "s", "essential", "to", "have", "email", "notifications", "for", "every", "renewal", "event", "NUMBER", "I", "d", "love", "to", "open", "a", "PR", "but", "your", "script", "be", "rather", "extensive", "and", "unfortunately", "I", "don", "t", "have", "the", "capacity", "to", "analyze", "it", "and", "test", "things", "out", "ATM", "NUMBER", "So", "in", "hopes", "that", "it", "ll", "be", "helpful", "here", "s", "my", "script", "LINK", "renew", "I", "d", "like", "to", "add", "some", "quick", "pointers", "to", "make", "it", "easier", "NUMBER", "You", "shall", "add", "to", "config", "NUMBER", "sh", "RCPT", "CONTACT_EMAIL", "SMTP_HOST", "SMTP_SENDER", "SMTP_USER", "this", "be", "not", "necessarily", "the", "best", "choice", "of", "words", "because", "this", "include", "the", "password", "as", "well", "And", "for", "the", "script", "itself", "the", "following", "A", "temp", "mail", "file", "that", "s", "delete", "before", "each", "run", "MAIL_FILE", "in", "my", "script", "mail_header", "mail_footer", "mail_echo", "check_cert", "Then", "check_cert", "mail_echo", "TAG", "mail_echo", "TAG", "for", "every", "domain", "and", "mail_footer", "curl", "CURL_FLAGS", "ssl", "reqd", "mail", "from", "SMTP_SENDER", "mail", "rcpt", "RCPT", "user", "SMTP_USER", "upload", "file", "MAIL_FILE", "url", "SMTP_HOST", "to", "every", "exit", "point", "finish", "in", "my", "script", "NUMBER", "I", "m", "not", "a", "big", "fan", "of", "HTML", "emails", "but", "for", "these", "alerts", "it", "s", "very", "very", "useful", "to", "make", "failures", "easy", "to", "spot", "NUMBER", "Screenshots", "TAG", "TAG", "Also", "there", "s", "room", "for", "improvement", "because", "SMTPS", "should", "be", "optional", "IMO", "NUMBER", "Not", "because", "I", "m", "against", "security", "but", "because", "some", "people", "may", "use", "an", "intranet", "SMTP", "relay", "in", "which", "case", "SSL", "be", "unnecessary", "NUMBER", "E", "NUMBER", "g", "NUMBER", "if", "SMTP_SSL", "eq", "NUMBER", "then", "CURL_FLAGS", "CURL_FLAGS", "ssl", "reqd", "fi", "Looking", "forward", "to", "your", "opinion", "thanks", "NUMBER", "I", "d", "like", "as", "well", "to", "have", "the", "email", "option", "but", "by", "external", "hooks", "be", "the", "best", "way", "NUMBER", "KISS", "I", "d", "like", "to", "point", "out", "that", "the", "script", "should", "send", "emails", "upon", "success", "as", "well", "because", "if", "you", "only", "send", "mails", "upon", "failure", "and", "you", "don", "t", "receive", "an", "email", "that", "could", "mean", "NUMBER", "things", "a", "the", "renewal", "succeeded", "b", "both", "the", "renewal", "and", "email", "sending", "fail", "If", "you", "send", "emails", "both", "upon", "success", "and", "failure", "it", "s", "clear", "that", "s", "something", "s", "going", "on", "when", "you", "don", "t", "receive", "an", "email", "NUMBER", "So", "um", "be", "this", "supposed", "to", "be", "a", "deploy_cert", "hook", "Is", "there", "a", "way", "for", "the", "hook", "to", "query", "the", "path", "of", "the", "resulting", "cert", "or", "should", "I", "just", "use", "etc", "letsencrypt", "live", "DOMAIN_NAME", "cert", "NUMBER", "pem", "I", "m", "a", "bit", "confused", "NUMBER", "For", "NUMBER", "this", "says", "For", "DNS", "validation", "this", "be", "what", "you", "want", "to", "put", "in", "the", "_acme", "challenge", "TXT", "record", "NUMBER", "and", "there", "s", "no", "NUMBER", "at", "all", "NUMBER", "OTOH", "dns", "verification", "NUMBER", "md", "says", "NUMBER", "be", "a", "challenge", "token", "which", "be", "not", "needed", "for", "dns", "NUMBER", "and", "NUMBER", "be", "a", "token", "which", "needs", "to", "be", "inserted", "in", "a", "TXT", "record", "for", "the", "domain", "Which", "one", "be", "right", "Or", "be", "I", "miss", "something", "here", "Nevermind", "I", "m", "dumb", "sorry", "In", "my", "scenario", "where", "I", "automate", "certificate", "issuance", "through", "the", "letsencrypt", "NUMBER", "sh", "client", "I", "need", "to", "also", "have", "a", "hook", "for", "all", "certificates", "of", "which", "the", "domains", "haven", "t", "change", "and", "which", "be", "still", "valid", "NUMBER", "I", "tried", "to", "integrate", "this", "functionality", "as", "I", "think", "more", "people", "could", "benefit", "from", "this", "feature", "NUMBER", "As", "far", "as", "I", "be", "concerned", "it", "works", "as", "expected", "NUMBER", "I", "d", "greatly", "appreciate", "if", "you", "could", "merge", "this", "pull", "request", "NUMBER", "Thanks", "Leon", "Ok", "I", "ve", "change", "the", "message", "to", "just", "say", "Skipping", "renew", "NUMBER", "see", "LINK", "Just", "one", "minor", "comment", "I", "think", "you", "should", "update", "the", "hook", "NUMBER", "sh", "NUMBER", "example", "file", "inline", "with", "the", "commit", "above", "to", "show", "that", "deploy_cert", "now", "takes", "an", "additional", "timestamp", "argument", "NUMBER", "I", "just", "get", "bitten", "by", "this", "write", "a", "hook", "script", "with", "deploy_cert", "expecting", "NUMBER", "argument", "when", "NUMBER", "was", "required", "NUMBER", "Great", "software", "though", "Just", "as", "the", "title", "says", "NUMBER", "The", "strange", "construct", "with", "wait", "be", "because", "with", "a", "regular", "subshell", "set", "e", "do", "not", "propagate", "cause", "the", "script", "to", "misbehave", "NUMBER", "Also", "add", "some", "newlines", "to", "the", "error", "function", "to", "make", "the", "output", "more", "readable", "in", "case", "of", "error", "in", "keep", "going", "mode", "NUMBER", "I", "be", "for", "some", "keep", "going", "options", "too", "NUMBER", "We", "have", "hundreds", "of", "domains", "NUMBER", "I", "hate", "when", "some", "domain", "can", "end", "program", "because", "challenge", "be", "invalid", "NUMBER", "We", "need", "continue", "checking", "rest", "of", "domains", "NUMBER", "Because", "of", "the", "plain", "amount", "of", "sub", "domains", "I", "be", "use", "I", "keep", "run", "into", "the", "rate", "limit", "a", "lot", "of", "the", "times", "NUMBER", "A", "lot", "of", "the", "other", "domains", "would", "still", "renew", "successfully", "but", "the", "script", "in", "cron", "mode", "aborts", "after", "the", "first", "cert", "fail", "to", "renew", "NUMBER", "It", "would", "be", "extremely", "useful", "to", "have", "an", "option", "to", "make", "it", "continue", "with", "the", "other", "certs", "if", "one", "of", "them", "fail", "NUMBER", "the", "keep", "going", "features", "be", "required", "for", "many", "real", "world", "situations", "NUMBER", "a", "domain", "do", "no", "longer", "point", "to", "the", "server", "which", "created", "the", "cert", "NUMBER", "the", "script", "do", "not", "know", "this", "so", "it", "try", "to", "renew", "the", "cert", "which", "fail", "and", "it", "stops", "no", "renew", "for", "the", "other", "domainnames", "NUMBER", "Solution", "NUMBER", "enable", "dns", "checks", "for", "the", "domainnames", "where", "the", "IN", "A", "has", "to", "point", "to", "an", "ip", "in", "the", "output", "of", "ip", "addr", "NUMBER", "NUMBER", "enable", "a", "admin", "notification", "emailadress", "to", "get", "an", "email", "if", "a", "fail", "on", "the", "creation", "or", "renew", "of", "a", "cert", "happens", "NUMBER", "NUMBER", "keep", "going", "with", "the", "next", "cert", "NUMBER", "NUMBER", "keep", "track", "of", "the", "amount", "of", "fail", "incase", "LE", "has", "a", "failrate", "limit", "NUMBER", "Lets", "be", "honest", "your", "script", "be", "now", "in", "use", "by", "a", "lot", "of", "hosters", "as", "it", "s", "the", "only", "easy", "to", "integrate", "solution", "on", "the", "market", "NUMBER", "You", "properbly", "will", "get", "a", "lot", "a", "those", "stability", "request", "in", "the", "near", "future", "NUMBER", "I", "have", "a", "problem", "signing", "certificate", "use", "live", "CA", "stage", "CA", "works", "NUMBER", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "xxxxxxxxxxxxxxxxxxx", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "authz", "Status", "NUMBER", "Details", "type", "urn", "acme", "error", "unauthorized", "detail", "No", "registration", "exists", "matching", "provide", "key", "status", "NUMBER", "root", "proxy", "Also", "I", "copied", "exist", "letsencrypt", "certificate", "from", "another", "server", "and", "tried", "to", "renew", "it", "use", "this", "client", "I", "ve", "get", "the", "same", "error", "NUMBER", "Sorry", "for", "be", "silly", "NUMBER", "I", "looked", "into", "code", "and", "delete", "private_key", "NUMBER", "pem", "created", "for", "stage", "CA", "NUMBER", "Now", "it", "works", "NUMBER", "As", "a", "nginx", "user", "I", "need", "both", "in", "the", "same", "file", "NUMBER", "It", "would", "be", "nice", "if", "I", "could", "just", "copy", "the", "whole", "script", "output", "to", "my", "certificate", "file", "instead", "of", "having", "to", "append", "the", "intermediate", "certificate", "manually", "ah", "didn", "t", "know", "that", "was", "always", "use", "s", "I", "know", "I", "m", "late", "to", "the", "party", "but", "I", "object", "to", "this", "change", "NUMBER", "I", "ve", "specifically", "write", "the", "signcsr", "command", "LINK", "to", "be", "as", "simple", "as", "possible", "doing", "only", "what", "be", "strictly", "needed", "NUMBER", "That", "be", "get", "a", "CSR", "sign", "NUMBER", "If", "you", "need", "the", "certificate", "chain", "you", "can", "get", "it", "yourself", "NUMBER", "As", "the", "commit", "shows", "it", "s", "only", "a", "few", "lines", "NUMBER", "I", "need", "my", "Certificate", "chain", "in", "a", "separate", "file", "and", "now", "I", "have", "to", "manually", "split", "the", "output", "again", "NUMBER", "Or", "at", "least", "make", "it", "configurable", "to", "include", "the", "full", "chain", "or", "not", "NUMBER", "In", "cron", "mode", "letsencrypt", "NUMBER", "sh", "stops", "after", "creating", "the", "first", "non", "existant", "certificate", "NUMBER", "Say", "domains", "NUMBER", "txt", "contains", "test", "NUMBER", "example", "NUMBER", "com", "test", "NUMBER", "example", "NUMBER", "com", "test", "NUMBER", "example", "NUMBER", "com", "If", "the", "test", "NUMBER", "cert", "exists", "and", "hasn", "t", "expired", "letsencrypt", "NUMBER", "sh", "creates", "a", "certificate", "for", "test", "NUMBER", "and", "then", "just", "stops", "NUMBER", "Trace", "NUMBER", "n", "home", "letsencrypt", "hooks", "hook", "NUMBER", "py", "home", "letsencrypt", "hooks", "hook", "NUMBER", "py", "deploy_cert", "test", "NUMBER", "example", "NUMBER", "com", "home", "letsencrypt", "certs", "certs", "test", "NUMBER", "example", "NUMBER", "com", "privkey", "NUMBER", "pem", "home", "letsencrypt", "certs", "certs", "test", "NUMBER", "example", "NUMBER", "com", "cert", "NUMBER", "pem", "home", "letsencrypt", "certs", "certs", "test", "NUMBER", "example", "NUMBER", "com", "fullchain", "NUMBER", "pem", "home", "letsencrypt", "certs", "certs", "test", "NUMBER", "example", "NUMBER", "com", "chain", "NUMBER", "pem", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "home", "letsencrypt", "hooks", "hook", "NUMBER", "py", "deploy_cert", "test", "NUMBER", "example", "NUMBER", "com", "home", "letsencrypt", "certs", "certs", "test", "NUMBER", "example", "NUMBER", "com", "privkey", "NUMBER", "pem", "home", "letsencrypt", "certs", "certs", "test", "NUMBER", "example", "NUMBER", "com", "cert", "NUMBER", "pem", "home", "letsencrypt", "certs", "certs", "test", "NUMBER", "example", "NUMBER", "com", "fullchain", "NUMBER", "pem", "home", "letsencrypt", "certs", "certs", "test", "NUMBER", "example", "NUMBER", "com", "chain", "NUMBER", "pem", "unset", "challenge_token", "echo", "Done", "Done", "read", "r", "line", "n", "exit", "NUMBER", "remove_lock", "rm", "f", "home", "letsencrypt", "certs", "lock", "Tested", "with", "revision", "NUMBER", "a", "NUMBER", "a", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "fa", "NUMBER", "b", "NUMBER", "c", "NUMBER", "ed", "bash", "version", "GNU", "bash", "version", "NUMBER", "NUMBER", "release", "x", "NUMBER", "_", "NUMBER", "pc", "linux", "gnu", "Something", "consumes", "stdin", "when", "sign_domain", "be", "call", "NUMBER", "As", "a", "result", "the", "DOMAINS_TXT", "loop", "has", "nothing", "to", "read", "anymore", "and", "exists", "after", "the", "first", "certificate", "has", "be", "sign", "NUMBER", "The", "following", "patch", "fix", "this", "bug", "for", "me", "but", "may", "be", "overly", "complicated", "I", "m", "not", "that", "fluent", "in", "shell", "code", "diff", "diff", "git", "a", "letsencrypt", "NUMBER", "sh", "b", "letsencrypt", "NUMBER", "sh", "index", "c", "NUMBER", "ea", "NUMBER", "b", "NUMBER", "NUMBER", "a", "letsencrypt", "NUMBER", "sh", "b", "letsencrypt", "NUMBER", "sh", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "command_sign_domains", "_exiterr", "domains", "NUMBER", "txt", "not", "find", "and", "domain", "not", "given", "fi", "DOMAINS_ARR", "while", "read", "r", "line", "do", "DOMAINS_ARR", "line", "do", "TAG", "dev", "null", "openssl", "dgst", "sha", "NUMBER", "binary", "openssl", "enc", "base", "NUMBER", "printf", "nHTTP", "Key", "Pinning", "n", "pin", "sha", "NUMBER", "hpkp", "n", "HANDLER", "NUMBER", "shift", "HANDLER", "Check", "that", "usr", "local", "etc", "letsencrypt", "NUMBER", "sh", "hooks", "NUMBER", "sh", "exists", "be", "readable", "and", "executable", "e", "NUMBER", "g", "NUMBER", "permissions", "be", "NUMBER", "and", "the", "be", "set", "correct", "NUMBER", "I", "change", "it", "to", "usr", "local", "bin", "bash", "but", "the", "problem", "persists", "NUMBER", "hooks", "NUMBER", "sh", "has", "the", "same", "permissions", "like", "config", "NUMBER", "sh", "and", "be", "in", "the", "same", "folder", "NUMBER", "drwxr", "xr", "x", "NUMBER", "root", "wheel", "NUMBER", "B", "NUMBER", "Feb", "NUMBER", "NUMBER", "NUMBER", "acme", "challenges", "drwx", "NUMBER", "root", "wheel", "NUMBER", "B", "NUMBER", "Feb", "NUMBER", "NUMBER", "certs", "rw", "r", "r", "NUMBER", "root", "wheel", "NUMBER", "NUMBER", "K", "NUMBER", "Feb", "NUMBER", "NUMBER", "config", "NUMBER", "sh", "rw", "r", "r", "NUMBER", "root", "wheel", "NUMBER", "NUMBER", "K", "NUMBER", "Feb", "NUMBER", "NUMBER", "config", "NUMBER", "sh", "NUMBER", "example", "rw", "r", "r", "NUMBER", "root", "wheel", "NUMBER", "B", "NUMBER", "Feb", "NUMBER", "NUMBER", "domains", "NUMBER", "txt", "rw", "r", "r", "NUMBER", "root", "wheel", "NUMBER", "B", "NUMBER", "Feb", "NUMBER", "NUMBER", "domains", "NUMBER", "txt", "NUMBER", "example", "rw", "r", "r", "NUMBER", "root", "wheel", "NUMBER", "NUMBER", "K", "NUMBER", "Feb", "NUMBER", "NUMBER", "hooks", "NUMBER", "sh", "rw", "r", "r", "NUMBER", "root", "wheel", "NUMBER", "NUMBER", "K", "NUMBER", "Feb", "NUMBER", "NUMBER", "hooks", "NUMBER", "sh", "NUMBER", "example", "rw", "NUMBER", "root", "wheel", "NUMBER", "NUMBER", "K", "NUMBER", "Feb", "NUMBER", "NUMBER", "private_key", "NUMBER", "em", "chmod", "NUMBER", "usr", "local", "etc", "letsencrypt", "NUMBER", "sh", "hooks", "NUMBER", "sh", "ratelimit", "old", "keys", "and", "certificates", "be", "cumulating", "in", "the", "certs", "folders", "at", "the", "moment", "NUMBER", "Is", "there", "a", "mechanism", "to", "delete", "old", "ones", "great", "thank", "you", "I", "would", "be", "a", "great", "addition", "if", "this", "script", "also", "pu", "out", "something", "which", "could", "be", "use", "in", "HKPK", "headers", "e", "NUMBER", "g", "NUMBER", "with", "hooks", "NUMBER", "For", "an", "example", "see", "LINK", "_encrypt_client", "NUMBER", "html", "Accepted", "NUMBER", "I", "ll", "try", "to", "learn", "how", "to", "do", "this", "NUMBER", "This", "be", "what", "I", "m", "trying", "out", "at", "the", "moment", "NUMBER", "I", "have", "yet", "to", "find", "out", "how", "to", "automatically", "replace", "the", "parts", "in", "my", "server", "config", "though", "bin", "bash", "function", "deploy_cert", "local", "DOMAIN", "NUMBER", "KEYFILE", "NUMBER", "CERTFILE", "NUMBER", "CHAINFILE", "NUMBER", "hpkp", "openssl", "rsa", "in", "BASEDIR", "certs", "DOMAIN", "privkey", "NUMBER", "pem", "outform", "der", "pubout", "NUMBER", "dev", "null", "openssl", "dgst", "sha", "NUMBER", "binary", "openssl", "enc", "base", "NUMBER", "printf", "nHTTP", "Key", "Pinning", "n", "pin", "sha", "NUMBER", "hpkp", "n", "HANDLER", "NUMBER", "shift", "HANDLER", "Shouldn", "t", "an", "include", "directive", "do", "the", "trick", "This", "way", "you", "only", "need", "to", "generate", "a", "file", "with", "the", "HKPK", "config", "NUMBER", "yes", "that", "might", "be", "a", "good", "idea", "LINK", "How", "about", "having", "an", "option", "in", "the", "config", "and", "make", "this", "a", "part", "of", "lets", "encrypt", "NUMBER", "sh", "add", "a", "file", "with", "the", "HKPK", "hash", "for", "embedding", "it", "somewhere", "with", "a", "hook", "The", "hash", "be", "the", "same", "it", "be", "just", "different", "for", "RSA", "and", "ECDSA", "certificates", "NUMBER", "LINK", "_public_key_pinning_hpkp", "NUMBER", "html", "Then", "the", "hash", "can", "be", "opened", "and", "handle", "by", "the", "users", "NUMBER", "No", "need", "to", "adapt", "to", "any", "webservers", "NUMBER", "I", "thought", "just", "about", "the", "hash", "not", "the", "whole", "header", "implementation", "NUMBER", "FdFOH", "NUMBER", "lP", "NUMBER", "ipUaas", "NUMBER", "cnj", "NUMBER", "Ifk", "NUMBER", "feECxL", "RGDps", "NUMBER", "otfw", "Then", "it", "could", "be", "include", "in", "the", "server", "config", "dynamically", "or", "manipulated", "with", "a", "script", "NUMBER", "OK", "NUMBER", "I", "just", "thought", "it", "would", "be", "nice", "to", "have", "a", "file", "symlinking", "to", "the", "latest", "version", "just", "like", "the", "keys", "and", "the", "certificates", "NUMBER", "Thought", "it", "might", "be", "helpful", "for", "others", "as", "well", "NUMBER", "I", "m", "still", "pursuing", "this", "NUMBER", "I", "would", "need", "to", "have", "KEY_ALGO", "and", "timestamp", "pass", "to", "the", "hook", "for", "this", "to", "work", "NUMBER", "Or", "it", "could", "become", "integrated", "into", "letsencrypt", "NUMBER", "sh", "and", "become", "an", "option", "NUMBER", "Depending", "on", "which", "option", "you", "would", "prefer", "I", "would", "try", "to", "make", "a", "pull", "request", "NUMBER", "This", "be", "what", "I", "have", "so", "far", "echo", "Generating", "HPKP", "information", "NUMBER", "case", "KEY_ALGO", "in", "rsa", "hpkp", "_openssl", "rsa", "in", "KEYFILE", "outform", "der", "pubout", "NUMBER", "dev", "null", "openssl", "dgst", "sha", "NUMBER", "binary", "openssl", "enc", "base", "NUMBER", "prime", "NUMBER", "v", "NUMBER", "secp", "NUMBER", "r", "NUMBER", "hpkp", "_openssl", "ec", "in", "KEYFILE", "outform", "der", "pubout", "NUMBER", "dev", "null", "openssl", "dgst", "sha", "NUMBER", "binary", "openssl", "enc", "base", "NUMBER", "esac", "echo", "hpkp", "BASEDIR", "certs", "DOMAIN", "hpkp", "timestamp", "NUMBER", "txt", "ln", "sf", "BASEDIR", "certs", "DOMAIN", "hpkp", "timestamp", "NUMBER", "txt", "BASEDIR", "certs", "DOMAIN", "hpkp", "NUMBER", "txt", "TAG", "Maybe", "there", "should", "be", "a", "mode", "with", "fix", "private", "key", "and", "CSR", "to", "have", "a", "permanent", "pin", "Like", "with", "signcsr", "mode", "but", "employing", "var", "lib", "dehydrated", "certs", "structure", "with", "privkey", "NUMBER", "pem", "and", "cert", "NUMBER", "csr", "as", "regular", "file", "not", "symlinks", "TAG", "Maybe", "the", "PRIVATE_KEY_RENEW", "config", "options", "should", "be", "better", "advertised", "documented", "vi", "Was", "having", "that", "option", "write", "up", "in", "the", "config", "file", "which", "be", "linked", "to", "from", "the", "readme", "not", "sufficient", "I", "don", "t", "see", "it", "in", "the", "README", "LINK", "NUMBER", "I", "discover", "it", "from", "the", "source", "code", "after", "already", "deploying", "signcsr", "based", "scheme", "NUMBER", "And", "finally", "only", "now", "I", "find", "this", "LINK", "NUMBER", "Also", "Debian", "s", "default", "etc", "dehydrated", "config", "looks", "much", "shorter", "NUMBER", "From", "README", "NUMBER", "md", "Have", "a", "look", "at", "docs", "examples", "config", "to", "get", "start", "copy", "it", "to", "e", "NUMBER", "g", "NUMBER", "etc", "dehydrated", "config", "and", "edit", "it", "to", "fit", "your", "needs", "NUMBER", "From", "docs", "examples", "config", "Regenerate", "private", "keys", "instead", "of", "just", "signing", "new", "certificates", "on", "renewal", "default", "yes", "PRIVATE_KEY_RENEW", "yes", "Yes", "now", "I", "find", "NUMBER", "It", "would", "be", "great", "to", "have", "an", "option", "for", "creating", "a", "separate", "key", "for", "every", "domain", "in", "use", "NUMBER", "It", "would", "also", "be", "nice", "if", "it", "would", "be", "possible", "to", "create", "some", "entropy", "before", "regenerating", "keys", "just", "like", "calomel", "do", "LINK", "_encrypt_client", "NUMBER", "html", "Using", "the", "letsencrypt", "NUMBER", "sh", "script", "with", "an", "exist", "CSR", "gives", "me", "the", "following", "error", "Requesting", "challenge", "for", "example", "NUMBER", "com", "NUMBER", "Requesting", "challenge", "for", "www", "NUMBER", "example", "NUMBER", "com", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "authz", "Status", "NUMBER", "Details", "type", "urn", "acme", "error", "malformed", "detail", "Error", "creating", "new", "authz", "Invalid", "character", "in", "DNS", "name", "status", "NUMBER", "It", "seems", "there", "be", "problem", "with", "splitting", "the", "subject", "alternative", "names", "if", "there", "be", "more", "than", "two", "from", "the", "given", "CSR", "because", "the", "second", "line", "contains", "a", "comma", "NUMBER", "The", "script", "be", "call", "with", "config", "NUMBER", "sh", "only", "sets", "the", "wellknown", "path", "the", "challenge", "and", "the", "e", "mail", "NUMBER", "letsencrypt", "NUMBER", "sh", "signcsr", "MYCSR", "NUMBER", "csr", "x", "config", "config", "NUMBER", "sh", "The", "openssl", "config", "file", "to", "reproduce", "this", "behavior", "req", "default_bits", "NUMBER", "default_md", "sha", "NUMBER", "prompt", "no", "req_extensions", "v", "NUMBER", "_req", "email_in_dn", "no", "distinguished_name", "default_name", "default_name", "NUMBER", "organizationName", "unknown", "organizationalUnitName", "unknown", "emailAddress", "nope", "localityName", "unknown", "stateOrProvinceName", "WHAT", "countryName", "WH", "commonName", "example", "NUMBER", "com", "v", "NUMBER", "_req", "subjectAltName", "alt_names", "alt_names", "DNS", "NUMBER", "example", "NUMBER", "com", "DNS", "NUMBER", "www", "NUMBER", "example", "NUMBER", "com", "DNS", "NUMBER", "bla", "NUMBER", "example", "NUMBER", "com", "DNS", "NUMBER", "foo", "NUMBER", "example", "NUMBER", "com", "Thank", "you", "NUMBER", "I", "guess", "the", "extraction", "of", "the", "alt", "names", "be", "somehow", "only", "truncating", "the", "first", "it", "finds", "NUMBER", "No", "actually", "not", "NUMBER", "I", "m", "use", "it", "on", "Ubuntu", "and", "Debian", "NUMBER", "May", "I", "ask", "why", "you", "were", "wondering", "Thanks", "for", "the", "fast", "fix", "works", "like", "a", "charm", "now", "NUMBER", "Can", "you", "please", "include", "an", "example", "of", "an", "extremely", "basic", "hook", "script", "for", "dns", "NUMBER", "like", "you", "explain", "in", "the", "README", "NUMBER", "md", "That", "could", "be", "do", "manually", "as", "most", "providers", "don", "t", "have", "a", "DNS", "API", "by", "having", "your", "hook", "script", "echo", "NUMBER", "NUMBER", "and", "NUMBER", "and", "then", "wait", "read", "s", "r", "e", "TAG", "var", "www", "letsencrypt", "NUMBER", "uma", "usr", "local", "LEsh", "curl", "LINK", "know", "acme", "challenge", "NUMBER", "insecure", "NUMBER", "you", "may", "have", "a", "point", "Fixed", "NUMBER", "Still", "why", "generate", "a", "new", "key", "when", "I", "already", "set", "the", "key", "file", "in", "the", "config", "uma", "usr", "local", "LEsh", "NUMBER", "letsencrypt", "NUMBER", "sh", "c", "INFO", "Using", "main", "config", "file", "usr", "local", "LEsh", "config", "NUMBER", "sh", "Processing", "abramov", "NUMBER", "org", "with", "alternative", "names", "ira", "NUMBER", "abramov", "NUMBER", "org", "images", "NUMBER", "abramov", "NUMBER", "org", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "abramov", "NUMBER", "org", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "authz", "Status", "NUMBER", "Details", "type", "urn", "acme", "error", "unauthorized", "detail", "No", "registration", "exists", "matching", "provide", "key", "status", "NUMBER", "well", "NUMBER", "I", "get", "all", "the", "domains", "the", "work", "certs", "with", "the", "test", "registry", "point", "at", "the", "real", "registry", "URL", "and", "tried", "run", "again", "NUMBER", "all", "the", "certs", "were", "of", "course", "too", "new", "I", "set", "to", "NUMBER", "days", "so", "no", "new", "certs", "were", "generate", "NUMBER", "I", "then", "did", "rm", "rf", "certs", "and", "run", "again", "now", "I", "get", "type", "urn", "acme", "error", "unauthorized", "detail", "No", "registration", "exists", "matching", "provide", "key", "status", "NUMBER", "Again", "NUMBER", "moved", "the", "account", "key", "aside", "allow", "a", "new", "one", "to", "be", "created", "why", "don", "t", "they", "accept", "keys", "longer", "than", "NUMBER", "and", "now", "it", "all", "seems", "to", "be", "fine", "NUMBER", "I", "ll", "try", "to", "send", "a", "patch", "to", "the", "README", "soon", "once", "I", "m", "more", "confident", "I", "m", "understanding", "all", "the", "steps", "NUMBER", "Thanks", "when", "there", "be", "just", "one", "domain", "name", "configured", "for", "a", "certificate", "the", "CSR", "shoud", "be", "do", "without", "altname", "extension", "NUMBER", "Currelty", "request", "a", "cert", "for", "foo", "NUMBER", "example", "NUMBER", "com", "will", "result", "in", "X", "NUMBER", "v", "NUMBER", "Subject", "Alternative", "Name", "DNS", "foo", "NUMBER", "example", "NUMBER", "com", "be", "add", "to", "the", "CSR", "and", "in", "the", "resulting", "certificate", "NUMBER", "On", "NUMBER", "NUMBER", "NUMBER", "Lukas", "Schauer", "write", "Is", "that", "bad", "in", "any", "way", "it", "s", "not", "exactly", "bad", "it", "s", "just", "superfluous", "makes", "the", "cert", "some", "bytes", "larger", "for", "no", "reason", "NUMBER", "No", "big", "deal", "if", "you", "don", "t", "want", "to", "change", "this", "NUMBER", "Having", "libressl", "LibreSSL", "NUMBER", "in", "your", "path", "breaks", "the", "script", "since", "libressl", "do", "not", "support", "sha", "NUMBER", "openssl", "Error", "sha", "be", "an", "invalid", "command", "NUMBER", "Message", "Digest", "commands", "see", "the", "dgst", "command", "for", "more", "details", "gost", "mac", "md", "NUMBER", "md", "NUMBER", "md_gost", "NUMBER", "ripemd", "NUMBER", "sha", "NUMBER", "sha", "NUMBER", "sha", "NUMBER", "sha", "NUMBER", "sha", "NUMBER", "streebog", "NUMBER", "streebog", "NUMBER", "whirlpool", "Maybe", "add", "the", "possibility", "to", "override", "the", "openssl", "binary", "path", "in", "the", "config", "file", "What", "I", "do", "right", "now", "be", "forcing", "the", "path", "manually", "bash", "sudo", "sh", "c", "PATH", "usr", "bin", "PATH", "NUMBER", "letsencrypt", "NUMBER", "sh", "cron", "force", "f", "config", "NUMBER", "sh", "I", "be", "new", "to", "LE", "in", "general", "and", "while", "the", "description", "for", "use", "the", "challenge", "type", "be", "nice", "it", "would", "be", "helpful", "to", "someone", "new", "to", "have", "an", "example", "usage", "NUMBER", "My", "example", "from", "my", "initial", "PR", "LINK", "dns", "NUMBER", "sh", "NUMBER", "example", "I", "still", "think", "an", "examples", "section", "in", "the", "wiki", "would", "come", "in", "handy", "NUMBER", "Added", "my", "example", "script", "to", "the", "wiki", "LINK", "hook", "script", "use", "dns", "NUMBER", "with", "nsupdate", "Nice", "thanks", "NUMBER", "Maybe", "this", "can", "get", "a", "link", "in", "the", "readme", "I", "ve", "successfully", "use", "the", "following", "hook", "script", "to", "do", "the", "DNS", "challenge", "on", "Route", "NUMBER", "LINK", "The", "idea", "be", "simple", "you", "need", "to", "add", "the", "token", "as", "a", "TXT", "record", "to", "_acme", "challenge", "NUMBER", "domain", "NUMBER", "NUMBER", "However", "a", "this", "code", "isn", "t", "refactored", "very", "well", "and", "b", "on", "lines", "NUMBER", "and", "NUMBER", "you", "get", "the", "hosted", "zone", "with", "the", "name", "the", "same", "as", "the", "request", "domain", "NUMBER", "Hence", "it", "won", "t", "work", "as", "be", "if", "you", "request", "e", "NUMBER", "g", "sub", "NUMBER", "domain", "NUMBER", "com", "since", "you", "need", "to", "search", "for", "domain", "NUMBER", "com", "NUMBER", "If", "you", "think", "this", "script", "be", "useful", "I", "can", "refactor", "it", "and", "make", "it", "more", "resilient", "to", "work", "as", "be", "for", "subdomains", "NUMBER", "Hey", "lukas", "NUMBER", "I", "created", "a", "simple", "library", "call", "lexicon", "LINK", "that", "lets", "you", "manipulate", "DNS", "records", "on", "various", "cloud", "DNS", "providers", "in", "a", "standardized", "way", "NUMBER", "It", "was", "build", "specifically", "for", "use", "with", "letsencrypt", "NUMBER", "sh", "and", "has", "an", "example", "cloudflare", "dns", "NUMBER", "hook", "file", "LINK", "based", "off", "of", "germeier", "s", "work", "NUMBER", "To", "use", "a", "different", "provider", "all", "you", "need", "to", "do", "be", "change", "NUMBER", "line", "in", "the", "example", "hook", "file", "NUMBER", "python", "cli", "NUMBER", "py", "cloudflare", "create", "www", "NUMBER", "example", "NUMBER", "com", "TXT", "name", "_acme", "challenge", "NUMBER", "www", "NUMBER", "example", "NUMBER", "com", "NUMBER", "content", "challenge", "token", "Currently", "it", "only", "support", "Cloudflare", "and", "PointHQ", "but", "I", "m", "happy", "to", "merge", "PR", "s", "for", "additional", "providers", "NUMBER", "Thanks", "for", "letsencrypt", "NUMBER", "sh", "btw", "I", "m", "a", "huge", "fan", "NUMBER", "Did", "lexicon", "or", "other", "integration", "for", "automating", "dns", "NUMBER", "challenge", "get", "add", "at", "some", "point", "Hey", "YasharF", "It", "doesn", "t", "require", "any", "change", "to", "dehydrated", "to", "support", "automate", "dns", "NUMBER", "challenges", "just", "a", "hook", "file", "that", "calls", "lexicon", "NUMBER", "I", "write", "a", "blog", "post", "LINK", "intranet", "and", "private", "network", "ssl", "which", "fully", "explains", "how", "to", "get", "lexicon", "to", "work", "with", "dehydrated", "though", "its", "a", "bit", "outdate", "now", "NUMBER", "The", "lexicon", "repo", "include", "an", "up", "to", "date", "Dockerfile", "LINK", "which", "installs", "dehydrated", "and", "configures", "both", "correctly", "NUMBER", "If", "you", "still", "need", "help", "feel", "free", "to", "open", "an", "issue", "in", "the", "lexicon", "repo", "LINK", "It", "would", "be", "very", "nice", "if", "the", "script", "will", "run", "in", "alternative", "shells", "NUMBER", "For", "example", "in", "busybox", "ash", "NUMBER", "Now", "it", "be", "not", "work", "NUMBER", "i", "was", "test", "the", "script", "under", "busybox", "NUMBER", "i", "dont", "see", "too", "much", "problem", "fix", "it", "for", "POSIX", "so", "work", "in", "every", "shell", "e", "NUMBER", "g", "NUMBER", "these", "calls", "there", "be", "a", "lot", "of", "csr", "NUMBER", "TAG", "certs", "bla", "cert", "NUMBER", "crt", "I", "test", "the", "generate", "cert", "into", "our", "old", "product", "and", "was", "able", "to", "confirm", "that", "all", "be", "work", "great", "NUMBER", "I", "d", "love", "to", "see", "this", "add", "to", "the", "main", "project", "NUMBER", "lukas", "NUMBER", "I", "ve", "tried", "to", "make", "the", "commit", "as", "easy", "to", "review", "as", "possible", "NUMBER", "However", "the", "first", "commit", "splitting", "the", "challange", "from", "the", "CSR", "generation", "gives", "a", "horrible", "to", "read", "diff", "NUMBER", "It", "s", "probably", "easier", "if", "you", "just", "open", "up", "both", "version", "side", "by", "side", "and", "do", "the", "diff", "by", "hand", "NUMBER", "The", "config", "example", "for", "nginx", "in", "the", "README", "NUMBER", "md", "doesn", "t", "work", "for", "me", "location", "NUMBER", "well", "know", "acme", "challenge", "alias", "var", "www", "letsencrypt", "I", "just", "get", "NUMBER", "forbidden", "error", "when", "i", "try", "to", "access", "one", "of", "the", "challenge", "file", "via", "a", "browser", "and", "also", "letsencrypt", "NUMBER", "sh", "can", "t", "access", "the", "challenge", "file", "NUMBER", "But", "the", "following", "config", "for", "nginx", "works", "for", "me", "location", "NUMBER", "well", "know", "acme", "challenge", "alias", "var", "www", "letsencrypt", "Not", "sure", "if", "that", "should", "be", "change", "or", "if", "there", "could", "be", "an", "other", "issue", "preventing", "the", "example", "config", "for", "nginx", "work", "correctly", "in", "my", "setup", "NUMBER", "I", "m", "seeing", "a", "bit", "of", "an", "issue", "with", "the", "handle", "of", "account", "private", "keys", "when", "switching", "from", "one", "CA", "to", "another", "NUMBER", "The", "process", "goes", "something", "like", "this", "Download", "letsencrypt", "NUMBER", "sh", "Create", "config", "NUMBER", "sh", "setting", "CA", "to", "LINK", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "and", "otherwise", "configuring", "as", "desired", "Run", "letsencrypt", "NUMBER", "sh", "c", "It", "runs", "note", "no", "account", "creates", "a", "private", "key", "registers", "an", "account", "with", "the", "staging", "CA", "and", "otherwise", "do", "its", "thing", "optionally", "user", "makes", "tweak", "to", "config", "re", "run", "letsencrypt", "NUMBER", "sh", "until", "results", "be", "as", "desired", "User", "change", "CA", "to", "LINK", "v", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "and", "runs", "letsencrypt", "NUMBER", "sh", "to", "generate", "official", "certs", "Script", "error", "out", "with", "type", "urn", "acme", "error", "unauthorized", "detail", "No", "registration", "exists", "matching", "provide", "key", "status", "NUMBER", "The", "user", "can", "of", "course", "delete", "or", "rename", "the", "private_key", "NUMBER", "pem", "file", "and", "then", "the", "script", "will", "run", "fine", "NUMBER", "I", "d", "suggest", "though", "one", "of", "two", "ways", "of", "handle", "this", "in", "the", "script", "NUMBER", "Rather", "than", "putting", "the", "private", "key", "in", "BASEDIR", "private_key", "NUMBER", "pem", "put", "it", "in", "BASEDIR", "accounts", "CA_HOSTNAME", "private_key", "NUMBER", "pem", "NUMBER", "When", "the", "user", "change", "to", "a", "different", "CA", "the", "script", "will", "see", "that", "there", "s", "no", "key", "create", "a", "new", "one", "and", "register", "it", "NUMBER", "NUMBER", "If", "the", "script", "gets", "this", "error", "from", "the", "CA", "rename", "private_key", "NUMBER", "pem", "to", "something", "else", "create", "a", "new", "one", "and", "make", "a", "new", "registration", "NUMBER", "I", "think", "NUMBER", "be", "the", "better", "option", "of", "the", "two", "but", "either", "would", "avoid", "this", "NUMBER", "Why", "not", "go", "hybrid", "Use", "the", "private", "key", "as", "provide", "but", "if", "there", "isn", "t", "one", "already", "present", "in", "BASEDIR", "accounts", "CA_HOSTNAME", "private_key", "NUMBER", "pem", "copy", "the", "base", "one", "to", "it", "after", "attempting", "registration", "NUMBER", "Changing", "paths", "NUMBER", "it", "can", "really", "be", "painful", "NUMBER", "It", "opens", "way", "to", "other", "CAs", "but", "it", "s", "big", "change", "NUMBER", "On", "the", "other", "hand", "how", "many", "CAs", "you", "know", "to", "support", "this", "kind", "of", "cert", "handle", "NUMBER", "My", "idea", "be", "add", "testCA", "parameter", "It", "has", "two", "positives", "relatively", "easy", "change", "CA", "ACCOUNT_KEY", "and", "ACCOUNT_KEY_JSON", "to", "test", "values", "it", "can", "be", "use", "for", "initial", "test", "of", "full", "process", "mainly", "correct", "WELLKNOWN", "and", "hooks", "in", "user", "environment", "If", "you", "like", "it", "will", "do", "it", "and", "then", "send", "you", "pull", "request", "to", "let", "you", "see", "if", "it", "s", "OK", "for", "you", "NUMBER", "If", "you", "don", "t", "want", "to", "change", "path", "set", "up", "softlinks", "instead", "NUMBER", "Would", "it", "be", "an", "idea", "to", "store", "the", "key", "in", "NUMBER", "private_key", "HASH_OF_CA_URL", "NUMBER", "pem", "and", "then", "use", "ls", "private_key", "NUMBER", "pem", "to", "see", "which", "private", "keys", "be", "available", "Or", "another", "option", "add", "the", "CA", "URL", "into", "private_key", "NUMBER", "json", "and", "give", "a", "meaningful", "error", "message", "when", "a", "mismatch", "be", "detected", "NUMBER", "Is", "there", "any", "way", "to", "revoke", "created", "certs", "to", "remove", "them", "completely", "and", "create", "new", "ones", "So", "I", "be", "trying", "out", "this", "software", "just", "for", "kicks", "and", "seem", "to", "be", "get", "a", "very", "odd", "error", "that", "I", "can", "t", "find", "anything", "about", "Processing", "testdoman", "NUMBER", "com", "with", "alternative", "names", "www", "NUMBER", "testdomain", "NUMBER", "com", "Signing", "domains", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "testdomain", "NUMBER", "com", "NUMBER", "Responding", "to", "challenge", "for", "testdomain", "NUMBER", "com", "NUMBER", "ERROR", "Challenge", "be", "invalid", "returned", "invalid", "I", "can", "t", "really", "seem", "to", "find", "the", "reason", "for", "this", "error", "even", "by", "inspecting", "the", "script", "Looks", "like", "you", "have", "a", "problem", "with", "the", "challenge", "response", "system", "to", "authenticat", "that", "you", "be", "in", "control", "over", "the", "domain", "NUMBER", "Do", "you", "have", "created", "the", "folder", "and", "alias", "for", "the", "challenge", "response", "system", "For", "nginx", "it", "looks", "like", "this", "NUMBER", "location", "NUMBER", "well", "know", "acme", "challenge", "alias", "var", "www", "letsencrypt", "NUMBER", "For", "Apache", "NUMBER", "Alias", "NUMBER", "well", "know", "acme", "challenge", "var", "www", "letsencrypt", "NUMBER", "Also", "you", "have", "to", "define", "the", "well", "know", "directory", "from", "above", "in", "the", "config", "config", "NUMBER", "sh", "NUMBER", "WELLKNOWN", "var", "www", "letsencrypt", "NUMBER", "I", "have", "defined", "the", "wellknown", "directory", "and", "I", "be", "guessing", "the", "alias", "part", "for", "nginx", "be", "necessary", "for", "some", "sort", "of", "test", "Is", "there", "a", "way", "to", "do", "it", "without", "having", "to", "add", "and", "then", "remove", "an", "alias", "from", "the", "system", "Yes", "you", "need", "the", "alias", "or", "have", "to", "customize", "the", "config", "a", "little", "to", "match", "your", "domains", "webroot", "NUMBER", "It", "be", "needed", "to", "allow", "letsencrypt", "read", "the", "response", "to", "the", "challenge", "they", "give", "to", "you", "to", "check", "if", "you", "be", "the", "owner", "of", "the", "domain", "you", "request", "a", "certificate", "for", "NUMBER", "Is", "there", "a", "way", "to", "do", "it", "without", "having", "to", "add", "and", "then", "remove", "an", "alias", "from", "the", "system", "Well", "you", "could", "also", "use", "define", "the", "well", "know", "dir", "under", "every", "single", "domain", "in", "its", "webroot", "NUMBER", "Its", "a", "lot", "of", "manual", "overhead", "especially", "if", "you", "want", "to", "automate", "the", "certificate", "renewal", "NUMBER", "So", "the", "alias", "be", "a", "simple", "way", "to", "enable", "the", "automate", "renewal", "in", "an", "easy", "way", "even", "if", "you", "use", "your", "nginx", "as", "reverse", "proxy", "without", "a", "webroot", "at", "all", "NUMBER", "So", "you", "don", "t", "have", "to", "remove", "the", "alias", "after", "the", "initial", "certificate", "request", "because", "you", "need", "it", "again", "for", "renewal", "after", "NUMBER", "days", "at", "the", "latest", "NUMBER", "Well", "my", "problem", "be", "that", "nothing", "actually", "gets", "put", "in", "the", "well", "know", "dir", "possibly", "because", "of", "the", "error", "and", "I", "would", "like", "to", "manually", "test", "it", "out", "before", "putting", "it", "in", "my", "central", "distribution", "software", "To", "clarify", "if", "there", "be", "a", "way", "to", "generate", "the", "certificate", "from", "one", "server", "and", "then", "distribute", "it", "to", "our", "load", "balanced", "nginx", "proxies", "later", "on", "ok", "than", "the", "following", "should", "work", "NUMBER", "Change", "the", "config", "NUMBER", "sh", "to", "NUMBER", "WELLKNOWN", "path", "to", "your", "domain", "webroot", "NUMBER", "Well", "that", "be", "what", "I", "have", "already", "do", "and", "that", "be", "what", "be", "giving", "me", "the", "error", "NUMBER", "i", "wonder", "why", "WELLKNOWN", "be", "unset", "during", "script", "startup", "NUMBER", "if", "not", "we", "can", "just", "invoke", "like", "this", "and", "it", "works", "without", "change", "anything", "root", "server", "NUMBER", "letsencrypt", "NUMBER", "sh", "WELLKNOWN", "var", "www", "NUMBER", "well", "know", "acme", "challenge", "NUMBER", "letsencrypt", "NUMBER", "sh", "cron", "WARNING", "No", "main", "config", "file", "find", "use", "default", "config", "Processing", "NUMBER", "v", "NUMBER", "weimarnetz", "NUMBER", "de", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "Mar", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Less", "than", "NUMBER", "days", "NUMBER", "Renewing", "Signing", "domains", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "NUMBER", "v", "NUMBER", "weimarnetz", "NUMBER", "de", "NUMBER", "Responding", "to", "challenge", "for", "NUMBER", "v", "NUMBER", "weimarnetz", "NUMBER", "de", "NUMBER", "Challenge", "be", "valid", "Requesting", "certificate", "NUMBER", "Checking", "certificate", "NUMBER", "Done", "Creating", "fullchain", "NUMBER", "pem", "NUMBER", "Done", "Processing", "NUMBER", "v", "NUMBER", "weimarnetz", "NUMBER", "de", "Checking", "domain", "name", "s", "of", "exist", "cert", "NUMBER", "unchanged", "NUMBER", "Checking", "expire", "date", "of", "exist", "cert", "NUMBER", "Valid", "till", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "Longer", "than", "NUMBER", "days", "NUMBER", "Skipping", "I", "had", "the", "same", "promlem", "like", "KrisZane", "NUMBER", "It", "turned", "out", "that", "my", "server", "didn", "t", "respond", "to", "normal", "HTTP", "request", "NUMBER", "So", "I", "reopened", "port", "NUMBER", "and", "made", "a", "virtual", "host", "for", "HTTP", "Listen", "NUMBER", "TAG", "ServerName", "xxxxxx", "NUMBER", "eu", "DocumentRoot", "var", "www", "html", "TAG", "Works", "great", "now", "NUMBER", "Thanks", "for", "sparing", "me", "the", "use", "of", "the", "bloated", "official", "client", "WELLKNOWN", "path", "to", "your", "domain", "webroot", "work", "for", "me", "NUMBER", "thanks", "NUMBER", "I", "have", "this", "same", "issue", "I", "add", "a", "file", "named", "NUMBER", "txt", "in", "the", "folder", "owned", "by", "www", "www", "just", "for", "test", "BASh", "curl", "LINK", "know", "acme", "challenge", "NUMBER", "txt", "HTML", "TAG", "TAG", "TAG", "NUMBER", "Not", "Found", "TAG", "TAG", "TAG", "TAG", "TAG", "NUMBER", "Not", "Found", "TAG", "TAG", "TAG", "TAG", "nginx", "NUMBER", "TAG", "TAG", "TAG", "Excerpt", "from", "log", "NUMBER", "NUMBER", "Sep", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GET", "NUMBER", "well", "know", "acme", "challenge", "NUMBER", "txt", "HTTP", "NUMBER", "NUMBER", "NUMBER", "curl", "NUMBER", "TyrfingMjolnir", "This", "be", "a", "very", "old", "issue", "and", "has", "be", "close", "for", "almost", "NUMBER", "months", "now", "NUMBER", "Would", "you", "like", "to", "open", "a", "new", "issue", "I", "ve", "pull", "a", "copy", "of", "the", "letsencrypt", "NUMBER", "sh", "script", "from", "github", "earlier", "today", "on", "my", "CentOS", "NUMBER", "based", "system", "SME", "Server", "NUMBER", "see", "contribs", "NUMBER", "org", "NUMBER", "I", "ve", "created", "a", "config", "NUMBER", "sh", "and", "a", "domains", "NUMBER", "txt", "file", "NUMBER", "But", "when", "I", "run", "letsencrypt", "NUMBER", "sh", "I", "get", "this", "root", "sme", "NUMBER", "test", "letsencrypt", "NUMBER", "sh", "NUMBER", "letsencrypt", "NUMBER", "sh", "c", "ERROR", "This", "script", "requires", "curl", "NUMBER", "curl", "be", "install", "and", "be", "in", "PATH", "root", "sme", "NUMBER", "test", "curl", "V", "curl", "NUMBER", "x", "NUMBER", "_", "NUMBER", "redhat", "linux", "gnu", "libcurl", "NUMBER", "OpenSSL", "NUMBER", "b", "zlib", "NUMBER", "libidn", "NUMBER", "Protocols", "tftp", "ftp", "telnet", "dict", "ldap", "http", "file", "https", "ftps", "Features", "GSS", "Negotiate", "IDN", "IPv", "NUMBER", "Largefile", "NTLM", "SSL", "libz", "root", "sme", "NUMBER", "test", "which", "curl", "usr", "bin", "curl", "So", "I", "figured", "I", "d", "comment", "out", "the", "line", "in", "letsencrypt", "NUMBER", "sh", "that", "checks", "for", "curl", "and", "run", "it", "again", "NUMBER", "That", "didn", "t", "work", "at", "all", "root", "sme", "NUMBER", "test", "bin", "letsencrypt", "NUMBER", "sh", "c", "INFO", "Using", "config", "file", "etc", "letsencrypt", "NUMBER", "sh", "config", "NUMBER", "sh", "Generating", "account", "key", "NUMBER", "sed", "invalid", "option", "E", "Usage", "sed", "OPTION", "NUMBER", "script", "only", "if", "no", "other", "script", "input", "file", "NUMBER", "n", "quiet", "silent", "suppress", "automatic", "printing", "of", "pattern", "space", "e", "script", "expression", "script", "add", "the", "script", "to", "the", "commands", "to", "be", "executed", "f", "script", "file", "file", "script", "file", "add", "the", "contents", "of", "script", "file", "to", "the", "commands", "to", "be", "executed", "i", "SUFFIX", "in", "place", "SUFFIX", "edit", "file", "in", "place", "makes", "backup", "if", "extension", "supplied", "c", "copy", "use", "copy", "instead", "of", "rename", "when", "shuffling", "file", "in", "i", "mode", "avoids", "change", "of", "input", "file", "ownership", "l", "N", "line", "length", "N", "specify", "the", "desired", "line", "wrap", "length", "for", "the", "l", "command", "posix", "disable", "all", "GNU", "extensions", "NUMBER", "r", "regexp", "extend", "use", "extend", "regular", "expressions", "in", "the", "script", "NUMBER", "s", "separate", "consider", "file", "as", "separate", "rather", "than", "as", "a", "single", "continuous", "long", "stream", "NUMBER", "u", "unbuffered", "load", "minimal", "amounts", "of", "data", "from", "the", "input", "file", "and", "flush", "the", "output", "buffers", "more", "often", "help", "display", "this", "help", "and", "exit", "version", "output", "version", "information", "and", "exit", "If", "no", "e", "expression", "f", "or", "file", "option", "be", "given", "then", "the", "first", "non", "option", "argument", "be", "taken", "as", "the", "sed", "script", "to", "interpret", "NUMBER", "All", "remaining", "argument", "be", "names", "of", "input", "file", "if", "no", "input", "file", "be", "specified", "then", "the", "standard", "input", "be", "read", "NUMBER", "E", "mail", "bug", "report", "to", "bonzini", "gnu", "NUMBER", "org", "NUMBER", "Be", "sure", "to", "include", "the", "word", "sed", "somewhere", "in", "the", "Subject", "field", "NUMBER", "sed", "invalid", "option", "E", "Usage", "sed", "OPTION", "NUMBER", "script", "only", "if", "no", "other", "script", "input", "file", "NUMBER", "n", "quiet", "silent", "suppress", "automatic", "printing", "of", "pattern", "space", "e", "script", "expression", "script", "add", "the", "script", "to", "the", "commands", "to", "be", "executed", "f", "script", "file", "file", "script", "file", "add", "the", "contents", "of", "script", "file", "to", "the", "commands", "to", "be", "executed", "i", "SUFFIX", "in", "place", "SUFFIX", "edit", "file", "in", "place", "makes", "backup", "if", "extension", "supplied", "c", "copy", "use", "copy", "instead", "of", "rename", "when", "shuffling", "file", "in", "i", "mode", "avoids", "change", "of", "input", "file", "ownership", "l", "N", "line", "length", "N", "specify", "the", "desired", "line", "wrap", "length", "for", "the", "l", "command", "posix", "disable", "all", "GNU", "extensions", "NUMBER", "r", "regexp", "extend", "use", "extend", "regular", "expressions", "in", "the", "script", "NUMBER", "s", "separate", "consider", "file", "as", "separate", "rather", "than", "as", "a", "single", "continuous", "long", "stream", "NUMBER", "u", "unbuffered", "load", "minimal", "amounts", "of", "data", "from", "the", "input", "file", "and", "flush", "the", "output", "buffers", "more", "often", "help", "display", "this", "help", "and", "exit", "version", "output", "version", "information", "and", "exit", "If", "no", "e", "expression", "f", "or", "file", "option", "be", "given", "then", "the", "first", "non", "option", "argument", "be", "taken", "as", "the", "sed", "script", "to", "interpret", "NUMBER", "All", "remaining", "argument", "be", "names", "of", "input", "file", "if", "no", "input", "file", "be", "specified", "then", "the", "standard", "input", "be", "read", "NUMBER", "E", "mail", "bug", "report", "to", "bonzini", "gnu", "NUMBER", "org", "NUMBER", "Be", "sure", "to", "include", "the", "word", "sed", "somewhere", "in", "the", "Subject", "field", "NUMBER", "Registering", "account", "key", "with", "letsencrypt", "NUMBER", "ERROR", "An", "error", "occur", "while", "sending", "post", "request", "to", "LINK", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "reg", "Status", "NUMBER", "Details", "type", "urn", "acme", "error", "serverInternal", "status", "NUMBER", "root", "sme", "NUMBER", "test", "bin", "I", "m", "not", "sure", "what", "to", "try", "from", "here", "thoughts", "root", "sme", "NUMBER", "test", "curl", "V", "curl", "NUMBER", "x", "NUMBER", "_", "NUMBER", "redhat", "linux", "gnu", "libcurl", "NUMBER", "OpenSSL", "NUMBER", "b", "zlib", "NUMBER", "libidn", "NUMBER", "Protocols", "tftp", "ftp", "telnet", "dict", "ldap", "http", "file", "https", "ftps", "Features", "GSS", "Negotiate", "IDN", "IPv", "NUMBER", "Largefile", "NTLM", "SSL", "libz", "root", "sme", "NUMBER", "test", "echo", "NUMBER", "root", "sme", "NUMBER", "test", "I", "ll", "see", "if", "there", "s", "a", "well", "support", "way", "to", "update", "sed", "NUMBER", "This", "system", "has", "GNU", "sed", "version", "NUMBER", "a", "CentOS", "NUMBER", "system", "which", "do", "work", "has", "GNU", "sed", "NUMBER", "Re", "sed", "please", "see", "my", "comment", "LINK", "commitcomment", "NUMBER", "sed", "should", "be", "E", "OR", "r", "E", "be", "not", "a", "normal", "switch", "LINK", "hacks", "mysterious", "gnu", "sed", "option", "e", "If", "I", "swap", "to", "r", "it", "works", "perfectly", "well", "NUMBER", "No", "idea", "on", "the", "curl", "issue", "but", "if", "you", "hash", "out", "the", "check", "it", "works", "NUMBER", "Not", "on", "the", "one", "we", "be", "use", "and", "we", "can", "t", "change", "that", "RHEL", "CentOS", "NUMBER", "be", "still", "there", "and", "support", "NUMBER", "I", "was", "trying", "to", "figure", "if", "I", "could", "rewrite", "this", "a", "bit", "but", "this", "be", "way", "beyond", "my", "primitive", "bash", "skills", "NUMBER", "I", "believe", "the", "issue", "lies", "with", "the", "way", "that", "set", "e", "handles", "error", "code", "NUMBER", "On", "the", "version", "of", "sed", "be", "use", "NUMBER", "I", "get", "the", "following", "results", "sed", "r", "TAG", "Did", "you", "read", "LINK", "usage", "Yes", "NUMBER", "Can", "you", "show", "step", "by", "step", "how", "can", "i", "create", "certificate", "for", "domain", "with", "letsencrypt", "NUMBER", "sh", "I", "can", "t", "understand", "it", "NUMBER", "I", "write", "down", "how", "I", "succeeded", "here", "LINK", "letsencrypt", "sh", "Since", "the", "script", "keep", "all", "the", "old", "certificates", "as", "a", "backup", "the", "folders", "can", "get", "messy", "after", "a", "while", "NUMBER", "So", "I", "thought", "a", "cleanup", "command", "would", "be", "useful", "NUMBER", "When", "there", "be", "a", "lot", "of", "different", "domains", "there", "would", "be", "a", "lot", "of", "file", "to", "delete", "manually", "so", "this", "command", "helps", "by", "checking", "which", "certificates", "be", "use", "and", "deletes", "the", "other", "ones", "NUMBER", "I", "was", "thinking", "about", "how", "to", "implement", "it", "and", "I", "think", "an", "automate", "or", "implicit", "cleanup", "would", "be", "against", "the", "thought", "of", "having", "backups", "in", "case", "of", "trouble", "NUMBER", "So", "I", "came", "up", "with", "this", "extra", "command", "so", "the", "cleanup", "can", "be", "start", "explicitly", "when", "the", "certificates", "be", "work", "fine", "NUMBER", "I", "was", "thinking", "about", "only", "deleting", "expired", "certificates", "but", "first", "I", "wanted", "to", "start", "with", "this", "idea", "so", "we", "can", "discuss", "on", "this", "basis", "NUMBER", "Yes", "I", "was", "thinking", "about", "it", "too", "to", "only", "delete", "expired", "certificates", "NUMBER", "This", "can", "be", "add", "quite", "easily", "with", "OpenSSL", "s", "checkend", "command", "NUMBER", "That", "s", "probably", "safer", "NUMBER", "The", "list", "thing", "was", "an", "quick", "and", "easy", "way", "of", "verifying", "that", "the", "file", "aren", "t", "linked", "anymore", "so", "no", "linked", "file", "be", "touched", "NUMBER", "example", "NUMBER", "com", "www", "NUMBER", "example", "NUMBER", "com", "something", "NUMBER", "example", "NUMBER", "com", "Current", "flow", "NUMBER", "Request", "example", "NUMBER", "com", "challenge", "NUMBER", "Deploy", "example", "NUMBER", "com", "challenge", "response", "NUMBER", "Verify", "example", "NUMBER", "com", "challenge", "response", "NUMBER", "Clean", "example", "NUMBER", "com", "challenge", "response", "NUMBER", "Request", "www", "NUMBER", "example", "NUMBER", "com", "challenge", "NUMBER", "Deploy", "www", "NUMBER", "example", "NUMBER", "com", "challenge", "response", "NUMBER", "Verify", "www", "NUMBER", "example", "NUMBER", "com", "challenge", "response", "NUMBER", "Clean", "www", "NUMBER", "example", "NUMBER", "com", "challenge", "response", "NUMBER", "Request", "something", "NUMBER", "example", "NUMBER", "com", "challenge", "NUMBER", "Deploy", "something", "NUMBER", "example", "NUMBER", "com", "challenge", "response", "NUMBER", "Verify", "something", "NUMBER", "example", "NUMBER", "com", "challenge", "response", "NUMBER", "Clean", "something", "NUMBER", "example", "NUMBER", "com", "challenge", "response", "NUMBER", "Request", "certificate", "Proposed", "flow", "NUMBER", "Request", "example", "NUMBER", "com", "challenge", "NUMBER", "Request", "www", "NUMBER", "example", "NUMBER", "com", "challenge", "NUMBER", "Request", "something", "NUMBER", "example", "NUMBER", "com", "challenge", "NUMBER", "Deploy", "example", "NUMBER", "com", "www", "NUMBER", "example", "NUMBER", "com", "something", "NUMBER", "example", "NUMBER", "com", "challenge", "responses", "NUMBER", "Verify", "example", "NUMBER", "com", "challenge", "response", "NUMBER", "Verify", "www", "NUMBER", "example", "NUMBER", "com", "challenge", "response", "NUMBER", "Verify", "something", "NUMBER", "example", "NUMBER", "com", "challenge", "response", "NUMBER", "Clean", "example", "NUMBER", "com", "www", "NUMBER", "example", "NUMBER", "com", "something", "NUMBER", "example", "NUMBER", "com", "challenge", "responses", "NUMBER", "Request", "certificate", "This", "be", "more", "useful", "with", "DNS", "challenges", "since", "DNS", "may", "take", "extra", "time", "to", "update", "and", "you", "can", "touch", "the", "DNS", "record", "once", "for", "all", "subdomains", "NUMBER", "However", "this", "can", "also", "apply", "to", "HTTP", "challenges", "where", "maybe", "your", "upload", "copy", "script", "can", "push", "all", "challenges", "once", "or", "maybe", "you", "need", "to", "reload", "your", "web", "server", "config", "only", "once", "etc", "NUMBER", "If", "it", "s", "not", "the", "direction", "you", "want", "to", "go", "that", "s", "fine", "NUMBER", "I", "already", "have", "it", "work", "in", "my", "fork", "LINK", "dns", "expand", "NUMBER", "just", "ignore", "all", "that", "PHP", "crap", "NUMBER", "I", "thought", "I", "d", "suggest", "it", "and", "get", "your", "take", "on", "it", "NUMBER", "Thanks", "so", "much", "for", "your", "script", "NUMBER", "erorus", "s", "patch", "looks", "pretty", "tiny", "clean", "would", "be", "nice", "to", "see", "this", "NUMBER", "Would", "isolating", "it", "into", "a", "self", "contained", "PR", "work", "Submitted", "PR", "LINK", "I", "defaulted", "it", "to", "current", "behavior", "so", "as", "not", "to", "break", "exist", "scripts", "NUMBER", "I", "just", "looked", "at", "the", "commit", "and", "have", "a", "question", "NUMBER", "In", "line", "NUMBER", "the", "challenge_token", "be", "remove", "if", "you", "use", "http", "NUMBER", "Why", "do", "you", "do", "it", "again", "in", "the", "lines", "NUMBER", "NUMBER", "I", "think", "he", "s", "doing", "that", "because", "if", "the", "challenges", "be", "all", "generate", "up", "front", "and", "then", "the", "process", "be", "interrupted", "in", "middle", "due", "to", "error", "that", "will", "insure", "that", "the", "leftover", "ones", "be", "cleaned", "up", "the", "ones", "for", "which", "the", "cleanup", "hook", "wasn", "t", "fired", "NUMBER", "It", "seems", "that", "the", "script", "just", "iterates", "batches", "and", "calls", "the", "HOOK", "handler", "for", "each", "domain", "subdomain", "NUMBER", "Is", "there", "a", "way", "to", "signal", "the", "handler", "that", "we", "have", "received", "the", "last", "iterative", "domain", "Reason", "be", "be", "on", "the", "last", "subdomain", "our", "HOOK", "handler", "will", "invoke", "a", "wait", "for", "DNS", "validation", "to", "ensure", "that", "all", "TXT", "entries", "be", "now", "be", "seen", "by", "our", "three", "authoritative", "djbdns", "DNS", "servers", "NUMBER", "We", "batch", "up", "DNS", "change", "and", "push", "them", "out", "to", "the", "primary", "secondaries", "every", "NUMBER", "seconds", "or", "less", "NUMBER", "Possibly", "add", "a", "configurable", "magic", "value", "that", "be", "send", "after", "the", "last", "domain", "NUMBER", "This", "add", "support", "for", "the", "new", "dns", "NUMBER", "challenge", "ATTENTION", "This", "challenge", "be", "currently", "only", "available", "in", "staging", "see", "LINK", "challenge", "be", "in", "staging", "NUMBER", "I", "add", "a", "example", "script", "on", "how", "to", "deploy", "a", "DNS", "challenge", "use", "nsupdate", "NUMBER", "This", "should", "be", "easy", "to", "port", "to", "other", "APIs", "services", "NUMBER", "I", "be", "uncertain", "if", "urlbase", "NUMBER", "be", "the", "correct", "way", "in", "this", "case", "or", "if", "this", "should", "be", "a", "base", "NUMBER", "w", "NUMBER", "NUMBER", "See", "also", "LINK", "ietf", "acme", "acme", "NUMBER", "section", "NUMBER", "I", "think", "we", "want", "to", "make", "it", "users", "as", "easy", "as", "possible", "NUMBER", "I", "don", "t", "mind", "not", "putting", "the", "hook", "script", "into", "the", "repository", "but", "it", "should", "be", "documented", "somewhere", "as", "an", "example", "how", "to", "do", "things", "NUMBER", "If", "you", "be", "OK", "with", "the", "rest", "of", "my", "change", "I", "can", "redo", "the", "pull", "request", "sometime", "tonight", "after", "you", "push", "your", "change", "NUMBER", "update", "with", "NUMBER", "and", "NUMBER", "so", "this", "one", "can", "be", "close", "If", "all", "references", "of", "mktemp", "were", "change", "to", "mktemp", "t", "tmp", "this", "would", "work", "universally", "as", "some", "older", "OS", "s", "FreeBSD", "NUMBER", "for", "example", "will", "fail", "if", "no", "prefix", "option", "be", "provide", "mktemp", "usage", "mktemp", "d", "q", "t", "prefix", "u", "template", "NUMBER", "mktemp", "d", "q", "u", "t", "prefix", "but", "add", "t", "tmp", "will", "generate", "the", "same", "desired", "result", "mktemp", "t", "tmp", "tmp", "tmp", "NUMBER", "y", "NUMBER", "A", "NUMBER", "wnen", "We", "ve", "get", "one", "old", "FreeBSD", "machine", "that", "just", "keep", "on", "run", "needed", "for", "some", "legacy", "hosting", "applications", "NUMBER", "I", "wasn", "t", "sure", "at", "what", "point", "mktemp", "change", "to", "support", "a", "no", "option", "default", "so", "I", "figured", "I", "d", "report", "the", "simple", "work", "around", "NUMBER", "Given", "the", "divergence", "between", "BSD", "and", "GNU", "the", "wrapper", "be", "a", "great", "idea", "NUMBER", "Since", "config", "NUMBER", "sh", "be", "sourced", "it", "would", "allow", "for", "a", "lot", "of", "localized", "workarounds", "NUMBER", "Thanks", "for", "the", "suggestion", "NUMBER", "Also", "thank", "you", "for", "your", "work", "on", "letsencrypt", "NUMBER", "sh", "itself", "NUMBER", "It", "s", "a", "relief", "to", "not", "have", "to", "load", "up", "the", "FreeBSD", "letsencrypt", "client", "package", "as", "it", "has", "about", "NUMBER", "dozen", "Python", "dependencies", "that", "I", "d", "have", "no", "other", "need", "for", "NUMBER", "Your", "shell", "script", "plus", "curl", "be", "a", "far", "more", "elegant", "simple", "lightweight", "solution", "NUMBER", "Nicely", "do", "Works", "great", "Thank", "you", "Lukas", "NUMBER", "and", "sadly", "this", "fail", "on", "QNAP", "mktemp", "invalid", "option", "t", "Lukas", "if", "you", "want", "to", "revert", "the", "t", "option", "so", "QNAP", "works", "I", "m", "fine", "with", "that", "NUMBER", "We", "retired", "our", "old", "FreeBSD", "machine", "so", "this", "be", "no", "longer", "a", "concern", "NUMBER", "Your", "idea", "of", "the", "wrapper", "as", "a", "workaround", "be", "probably", "best", "for", "any", "legacy", "cases", "that", "arise", "NUMBER", "I", "ve", "had", "a", "quick", "look", "and", "for", "some", "reason", "mktemp", "doesn", "t", "want", "to", "work", "properly", "on", "there", "anyway", "so", "don", "t", "revert", "this", "needs", "looking", "into", "more", "as", "something", "else", "seems", "funny", "not", "a", "linux", "guy", "here", "but", "I", "can", "try", "things", "out", "mktemp", "output", "on", "QNAP", "share", "MD", "NUMBER", "_DATA", "Projects", "letsencrypt", "mktemp", "d", "BusyBox", "v", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "multi", "call", "binary", "Usage", "mktemp", "dq", "TEMPLATE", "Creates", "a", "temporary", "file", "with", "its", "name", "based", "on", "TEMPLATE", "NUMBER", "TEMPLATE", "be", "any", "name", "with", "six", "Xs", "i", "NUMBER", "e", "NUMBER", "tmp", "temp", "NUMBER", "XXXXXX", "NUMBER", "Options", "d", "Make", "a", "directory", "instead", "of", "a", "file", "q", "Fail", "silently", "if", "an", "error", "occur", "lukas", "NUMBER", "please", "note", "that", "t", "be", "deprecate", "see", "LINK", "dont", "use", "it", "indeed", "the", "hook", "be", "how", "I", "did", "it", "for", "lighttpd", "LINK", "letsencrypt", "sh", "Haven", "t", "thought", "about", "use", "the", "hook", "NUMBER", "Good", "idea", "Without", "realising", "what", "you", "mean", "RTFM", "I", "hit", "the", "limit", "quite", "quickly", "It", "would", "help", "to", "document", "this", "fact", "and", "use", "the", "staging", "server", "by", "default", "to", "test", "NUMBER", "Can", "you", "modify", "the", "readme", "to", "make", "it", "much", "clearer", "then", "It", "may", "save", "a", "few", "people", "a", "lot", "of", "problem", "reetp", "Just", "provide", "a", "PR", "for", "anything", "that", "may", "help", "people", "circumvent", "this", "NUMBER", "Agree", "that", "default", "should", "be", "live", "but", "that", "we", "should", "warn", "regard", "rate", "limit", "and", "show", "how", "to", "use", "the", "staging", "server", "it", "s", "not", "even", "mention", "at", "the", "moment", "and", "people", "have", "to", "hunt", "down", "the", "URL", "separately", "NUMBER", "I", "ve", "just", "update", "the", "readme", "with", "that", "info", "and", "add", "a", "pull", "request", "LINK", "hope", "it", "helps", "Nice", "thanks", "It", "be", "easily", "overlooked", "when", "you", "be", "staring", "to", "play", "NUMBER", "On", "abort", "with", "Challenge", "be", "invalid", "returned", "invalid", "exit", "value", "NUMBER", "be", "returned", "any", "other", "value", "would", "be", "expected", "NUMBER", "thank", "you", "The", "current", "script", "LINK", "L", "NUMBER", "uses", "HOME", "when", "in", "some", "cases", "it", "might", "not", "be", "set", "in", "the", "environment", "NUMBER", "The", "use", "case", "where", "it", "happens", "be", "use", "letsencrypt", "NUMBER", "sh", "as", "a", "systemd", "service", "timer", "set", "NUMBER", "This", "causes", "this", "issue", "letsencrypt", "NUMBER", "sh", "NUMBER", "letsencrypt", "NUMBER", "sh", "line", "NUMBER", "HOME", "unbound", "variable", "As", "this", "be", "use", "to", "find", "plausible", "config", "file", "locations", "I", "wouldn", "t", "know", "what", "s", "the", "best", "way", "to", "avoid", "this", "issue", "NUMBER", "The", "HOME", "location", "_might_", "be", "important", "for", "some", "cases", "for", "mine", "it", "isn", "t", "NUMBER", "As", "a", "stop", "gap", "solution", "for", "anybody", "setting", "up", "a", "systemd", "timer", "it", "can", "be", "set", "explicitly", "NUMBER", "NUMBER", "Service", "Environment", "HOME", "root", "NUMBER", "Personally", "I", "would", "use", "instead", "of", "HOME", "which", "do", "always", "resolve", "to", "the", "current", "user", "s", "home", "even", "when", "neither", "HOME", "or", "USER", "be", "in", "the", "environment", "NUMBER", "There", "be", "one", "caveat", "with", "the", "use", "of", "its", "properties", "around", "quoting", "be", "different", "than", "those", "of", "variables", "NUMBER", "I", "have", "not", "test", "with", "a", "folder", "with", "spaces", "as", "a", "home", "folder", "but", "I", "would", "guess", "that", "it", "would", "be", "even", "rarer", "than", "an", "execution", "of", "the", "script", "with", "a", "barebones", "environment", "NUMBER", "I", "think", "that", "with", "the", "current", "use", "the", "quoting", "would", "still", "be", "fine", "as", "long", "as", "it", "be", "use", "like", "so", "unquoted", "NUMBER", "letsencrypt", "NUMBER", "sh", "NUMBER", "Here", "s", "a", "test", "case", "usr", "local", "bin", "tildeexpansion", "NUMBER", "sh", "bin", "bash", "unset", "HOME", "set", "e", "set", "u", "echo", "echo", "NUMBER", "letsencrypt", "NUMBER", "sh", "echo", "HOME", "echo", "echo", "HOME", "echo", "NUMBER", "letsencrypt", "NUMBER", "sh", "echo", "HOME", "echo", "HOME", "NUMBER", "letsencrypt", "NUMBER", "sh", "echo", "HOME", "echo", "HOME", "NUMBER", "letsencrypt", "NUMBER", "sh", "To", "run", "as", "a", "systemd", "service", "etc", "systemd", "system", "tildeexpansion", "NUMBER", "service", "Unit", "Description", "Tests", "tilde", "expansion", "Service", "Type", "oneshot", "ExecStart", "usr", "local", "bin", "tildeexpansion", "NUMBER", "sh", "It", "can", "be", "run", "with", "sudo", "systemctl", "daemon", "reload", "sudo", "systemctl", "start", "tildeexpansion", "NUMBER", "usr", "local", "bin", "tildeexpansion", "NUMBER", "sh", "needs", "to", "be", "executable", "NUMBER", "The", "output", "can", "be", "looked", "at", "use", "sudo", "journalctl", "unit", "tildeexpansion", "NUMBER", "This", "test", "case", "service", "_will_", "fail", "since", "the", "exit", "code", "of", "the", "script", "be", "a", "failure", "NUMBER", "References", "LINK", "echo_", "NUMBER", "BAH", "NUMBER", "LINK", "export_foo", "NUMBER", "D", "NUMBER", "BAH", "NUMBER", "NUMBER", "Fbar", "LINK", "_node", "Tilde", "Expansion", "NUMBER", "html", "Hi", "When", "i", "try", "to", "run", "the", "script", "without", "any", "parameters", "it", "try", "to", "use", "the", "column", "command", "which", "may", "not", "be", "available", "on", "every", "system", "but", "be", "find", "in", "the", "bsdmainutils", "package", "on", "debian", "ubuntu", "at", "least", "NUMBER", "It", "s", "also", "faster", "as", "grep", "q", "finishes", "on", "the", "first", "matching", "line", "NUMBER", "Any", "plan", "to", "add", "a", "license", "to", "this", "project", "It", "s", "anything", "else", "than", "simple", "NUMBER", "And", "for", "be", "undecided", "LINK", "might", "help", "NUMBER", "If", "you", "don", "t", "care", "at", "all", "I", "recommend", "the", "WTFPL", "the", "Do", "What", "The", "Fuck", "You", "Want", "To", "Public", "License", "LINK", "NUMBER", "The", "name", "be", "more", "or", "less", "also", "the", "license", "text", "NUMBER", "Problem", "be", "that", "due", "to", "common", "laws", "if", "you", "don", "t", "declare", "a", "license", "basically", "no", "one", "be", "even", "allow", "to", "copy", "that", "file", "NUMBER", "Unify", "the", "use", "of", "multiple", "sed", "commands", "NUMBER", "Use", "assing", "default", "value", "expansion", "for", "defaults", "On", "tiny", "shorthand", "conditional", "The", "still", "was", "left", "over", "when", "I", "thought", "I", "d", "convert", "the", "script", "to", "posix", "shell", "NUMBER", "The", "Assign", "default", "value", "did", "not", "assume", "the", "variable", "to", "be", "null", "instead", "of", "unset", "NUMBER", "Usually", "I", "prevent", "pollution", "by", "use", "unset", "NUMBER", "Fixed", "now", "NUMBER", "permanent", "redirect", "to", "LINK", "access", "to", "acme", "challenge", "The", "construct", "TAG", "tmp", "foo", "NUMBER", "cnf", "openssl", "req", "new", "sha", "NUMBER", "key", "BASEDIR", "certs", "domain", "privkey", "out", "BASEDIR", "certs", "domain", "cert", "timestamp", "NUMBER", "csr", "subj", "CN", "domain", "reqexts", "SAN", "config", "tmp", "foo", "NUMBER", "cnf", "makes", "it", "work", "here", "NUMBER", "of", "the", "exist", "cert", "config", "change", "try", "to", "fix", "issue", "NUMBER", "Sorry", "no", "idea", "while", "the", "test", "fail", "NUMBER", "letsencrypt", "NUMBER", "sh", "domain", "test", "NUMBER", "com", "domain", "test", "NUMBER", "com", "c", "Only", "one", "command", "can", "be", "executed", "at", "a", "time", "NUMBER", "See", "help", "h", "for", "more", "information", "NUMBER", "This", "be", "obviously", "wrong", "NUMBER", "Fixed", "it", "NUMBER", "This", "be", "a", "design", "choice", "NUMBER", "I", "like", "the", "current", "approach", "more", "e", "NUMBER", "g", "NUMBER", "only", "one", "cert", "will", "be", "generate", "when", "the", "domain", "parameter", "s", "be", "use", "revoke", "follow", "symlink", "and", "use", "real", "certificate", "filename", "so", "we", "move", "the", "file", "and", "not", "the", "cert", "NUMBER", "pem", "symlink", "revoke", "check", "if", "the", "given", "cert", "file", "exists", "otherwise", "show", "error", "message", "and", "abort", "IMHO", "this", "be", "only", "a", "cosmetic", "problem", "Both", "our", "webserver", "can", "not", "start", "without", "a", "certificate", "and", "letsencrypt", "NUMBER", "sh", "will", "generate", "new", "cert", "will", "behave", "the", "same", "with", "a", "dangling", "cert", "NUMBER", "pem", "symlink", "or", "no", "cert", "NUMBER", "pem", "file", "at", "all", "For", "both", "the", "command", "line", "and", "domains", "NUMBER", "txt", "it", "would", "be", "nice", "to", "handle", "the", "very", "common", "case", "of", "singing", "both", "example", "NUMBER", "tld", "and", "www", "NUMBER", "example", "NUMBER", "tld", "without", "the", "need", "to", "always", "specify", "both", "domains", "NUMBER", "Nginx", "uses", "a", "syntax", "of", "NUMBER", "example", "NUMBER", "tld", "which", "automatically", "expands", "to", "example", "NUMBER", "tld", "and", "www", "NUMBER", "example", "NUMBER", "tld", "NUMBER", "Would", "be", "nice", "if", "letsencrypt", "NUMBER", "sh", "support", "this", "syntax", "the", "same", "way", "NUMBER", "Uh", "yeah", "sorry", "I", "remembered", "that", "differently", "NUMBER", "Any", "other", "idea", "for", "a", "syntax", "similar", "to", "this", "that", "could", "enable", "that", "feature", "Or", "do", "you", "prefer", "to", "not", "support", "such", "magic", "Ok", "NUMBER", "Your", "proposal", "sounds", "cool", "though", "NUMBER", "Will", "reduce", "the", "possible", "amount", "of", "human", "error", "greatly", "NUMBER", "You", "can", "also", "kinda", "support", "my", "proposal", "when", "you", "take", "an", "empty", "field", "as", "if", "no", "subdomain", "was", "specified", "i", "NUMBER", "e", "NUMBER", "www", "NUMBER", "example", "NUMBER", "tld", "www", "NUMBER", "example", "NUMBER", "tld", "example", "NUMBER", "tld", "www", "NUMBER", "example", "NUMBER", "tld", "NUMBER", "I", "see", "NUMBER", "Last", "suggestion", "before", "I", "ll", "stop", "annoying", "you", "Either", "you", "can", "use", "the", "first", "match", "in", "the", "brackets", "as", "the", "path", "so", "www", "NUMBER", "example", "NUMBER", "tld", "certs", "www", "NUMBER", "example", "NUMBER", "tld", "cert", "NUMBER", "crt", "and", "www", "NUMBER", "example", "NUMBER", "tld", "certs", "example", "NUMBER", "tld", "cert", "NUMBER", "crt", "or", "you", "can", "always", "default", "to", "the", "generic", "domain", "as", "the", "path", "if", "the", "first", "entry", "be", "multimatch", "stuff", "mail", "NUMBER", "example", "NUMBER", "tld", "certs", "example", "NUMBER", "tld", "cert", "NUMBER", "crt", "this", "be", "probably", "the", "more", "obvious", "option", "Does", "that", "sound", "like", "a", "viable", "option", "Is", "this", "implement", "now", "for", "v", "NUMBER", "Or", "how", "do", "one", "specify", "wildcard", "cert", "When", "letsencrypt", "NUMBER", "sh", "creates", "WELLKNOWN", "it", "should", "probably", "chmod", "NUMBER", "it", "otherwise", "it", "has", "NUMBER", "mode", "NUMBER", "NUMBER", "nginx", "can", "t", "read", "it", "and", "return", "Permission", "denied", "so", "challenge", "be", "invalid", "NUMBER", "I", "ve", "seen", "in", "the", "code", "that", "this", "script", "prints", "output", "even", "if", "there", "be", "nothing", "to", "do", "NUMBER", "I", "like", "my", "cron", "scripts", "to", "only", "print", "output", "and", "thus", "sending", "an", "email", "notifying", "me", "if", "there", "be", "an", "error", "NUMBER", "This", "could", "be", "controlled", "by", "a", "parameter", "e", "NUMBER", "g", "NUMBER", "q", "NUMBER", "I", "be", "yet", "unsure", "about", "successful", "certificate", "renewal", "maybe", "there", "could", "be", "another", "parameter", "if", "there", "be", "a", "message", "printed", "in", "that", "case", "NUMBER", "My", "unsorted", "thoughts", "One", "way", "to", "solve", "this", "would", "be", "to", "channel", "all", "message", "through", "a", "function", "e", "NUMBER", "g", "NUMBER", "msg", "LOGLEVEL", "n", "MESSAGE", "I", "don", "t", "like", "that", "the", "script", "defaults", "to", "cron", "mode", "as", "cron", "and", "interactive", "mode", "have", "different", "focus", "cron", "mode", "only", "show", "ERROR", "and", "perhaps", "WARNING", "message", "interactive", "mode", "call", "from", "the", "command", "line", "should", "be", "more", "verbose", "to", "help", "the", "user", "understand", "the", "process", "of", "the", "script", "I", "suggest", "to", "drop", "the", "default", "mode", "and", "revert", "the", "default", "to", "a", "short", "help", "message", "and", "run", "the", "script", "with", "c", "from", "cron", "NUMBER", "I", "would", "like", "to", "see", "a", "logging", "functionality", "NUMBER", "Especially", "when", "run", "from", "cron", "I", "only", "want", "to", "get", "emails", "when", "a", "problem", "occured", "but", "from", "time", "to", "time", "it", "would", "be", "useful", "the", "browse", "the", "logfiles", "to", "verify", "my", "setup", "works", "as", "intended", "NUMBER", "I", "personally", "like", "to", "see", "a", "message", "after", "a", "successful", "cron", "renewal", "as", "well", "as", "a", "diagnostic", "message", "when", "the", "script", "did", "run", "but", "verify", "the", "certs", "be", "all", "still", "valid", "NUMBER", "So", "maybe", "reduce", "the", "message", "but", "at", "least", "print", "a", "summary", "of", "the", "actions", "taken", "e", "NUMBER", "g", "NUMBER", "Renewed", "the", "following", "certificates", "domain", "NUMBER", "tld", "www", "NUMBER", "domain", "NUMBER", "tld", "example", "NUMBER", "tld", "www", "NUMBER", "example", "NUMBER", "tld", "The", "following", "certificates", "be", "still", "valid", "for", "at", "least", "RENEW_DAYS", "days", "mail", "NUMBER", "example", "NUMBER", "tld", "lukas", "NUMBER", "Thanks", "for", "point", "out", "stderr", "stdout", "NUMBER", "Although", "I", "be", "still", "in", "a", "process", "to", "decid", "which", "client", "to", "use", "on", "my", "server", "this", "shell", "script", "looks", "good", "to", "me", "and", "the", "people", "friendly", "so", "chances", "that", "I", "ll", "involve", "myself", "here", "be", "good", "NUMBER", "I", "thought", "a", "bit", "more", "about", "the", "cron", "output", "and", "it", "occured", "to", "me", "that", "most", "scripts", "I", "know", "use", "the", "cron", "mail", "facility", "just", "for", "script", "error", "and", "can", "additionally", "send", "customized", "mail", "message", "or", "writes", "to", "a", "log", "NUMBER", "For", "example", "the", "excellent", "apticron", "a", "cron", "script", "for", "debian", "update", "can", "be", "configured", "that", "it", "sends", "an", "email", "if", "there", "be", "pending", "update", "even", "with", "the", "changelog", "if", "apt", "listchanges", "be", "install", "NUMBER", "Thats", "perfect", "for", "an", "admin", "to", "receive", "a", "mail", "if", "and", "only", "if", "there", "be", "a", "new", "updateable", "package", "NUMBER", "For", "letsencrypt", "NUMBER", "sh", "I", "imagine", "that", "it", "could", "have", "a", "configurable", "mail", "address", "to", "send", "mail", "with", "subject", "Certification", "for", "domain", "x", "successfully", "renewed", "or", "Certification", "renewal", "fail", "for", "x", "with", "details", "in", "the", "body", "NUMBER", "This", "way", "I", "could", "setup", "a", "mail", "filter", "to", "mark", "successes", "as", "read", "I", "don", "t", "need", "to", "read", "them", "but", "now", "they", "be", "present", "as", "a", "kind", "of", "history", "and", "if", "there", "be", "an", "unread", "mail", "from", "this", "script", "I", "be", "alerted", "to", "look", "into", "it", "which", "be", "not", "the", "case", "if", "every", "run", "creates", "a", "mail", "and", "I", "have", "to", "check", "each", "for", "error", "NUMBER", "The", "standard", "mail", "for", "the", "cron", "output", "could", "then", "be", "reserved", "for", "actual", "runtime", "error", "of", "the", "script", "itself", "NUMBER", "How", "do", "that", "sound", "Yeah", "this", "should", "be", "within", "the", "cron", "script", "that", "itself", "calls", "letsencrypt", "NUMBER", "sh", "and", "redirects", "STDERR", "STDOUT", "to", "your", "mail", "template", "NUMBER", "Hi", "First", "thanks", "for", "this", "script", "NUMBER", "Much", "cleaner", "and", "simpler", "and", "cronnable", "than", "the", "le", "client", "NUMBER", "I", "would", "also", "like", "a", "q", "quiet", "option", "NUMBER", "I", "understand", "the", "wrapper", "approach", "but", "I", "think", "q", "would", "be", "simpler", "NUMBER", "Am", "I", "correct", "in", "thinking", "the", "q", "option", "be", "still", "on", "the", "table", "I", "suppose", "the", "steps", "would", "be", "NUMBER", "Add", "_msg", "function", "call", "with", "level", "and", "message", "where", "a", "date", "be", "add", "and", "where", "later", "write", "to", "a", "logfile", "can", "be", "handle", "NUMBER", "Add", "_debug", "_info", "_warn", "_error", "function", "call", "with", "message", "that", "call", "_msg", "with", "the", "appropiate", "level", "NUMBER", "Replace", "almost", "all", "echo", "statements", "with", "calls", "to", "_debug", "_info", "_warn", "or", "_error", "NUMBER", "Add", "handle", "for", "verbose", "and", "quiet", "NUMBER", "v", "would", "add", "debug", "to", "info", "warnings", "and", "error", "q", "would", "show", "only", "error", "NUMBER", "NUMBER", "Have", "beer", "NUMBER", "How", "about", "this", "Can", "I", "do", "this", "I", "think", "my", "code", "quality", "would", "at", "least", "be", "a", "start", "but", "I", "have", "never", "use", "github", "before", "NUMBER", "Hi", "I", "ve", "add", "the", "_msg", "function", "and", "loglevel", "variable", "could", "you", "have", "a", "look", "sometime", "to", "see", "if", "this", "fits", "in", "It", "works", "i", "NUMBER", "e", "NUMBER", "use", "quiet", "or", "q", "silences", "all", "output", "if", "nothing", "be", "to", "be", "do", "NUMBER", "I", "still", "need", "to", "add", "the", "_debug", "_info", "_warn", "and", "_error", "function", "I", "suggested", "above", "NUMBER", "I", "run", "into", "issue", "with", "printf", "statements", "and", "the", "echo", "NUMBER", "NUMBER", "statements", "NUMBER", "I", "didn", "t", "touch", "the", "latter", "NUMBER", "Let", "me", "know", "NUMBER", "Ok", "NUMBER", "I", "see", "your", "point", "NUMBER", "Why", "not", "use", "exit", "code", "A", "wrapper", "can", "capture", "the", "output", "and", "only", "when", "the", "exit", "code", "NUMBER", "output", "the", "output", "so", "to", "speak", "NUMBER", "Then", "again", "a", "script", "to", "call", "a", "script", "be", "not", "really", "clean", "or", "uncomplicated", "NUMBER", "The", "whole", "my", "point", "of", "a", "bash", "script", "for", "Letsencrypt", "be", "automation", "NUMBER", "And", "from", "automation", "follows", "a", "fair", "requirement", "to", "only", "output", "message", "when", "relevant", "NUMBER", "I", "meant", "add", "exit", "code", "NUMBER", "for", "renewal", "NUMBER", "for", "revoke", "but", "on", "second", "thought", "this", "be", "rather", "unusual", "for", "bash", "scripts", "NUMBER", "I", "don", "t", "think", "grepping", "the", "output", "be", "a", "clean", "solution", "btw", "NUMBER", "Meanwhile", "I", "m", "extremely", "happy", "with", "the", "quiet", "option", "in", "my", "fork", "NUMBER", "Hi", "Lukas", "hi", "all", "I", "have", "another", "suggestion", "for", "the", "handle", "of", "message", "see", "LINK", "I", "add", "logging", "to", "a", "logfile", "with", "different", "levels", "for", "logging", "LOGLEVEL", "and", "console", "output", "MSGLEVEL", "NUMBER", "This", "way", "we", "can", "make", "our", "console", "output", "quiet", "but", "still", "have", "more", "information", "in", "the", "logfile", "NUMBER", "For", "my", "usecase", "LOGLEVEL", "NUMBER", "and", "MSGLEVEL", "NUMBER", "should", "work", "nicely", "NUMBER", "What", "do", "you", "think", "Fwiw", "I", "think", "it", "s", "great", "NUMBER", "lukas", "NUMBER", "How", "about", "write", "message", "below", "a", "specified", "log", "level", "to", "a", "temporary", "file", "and", "change", "the", "msglevel", "retroactively", "if", "the", "msglevel", "was", "reached", "untested", "code", "LINK", "MSGLEVELHIGH", "MSGLEVEL", "MSGLEVELHIGH", "These", "lines", "obviously", "need", "to", "be", "switched", "NUMBER", "I", "just", "wanted", "to", "say", "me", "too", "NUMBER", "Historically", "cron", "scripts", "output", "nothing", "unless", "there", "be", "an", "error", "which", "then", "gets", "emailed", "to", "root", "or", "a", "root", "alias", "NUMBER", "My", "suggestion", "be", "to", "send", "normal", "output", "to", "syslog", "journal", "systemd", "and", "let", "the", "administrator", "handle", "it", "via", "the", "exist", "methods", "of", "log", "handle", "NUMBER", "I", "believe", "this", "method", "be", "more", "appropriate", "than", "creating", "your", "own", "log", "file", "which", "we", "admins", "would", "have", "to", "keep", "track", "of", "and", "logrotate", "every", "now", "and", "then", "NUMBER", "Thank", "you", "for", "this", "great", "script", "NUMBER", "I", "m", "use", "chronic", "as", "a", "wrapper", "to", "this", "script", "LINK", "NUMBER", "It", "will", "output", "to", "stdout", "stderr", "only", "if", "the", "exit", "code", "be", "not", "NUMBER", "This", "way", "I", "ll", "get", "an", "email", "notification", "from", "cron", "only", "if", "an", "error", "occur", "but", "not", "if", "everything", "worked", "as", "expected", "NUMBER", "That", "s", "nice", "I", "didn", "t", "know", "these", "tool", "existed", "NUMBER", "Learned", "something", "new", "NUMBER", "Meanwhile", "I", "get", "this", "and", "only", "this", "when", "it", "s", "renewal", "time", "Van", "root", "example", "NUMBER", "com", "Cron", "Daemon", "Onderwerp", "Cron", "root", "example", "NUMBER", "com", "etc", "letsencrypt", "NUMBER", "sh", "letsencrypt", "NUMBER", "sh", "cron", "quiet", "Datum", "NUMBER", "maart", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "CET", "Aan", "root", "example", "NUMBER", "com", "Less", "than", "NUMBER", "days", "NUMBER", "Renewing", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "example", "NUMBER", "com", "NUMBER", "Responding", "to", "challenge", "for", "example", "NUMBER", "com", "NUMBER", "Challenge", "be", "valid", "Requesting", "certificate", "NUMBER", "Checking", "certificate", "NUMBER", "Creating", "fullchain", "NUMBER", "pem", "NUMBER", "Reload", "imap", "server", "Reloading", "IMAP", "POP", "NUMBER", "mail", "server", "dovecot", "NUMBER", "Reload", "de", "mailserver", "Reloading", "Postfix", "configuration", "NUMBER", "do", "NUMBER", "Done", "WhoHasMyUsername", "Where", "did", "you", "take", "the", "quiet", "option", "to", "letsencrypt", "NUMBER", "sh", "I", "don", "t", "see", "it", "in", "the", "valid", "parameters", "NUMBER", "Also", "count", "me", "in", "for", "this", "feature", "cronic", "be", "really", "the", "type", "of", "tool", "you", "want", "to", "use", "for", "this", "kind", "of", "issue", "NUMBER", "You", "should", "set", "up", "monitoring", "for", "certificate", "expiry", "anyways", "and", "therefore", "the", "regular", "output", "of", "letsencrypt", "NUMBER", "sh", "can", "be", "supressed", "unless", "an", "error", "occur", "NUMBER", "I", "do", "not", "see", "a", "real", "need", "for", "a", "quiet", "option", "NUMBER", "I", "understand", "but", "for", "it", "to", "work", "a", "different", "return", "code", "should", "be", "use", "be", "a", "certificat", "be", "renewed", "which", "be", "not", "the", "case", "right", "now", "NUMBER", "WIthout", "that", "I", "doupt", "that", "cronic", "can", "t", "tell", "NUMBER", "chronic", "be", "another", "tool", "to", "maintain", "afaik", "not", "install", "by", "default", "NUMBER", "q", "or", "quiet", "be", "imho", "not", "_that_", "outlandish", "an", "option", "NUMBER", "rossnick", "why", "do", "you", "want", "to", "be", "notified", "when", "a", "certificate", "renewed", "successfully", "One", "should", "set", "up", "proper", "monitoring", "for", "certificate", "lifetimes", "and", "not", "really", "care", "about", "letsencrypt", "NUMBER", "sh", "output", "unless", "it", "be", "erroneous", "NUMBER", "I", "do", "not", "have", "a", "strong", "opinion", "on", "quiet", "as", "long", "as", "the", "default", "behaviour", "be", "not", "change", "NUMBER", "Because", "on", "some", "servers", "I", "don", "t", "want", "to", "restart", "graceful", "apache", "unconditiionnaly", "NUMBER", "On", "other", "even", "a", "graceful", "restart", "be", "costly", "in", "term", "of", "load", "and", "cpu", "because", "of", "the", "heavy", "hits", "NUMBER", "I", "see", "NUMBER", "That", "s", "where", "the", "hooks", "come", "into", "play", "NUMBER", "See", "deploy_cert", "hook", "in", "which", "you", "can", "execute", "commands", "depending", "on", "the", "cert", "that", "has", "just", "be", "successfully", "deployed", "NUMBER", "Oh", "Thanks", "maxlin", "NUMBER", "I", "never", "tought", "of", "that", "NUMBER", "It", "ll", "be", "trivial", "to", "send", "an", "email", "with", "a", "hook", "script", "NUMBER", "I", "could", "then", "use", "a", "return", "code", "check", "to", "send", "an", "email", "if", "there", "s", "a", "problem", "NUMBER", "I", "like", "the", "idea", "of", "a", "_msg", "function", "instead", "of", "a", "plain", "echo", "as", "suggested", "by", "WhoHasMyUsername", "However", "I", "don", "t", "like", "the", "idea", "of", "discarding", "a", "message", "because", "it", "makes", "problem", "hard", "to", "find", "NUMBER", "I", "would", "like", "to", "suggest", "to", "make", "_msg", "send", "all", "output", "to", "a", "syslog", "facility", "instead", "of", "discarding", "it", "NUMBER", "Aikhjarto", "For", "my", "part", "I", "ended", "up", "deploying", "cronic", "to", "all", "my", "servers", "and", "use", "a", "hook", "script", "to", "send", "me", "an", "email", "whenever", "a", "cert", "be", "deployed", "NUMBER", "I", "now", "have", "much", "less", "noise", "from", "cron", "output", "and", "it", "s", "viable", "for", "me", "that", "way", "NUMBER", "Hi", "Lukas", "What", "do", "you", "think", "if", "some", "examples", "of", "cron", "setup", "will", "be", "add", "to", "Dehydrated", "documentation", "With", "suggestions", "to", "use", "one", "of", "at", "least", "NUMBER", "chronic", "rossnick", "could", "you", "please", "provide", "an", "setup", "example", "NUMBER", "usr", "bin", "dehydrated", "c", "NUMBER", "dev", "null", "with", "explanation", "what", "error", "message", "will", "go", "to", "STDERR", "anyway", "This", "can", "avoid", "of", "report", "new", "issue", "PR", "like", "NUMBER", "For", "integrating", "this", "script", "into", "a", "webserver", "with", "several", "seperated", "vhosts", "it", "would", "be", "great", "if", "it", "could", "gather", "the", "domain", "info", "also", "from", "file", "in", "a", "directory", "named", "domains", "NUMBER", "txt", "NUMBER", "d", "if", "it", "exists", "NUMBER", "It", "would", "function", "like", "any", "other", "NUMBER", "d", "config", "directory", "i", "NUMBER", "e", "NUMBER", "concatenating", "all", "file", "with", "suffix", "txt", "NUMBER", "Currently", "the", "regex", "for", "hostnames", "seems", "to", "be", "incorrectly", "escaped", "as", "hostnames", "like", "smokeping", "NUMBER", "example", "NUMBER", "com", "be", "incorrectly", "parsed", "NUMBER", "I", "ve", "doubled", "escaped", "the", "sed", "s", "s_", "g", "s", "s_", "g", "to", "sed", "s", "s_", "g", "s", "s_", "g", "and", "now", "it", "works", "for", "me", "NUMBER", "Hello", "I", "use", "your", "script", "on", "old", "gentoo", "instalation", "and", "get", "this", "error", "NUMBER", "letsencrypt", "NUMBER", "sh", "line", "NUMBER", "shasum", "command", "not", "find", "So", "i", "ve", "just", "change", "shasum", "a", "NUMBER", "to", "sha", "NUMBER", "sum", "and", "it", "works", "I", "know", "I", "use", "very", "old", "instalation", "but", "that", "s", "why", "I", "don", "t", "can", "t", "use", "official", "letsencrypt", "client", "NUMBER", "Or", "you", "can", "create", "a", "script", "call", "shasum", "in", "usr", "bin", "or", "usr", "local", "bin", "with", "this", "in", "it", "shell", "bin", "bash", "shift", "NUMBER", "sha", "NUMBER", "sum", "M", "NUMBER", "I", "think", "shasum", "comes", "from", "Perl", "and", "if", "author", "want", "this", "project", "to", "be", "perl", "independent", "this", "should", "be", "change", "NUMBER", "You", "be", "right", "NUMBER", "And", "sha", "NUMBER", "sum", "be", "shorter", "Makes", "it", "work", "with", "Nginx", "config", "in", "README", "When", "deploying", "your", "script", "I", "find", "that", "you", "be", "use", "SCRIPTDIR", "as", "fall", "back", "directory", "NUMBER", "This", "be", "very", "error", "prone", "and", "completely", "unnecessary", "as", "BASEDIR", "defaults", "to", "SCRIPTDIR", "NUMBER", "For", "security", "sake", "NOTHING", "should", "be", "relative", "to", "SCRIPTDIR", "not", "even", "the", "config", "NUMBER", "sh", "file", "location", "I", "did", "not", "patch", "this", "as", "it", "would", "change", "the", "basic", "bahaviour", "NUMBER", "Some", "further", "suggestions", "use", "only", "one", "default", "location", "for", "config", "NUMBER", "sh", "e", "NUMBER", "g", "NUMBER", "etc", "letsencrypt", "NUMBER", "sh", "config", "NUMBER", "sh", "as", "an", "attacker", "can", "do", "nasty", "stuff", "if", "he", "gets", "access", "on", "any", "of", "the", "config", "locations", "don", "t", "use", "default", "config", "if", "config", "NUMBER", "sh", "be", "not", "find", "as", "this", "do", "most", "probably", "break", "things", "for", "most", "users", "Yeah", "well", "grabbing", "config", "from", "the", "correct", "location", "be", "always", "a", "pain", "as", "you", "said", "every", "distro", "do", "it", "differently", "and", "this", "be", "even", "more", "true", "for", "test", "NUMBER", "Having", "a", "f", "TAG", "flag", "kind", "of", "solve", "my", "concerns", "as", "all", "the", "looking", "for", "config", "magic", "do", "not", "happen", "if", "I", "always", "run", "letsencrypt", "NUMBER", "sh", "f", "path", "to", "myconf", "NUMBER", "sh", "e", "NUMBER", "g", "NUMBER", "in", "cron", "job", "NUMBER", "I", "really", "dislike", "the", "current", "sign", "s", "domain", "NUMBER", "tld", "command", "for", "several", "reasons", "NUMBER", "I", "want", "to", "be", "able", "to", "sign", "a", "certificate", "for", "test", "purposes", "without", "having", "to", "add", "it", "to", "domains", "NUMBER", "txt", "NUMBER", "Even", "one", "with", "multiple", "SAN", "names", "NUMBER", "Even", "when", "specify", "a", "domain", "on", "the", "command", "line", "I", "want", "to", "be", "informed", "that", "the", "certificate", "in", "questing", "be", "still", "within", "my", "definied", "useful", "time", "frame", "e", "NUMBER", "g", "NUMBER", "longer", "valid", "than", "RENEW_DAYS", "before", "really", "forcing", "a", "renew", "NUMBER", "In", "the", "long", "run", "the", "letsencrypt", "NUMBER", "sh", "script", "should", "be", "able", "to", "work", "properly", "without", "any", "config", "file", "only", "use", "default", "values", "and", "command", "line", "options", "NUMBER", "Therefor", "I", "suggest", "the", "following", "patch", "NUMBER", "Sorry", "I", "m", "to", "stupid", "for", "git", "squash", "NUMBER", "Will", "fix", "this", "tonight", "NUMBER", "replaced", "by", "NUMBER", "As", "evidenced", "here", "LINK", "certs", "NUMBER", "sh", "L", "NUMBER", "The", "actual", "paths", "checked", "by", "letsencrypt", "NUMBER", "sh", "LINK", "L", "NUMBER", "I", "really", "don", "t", "like", "that", "this", "be", "a", "separate", "script", "NUMBER", "Is", "there", "a", "reason", "this", "shouldn", "t", "be", "handeld", "with", "an", "import", "certs", "i", "option", "command", "in", "the", "main", "script", "I", "really", "don", "t", "like", "that", "this", "be", "a", "separate", "script", "NUMBER", "Is", "there", "a", "reason", "this", "shouldn", "t", "be", "handeld", "with", "an", "import", "certs", "i", "option", "command", "in", "the", "main", "script", "Please", "don", "t", "include", "helper", "scripts", "into", "the", "main", "script", "NUMBER", "I", "think", "the", "main", "reason", "why", "people", "be", "will", "be", "use", "letsencrypt", "NUMBER", "sh", "be", "because", "it", "s", "simple", "and", "straightforward", "NUMBER", "I", "agree", "with", "digint", "here", "NUMBER", "Other", "than", "copying", "the", "whole", "configuration", "file", "searching", "block", "I", "can", "see", "two", "ways", "one", "really", "simple", "and", "the", "other", "not", "that", "complex", "that", "would", "make", "it", "find", "the", "proper", "config", "file", "NUMBER", "NUMBER", "Getting", "CONFIG_DIR", "from", "environment", "CONFIG_FILE", "CONFIG_FILE", "SCRIPTDIR", "config", "NUMBER", "sh", "which", "be", "unwieldy", "but", "would", "allow", "the", "configuration", "file", "to", "be", "find", "anywhere", "NUMBER", "NUMBER", "Asking", "the", "main", "script", "for", "the", "config", "file", "NUMBER", "The", "import", "script", "already", "know", "about", "SCRIPT_DIR", "which", "means", "it", "know", "where", "letsencrypt", "NUMBER", "sh", "be", "NUMBER", "It", "could", "source", "the", "script", "use", "a", "particular", "command", "source", "which", "would", "basically", "do", "nothing", "which", "makes", "the", "environment", "available", "in", "the", "script", "that", "sourced", "it", "NUMBER", "This", "approach", "be", "cleaner", "but", "do", "not", "allow", "passing", "config", "to", "the", "import", "script", "NUMBER", "With", "care", "part", "of", "the", "letsencrypt", "NUMBER", "sh", "s", "argument", "parsing", "could", "work", "through", "the", "sourcing", "but", "I", "m", "not", "sure", "how", "clean", "and", "how", "easy", "it", "would", "be", "I", "agree", "with", "samueldr", "and", "digint", "NUMBER", "It", "s", "much", "cleaner", "to", "have", "an", "external", "helper", "script", "NUMBER", "Especially", "since", "that", "helper", "script", "will", "have", "to", "have", "multiple", "parts", "when", "deploying", "to", "a", "secondary", "machine", "as", "digint", "did", "in", "his", "pull", "request", "which", "I", "very", "much", "like", "NUMBER", "fix", "typo", "First", "of", "all", "thanks", "for", "this", "wonderful", "script", "I", "implement", "a", "hook", "for", "deploying", "the", "certificates", "remotely", "via", "ssh", "in", "two", "parts", "ssh_hook", "NUMBER", "sh", "the", "HOOK", "to", "define", "in", "config", "NUMBER", "sh", "NUMBER", "ssh_filter_letsencrypt", "NUMBER", "sh", "SSH", "ForceCommand", "to", "define", "in", "sshd_config", "or", "command", "NUMBER", "in", "authorized_keys", "on", "the", "remote", "webserver", "NUMBER", "If", "you", "like", "this", "patch", "I", "will", "gladly", "write", "some", "documentation", "for", "it", "something", "like", "the", "documentation", "of", "the", "ssh", "script", "I", "write", "for", "btrbk", "LINK", "setting", "up", "ssh", "NUMBER", "Maybe", "it", "would", "be", "good", "to", "introduce", "some", "contrib", "folder", "for", "scripts", "like", "these", "let", "me", "know", "what", "you", "think", "Mh", "NUMBER", "i", "don", "t", "really", "want", "to", "fill", "the", "repo", "with", "hooks", "especially", "since", "the", "script", "be", "not", "yet", "in", "a", "stable", "form", "and", "hook", "handle", "may", "change", "at", "any", "time", "requiring", "to", "update", "all", "example", "hooks", "NUMBER", "I", "understand", "completely", "NUMBER", "I", "ll", "come", "back", "to", "you", "when", "things", "be", "more", "stable", "and", "until", "then", "people", "who", "be", "interested", "in", "my", "hook", "scripts", "will", "probably", "find", "it", "via", "my", "fork", "NUMBER", "Maybe", "later", "we", "can", "add", "an", "example_hooks", "directory", "but", "i", "d", "keep", "it", "to", "NUMBER", "script", "file", "per", "hook", "NUMBER", "Well", "the", "second", "script", "be", "here", "to", "further", "lock", "down", "the", "access", "to", "the", "webserver", "which", "be", "a", "bit", "paranoid", "but", "usually", "that", "s", "a", "good", "idea", "which", "be", "do", "by", "defining", "a", "_ForceCommand_", "in", "sshd_config", "NUMBER", "A", "much", "simpler", "solution", "would", "be", "to", "simply", "scp", "the", "challenge", "and", "certs", "but", "this", "would", "require", "full", "ssh", "access", "and", "paranoid", "people", "don", "t", "like", "this", "NUMBER", "Sorry", "the", "patch", "be", "ugly", "but", "I", "had", "to", "move", "some", "code", "around", "NUMBER", "Now", "only", "the", "handle", "of", "the", "command", "line", "be", "outside", "of", "function", "RFC", "It", "s", "possible", "to", "change", "domains", "NUMBER", "txt", "format", "to", "include", "webroot", "type", "domain", "aliases", "i", "NUMBER", "e", "NUMBER", "var", "www", "example", "NUMBER", "org", "apache", "example", "NUMBER", "org", "www", "NUMBER", "example", "NUMBER", "org", "var", "www", "example", "NUMBER", "net", "nginx", "example", "NUMBER", "net", "www", "NUMBER", "example", "NUMBER", "net", "other", "NUMBER", "example", "NUMBER", "net", "var", "www", "common", "mail", "mailhost", "NUMBER", "example", "NUMBER", "org", "webmail", "NUMBER", "example", "NUMBER", "org", "and", "modify", "hook", "calling", "to", "pass", "webroot", "and", "type", "to", "it", "NUMBER", "I", "like", "the", "format", "of", "optional", "parameter", "PARAMETER", "value", "And", "passing", "these", "parameters", "as", "environment", "variables", "to", "hook", "script", "will", "be", "great", "and", "avoiding", "to", "surcharging", "hook", "parameter", "command", "line", "NUMBER", "Add", "minimal", "parser", "LINK", "Any", "suggestion", "hello", "just", "FYI", "on", "pfSense", "there", "be", "another", "one", "dependency", "bash", "and", "there", "something", "goes", "wrong", "NUMBER", "RELEASE", "root", "gw", "NUMBER", "root", "letsencrypt", "NUMBER", "sh", "NUMBER", "letsencrypt", "NUMBER", "sh", "Using", "config", "file", "root", "letsencrypt", "NUMBER", "sh", "config", "NUMBER", "sh", "Generating", "account", "key", "NUMBER", "Registering", "account", "key", "with", "letsencrypt", "NUMBER", "Processing", "owncloud", "NUMBER", "example", "NUMBER", "com", "Signing", "domains", "NUMBER", "make", "directory", "root", "letsencrypt", "NUMBER", "sh", "certs", "owncloud", "NUMBER", "example", "NUMBER", "com", "NUMBER", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "cat", "dev", "fd", "NUMBER", "No", "such", "file", "or", "directory", "error", "on", "line", "NUMBER", "of", "dev", "fd", "NUMBER", "NUMBER", "error", "NUMBER", "system", "library", "fopen", "No", "such", "file", "or", "directory", "usr", "pfSensesrc", "src", "NUMBER", "RELENG_", "NUMBER", "_", "NUMBER", "secure", "lib", "libcrypto", "NUMBER", "NUMBER", "NUMBER", "crypto", "openssl", "crypto", "bio", "bss_file", "NUMBER", "c", "NUMBER", "fopen", "dev", "fd", "NUMBER", "rb", "NUMBER", "error", "NUMBER", "D", "NUMBER", "BIO", "routines", "BIO_new_file", "no", "such", "file", "usr", "pfSensesrc", "src", "NUMBER", "RELENG_", "NUMBER", "_", "NUMBER", "secure", "lib", "libcrypto", "NUMBER", "NUMBER", "NUMBER", "crypto", "openssl", "crypto", "bio", "bss_file", "NUMBER", "c", "NUMBER", "NUMBER", "error", "NUMBER", "E", "NUMBER", "configuration", "file", "routines", "DEF_LOAD", "no", "such", "file", "usr", "pfSensesrc", "src", "NUMBER", "RELENG_", "NUMBER", "_", "NUMBER", "secure", "lib", "libcrypto", "NUMBER", "NUMBER", "NUMBER", "crypto", "openssl", "crypto", "conf", "conf_def", "NUMBER", "c", "NUMBER", "Does", "the", "NUMBER", "construct", "work", "on", "pfsense", "yes", "bash", "install", "and", "works", "nice", "Does", "the", "following", "work", "bash", "c", "cat", "cat", "echo", "hi", "Hi", "lukas", "NUMBER", "NUMBER", "Could", "I", "ask", "you", "to", "elaborate", "on", "what", "exactly", "be", "protected", "NUMBER", "My", "situation", "be", "that", "I", "wish", "the", "script", "to", "be", "accessible", "asynchronously", "to", "renew", "certificates", "of", "some", "of", "my", "domains", "NUMBER", "It", "will", "be", "accessed", "from", "different", "processes", "possibly", "at", "the", "same", "time", "but", "renewals", "be", "performed", "for", "different", "domains", "NUMBER", "What", "be", "the", "repercussions", "if", "I", "use", "the", "no", "lock", "argument", "Thanks", "a", "lot", "NUMBER", "alexandresobolevski", "sorry", "for", "the", "late", "response", "locking", "basically", "protects", "the", "script", "to", "write", "to", "the", "same", "file", "at", "the", "same", "time", "NUMBER", "if", "you", "register", "an", "account", "key", "first", "and", "control", "the", "script", "externally", "later", "on", "use", "the", "d", "domain", "NUMBER", "tld", "d", "www", "NUMBER", "domain", "NUMBER", "tld", "options", "there", "shouldn", "t", "be", "any", "remaining", "conflict", "but", "you", "should", "never", "use", "the", "no", "lock", "option", "when", "run", "with", "a", "domains", "NUMBER", "txt", "Add", "an", "option", "on", "registration", "request", "in", "order", "to", "be", "able", "to", "provide", "an", "email", "address", "NUMBER", "Goal", "be", "to", "be", "aware", "by", "email", "from", "Letsencrypt", "authority", "when", "certificates", "be", "close", "to", "expire", "or", "to", "other", "communication", "they", "will", "do", "for", "outage", "for", "instance", "NUMBER", "A", "variation", "with", "one", "single", "hook", "NUMBER", "From", "a", "comment", "of", "germeier", "on", "pull", "request", "NUMBER", "an", "initial", "try", "for", "command", "parameters", "and", "help", "text", "RFC", "OK", "I", "will", "update", "this", "pull", "request", "tonight", "NUMBER", "What", "do", "the", "c", "mode", "should", "do", "I", "intend", "to", "change", "this", "pull", "request", "to", "getopt", "and", "after", "we", "be", "all", "happy", "with", "the", "new", "structure", "we", "can", "add", "new", "features", "use", "command", "line", "options", "NUMBER", "I", "already", "have", "a", "few", "ideas", "e", "NUMBER", "g", "NUMBER", "use", "the", "software", "without", "the", "need", "for", "config", "file", "continues", "on", "pull", "request", "NUMBER", "Add", "a", "hook", "after", "creation", "of", "certificate", "in", "order", "to", "be", "able", "to", "clean", "challenge", "on", "remote", "servers", "and", "to", "upload", "created", "certs", "NUMBER", "I", "have", "created", "pull", "request", "NUMBER", "to", "replace", "this", "one", "with", "cleaner", "commit", "from", "last", "master", "NUMBER", "as", "request", "by", "issue", "NUMBER", "request", "for", "comments", "Hi", "as", "far", "as", "i", "can", "see", "from", "the", "code", "it", "can", "happen", "that", "if", "PRIVATE_KEY_RENEW", "yes", "a", "new", "key", "be", "generate", "and", "activated", "even", "if", "we", "be", "not", "sure", "if", "a", "new", "certificate", "was", "issue", "NUMBER", "Maybe", "the", "removal", "of", "the", "softlink", "an", "relinking", "should", "be", "do", "after", "the", "matching", "cert", "was", "issue", "NUMBER", "I", "agree", "The", "protocol", "spec", "for", "Certificate", "Revocation", "looks", "straight", "forward", "NUMBER", "Anyone", "who", "be", "eager", "to", "implement", "this", "feature", "Otherwise", "I", "would", "give", "it", "a", "try", "NUMBER", "Until", "this", "change", "be", "made", "what", "be", "the", "recommended", "way", "of", "handle", "this", "manually", "add", "openssl", "NUMBER", "cnf", "as", "a", "parameter", "NUMBER", "Default", "path", "be", "not", "always", "etc", "ssl", "openssl", "NUMBER", "cnf", "It", "could", "be", "some", "of", "following", "OPENSSLCNF", "System", "Library", "OpenSSL", "openssl", "NUMBER", "cnf", "OPENSSLCNF", "etc", "pki", "tls", "openssl", "NUMBER", "cnf", "OPENSSLCNF", "usr", "lib", "ssl", "openssl", "NUMBER", "cnf", "OPENSSLCNF", "usr", "local", "ssl", "openssl", "NUMBER", "cnf", "Goal", "be", "to", "avoid", "error", "like", "Signing", "domainwww", "NUMBER", "example", "NUMBER", "org", "www", "NUMBER", "example", "NUMBER", "org", "NUMBER", "Generating", "signing", "request", "NUMBER", "cat", "etc", "ssl", "openssl", "NUMBER", "cnf", "No", "such", "file", "or", "directory", "unable", "to", "find", "distinguished_name", "in", "config", "problem", "make", "Certificate", "Request", "NUMBER", "error", "NUMBER", "E", "NUMBER", "D", "NUMBER", "C", "configuration", "file", "routines", "NCONF_get_string", "no", "value", "conf_lib", "NUMBER", "c", "NUMBER", "group", "req", "name", "distinguished_name", "Add", "sed", "as", "a", "parameter", "variable", "in", "order", "to", "be", "able", "to", "specify", "the", "sed", "version", "that", "must", "be", "use", "NUMBER", "The", "goal", "be", "to", "be", "able", "to", "specify", "another", "sed", "program", "as", "the", "one", "to", "be", "use", "must", "be", "the", "GNU", "sed", "r", "parameter", "be", "use", "NUMBER", "For", "instance", "default", "sed", "program", "on", "OS", "X", "be", "not", "support", "this", "parameter", "and", "launching", "lets", "encrypt", "NUMBER", "sh", "be", "display", "following", "error", "sed", "illegal", "option", "r", "usage", "sed", "script", "Ealn", "i", "extension", "file", "NUMBER", "sed", "Ealn", "i", "extension", "e", "script", "NUMBER", "f", "script_file", "NUMBER", "file", "NUMBER", "GNU", "sed", "can", "be", "install", "from", "macport", "and", "its", "name", "be", "gsed", "NUMBER", "So", "a", "simple", "SED", "gsed", "in", "config", "NUMBER", "sh", "file", "be", "resolving", "this", "issue", "NUMBER", "In", "a", "worst", "case", "scenario", "the", "new", "certificate", "be", "broken", "and", "we", "be", "left", "without", "a", "work", "certificate", "or", "need", "to", "restore", "one", "from", "our", "backup", "NUMBER", "This", "way", "we", "only", "need", "to", "change", "the", "symlink", "to", "the", "know", "work", "cert", "Thanks", "I", "was", "just", "thinking", "about", "implement", "this", "myself", "NUMBER", "IMHO", "the", "time", "to", "renew", "before", "expiry", "should", "be", "a", "config", "option", "You", "be", "totally", "right", "NUMBER", "PR", "now", "include", "a", "config", "option", "NUMBER", "Hi", "this", "PR", "add", "some", "small", "style", "change", "based", "on", "Shellcheck", "LINK", "suggestions", "and", "Google", "Shell", "style", "LINK", "guide", "NUMBER", "Hello", "NUMBER", "Your", "script", "very", "nice", "and", "simple", "Have", "question", "NUMBER", "how", "to", "revoke", "cert", "For", "one", "domain", "sub", "domain", "NUMBER", "For", "all", "domain", "NUMBER", "NUMBER", "how", "to", "renew", "cert", "For", "one", "domain", "sub", "domain", "NUMBER", "For", "all", "domain", "NUMBER", "NUMBER", "how", "to", "use", "email", "to", "notify", "about", "the", "expiry", "dates", "if", "already", "use", "in", "official", "client", "NUMBER", "NUMBER", "need", "or", "no", "need", "and", "how", "import", "account", "data", "from", "official", "client", "if", "before", "already", "generate", "for", "domain", "certs", "NUMBER", "crontab", "simple", "add", "letsencrypt", "NUMBER", "sh", "to", "cron", "no", "need", "params", "for", "script", "NUMBER", "your", "client", "be", "stable", "and", "production", "ready", "It", "would", "be", "nice", "if", "you", "add", "a", "FAQ", "for", "newbies", "and", "not", "only", "NUMBER", "While", "that", "be", "all", "the", "question", "NUMBER", "not", "implement", "yet", "NUMBER", "just", "run", "the", "script", "it", "renews", "all", "available", "domains", "which", "have", "a", "directory", "NUMBER", "not", "implement", "yet", "NUMBER", "you", "need", "to", "import", "the", "list", "of", "domains", "and", "put", "them", "into", "domains", "NUMBER", "txt", "if", "you", "want", "to", "reuse", "the", "old", "private", "keys", "see", "NUMBER", "NUMBER", "yes", "but", "cd", "to", "the", "right", "directory", "first", "NUMBER", "Also", "run", "it", "only", "every", "NUMBER", "days", "or", "so", "as", "it", "will", "resign", "all", "domains", "on", "each", "run", "if", "you", "do", "that", "daily", "you", "ll", "run", "into", "rate", "limiting", "NUMBER", "it", "s", "NUMBER", "day", "old", "so", "not", "stable", "production", "ready", "depends", "on", "your", "definition", "I", "guess", "works", "fine", "for", "me", "so", "far", "Thanks", "for", "reply", "NUMBER", "If", "not", "difficult", "do", "as", "in", "the", "original", "client", "privkey", "NUMBER", "pem", "cert", "NUMBER", "pem", "chain", "NUMBER", "pem", "fullchain", "NUMBER", "pem", "NUMBER", "I", "will", "watch", "for", "update", "NUMBER", "Loved", "the", "script", "in", "terms", "of", "what", "be", "conventionally", "only", "NUMBER", "file", "exclude", "perl", "script", "and", "configs", "not", "a", "bunch", "of", "incomprehensible", "Python", "as", "some", "NUMBER", "sorry", "for", "my", "bad", "english", "Offtop", "Don", "t", "know", "for", "what", "the", "original", "client", "need", "e", "mail", "Only", "for", "notifications", "about", "the", "expiry", "dates", "I", "would", "like", "to", "use", "your", "client", "for", "Apache", "under", "Debian", "NUMBER", "What", "do", "I", "have", "to", "do", "step", "by", "step", "or", "at", "least", "a", "little", "bit", "more", "explained", "than", "in", "the", "readme", "Do", "I", "need", "a", "run", "webserver", "Apache", "Do", "I", "need", "to", "edit", "the", "apache", "config", "file", "In", "what", "directory", "do", "I", "have", "to", "run", "the", "script", "lukas", "NUMBER", "thanks", "NUMBER", "Just", "to", "make", "it", "a", "bit", "easier", "for", "everyone", "and", "for", "me", "NUMBER", "NUMBER", "the", "letsencrypt", "server", "will", "call", "back", "http", "mycooldomain", "NUMBER", "well", "know", "acme", "challenge", "Right", "NUMBER", "So", "if", "for", "nginx", "location", "NUMBER", "well", "know", "acme", "challenge", "root", "var", "www", "letsencrypt", "letsencrypt", "NUMBER", "sh", "must", "be", "run", "from", "var", "www", "letsencrypt", "Right", "Once", "I", "get", "a", "certificate", "use", "the", "production", "LetsEncrypt", "CA", "the", "certificate", "doesn", "t", "seem", "valid", "and", "doesn", "t", "seem", "complete", "NUMBER", "For", "example", "here", "be", "one", "I", "just", "created", "BEGIN", "CERTIFICATE", "eyJ", "NUMBER", "eXBlIjoidXJuOmFjbWU", "NUMBER", "ZXJyb", "NUMBER", "I", "NUMBER", "dW", "NUMBER", "hdXRob", "NUMBER", "JpemVkIiwiZGV", "NUMBER", "YWlsIjoi", "RXJyb", "NUMBER", "IgY", "NUMBER", "JlYXRpbmcgbmV", "NUMBER", "IGNlcnQgOjogQXV", "NUMBER", "aG", "NUMBER", "yaXphdGlvbnMgZm", "NUMBER", "yIHRo", "ZXNlIG", "NUMBER", "hbWVzIG", "NUMBER", "vdCBmb", "NUMBER", "VuZCBvciBleHBpcmVkOiB", "NUMBER", "ZXJibGVyLmNvbSB", "NUMBER", "d", "NUMBER", "cu", "dmVyYmxlci", "NUMBER", "jb", "NUMBER", "iLCJzdGF", "NUMBER", "dXMiOjQwM", "NUMBER", "END", "CERTIFICATE", "Am", "I", "supposed", "to", "be", "doing", "something", "else", "with", "the", "final", "cert", "NUMBER", "pem", "file", "once", "I", "the", "script", "finishes", "to", "make", "it", "a", "valid", "certificate", "Ah", "OK", "be", "it", "possible", "to", "error", "out", "if", "we", "get", "a", "base", "NUMBER", "encoded", "error", "message", "I", "recently", "run", "into", "another", "one", "where", "I", "had", "hit", "the", "production", "limit", "for", "a", "domain", "name", "and", "get", "the", "base", "NUMBER", "encoded", "error", "message", "in", "the", "certificate", "file", "NUMBER", "Error", "handle", "should", "be", "good", "enough", "now", "to", "handle", "all", "error", "message", "from", "ACME", "NUMBER", "From", "a", "purely", "syntactic", "point", "of", "view", "there", "be", "some", "things", "that", "can", "be", "enhanced", "the", "shebang", "should", "be", "usr", "bin", "env", "bash", "so", "your", "script", "be", "portable", "to", "other", "UNIX", "systems", "such", "as", "BSD", "that", "host", "the", "bash", "binary", "at", "usr", "local", "bin", "you", "may", "be", "able", "to", "change", "all", "and", "any", "use", "of", "and", "replace", "it", "with", "as", "the", "latter", "keep", "argument", "even", "if", "they", "contain", "spaces", "whereas", "the", "former", "replaces", "a", "b", "to", "a", "b", "I", "ll", "keep", "the", "script", "in", "my", "watch", "list", "and", "use", "it", "once", "when", "I", "m", "ready", "to", "do", "some", "webadmin", "When", "request", "a", "certificate", "for", "a", "domain", "NUMBER", "I", "get", "through", "all", "steps", "successfully", "even", "challenges", "however", "I", "get", "a", "curl", "error", "when", "request", "the", "actual", "certificate", "Requesting", "certificate", "NUMBER", "curl", "NUMBER", "The", "request", "URL", "returned", "error", "NUMBER", "Forbidden", "Done", "Also", "curious", "how", "to", "use", "the", "staging", "setup", "for", "LetsEncrypt", "so", "I", "can", "issue", "test", "certificates", "NUMBER", "Changing", "the", "CA", "to", "the", "typical", "LINK", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "directory", "I", "use", "with", "the", "official", "LetsEncrypt", "client", "results", "in", "NUMBER", "s", "NUMBER", "Yeah", "I", "gave", "that", "shot", "when", "I", "was", "experimenting", "and", "that", "turned", "the", "NUMBER", "into", "a", "NUMBER", "Forbidden", "Generating", "private", "key", "NUMBER", "Generating", "signing", "request", "NUMBER", "Requesting", "challenge", "for", "verbler", "NUMBER", "com", "NUMBER", "curl", "NUMBER", "The", "request", "URL", "returned", "error", "NUMBER", "Forbidden", "Error", "after", "latest", "commit", "with", "LINK", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "as", "CA", "Requesting", "challenge", "for", "verbler", "NUMBER", "com", "NUMBER", "ERROR", "An", "error", "occured", "while", "sending", "post", "request", "to", "LINK", "staging", "NUMBER", "api", "NUMBER", "letsencrypt", "NUMBER", "org", "acme", "new", "authz", "curl", "NUMBER", "The", "request", "URL", "returned", "error", "NUMBER", "Forbidden", "Is", "there", "a", "way", "for", "me", "to", "receive", "the", "full", "error", "response", "body", "Would", "that", "contain", "anymore", "info", "Modified", "the", "script", "a", "bit", "and", "get", "the", "real", "error", "Error", "Can", "t", "retrieve", "challenges", "type", "urn", "acme", "error", "unauthorized", "detail", "No", "registration", "exists", "matching", "provide", "key", "status", "NUMBER", "Resolved", "by", "deleting", "my", "privatekey", "NUMBER", "pem", "and", "letting", "it", "regenerate", "NUMBER", "I", "be", "stuck", "here", "here", "as", "well", "NUMBER", "type", "urn", "acme", "error", "unauthorized", "detail", "No", "registration", "exists", "matching", "provide", "key", "status", "NUMBER", "Continually", "get", "this", "error", "until", "i", "run", "it", "with", "just", "c", "then", "I", "get", "Then", "i", "get", "this", "type", "urn", "acme", "error", "malformed", "detail", "Provided", "agreement", "URL", "LINK", "do", "not", "match", "current", "agreement", "URL", "LINK", "SA", "v", "NUMBER", "July", "NUMBER", "NUMBER", "pdf", "status", "NUMBER", "After", "setting", "my", "LICENSE", "to", "that", "value", "which", "was", "a", "complete", "guess", "on", "my", "part", "i", "then", "get", "that", "same", "NUMBER", "error", "NUMBER", "I", "was", "able", "to", "get", "around", "it", "by", "just", "use", "the", "c", "option", "and", "remove", "my", "private", "key", "which", "I", "believe", "others", "did", "as", "well", "NUMBER", "I", "be", "moving", "forward", "now", "NUMBER", "Is", "there", "any", "solution", "to", "use", "my", "own", "private", "key", "Its", "really", "annoying", "I", "_have", "to_", "use", "one", "of", "my", "private", "keys", "due", "to", "HPKP", "otherwise", "I", "cannot", "switch", "my", "certificate", "NUMBER"], "text_count": [0, 32711, 7238, 3688, 2460, 171, 2700, 6, 149, 3540, 4895, 8723, 4825, 3046, 3572, 1569, 0, 0, 0, 0, 10057, 2952, 1575, 1016, 2219, 1556, 0, 0, 0, 0, 19493, 12509, 7298, 218, 4243, 1088, 0, 0, 0, 0, 26987, 92, 12227, 11103, 6407, 0, 0, 0, 0, 0, 5812, 2462, 3182, 1663, 2370, 1090, 2405, 0, 0, 0, 22705, 1375, 19253, 1275, 0, 0, 0, 0, 0, 0, 13691, 1693, 9427, 3912, 1630, 0, 0, 0, 0, 0, 28394, 13799, 2836, 10816, 1128, 1087, 0, 0, 0, 0, 1578, 6289, 621, 0, 0, 0, 0, 0, 0, 0, 19409, 3348, 12307, 4295, 0, 0, 0, 0, 0, 0, 49288, 87146, 951, 2555, 850, 2330, 0, 0, 0, 0, 115810, 314, 86890, 1501, 19723, 25419]}]