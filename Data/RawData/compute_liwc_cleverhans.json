[{"repo": "cleverhans", "type": "elite", "title": "", "number of text": 745, "text": "  Which implementation are you referring to?  Most attacks should be able to take a batch of data as the first dimension of the input tensor. Can you provide details of attacks and framework version where you find this to be an issue? Can you provide details of attacks and framework version where you find this to be an issue?  This looks like a TF installation problem. Feel free to reopen if that's not the case.  Thank you for the PR. Unfortunately, to avoid duplicating code, we don't merge tutorials that change the model or dataset into the tutorials folder. If you'd like, you could add this into the examples folder but it will not be maintained.   This looks like a problem with your model definition but it's hard to tell from the limited information you shared. Feel free to reopen if you are still facing this issue, but please add context to your question (e.g., code needed to reproduce the issue)  (closed because cannot be merged since repo you are pulling from was deleted)  @CNOCycle it looks like you are are wrapping the model *with softmax*. This is not going to work, as the attack requires logits. Can you try removing the softmax layer? @carlini would you be able to follow up on this?  These images failed to download because they no longer exist.\r\nIf you look at dev_dataset.csv and final_dataset.csv, each image id maps to some URL of image on Flickr. If image is gone from Flickr download will fail.\r\n\r\nKaggle packaged dev dataset and put into their website, so you can try to download entire archive from there: https://www.kaggle.com/google-brain/nips-2017-adversarial-learning-development-set\r\n\r\nOther than that we can not do anything about failed downloads.\r\n  Could you post this on the github for rl-attack? This looks like it is related to the code implemented there.     Thanks for the report. Two things: \r\n\r\n* Could you post this to stackoverflow unless it is a reproducible bug: https://stackoverflow.com/search?tab=newest&q=cleverhans\r\n\r\n* Could you paste a full stack trace so we can debug?\r\n\r\nFrom looking quickly at your code, you are using `generate` instead of `generate_np` (the former is for symbolic tensors and the latter for numpy arrays)  My bad the title of the issue was ambiguous, could you only change the name of the argument for the 3 new languages supported in cleverhans v4? (jax eager and pytorch) \r\n\r\nWe don't need to update the existing APIs that will get deprecated when we increment the version number to v4. Basically, the only files that need to be modified are those in the `future` folders. \r\n\r\nLet me know if you need more details! Yes, all of their code should be in future folders  Can you sign the CLA?  Thanks, this looks like a change in the `tf.keras` API between 1.13 and 1.14 given that the example code you are including in your report is defining the model using `tf.keras`. Could you try your solution as well on the simple example included in the tutorials folder (https://github.com/tensorflow/cleverhans/blob/master/cleverhans_tutorials/mnist_tutorial_keras.py) and open up a PR afterwards? \r\n\r\nI suspect something along the lines of the following in `utils_keras.py` show do the trick:\r\n\r\n```\r\nfrom distutils.version import LooseVersion\r\n\r\n...\r\n\r\nif LooseVersion(tf.__version__) < LooseVersion('1.14.0'):\r\n  logits_name = node.inbound_layers[0].name\r\nelse:\r\n  logits_name = node.inbound_layers.name\r\n``` The accuracy on adversarial examples seems quite high. Is the model expected to be robust or is the attack failing here? My bad I forgot that the second run for each model is using adversarial training, hence the FGSM fails. I'll merge the PR   Thank you for the PR. I'm all for extending the code base to include new knn libraries but in order to keep the archival status of the dknn example, could you add a flag that specifies which library to use for nearest neighbor search (e.g., falconn, fais, ...) and then keep the falconn code as the default library? I'll take a look at the code afterwards. Thanks! Regarding the non-deterministic results on FAISS, I have never used the library so I can't really comment on  that The code I've been using is the one you are editing in this example Results look very different for the first few bins when comparing FAISS runs to FALCONN runs, are the parameters for both libraries comparable?\r\n OK to ignore CLA, I edited the PR Yes I am just waiting on Travis, thanks a lot for the PR. The results are sufficiently consistent between FALCONN and FAISS for us to merge the PR. There is not much value in tuning the individual parameters of each approach given that optimal values of these parameters will depend on the model architecture and dataset too. I have only applied to CNNs with <= 10 layers, but I don't think more layers should be a problem as long as the FALCONN/FAISS implementation can handle the nearest-neighbor search in each layer.  What is the status on this PR? Should it be reviewed?  The L-BFGS approach is implemented here: https://github.com/tensorflow/cleverhans/blob/master/cleverhans/attacks/lbfgs.py  The utils_keras file contains both a Keras defined model and a tool to wrap Keras models into CleverHans models. Does that help? Oh that's because the wrapper can be used for any Keras model and the model that is in the script is just one example of a Keras model, we didn't want to impose a specific model I'm not sure I understand your comment. Are you saying it would make more sense to move the Sequential model from the utils_keras.py script to the tutorial and only keep the KerasModelWrapper in utils_keras.py? Our reasoning for including the model in utils_keras.py was just to give one example of a model. We still wanted to expose in the tutorial how any Keras model can be wrapped into a CleverHans model regardless how it was defined. Is this where your confusion came from? If yes, we could move things around to make it more intuitive.  I'm not sure from your question whether you are using the model in the code from CleverHans or the new model from https://github.com/davidsandberg/facenet/wiki/Validate-on-LFW.\r\n\r\nCould you clarify? It looks like you are missing the `fprop` method that needs to be implemented to complete the CleverHans model object (from `cleverhans.model.Model`). You can find an example of such a class here: https://github.com/tensorflow/cleverhans/blob/master/examples/facenet_adversarial_faces/facenet_fgsm.py#L11 I thought you were running `python src/validate_on_lfw.py`. Did you make sure that the model is still an instance of `cleverhans.model.Model` and has an `fprop` right before you run the line that crashes?  I think you are correct, I haven't worked on this particular example (it was added by @BrunoLopezGarcia) but it looks like it was written before we made sure that the FGSM was called on logits: see https://github.com/tensorflow/cleverhans/blob/13c84b4411083c4840d3c62329f3cca106b4f499/cleverhans/attacks/fast_gradient_method.py#L54\r\n\r\nUnfortunately, I don't know much about FaceNet but yes you would have to find a way to create a method get_logits that take an input tensor and returns a tensor containing the corresponding logits. I looked a bit at the code in the example, and it sounds like it is just computing a distance between embeddings and processing the distance to compute a score that is used in place of a classification score. Given that there are no real logits or probs (if my understanding is correct), I think it's ok to just change the following line\r\nhttps://github.com/tensorflow/cleverhans/blob/13c84b4411083c4840d3c62329f3cca106b4f499/examples/facenet_adversarial_faces/facenet_fgsm.py#L49\r\nto say instead \r\n```\r\nself.layer_names.append('logits')\r\n``` Could you state what your problem is now? Great to hear that things are now working. If you find that the attacks are not evading the model as often as you would expect, you might want to switch to an iterative attack (e.g., PGD).\r\n\r\nUnfortunately I won't have time to look at your notebooks but you can definitely open PRs to make changes to CleverHans documentation and code.\r\n\r\nThanks!  @nickfrosst can you review / approve if already reviewed internally?   The error specifies that your model object is missing an `fprop` method, which probably explains why the code is failing. To see an example of an implementation of a model class, see: https://github.com/tensorflow/cleverhans/blob/f1cf6f06b6f0f68334f7fc5b862b01e439dcdc37/cleverhans/model_zoo/all_convolutional.py#L11  From your code it looks like you are initializing the model's weights, defining the tf session, etc... after having trained the model using Keras. My guess is that the adv_x array does not contain images that are adversarial. This would explain why the accuracy output by [22] is close to random---because the model weights are random. When you restore the model, its weights are set again to the values learned during training so the accuracy is restored (because the images are not adversarial).  I believe the tutorial has not been updated in a while so it's likely that the new `train` function is causing the problem. From the error, my guess is the model is being redefined after each data augmentation and the variables cannot be created multiple times with the same name.\r\n\r\nIf you're able to fix the tutorial, feel free to open a PR Any update on this? Were you able to find a solution to your issue?  Thanks, this looks good. Could you add a deprecation warning of 6 months for the old attack name and have it call the new attack class so that the code is backwards compatible?   Would you be able to put together a PR that implements your fix if it solved your problem? Otherwise we will have to close the issue if we don't have a way to reproduce it.  CLA OK to ignore  Thanks for the contribution @iArunava : did you get a chance to wrap up this PR? Ping @iArunava ?  Hi @ywu36, the code you refer to does not support `model.input` syntax you used in your code snippet. Are you sure this is the model you are having a problem with? If you are still facing this issue, could you reopen this issue and share the code for defining `model` in your previous code snippet?  Yes reaching more than 90% should be relatively easy even with a small number of filters (say 16 or 32 for runtime reasons) for the all convolutional model already present in the current CleverHans. The code can be found here:\r\nhttps://github.com/tensorflow/cleverhans/blob/master/cleverhans/model_zoo/all_convolutional.py I'm closing this PR because the code does not run (it is incomplete and needs to much work to be completed so starting from scratch in #1076)  I actually resolved most of the conflicts already.\r\nOne remaining thing is update `cleverhans/future/torch/utils.py` which I could not do in web-editor  If you are still facing this issue, feel free to re-open it with additional information requested (e.g., stack trace, or your model definition)  Thanks for working on this @iArunava, do you have any updates? Ping @iArunava ?  Thanks for the report. The current travis configuration does not specify sudo:false but rather sudo:required so we will keep that configuration for now.  Thanks for the PR! Feel free to add your name to the author list in the README @Jianbo-Lab    Let's change the dataset from MNIST to CIFAR10 once the PR is merged. The idea was to first get an example for MNIST quickly to help contributors waiting on an API example. Afterwards, we'd like to move away from MNIST since it is usually not an interesting dataset to study adversarial examples on (except in some corner cases).     We thought about this and are not expecting a unified interface across frameworks. \r\n\r\nInstead, we are expecting this kind of API: \r\n\r\n``` \r\ndef pgd(model_fn, input, eps=0.2, iterations=1000):\r\n  return adv_x\r\n```\r\n\r\nwhere `input` and `adv_x` could be numpy arrays. \r\n\r\ncc @david-berthelot who may have some thoughts as well or can correct me if I am not reflecting  properly some of the discussions we had offline  Completely agree with @david-berthelot\r\n\r\nThanks for the details @michaelshiyu: I'm just getting started with PyTorch so I'm not very familiar with the typical pipeline yet. If it's more inline with the code style established in the PyTorch community, then we should expect a PyTorch tensor We had a simpler API in mind (without attack classes), would you mind holding on for a few days so we can clarify our intended API? I took a quick look at your PR and I suspect very few changes would be needed to the code itself but it looks like all we will be keeping is the `generate` method as a standalone function. I just want to reduce the amount of work needed on your end, thanks Thanks! Yes, it should just be a little of refactoring but the underlying code should be the same Thank you everyone for the contributions, we appreciate your work. @david-berthelot and I have been working on the API offline and are making the changes directly to @michaelshiyu 's PR #1028. We'll iterate a bit more on that PR and close this issue when we are done and have merged the FGM and PGD attacks in PyTorch. At that point it will make sense to include more attacks @HaojieYuan and to adapt and merge your PR @iArunava  Thanks @iArunava ! @iArunava @michaelshiyu  the attacks were just merged, thanks for all the work! Feel free to open more PRs following a similar API  This is the proposed structure for working on the v4 of cleverhans. When the corresponding milestone is complete, we will reorganize the repository to have the structure defined in the main README cc @goodfeli  thanks I was missing the init files that's why   We've just started a major redesign of CleverHans to support PyTorch as well as TF2 and JAX. Let us know if you'd like to help us with that\r\n\r\nSee #1018  We are planning to first implement PGD in each framework, including PyTorch. If you'd like to help with this, that would be great! The correspond issue to track this is #1020  I'll close this given that we are tracking progress on #1020, thanks @michaelshiyu   Duplicate of #874 \r\n\r\nUnfortunately we have not had success with having the underlying TF bug fixed so far. This problem may disappear with TF2 though  @HaojieYuan did you get a chance to look at this?  Thanks! Having discussed this with a colleague, we can see how the argument would work both ways: \r\n\r\n* in the current implementation, overshoot is only added once the iterative procedure has converged to avoid any numerical instability from preventing the attack from being successful\r\n* this overshoot could be added within the loop but that would likely make the iterative procedure less accurate as it tries to find an optimal evasion point.\r\n\r\nI would recommend comparing with the procedure described by the authors of deepfool and reopen the issue if they indeed recommend using the overshoot variable within the loop.\r\n\r\n If the implementation provided by the author included in the overshoot term in the loop, it would make sense to update CleverHans' implementation to match the authors' implementation. Feel free to open a PR to do that. Thanks!  One suggestion regarding this - maybe have a separate sub-directory under experimental and put code there. For example put this into \"cleverhans/experimental/alp\" directory.\r\nOtherwise we might end up with adding more and more files right into experimental directory and it might become confusing  This should be closed by #999, feel free to reopen if that's not the case anymore  No progress has been made on this issue yet, but for now we recommend reading the following report: https://github.com/evaluating-adversarial-robustness/adv-eval-paper  overall looks good, but please check test error, also please re-run certify.py to make sure that it works on some data  Hi @adiyoss could you take a look and provide some guidance? Would be great to have this loss merged! Thanks a lot @adiyoss ! No problem @adiyoss, did you get a chance to look at this recently? Closing due to inactivity, feel free to reopen if you keep working on the PR. Thanks!   Good suggestion, I just moved the script to the model_zoo  Thank you for the PR, this looks mostly good to merge, I just have a few suggestions: \r\n\r\n* In the code, you refer to `y_` as the model predictions on some inputs (e.g., on adv inputs), could you change that to `preds_` to be consistent with other parts of the library? It makes it easier to distinguish labels from model predictions\r\n\r\n* The tests are failing because of the tolerance.\r\n\r\n* @goodfeli do you have a preference towards making this a new tutorial or updating the existing tutorial? The workflow are different enough that I see some values of having the two versions coexist (but we could also include both in the same file to limit code duplication at the expense of readability probably) I believe we had a similar problem in the past. What is likely happening is that adding the new tutorial makes running tests on tutorials too long and so Travis crashes. A possibility would be to move the existing Keras tutorial to the examples folder and only keep yours in the tutorials folder. Given that keras layers are now part of tensorflow, I don't think having a proper keras model and training it with tensorflow is a common use case we need to support. Users could directly use tf.keras.layers on TF tensors if they want to use keras to define the model but train using TF.   Are you using the latest version of CleverHans? I was able to run the following script from my machine by pulling from the master branch:\r\n\r\n```\r\nfrom cleverhans.compat import flags\r\n``` The version for pip is not the latest (it doesn't keep track of each commit to the master branch but rather is the last versioned CleverHans), could you try installing by cloning the github repository directly? You can do it with `pip install git+https://github.com/tensorflow/cleverhans.git#egg=cleverhans`  Does that supersede #923 ?  Here's the error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/travis/miniconda/envs/test-environment/lib/python3.5/site-packages/nose/case.py\", line 198, in runTest\r\n    self.test(*self.arg)\r\n  File \"/home/travis/build/tensorflow/cleverhans/cleverhans/devtools/tests/test_format.py\", line 110, in test_format_pep8\r\n    raise ValueError(e.output.decode(\"utf-8\"))\r\nValueError: ************* Module test_utils_tf\r\ntests_tf/test_utils_tf.py:39: [W0612(unused-variable), TestUtilsTF.test_clip_by_value_numpy_dtype] Unused variable 'out'\r\n```  Given that this is neither a bug report or feature request, this type of question is best asked on StackOverflow so others can help provide an answer: https://stackoverflow.com/search?q=cleverhans\r\n\r\nWould you be able to repost your question on StackOverflow and provide additional details? (e.g., what is the range of your pixel values?) It will likely be more useful if you can write a small script that reproduces the bug, so we can test it out on our machines as well. Could you help us by telling us what success rates you observe in your script and why you think they are low (for example, a success rate that is reported in another paper)?  @nottombrown did you get a chance to take a look at the isssue?  @nottombrown could you give me rights to the CleverHans readthedocs project so I can take a look? My account is npapernot @nottombrown gentle ping Thanks a lot @nottombrown, I was able to fix the issue!  @david-berthelot could you take a look?  LGTM, not sure why the test is failing because tf.keras.backend does exist in tf v.1.8  I think this is fine to merge because:\r\n- this is really just a sanity check that the user is calling with good arguments. you probably won't get good optimization performance if you use eps=.1 and eps_iter=.1000000000000001 but there's not real any reason that that would be a substantially worse idea than using eps=.1 and eps_iter=.1.\r\n- we don't really have any use cases that depend on float64 precision of these variables in practice\r\n\r\nThat being said, we might actually be able to get this to run on TPU without a downcast.\r\nI'm not familiar with writing TPU code yet. Would it work to just stick the whole thing in a \"with tf.device(\"/CPU:0\")\" block so the casts run on CPU too? The asserts are already CPU-only.  this is work toward https://github.com/tensorflow/cleverhans/issues/861 Yes, the only changes besides moving classes are copying imports to support the classes in their new locations, and changes related to pylint that were needed to make the tests behave the same on my laptop as they do on travis.  I'm pretty sure that's not the full stack trace or error message, can you paste all of it? @AlexeyKurakin do you have any opinions? I think what's going on is that this `examples` directory was made before we started using the `Model` class consistently as part of the `Attack` definitions. Do we want to keep updating this example to work with newer versions of the library? Or do we want to leave it as a snapshot of the code that was actually used for NIPS 2017 and give instructions for how to install a compatible, older version of CleverHans?  I will close this one since this issue is already tracked by #874  The problem is that the model class itself does not support pickling.\nTensorFlow Variables can't be pickled, so Models must be designed to avoid\nreturning any Variables in their __getstate__. It isn't anything to do with\nthe tutorial code.\nI made an issue to track this:\nhttps://github.com/tensorflow/cleverhans/issues/930\n\n\nOn Sat, Dec 15, 2018 at 12:14 PM David Glavas <notifications@github.com>\nwrote:\n\n> How to store the CIFAR10 model from the tutorial\n> <https://github.com/tensorflow/cleverhans/blob/a9f4425867d981ac732a23dce60eb7d08c24ebca/cleverhans_tutorials/cifar10_tutorial_tf.py>?\n> I tried doing the same as in the MNIST tutorial by writing the following\n> after the model has been trained (line 136\n> <https://github.com/tensorflow/cleverhans/blob/a9f4425867d981ac732a23dce60eb7d08c24ebca/cleverhans_tutorials/cifar10_tutorial_tf.py#L136>\n> ):\n>\n> with sess.as_default():\n>     save(\"cleanCIFAR10Model.joblib\", model)\n>\n> The model trains succesfully but while trying to store it with the above\n> code the following exception occurs: TypeError: can't pickle\n> _thread.RLock objects.\n>\n> The model from the MNIST tutorial is stored in exactly the same way\n> (pasting the above code after the training code). The only notable\n> difference between the MNIST and CIFAR tutorials is the preprocessing at lines\n> 84 - 86\n> <https://github.com/tensorflow/cleverhans/blob/a9f4425867d981ac732a23dce60eb7d08c24ebca/cleverhans_tutorials/cifar10_tutorial_tf.py#L84>.\n> I suspect the exception is caused by the lambda\n> <https://stackoverflow.com/questions/47066635/checkpointing-keras-model-typeerror-cant-pickle-thread-lock-objects>\n> at lines 85-86 (since x and y are tf.float32's and Keras does not support\n> serializing tf.Tensor)?\n>\n> Any suggestions for how to store the CIFAR model from this tutorial?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/issues/928>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGocW16AdcDujwJXdehCZVpqMvmhwks5u5Vg1gaJpZM4ZU4iN>\n> .\n>\n Closing this issue because #930 says how to fix it  If you installed via pip, upgrade to 3.0.1, or if you installed with git, pull the latest master. This is a bug that was introduced recently and fixed recently.  Sounds like this was resolved, if that's not the case, feel free to reopen or make a PR that fixes the issue.  You can always download by manually cloning the early github tag.\r\n\r\nI don't actually know about pypi. @npapernot should the old version actually be removed from pypi?\r\n\r\n@B-Yassine : this kind of slowdown isn't expected. Are you sure you're using the same model and the same configuration for the attack (especially the number of iterations) as before? Has the attack moved from running on GPU to running on CPU? I responded to @B-Yassine's email and just saw this. For everyone else reading this: the old version is still in pypi: \r\n\r\n* current version (v3): https://pypi.org/project/cleverhans/3.0.0.post0/\r\n* older version (v2.1): https://pypi.org/project/cleverhans/2.1.0/ Do you still want us to help debug the slowness in v3? Yes, please open another issue with more detail for the deepfool attack.\r\n Do you still want to try to debug the slowness issue?  The training module in CleverHans works with models defined using TensorFlow so you would have to redefine your random forest with TensorFlow first. The issue tracker is only for bugs or feature requests, so I encourage you to ask your question or similar questions on StackOverflow in the future.  Something looks weird about the code snippet you pasted. You pass a variable called `x_input` to `inception_v3` but there is no `x_input` variable defined anywhere.\r\n\r\nMy guess is that in your own repo, `x_input` is a global variable. FGSM works because it only ever makes one call to fprop, and on that call the `x` argument to `fprop` happens to be `x_input`. The iterative versions fail because on the second iteration, `x` is no longer the same as `x_input`, and the loss has no derivative wrt `x_input` if you're using a `stop_gradient` on each iteration.\r\n\r\nIf my guess is correct, you should change \"logits, end_points = inception.inception_v3(x_input,\" to \"logits, end_points = inception.inception_v3(x,\".\r\n\r\nFeel free to re-open the issue if I have not guessed correctly.  There were two bugs here:\r\n1 If the early stopping threshold was set to 0., early stopping was disabled because this was treated as a value of False. (0. is probably the most important threshold, because the loss is a hinge and a threshold of 0. guarantees misclassification)\r\n2) The early stopping loss was calculated before doing the projection, so it could result in early stopping using a loss that wasn't actually attainable This PR includes commits from https://github.com/tensorflow/cleverhans/pull/903 . The diff will be smaller after that is merged  `fprop` returns a dictionary mapping from string names of layers to their TensorFlow values. Your `InceptionResNetV1Model` looks like it implements `fprop` but the dict it returns doesn't have a `logits` key in it. You need to change your `fprop` implementation to include the `logits` key.  Begins to address #888  If you are tagged below, could you respond with your current affiliation? \r\n\r\n@aashish-kumar \r\n@aspratyush\r\n@BrunoLopezGarcia @BrunoLopezGarcia any update? We will be pushing out a tech report without an affiliation otherwise  That seems OK to me. Thanks for looking into this. At the time where we wrote the tutorial, it was difficult to use Keras' fit function because it then required that we pass Keras' backend learning_phase to each sess.run in CleverHans (for instance when calling model_eval or batch_eval). If this is not the case anymore, it would be good to make the tutorial more Keras-like so it is more accessible to Keras users. @batzner  would you still like to make a PR for this or should I close this issue for now?  You need to pass an instance of `cleverhans.model.Model`. For scikit-learn models you'll need to make a wrapper class. You can look at `KerasModelWrapper` for an example. You need to write your own wrapper for scikits.learn. The KerasModelWrapper is only for Keras.  Can you paste a complete script that we can run? We have unit tests that make sure CarliniWagnerL2 successfully modifies the images in some cases so this must be something specific to your model, etc. Could you post a script that we could actually run, rather than isolated code snippets? It's not too hard for me to debug something that runs, but from this starting point I'd spend more time setting up all the imports etc than actually debugging.\r\n\r\nI don't see anything conspicuously wrong in these code snippets.\r\n\r\nThree thoughts:\r\n1) It's better to work with logits than to work with probabilities. Your model is returning only probabilities, which is probably not good for numerical stability.\r\n2) Using a `callable` is deprecated. This shouldn't be the problem, but there's a small chance there's a bug in the handling of `callable` objects. It's thus possible you could fix the problem by changing `InceptionModel` to inherit from `cleverhans.model.Model` and implementing `get_logits` rather than `__call__`.\r\n3) cleverhans doesn't really officially support tf 1.4 anymore. The tests only run on tf 1.8 and later. There's a small chance that updating tensorflow will fix the issue.\r\n Can you please post a short, executable script that causes the problem on your machine? Before I run it on my end, can you add:\r\n\r\n    abs_diff = np.abs(nontargeted_images - images)\r\n    print(abs_diff.min(), abs_diff.mean(), abs_diff.max())\r\n\r\nand let me know what it prints? Looks like the issue was resolved but feel free to reopen with a reproducible script if you are still facing an issue.  Thanks!  @AlexeyKurakin could you take a look?  It's the \" self.assertClose(delta, eps)\" line, which was actually touched by this PR, that is failing.\r\n It looks like it's failing for both tf 1.12 builds but none of the other builds I restarted the test to see if it passes. Travis sometimes encounters issues reporting back the result of tests Looks like the test commented out was the faulty one Thanks, hopefully we will make progress towards migrating to CI with GPUs This broke `generate`... The new assert only works if `eps` is numpy/tensorflow. If it's a float, the new assert causes an AttributeError while trying to read its dtype.  If you just want to get cleverhans working, the easiest way is to use \"git clone\" and set your PYTHONPATH manually. That's how I always install.\r\n\r\nWe know that `pip` tends to install `cleverhans` in weird locations that are not on the `PYTHONPATH`. None of the main `cleverhans` developers including myself know enough about `pip` or `setup.py` to tell exactly what is going wrong. If you could tell us where `pip` does put cleverhans on your Mac, that might help us. Alternately, if anyone who does understand `pip` and `setup.py` happens to see this issue, we could use your help. Another possibility is that we have not updated pypi in a long time (because we updated pypi when incrementing Cleverhans to 2.0) and for that reason the loss module might not have existed at that time. What happens if you run `python -c \"import cleverhans\"`? If that fails then the whole library is not installed on the `PYTHONPATH`.\r\n\r\nHow did you install the tutorials? Did they come from the same `pip` command as the library?   Looks like this is related to a recent issue encountered by @carlini : https://github.com/tensorflow/tensorflow/issues/23166\r\n\r\n@carlini could you comment if that's the case?  Do you specifically need the jsma_batch function for your particular application or are you able to use jsma_symbolic? \r\n\r\n It's also worth checking why pylint didn't catch this  It seems you are trying to attack a model that was defined / trained using sklearn. However CleverHans needs the model to be defined using TensorFlow so that it can have access to a symbolic representation of your model and differentiate through it automatically. If this is incorrect, feel free to reopen this issue. The problem might be that we've only ever used KerasModelWrapper with\nSequential models in Keras. If you can provide a minimum failing script we\nmight be able to patch the wrapper to support other kinds of Keras models\n\nOn Wed, Oct 31, 2018 at 10:42 PM, Jeredriq <notifications@github.com> wrote:\n\n> Its correct but do you know how can I turn sklearn examples into\n> Tensorflow to have that access? I tried using KerasClassifier but I got the\n> same error, AttributeError: 'KerasClassifier' object has no attribute\n> 'layers'. I'm new to this topics so I believe there should be an easy way\n> to do this instead of just writing whole models via Tensorflow, can you\n> suggest a solution or do you have an example doing this?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/issues/871#issuecomment-434936910>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGhzEi1UM6XT1Mc7VAclfjjyLUARyks5uqompgaJpZM4YCWpc>\n> .\n>\n  Good idea  (Discussed offline) changing it to use the logits should not be a problem   That's a different assert  https://github.com/tensorflow/cleverhans/blob/master/cleverhans/attacks.py#L288  It looks like we would have to import tempfile for this fix to work Indeed, thanks!   Benefits would include:\r\n\r\n- Speed up tests by configuring Dockerfile to use an image with everything preinstalled\r\n- Use an SSD or an extra fast CPU\r\n- Build everything in a RAM disk\r\n\r\nCloses #676 \r\nCloses #677\r\nCloses #638 Sorry, we should update the issue. We tried using Google Cloud Build and found that it was missing one feature we wanted. We're waiting for that feature to be released publicly and then we'll make the switch. Thank you for offering to help. We'll ping you again when the GCB feature is out.  Closes #549   Thanks for updating the comment, it's much more clear now  I would be in favor of moving to 1.9 and stop supporting one of the older TF versions. What do you think @goodfeli ? I would say drop the oldest one so 1.4 and keep 1.8 until we switch to the next TF version Just talked to Ian in real life and he agrees on dropping 1.4 and keeping 1.8  I think the tests are not starting here because there are conflicts with the main branch  This still isn't showing up right, I'm not sure exactly why. Could you try making completely new commits for the code or is that a lot of work?   Let's wait for #654 to be merged so we don't have to refactor it  Let's wait for #654 to be merged so we don't have to refactor it  Let's wait for #654 to be merged so we don't have to refactor it  Yes, that would be nice to make sure that future changes to compat.py don't\nbreak the changes made here. Thanks!\n\nOn Thu, Oct 4, 2018 at 10:35 AM WindQAQ <notifications@github.com> wrote:\n\n> *@WindQAQ* commented on this pull request.\n> ------------------------------\n>\n> In cleverhans/compat.py\n> <https://github.com/tensorflow/cleverhans/pull/712#discussion_r222762452>:\n>\n> > @@ -81,6 +81,16 @@ def reduce_mean(input_tensor, axis=None, keepdims=None,\n>                           reduction_indices=reduction_indices)\n>\n>\n> +def reduce_prod(input_tensor, axis=None, keepdims=None,\n> +                name=None, reduction_indices=None):\n> +  \"\"\"\n> +  Wrapper around the tf.reduce_prod to handle argument keep_dims\n> +  \"\"\"\n> +  return reduce_function(tf.reduce_mean, input_tensor, axis=axis,\n>\n> It seems that the random generated samples will not trigger adjusted\n> stddev, so the test pass even if this is wrong. Maybe I can come up with\n> some dedicated cases for this?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/712#discussion_r222762452>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIbS9jyLif2hX3TTg6TATxHcD3IaJfWBks5uhkbLgaJpZM4XHUcN>\n> .\n>\n Sorry I just realized why the tests were not failing, they were added to a different non-monitored directory. Can you move them to the `tests_tf` folder? You can find an example test in `tests_tf/test_attacks.py` for instance. Sorry again for not noticing this earlier. Tests are failing due to a formatting issue\r\n```\r\ncleverhans/dataset.py:117: [W0612(unused-variable), maybe_download_file] Unused variable 'urljoin'\r\n```\r\n\r\nThe last item remaining is to remove the TODO (see comment above). Once this is fixed, we can merge the PR   I'm really not sure why Travis does not want to build this PR  I disabled the test because it was flaky and does not seem to be making the right calls to the model interface The old test is here: https://github.com/tensorflow/cleverhans/pull/635/commits/49b3c75f0d0d3b65b1d9460794c198c4bfe582a6  @AlexeyKurakin Could you push a dummy commit or reopen this as a new PR? I am not able to trigger Travis by closing/reopening  I closed and reopened the PR to trigger a new Travis build. No it just broke because I pushed a minor fix to your branch so we can still merge. Thanks for asking!  `_pad_img` could be rewritten to operate on a whole batch, and avoid needing a map_fn. Check how this affects runtime of CIFAR-10 training pipeline.   After some research last Friday, we concluded this would require moving to Google Cloud Build and is documented in #740  Those are both good suggestions. I just pushed the changes but had to create a new file `check_installation.py` otherwise both paths would be equal Agreed, thanks for the suggestion! I pushed the update    Reminder: wait for #635 to be merged and change base branch to master    For now I am just opening this to see which tests fail. Then I'll make those tests pass.  I'm not sure about this specific use of kwargs, but in a lot of places we're using kwargs as an explicit non-interface. For example, you can pass basically anything to MLP.fprop and maybe some Layer subclass will pick it up and maybe nothing will pick it up. The upside is that it makes it easy to make exotic new layers that behave differently in different contexts without needing to make the MLP class aware of all those different contexts. The downside is that there isn't any way I'm aware of to detect errors like this kind of typo. If we can come up with a better design we definitely should, but it's not as simple as just adding a one-line check somewhere. (Oh, and we should check whether it is feasible to check the kwargs for Attack.generate, I'm not sure if that specific use of kwargs is one of the ones that's hard to validate)  1. Since self.back is not used, I removed it.\r\n2. I commented this test out because it is not implemented correctly (e.g., it passes a numpy array to a CleverHans model and then runs it in a session). I created #704 to make sure we don't forget to fix the test Thanks for the feedback. I removed the test and added a pointer to the commit in the issue. I'm not sure why the test was not failing before (it was sometimes giving me a different outcome after running it multiple times).   This is because the backend options were tensorflow and theano, and we no longer support theano, right?    @yenchenlin @nottombrown is this ready to merge? Yes feel free to merge after tests pass since this was already reviewed by @yenchenlin  Closes #704  We should move test_format.py to test different files on different travis builds. Specifically, we should turn E0401 back on (so that it will fail if it can't import a dependency) and run the pytorch tests in the pytorch travis builds, tensorflow tests in the tensorflow travis builds.  This PR switches to TensorFlow style, i.e. PEP8 with 2 spaces.\r\n\r\nMost of this was done automatically with a script.\r\n\r\nThe script was added in commit \"autopep8_all.py (The script to turn the whole library tf style)\"\r\n\r\nThe script was run in commit \"ran autoep8_all.py\". This makes the PR as a whole have a huge diff, but the diffs for the other individual commits should be OK to read.\r\n\r\nThe remaining commits are based on removing the old test based on PyCodeStyle and setting up a new test based on pylint. As far as I can tell, PyCodeStyle does not support using 2 spaces for tab.\r\n\r\nGood news: pylint is very thorough. It actually imports the python files and catches many errors that PyCodeStyle was not able to with text analysis alone.\r\n\r\nBad news: pylint is very slow. `examples/linear_extrapolation_plot_example.py` turned out to be broken enough that I didn't think it was worthy fixing, partly because it never had tests. I'll probably just write a properly tested version from scratch sometime soon. I'm planning to start a plotting module within the next week or so. Thanks!                   Is it any faster if we do one command line call and pass all the files in one call? Does this prevent repeated imports? Is there a way to configure it to do shallower analysis where it doesn't need to import everything? I'm not sure yet how we would keep track of this kind of persistent state on travis, but maybe we could use a caching system, where we only run pylint on a file if the md5sum of the file concatenated with pylintrc has changed since the last time it passed pylint. Previous comment is wrong: we can't hash an individual file, because other files might have changed interfaces.\r\n\r\ne.g. if file A says:\r\nimport file_b\r\nfoo()\r\n\r\nbut file_b now has\r\ndef foo(x):\r\n\r\nfile A is wrong not to supply an argument to foo. Can we speed it up with multithreading? Everything runs in a subprocess anyway. I/O is probably a reasonable amount of the work so using multiple processes may help even on a single core. It's slow locally too I'm looking into this a bit already.\r\n\r\nOne thing I've learned: we want to call pylint on multiple files for correctness, not just speed. Run on multiple files at once, it can detect additional errors, like cyclic imports and code duplicated across files.\r\n\r\nAlso, tentatively, it looks like there is a speed benefit. On my laptop I ran pylint on two different files. It takes about 10s to run each file individually, but it still takes about 10s to run both files in one call. I think the runtime is dominated by importing tensorflow. I need to check that this scales to multiple files, travis, etc. I don't think that google-cloud-build would speed up pylint in particular because pylint turns out not to be very parallelizable. I'll open a separate issue to look into using Google Cloud Build After #603 it might be possible to close this issue, but I want to check a few things. It looks like travis tests aren't load balanced very well. If we look into it more and that's accurate, the pylint tests might be a big part of that. We might want to divide them up to different travis workers. Other than that I don't think this is low hanging fruit anymore.      I changed the title to be more clear because there are many things we might want to visualize.\r\n\r\nFor right now, there are a few things you can do as an end user:\r\n- It's possible to set up tensorboard support somehow ( @yaq007 ?)\r\n- You can write your own `evaluate` callback to write to a history object of your choice\r\n\r\nAt some point we might make one or both of these a standard library feature. That feature doesn't exist yet. If you'd like to add precision / recall metrics for detectors you're welcome to. So far we actually don't have any detector-based functionality that I know of though. I have implemented accuracy / coverage metrics for multiclass classifiers and will send a pull request soon. Some of this has been implemented by Ian in:\r\n\r\nhttps://github.com/tensorflow/cleverhans/tree/master/cleverhans/plot\r\nhttps://github.com/tensorflow/cleverhans/tree/master/scripts\r\n\r\nI'll close this because we are trying to keep CleverHans to core features needed to benchmark models rather than visualize learning curves.   Maybe I'm clashing with a culture of how to use loggers that I'm not aware. If so, let me know.\r\n\r\nMy thinking about this is based on what I as a user want to happen, and that might be different from a convention I don't know I'm meant to follow.\r\n\r\nAs a user, I want cleverhans to print out results by default. I don't want to have to to specifically ask to see the results. When I'm tuning a model, one of the most important results is how fast it runs, so I definitely want to see the epoch messages printed out.\r\n\r\nGiven that I want to see these messages by default, there's a question of how cleverhans should log them. Nothing has gone wrong, so they shouldn't be logged as \"warning\". This means they can be logged at most as \"info\". This means to satisfy my preferences as a user, the logger should show \"info\" messages by default.\r\n\r\nIf cleverhans code is going to log a lot of stuff the user doesn't want to see by default, that can be done with logging.debug.\r\n\r\nIn terms of conventions and matching the behavior of other software, the conventions I'm most familiar with are tensorflow / keras, which print quite a lot by default: https://github.com/tensorflow/tensorflow/issues/8340\r\nThis means most of my scripts start with a lot of boilerplate telling tensorflow to print less than it prints by default and then also telling cleverhans to print more than it does by default.  Can you just post a .py file as an attachment or link to a gist that we can just run to reproduce the problem?   Can you please post the exact code you're running? (You can attach a .py file to your comment, or you can link to a gist)  I confirm that just running \"python mnist_blackbox.py\" is sufficient to cause this bug.\r\nWhen we fix this bug, we should start by adding a test that fails, then edit the tutorial until the test passes.    I restarted the Travis jobs that failed to initialize    It's likely to be a bug in KerasModelWrapper. Have you tried running the keras Sequential model on one batch and checking that its output is the same as the output of KerasModelWrapper?\r\n\r\nIs there any chance that Keras has made its own session in the backend? CleverHans might be reading the values of the model's Variables out of one Session while Keras reads them out of another. What version of keras are you running? I'm using keras 2.2.2 and when I run your code I get an exception when trying to access `scores['loss']`. For me, `scores` is a list. Your `sess` is never passed to Keras. Also, you run `sess.run(init_op)` *after* you trained the model. This should randomize all the weights. Because the Keras model still gets a good score afterward, it must be using the weights from a different session. This means you're running Keras and CleverHans in different tf sessions, and you're giving CleverHans a session where the weights were randomly initialized rather than trained.\r\n\r\nTo fix it you should run `keras.backend.set_session(sess)` right after you create `sess`, like is done in `cleverhans_tutorials/mnist_tutorial_keras.py`.  make a test that crawls the library and finds model objects, and runs standard tests on them\r\n\r\nthe first test I propose is a test that all trainable Variables created by the model appear in the model's get_params.\r\n      See if this fixes the issue where the tutorial gets slightly slower each epoch  Note that we should not deprecate single-GPU eval nor should we update the tutorials to use multi-GPU in *all* cases. The larger graph for multi-GPU means that the first few runs of multi-GPU are slow, so it's only worth replacing use cases that have enough runs to justify the high startup cost.  Thanks!     I left the `dropout_dict` feature in so users can still change the dropout include_prob on each fprop if they need to (e.g. if it helps to answer a research question). Most users can ignore it and just use the `dropout` bool though. A pytorch test failed. It seems unlikely that this PR affects the pytorch tests, so I think it was just a flaky test. I restarted that worker. All tests pass, ready to re-review  @mehdijj are you using `generate` or `generate_np`? I think that, despite the bug, it should still have an effect when you use `generate`. (We should still fix the bug, I just want to make sure I understand what's going on)  It's common for users to install two versions of CleverHans and get confused when they run the tutorial from a new version and it fails to load new classes from the old version that takes precedence in their PYTHONPATH. We could cut down on this confusion a bit if we added a check from inside the CleverHans tutorials that the cleverhans module is in the same directory as the tutorial it is imported from.  You probably have two copies of CleverHans installed. One is in your PYTHONPATH and gets imported when you execute import statements from inside the Python interpreter. The other one is not in your PYTHONPATH or doesn't have top priority within your PYTHONPATH, is the newer version, and is the version you're running.  Using the mean value rather than a sum makes the loss invariant to batch size.\r\nInvariance to batch size is nice if we want to search over hyperparameters or if we want to do synchronous multi-GPU training, since the size of the batch received by a single GPU is inverse proportional to the number of GPUs. I realized we shouldn't merge this yet because I ought to update the tutorials to not get deprecation warnings everywhere. Will do so shortly This needed a rebase after we merged WeightDecay, so the review history might get confusing. I'm about to do a push -f OK, I fixed the tutorials so it is ready to review again.\r\n\r\nNote that I had to increase the *attack* learning rate to make the CW tutorial pass. That is a little bit strange; I would have expected that Adam is scale invariant enough that I would need to make no change, or that I would need to change the *training* learning rate.  I think the most likely explanation is that the trained model changed slightly, due to the different scale of the loss. Adam is partly but not completely invariant to rescaling of the loss. Under this hypothesis, the model as configured for the test ended up being just slightly more robust to adversarial examples (it was only one example that failed).\r\n\r\nI don't think there is a good way to keep the model completely unchanged. For example, we can't just scale up the learning rate by a factor of `batch_size` because Adam is already using the second moments of the gradient to compensate for that scaling factor.  I'm not very familiar with tf Eager, but is it really necessary to have totally parallel versions of every class to work with Eager?\r\n@david-berthelot @nottombrown Do you know if there's a cleaner way of supporting Eager?\r\n\r\nEven if it is, I don't think we need TFE in the name of every class. Just having the classes live in attacks_tfe should be enough.  model_loss currently issues a deprecation warning, but the deprecation warning doesn't specify when the function will be removed or what you should use instead  Can you tell us more about your setup? (Operating system, etc.?) Do you have no '/tmp' directory?\r\n\r\nMaybe we should use this instead: https://docs.python.org/3/library/tempfile.html#tempfile.TemporaryDirectory  hi @yenchenlin , will you be able to finish this PR?  @npapernot what's the status of this PR? I will finish this PR. Closing this so I can open another copy of it from my own fork    I don't know anything about it, I just copied it from elsewhere after being asked during review to add deprecation warnings.  It seems strange to have a hardcoded range from 0.0 to 1.0. For other attacks, we have `clip_min` and `clip_max` parameters, and it's also possible to leave the clipping turned off. Is there a reason we can't have this attack match the others?  I would vote to test it on a small subset of MNIST (e.g. one small minibatch).  Closed for lack of discussion. Happy to address the issue if you can report more detail on how to reproduce it.  Yes, I think that would be great to add.\n\nOn Fri, Aug 3, 2018 at 5:47 PM, Yen <notifications@github.com> wrote:\n\n> As shown by some recent papers [1, 2], simple transformations are\n> sufficient to fool neural network-based vision models. Notably, worst-of-10\n> attack described in [2] can serve as a good baseline for black-box attack.\n>\n> Do you think it's appropriate for cleverhans to include these\n> transformation-based attacks?\n>\n> Here\n> <https://github.com/yenchenlin/cleverhans/blob/transformation-attack/cleverhans_tutorials/mnist_tutorial_tran.ipynb>\n> is an ipython notebook demonstrating the effectiveness of these attack.\n> I've tested the model in mnist_tutorial_tf.py and find that:\n>\n>    - accuracy on legitimate examples: *0.9928*\n>    - accuracy on transformed examples: *0.5715*\n>\n> where the transformation consists of (i) 30-degree rotation and (ii) 10%\n> translation along each direction.\n>\n> [image: screen shot 2018-08-04 at 8 42 43 am]\n> <https://user-images.githubusercontent.com/7057863/43670761-6aa4af66-97c2-11e8-8720-ce4412ee1959.png>\n>\n> [1] A Rotation and a Translation Suffice: Fooling CNNs with Simple\n> Transformations, Engstrom et al.\n> [2] Spatially Transformed Adversarial Examples, Xiao et al.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/issues/490>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGrXR8SUCKJXPewg9cY_EJN8tVXh7ks5uNO85gaJpZM4VuxRl>\n> .\n>\n  Thanks!  Can you post an actual code snippet that fails?  Thanks!  Thanks!  Looks like an update to Cloud broke the build. I'm fixing it here: https://github.com/tensorflow/cleverhans/pull/482 The build is fixed now. I restarted the build for this PR. I think not, just trying to get the tests to pass  Looks like the Travis build doesn't specify a version for `google-cloud`. I think this project got updated with an API-breaking change recently. I'm trying to fix this here: https://github.com/tensorflow/cleverhans/pull/482 The build is fixed now. I restarted the build for this PR. @carlini can you review this one?  @nottombrown remember to review this (I haven't used pytorch so I'm not qualified)  Thanks. It looks like this matches what is done in tensorflow/tensorflow  Is this different from #472? Also the tests are failing  The PEP8 tests are failing Needs a rebase  Thanks! This looks good. Let's just put a specific date on the deprecation warning.   @david-berthelot can you check this?  This fails the PEP8 tests  Do you have a short script we could run that causes the problem?  Thanks! The pull request looks good. Can you please sign the CLA?  Yes, especially since this kind of code has frequently had bugs in the past, we shouldn't duplicate it.  Should re-run the tests after merging https://github.com/tensorflow/cleverhans/pull/465 Do you know how this compares to the tests we're already running in devtools/tests/test_format? Do we just need to change a flag in there? \"I see no problem with running multiple tests if they run efficiently and they discover different issues.\" : if we have a good understanding of what both tests are doing and decide that the right solution is to run both, then sure. What I want to do is make sure that we understand all the tests are doing and that we make conscious decisions based on knowledge of the design, rather than throwing more tests at the wall until one fails. If there's a bug in an existing feature, we should probably understand what the bug is rather than ignore it and paper over the bug with new features. Yes, you have documented what the new feature does, but an important part of the design process for the PR is to think through how that new behavior relates to the existing codebase.\r\n\r\nIt looks like the new tests are catching an instance of `F821`. Are we sure that it's intended behavior for the pre-existing tests to not catch `F821`? My concern is that maybe our existing tests are *intended* to catch undefined names but are not doing so because of a *bug in the tests themselves*. I'd like to have a clear understanding of the design rather than possibly building and maintaining two redundant features just because one feature has been accidentally disabled.  The fix in `SPSAAdam` has an assert checking that the input is the expected format, can you include something like that here? What goes wrong without the fix? Does it cause an exception to be raised, or does it cause silent computation of incorrect values? Would you mind adding a small test that would cause the exception to be triggered if the fix weren't there? This bug indicates that we don't have good enough test coverage. Awesome, thanks. Thanks!  For now I'll close this because Aashish could not reproduce. Feel-free to re-open if you have a short script we can just download and run to reproduce.  @david-berthelot could this be related to the recent changes to `Model`?  I wasn't able to reproduce this.\r\n\r\nI expect that you have two or more versions of CleverHans installed. You're running the tutorials in the new version but the import command loads the modules from an older version.\r\n\r\nTo check this idea, run\r\n\r\n    python -c \"import cleverhans; print cleverhans.__file__\r\n\r\nand see if the path is different from the path to the tutorial script you were running.\r\n\r\nFeel free to re-open the issue if this doesn't turn out to be what happened. I edited my previous comment so that the markdown processor doesn't remove the underscores. @johirbuet the command should work as displayed now You want\r\n\r\n    python -c \"import cleverhans; print cleverhans.__file__\r\n\r\nYou want `print` not `dir`\r\n\r\n Is that the path to the directory where you are running the tutorials? If not, then the problem is that you have two versions installed, and the old version is getting imported.  @npapernot or @nottombrown do you want to comment on this? I see you wrote the lines of setup.py involving TensorFlow. I don't know as much about how setup.py works or what the \"explicit dependence\" issue is, if we have a policy of requiring all option dependencies or if we can install different versions with different dependencies, etc.  Looks mostly good. There is one typo to fix, and we probably want the new tutorial to go in the `examples` directory. Otherwise fine. I don't actually remember why we have a special tutorial for CW or JSMA. Note that we don't have BIM or PGD tutorials. FGSM was just included as a tutorial because we want the tutorial to run fast (10s/epoch for adv training) so that people can run the tutorial at about the same speed they read it. @npapernot do you remember why we have specialized tutorials for CW and JSMA? In any case, I'd prefer not to have a proliferation of more tutorials. It's fine to put them in the `examples` directory where there's no obligation for the rest of the CleverHans team to provide ongoing support for them. What are the big differences between the tensorflow tutorial with FGSM and\nthe CW tutorial? Are the APIs still different for those attacks?\n\n\n\nOn Fri, Jul 13, 2018 at 3:47 AM, ysharma1126 <notifications@github.com>\nwrote:\n\n> Understood. Just to clarify the CW tutorial does both (1) and (2) cited\n> here, making it, at least with the current API, identical to the JSMA\n> tutorial. Given that the CW tutorial is in effect identical to the JSMA\n> tutorial, EAD is quite similar (can be reduced to CW with beta=0, and has\n> been empirically shown to improve attack strength with non-zero beta), and\n> at least I feel this EAD hyperparameter setting is important for users to\n> know as it allows EAD/CW to retain its attack strength while being as\n> computationally efficient as iterative FGSM, I would like to instead just\n> add EAD as a option in the CW tutorial.\n>\n> This will require no additional support/maintenance burden as there will be\n> no additional tutorial. Hope this at least is ok!\n>\n> On Fri, Jul 13, 2018 at 6:31 AM, Nicolas Papernot <\n> notifications@github.com>\n> wrote:\n>\n> > I would also vote against a proliferation of attack tutorials if they are\n> > using a consistent API\n> >\n> > \u2014\n> > You are receiving this because you authored the thread.\n> > Reply to this email directly, view it on GitHub\n> > <https://github.com/tensorflow/cleverhans/pull/\n> 451#issuecomment-404794552>,\n> > or mute the thread\n> > <https://github.com/notifications/unsubscribe-auth/AIk5_\n> 3NCC6MRTkli2XTbKpqmBei8EqYxks5uGHcSgaJpZM4VGQqi>\n> > .\n> >\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/451#issuecomment-404797736>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGh7jU4aqdPEjzroECtb-Jr_mqJSzks5uGHrFgaJpZM4VGQqi>\n> .\n>\n Do you mind starting a discussion on cleverhans-dev so more people will weigh in? OK, I'll close the PR for now then. Can re-open it if we make a plan for the new features later.  @npapernot , would you mind reviewing this, since you're the Jacobian Augmentation inventor?  Once the spelling error is fixed, this is OK to merge.\r\n It's OK to merge how this is, but for the future, I'd advise a different strategy.\r\n\r\nInstead of putting if statements in all of the code that uses tf functions whose API has changed, it would be better to make a compatibility module that keeps the if statements in one place.\r\n\r\nFor example, you could make a `cleverhans/compat.py` with code like:\r\n\r\n    def reduce_sum(input_tensor,\r\n                               axis=None,\r\n                               keepdims=None,\r\n                               name=None):\r\n      if LooseVersion(tf.__version__) < LooseVersion('1.8.0'):\r\n          warnings.warn(self.depr_warning)\r\n          return reduce_sum(input_tensor, axis, keep_dims=keepdims, name=Name)\r\n       return reduce_sum(input_tensor, axis, keepdims, name)\r\n\r\nThen code like\r\n\r\n     y = y / tf.reduce_sum(y, 1, keep_dims=True)\r\n\r\ncould be replaced easily with a single line like\r\n\r\n    y = y / reduce_sum(y, 1, keep_dims=True)\r\n\r\n(assuming you have called `from cleverhans.compat import reduce_sum` above). Currently you need to replace that single line with a 5 line if statement. Thanks. Is this ready to re-review? There was a merge conflict with another branch that I merged in the meantime. The conflicts look small, so I just used the web editor to fix them. I'll wait for the tests to re-run on my merge commit. Also, so clean and pretty! Thanks for the refactor  LGTM once the commented code / print statements are fixed Thanks!  Yes, I agree. I don't want to provide any ongoing support for more files using Keras.\r\n\r\n@aspratyush , please let us know whether you'd prefer to move this to `examples/` (where there is no obligation for ongoing support) or whether you'd prefer to close the PR.\r\n\r\nIn general, it's a good idea to write to cleverhans-dev@googlegroups.com before starting work on a feature to make sure it will be approved.  I made some comments about PEP8 but then while investigating while the tests passed, I found out PEP8 has changed and the PR respects the new version of PEP8. I deleted the comments related to PEP8. This LGTM once we resolve the back_prop=False issue  I think the result of the discussion on the mailing list was that we're OK with it, right @npapernot ?\r\nHowever, the PEP8 tests are currently failing, because some lines are too long now. Let's close this PR for now. After the ICLR deadline passes, let's do one mega-PR that changes all the whitespace. After that, let's redo the other changes proposed here.  +1 When we do this, we need to remember to respect the 6 month deprecation warning rule Do you have any suggestions for building this into the structure of the code (e.g. so you get the argument names via inheritance) or for making a tool that automatically flags probable violations?  If you use a gradient-based attack, the gradient does need to be defined. That's going to be true regardless of software framework.  Re deprecated code: generally we should not add deprecated code to the main repo. The idea of deprecated code is that 3rd party users can continue using it for a while, the library may not immediately *remove* uses of deprecated code, but the library shouldn't ever *add* uses of deprecated code. is this ready for re-review?  You're right that for a vector v, the infinity norm is abs(v).max().\r\n\r\nWhen we use the sign function, we are not computing the infinity norm. We are computing a vector that obeys a constraint on the infinity norm.\r\n\r\nSpecifically,\r\n\r\nmax_v dot(v, g) subject to max_norm(v) <= eps\r\n= eps * np.sign(g)\r\n\r\n\r\n  @nottombrown Do you know what happened?  LGTM modulo the things we asked to change Looks like it needs a rebase  I see you closed the issue, did you fix it?  The MLP model isn't part of the library itself; it's just part of the tutorials. It uses low-level APIs intentionally. The goal is to show how any TensorFlow code can be used with CleverHans without needing to use a specific high-level API for compatibility. It's intended to provide a contrast to the Keras tutorial.  I'm not sure if this just means your machine doesn't have enough memory to run the notebook, but that might be all that's going on. @nottombrown ? (feel free to re-open if this fix doesn't work)  Some of the tutorials show one way of visualizing the adversarial examples: https://github.com/tensorflow/cleverhans/blob/0670677010f3fed21b1ea91c4571c16fff661e0c/cleverhans_tutorials/mnist_tutorial_cw.py#L215  I propose:\r\n- Change the tests to do tensorflow 1.4 and 1.8\r\n- Change README.md. Currently it says:\r\n\r\n    Although CleverHans is likely to work on many other machine configurations, we currently test it with \r\n    Python {2.7, 3.5} and TensorFlow {1.0, 1.1} on Ubuntu 14.04.5 LTS (Trusty Tahr).\r\n\r\nI propose changing it to:\r\n\r\n    Although CleverHans is likely to work on many other machine configurations, we currently test it with \r\n    Python {2.7, 3.5} and TensorFlow {1.4, 1.8} on Ubuntu 14.04.5 LTS (Trusty Tahr). Support for TensorFlow 1.3 and earlier is deprecated. After 2018-11-1 we will not fix bugs reported for these versions and we will eliminate wrapper code needed for backwards compatibility with these versions.\r\n\r\n  A recent change to the TF API creates a deprecation warning because CleverHans uses the MNIST dataset loader that comes with `tf.learn`.\r\n\r\nThis implements the suggested switch to `sklearn` as the data loader.  (Partially?) addresses #397   Thanks!  LGTM, let's merge after the tests pass  Thanks for raising the issue, would you be able to put together a PR to address it?  Closes #392   It may be the case that you are trying to allocate a numpy array that is too big to fit in your available RAM? Here the JSMA is trying to create an array of size nb_features x nb_features where nb_features = 224 * 224 * 3. Perhaps this prior implementation of the attack might help you: https://github.com/tensorflow/cleverhans/blob/master/cleverhans/attacks_tf.py#L260 I'm not sure whether you are an academic but if yes you might be able to use Google Cloud or Amazon Web Services and get some free credit? I will close this issue for now, feel free to reopen it if there is a bug or feature improvement that we can update CleverHans for. Could you give more details on how to reproduce the issue? Yes, it may be the case that you do not have enough RAM to create the numpy array in memory. I always ran the code on machines with over 90GB RAMs so I may not have noticed that. How much memory do you have? I think the numpy array would have to be stored in RAM so GPU memory is likely irrelevant here (unless I missed something). (feel free to reopen if this is not the case)  I am tagging contributors for whom we don't have an affiliation. It would be very helpful if you respond to this issue with the information so we can included in the authorship of the next CleverHans report revision: \r\n\r\n@Shuolongbj --- what is your real name?\r\n\r\n@paulhendricks \r\n\r\n@zHiOoO \r\n\r\nThanks!  Thanks for flagging the issue. If you're able to put together a PR, feel free to assign me as a reviewer. I've added a `get_params` method to `Model` and a `var_list` argument to `model_train` that could be use to fix this issue. Those features are in this open PR: https://github.com/tensorflow/cleverhans/pull/398     It's OK to wait to merge this until after the release. Just pushed it while cleaning up my personal work. The travis build failed due to a connection timeout during a download, probably the MNIST download.\r\nI also suspect this pull request hasn't picked up the new pip command in .travis.yml. I'm going to close and reopen the pull request to pick it up.  We currently get several deprecation warnings when running tensorflow 1.8. We should update to the point that we get no tf deprecation warnings when running the tutorials and tests. We should also add tf 1.8 to the travis bot.  There are several ways you go about this, the easiest way would be to split your test data and then run the attack in parallel on the different data splits. \r\n\r\nIf you have a more detailed description of your issue, feel free to reopen at any time.  The tests failed due to PEP8 formatting issues. You can probably fix this by running `autopep8 -i <filename>` on the files that have errors. You can also run `nosetests --nologcapture cleverhans/devtools/tests/test_format.py` to run just the PEP8 tests before you push. autopep8 doesn't fix everything so you may need to do some manual cleanup.\r\n\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks_tf.py:17:9: E225 missing whitespace around operator\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks_tf.py:18:9: E225 missing whitespace around operator\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks_tf.py:20:1: E302 expected 2 blank lines, found 1\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks_tf.py:23:1: E302 expected 2 blank lines, found 1\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks_tf.py:27:1: E302 expected 2 blank lines, found 1\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks_tf.py:707:1: W293 blank line contains whitespace\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks_tf.py:970:56: E127 continuation line over-indented for visual indent\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks_tf.py:1058:80: E501 line too long (80 > 79 characters)\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks_tf.py:1060:80: E501 line too long (80 > 79 characters)\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks_tf.py:1641:80: E501 line too long (90 > 79 characters)\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks_tf.py:1718:80: E501 line too long (90 > 79 characters)\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:31:26: E225 missing whitespace around operator\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:34:1: W293 blank line contains whitespace\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:35:22: E225 missing whitespace around operator\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:36:1: W293 blank line contains whitespace\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:38:28: E225 missing whitespace around operator\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:39:28: E225 missing whitespace around operator\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:40:1: W293 blank line contains whitespace\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:489:80: E501 line too long (82 > 79 characters)\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:710:80: E501 line too long (80 > 79 characters)\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:771:80: E501 line too long (83 > 79 characters)\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:839:1: W293 blank line contains whitespace\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:896:1: W293 blank line contains whitespace\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:903:1: W293 blank line contains whitespace\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:1355:1: W293 blank line contains whitespace\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:1382:1: W293 blank line contains whitespace\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:1384:80: E501 line too long (90 > 79 characters)\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:1388:1: W293 blank line contains whitespace\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:1415:80: E501 line too long (81 > 79 characters)\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:1528:80: E501 line too long (81 > 79 characters)\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:1530:1: W293 blank line contains whitespace\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:1533:1: W293 blank line contains whitespace @ricvo are you able to solve the PEP8 issues on your fork?  Thanks for the PR, there is a minor tweak missing but should be good once that is fixed  Good catch, do you mind making a pull request? That makes sense. We would have to modify the function`pair_visual` to `numpy.squeeze` the image into a 2D numpy arrays when `channels==1`.\r\n\r\nAre you able to make a PR for this?  I think this is because we use `pip install keras` with no version specification on Travis. A new release of Keras came out a few days ago and it looks like the new release isn't compatible with the older versions of TensorFlow that we use on Travis. This PR should fix it: https://github.com/tensorflow/cleverhans/pull/399 It looks like re-running travis didn't cause travis to pick up the latest merged commits with the fix. I tried closing the pull request and re-opening it to see if that picks up a new version of the master branch. If that still fails, you could try pushing a dummy commit, opening a new pull request, or doing a rebase.  Thanks for the PR, would you be able to add deprecation warning given that you are changing the API? Unless the new parameters have default values that correspond exactly to the previous behavior. Thanks for confirming. Given that you're an author, I trust that it implements correctly the corresponding paper.  Yes, any PR is very welcome. Taking into account the instructions you can find in the main README, you should feel free to create a PR that addresses any issue open in this tracker. Thanks for your help\r\n\r\n@feedforward do you have any WIP for this issue or should @vikramnitin9 start from scratch? @vikramnitin9 any update on this? Thanks!  The tests failed:\r\n\r\nERROR: If clipping is not done at each iteration (not passing clip_min and\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/travis/build/tensorflow/cleverhans/tests_tf/test_attacks.py\", line 264, in test_attack_strength\r\n    orig_labs = np.argmax(self.sess.run(self.model(x_val)), axis=1)\r\n  File \"/home/travis/build/tensorflow/cleverhans/cleverhans/model.py\", line 24, in __call__\r\n    return self.get_probs(*args, **kwargs)\r\n  File \"/home/travis/build/tensorflow/cleverhans/cleverhans/model.py\", line 63, in get_probs\r\n    return tf.nn.softmax(self.get_logits(x))\r\n  File \"/home/travis/build/tensorflow/cleverhans/tests_tf/test_attacks.py\", line 32, in get_logits\r\n    W1 = tf.constant([[1.5, .3], [-2, 0.3]], dtype=x.dtype)\r\n  File \"/home/travis/miniconda/envs/test-environment/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.py\", line 102, in constant\r\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))\r\n  File \"/home/travis/miniconda/envs/test-environment/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py\", line 350, in make_tensor_proto\r\n    dtypes.quint16, dtypes.qint32])\r\nTypeError: data type not understood\r\n\r\ndo you think the build is broken or could this have happened due to this PR?  Thanks for posting the result. I would be in favor of being more strict with the `cleverhans/` and `cleverhans_tutorials` folders than the `examples/` folder (and only have the linter on the first two folders). Note that right now we are already whitelisting the NIPS competition code from the pep8 checker that is running on all folders (main library in `cleverhans/`, tutorials in `cleverhans_tutorials/` and examples in `examples/` 1. thanks for the PR\r\n2. I think it's fine to use the keywords, I checked TF and it also uses keywords rather than the structure we currently follow.\r\n3. I would prefer to add an exception to the test not to check the main function because these are always empty and just calling the tutorial function (unless it's more complicated to add an exception than adding a simple docstring to the main function)  LGTM I took a look at the changes again and they still look good, thanks for taking care of this  Good catch, this does not seem to affect the code given that input and output shape variables are not used in the ReLU that follows the Conv2D layer. Would you mind looking through the file and making a PR? Closed by #360   In addition to the attack Ian is referring to, you can also use the JSMA (https://github.com/tensorflow/cleverhans/blob/master/cleverhans/attacks.py#L624) to generate adversarial examples if your input data is made up of numeric integers. You will have to set the step size accordingly however.  I don't use generate_np much so I don't have a strong opinion either way, but transitioning to eager mode would be a good compromise for the use cases I can think of  Do you have a minimum working code example?\r\n\r\nA common cause of this problem is passing probabilities where the attack expects logits. Functions used to compute probabilities, such as the softmax and sigmoid function, often have strong saturation.\r\n\r\nIt is also possible in theory for the cross-entropy function itself to saturate and maybe that's what you've encountered, but I haven't observed that being a problem in practice yet.  Regarding point 2, you would have to provide a model object from `cleverhans.model.Model` if you are going to call `generate` from the `FastGradientMethod`.\r\n\r\nIf you'd like to use the graph you already created, it is not recommended, but you can use the function that is called in the backend by `FastGradientMethod`, it is here: https://github.com/tensorflow/cleverhans/blob/master/cleverhans/attacks_tf.py#L23 I am closing this for now, feel free to reopen if #395 did not completely address your issue.  Wrap your InceptionModel class in a cleverhans.model.Model class. Check out the CleverHans tutorials for examples. We'd need to see your code and a traceback to be able to help with that Can we also see the stack trace? Do you know why your trace isn't going inside FastGradientMethod and isn't including line numbers within the file?  I'm closing this for now as this is not an issue, but feel free to email `cleverhans-dev@googlegroups.com` if you're looking to put together a notebook. Thanks!  it's probably better for examples/RL-attack to be renamed to be lower case, examples/rl-attack, in order to match the rl-attack library. Otherwise I need to remember when to type which case when I tried running \"pip install -e .\" in rl-attack, I got this error message:\r\n\r\nCollecting mujoco_py>=1.50 (from gym[atari,classic_control,mujoco]->rlattack==0.1.9)\r\n  Downloading mujoco-py-1.50.1.34.tar.gz (115kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 122kB 5.6MB/s \r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-build-IDpnGa/mujoco-py/setup.py\", line 2, in <module>\r\n        import importlib.util\r\n    ImportError: No module named util\r\n    \r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-IDpnGa/mujoco-py/\r\n/usr/local/lib/python2.7/dist-packages/pip/_vendor/requests/packages/urllib3/util/ssl_.py:122: InsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. You can upgrade to a newer version of Python to solve this. For more information, see https://urllib3.readthedocs.io/en/latest/security.html#insecureplatformwarning.\r\n  InsecurePlatformWarning\r\n Any suggestions for how to deal with the error message?     python3 -m pip install -e .\r\n\r\ngives similar error message:\r\n\r\nCollecting mujoco_py>=1.50 (from gym[atari,classic_control,mujoco]->rlattack==0.1.9)\r\n  Using cached mujoco-py-1.50.1.34.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Package libffi was not found in the pkg-config search path.\r\n    Perhaps you should add the directory containing `libffi.pc'\r\n    to the PKG_CONFIG_PATH environment variable\r\n    No package 'libffi' found\r\n    Package libffi was not found in the pkg-config search path.\r\n    Perhaps you should add the directory containing `libffi.pc'\r\n    to the PKG_CONFIG_PATH environment variable\r\n    No package 'libffi' found\r\n    Package libffi was not found in the pkg-config search path.\r\n    Perhaps you should add the directory containing `libffi.pc'\r\n    to the PKG_CONFIG_PATH environment variable\r\n    No package 'libffi' found\r\n    Package libffi was not found in the pkg-config search path.\r\n    Perhaps you should add the directory containing `libffi.pc'\r\n    to the PKG_CONFIG_PATH environment variable\r\n    No package 'libffi' found\r\n    Package libffi was not found in the pkg-config search path.\r\n    Perhaps you should add the directory containing `libffi.pc'\r\n    to the PKG_CONFIG_PATH environment variable\r\n    No package 'libffi' found\r\n    c/_cffi_backend.c:15:17: fatal error: ffi.h: No such file or directory\r\n     #include <ffi.h>\r\n                     ^\r\n    compilation terminated.\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3.5/distutils/unixccompiler.py\", line 118, in _compile\r\n        extra_postargs)\r\n      File \"/usr/lib/python3.5/distutils/ccompiler.py\", line 909, in spawn\r\n        spawn(cmd, dry_run=self.dry_run)\r\n      File \"/usr/lib/python3.5/distutils/spawn.py\", line 36, in spawn\r\n        _spawn_posix(cmd, search_path, dry_run=dry_run)\r\n      File \"/usr/lib/python3.5/distutils/spawn.py\", line 159, in _spawn_posix\r\n        % (cmd, exit_status))\r\n    distutils.errors.DistutilsExecError: command 'x86_64-linux-gnu-gcc' failed with exit status 1\r\n    \r\n    During handling of the above exception, another exception occurred:\r\n    \r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3.5/distutils/core.py\", line 148, in setup\r\n        dist.run_commands()\r\n      File \"/usr/lib/python3.5/distutils/dist.py\", line 955, in run_commands\r\n        self.run_command(cmd)\r\n      File \"/usr/lib/python3.5/distutils/dist.py\", line 974, in run_command\r\n        cmd_obj.run()\r\n      File \"/usr/lib/python3/dist-packages/setuptools/command/bdist_egg.py\", line 161, in run\r\n        cmd = self.call_command('install_lib', warn_dir=0)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/command/bdist_egg.py\", line 147, in call_command\r\n        self.run_command(cmdname)\r\n      File \"/usr/lib/python3.5/distutils/cmd.py\", line 313, in run_command\r\n        self.distribution.run_command(command)\r\n      File \"/usr/lib/python3.5/distutils/dist.py\", line 974, in run_command\r\n        cmd_obj.run()\r\n      File \"/usr/lib/python3/dist-packages/setuptools/command/install_lib.py\", line 24, in run\r\n        self.build()\r\n      File \"/usr/lib/python3.5/distutils/command/install_lib.py\", line 109, in build\r\n        self.run_command('build_ext')\r\n      File \"/usr/lib/python3.5/distutils/cmd.py\", line 313, in run_command\r\n        self.distribution.run_command(command)\r\n      File \"/usr/lib/python3.5/distutils/dist.py\", line 974, in run_command\r\n        cmd_obj.run()\r\n      File \"/usr/lib/python3/dist-packages/setuptools/command/build_ext.py\", line 75, in run\r\n        _build_ext.run(self)\r\n      File \"/usr/lib/python3.5/distutils/command/build_ext.py\", line 339, in run\r\n        self.build_extensions()\r\n      File \"/usr/lib/python3.5/distutils/command/build_ext.py\", line 448, in build_extensions\r\n        self._build_extensions_serial()\r\n      File \"/usr/lib/python3.5/distutils/command/build_ext.py\", line 473, in _build_extensions_serial\r\n        self.build_extension(ext)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/command/build_ext.py\", line 196, in build_extension\r\n        _build_ext.build_extension(self, ext)\r\n      File \"/usr/lib/python3.5/distutils/command/build_ext.py\", line 533, in build_extension\r\n        depends=ext.depends)\r\n      File \"/usr/lib/python3.5/distutils/ccompiler.py\", line 574, in compile\r\n        self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts)\r\n      File \"/usr/lib/python3.5/distutils/unixccompiler.py\", line 120, in _compile\r\n        raise CompileError(msg)\r\n    distutils.errors.CompileError: command 'x86_64-linux-gnu-gcc' failed with exit status 1\r\n    \r\n    During handling of the above exception, another exception occurred:\r\n    \r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 158, in save_modules\r\n        yield saved\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 199, in setup_context\r\n        yield\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 254, in run_setup\r\n        _execfile(setup_script, ns)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 48, in _execfile\r\n        exec(code, globals, locals)\r\n      File \"/tmp/easy_install-l8xk04be/cffi-1.11.4/setup.py\", line 236, in <module>\r\n      File \"/usr/lib/python3.5/distutils/core.py\", line 163, in setup\r\n        raise SystemExit(\"error: \" + str(msg))\r\n    SystemExit: error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\r\n    \r\n    During handling of the above exception, another exception occurred:\r\n    \r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/setuptools/command/easy_install.py\", line 1130, in run_setup\r\n        run_setup(setup_script, args)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 257, in run_setup\r\n        raise\r\n      File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\r\n        self.gen.throw(type, value, traceback)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 199, in setup_context\r\n        yield\r\n      File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\r\n        self.gen.throw(type, value, traceback)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 170, in save_modules\r\n        saved_exc.resume()\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 145, in resume\r\n        six.reraise(type, exc, self._tb)\r\n      File \"/usr/lib/python3/dist-packages/pkg_resources/_vendor/six.py\", line 685, in reraise\r\n        raise value.with_traceback(tb)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 158, in save_modules\r\n        yield saved\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 199, in setup_context\r\n        yield\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 254, in run_setup\r\n        _execfile(setup_script, ns)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 48, in _execfile\r\n        exec(code, globals, locals)\r\n      File \"/tmp/easy_install-l8xk04be/cffi-1.11.4/setup.py\", line 236, in <module>\r\n      File \"/usr/lib/python3.5/distutils/core.py\", line 163, in setup\r\n        raise SystemExit(\"error: \" + str(msg))\r\n    SystemExit: error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\r\n    \r\n    During handling of the above exception, another exception occurred:\r\n    \r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-build-wbtwaota/mujoco-py/setup.py\", line 52, in <module>\r\n        cmdclass={'build': Build},\r\n      File \"/usr/lib/python3.5/distutils/core.py\", line 108, in setup\r\n        _setup_distribution = dist = klass(attrs)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/dist.py\", line 320, in __init__\r\n        self.fetch_build_eggs(attrs['setup_requires'])\r\n      File \"/usr/lib/python3/dist-packages/setuptools/dist.py\", line 377, in fetch_build_eggs\r\n        replace_conflicting=True,\r\n      File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 852, in resolve\r\n        dist = best[req.key] = env.best_match(req, ws, installer)\r\n      File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 1124, in best_match\r\n        return self.obtain(req, installer)\r\n      File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 1136, in obtain\r\n        return installer(requirement)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/dist.py\", line 445, in fetch_build_egg\r\n        return cmd.easy_install(req)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/command/easy_install.py\", line 698, in easy_install\r\n        return self.install_item(spec, dist.location, tmpdir, deps)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/command/easy_install.py\", line 724, in install_item\r\n        dists = self.install_eggs(spec, download, tmpdir)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/command/easy_install.py\", line 905, in install_eggs\r\n        return self.build_and_install(setup_script, setup_base)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/command/easy_install.py\", line 1144, in build_and_install\r\n        self.run_setup(setup_script, setup_base, args)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/command/easy_install.py\", line 1132, in run_setup\r\n        raise DistutilsError(\"Setup script exited with %s\" % (v.args[0],))\r\n    distutils.errors.DistutilsError: Setup script exited with error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\r\n    \r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-wbtwaota/mujoco-py/\r\n I'm using gLinux, so it's probably pretty hard for you to support from outside Google.\r\nJust reading the code, this looks OK, so I'm going to go ahead and merge even though I haven't been able to install the dependencies.    @catherio can you review?  Did the version of Keras change recently?\r\n@royaurko any comment?  I've never reviewed a PR adding a submodule before. In the github interface, it just looks like the addition of an empty file. Do you know how I can see how the submodule is configured? Thansk for the warning, @catherio . Based on that medium post, I think it would be better to have an example in the examples directory that imports the rlattack as a package. The README for the example can give the user instructions for how to download and install rlattack. I'll close this version of the PR but you're welcome to reopen a version that doesn't use a submodule   You can also log in to travis to restart individual build jobs. Close and reopen works too if all of them failed spuriously.  @huntergregal I'm assuming @cihangxie 's fix works for you. If not feel free to reopen the issue   We can ignore googlebot since we all know Nicolas has signed the CLA before. I guess this is some glitch related to Nicolas's internship ending (being removed from the tensorflow organization on github maybe?)\r\n\r\n  @AlexeyKurakin ?  Thanks for the PR! Can you add tests for the attack? You can find an example here: https://github.com/tensorflow/cleverhans/blob/master/tests_tf/test_attacks.py#L115 Thanks for adding the test, I just realized that it might make sense to take into account a recent PR by @goodfeli (#328) to prevent numerical instabilities. If you can take a look and make the edits, the rest is LGTM and ready to merge.  Thank you!  Thanks David, LGTM Did you get a chance to test the `atol` values on both GPU and CPU thoroughly after we spoke?  I asked @carlini on hangouts and he says noisy_grads=False successfully reduced the accuracy to 20% Usually I say \"we don't need a tutorial for every new attack / defense, or we'll end up with too many tutorials\" but in this case, the extra preprocessing of the input might mean it makes sense to include a tutorial or example showing how the discretization / undiscretization functions should be used in the context of training / attacking a model. Any updates on this PR? Sorry, I've consistently been swamped, and keep thinking that's almost over but then it isn't. Is there any chance Jacob or Colin (other thermometer coding co-authors) could review it? I think let's just close this PR for now. We can re-open it later if we decide to use thermometer / one-hot coding again.  Thanks for the PR, but I don't see any files checked-in? The only two files that appear on the PR are `.DS_store` files.  Thanks for the pull request, in the future it would be best to discuss this on the cleverhans-dev@ mailing list to avoid duplicate PRs. I do appreciate you sharing your work however.\r\n\r\nLet us see if it makes sense to keep #275 given that this PR has been open. @gongzhitaao are you planning to complete your PR soon, or should we close it and all work towards this current PR being merged (#319)? Thanks for taking the time to look at this PR @gongzhitaao , I will close #275 for now. Hope that you are able to build on / contribute to this PR with your implementation ideas. Thanks, this is almost ready to merge! just two things would be nice to take care of:\r\n\r\n* solve the conflict that the branch has w/ the master branch\r\n* change the JSMA tutorial in `cleverhans_tutorials` to use the symbolic implementation by default (this will also make sure that the behavior is consistent with the previous implementation)\r\n\r\nThanks again Thanks, I'll try a few things on my machine and then merge  Thanks Alex, feel free to reopen the issue @rittikaadhikari if that did not solve it for you.  Yes, it would be great to have a PR to address these issues, you may want to send a quick email describing the changes you'll make to `cleverhans-dev@googlegroups.com`, I just accepted your membership request  @malcolmregan did you get a chance to take a look again?  The reason is that some tests were previously failing for one of the two TF\nversions we're testing. These tests are not ideal to begin with, but before\nwe solve the reproducibility issue #253, it's going to remain a problem.\n\nOn Fri, Nov 3, 2017, 7:45 PM Fartash Faghri <notifications@github.com>\nwrote:\n\n> @npapernot <https://github.com/npapernot>, thanks for the merge. Is there\n> a reason for having different atol_fac for different TF versions? Is there\n> a difference in the underlying seeding mechanism? The change was introduced\n> in 7ab2a7f\n> <https://github.com/tensorflow/cleverhans/commit/7ab2a7fa4a07f3a52a49e5197b347ba78c7cb8ed>.\n> I have a commit that fails the test for TF<1.1.0.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n>\n>\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/308#issuecomment-341866452>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIbS9uUUWfcQcmAA2ZHF5JOFa0wFwDWcks5sy8-wgaJpZM4QRs6O>\n> .\n>\n Ah that is possible, I will try to spend some time on this Friday afternoon. This has been a problem for a long time and at this point we cannot rely on these tests for what it's worth. In the meanwhile, feel free to adjust the atol_fac if needed, I trust your judgment.  It seems you have commented out a line that wraps the Keras model into a CleverHans model. Let us know if this is the source of the problem.\r\n\r\n```\r\nmodel_wrap = KerasModelWrapper(model)\r\n```  This might require making some changes to the library to support this new mode. Nothing in mind but I will post resources here if I find any. Yes @yenchenlin this is what we are looking for, but if you could adapt the code to use existing CleverHans library functions, that would be better. It might make sense to start a thread on the cleverhans-dev mailing list to make sure that design choices are made collectively if you need to make modifications to the APIs of the CleverHans library. Thank you so much! No progress. I don't think anyone's working on it. It's something I'd consider doing myself but haven't found time yet. Thanks! It's probably best to adapt just one of the tutorials though. We don't want to commit to maintaining a lot of duplicated tutorial code. Regarding 1., from experience it has been best to avoid Keras (and we now have managed to isolate most the code related to Keras from the core CleverHans code) so I would be in favor of providing a subclass of `cleverhans.model.Model` for `tf.eager` models.\r\n\r\nRegarding 2., if it is too complicated to reuse existing attack classes such as the one here https://github.com/tensorflow/cleverhans/blob/master/cleverhans/attacks.py#L229 then I think it would make sense to start a new thread in the `cleverhans-dev` mailing list to discuss what is the best way to proceed and adapt our API to be compatible with the eager paradigm.  Let's loosen the test then. The tutorials do need better seeding but unfortunately all of our efforts at making the results fully deterministic have been unsuccessful so far. Thanks Fartash!  Thanks for the PR! \r\n\r\nIt's best to discuss the question (regarding the new feature) on the CleverHans mailing list `cleverhans-dev@googlegroups.com`, which you can ask to join.\r\n\r\nThanks!  Did you make progress on this? It might make sense to use `batch_eval` or adapt the logic that it implements: https://github.com/tensorflow/cleverhans/blob/master/cleverhans/utils_tf.py#L286 @ysharma1126 can you implement the fix?\r\n  LGTM, thanks for catching that  I restarted it but the tests are still failing (it appears one test is not found) @jmgilmer @carlini - Looks like this has been sitting for a month or so, any updates?  LGTM  LGTM  Add mkl service to conda  Thank you Angus!  Yes, we are looking into it. The CLA googlebot looks good now, thank you! I'll ping you once we figure out the bug with Theano tests Thank you for the PR, the tests are now fixed. We've had a lot of PRs to review lately so it might take a bit of time before someone gets to this but we will as soon as possible. Hi Yash,\r\n\r\nYou can take a look at some of the tests implemented for other attacks such as this one: https://github.com/tensorflow/cleverhans/blob/master/tests_tf/test_attacks.py#L112 I loosened up the other test as well because it was still failing on some of Travis builds. OK to ignore the CLA error, it happened after I used the web interface on GitHub to edit the code.  Unfortunately, I think you need to amend your commits in order to fix the email address. This should explain how: https://www.google.com/search?q=git+change+commit+email  For some reason, Travis fails to setup the Theano vm. It errored while trying to install numpy.  Thank you for the pull request! The reason the CLA bot is failing seems to be that you haven't signed your commits with the email address used to sign the CLA.  @fartashf are you able to take a look at this PR in the next couple of days?  remove FLAGS from `utils_tf.py` Yes, we could deprecate the logic of this if statement https://github.com/tensorflow/cleverhans/blob/master/cleverhans/utils_tf.py#L276 and require that the `file_path` argument be supplied. @npapernot Is this issue resolved now that #303 has been merged? I don't think this is resolved completely, I believe Aurko is working on it though.  Did you check that you are giving a valid session to the Attacks class?  ```\r\n======================================================================\r\nFAIL: Test if pep8 is respected.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/travis/miniconda/envs/test-environment/lib/python3.5/site-packages/nose-1.3.7-py3.5.egg/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/home/travis/build/tensorflow/cleverhans/cleverhans/devtools/tests/test_format.py\", line 45, in test_format_pep8\r\n    raise AssertionError(\"PEP8 Format not respected\")\r\nAssertionError: PEP8 Format not respected\r\n-------------------- >> begin captured stdout << ---------------------\r\n/home/travis/build/tensorflow/cleverhans/examples/multigpu_advtrain/trainer.py:21:1: W391 blank line at end of file\r\n/home/travis/build/tensorflow/cleverhans/examples/multigpu_advtrain/trainer_sgpu.py:67:45: E128 continuation line under-indented for visual indent\r\n/home/travis/build/tensorflow/cleverhans/examples/multigpu_advtrain/trainer_sgpu.py:71:45: E128 continuation line under-indented for visual indent\r\n/home/travis/build/tensorflow/cleverhans/examples/multigpu_advtrain/manager.py:238:5: E301 expected 1 blank line, found 0\r\n/home/travis/build/tensorflow/cleverhans/examples/multigpu_advtrain/manager.py:271:1: W391 blank line at end of file\r\n--------------------- >> end captured stdout << ----------------------\r\n``` @goodfeli - wanted to bring this to your attention that @fartashf is ready for a re-review on this.  Welcome!\n\nOn Fri, Jan 12, 2018 at 2:54 PM, Fartash Faghri <notifications@github.com>\nwrote:\n\n> Thanks for the merge.\n>\n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/278#issuecomment-357376823>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGlRlQdefwtozEmGpRT-Uz-b2hbpPks5tJ-KUgaJpZM4PklaA>\n> .\n>\n  It might make sense to move the method `clip_eta(self, eta)` defined in the Madry et al. class to the abstract Attack class since most attacks need this clipping step at some point.  @fartashf is working on this.  Thank you for the PR! The tests are failing because of the PEP8 checker. Here is a dump of the test log:\r\n\r\n```\r\n======================================================================\r\nFAIL: Test if pep8 is respected.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/travis/miniconda/envs/test-environment/lib/python2.7/site-packages/nose-1.3.7-py2.7.egg/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/home/travis/build/tensorflow/cleverhans/cleverhans/devtools/tests/test_format.py\", line 45, in test_format_pep8\r\n    raise AssertionError(\"PEP8 Format not respected\")\r\nAssertionError: PEP8 Format not respected\r\n-------------------- >> begin captured stdout << ---------------------\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks_tf.py:361:14: E127 continuation line over-indented for visual indent\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:883:80: E501 line too long (81 > 79 characters)\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:887:80: E501 line too long (82 > 79 characters)\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:890:80: E501 line too long (81 > 79 characters)\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:891:80: E501 line too long (82 > 79 characters)\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:895:80: E501 line too long (81 > 79 characters)\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:897:80: E501 line too long (81 > 79 characters)\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:903:80: E501 line too long (80 > 79 characters)\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:907:80: E501 line too long (80 > 79 characters)\r\n--------------------- >> end captured stdout << ----------------------\r\n``` Thanks again for putting together this PR.\r\n\r\nCould you elaborate on why 1. is needed?\r\n\r\nRegarding 2., if we are going to change this, we should at least be backward compatible (it should require fairly low overhead) and then show a deprecation warning. \r\n\r\nArgument 3. could perhaps be improved: why not specify a number of pixels perturbed per iteration instead? If you have spare time, could you compare the success rate + average perturbation of the non-symbolic and symbolic implementations on MNIST for instance so we have an idea of any changes in performances? 1. The main reason why I would be in favor of gamma, is that people who read the paper might be confused if there is a different parameter in the implementation on CleverHans.\r\n2. Thanks!\r\n3. Agreed, it might still make sense to have the general version but indeed the optimized ones are welcomed.\r\n4. Unfortunately, we cannot merge this if we don't have any guarantees of how well it performs in comparison with the non-symbolic implementation because users will start benchmarking with the implementation that was merged. @gongzhitaao Did you get a chance to address the comments? @gongzhitaao Any updates? No rush, just want to make sure this is still on your radar, and check in about whether there's anything we can help with. Ok, no worries!  Thanks for the PR @fartashf and for reviewing @AlexeyKurakin   Thanks Aurko, unfortunately it seems like a few PEP8 errors are left Aurko, you may have to amend this last commit with your @google.com email address because the CLA bot detected you as not having signed the CLA. ```\r\n======================================================================\r\nERROR: test_get_logits_over_interval (test_utils.TestUtils)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/travis/build/tensorflow/cleverhans/tests_tf/test_utils.py\", line 99, in test_get_logits_over_interval\r\n    num_points=num_points)\r\n  File \"/home/travis/build/tensorflow/cleverhans/cleverhans/utils.py\", line 267, in get_logits_over_interval\r\n    adv_x_epsilon = x + eta * epsilon_array_t\r\n  File \"/home/travis/miniconda/envs/test-environment/lib/python3.5/site-packages/tensorflow/python/ops/math_ops.py\", line 820, in binary_op_wrapper\r\n    y = ops.convert_to_tensor(y, dtype=x.dtype.base_dtype, name=\"y\")\r\n  File \"/home/travis/miniconda/envs/test-environment/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 639, in convert_to_tensor\r\n    as_ref=False)\r\n  File \"/home/travis/miniconda/envs/test-environment/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 704, in internal_convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/home/travis/miniconda/envs/test-environment/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 577, in _TensorTensorConversionFunction\r\n    % (dtype.name, t.dtype.name, str(t)))\r\nValueError: Tensor conversion requested dtype float32 for Tensor with dtype float64: 'Tensor(\"Reshape_400:0\", shape=(21, 28, 28, 1), dtype=float64)'\r\n----------------------------------------------------------------------\r\n```   Closed by 1ddf7ccf952d0048807b988644068d60cf9fd55e  It appears the tests need to be loosened up even more.  Thanks for the PR, it looks mostly good. I would suggest one change though: right now when the attack is untargeted, the code is using the grid visualization. It would most likely make more sense to just display them with the `pair_visual` function from https://github.com/tensorflow/cleverhans/blob/master/cleverhans/utils.py#L150. Otherwise, I fear the grid may mislead users into thinking that the attack was targeted. I see your point. That makes sense. Could you share a screenshot of the whole matplotlib window to double check how it renders? Perfect, thanks for sending this out.   Based on the Kaggle discussion, it seems that the error is due to converting the images back from floats to uint8 after having ran the attack; rather than during the attack itself (which is computed on floating point values). Correct me if I'm wrong.  Closes #242  LGTM Tests are failing again because of the seeding issue, looking into it  Closes #247  I changed it to use the default session instead when no session are given.\r\n\r\nDo we want to include a warning when falling back to the default session? I have a warning now but don't have a strong opinion against removing it.  The CLA bot cleared this new PR so we are all good on this side. Let me take a look at the code again.  Just for the record, I agree with Ian's comment above: we should limit the number of tutorials. They don't bring much value now that the Attacks interface standardized the API across different algorithms.  I assume this is related to the NIPS competition?  I restarted the test that failed because of a network error  Our tutorial tests still show significant differences when run multiple times. See the comments on this PR for some examples: https://github.com/tensorflow/cleverhans/pull/249\r\n\r\nWe should figure out which part of the tutorials is not seeded correctly, seed it, and add a test that running the tutorial twice gives nearly the same result. I did some work toward this but didn't complete it, in this PR: https://github.com/tensorflow/cleverhans/pull/255\r\n\r\nThe PR adds the necessary tests, but with loose tolerance. This will hopefully make sure we at least don't add more non-deterministic ops, but I haven't found the cause of the current non-determinism yet. @goodfeli Can you clarify what work still has to be done now that #308 has been merged? David would be the person to talk to about this :) My understanding is that there is little chance we will get this solved without making changes to tensorflow This would be @david-berthelot :)\r\n\r\nDavid can confirm, but that's exactly what he found out too I believe  - I mostly marked some English stuff. OK to merge after fixing\r\n- If you want to, it might be useful to warn people if their attack does not respect `epsilon`. This is not strictly necessary since their submission will still run and get a score even if they don't respect `epsilon`.  It should be possible to train the model on FGSM examples (that's what our tutorial does) so there is presumably a bug in your code. You could try to synchronize it with our Keras tutorial to find where your code deviates from ours.  Thanks for reporting these numbers. In order to have a fair comparison, we would have to run `tests_tf/test_mnist_tutorials_tf.py` (it runs on a subset of the training / eval data---because of the slow performance on Travis). Pasting a few runs with the current version \r\n[INFO 2017-08-30 11:44:07,034 cleverhans] Epoch 0 took 1.00625705719 seconds\r\nTest accuracy on legitimate examples: 0.9369\r\n[INFO 2017-08-30 11:44:07,464 cleverhans] Epoch 1 took 0.397209882736 seconds\r\nTest accuracy on legitimate examples: 0.9760\r\n[INFO 2017-08-30 11:44:07,496 cleverhans] Completed model training.\r\nTest accuracy on adversarial examples: 0.0060\r\n\r\nRepeating the process, using adversarial training\r\n[INFO 2017-08-30 11:44:09,616 cleverhans] Epoch 0 took 0.939763069153 seconds\r\nTest accuracy on legitimate examples: 0.9339\r\nTest accuracy on adversarial examples: 0.2763\r\n[INFO 2017-08-30 11:44:10,654 cleverhans] Epoch 1 took 0.900452136993 seconds\r\nTest accuracy on legitimate examples: 0.9610\r\nTest accuracy on adversarial examples: 0.4895\r\n[INFO 2017-08-30 11:44:10,786 cleverhans] Completed model training.\r\n\r\n [INFO 2017-08-30 11:46:19,366 cleverhans] Epoch 0 took 0.946167945862 seconds\r\nTest accuracy on legitimate examples: 0.9369\r\n[INFO 2017-08-30 11:46:19,803 cleverhans] Epoch 1 took 0.39602804184 seconds\r\nTest accuracy on legitimate examples: 0.9760\r\n[INFO 2017-08-30 11:46:19,835 cleverhans] Completed model training.\r\nTest accuracy on adversarial examples: 0.0060\r\n\r\nRepeating the process, using adversarial training\r\n[INFO 2017-08-30 11:46:22,008 cleverhans] Epoch 0 took 0.912930011749 seconds\r\nTest accuracy on legitimate examples: 0.9279\r\nTest accuracy on adversarial examples: 0.2763\r\n[INFO 2017-08-30 11:46:23,026 cleverhans] Epoch 1 took 0.895193099976 seconds\r\nTest accuracy on legitimate examples: 0.9580\r\nTest accuracy on adversarial examples: 0.4835\r\n[INFO 2017-08-30 11:46:23,142 cleverhans] Completed model training.\r\n [INFO 2017-08-30 11:47:14,419 cleverhans] Epoch 0 took 0.911845207214 seconds\r\nTest accuracy on legitimate examples: 0.9369\r\n[INFO 2017-08-30 11:47:14,855 cleverhans] Epoch 1 took 0.399484872818 seconds\r\nTest accuracy on legitimate examples: 0.9760\r\n[INFO 2017-08-30 11:47:14,885 cleverhans] Completed model training.\r\nTest accuracy on adversarial examples: 0.0090\r\n\r\nRepeating the process, using adversarial training\r\n[INFO 2017-08-30 11:47:17,006 cleverhans] Epoch 0 took 0.913484096527 seconds\r\nTest accuracy on legitimate examples: 0.9279\r\nTest accuracy on adversarial examples: 0.2823\r\n[INFO 2017-08-30 11:47:18,040 cleverhans] Epoch 1 took 0.904149770737 seconds\r\nTest accuracy on legitimate examples: 0.9610\r\nTest accuracy on adversarial examples: 0.4955\r\n[INFO 2017-08-30 11:47:18,172 cleverhans] Completed model training.\r\n\r\n Now pasting a few before the change [INFO 2017-08-30 11:48:37,116 cleverhans] Epoch 0 took 0.936095952988 seconds\r\nTest accuracy on legitimate examples: 0.9369\r\n[INFO 2017-08-30 11:48:37,536 cleverhans] Epoch 1 took 0.390725135803 seconds\r\nTest accuracy on legitimate examples: 0.9790\r\n[INFO 2017-08-30 11:48:37,562 cleverhans] Completed model training.\r\nTest accuracy on adversarial examples: 0.0060\r\n\r\nRepeating the process, using adversarial training\r\n[INFO 2017-08-30 11:48:39,576 cleverhans] Epoch 0 took 0.887719869614 seconds\r\nTest accuracy on legitimate examples: 0.9219\r\nTest accuracy on adversarial examples: 0.2853\r\n[INFO 2017-08-30 11:48:40,559 cleverhans] Epoch 1 took 0.872258901596 seconds\r\nTest accuracy on legitimate examples: 0.9670\r\nTest accuracy on adversarial examples: 0.4324\r\n[INFO 2017-08-30 11:48:40,671 cleverhans] Completed model training.\r\n Oh, actually the tests are based on train error, since we suspect it's more consistent Printing out report.__dict__ for a few runs before the change\r\n {'train_adv_train_adv_eval': 0.49120000000000003, 'train_adv_train_clean_eval': 0.95799999999999996, 'clean_train_clean_eval': 0.97897898953956164, 'adv_train_adv_eval': 0.43843843620102685, 'train_clean_train_adv_eval': 0.0118, 'train_clean_train_clean_eval': 0.97660000000000002, 'adv_train_clean_eval': 0.9669669753796345, 'clean_train_adv_eval': 0.0060060060032092414} {'train_adv_train_adv_eval': 0.5, 'train_adv_train_clean_eval': 0.95940000000000003, 'clean_train_clean_eval': 0.97897897575710624, 'adv_train_adv_eval': 0.45045045143491153, 'train_clean_train_adv_eval': 0.0106, 'train_clean_train_clean_eval': 0.97619999999999996, 'adv_train_clean_eval': 0.9669669753796345, 'clean_train_adv_eval': 0.0060060060032092414}\r\n {'train_adv_train_adv_eval': 0.47139999999999999, 'train_adv_train_clean_eval': 0.95860000000000001, 'clean_train_clean_eval': 0.97897898953956164, 'adv_train_adv_eval': 0.42042041710905126, 'train_clean_train_adv_eval': 0.010999999999999999, 'train_clean_train_clean_eval': 0.97619999999999996, 'adv_train_clean_eval': 0.9669669753796345, 'clean_train_adv_eval': 0.0060060060032092414}\r\n Printing a few after the change {'train_adv_train_adv_eval': 0.54259999999999997, 'train_adv_train_clean_eval': 0.96040000000000003, 'clean_train_clean_eval': 0.97597598546260111, 'adv_train_adv_eval': 0.49549549218412636, 'train_clean_train_adv_eval': 0.0118, 'train_clean_train_clean_eval': 0.97660000000000002, 'adv_train_clean_eval': 0.96396397130267397, 'clean_train_adv_eval': 0.0090090090062122444} {'train_adv_train_adv_eval': 0.53300000000000003, 'train_adv_train_clean_eval': 0.96499999999999997, 'clean_train_clean_eval': 0.97597598546260111, 'adv_train_adv_eval': 0.48948949047395057, 'train_clean_train_adv_eval': 0.0114, 'train_clean_train_clean_eval': 0.97619999999999996, 'adv_train_clean_eval': 0.96996997838263754, 'clean_train_adv_eval': 0.0060060060032092414}\r\n {'train_adv_train_adv_eval': 0.56159999999999999, 'train_adv_train_clean_eval': 0.95960000000000001, 'clean_train_clean_eval': 0.97597598546260111, 'adv_train_adv_eval': 0.50750750741801109, 'train_clean_train_adv_eval': 0.0124, 'train_clean_train_clean_eval': 0.97499999999999998, 'adv_train_clean_eval': 0.96096096829967093, 'clean_train_adv_eval': 0.0090090090062122444} Based on these results, I'm tightening the tests  Looks good other than the one comment I made. Feel free to merge after fixing  Could you tell us what the error is? Off the top of my head, it seems like the session is not passed properly? That would be the sess.run call. It's hard to say anything more with what you shared. Feel free to reopen with more details. Thanks for letting us know. Can you try to update to the last version, there has been changes to these functions since then. From the log, it seems that you are using 1.0 Have you tried running something in that session before this line of code gets executed? \r\n\r\nDo you get the same error if you try to use the function `jsma` in `attacks_tf.py` directly (instead of going through the class in `attacks.py`. It looks like you are defining the jacobian graph before creating your session, this may be the problem.\r\n\r\nOtherwise, did you make sure that your function InceptionModel returns the right type of tensor when it is called on an input?   LGTM, feel free to merge when tests pass   Note: besides fixing the tests, I should also:\r\n- make sure the tutorials that do adversarial training add the stop_gradient themselves. That part should probably be optional\r\n- check how the other attacks handle stop_gradient OK, I did the things in my previous comment. Thanks for renaming the variable names in `fgm`, they are more consistent now. \r\n LGTM, ready to merge  Do you know what went wrong with @googlebot ? It usually goes into this mode every time someone pushes to a contributor's branch that is not under tensorflow/cleverhans but in a fork.  If I merge the PR, will it make the build show up as broken because of the failing googlebot test? No, the build shows broken only if the Travis tests fail. The googlebot test is just shown on PRs OK, since we know the CLA is actually signed, I'll ignore Googlebot and merge  The `stop_gradient` op in FastGradientMethod should only be present for the max norm and in that case it should wrap only the sign op, not the addition of the perturbation to the input. The `stop_gradient` op should reduce computational cost but should not change the numeric value of any derivatives. It's fine to define adversarial training to treat the adversarial examples as constant, but that should be done in the training code, rather than the attack definition code. You could also define adversarial training as backpropagating through the adversarial example construction process. (We tried that for rotational adversarial examples in \"Explaining and Harnessing Adversarial Examples\"). In theory, that lets the defender anticipate the way the attacker will change in the future. For FGSM, it has no effect, because the gradient of the attacker is zero anyway. There are also two issues here: differentiability of the perturbation, and differentiability of the input `x`. For adversarial training, `x` comes from the dataset, so it doesn't really matter whether it is wrapped in a `stop_gradient` or not. In other contexts, like if `x` were a sample from a GAN and we want to make an adversarial perturbation that fools the discriminator, we'd want to be able to backpropagate through `x` to train the GAN.  We can definitely wrap argmax ops in stop_gradients to keep the TensorFlow graph smaller while still computing the same value. If the predictions are used in something other than an argmax, then `stop_gradient` actually changes the derivatives. Depending on the application, we may or may not want to consider the model fixed. The three lines that Fartash pointed out would add a `stop_gradient` after an argmax, so it seems like an optimization worth making a PR for. OK, thanks  Can you be more specific about what the numbers were before and after?\r\n.5% is a very large relative difference when the baseline error rate is 1%. Travis is reporting the following test fail: \r\n\r\n```\r\n======================================================================\r\nERROR: test_mnist_tutorial_tf (test_mnist_tutorial_tf.TestMNISTTutorialTF)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/travis/build/tensorflow/cleverhans/tests_tf/test_mnist_tutorial_tf.py\", line 21, in test_mnist_tutorial_tf\r\n    report = mnist_tutorial_tf.mnist_tutorial(**test_dataset_indices)\r\n  File \"/home/travis/build/tensorflow/cleverhans/tutorials/mnist_tutorial_tf.py\", line 107, in mnist_tutorial\r\n    args=train_params)\r\n  File \"/home/travis/build/tensorflow/cleverhans/cleverhans/utils_tf.py\", line 166, in model_train\r\n    shuffle(index_shuf)\r\n  File \"/home/travis/miniconda/envs/test-environment/lib/python3.5/random.py\", line 281, in shuffle\r\n    x[i], x[j] = x[j], x[i]\r\nTypeError: 'range' object does not support item assignment\r\n-------------------- >> begin captured stdout << ---------------------\r\nExtracting /tmp/train-images-idx3-ubyte.gz\r\nExtracting /tmp/train-labels-idx1-ubyte.gz\r\nExtracting /tmp/t10k-images-idx3-ubyte.gz\r\nExtracting /tmp/t10k-labels-idx1-ubyte.gz\r\nX_train shape: (5000, 28, 28, 1)\r\nX_test shape: (333, 28, 28, 1)\r\n--------------------- >> end captured stdout << ----------------------\r\n``` For `mnist_tutorial_tf.py`, are all of these numbers with adversarial training? What happens without adversarial training? LGTM (Since this didn't result in a consistent improvement, let's not merge until after the 2.0 tag in order to respect the code freeze)  Quick question: why did you add a condition on the l2 being smaller than `1e9`? \r\n\r\nBesides that LGTM You also have a pep8 pb: \r\n\r\n======================================================================\r\nFAIL: Test if pep8 is respected.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/travis/miniconda/envs/test-environment/lib/python2.7/site-packages/nose-1.3.7-py2.7.egg/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/home/travis/build/tensorflow/cleverhans/cleverhans/devtools/tests/test_format.py\", line 45, in test_format_pep8\r\n    raise AssertionError(\"PEP8 Format not respected\")\r\nAssertionError: PEP8 Format not respected\r\n-------------------- >> begin captured stdout << ---------------------\r\n/home/travis/build/tensorflow/cleverhans/tutorials/mnist_blackbox.py:206:1: W293 blank line contains whitespace\r\n--------------------- >> end captured stdout << ---------------------- I see, this seems like a reasonable thing to do for now\r\n\r\nLGTM Looks like the travis bot had an internet connection problem. Can you push a dummy commit to trigger another travis build? I restarted the Travis job that errored  Since this moves the MLP and all the Layers into the core library, it's a pretty big shift in philosophy for the library, and should probably be discussed on the cleverhans-dev list first. (So far, we haven't wanted to make CleverHans provide the same kind of functionality as Keras or Sonnet do; we just needed these classes in the tutorial to show that whatever kind of code you can wrap in the Model interface will work with the attacks)\r\n\r\nA less controversial move would be to make the tutorials directory into a module and add some tutorial_models.py submodule that the tutorials share. I think that would be fine to merge just with one reviewer (and I personally would be happy to serve as that reviewer and would approve it). Yes, I think people would build off of the MLP class because it is a generic building block. cnn_model was kind of a gray area because it is model functionality, but it's also such an end product that it's hard to imagine many people wanting to import it.\r\n\r\nIn the long run, we should evaluate Sonnet as an alternative to Keras that probably supports some of the use cases we weren't able to fulfill with Keras. So I guess move MLP to it's own module in tutorials? And then I'll re-review By pure tf, do you mean using our own MLP / Layer classes? Or do you mean just directly implementing the Model class methods without having a large ecosystem of different classes that interoperate?\r\n\r\n OK, I agree that CleverHans itself doesn't need to provide much in terms of a model framework. I meant we should evaluate Sonnet for implementing research project ideas using CleverHans as a dependency. I agree that it would make sense to have a discussion on this topic in the cleverhans-dev ml. It seems OK for cleverhans to provide wrappers that make it easier for people to use high-level frameworks like keras or slim or sonnet, but I agree that providing actual models seems outside the initial scope of the project Thanks @carlini  If the switch away from keras indeed decreased the accuracy, it sounds like there is some value to the accuracy threshold in the tests :) I think most our tutorials just don't have dropout. It's probably OK to not use dropout in this one too. The purpose of the tests is to make sure we notice when something changes. In this case, if we're pretty confident that dropout was the only change, it should be alright to decrease the threshold a little bit.\r\n\r\nIt could also make sense to put a **kwargs argument in Model.fprop, Model.get_layer, etc., and then we could pass in an argument like `dropout_input_prob` for the Dropout layer to pick up.\r\n Thanks, it would be great to double-check yeah. Besides that, LGTM Thanks for sending this out!\r\n\r\n  Looks good apart from the two comments I made  This would be a change in the attack's behavior, which would be more confusing to people who are just looking for an implementation of the paper in my opinion. It might be less confusing to make it a variant of the attack than modifying the original behavior I guess.\r\n Just wondering: do you already have code for this or is this more like a feature request? It looks like we should standardize the expected behavior across all attacks to have consistent behavior in the simple misclassification (untargeted) mode as opposed to the source-target misclassification mode (untargeted). Given that the JSMA is a source-target attack by design, this will require some thinking to adopt a default behavior that is most natural. I don't think anyone is working on it but I think it's OK to leave this issue open unless we would like to keep ideas for enhancement somewhere else? For instance in a MD file at the root of the repo or a wiki page so we don't clutter the issue tracker? Thank you Catherine! 2-4 are all targeted attacks with different ways of defining the target, right? Should we just leave the attacks taking a `y_target` argument and make easy ways to calculate the target?\r\nFor example:\r\n2. Pass `y_target = runner_up(x, model)`\r\n3. Pass `y_target = least_likely(x, model)`\r\n4. Pass `y_target = random_class(nb_classes)`\r\n\r\nThis way we don't need to have all the attacks implement all the target selection strategies, parse a lot of if statements to decode string names of target selection strategies, etc.  LGTM. Would you mind adding a test? You can make a dummy Model subclass that just implements a hard-coded function of 2 input features or something like that.   Looks basically good to me, apart from the tests not passing. Consider starting the Wiki and making a page about logging best practices, to make it easier to get your logging features adopted. LGTM once tests pass  Could you be a more specific? It's hard to understand what your problem is based on the information you shared.\r\n\r\nPerhaps the gradients of your model are all nan? Again, it is hard to debug your problem without access to the code or a more isolated description of what part of the experiment is failing. Have you tried checking the result of `jacobian()`? I am about to close this, unless you are able to share more information to help us understand where the problem comes from.  LGTM, ok to merge once tests pass Closes #219  It may be the case that the learning rate is not appropriate now that we changed the optimizer used by model_train. Can you try to modify it and let us know if it works? Nevermind I just saw your PR that does just that. Thanks!  Some attacks require nb_classes to be passed as an argument, but this could be computed with the shape of the predictions tensor This was completed by PR #226   Thanks for the PR Andrew. It is best to discuss new features like this on `cleverhans-dev` first. \r\n\r\nA few things:\r\n\r\n* I don't believe there is a need to add a feed_dict to `generate` because it does not run a session\r\n* it would probably be best to include the feed_dict argument in the `**kwargs`\r\n\r\nIf you won't test the feed argument for the Attacks interface, it may be safer to just include it in the `attacks_tf` functions for now. This would also limit conflicts with #205 until it is merged.\r\n\r\n  Here's the PEP8 checker output so you don't have to open Travis:\r\n\r\n```\r\nAssertionError: PEP8 Format not respected\r\n-------------------- >> begin captured stdout << ---------------------\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:235:68: E711 comparison to None should be 'if cond is not None:'\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:268:19: E711 comparison to None should be 'if cond is not None:'\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:347:39: E127 continuation line over-indented for visual indent\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:405:19: E711 comparison to None should be 'if cond is not None:'\r\n--------------------- >> end captured stdout << ----------------------\r\n``` (I fixed the Pep8 as well) will push soon  Hi @WGierke,\r\n\r\nYou code adds depends on two additional libraries: pandas and tqdm which are not included in standard python distribution. We would like to limit number of additional packages which are required to run the program, especially for download_images.py\r\n\r\nNevertheless, optimizing download speed is a valuable contribution which other participants might find very useful. So I would suggest to keep download_images.py unchanges and instead create another file (ex: download_images_multithreaded.py) and put your multi threaded code there. Also in such case please update README.md in this directory and mention that participants can run multithreaded version of downloader if they have pandas and tqdm installed.\r\n\r\nThanks,\r\nAlex This PR has not received much activity lately. @WGierke did you address comments made by @AlexeyKurakin in his review? No problem, just checking :) @WGierke did you get a chance to make the edits that Alex asked for? I am closing this because it has been inactive for over a month but feel free to reopen if changes asked by Alex have been taken care of. Thanks!\r\n @AlexeyKurakin could you take a look since this related to the competition?  @rshpeley That's exactly how image 486 should look like after cropping and resizing.\r\n\r\nI haven't seen DecompressionBombWarning, but I used rather old version of Pillow (2.3.0), so this message was probably added in newer version.\r\nI think the reason why you see the warning is because this image is high resolution (2736\u2006\u00d7\u20063648) and cause pillow to complain about it. But it looks like image was correctly downloaded, cropped and resized.\r\n\r\nRegarding corrupt EXIF data. download_image script does not use EXIF data, so it should not cause the problem either.  Yes, let's keep the nb_classes removal for another PR. \r\n\r\nI'll take another pass at this one And yes the CLA bot bugs when someone rebases through the online interface, but we can still merge so it's OK I left a few comments, but looks like it's ready to merge afterwards There are also some pep8 errors left:\r\n\r\n```\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:604:1: W293 blank line contains whitespace\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:614:73: W291 trailing whitespace\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:615:77: W291 trailing whitespace\r\n```    @npapernot What's the plan to address this issue? It looks like #176 didn't address this? I made a note to take another look a few days ago but I did not get a chance to look at it yet.  @npapernot : was this fixed by #322 ?\r\n  I think we should standardize on 2 spaces for consistency with TensorFlow, especially now that this repository lives in the TensorFlow organization. actually I'm confused by @npapernot 's earlier comment; it looks like most of CleverHans has 4 spaces\r\n  I am closing this given that the problem not addressed yet in this issue is also described in #183. Tests are running more smoothly now.  In a private experiment, I found that Adam with a learning rate of .001 works much better than the tutorial default. It's worth checking if this holds true for the tutorial or if it was specific to the model I was using in my private experiments. After how many epochs? What about the accuracy of the adversarially trained model?\r\nIf you run it multiple times, I suspect you'll see a lot of fluctuation in the accuracy of the adversarial examples.\r\nI doubt the loss is hitting machine zero. It sounds like the model is just better. What was the accuracy on adversarial examples before the switch to Adam?\n\nOn Fri, Jun 16, 2017 at 9:25 AM, Abhibhav Garg <notifications@github.com>\nwrote:\n\n> The above was after 6 epochs.\n> I am getting variation over run. In the end, after the adversarial\n> training I get 0.9614 accuracy on the adversarial samples.\n> And yeah, the model is not hitting machine zero in this case.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/issues/170#issuecomment-309071260>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGnIitahbrSB1LmS74AkUZbFsu6VTks5sEqx8gaJpZM4N46md>\n> .\n>\n I'm assuming \"before training\" = \"normal training\" and \"after training\" =\n\"adversarial training\". That does look like a big improvement.\n\nCould you send a PR?\n\nOn Fri, Jun 16, 2017 at 9:56 AM, Abhibhav Garg <notifications@github.com>\nwrote:\n\n> using the original Adadelta: before training - 0.013 and after training\n> 0.56\n> using adam: before training - 0.028 and after training 0.96\n> Adam seems overall better.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/issues/170#issuecomment-309078664>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGmii4bDdzjLtK47gJiwAPSRO82wEks5sErO6gaJpZM4N46md>\n> .\n>\n Yes, we should raise it because failing to get the usual numbers for Adam\ncould indicate a bug.\n\nOn Sat, Jun 17, 2017 at 1:51 PM, Abhibhav Garg <notifications@github.com>\nwrote:\n\n> Should we increase the values in the tests to match? For example, right\n> now the test_mnist_tutorial_tf just expects adv_train_adv_eval to be\n> greater than 0.06, but we can now increase this by a bit.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/issues/170#issuecomment-309239506>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGqb52Cw5pdXCU2zkhsfspp8-mHuRks5sFDxogaJpZM4N46md>\n> .\n>\n  Thanks!  I think they should be sped up, rather than removed. They're the only thing we have resembling an integration test. Integration tests are important as well as unit tests. Also, before we had the tests, people routinely made edits to the tutorials themselves that broke the tutorials.    I think it's important to review this properly, but it arrives at a time of very high reviewer load (due to preparation for the 2.0 release). I propose leaving this PR in place until the preceding PRs have been dealt with. @abhibhav14  are you still willing to work on this PR? I agree, if that is easier for you it would be best to open a new PR  Not yet, I started working on it locally and will make a PR this week  Looks like it needs a PEP8 cleanup to pass Travis, but otherwise ready to go. Thanks! Thanks!  I haven't looked at it, but the JSMA implementation might be crawling the\nTensorFlow graph to obtain the logits after you pass it probabilities.\n\nIf that's what it's doing, and if it runs without raising an exception when\nyou pass it the logits, then it should probably add a check that the\nprobabilities it receives are the output of the Softmax op.\n\nOn Tue, Jun 6, 2017 at 8:58 PM, Nicholas Carlini <notifications@github.com>\nwrote:\n\n> Hmm ... it looks like the accuracy test has failed. Nicolas, should JSMA\n> operate post-softmax on these networks? If so, the documentation should\n> probably change.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/157#issuecomment-306679826>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGrjp_DQaJsSgb9hcGnAOHrMgUSQXks5sBh_egaJpZM4NyJWM>\n> .\n>\n I think ideally we should make them all take probabilities and they can\nrecover the logits if needed. Maybe we should pull out the code for doing\nthat and turn it into a utility function.\n\nOn Wed, Jun 7, 2017 at 10:40 AM, Nicolas Papernot <notifications@github.com>\nwrote:\n\n> I talked to Nicholas in real life :) There is no specific need to remove\n> the softmax layer at the moment. However, we should update the\n> documentation to say that the model can be pre or post softmax.\n>\n> I will also open a new issue, because we could build on #154\n> <https://github.com/tensorflow/cleverhans/pull/154>, and additional code,\n> to clarify which attacks need the logits and which ones need the softmax\n> outputs. In addition to improving the documentation, this may require\n> adding some sanity checks on the model argument when initializing the\n> different attacks.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/157#issuecomment-306870335>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGkgz47EH0kOM9z0rzU79DP92mCT7ks5sBuCbgaJpZM4NyJWM>\n> .\n>\n Didn't Nicolas see a difference in performance when he changed the tutorial\nfrom passing probabilities to passing logits?\n\nOn Wed, Jun 7, 2017 at 6:23 PM, Nicolas Papernot <notifications@github.com>\nwrote:\n\n> *@npapernot* commented on this pull request.\n> ------------------------------\n>\n> In tutorials/mnist_tutorial_jsma.py\n> <https://github.com/tensorflow/cleverhans/pull/157#discussion_r120781606>:\n>\n> > @@ -112,6 +112,14 @@ def mnist_tutorial_jsma(train_start=0, train_end=60000, test_start=0,\n>      grid_shape = (nb_classes, nb_classes, img_rows, img_cols, channels)\n>      grid_viz_data = np.zeros(grid_shape, dtype='f')\n>\n> +    # by default, we have softmax after a CNN, remove it here\n>\n> The JSMA implementation would not change whether it is being fed\n> probabilities or logits, it can handle both. That's why we were thinking of\n> updating the documentation to make that more clear rather than modifying\n> the tutorial (the few lines added to the tutorial in this PR would be\n> removed). Does that make sense or do you prefer an alternative?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/157#discussion_r120781606>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGvkJgh-GMSxVqh4I3dGUtbBV_JBPks5sB00ZgaJpZM4NyJWM>\n> .\n>\n I'd suggest making JSMA use the new Model abstraction, and then have the\nattack explicitly request either logits or probabilities from the Model\nbased on a flag in the __init__ method for JSMA. That way people don't need\nto redefine their model to change the attack behavior.\n\nOn Thu, Jun 8, 2017 at 9:04 AM, Nicolas Papernot <notifications@github.com>\nwrote:\n\n> I talked to Nicholas about the performance drop he observed when changing\n> the tutorial.\n>\n> Basically, users should first try to run the JSMA attack using\n> probabilities, which is likely to work better in most cases. If they\n> encounter numerical issues when computing the Jacobian, they can try\n> feeding in the logits directly, which can work better if the numerical\n> instabilities are due to the softmax. This is why we used the logits in the\n> original paper, and then the probabilities in subsequent papers.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/157#issuecomment-307149637>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGle6kG0aAQy_eyGDI434JVnJcg0uks5sCBuHgaJpZM4NyJWM>\n> .\n>\n  I've been waiting to review this until we settle #150, which will hopefully be this morning.  Yeah, let's resolve #150 before we increment the tag.  This is worth taking some time to get right, so I suggest we write some code with it to make sure it really does what we want. This doesn't need to all be done by @fartashf ; some of the rest of us can also push to this branch.\r\nI'd suggest:\r\n- Convert the tutorials to use the new interface, and make sure everything all works\r\n- Convert all the attacks to assume that the model includes a definition of the probabilities, and make sure the attacks all fetch either logits or probabilities as needed\r\n- Maybe make an example that uses L1 regularization of the activities, or something like that that exercises the model interface more Did we convert the tutorials to use the new interface?    When generate_np is called more than once with different arguments, it just replays the first graph.\r\n\r\nI think it would be best to fix this by just removing generate_np, because some keyword arguments need to  trigger generation of new graphs and others don't. This seems like too subtle of a point for most Attack implementers to handle. You can use the while loop to avoid making a large unrolled graph:\nhttps://www.tensorflow.org/api_docs/python/tf/while_loop\n\nOr you can wrap python code up to make a tensorflow op:\nhttps://www.tensorflow.org/api_docs/python/tf/py_func\n\n\n\nOn Mon, Jun 5, 2017 at 1:10 PM, Nicholas Carlini <notifications@github.com>\nwrote:\n\n> This would have fairly large consequences for attacks that are not easy to\n> (or perhaps even impossible to) implement fully symbolically.\n>\n> For example, if you wanted to generate adversarial examples on a few\n> thousand iterations using the attack algorithm I have, or JSMA as currently\n> implemented, you would have to construct thousands of tf.gradient()\n> operations, instead of caching it and just doing one.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openai/cleverhans/issues/150#issuecomment-306290962>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGjAL60GhHq2FBGhfH2NylEeEr2vbks5sBGCdgaJpZM4NwUXf>\n> .\n>\n Oh, for that, it's straightforward, you just feed a different value each\ntime.\n\n\nOn Mon, Jun 5, 2017 at 1:54 PM, Nicholas Carlini <notifications@github.com>\nwrote:\n\n> Oh, I think I was unclear what I meant by \"iterations\" -- I didn't mean\n> iterations of the attack algorithm, I meant iterations of calling\n> attack.generate(). If we have to construct a new graph each time, that\n> would be expensive.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openai/cleverhans/issues/150#issuecomment-306306413>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGrir-QAPdjs4eD5bZdZa_dGC0GcYks5sBGsGgaJpZM4NwUXf>\n> .\n>\n No, you generate the graph once and feed many different values through it.\nThe tutorials already do this:\nhttps://github.com/openai/cleverhans/blob/master/tutorials/mnist_tutorial_tf.py\n\n\n\n\nOn Tue, Jun 6, 2017 at 9:55 AM, Nicholas Carlini <notifications@github.com>\nwrote:\n\n> This requires re-generating the entire graph each time though, right? You\n> have to pay the cost of doing that every time you call generate(), when\n> ideally you'd only construct the graph once and use it every time after\n> that.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openai/cleverhans/issues/150#issuecomment-306549708>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGtubZ1N4YsQOf2ey3QkkIGa_hvzYks5sBYSXgaJpZM4NwUXf>\n> .\n>\n Yes, by wrapping a python function that does the JSMA code in a tf op using\ntf.py_func\n\nOn Tue, Jun 6, 2017 at 10:30 AM, Nicholas Carlini <notifications@github.com>\nwrote:\n\n> Yeah, but that only works because the FGS attack is a fully TF graph.\n> Could you do this same thing with the JSMA code without having to call\n> tf.gradients() each time you want a new adversarial example?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openai/cleverhans/issues/150#issuecomment-306559546>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGvbKRAczTXh0DjmISc8zrlPEt6KMks5sBYyxgaJpZM4NwUXf>\n> .\n>\n I think everyone agrees the current behavior is a bug.\n\nI would do 3 if I were working alone, but it seems unlikely that we'd be\nable to efficiently explain the situation to all future Attack subclass\nimplementers.\n\nSubclass implementers will probably do the right thing if their\nimplementation really is numpy based. If their implementation is based on\nwrapping symbolic code, they'll probably leave out the caching mechanism or\nimplement the caching mechanism incorrectly.\n\nWe could make a default implementation of the correct caching mechanism in\nthe Attack superclass, but this would require imposing some hard rules\n(like that every value in kwargs is fed into a placeholder, and every\nargument that changes the graph structure must go into __init__). This\nmakes the implementation of `generate` more annoying. I don't think that\n`generate_np` is important enough that we should redesign `generate` to\nmake it feasible.\n\n\n\n\n\nOn Tue, Jun 6, 2017 at 7:02 PM, Nicholas Carlini <notifications@github.com>\nwrote:\n\n> So I see three paths forward.\n>\n>    1.\n>\n>    Ian's recommendation: just delete the generate_np functionality. Make\n>    generate the only method, and wrap everything with a py_func if you can't\n>    do it symbolically. Since this doesn't have the performance implications I\n>    thought it would, this is a reasonable option. The only potential problem\n>    with it is that now the interface is slightly less clean for a new user who\n>    just wants to generate an attack, since they'll have to create a tf\n>    placeholder.\n>    2.\n>\n>    Make generate_np call generate() every time it receives arguments.\n>    Don't save the graph. This is potentially very slow to do, but we could\n>    document it with a big warning saying something to that effect. This method\n>    would be used only for one-off adversarial example generation and not if\n>    you want to have it in a tight loop (which is probably already the case).\n>    3.\n>\n>    Make generate_np call generate() every time it receives a *new* set of\n>    arguments. Cache the graph objects we've used so far. If the arguments are\n>    the same as a previous computation, then re-use that older graph. If not,\n>    make a new graph. This makes it as efficient as generate() while keeping\n>    the nice easy-to-use functionality. The only difficulty is that now\n>    everyone who wants to implement an attack has to handle this. There might\n>    be some nice way to abstract this into the Attack super class, though, that\n>    makes it easier to handle.\n>\n> Personally, I like option (3) followed by (1) and then (2). I like the\n> generate_np() method as a nice simple interface for someone who just wants\n> an adversarial example, and if this comes at the cost of some more\n> implementation work, so be it.\n>\n> But whatever we do, I do think that the current behavior of using old\n> arguments is counterintuitive at best and should be changed.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/issues/150#issuecomment-306664633>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGu4F0axtlAYYkfkaf_E7tAHyUEiCks5sBgS7gaJpZM4NwUXf>\n> .\n>\n Actually, here's another thought:\n\n`generate_np` is OK if it's actually implemented in NumPy.\nI don't think there's any known bug with the default implementation of\n`generate` that wraps `generate_np`.\nWhat if we keep `generate_np` as a method that subclasses can optionally\nimplement if they want to make the default implementation of `generate`\nwrap their NumPy implementation?\nThis would mean the user can't expect `generate_np` to work for every\nclass, but some classes that are most naturally implemented in NumPy could\nstill use it.\n\n\n\n\nOn Wed, Jun 7, 2017 at 10:17 AM, Nicolas Papernot <notifications@github.com>\nwrote:\n\n> It sounds like the best option is to deprecate generate_np and remove it\n> in 6 months.\n>\n> Should we issue a warning when the user calls generate_np multiple times\n> to warn that it will reuse the first graph?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/issues/150#issuecomment-306863852>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGnOLkn1Re7fCZjlefzCx7SaSW9WPks5sBttFgaJpZM4NwUXf>\n> .\n>\n I set up an in-person meeting with Nicolas and Nicholas to discuss this in\nmore detail. If anyone would like to join the meeting (e.g. via hangouts)\nreply and let me know. We'll write back to the list with our conclusions.\n\nOn Wed, Jun 7, 2017 at 6:09 PM, Nicholas Carlini <notifications@github.com>\nwrote:\n\n> That makes sense.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/issues/150#issuecomment-306969151>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGs15KyDj0OlwSEcqo2IAIDWWgiCjks5sB0nMgaJpZM4NwUXf>\n> .\n>\n  @frankyjuang Why did you close this? Did you decide it wasn't a good idea after looking at the output of the tests?   see #138   Yes, the key error should be adressed by #122, thanks for confirming!  Hi, the keras learning phase variable is used to control layers that have different behavior at training and test time (e.g., dropout). In the tutorials, we don't use these layers. To avoid having to feed a value of this variable in all TF graph runs performed by cleverhans, we simply set it to 0. If you use K.fit, you may not be able to use some of the cleverhans functions such as adversarial training. Sorry for the confusion, yes I meant it will be hard to use cleverhans functions \"as is\" because the learning phase will raise a value not fed error. \r\n\r\nActually, I had a related thought the other day: we may want to have an optional argument to cleverhans functions that run a TF graph where users can specify a feeding dictionary of additional variables along with their values that will be appended to the feeding dictionary hard-coded in cleverhans (when running `sess.run`. Yes, that was what I wanted to provide as a new feature: to allow people to provide custom placeholders and their values that should be added to the feeding dictionary when running the session.\r\n\r\nThe current argument processing was not designed to support this, but it was not intentional.   Thanks, could you make a PR?\n\nOn Sun, May 14, 2017, 3:15 PM Holden Lee <notifications@github.com> wrote:\n\n> Running\n>\n> pip install -e git+git@github.com:openai/cleverhans.git#egg=cleverhans\n>\n> gives the error\n>\n> Permission denied (publickey).\n> fatal: Could not read from remote repository.\n>\n> Please make sure you have the correct access rights\n> and the repository exists.\n> Command \"git clone -q git@github.com:openai/cleverhans.git /home/optml/holdenl/mwu2/mwu/src/cleverhans\" failed with error code 128 in None\n>\n> This can be fixed by running\n>\n> pip install -e git+http://github.com/openai/cleverhans.git#egg=cleverhans\n>\n> instead. (See\n> http://stackoverflow.com/questions/21387456/cannot-install-a-specific-git-branch-on-github-with-pip-permission-denied-pub\n> .)\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openai/cleverhans/issues/140>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIbS9vq_PwNmeTH-8mWyG8qL2cshsbfVks5r51LXgaJpZM4NaeP->\n> .\n>\n  This is an issue that we have to address yes. The save feature doesn't work because we are defining the model using keras. Any contributions are welcome if you are able to make it work, otherwise I would suggest defining the model directly using tf  Hi, \r\n\r\nI am not sure if that is true. Here is a PR implementing this functionality in TF: https://github.com/tensorflow/tensorflow/pull/6042\r\n\r\nDid you run into any issues running cleverhans? +1 for specifying which versions of tf we support. \r\n\r\nThe code currently mentions a potential deprecation for versions that don't support `global_variables_initializer()` here: https://github.com/openai/cleverhans/blob/master/cleverhans/utils_tf.py#L145 \r\n\r\nSo we may want to support >= 0.12   Closes #136 \r\n\r\nMoves the `matplotlib` import inside the only two functions of `utils.py` that use it  Closes #132 \r\n\r\nThe bug found was due to not using the TF flags, whereas one flag was still in use to get the number of classes in the `jsma` function. The dependency on FLAGS is now removed by deriving the number of classes from the length of the list of `grads`. Can you be more specific about the error you are getting and/or paste the error log?  Thank you for pointing this out, let us know if #135 fixes this bug on your side as well. I based it off the snippet you shared.  Hi Riaan, \r\n\r\nThe value of the parameter epsilon should be set depending on the input domain you are working with. It lets you trade-off the chances of having the input misclassified with the magnitude of the perturbation introduced. The impact of an epsilon parameter of 0.3 on your CIFAR data will depend on how you pre-processed it before training your model. Have you tried reducing the value of epsilon?\r\n\r\nYou may want to check https://github.com/openai/cleverhans/blob/master/examples/ex_cifar10_tf.py and ping @paulhendricks \r\n\r\nCheers  In `cleverhans.utils_mnist`, keras is used to  load MNIST. We could directly download from its website and remove all dependencies on keras Thanks for the code snippet. \r\n\r\nYou are right, this would be the way to go once Theano support is deprecated. We recently proposed to drop Theano support (https://groups.google.com/forum/#!topic/cleverhans-dev/xXqAG97RTfo), so we will soon be able to assume that all users are running TensorFlow. \r\n\r\nIt is probably easier to hold on for the PR that will deprecate Theano before resolving this issue\r\n  Closes #121\r\n\r\nWhen no pixels satisfy the saliency map, the JSMA will try to remove the same pair of pixels multiple times from the search_domain list. Switched to discard (performance overhead is acceptable given that this case is not common afaik)\r\n\r\nSome changes made in #106 created a bug by setting the gradients of pixels outside of the search domain to 0 (the value is not sufficiently extreme in order to guarantee that the pixel will not be selected as part of a pair when computing the saliency score) Perhaps @apnorton and/or @rms5643? This PR is based on an issue they raised @apnorton, do you have any suggestions before we merge this?  hi @aam-at , would you mind resolving the conflicts with the master branch now that #75 was merged, your PR should pass the tests Great, thank you! \r\n\r\nCould you take a look @takerum? Thanks @takerum ! @aam-at Did you get a chance to look at this again? Just wanted to check in, thanks a lot for your contributions @aam-at! Thank you for making the changes required! The code matches the API better now The discussion was on the cleverhans-dev mailing list \"dropping Theano\n support\".\n\nOn Thu, Jun 1, 2017 at 6:31 AM, Alexander Matyasko <notifications@github.com\n> wrote:\n\n> @npapernot <https://github.com/npapernot> I added basic tests for utils\n> and vatm method. Do you have a roadmap for this project? Can you point me\n> out to the discussion why you are dropping theano support? Thanks.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openai/cleverhans/pull/125#issuecomment-305493737>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGtJxM8Pa_LTQwOQoxK5L0tPghf75ks5r_r0ggaJpZM4NJ29p>\n> .\n>\n  `adv_x` as defined in the tutorials is actually the images generated by FGSM, like you want.\r\n\r\n`batch_eval` will evaluate any graph you pass to it, so you could use it to generate either the adversarial images or just the perturbations.  Thank you @rafaelpossas, I will get back to this after #75 is merged. Two things that can be improved:\r\n* can you make sure PEP8 tests pass?\r\n* is the change going to break the keras model definition for clients with keras < 2.0 ? Addresses #109  Yes, can you check that the proposed fix still works on your machine? I changed the name of the wrapper to `conv_2d`\r\n\r\nThanks @rafaelpossas, let me know when you pushed the changes  Travis build failed\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/travis/miniconda/envs/test-environment/lib/python2.7/site-packages/nose-1.3.7-py2.7.egg/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/home/travis/build/openai/cleverhans/tests_tf/test_mnist_accuracy.py\", line 81, in test\r\n    main()\r\n  File \"/home/travis/build/openai/cleverhans/tests_tf/test_mnist_accuracy.py\", line 61, in main\r\n    model = cnn_model()\r\n  File \"/home/travis/build/openai/cleverhans/cleverhans/utils.py\", line 181, in cnn_model\r\n    model.add(layer)\r\n  File \"/home/travis/miniconda/envs/test-environment/lib/python2.7/site-packages/Keras-2.0.2-py2.7.egg/keras/models.py\", line 455, in add\r\n    output_tensor = layer(self.outputs[0])\r\n  File \"/home/travis/miniconda/envs/test-environment/lib/python2.7/site-packages/Keras-2.0.2-py2.7.egg/keras/engine/topology.py\", line 554, in __call__\r\n    output = self.call(inputs, **kwargs)\r\n  File \"/home/travis/miniconda/envs/test-environment/lib/python2.7/site-packages/Keras-2.0.2-py2.7.egg/keras/layers/convolutional.py\", line 164, in call\r\n    dilation_rate=self.dilation_rate)\r\n  File \"/home/travis/miniconda/envs/test-environment/lib/python2.7/site-packages/Keras-2.0.2-py2.7.egg/keras/backend/tensorflow_backend.py\", line 2856, in conv2d\r\n    x = tf.nn.convolution(\r\nAttributeError: 'module' object has no attribute 'convolution'\r\n-------------------- >> begin captured stdout << ---------------------  Improve JSMA implementation so we can feed it more than one input at a time It should be possible to rewrite this symbolically yes. I contacted @gongzhitaao  who implemented a version of this here: https://github.com/gongzhitaao/tensorflow-adversarial/blob/master/attacks/jsma.py#L102\r\n\r\nThere should be a PR to work on this soon. For instance here: https://github.com/tensorflow/cleverhans/blob/master/tests_tf/test_attacks.py#L461  @adhoc2github Can you let us know if it worked? Closing this given that we did not receive any response from @adhoc2github \r\n\r\nFeel free to reopen if the bug is still reproducible   Thank you for taking care of this!   Thanks for letting us know @rva5120, I didn't upgrade to 2.0 yet but I'll take a look Yes, in the meanwhile I added the requirements.txt tweak in #111 \r\n\r\nI have been thinking about keras as well. We designed cleverhans with the goal of giving the tools needed to apply adversarial attacks and defenses to models on tensorflow (and optionally theano). Keras was added in the tutorials to help users experiment with different architectures easily (by modifying the few lines that define the model with Keras). But in the end, Keras is making a lot of things more complicated than they should be (e.g., with the learning phase var in the Keras backend, which needs to be fed in the dict when running Keras models with tensorflow). \r\n\r\nWe are in the process of fixing the new API to harmonize the interface of different attacks, and I'll get back to the keras issue once that process is done Thank you for the feedback @rafaelpossas \r\n\r\nRegarding 2., we cannot ignore some test inputs when evaluating the accuracy. It's ok to repeat the inputs processed during training, but we need to ensure the accuracy returned was computed by evaluating exactly once each test input.  The low rate on adversarial training was due to an error in the last `model_eval` call, see 252519a I am now getting 67% accuracy on legitimate inputs and 63% on (FGSM) adversarial inputs after 50 epochs.\r\n\r\nI'll merge for now but feel free to create a new PR if you make improvements to this script.  Thanks for spotting this @carlini, there is indeed a bug in this implementation. The search domain should have at least two pixels left for the while loop to iterate.\r\n\r\nMerging now  Thanks for the PR, this will help with #82.\r\n\r\nLooks like the test failed because PEP8 checks did not pass, can you fix the errors? I'll merge this for now, but feel free to open a second PR with the code that helps deal with large matrices    LGTM  LGTM, closes #6   added L1 and L2 norms for FGSM in TF\r\n\r\ncredit to @ftramer for this\r\n\r\n Closing this given that this will be added through the new API  LGTM, thanks!  Thanks for the PR @bogdan-kulynych and the very detailed description!\r\n\r\nThis is most likely going to break the new tutorial mnist_blackbox.py added last night since it used a similar setup than mnist_tutorial_tf.py. Do you mind pushing the few additional changes required to keep that tutorial alive?  This adds a tutorial for this paper: https://arxiv.org/abs/1602.02697\r\n\r\nNo changes made to the cleverhans module itself\r\n I added the missing init files by committing directly to the master branch so we don't mix things up with this PR in the future (b1bac37 )  This PR also implements the BasicIterativeMethod from @AlexeyKurakin but at the moment there is a problem in the implementation (with the labels used by the fgm)\r\n\r\nHappy to remove the BasicIterativeMethod from this PR and create separate PR for clarity The model object can be any object that has a __call__ method, so it does\nnot require keras.\n\nThe infinite loop can be resolved with a binary flag.\n\nOn Tue, Apr 11, 2017 at 4:28 PM, Reuben Feinman <notifications@github.com>\nwrote:\n\n> I just looked through the code; a lot has changed since I last contributed\n> to the fork. I am confused about this new \"model\" parameter that is handed\n> to the *init* functions. Is this going to require using Keras? Yes, users\n> can write their own TF model constructor functions and pass those as\n> callables, but that seems like a lot of complexity added to the user side\n> of things. The only time that I see this parameter being necessary is to\n> compute a symbolic version of the BasicIterativeMethod attack. But recall\n> that for the numeric version, \"model\" callable was not required; we could\n> simply revert to the numeric version that we had before, and use\n> tf.py_func() to get a symbolic version.\n>\n> Also, we should address the fact that in the parent class, generate() and\n> generate_np() would get stuck in an infinite loop of calling each other\n> back and forth.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openai/cleverhans/pull/75#issuecomment-293429428>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGiY-cxDpuF32VOc1dVCTGeByBgS4ks5rvAyygaJpZM4L0g50>\n> .\n>\n  @rfeinman thanks for the PR, but please make sure your code passes PEP8 tests next time (I fixed the errors for this time)\r\n\r\nWill run a few more tests before merging No worries Reuben, we only recently implemented the pep8 compliance checks in #73   Passed all tests on my machine, merging now  I am closing this for now since we have deprecated Theano and a TF version is underway.   Having flags (tf flags) is ok in the tutorials, but it would be easier to import functions from the cleverhans module if they didn't reuse flags directly but rather got these values as arguments (e.g., learning rate in model train)  LGTM. Fixed a small dimension mismatch bug  @goodfeli do you consider this closed since we put together the Travis conf in #100?\r\n\r\nIn my opinion, we could probably use more (~unit) tests Ok I see, then we have to make the test run the original tutorial script and check if accuracy is in expected range for both models on legitimate and adversarial inputs  LGTM  This should be fixed now. Feel free to reopen if that's not the case.  The test is passing on my machine as well TF: 0.10.0rc0 and same keras version  LGTM  I guess now there are tests for JSMA, but they're flaky? See the failure here: https://travis-ci.org/tensorflow/cleverhans/jobs/245472257 k. Should we also make the tutorial tests less flaky somehow? Seeds for random number generators? Closed by #198  @kudkudak Do you think you can make a PR for this? Thanks !\n\nOn Fri, Feb 10, 2017, 2:08 PM Stanislaw Jastrzebski <\nnotifications@github.com> wrote:\n\n> Will do! But after ICLR workshop deadline :)\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openai/cleverhans/issues/56#issuecomment-279079758>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIbS9ujdAn8Ai9odwq_GnEpywIyvUe-aks5rbN_SgaJpZM4LZv1H>\n> .\n>\n @kudkudak anything new regarding this issue? No worries, your help is appreciated :)  LGTM, thank you for your contribution!  regardin 2. this is not possible otherwise everytime we make a new call to jsma in order to craft a new adversarial example, we will create new TF graph elements and make the operations slower and slower at each call of jsma This will get addressed by the new API in preparation.  I will commit a few changes to the documentation and make some minor changes to the code. Should be done today and will merge this tonight. Thanks @mahnerak for the contribution, this is a good first step towards supporting TF and TH. a6745b0 moves JSMA to attacks_tf  Hi Reuben and Hrant, thanks for your contributions. I received another proposal (by email) for a unique attack interface. Unfortunately, things are hectic at the moment since I'm at NIPS but I'll get to this soon. Regarding 1., we are also considering a full symbolic implementation of JSMA for efficiency. Regarding 3., the reason behind this is the recent discovery of label leaking. For consistency, I'll make that more clear and perhaps disable that enhancement as the default behavior.  I am not sure this PR makes much sense given the recent addition of the FGSM implementation in Theano (see #51), which changed a lot of the code. \r\n\r\nTwo comments:\r\n\r\n(a) Regarding your point 1., Alex Kurakin made some suggestions on the cleverhans-dev group on how to make the JSMA symbolic, and for a common attack interface. We should follow up on that.\r\n\r\n(b) It would still be useful to have two variants of the FGSM with and without the label leaking fix. Maybe as an optional argument to attacks.fgsm \r\n\r\nIf there are no objections, I will close this PR. It looks easier to recreate one specifically for (a) and (b).  note to self: two empty lines before each function  space after commas in tuples Sgtm, I'll mention it in the main readme added in 8146dd4e7181ccdf347b7d5ca584f413e2bc469d  right now the map definitions are biased towards image data (because of row x col). We should clean up the code to define them for any input vector. We can do that once the tutorial is fully merged (branch saliency is closed) Help would be welcomed yes, feel free to start a PR related to this Solved by #74  Agreed, should we wait to get the saliency map attack and update the tech report at the same time?\n https://github.com/openai/cleverhans/releases/tag/v1.0.0  hi @rfeinman, thanks for the PR. @rms5643 is working on merging your implementation with one we have developed in parallel. We will also take care of writing up a tutorial markdown to go with the script. We will make additional commits to your PR's branch and merge it when all of that is ready. Thanks! \n  Same here, I think the current version makes it easier to see how batches are indexed.\n  LGTM, thanks for the edits\n  Create an iterator so one can write `for batch_index in dataset`\n I'm closing this for now, feel free to reopen if you feel like it's important to have this feature  Work in progress: see #80   That would be nice, thank you!  @goodfeli I haven't seen this message in a while, do you agree to close this issue?\n The issue on the tensorflow tracker seems to imply that the problem only occurs when users imported Keras.  It appears that there is a fix but it has not been merged into TF yet. Since we know that this originates external to CleverHans, there is no need to submit further reports of it here. Follow the issue on the TensorFlow repository.  #14 adds the test for legitimate inputs\n  yes that would be ideal, the thing with Keras is that it requires things like https://github.com/openai/cleverhans/blob/master/cleverhans/utils_tf.py#L80 when training (or at least that's my understanding). We might have to define a flag and make some special cases for people using Keras. I have not particular preference on using Keras, I just thought it was a good idea to include in the tutorial to allow people to easily modify the model. Thoughts?\n It should not be the case anymore, now that the attacks module has been refactored. All keras dependencies are cleared as far as I know. Feel free to reopen if I missed anything.  You are right: the issue was due to my naive implementation which redefined the adversarial loss in the TF graph at each iteration (batch...). I fixed by introducing a new function that add the loss to the graph, and which returns the TF var to be evaluated at each iteration d7a95d37c5f52f3f8fc9b5653129c4e0f74951fc\n  I tried removing the convolutions and it decreases adversarial accuracy\n  Adressed in 09dbd2696f0407839515abe055da3345279a6fac 4346b8b1aaa159219c88b5a90991de879678ced4\n  completed in #15 \n  Unless I'm wrong this shouldn't be the case anymore since #51 was merged", "text_all_count": 18010, "text_word_token": ["Which", "implementation", "be", "you", "referring", "to", "Most", "attacks", "should", "be", "able", "to", "take", "a", "batch", "of", "data", "as", "the", "first", "dimension", "of", "the", "input", "tensor", "NUMBER", "Can", "you", "provide", "details", "of", "attacks", "and", "framework", "version", "where", "you", "find", "this", "to", "be", "an", "issue", "Can", "you", "provide", "details", "of", "attacks", "and", "framework", "version", "where", "you", "find", "this", "to", "be", "an", "issue", "This", "looks", "like", "a", "TF", "installation", "problem", "NUMBER", "Feel", "free", "to", "reopen", "if", "that", "s", "not", "the", "case", "NUMBER", "Thank", "you", "for", "the", "PR", "NUMBER", "Unfortunately", "to", "avoid", "duplicating", "code", "we", "don", "t", "merge", "tutorials", "that", "change", "the", "model", "or", "dataset", "into", "the", "tutorials", "folder", "NUMBER", "If", "you", "d", "like", "you", "could", "add", "this", "into", "the", "examples", "folder", "but", "it", "will", "not", "be", "maintained", "NUMBER", "This", "looks", "like", "a", "problem", "with", "your", "model", "definition", "but", "it", "s", "hard", "to", "tell", "from", "the", "limited", "information", "you", "shared", "NUMBER", "Feel", "free", "to", "reopen", "if", "you", "be", "still", "facing", "this", "issue", "but", "please", "add", "context", "to", "your", "question", "e", "NUMBER", "g", "NUMBER", "code", "needed", "to", "reproduce", "the", "issue", "close", "because", "cannot", "be", "merge", "since", "repo", "you", "be", "pulling", "from", "was", "delete", "CNOCycle", "it", "looks", "like", "you", "be", "be", "wrapping", "the", "model", "with", "softmax", "NUMBER", "This", "be", "not", "going", "to", "work", "as", "the", "attack", "requires", "logits", "NUMBER", "Can", "you", "try", "remove", "the", "softmax", "layer", "carlini", "would", "you", "be", "able", "to", "follow", "up", "on", "this", "These", "images", "fail", "to", "download", "because", "they", "no", "longer", "exist", "NUMBER", "If", "you", "look", "at", "dev_dataset", "NUMBER", "csv", "and", "final_dataset", "NUMBER", "csv", "each", "image", "id", "maps", "to", "some", "URL", "of", "image", "on", "Flickr", "NUMBER", "If", "image", "be", "gone", "from", "Flickr", "download", "will", "fail", "NUMBER", "Kaggle", "packaged", "dev", "dataset", "and", "put", "into", "their", "website", "so", "you", "can", "try", "to", "download", "entire", "archive", "from", "there", "LINK", "brain", "nips", "NUMBER", "adversarial", "learning", "development", "set", "Other", "than", "that", "we", "can", "not", "do", "anything", "about", "fail", "downloads", "NUMBER", "Could", "you", "post", "this", "on", "the", "github", "for", "rl", "attack", "This", "looks", "like", "it", "be", "relate", "to", "the", "code", "implement", "there", "NUMBER", "Thanks", "for", "the", "report", "NUMBER", "Two", "things", "Could", "you", "post", "this", "to", "stackoverflow", "unless", "it", "be", "a", "reproducible", "bug", "LINK", "newest", "q", "cleverhans", "Could", "you", "paste", "a", "full", "stack", "trace", "so", "we", "can", "debug", "From", "looking", "quickly", "at", "your", "code", "you", "be", "use", "generate", "instead", "of", "generate_np", "the", "former", "be", "for", "symbolic", "tensors", "and", "the", "latter", "for", "numpy", "arrays", "My", "bad", "the", "title", "of", "the", "issue", "was", "ambiguous", "could", "you", "only", "change", "the", "name", "of", "the", "argument", "for", "the", "NUMBER", "new", "languages", "support", "in", "cleverhans", "v", "NUMBER", "jax", "eager", "and", "pytorch", "We", "don", "t", "need", "to", "update", "the", "exist", "APIs", "that", "will", "get", "deprecate", "when", "we", "increment", "the", "version", "number", "to", "v", "NUMBER", "Basically", "the", "only", "file", "that", "need", "to", "be", "modify", "be", "those", "in", "the", "future", "folders", "NUMBER", "Let", "me", "know", "if", "you", "need", "more", "details", "Yes", "all", "of", "their", "code", "should", "be", "in", "future", "folders", "Can", "you", "sign", "the", "CLA", "Thanks", "this", "looks", "like", "a", "change", "in", "the", "tf", "NUMBER", "keras", "API", "between", "NUMBER", "and", "NUMBER", "given", "that", "the", "example", "code", "you", "be", "including", "in", "your", "report", "be", "defining", "the", "model", "use", "tf", "NUMBER", "keras", "NUMBER", "Could", "you", "try", "your", "solution", "as", "well", "on", "the", "simple", "example", "include", "in", "the", "tutorials", "folder", "LINK", "_tutorials", "mnist_tutorial_keras", "NUMBER", "py", "and", "open", "up", "a", "PR", "afterwards", "I", "suspect", "something", "along", "the", "lines", "of", "the", "following", "in", "utils_keras", "NUMBER", "py", "show", "do", "the", "trick", "from", "distutils", "NUMBER", "version", "import", "LooseVersion", "NUMBER", "if", "LooseVersion", "tf", "NUMBER", "__version__", "TAG", "write", "How", "to", "store", "the", "CIFAR", "NUMBER", "model", "from", "the", "tutorial", "TAG", "I", "tried", "doing", "the", "same", "as", "in", "the", "MNIST", "tutorial", "by", "write", "the", "following", "after", "the", "model", "has", "be", "trained", "line", "NUMBER", "TAG", "with", "sess", "NUMBER", "as_default", "save", "cleanCIFAR", "NUMBER", "Model", "NUMBER", "joblib", "model", "The", "model", "trains", "succesfully", "but", "while", "trying", "to", "store", "it", "with", "the", "above", "code", "the", "following", "exception", "occur", "TypeError", "can", "t", "pickle", "_thread", "NUMBER", "RLock", "objects", "NUMBER", "The", "model", "from", "the", "MNIST", "tutorial", "be", "stored", "in", "exactly", "the", "same", "way", "pasting", "the", "above", "code", "after", "the", "training", "code", "NUMBER", "The", "only", "notable", "difference", "between", "the", "MNIST", "and", "CIFAR", "tutorials", "be", "the", "preprocessing", "at", "lines", "NUMBER", "NUMBER", "TAG", "NUMBER", "I", "suspect", "the", "exception", "be", "cause", "by", "the", "lambda", "TAG", "at", "lines", "NUMBER", "NUMBER", "since", "x", "and", "y", "be", "tf", "NUMBER", "float", "NUMBER", "s", "and", "Keras", "do", "not", "support", "serializing", "tf", "NUMBER", "Tensor", "Any", "suggestions", "for", "how", "to", "store", "the", "CIFAR", "model", "from", "this", "tutorial", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Closing", "this", "issue", "because", "NUMBER", "says", "how", "to", "fix", "it", "If", "you", "install", "via", "pip", "upgrade", "to", "NUMBER", "or", "if", "you", "install", "with", "git", "pull", "the", "latest", "master", "NUMBER", "This", "be", "a", "bug", "that", "was", "introduce", "recently", "and", "fix", "recently", "NUMBER", "Sounds", "like", "this", "was", "resolve", "if", "that", "s", "not", "the", "case", "feel", "free", "to", "reopen", "or", "make", "a", "PR", "that", "fix", "the", "issue", "NUMBER", "You", "can", "always", "download", "by", "manually", "cloning", "the", "early", "github", "tag", "NUMBER", "I", "don", "t", "actually", "know", "about", "pypi", "NUMBER", "npapernot", "should", "the", "old", "version", "actually", "be", "remove", "from", "pypi", "B", "Yassine", "this", "kind", "of", "slowdown", "isn", "t", "expected", "NUMBER", "Are", "you", "sure", "you", "re", "use", "the", "same", "model", "and", "the", "same", "configuration", "for", "the", "attack", "especially", "the", "number", "of", "iterations", "as", "before", "Has", "the", "attack", "moved", "from", "run", "on", "GPU", "to", "run", "on", "CPU", "I", "responded", "to", "B", "Yassine", "s", "email", "and", "just", "saw", "this", "NUMBER", "For", "everyone", "else", "reading", "this", "the", "old", "version", "be", "still", "in", "pypi", "current", "version", "v", "NUMBER", "LINK", "older", "version", "v", "NUMBER", "LINK", "Do", "you", "still", "want", "us", "to", "help", "debug", "the", "slowness", "in", "v", "NUMBER", "Yes", "please", "open", "another", "issue", "with", "more", "detail", "for", "the", "deepfool", "attack", "NUMBER", "Do", "you", "still", "want", "to", "try", "to", "debug", "the", "slowness", "issue", "The", "training", "module", "in", "CleverHans", "works", "with", "models", "defined", "use", "TensorFlow", "so", "you", "would", "have", "to", "redefine", "your", "random", "forest", "with", "TensorFlow", "first", "NUMBER", "The", "issue", "tracker", "be", "only", "for", "bug", "or", "feature", "request", "so", "I", "encourage", "you", "to", "ask", "your", "question", "or", "similar", "question", "on", "StackOverflow", "in", "the", "future", "NUMBER", "Something", "looks", "weird", "about", "the", "code", "snippet", "you", "pasted", "NUMBER", "You", "pass", "a", "variable", "call", "x_input", "to", "inception_v", "NUMBER", "but", "there", "be", "no", "x_input", "variable", "defined", "anywhere", "NUMBER", "My", "guess", "be", "that", "in", "your", "own", "repo", "x_input", "be", "a", "global", "variable", "NUMBER", "FGSM", "works", "because", "it", "only", "ever", "makes", "one", "call", "to", "fprop", "and", "on", "that", "call", "the", "x", "argument", "to", "fprop", "happens", "to", "be", "x_input", "NUMBER", "The", "iterative", "version", "fail", "because", "on", "the", "second", "iteration", "x", "be", "no", "longer", "the", "same", "as", "x_input", "and", "the", "loss", "has", "no", "derivative", "wrt", "x_input", "if", "you", "re", "use", "a", "stop_gradient", "on", "each", "iteration", "NUMBER", "If", "my", "guess", "be", "correct", "you", "should", "change", "logits", "end_points", "inception", "NUMBER", "inception_v", "NUMBER", "x_input", "to", "logits", "end_points", "inception", "NUMBER", "inception_v", "NUMBER", "x", "NUMBER", "Feel", "free", "to", "re", "open", "the", "issue", "if", "I", "have", "not", "guessed", "correctly", "NUMBER", "There", "were", "two", "bug", "here", "NUMBER", "If", "the", "early", "stopping", "threshold", "was", "set", "to", "NUMBER", "early", "stopping", "was", "disabled", "because", "this", "was", "treated", "as", "a", "value", "of", "False", "NUMBER", "NUMBER", "be", "probably", "the", "most", "important", "threshold", "because", "the", "loss", "be", "a", "hinge", "and", "a", "threshold", "of", "NUMBER", "guarantees", "misclassification", "NUMBER", "The", "early", "stopping", "loss", "was", "calculated", "before", "doing", "the", "projection", "so", "it", "could", "result", "in", "early", "stopping", "use", "a", "loss", "that", "wasn", "t", "actually", "attainable", "This", "PR", "include", "commit", "from", "LINK", "NUMBER", "The", "diff", "will", "be", "smaller", "after", "that", "be", "merge", "fprop", "returns", "a", "dictionary", "mapping", "from", "string", "names", "of", "layers", "to", "their", "TensorFlow", "values", "NUMBER", "Your", "InceptionResNetV", "NUMBER", "Model", "looks", "like", "it", "implement", "fprop", "but", "the", "dict", "it", "returns", "doesn", "t", "have", "a", "logits", "key", "in", "it", "NUMBER", "You", "need", "to", "change", "your", "fprop", "implementation", "to", "include", "the", "logits", "key", "NUMBER", "Begins", "to", "address", "NUMBER", "If", "you", "be", "tag", "below", "could", "you", "respond", "with", "your", "current", "affiliation", "aashish", "kumar", "aspratyush", "BrunoLopezGarcia", "BrunoLopezGarcia", "any", "update", "We", "will", "be", "push", "out", "a", "tech", "report", "without", "an", "affiliation", "otherwise", "That", "seems", "OK", "to", "me", "NUMBER", "Thanks", "for", "looking", "into", "this", "NUMBER", "At", "the", "time", "where", "we", "write", "the", "tutorial", "it", "was", "difficult", "to", "use", "Keras", "fit", "function", "because", "it", "then", "required", "that", "we", "pass", "Keras", "backend", "learning_phase", "to", "each", "sess", "NUMBER", "run", "in", "CleverHans", "for", "instance", "when", "calling", "model_eval", "or", "batch_eval", "NUMBER", "If", "this", "be", "not", "the", "case", "anymore", "it", "would", "be", "good", "to", "make", "the", "tutorial", "more", "Keras", "like", "so", "it", "be", "more", "accessible", "to", "Keras", "users", "NUMBER", "batzner", "would", "you", "still", "like", "to", "make", "a", "PR", "for", "this", "or", "should", "I", "close", "this", "issue", "for", "now", "You", "need", "to", "pass", "an", "instance", "of", "cleverhans", "NUMBER", "model", "NUMBER", "Model", "NUMBER", "For", "scikit", "learn", "models", "you", "ll", "need", "to", "make", "a", "wrapper", "class", "NUMBER", "You", "can", "look", "at", "KerasModelWrapper", "for", "an", "example", "NUMBER", "You", "need", "to", "write", "your", "own", "wrapper", "for", "scikits", "NUMBER", "learn", "NUMBER", "The", "KerasModelWrapper", "be", "only", "for", "Keras", "NUMBER", "Can", "you", "paste", "a", "complete", "script", "that", "we", "can", "run", "We", "have", "unit", "test", "that", "make", "sure", "CarliniWagnerL", "NUMBER", "successfully", "modifies", "the", "images", "in", "some", "cases", "so", "this", "must", "be", "something", "specific", "to", "your", "model", "etc", "NUMBER", "Could", "you", "post", "a", "script", "that", "we", "could", "actually", "run", "rather", "than", "isolated", "code", "snippets", "It", "s", "not", "too", "hard", "for", "me", "to", "debug", "something", "that", "runs", "but", "from", "this", "starting", "point", "I", "d", "spend", "more", "time", "setting", "up", "all", "the", "imports", "etc", "than", "actually", "debugging", "NUMBER", "I", "don", "t", "see", "anything", "conspicuously", "wrong", "in", "these", "code", "snippets", "NUMBER", "Three", "thoughts", "NUMBER", "It", "s", "better", "to", "work", "with", "logits", "than", "to", "work", "with", "probabilities", "NUMBER", "Your", "model", "be", "returning", "only", "probabilities", "which", "be", "probably", "not", "good", "for", "numerical", "stability", "NUMBER", "NUMBER", "Using", "a", "callable", "be", "deprecate", "NUMBER", "This", "shouldn", "t", "be", "the", "problem", "but", "there", "s", "a", "small", "chance", "there", "s", "a", "bug", "in", "the", "handle", "of", "callable", "objects", "NUMBER", "It", "s", "thus", "possible", "you", "could", "fix", "the", "problem", "by", "change", "InceptionModel", "to", "inherit", "from", "cleverhans", "NUMBER", "model", "NUMBER", "Model", "and", "implement", "get_logits", "rather", "than", "__call__", "NUMBER", "NUMBER", "cleverhans", "doesn", "t", "really", "officially", "support", "tf", "NUMBER", "anymore", "NUMBER", "The", "test", "only", "run", "on", "tf", "NUMBER", "and", "later", "NUMBER", "There", "s", "a", "small", "chance", "that", "update", "tensorflow", "will", "fix", "the", "issue", "NUMBER", "Can", "you", "please", "post", "a", "short", "executable", "script", "that", "causes", "the", "problem", "on", "your", "machine", "Before", "I", "run", "it", "on", "my", "end", "can", "you", "add", "abs_diff", "np", "NUMBER", "abs", "nontargeted_images", "images", "print", "abs_diff", "NUMBER", "min", "abs_diff", "NUMBER", "mean", "abs_diff", "NUMBER", "max", "and", "let", "me", "know", "what", "it", "prints", "Looks", "like", "the", "issue", "was", "resolve", "but", "feel", "free", "to", "reopen", "with", "a", "reproducible", "script", "if", "you", "be", "still", "facing", "an", "issue", "NUMBER", "Thanks", "AlexeyKurakin", "could", "you", "take", "a", "look", "It", "s", "the", "self", "NUMBER", "assertClose", "delta", "eps", "line", "which", "was", "actually", "touched", "by", "this", "PR", "that", "be", "fail", "NUMBER", "It", "looks", "like", "it", "s", "fail", "for", "both", "tf", "NUMBER", "build", "but", "none", "of", "the", "other", "build", "I", "restarted", "the", "test", "to", "see", "if", "it", "pass", "NUMBER", "Travis", "sometimes", "encounters", "issue", "report", "back", "the", "result", "of", "test", "Looks", "like", "the", "test", "commented", "out", "was", "the", "faulty", "one", "Thanks", "hopefully", "we", "will", "make", "progress", "towards", "migrating", "to", "CI", "with", "GPUs", "This", "broke", "generate", "NUMBER", "The", "new", "assert", "only", "works", "if", "eps", "be", "numpy", "tensorflow", "NUMBER", "If", "it", "s", "a", "float", "the", "new", "assert", "causes", "an", "AttributeError", "while", "trying", "to", "read", "its", "dtype", "NUMBER", "If", "you", "just", "want", "to", "get", "cleverhans", "work", "the", "easiest", "way", "be", "to", "use", "git", "clone", "and", "set", "your", "PYTHONPATH", "manually", "NUMBER", "That", "s", "how", "I", "always", "install", "NUMBER", "We", "know", "that", "pip", "tends", "to", "install", "cleverhans", "in", "weird", "locations", "that", "be", "not", "on", "the", "PYTHONPATH", "NUMBER", "None", "of", "the", "main", "cleverhans", "developers", "including", "myself", "know", "enough", "about", "pip", "or", "setup", "NUMBER", "py", "to", "tell", "exactly", "what", "be", "going", "wrong", "NUMBER", "If", "you", "could", "tell", "us", "where", "pip", "do", "put", "cleverhans", "on", "your", "Mac", "that", "might", "help", "us", "NUMBER", "Alternately", "if", "anyone", "who", "do", "understand", "pip", "and", "setup", "NUMBER", "py", "happens", "to", "see", "this", "issue", "we", "could", "use", "your", "help", "NUMBER", "Another", "possibility", "be", "that", "we", "have", "not", "update", "pypi", "in", "a", "long", "time", "because", "we", "update", "pypi", "when", "incrementing", "Cleverhans", "to", "NUMBER", "and", "for", "that", "reason", "the", "loss", "module", "might", "not", "have", "existed", "at", "that", "time", "NUMBER", "What", "happens", "if", "you", "run", "python", "c", "import", "cleverhans", "If", "that", "fail", "then", "the", "whole", "library", "be", "not", "install", "on", "the", "PYTHONPATH", "NUMBER", "How", "did", "you", "install", "the", "tutorials", "Did", "they", "come", "from", "the", "same", "pip", "command", "as", "the", "library", "Looks", "like", "this", "be", "relate", "to", "a", "recent", "issue", "encountered", "by", "carlini", "LINK", "carlini", "could", "you", "comment", "if", "that", "s", "the", "case", "Do", "you", "specifically", "need", "the", "jsma_batch", "function", "for", "your", "particular", "application", "or", "be", "you", "able", "to", "use", "jsma_symbolic", "It", "s", "also", "worth", "checking", "why", "pylint", "didn", "t", "catch", "this", "It", "seems", "you", "be", "trying", "to", "attack", "a", "model", "that", "was", "defined", "trained", "use", "sklearn", "NUMBER", "However", "CleverHans", "needs", "the", "model", "to", "be", "defined", "use", "TensorFlow", "so", "that", "it", "can", "have", "access", "to", "a", "symbolic", "representation", "of", "your", "model", "and", "differentiate", "through", "it", "automatically", "NUMBER", "If", "this", "be", "incorrect", "feel", "free", "to", "reopen", "this", "issue", "NUMBER", "The", "problem", "might", "be", "that", "we", "ve", "only", "ever", "use", "KerasModelWrapper", "with", "Sequential", "models", "in", "Keras", "NUMBER", "If", "you", "can", "provide", "a", "minimum", "fail", "script", "we", "might", "be", "able", "to", "patch", "the", "wrapper", "to", "support", "other", "kinds", "of", "Keras", "models", "On", "Wed", "Oct", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Jeredriq", "TAG", "write", "Its", "correct", "but", "do", "you", "know", "how", "can", "I", "turn", "sklearn", "examples", "into", "Tensorflow", "to", "have", "that", "access", "I", "tried", "use", "KerasClassifier", "but", "I", "get", "the", "same", "error", "AttributeError", "KerasClassifier", "object", "has", "no", "attribute", "layers", "NUMBER", "I", "m", "new", "to", "this", "topics", "so", "I", "believe", "there", "should", "be", "an", "easy", "way", "to", "do", "this", "instead", "of", "just", "write", "whole", "models", "via", "Tensorflow", "can", "you", "suggest", "a", "solution", "or", "do", "you", "have", "an", "example", "doing", "this", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Good", "idea", "Discussed", "offline", "change", "it", "to", "use", "the", "logits", "should", "not", "be", "a", "problem", "That", "s", "a", "different", "assert", "LINK", "L", "NUMBER", "It", "looks", "like", "we", "would", "have", "to", "import", "tempfile", "for", "this", "fix", "to", "work", "Indeed", "thanks", "Benefits", "would", "include", "Speed", "up", "test", "by", "configuring", "Dockerfile", "to", "use", "an", "image", "with", "everything", "preinstalled", "Use", "an", "SSD", "or", "an", "extra", "fast", "CPU", "Build", "everything", "in", "a", "RAM", "disk", "Closes", "NUMBER", "Closes", "NUMBER", "Closes", "NUMBER", "Sorry", "we", "should", "update", "the", "issue", "NUMBER", "We", "tried", "use", "Google", "Cloud", "Build", "and", "find", "that", "it", "was", "miss", "one", "feature", "we", "wanted", "NUMBER", "We", "re", "waiting", "for", "that", "feature", "to", "be", "release", "publicly", "and", "then", "we", "ll", "make", "the", "switch", "NUMBER", "Thank", "you", "for", "offering", "to", "help", "NUMBER", "We", "ll", "ping", "you", "again", "when", "the", "GCB", "feature", "be", "out", "NUMBER", "Closes", "NUMBER", "Thanks", "for", "update", "the", "comment", "it", "s", "much", "more", "clear", "now", "I", "would", "be", "in", "favor", "of", "moving", "to", "NUMBER", "and", "stop", "support", "one", "of", "the", "older", "TF", "version", "NUMBER", "What", "do", "you", "think", "goodfeli", "I", "would", "say", "drop", "the", "oldest", "one", "so", "NUMBER", "and", "keep", "NUMBER", "until", "we", "switch", "to", "the", "next", "TF", "version", "Just", "talked", "to", "Ian", "in", "real", "life", "and", "he", "agrees", "on", "dropping", "NUMBER", "and", "keep", "NUMBER", "I", "think", "the", "test", "be", "not", "starting", "here", "because", "there", "be", "conflict", "with", "the", "main", "branch", "This", "still", "isn", "t", "showing", "up", "right", "I", "m", "not", "sure", "exactly", "why", "NUMBER", "Could", "you", "try", "make", "completely", "new", "commit", "for", "the", "code", "or", "be", "that", "a", "lot", "of", "work", "Let", "s", "wait", "for", "NUMBER", "to", "be", "merge", "so", "we", "don", "t", "have", "to", "refactor", "it", "Let", "s", "wait", "for", "NUMBER", "to", "be", "merge", "so", "we", "don", "t", "have", "to", "refactor", "it", "Let", "s", "wait", "for", "NUMBER", "to", "be", "merge", "so", "we", "don", "t", "have", "to", "refactor", "it", "Yes", "that", "would", "be", "nice", "to", "make", "sure", "that", "future", "change", "to", "compat", "NUMBER", "py", "don", "t", "break", "the", "change", "made", "here", "NUMBER", "Thanks", "On", "Thu", "Oct", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "WindQAQ", "TAG", "write", "WindQAQ", "commented", "on", "this", "pull", "request", "NUMBER", "In", "cleverhans", "compat", "NUMBER", "py", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "def", "reduce_mean", "input_tensor", "axis", "None", "keepdims", "None", "reduction_indices", "reduction_indices", "def", "reduce_prod", "input_tensor", "axis", "None", "keepdims", "None", "name", "None", "reduction_indices", "None", "Wrapper", "around", "the", "tf", "NUMBER", "reduce_prod", "to", "handle", "argument", "keep_dims", "return", "reduce_function", "tf", "NUMBER", "reduce_mean", "input_tensor", "axis", "axis", "It", "seems", "that", "the", "random", "generate", "samples", "will", "not", "trigger", "adjusted", "stddev", "so", "the", "test", "pass", "even", "if", "this", "be", "wrong", "NUMBER", "Maybe", "I", "can", "come", "up", "with", "some", "dedicated", "cases", "for", "this", "You", "be", "receiving", "this", "because", "you", "commented", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Sorry", "I", "just", "realized", "why", "the", "test", "were", "not", "fail", "they", "were", "add", "to", "a", "different", "non", "monitored", "directory", "NUMBER", "Can", "you", "move", "them", "to", "the", "tests_tf", "folder", "You", "can", "find", "an", "example", "test", "in", "tests_tf", "test_attacks", "NUMBER", "py", "for", "instance", "NUMBER", "Sorry", "again", "for", "not", "noticing", "this", "earlier", "NUMBER", "Tests", "be", "fail", "due", "to", "a", "format", "issue", "cleverhans", "dataset", "NUMBER", "py", "NUMBER", "W", "NUMBER", "unuse", "variable", "maybe_download_file", "Unused", "variable", "urljoin", "The", "last", "item", "remaining", "be", "to", "remove", "the", "TODO", "see", "comment", "above", "NUMBER", "Once", "this", "be", "fix", "we", "can", "merge", "the", "PR", "I", "m", "really", "not", "sure", "why", "Travis", "do", "not", "want", "to", "build", "this", "PR", "I", "disabled", "the", "test", "because", "it", "was", "flaky", "and", "do", "not", "seem", "to", "be", "make", "the", "right", "calls", "to", "the", "model", "interface", "The", "old", "test", "be", "here", "LINK", "AlexeyKurakin", "Could", "you", "push", "a", "dummy", "commit", "or", "reopen", "this", "as", "a", "new", "PR", "I", "be", "not", "able", "to", "trigger", "Travis", "by", "closing", "reopening", "I", "close", "and", "reopened", "the", "PR", "to", "trigger", "a", "new", "Travis", "build", "NUMBER", "No", "it", "just", "broke", "because", "I", "push", "a", "minor", "fix", "to", "your", "branch", "so", "we", "can", "still", "merge", "NUMBER", "Thanks", "for", "ask", "_pad_img", "could", "be", "rewritten", "to", "operate", "on", "a", "whole", "batch", "and", "avoid", "needing", "a", "map_fn", "NUMBER", "Check", "how", "this", "affects", "runtime", "of", "CIFAR", "NUMBER", "training", "pipeline", "NUMBER", "After", "some", "research", "last", "Friday", "we", "concluded", "this", "would", "require", "moving", "to", "Google", "Cloud", "Build", "and", "be", "documented", "in", "NUMBER", "Those", "be", "both", "good", "suggestions", "NUMBER", "I", "just", "push", "the", "change", "but", "had", "to", "create", "a", "new", "file", "check_installation", "NUMBER", "py", "otherwise", "both", "paths", "would", "be", "equal", "Agreed", "thanks", "for", "the", "suggestion", "I", "push", "the", "update", "Reminder", "wait", "for", "NUMBER", "to", "be", "merge", "and", "change", "base", "branch", "to", "master", "For", "now", "I", "be", "just", "open", "this", "to", "see", "which", "test", "fail", "NUMBER", "Then", "I", "ll", "make", "those", "test", "pass", "NUMBER", "I", "m", "not", "sure", "about", "this", "specific", "use", "of", "kwargs", "but", "in", "a", "lot", "of", "places", "we", "re", "use", "kwargs", "as", "an", "explicit", "non", "interface", "NUMBER", "For", "example", "you", "can", "pass", "basically", "anything", "to", "MLP", "NUMBER", "fprop", "and", "maybe", "some", "Layer", "subclass", "will", "pick", "it", "up", "and", "maybe", "nothing", "will", "pick", "it", "up", "NUMBER", "The", "upside", "be", "that", "it", "makes", "it", "easy", "to", "make", "exotic", "new", "layers", "that", "behave", "differently", "in", "different", "contexts", "without", "needing", "to", "make", "the", "MLP", "class", "aware", "of", "all", "those", "different", "contexts", "NUMBER", "The", "downside", "be", "that", "there", "isn", "t", "any", "way", "I", "m", "aware", "of", "to", "detect", "error", "like", "this", "kind", "of", "typo", "NUMBER", "If", "we", "can", "come", "up", "with", "a", "better", "design", "we", "definitely", "should", "but", "it", "s", "not", "as", "simple", "as", "just", "add", "a", "one", "line", "check", "somewhere", "NUMBER", "Oh", "and", "we", "should", "check", "whether", "it", "be", "feasible", "to", "check", "the", "kwargs", "for", "Attack", "NUMBER", "generate", "I", "m", "not", "sure", "if", "that", "specific", "use", "of", "kwargs", "be", "one", "of", "the", "ones", "that", "s", "hard", "to", "validate", "NUMBER", "Since", "self", "NUMBER", "back", "be", "not", "use", "I", "remove", "it", "NUMBER", "NUMBER", "I", "commented", "this", "test", "out", "because", "it", "be", "not", "implement", "correctly", "e", "NUMBER", "g", "NUMBER", "it", "pass", "a", "numpy", "array", "to", "a", "CleverHans", "model", "and", "then", "runs", "it", "in", "a", "session", "NUMBER", "I", "created", "NUMBER", "to", "make", "sure", "we", "don", "t", "forget", "to", "fix", "the", "test", "Thanks", "for", "the", "feedback", "NUMBER", "I", "remove", "the", "test", "and", "add", "a", "pointer", "to", "the", "commit", "in", "the", "issue", "NUMBER", "I", "m", "not", "sure", "why", "the", "test", "was", "not", "fail", "before", "it", "was", "sometimes", "giving", "me", "a", "different", "outcome", "after", "run", "it", "multiple", "times", "NUMBER", "This", "be", "because", "the", "backend", "options", "were", "tensorflow", "and", "theano", "and", "we", "no", "longer", "support", "theano", "right", "yenchenlin", "nottombrown", "be", "this", "ready", "to", "merge", "Yes", "feel", "free", "to", "merge", "after", "test", "pass", "since", "this", "was", "already", "review", "by", "yenchenlin", "Closes", "NUMBER", "We", "should", "move", "test_format", "NUMBER", "py", "to", "test", "different", "file", "on", "different", "travis", "build", "NUMBER", "Specifically", "we", "should", "turn", "E", "NUMBER", "back", "on", "so", "that", "it", "will", "fail", "if", "it", "can", "t", "import", "a", "dependency", "and", "run", "the", "pytorch", "test", "in", "the", "pytorch", "travis", "build", "tensorflow", "test", "in", "the", "tensorflow", "travis", "build", "NUMBER", "This", "PR", "switches", "to", "TensorFlow", "style", "i", "NUMBER", "e", "NUMBER", "PEP", "NUMBER", "with", "NUMBER", "spaces", "NUMBER", "Most", "of", "this", "was", "do", "automatically", "with", "a", "script", "NUMBER", "The", "script", "was", "add", "in", "commit", "autopep", "NUMBER", "_all", "NUMBER", "py", "The", "script", "to", "turn", "the", "whole", "library", "tf", "style", "The", "script", "was", "run", "in", "commit", "run", "autoep", "NUMBER", "_all", "NUMBER", "py", "NUMBER", "This", "makes", "the", "PR", "as", "a", "whole", "have", "a", "huge", "diff", "but", "the", "diffs", "for", "the", "other", "individual", "commit", "should", "be", "OK", "to", "read", "NUMBER", "The", "remaining", "commit", "be", "based", "on", "remove", "the", "old", "test", "based", "on", "PyCodeStyle", "and", "setting", "up", "a", "new", "test", "based", "on", "pylint", "NUMBER", "As", "far", "as", "I", "can", "tell", "PyCodeStyle", "do", "not", "support", "use", "NUMBER", "spaces", "for", "tab", "NUMBER", "Good", "news", "pylint", "be", "very", "thorough", "NUMBER", "It", "actually", "imports", "the", "python", "file", "and", "catches", "many", "error", "that", "PyCodeStyle", "was", "not", "able", "to", "with", "text", "analysis", "alone", "NUMBER", "Bad", "news", "pylint", "be", "very", "slow", "NUMBER", "examples", "linear_extrapolation_plot_example", "NUMBER", "py", "turned", "out", "to", "be", "broken", "enough", "that", "I", "didn", "t", "think", "it", "was", "worthy", "fix", "partly", "because", "it", "never", "had", "test", "NUMBER", "I", "ll", "probably", "just", "write", "a", "properly", "test", "version", "from", "scratch", "sometime", "soon", "NUMBER", "I", "m", "planning", "to", "start", "a", "plotting", "module", "within", "the", "next", "week", "or", "so", "NUMBER", "Thanks", "Is", "it", "any", "faster", "if", "we", "do", "one", "command", "line", "call", "and", "pass", "all", "the", "file", "in", "one", "call", "Does", "this", "prevent", "repeated", "imports", "Is", "there", "a", "way", "to", "configure", "it", "to", "do", "shallower", "analysis", "where", "it", "doesn", "t", "need", "to", "import", "everything", "I", "m", "not", "sure", "yet", "how", "we", "would", "keep", "track", "of", "this", "kind", "of", "persistent", "state", "on", "travis", "but", "maybe", "we", "could", "use", "a", "caching", "system", "where", "we", "only", "run", "pylint", "on", "a", "file", "if", "the", "md", "NUMBER", "sum", "of", "the", "file", "concatenated", "with", "pylintrc", "has", "change", "since", "the", "last", "time", "it", "pass", "pylint", "NUMBER", "Previous", "comment", "be", "wrong", "we", "can", "t", "hash", "an", "individual", "file", "because", "other", "file", "might", "have", "change", "interfaces", "NUMBER", "e", "NUMBER", "g", "NUMBER", "if", "file", "A", "says", "import", "file_b", "foo", "but", "file_b", "now", "has", "def", "foo", "x", "file", "A", "be", "wrong", "not", "to", "supply", "an", "argument", "to", "foo", "NUMBER", "Can", "we", "speed", "it", "up", "with", "multithreading", "Everything", "runs", "in", "a", "subprocess", "anyway", "NUMBER", "I", "O", "be", "probably", "a", "reasonable", "amount", "of", "the", "work", "so", "use", "multiple", "processes", "may", "help", "even", "on", "a", "single", "core", "NUMBER", "It", "s", "slow", "locally", "too", "I", "m", "looking", "into", "this", "a", "bit", "already", "NUMBER", "One", "thing", "I", "ve", "learned", "we", "want", "to", "call", "pylint", "on", "multiple", "file", "for", "correctness", "not", "just", "speed", "NUMBER", "Run", "on", "multiple", "file", "at", "once", "it", "can", "detect", "additional", "error", "like", "cyclic", "imports", "and", "code", "duplicate", "across", "file", "NUMBER", "Also", "tentatively", "it", "looks", "like", "there", "be", "a", "speed", "benefit", "NUMBER", "On", "my", "laptop", "I", "run", "pylint", "on", "two", "different", "file", "NUMBER", "It", "takes", "about", "NUMBER", "s", "to", "run", "each", "file", "individually", "but", "it", "still", "takes", "about", "NUMBER", "s", "to", "run", "both", "file", "in", "one", "call", "NUMBER", "I", "think", "the", "runtime", "be", "dominated", "by", "importing", "tensorflow", "NUMBER", "I", "need", "to", "check", "that", "this", "scales", "to", "multiple", "file", "travis", "etc", "NUMBER", "I", "don", "t", "think", "that", "google", "cloud", "build", "would", "speed", "up", "pylint", "in", "particular", "because", "pylint", "turns", "out", "not", "to", "be", "very", "parallelizable", "NUMBER", "I", "ll", "open", "a", "separate", "issue", "to", "look", "into", "use", "Google", "Cloud", "Build", "After", "NUMBER", "it", "might", "be", "possible", "to", "close", "this", "issue", "but", "I", "want", "to", "check", "a", "few", "things", "NUMBER", "It", "looks", "like", "travis", "test", "aren", "t", "load", "balanced", "very", "well", "NUMBER", "If", "we", "look", "into", "it", "more", "and", "that", "s", "accurate", "the", "pylint", "test", "might", "be", "a", "big", "part", "of", "that", "NUMBER", "We", "might", "want", "to", "divide", "them", "up", "to", "different", "travis", "workers", "NUMBER", "Other", "than", "that", "I", "don", "t", "think", "this", "be", "low", "hanging", "fruit", "anymore", "NUMBER", "I", "change", "the", "title", "to", "be", "more", "clear", "because", "there", "be", "many", "things", "we", "might", "want", "to", "visualize", "NUMBER", "For", "right", "now", "there", "be", "a", "few", "things", "you", "can", "do", "as", "an", "end", "user", "It", "s", "possible", "to", "set", "up", "tensorboard", "support", "somehow", "yaq", "NUMBER", "You", "can", "write", "your", "own", "evaluate", "callback", "to", "write", "to", "a", "history", "object", "of", "your", "choice", "At", "some", "point", "we", "might", "make", "one", "or", "both", "of", "these", "a", "standard", "library", "feature", "NUMBER", "That", "feature", "doesn", "t", "exist", "yet", "NUMBER", "If", "you", "d", "like", "to", "add", "precision", "recall", "metrics", "for", "detectors", "you", "re", "welcome", "to", "NUMBER", "So", "far", "we", "actually", "don", "t", "have", "any", "detector", "based", "functionality", "that", "I", "know", "of", "though", "NUMBER", "I", "have", "implement", "accuracy", "coverage", "metrics", "for", "multiclass", "classifiers", "and", "will", "send", "a", "pull", "request", "soon", "NUMBER", "Some", "of", "this", "has", "be", "implement", "by", "Ian", "in", "LINK", "LINK", "I", "ll", "close", "this", "because", "we", "be", "trying", "to", "keep", "CleverHans", "to", "core", "features", "needed", "to", "benchmark", "models", "rather", "than", "visualize", "learning", "curves", "NUMBER", "Maybe", "I", "m", "clashing", "with", "a", "culture", "of", "how", "to", "use", "loggers", "that", "I", "m", "not", "aware", "NUMBER", "If", "so", "let", "me", "know", "NUMBER", "My", "thinking", "about", "this", "be", "based", "on", "what", "I", "as", "a", "user", "want", "to", "happen", "and", "that", "might", "be", "different", "from", "a", "convention", "I", "don", "t", "know", "I", "m", "meant", "to", "follow", "NUMBER", "As", "a", "user", "I", "want", "cleverhans", "to", "print", "out", "results", "by", "default", "NUMBER", "I", "don", "t", "want", "to", "have", "to", "to", "specifically", "ask", "to", "see", "the", "results", "NUMBER", "When", "I", "m", "tuning", "a", "model", "one", "of", "the", "most", "important", "results", "be", "how", "fast", "it", "runs", "so", "I", "definitely", "want", "to", "see", "the", "epoch", "message", "printed", "out", "NUMBER", "Given", "that", "I", "want", "to", "see", "these", "message", "by", "default", "there", "s", "a", "question", "of", "how", "cleverhans", "should", "log", "them", "NUMBER", "Nothing", "has", "gone", "wrong", "so", "they", "shouldn", "t", "be", "logged", "as", "warning", "NUMBER", "This", "means", "they", "can", "be", "logged", "at", "most", "as", "info", "NUMBER", "This", "means", "to", "satisfy", "my", "preferences", "as", "a", "user", "the", "logger", "should", "show", "info", "message", "by", "default", "NUMBER", "If", "cleverhans", "code", "be", "going", "to", "log", "a", "lot", "of", "stuff", "the", "user", "doesn", "t", "want", "to", "see", "by", "default", "that", "can", "be", "do", "with", "logging", "NUMBER", "debug", "NUMBER", "In", "terms", "of", "conventions", "and", "matching", "the", "behavior", "of", "other", "software", "the", "conventions", "I", "m", "most", "familiar", "with", "be", "tensorflow", "keras", "which", "print", "quite", "a", "lot", "by", "default", "LINK", "This", "means", "most", "of", "my", "scripts", "start", "with", "a", "lot", "of", "boilerplate", "telling", "tensorflow", "to", "print", "less", "than", "it", "prints", "by", "default", "and", "then", "also", "telling", "cleverhans", "to", "print", "more", "than", "it", "do", "by", "default", "NUMBER", "Can", "you", "just", "post", "a", "NUMBER", "py", "file", "as", "an", "attachment", "or", "link", "to", "a", "gist", "that", "we", "can", "just", "run", "to", "reproduce", "the", "problem", "Can", "you", "please", "post", "the", "exact", "code", "you", "re", "run", "You", "can", "attach", "a", "NUMBER", "py", "file", "to", "your", "comment", "or", "you", "can", "link", "to", "a", "gist", "I", "confirm", "that", "just", "run", "python", "mnist_blackbox", "NUMBER", "py", "be", "sufficient", "to", "cause", "this", "bug", "NUMBER", "When", "we", "fix", "this", "bug", "we", "should", "start", "by", "add", "a", "test", "that", "fail", "then", "edit", "the", "tutorial", "until", "the", "test", "pass", "NUMBER", "I", "restarted", "the", "Travis", "jobs", "that", "fail", "to", "initialize", "It", "s", "likely", "to", "be", "a", "bug", "in", "KerasModelWrapper", "NUMBER", "Have", "you", "tried", "run", "the", "keras", "Sequential", "model", "on", "one", "batch", "and", "checking", "that", "its", "output", "be", "the", "same", "as", "the", "output", "of", "KerasModelWrapper", "Is", "there", "any", "chance", "that", "Keras", "has", "made", "its", "own", "session", "in", "the", "backend", "CleverHans", "might", "be", "reading", "the", "values", "of", "the", "model", "s", "Variables", "out", "of", "one", "Session", "while", "Keras", "reads", "them", "out", "of", "another", "NUMBER", "What", "version", "of", "keras", "be", "you", "run", "I", "m", "use", "keras", "NUMBER", "and", "when", "I", "run", "your", "code", "I", "get", "an", "exception", "when", "trying", "to", "access", "scores", "loss", "NUMBER", "For", "me", "scores", "be", "a", "list", "NUMBER", "Your", "sess", "be", "never", "pass", "to", "Keras", "NUMBER", "Also", "you", "run", "sess", "NUMBER", "run", "init_op", "after", "you", "trained", "the", "model", "NUMBER", "This", "should", "randomize", "all", "the", "weights", "NUMBER", "Because", "the", "Keras", "model", "still", "gets", "a", "good", "score", "afterward", "it", "must", "be", "use", "the", "weights", "from", "a", "different", "session", "NUMBER", "This", "means", "you", "re", "run", "Keras", "and", "CleverHans", "in", "different", "tf", "sessions", "and", "you", "re", "giving", "CleverHans", "a", "session", "where", "the", "weights", "were", "randomly", "initialized", "rather", "than", "trained", "NUMBER", "To", "fix", "it", "you", "should", "run", "keras", "NUMBER", "backend", "NUMBER", "set_session", "sess", "right", "after", "you", "create", "sess", "like", "be", "do", "in", "cleverhans_tutorials", "mnist_tutorial_keras", "NUMBER", "py", "NUMBER", "make", "a", "test", "that", "crawls", "the", "library", "and", "finds", "model", "objects", "and", "runs", "standard", "test", "on", "them", "the", "first", "test", "I", "propose", "be", "a", "test", "that", "all", "trainable", "Variables", "created", "by", "the", "model", "appear", "in", "the", "model", "s", "get_params", "NUMBER", "See", "if", "this", "fix", "the", "issue", "where", "the", "tutorial", "gets", "slightly", "slower", "each", "epoch", "Note", "that", "we", "should", "not", "deprecate", "single", "GPU", "eval", "nor", "should", "we", "update", "the", "tutorials", "to", "use", "multi", "GPU", "in", "all", "cases", "NUMBER", "The", "larger", "graph", "for", "multi", "GPU", "means", "that", "the", "first", "few", "runs", "of", "multi", "GPU", "be", "slow", "so", "it", "s", "only", "worth", "replacing", "use", "cases", "that", "have", "enough", "runs", "to", "justify", "the", "high", "startup", "cost", "NUMBER", "Thanks", "I", "left", "the", "dropout_dict", "feature", "in", "so", "users", "can", "still", "change", "the", "dropout", "include_prob", "on", "each", "fprop", "if", "they", "need", "to", "e", "NUMBER", "g", "NUMBER", "if", "it", "helps", "to", "answer", "a", "research", "question", "NUMBER", "Most", "users", "can", "ignore", "it", "and", "just", "use", "the", "dropout", "bool", "though", "NUMBER", "A", "pytorch", "test", "fail", "NUMBER", "It", "seems", "unlikely", "that", "this", "PR", "affects", "the", "pytorch", "test", "so", "I", "think", "it", "was", "just", "a", "flaky", "test", "NUMBER", "I", "restarted", "that", "worker", "NUMBER", "All", "test", "pass", "ready", "to", "re", "review", "mehdijj", "be", "you", "use", "generate", "or", "generate_np", "I", "think", "that", "despite", "the", "bug", "it", "should", "still", "have", "an", "effect", "when", "you", "use", "generate", "NUMBER", "We", "should", "still", "fix", "the", "bug", "I", "just", "want", "to", "make", "sure", "I", "understand", "what", "s", "going", "on", "It", "s", "common", "for", "users", "to", "install", "two", "version", "of", "CleverHans", "and", "get", "confused", "when", "they", "run", "the", "tutorial", "from", "a", "new", "version", "and", "it", "fail", "to", "load", "new", "classes", "from", "the", "old", "version", "that", "takes", "precedence", "in", "their", "PYTHONPATH", "NUMBER", "We", "could", "cut", "down", "on", "this", "confusion", "a", "bit", "if", "we", "add", "a", "check", "from", "inside", "the", "CleverHans", "tutorials", "that", "the", "cleverhans", "module", "be", "in", "the", "same", "directory", "as", "the", "tutorial", "it", "be", "imported", "from", "NUMBER", "You", "probably", "have", "two", "copies", "of", "CleverHans", "install", "NUMBER", "One", "be", "in", "your", "PYTHONPATH", "and", "gets", "imported", "when", "you", "execute", "import", "statements", "from", "inside", "the", "Python", "interpreter", "NUMBER", "The", "other", "one", "be", "not", "in", "your", "PYTHONPATH", "or", "doesn", "t", "have", "top", "priority", "within", "your", "PYTHONPATH", "be", "the", "newer", "version", "and", "be", "the", "version", "you", "re", "run", "NUMBER", "Using", "the", "mean", "value", "rather", "than", "a", "sum", "makes", "the", "loss", "invariant", "to", "batch", "size", "NUMBER", "Invariance", "to", "batch", "size", "be", "nice", "if", "we", "want", "to", "search", "over", "hyperparameters", "or", "if", "we", "want", "to", "do", "synchronous", "multi", "GPU", "training", "since", "the", "size", "of", "the", "batch", "received", "by", "a", "single", "GPU", "be", "inverse", "proportional", "to", "the", "number", "of", "GPUs", "NUMBER", "I", "realized", "we", "shouldn", "t", "merge", "this", "yet", "because", "I", "ought", "to", "update", "the", "tutorials", "to", "not", "get", "deprecation", "warnings", "everywhere", "NUMBER", "Will", "do", "so", "shortly", "This", "needed", "a", "rebase", "after", "we", "merge", "WeightDecay", "so", "the", "review", "history", "might", "get", "confusing", "NUMBER", "I", "m", "about", "to", "do", "a", "push", "f", "OK", "I", "fix", "the", "tutorials", "so", "it", "be", "ready", "to", "review", "again", "NUMBER", "Note", "that", "I", "had", "to", "increase", "the", "attack", "learning", "rate", "to", "make", "the", "CW", "tutorial", "pass", "NUMBER", "That", "be", "a", "little", "bit", "strange", "I", "would", "have", "expected", "that", "Adam", "be", "scale", "invariant", "enough", "that", "I", "would", "need", "to", "make", "no", "change", "or", "that", "I", "would", "need", "to", "change", "the", "training", "learning", "rate", "NUMBER", "I", "think", "the", "most", "likely", "explanation", "be", "that", "the", "trained", "model", "change", "slightly", "due", "to", "the", "different", "scale", "of", "the", "loss", "NUMBER", "Adam", "be", "partly", "but", "not", "completely", "invariant", "to", "rescaling", "of", "the", "loss", "NUMBER", "Under", "this", "hypothesis", "the", "model", "as", "configured", "for", "the", "test", "ended", "up", "be", "just", "slightly", "more", "robust", "to", "adversarial", "examples", "it", "was", "only", "one", "example", "that", "fail", "NUMBER", "I", "don", "t", "think", "there", "be", "a", "good", "way", "to", "keep", "the", "model", "completely", "unchanged", "NUMBER", "For", "example", "we", "can", "t", "just", "scale", "up", "the", "learning", "rate", "by", "a", "factor", "of", "batch_size", "because", "Adam", "be", "already", "use", "the", "second", "moments", "of", "the", "gradient", "to", "compensate", "for", "that", "scaling", "factor", "NUMBER", "I", "m", "not", "very", "familiar", "with", "tf", "Eager", "but", "be", "it", "really", "necessary", "to", "have", "totally", "parallel", "version", "of", "every", "class", "to", "work", "with", "Eager", "david", "berthelot", "nottombrown", "Do", "you", "know", "if", "there", "s", "a", "cleaner", "way", "of", "support", "Eager", "Even", "if", "it", "be", "I", "don", "t", "think", "we", "need", "TFE", "in", "the", "name", "of", "every", "class", "NUMBER", "Just", "having", "the", "classes", "live", "in", "attacks_tfe", "should", "be", "enough", "NUMBER", "model_loss", "currently", "issue", "a", "deprecation", "warning", "but", "the", "deprecation", "warning", "doesn", "t", "specify", "when", "the", "function", "will", "be", "remove", "or", "what", "you", "should", "use", "instead", "Can", "you", "tell", "us", "more", "about", "your", "setup", "Operating", "system", "etc", "NUMBER", "Do", "you", "have", "no", "tmp", "directory", "Maybe", "we", "should", "use", "this", "instead", "LINK", "tempfile", "NUMBER", "TemporaryDirectory", "hi", "yenchenlin", "will", "you", "be", "able", "to", "finish", "this", "PR", "npapernot", "what", "s", "the", "status", "of", "this", "PR", "I", "will", "finish", "this", "PR", "NUMBER", "Closing", "this", "so", "I", "can", "open", "another", "copy", "of", "it", "from", "my", "own", "fork", "I", "don", "t", "know", "anything", "about", "it", "I", "just", "copied", "it", "from", "elsewhere", "after", "be", "asked", "during", "review", "to", "add", "deprecation", "warnings", "NUMBER", "It", "seems", "strange", "to", "have", "a", "hardcoded", "range", "from", "NUMBER", "to", "NUMBER", "For", "other", "attacks", "we", "have", "clip_min", "and", "clip_max", "parameters", "and", "it", "s", "also", "possible", "to", "leave", "the", "clipping", "turned", "off", "NUMBER", "Is", "there", "a", "reason", "we", "can", "t", "have", "this", "attack", "match", "the", "others", "I", "would", "vote", "to", "test", "it", "on", "a", "small", "subset", "of", "MNIST", "e", "NUMBER", "g", "NUMBER", "one", "small", "minibatch", "NUMBER", "Closed", "for", "lack", "of", "discussion", "NUMBER", "Happy", "to", "address", "the", "issue", "if", "you", "can", "report", "more", "detail", "on", "how", "to", "reproduce", "it", "NUMBER", "Yes", "I", "think", "that", "would", "be", "great", "to", "add", "NUMBER", "On", "Fri", "Aug", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Yen", "TAG", "write", "As", "shown", "by", "some", "recent", "papers", "NUMBER", "NUMBER", "simple", "transformations", "be", "sufficient", "to", "fool", "neural", "network", "based", "vision", "models", "NUMBER", "Notably", "worst", "of", "NUMBER", "attack", "describe", "in", "NUMBER", "can", "serve", "as", "a", "good", "baseline", "for", "black", "box", "attack", "NUMBER", "Do", "you", "think", "it", "s", "appropriate", "for", "cleverhans", "to", "include", "these", "transformation", "based", "attacks", "Here", "TAG", "be", "an", "ipython", "notebook", "demonstrating", "the", "effectiveness", "of", "these", "attack", "NUMBER", "I", "ve", "test", "the", "model", "in", "mnist_tutorial_tf", "NUMBER", "py", "and", "find", "that", "accuracy", "on", "legitimate", "examples", "NUMBER", "accuracy", "on", "transformed", "examples", "NUMBER", "where", "the", "transformation", "consists", "of", "i", "NUMBER", "degree", "rotation", "and", "ii", "NUMBER", "translation", "along", "each", "direction", "NUMBER", "image", "screen", "shot", "NUMBER", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "NUMBER", "be", "TAG", "NUMBER", "A", "Rotation", "and", "a", "Translation", "Suffice", "Fooling", "CNNs", "with", "Simple", "Transformations", "Engstrom", "et", "al", "NUMBER", "NUMBER", "Spatially", "Transformed", "Adversarial", "Examples", "Xiao", "et", "al", "NUMBER", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Thanks", "Can", "you", "post", "an", "actual", "code", "snippet", "that", "fail", "Thanks", "Thanks", "Looks", "like", "an", "update", "to", "Cloud", "broke", "the", "build", "NUMBER", "I", "m", "fix", "it", "here", "LINK", "The", "build", "be", "fix", "now", "NUMBER", "I", "restarted", "the", "build", "for", "this", "PR", "NUMBER", "I", "think", "not", "just", "trying", "to", "get", "the", "test", "to", "pass", "Looks", "like", "the", "Travis", "build", "doesn", "t", "specify", "a", "version", "for", "google", "cloud", "NUMBER", "I", "think", "this", "project", "get", "update", "with", "an", "API", "breaking", "change", "recently", "NUMBER", "I", "m", "trying", "to", "fix", "this", "here", "LINK", "The", "build", "be", "fix", "now", "NUMBER", "I", "restarted", "the", "build", "for", "this", "PR", "NUMBER", "carlini", "can", "you", "review", "this", "one", "nottombrown", "remember", "to", "review", "this", "I", "haven", "t", "use", "pytorch", "so", "I", "m", "not", "qualified", "Thanks", "NUMBER", "It", "looks", "like", "this", "matches", "what", "be", "do", "in", "tensorflow", "tensorflow", "Is", "this", "different", "from", "NUMBER", "Also", "the", "test", "be", "fail", "The", "PEP", "NUMBER", "test", "be", "fail", "Needs", "a", "rebase", "Thanks", "This", "looks", "good", "NUMBER", "Let", "s", "just", "put", "a", "specific", "date", "on", "the", "deprecation", "warning", "NUMBER", "david", "berthelot", "can", "you", "check", "this", "This", "fail", "the", "PEP", "NUMBER", "test", "Do", "you", "have", "a", "short", "script", "we", "could", "run", "that", "causes", "the", "problem", "Thanks", "The", "pull", "request", "looks", "good", "NUMBER", "Can", "you", "please", "sign", "the", "CLA", "Yes", "especially", "since", "this", "kind", "of", "code", "has", "frequently", "had", "bug", "in", "the", "past", "we", "shouldn", "t", "duplicate", "it", "NUMBER", "Should", "re", "run", "the", "test", "after", "merge", "LINK", "Do", "you", "know", "how", "this", "compares", "to", "the", "test", "we", "re", "already", "run", "in", "devtools", "test", "test_format", "Do", "we", "just", "need", "to", "change", "a", "flag", "in", "there", "I", "see", "no", "problem", "with", "run", "multiple", "test", "if", "they", "run", "efficiently", "and", "they", "discover", "different", "issue", "NUMBER", "if", "we", "have", "a", "good", "understanding", "of", "what", "both", "test", "be", "doing", "and", "decide", "that", "the", "right", "solution", "be", "to", "run", "both", "then", "sure", "NUMBER", "What", "I", "want", "to", "do", "be", "make", "sure", "that", "we", "understand", "all", "the", "test", "be", "doing", "and", "that", "we", "make", "conscious", "decisions", "based", "on", "knowledge", "of", "the", "design", "rather", "than", "throw", "more", "test", "at", "the", "wall", "until", "one", "fail", "NUMBER", "If", "there", "s", "a", "bug", "in", "an", "exist", "feature", "we", "should", "probably", "understand", "what", "the", "bug", "be", "rather", "than", "ignore", "it", "and", "paper", "over", "the", "bug", "with", "new", "features", "NUMBER", "Yes", "you", "have", "documented", "what", "the", "new", "feature", "do", "but", "an", "important", "part", "of", "the", "design", "process", "for", "the", "PR", "be", "to", "think", "through", "how", "that", "new", "behavior", "relate", "to", "the", "exist", "codebase", "NUMBER", "It", "looks", "like", "the", "new", "test", "be", "catching", "an", "instance", "of", "F", "NUMBER", "NUMBER", "Are", "we", "sure", "that", "it", "s", "intended", "behavior", "for", "the", "pre", "exist", "test", "to", "not", "catch", "F", "NUMBER", "My", "concern", "be", "that", "maybe", "our", "exist", "test", "be", "intended", "to", "catch", "undefined", "names", "but", "be", "not", "doing", "so", "because", "of", "a", "bug", "in", "the", "test", "themselves", "NUMBER", "I", "d", "like", "to", "have", "a", "clear", "understanding", "of", "the", "design", "rather", "than", "possibly", "build", "and", "maintaining", "two", "redundant", "features", "just", "because", "one", "feature", "has", "be", "accidentally", "disabled", "NUMBER", "The", "fix", "in", "SPSAAdam", "has", "an", "assert", "checking", "that", "the", "input", "be", "the", "expected", "format", "can", "you", "include", "something", "like", "that", "here", "What", "goes", "wrong", "without", "the", "fix", "Does", "it", "cause", "an", "exception", "to", "be", "raise", "or", "do", "it", "cause", "silent", "computation", "of", "incorrect", "values", "Would", "you", "mind", "add", "a", "small", "test", "that", "would", "cause", "the", "exception", "to", "be", "triggered", "if", "the", "fix", "weren", "t", "there", "This", "bug", "indicates", "that", "we", "don", "t", "have", "good", "enough", "test", "coverage", "NUMBER", "Awesome", "thanks", "NUMBER", "Thanks", "For", "now", "I", "ll", "close", "this", "because", "Aashish", "could", "not", "reproduce", "NUMBER", "Feel", "free", "to", "re", "open", "if", "you", "have", "a", "short", "script", "we", "can", "just", "download", "and", "run", "to", "reproduce", "NUMBER", "david", "berthelot", "could", "this", "be", "relate", "to", "the", "recent", "change", "to", "Model", "I", "wasn", "t", "able", "to", "reproduce", "this", "NUMBER", "I", "expect", "that", "you", "have", "two", "or", "more", "version", "of", "CleverHans", "install", "NUMBER", "You", "re", "run", "the", "tutorials", "in", "the", "new", "version", "but", "the", "import", "command", "loads", "the", "modules", "from", "an", "older", "version", "NUMBER", "To", "check", "this", "idea", "run", "python", "c", "import", "cleverhans", "print", "cleverhans", "NUMBER", "__file__", "and", "see", "if", "the", "path", "be", "different", "from", "the", "path", "to", "the", "tutorial", "script", "you", "were", "run", "NUMBER", "Feel", "free", "to", "re", "open", "the", "issue", "if", "this", "doesn", "t", "turn", "out", "to", "be", "what", "happened", "NUMBER", "I", "edit", "my", "previous", "comment", "so", "that", "the", "markdown", "processor", "doesn", "t", "remove", "the", "underscores", "NUMBER", "johirbuet", "the", "command", "should", "work", "as", "display", "now", "You", "want", "python", "c", "import", "cleverhans", "print", "cleverhans", "NUMBER", "__file__", "You", "want", "print", "not", "dir", "Is", "that", "the", "path", "to", "the", "directory", "where", "you", "be", "run", "the", "tutorials", "If", "not", "then", "the", "problem", "be", "that", "you", "have", "two", "version", "install", "and", "the", "old", "version", "be", "get", "imported", "NUMBER", "npapernot", "or", "nottombrown", "do", "you", "want", "to", "comment", "on", "this", "I", "see", "you", "write", "the", "lines", "of", "setup", "NUMBER", "py", "involving", "TensorFlow", "NUMBER", "I", "don", "t", "know", "as", "much", "about", "how", "setup", "NUMBER", "py", "works", "or", "what", "the", "explicit", "dependence", "issue", "be", "if", "we", "have", "a", "policy", "of", "requiring", "all", "option", "dependencies", "or", "if", "we", "can", "install", "different", "version", "with", "different", "dependencies", "etc", "NUMBER", "Looks", "mostly", "good", "NUMBER", "There", "be", "one", "typo", "to", "fix", "and", "we", "probably", "want", "the", "new", "tutorial", "to", "go", "in", "the", "examples", "directory", "NUMBER", "Otherwise", "fine", "NUMBER", "I", "don", "t", "actually", "remember", "why", "we", "have", "a", "special", "tutorial", "for", "CW", "or", "JSMA", "NUMBER", "Note", "that", "we", "don", "t", "have", "BIM", "or", "PGD", "tutorials", "NUMBER", "FGSM", "was", "just", "include", "as", "a", "tutorial", "because", "we", "want", "the", "tutorial", "to", "run", "fast", "NUMBER", "s", "epoch", "for", "adv", "training", "so", "that", "people", "can", "run", "the", "tutorial", "at", "about", "the", "same", "speed", "they", "read", "it", "NUMBER", "npapernot", "do", "you", "remember", "why", "we", "have", "specialized", "tutorials", "for", "CW", "and", "JSMA", "In", "any", "case", "I", "d", "prefer", "not", "to", "have", "a", "proliferation", "of", "more", "tutorials", "NUMBER", "It", "s", "fine", "to", "put", "them", "in", "the", "examples", "directory", "where", "there", "s", "no", "obligation", "for", "the", "rest", "of", "the", "CleverHans", "team", "to", "provide", "ongoing", "support", "for", "them", "NUMBER", "What", "be", "the", "big", "differences", "between", "the", "tensorflow", "tutorial", "with", "FGSM", "and", "the", "CW", "tutorial", "Are", "the", "APIs", "still", "different", "for", "those", "attacks", "On", "Fri", "Jul", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "ysharma", "NUMBER", "TAG", "write", "Understood", "NUMBER", "Just", "to", "clarify", "the", "CW", "tutorial", "do", "both", "NUMBER", "and", "NUMBER", "cited", "here", "make", "it", "at", "least", "with", "the", "current", "API", "identical", "to", "the", "JSMA", "tutorial", "NUMBER", "Given", "that", "the", "CW", "tutorial", "be", "in", "effect", "identical", "to", "the", "JSMA", "tutorial", "EAD", "be", "quite", "similar", "can", "be", "reduced", "to", "CW", "with", "beta", "NUMBER", "and", "has", "be", "empirically", "shown", "to", "improve", "attack", "strength", "with", "non", "zero", "beta", "and", "at", "least", "I", "feel", "this", "EAD", "hyperparameter", "setting", "be", "important", "for", "users", "to", "know", "as", "it", "allows", "EAD", "CW", "to", "retain", "its", "attack", "strength", "while", "be", "as", "computationally", "efficient", "as", "iterative", "FGSM", "I", "would", "like", "to", "instead", "just", "add", "EAD", "as", "a", "option", "in", "the", "CW", "tutorial", "NUMBER", "This", "will", "require", "no", "additional", "support", "maintenance", "burden", "as", "there", "will", "be", "no", "additional", "tutorial", "NUMBER", "Hope", "this", "at", "least", "be", "ok", "On", "Fri", "Jul", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Nicolas", "Papernot", "TAG", "notifications", "github", "NUMBER", "com", "write", "I", "would", "also", "vote", "against", "a", "proliferation", "of", "attack", "tutorials", "if", "they", "be", "use", "a", "consistent", "API", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "NUMBER", "issuecomment", "NUMBER", "or", "mute", "the", "thread", "TAG", "NUMBER", "NCC", "NUMBER", "MRTkli", "NUMBER", "XTbKpqmBei", "NUMBER", "EqYxks", "NUMBER", "uGHcSgaJpZM", "NUMBER", "VGQqi", "NUMBER", "You", "be", "receiving", "this", "because", "you", "commented", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Do", "you", "mind", "starting", "a", "discussion", "on", "cleverhans", "dev", "so", "more", "people", "will", "weigh", "in", "OK", "I", "ll", "close", "the", "PR", "for", "now", "then", "NUMBER", "Can", "re", "open", "it", "if", "we", "make", "a", "plan", "for", "the", "new", "features", "later", "NUMBER", "npapernot", "would", "you", "mind", "reviewing", "this", "since", "you", "re", "the", "Jacobian", "Augmentation", "inventor", "Once", "the", "spelling", "error", "be", "fix", "this", "be", "OK", "to", "merge", "NUMBER", "It", "s", "OK", "to", "merge", "how", "this", "be", "but", "for", "the", "future", "I", "d", "advise", "a", "different", "strategy", "NUMBER", "Instead", "of", "putting", "if", "statements", "in", "all", "of", "the", "code", "that", "uses", "tf", "function", "whose", "API", "has", "change", "it", "would", "be", "better", "to", "make", "a", "compatibility", "module", "that", "keep", "the", "if", "statements", "in", "one", "place", "NUMBER", "For", "example", "you", "could", "make", "a", "cleverhans", "compat", "NUMBER", "py", "with", "code", "like", "def", "reduce_sum", "input_tensor", "axis", "None", "keepdims", "None", "name", "None", "if", "LooseVersion", "tf", "NUMBER", "__version__", "TAG", "on", "the", "file", "that", "have", "error", "NUMBER", "You", "can", "also", "run", "nosetests", "nologcapture", "cleverhans", "devtools", "test", "test_format", "NUMBER", "py", "to", "run", "just", "the", "PEP", "NUMBER", "test", "before", "you", "push", "NUMBER", "autopep", "NUMBER", "doesn", "t", "fix", "everything", "so", "you", "may", "need", "to", "do", "some", "manual", "cleanup", "NUMBER", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks_tf", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "miss", "whitespace", "around", "operator", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks_tf", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "miss", "whitespace", "around", "operator", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks_tf", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "expected", "NUMBER", "blank", "lines", "find", "NUMBER", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks_tf", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "expected", "NUMBER", "blank", "lines", "find", "NUMBER", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks_tf", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "expected", "NUMBER", "blank", "lines", "find", "NUMBER", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks_tf", "NUMBER", "py", "NUMBER", "NUMBER", "W", "NUMBER", "blank", "line", "contains", "whitespace", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks_tf", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "continuation", "line", "over", "indented", "for", "visual", "indent", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks_tf", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "line", "too", "long", "NUMBER", "NUMBER", "characters", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks_tf", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "line", "too", "long", "NUMBER", "NUMBER", "characters", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks_tf", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "line", "too", "long", "NUMBER", "NUMBER", "characters", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks_tf", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "line", "too", "long", "NUMBER", "NUMBER", "characters", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "miss", "whitespace", "around", "operator", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "W", "NUMBER", "blank", "line", "contains", "whitespace", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "miss", "whitespace", "around", "operator", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "W", "NUMBER", "blank", "line", "contains", "whitespace", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "miss", "whitespace", "around", "operator", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "miss", "whitespace", "around", "operator", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "W", "NUMBER", "blank", "line", "contains", "whitespace", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "line", "too", "long", "NUMBER", "NUMBER", "characters", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "line", "too", "long", "NUMBER", "NUMBER", "characters", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "line", "too", "long", "NUMBER", "NUMBER", "characters", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "W", "NUMBER", "blank", "line", "contains", "whitespace", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "W", "NUMBER", "blank", "line", "contains", "whitespace", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "W", "NUMBER", "blank", "line", "contains", "whitespace", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "W", "NUMBER", "blank", "line", "contains", "whitespace", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "W", "NUMBER", "blank", "line", "contains", "whitespace", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "line", "too", "long", "NUMBER", "NUMBER", "characters", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "W", "NUMBER", "blank", "line", "contains", "whitespace", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "line", "too", "long", "NUMBER", "NUMBER", "characters", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "line", "too", "long", "NUMBER", "NUMBER", "characters", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "W", "NUMBER", "blank", "line", "contains", "whitespace", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "W", "NUMBER", "blank", "line", "contains", "whitespace", "ricvo", "be", "you", "able", "to", "solve", "the", "PEP", "NUMBER", "issue", "on", "your", "fork", "Thanks", "for", "the", "PR", "there", "be", "a", "minor", "tweak", "miss", "but", "should", "be", "good", "once", "that", "be", "fix", "Good", "catch", "do", "you", "mind", "make", "a", "pull", "request", "That", "makes", "sense", "NUMBER", "We", "would", "have", "to", "modify", "the", "function", "pair_visual", "to", "numpy", "NUMBER", "squeeze", "the", "image", "into", "a", "NUMBER", "D", "numpy", "arrays", "when", "channels", "NUMBER", "NUMBER", "Are", "you", "able", "to", "make", "a", "PR", "for", "this", "I", "think", "this", "be", "because", "we", "use", "pip", "install", "keras", "with", "no", "version", "specification", "on", "Travis", "NUMBER", "A", "new", "release", "of", "Keras", "came", "out", "a", "few", "days", "ago", "and", "it", "looks", "like", "the", "new", "release", "isn", "t", "compatible", "with", "the", "older", "version", "of", "TensorFlow", "that", "we", "use", "on", "Travis", "NUMBER", "This", "PR", "should", "fix", "it", "LINK", "It", "looks", "like", "re", "run", "travis", "didn", "t", "cause", "travis", "to", "pick", "up", "the", "latest", "merge", "commit", "with", "the", "fix", "NUMBER", "I", "tried", "closing", "the", "pull", "request", "and", "re", "open", "it", "to", "see", "if", "that", "pick", "up", "a", "new", "version", "of", "the", "master", "branch", "NUMBER", "If", "that", "still", "fail", "you", "could", "try", "push", "a", "dummy", "commit", "open", "a", "new", "pull", "request", "or", "doing", "a", "rebase", "NUMBER", "Thanks", "for", "the", "PR", "would", "you", "be", "able", "to", "add", "deprecation", "warning", "given", "that", "you", "be", "change", "the", "API", "Unless", "the", "new", "parameters", "have", "default", "values", "that", "correspond", "exactly", "to", "the", "previous", "behavior", "NUMBER", "Thanks", "for", "confirming", "NUMBER", "Given", "that", "you", "re", "an", "author", "I", "trust", "that", "it", "implement", "correctly", "the", "corresponding", "paper", "NUMBER", "Yes", "any", "PR", "be", "very", "welcome", "NUMBER", "Taking", "into", "account", "the", "instructions", "you", "can", "find", "in", "the", "main", "README", "you", "should", "feel", "free", "to", "create", "a", "PR", "that", "address", "any", "issue", "open", "in", "this", "tracker", "NUMBER", "Thanks", "for", "your", "help", "feedforward", "do", "you", "have", "any", "WIP", "for", "this", "issue", "or", "should", "vikramnitin", "NUMBER", "start", "from", "scratch", "vikramnitin", "NUMBER", "any", "update", "on", "this", "Thanks", "The", "test", "fail", "ERROR", "If", "clipping", "be", "not", "do", "at", "each", "iteration", "not", "passing", "clip_min", "and", "Traceback", "most", "recent", "call", "last", "File", "home", "travis", "build", "tensorflow", "cleverhans", "tests_tf", "test_attacks", "NUMBER", "py", "line", "NUMBER", "in", "test_attack_strength", "orig_labs", "np", "NUMBER", "argmax", "self", "NUMBER", "sess", "NUMBER", "run", "self", "NUMBER", "model", "x_val", "axis", "NUMBER", "File", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "model", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "return", "self", "NUMBER", "get_probs", "args", "kwargs", "File", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "model", "NUMBER", "py", "line", "NUMBER", "in", "get_probs", "return", "tf", "NUMBER", "nn", "NUMBER", "softmax", "self", "NUMBER", "get_logits", "x", "File", "home", "travis", "build", "tensorflow", "cleverhans", "tests_tf", "test_attacks", "NUMBER", "py", "line", "NUMBER", "in", "get_logits", "W", "NUMBER", "tf", "NUMBER", "constant", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "dtype", "x", "NUMBER", "dtype", "File", "home", "travis", "miniconda", "envs", "test", "environment", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "constant_op", "NUMBER", "py", "line", "NUMBER", "in", "constant", "tensor_util", "NUMBER", "make_tensor_proto", "value", "dtype", "dtype", "shape", "shape", "verify_shape", "verify_shape", "File", "home", "travis", "miniconda", "envs", "test", "environment", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "tensor_util", "NUMBER", "py", "line", "NUMBER", "in", "make_tensor_proto", "dtypes", "NUMBER", "quint", "NUMBER", "dtypes", "NUMBER", "qint", "NUMBER", "TypeError", "data", "type", "not", "understood", "do", "you", "think", "the", "build", "be", "broken", "or", "could", "this", "have", "happened", "due", "to", "this", "PR", "Thanks", "for", "posting", "the", "result", "NUMBER", "I", "would", "be", "in", "favor", "of", "be", "more", "strict", "with", "the", "cleverhans", "and", "cleverhans_tutorials", "folders", "than", "the", "examples", "folder", "and", "only", "have", "the", "linter", "on", "the", "first", "two", "folders", "NUMBER", "Note", "that", "right", "now", "we", "be", "already", "whitelisting", "the", "NIPS", "competition", "code", "from", "the", "pep", "NUMBER", "checker", "that", "be", "run", "on", "all", "folders", "main", "library", "in", "cleverhans", "tutorials", "in", "cleverhans_tutorials", "and", "examples", "in", "examples", "NUMBER", "thanks", "for", "the", "PR", "NUMBER", "I", "think", "it", "s", "fine", "to", "use", "the", "keywords", "I", "checked", "TF", "and", "it", "also", "uses", "keywords", "rather", "than", "the", "structure", "we", "currently", "follow", "NUMBER", "NUMBER", "I", "would", "prefer", "to", "add", "an", "exception", "to", "the", "test", "not", "to", "check", "the", "main", "function", "because", "these", "be", "always", "empty", "and", "just", "calling", "the", "tutorial", "function", "unless", "it", "s", "more", "complicated", "to", "add", "an", "exception", "than", "add", "a", "simple", "docstring", "to", "the", "main", "function", "LGTM", "I", "took", "a", "look", "at", "the", "change", "again", "and", "they", "still", "look", "good", "thanks", "for", "taking", "care", "of", "this", "Good", "catch", "this", "do", "not", "seem", "to", "affect", "the", "code", "given", "that", "input", "and", "output", "shape", "variables", "be", "not", "use", "in", "the", "ReLU", "that", "follows", "the", "Conv", "NUMBER", "D", "layer", "NUMBER", "Would", "you", "mind", "looking", "through", "the", "file", "and", "make", "a", "PR", "Closed", "by", "NUMBER", "In", "addition", "to", "the", "attack", "Ian", "be", "referring", "to", "you", "can", "also", "use", "the", "JSMA", "LINK", "L", "NUMBER", "to", "generate", "adversarial", "examples", "if", "your", "input", "data", "be", "made", "up", "of", "numeric", "integers", "NUMBER", "You", "will", "have", "to", "set", "the", "step", "size", "accordingly", "however", "NUMBER", "I", "don", "t", "use", "generate_np", "much", "so", "I", "don", "t", "have", "a", "strong", "opinion", "either", "way", "but", "transitioning", "to", "eager", "mode", "would", "be", "a", "good", "compromise", "for", "the", "use", "cases", "I", "can", "think", "of", "Do", "you", "have", "a", "minimum", "work", "code", "example", "A", "common", "cause", "of", "this", "problem", "be", "passing", "probabilities", "where", "the", "attack", "expects", "logits", "NUMBER", "Functions", "use", "to", "compute", "probabilities", "such", "as", "the", "softmax", "and", "sigmoid", "function", "often", "have", "strong", "saturation", "NUMBER", "It", "be", "also", "possible", "in", "theory", "for", "the", "cross", "entropy", "function", "itself", "to", "saturate", "and", "maybe", "that", "s", "what", "you", "ve", "encountered", "but", "I", "haven", "t", "observed", "that", "be", "a", "problem", "in", "practice", "yet", "NUMBER", "Regarding", "point", "NUMBER", "you", "would", "have", "to", "provide", "a", "model", "object", "from", "cleverhans", "NUMBER", "model", "NUMBER", "Model", "if", "you", "be", "going", "to", "call", "generate", "from", "the", "FastGradientMethod", "NUMBER", "If", "you", "d", "like", "to", "use", "the", "graph", "you", "already", "created", "it", "be", "not", "recommended", "but", "you", "can", "use", "the", "function", "that", "be", "call", "in", "the", "backend", "by", "FastGradientMethod", "it", "be", "here", "LINK", "_tf", "NUMBER", "py", "L", "NUMBER", "I", "be", "closing", "this", "for", "now", "feel", "free", "to", "reopen", "if", "NUMBER", "did", "not", "completely", "address", "your", "issue", "NUMBER", "Wrap", "your", "InceptionModel", "class", "in", "a", "cleverhans", "NUMBER", "model", "NUMBER", "Model", "class", "NUMBER", "Check", "out", "the", "CleverHans", "tutorials", "for", "examples", "NUMBER", "We", "d", "need", "to", "see", "your", "code", "and", "a", "traceback", "to", "be", "able", "to", "help", "with", "that", "Can", "we", "also", "see", "the", "stack", "trace", "Do", "you", "know", "why", "your", "trace", "isn", "t", "going", "inside", "FastGradientMethod", "and", "isn", "t", "including", "line", "numbers", "within", "the", "file", "I", "m", "closing", "this", "for", "now", "as", "this", "be", "not", "an", "issue", "but", "feel", "free", "to", "email", "cleverhans", "dev", "googlegroups", "NUMBER", "com", "if", "you", "re", "looking", "to", "put", "together", "a", "notebook", "NUMBER", "Thanks", "it", "s", "probably", "better", "for", "examples", "RL", "attack", "to", "be", "renamed", "to", "be", "lower", "case", "examples", "rl", "attack", "in", "order", "to", "match", "the", "rl", "attack", "library", "NUMBER", "Otherwise", "I", "need", "to", "remember", "when", "to", "type", "which", "case", "when", "I", "tried", "run", "pip", "install", "e", "NUMBER", "in", "rl", "attack", "I", "get", "this", "error", "message", "Collecting", "mujoco_py", "NUMBER", "from", "gym", "atari", "classic_control", "mujoco", "rlattack", "NUMBER", "Downloading", "mujoco", "py", "NUMBER", "tar", "NUMBER", "gz", "NUMBER", "kB", "NUMBER", "NUMBER", "kB", "NUMBER", "MB", "s", "Complete", "output", "from", "command", "python", "setup", "NUMBER", "py", "egg_info", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "tmp", "pip", "build", "IDpnGa", "mujoco", "py", "setup", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "import", "importlib", "NUMBER", "util", "ImportError", "No", "module", "named", "util", "Command", "python", "setup", "NUMBER", "py", "egg_info", "fail", "with", "error", "code", "NUMBER", "in", "tmp", "pip", "build", "IDpnGa", "mujoco", "py", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "pip", "_vendor", "request", "package", "urllib", "NUMBER", "util", "ssl_", "NUMBER", "py", "NUMBER", "InsecurePlatformWarning", "A", "true", "SSLContext", "object", "be", "not", "available", "NUMBER", "This", "prevents", "urllib", "NUMBER", "from", "configuring", "SSL", "appropriately", "and", "may", "cause", "certain", "SSL", "connections", "to", "fail", "NUMBER", "You", "can", "upgrade", "to", "a", "newer", "version", "of", "Python", "to", "solve", "this", "NUMBER", "For", "more", "information", "see", "LINK", "insecureplatformwarning", "NUMBER", "InsecurePlatformWarning", "Any", "suggestions", "for", "how", "to", "deal", "with", "the", "error", "message", "python", "NUMBER", "m", "pip", "install", "e", "NUMBER", "gives", "similar", "error", "message", "Collecting", "mujoco_py", "NUMBER", "from", "gym", "atari", "classic_control", "mujoco", "rlattack", "NUMBER", "Using", "cached", "mujoco", "py", "NUMBER", "tar", "NUMBER", "gz", "Complete", "output", "from", "command", "python", "setup", "NUMBER", "py", "egg_info", "Package", "libffi", "was", "not", "find", "in", "the", "pkg", "config", "search", "path", "NUMBER", "Perhaps", "you", "should", "add", "the", "directory", "containing", "libffi", "NUMBER", "pc", "to", "the", "PKG_CONFIG_PATH", "environment", "variable", "No", "package", "libffi", "find", "Package", "libffi", "was", "not", "find", "in", "the", "pkg", "config", "search", "path", "NUMBER", "Perhaps", "you", "should", "add", "the", "directory", "containing", "libffi", "NUMBER", "pc", "to", "the", "PKG_CONFIG_PATH", "environment", "variable", "No", "package", "libffi", "find", "Package", "libffi", "was", "not", "find", "in", "the", "pkg", "config", "search", "path", "NUMBER", "Perhaps", "you", "should", "add", "the", "directory", "containing", "libffi", "NUMBER", "pc", "to", "the", "PKG_CONFIG_PATH", "environment", "variable", "No", "package", "libffi", "find", "Package", "libffi", "was", "not", "find", "in", "the", "pkg", "config", "search", "path", "NUMBER", "Perhaps", "you", "should", "add", "the", "directory", "containing", "libffi", "NUMBER", "pc", "to", "the", "PKG_CONFIG_PATH", "environment", "variable", "No", "package", "libffi", "find", "Package", "libffi", "was", "not", "find", "in", "the", "pkg", "config", "search", "path", "NUMBER", "Perhaps", "you", "should", "add", "the", "directory", "containing", "libffi", "NUMBER", "pc", "to", "the", "PKG_CONFIG_PATH", "environment", "variable", "No", "package", "libffi", "find", "c", "_cffi_backend", "NUMBER", "c", "NUMBER", "NUMBER", "fatal", "error", "ffi", "NUMBER", "h", "No", "such", "file", "or", "directory", "include", "TAG", "compilation", "terminated", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "usr", "lib", "python", "NUMBER", "distutils", "unixccompiler", "NUMBER", "py", "line", "NUMBER", "in", "_compile", "extra_postargs", "File", "usr", "lib", "python", "NUMBER", "distutils", "ccompiler", "NUMBER", "py", "line", "NUMBER", "in", "spawn", "spawn", "cmd", "dry_run", "self", "NUMBER", "dry_run", "File", "usr", "lib", "python", "NUMBER", "distutils", "spawn", "NUMBER", "py", "line", "NUMBER", "in", "spawn", "_spawn_posix", "cmd", "search_path", "dry_run", "dry_run", "File", "usr", "lib", "python", "NUMBER", "distutils", "spawn", "NUMBER", "py", "line", "NUMBER", "in", "_spawn_posix", "cmd", "exit_status", "distutils", "NUMBER", "error", "NUMBER", "DistutilsExecError", "command", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "gcc", "fail", "with", "exit", "status", "NUMBER", "During", "handle", "of", "the", "above", "exception", "another", "exception", "occur", "Traceback", "most", "recent", "call", "last", "File", "usr", "lib", "python", "NUMBER", "distutils", "core", "NUMBER", "py", "line", "NUMBER", "in", "setup", "dist", "NUMBER", "run_commands", "File", "usr", "lib", "python", "NUMBER", "distutils", "dist", "NUMBER", "py", "line", "NUMBER", "in", "run_commands", "self", "NUMBER", "run_command", "cmd", "File", "usr", "lib", "python", "NUMBER", "distutils", "dist", "NUMBER", "py", "line", "NUMBER", "in", "run_command", "cmd_obj", "NUMBER", "run", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "command", "bdist_egg", "NUMBER", "py", "line", "NUMBER", "in", "run", "cmd", "self", "NUMBER", "call_command", "install_lib", "warn_dir", "NUMBER", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "command", "bdist_egg", "NUMBER", "py", "line", "NUMBER", "in", "call_command", "self", "NUMBER", "run_command", "cmdname", "File", "usr", "lib", "python", "NUMBER", "distutils", "cmd", "NUMBER", "py", "line", "NUMBER", "in", "run_command", "self", "NUMBER", "distribution", "NUMBER", "run_command", "command", "File", "usr", "lib", "python", "NUMBER", "distutils", "dist", "NUMBER", "py", "line", "NUMBER", "in", "run_command", "cmd_obj", "NUMBER", "run", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "command", "install_lib", "NUMBER", "py", "line", "NUMBER", "in", "run", "self", "NUMBER", "build", "File", "usr", "lib", "python", "NUMBER", "distutils", "command", "install_lib", "NUMBER", "py", "line", "NUMBER", "in", "build", "self", "NUMBER", "run_command", "build_ext", "File", "usr", "lib", "python", "NUMBER", "distutils", "cmd", "NUMBER", "py", "line", "NUMBER", "in", "run_command", "self", "NUMBER", "distribution", "NUMBER", "run_command", "command", "File", "usr", "lib", "python", "NUMBER", "distutils", "dist", "NUMBER", "py", "line", "NUMBER", "in", "run_command", "cmd_obj", "NUMBER", "run", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "command", "build_ext", "NUMBER", "py", "line", "NUMBER", "in", "run", "_build_ext", "NUMBER", "run", "self", "File", "usr", "lib", "python", "NUMBER", "distutils", "command", "build_ext", "NUMBER", "py", "line", "NUMBER", "in", "run", "self", "NUMBER", "build_extensions", "File", "usr", "lib", "python", "NUMBER", "distutils", "command", "build_ext", "NUMBER", "py", "line", "NUMBER", "in", "build_extensions", "self", "NUMBER", "_build_extensions_serial", "File", "usr", "lib", "python", "NUMBER", "distutils", "command", "build_ext", "NUMBER", "py", "line", "NUMBER", "in", "_build_extensions_serial", "self", "NUMBER", "build_extension", "ext", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "command", "build_ext", "NUMBER", "py", "line", "NUMBER", "in", "build_extension", "_build_ext", "NUMBER", "build_extension", "self", "ext", "File", "usr", "lib", "python", "NUMBER", "distutils", "command", "build_ext", "NUMBER", "py", "line", "NUMBER", "in", "build_extension", "depends", "ext", "NUMBER", "depends", "File", "usr", "lib", "python", "NUMBER", "distutils", "ccompiler", "NUMBER", "py", "line", "NUMBER", "in", "compile", "self", "NUMBER", "_compile", "obj", "src", "ext", "cc_args", "extra_postargs", "pp_opts", "File", "usr", "lib", "python", "NUMBER", "distutils", "unixccompiler", "NUMBER", "py", "line", "NUMBER", "in", "_compile", "raise", "CompileError", "msg", "distutils", "NUMBER", "error", "NUMBER", "CompileError", "command", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "gcc", "fail", "with", "exit", "status", "NUMBER", "During", "handle", "of", "the", "above", "exception", "another", "exception", "occur", "Traceback", "most", "recent", "call", "last", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "sandbox", "NUMBER", "py", "line", "NUMBER", "in", "save_modules", "yield", "saved", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "sandbox", "NUMBER", "py", "line", "NUMBER", "in", "setup_context", "yield", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "sandbox", "NUMBER", "py", "line", "NUMBER", "in", "run_setup", "_execfile", "setup_script", "ns", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "sandbox", "NUMBER", "py", "line", "NUMBER", "in", "_execfile", "exec", "code", "globals", "locals", "File", "tmp", "easy_install", "l", "NUMBER", "xk", "NUMBER", "be", "cffi", "NUMBER", "setup", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "File", "usr", "lib", "python", "NUMBER", "distutils", "core", "NUMBER", "py", "line", "NUMBER", "in", "setup", "raise", "SystemExit", "error", "str", "msg", "SystemExit", "error", "command", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "gcc", "fail", "with", "exit", "status", "NUMBER", "During", "handle", "of", "the", "above", "exception", "another", "exception", "occur", "Traceback", "most", "recent", "call", "last", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "command", "easy_install", "NUMBER", "py", "line", "NUMBER", "in", "run_setup", "run_setup", "setup_script", "args", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "sandbox", "NUMBER", "py", "line", "NUMBER", "in", "run_setup", "raise", "File", "usr", "lib", "python", "NUMBER", "contextlib", "NUMBER", "py", "line", "NUMBER", "in", "__exit__", "self", "NUMBER", "gen", "NUMBER", "row", "type", "value", "traceback", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "sandbox", "NUMBER", "py", "line", "NUMBER", "in", "setup_context", "yield", "File", "usr", "lib", "python", "NUMBER", "contextlib", "NUMBER", "py", "line", "NUMBER", "in", "__exit__", "self", "NUMBER", "gen", "NUMBER", "row", "type", "value", "traceback", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "sandbox", "NUMBER", "py", "line", "NUMBER", "in", "save_modules", "saved_exc", "NUMBER", "resume", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "sandbox", "NUMBER", "py", "line", "NUMBER", "in", "resume", "six", "NUMBER", "reraise", "type", "exc", "self", "NUMBER", "_tb", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "pkg_resources", "_vendor", "six", "NUMBER", "py", "line", "NUMBER", "in", "reraise", "raise", "value", "NUMBER", "with_traceback", "tb", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "sandbox", "NUMBER", "py", "line", "NUMBER", "in", "save_modules", "yield", "saved", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "sandbox", "NUMBER", "py", "line", "NUMBER", "in", "setup_context", "yield", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "sandbox", "NUMBER", "py", "line", "NUMBER", "in", "run_setup", "_execfile", "setup_script", "ns", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "sandbox", "NUMBER", "py", "line", "NUMBER", "in", "_execfile", "exec", "code", "globals", "locals", "File", "tmp", "easy_install", "l", "NUMBER", "xk", "NUMBER", "be", "cffi", "NUMBER", "setup", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "File", "usr", "lib", "python", "NUMBER", "distutils", "core", "NUMBER", "py", "line", "NUMBER", "in", "setup", "raise", "SystemExit", "error", "str", "msg", "SystemExit", "error", "command", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "gcc", "fail", "with", "exit", "status", "NUMBER", "During", "handle", "of", "the", "above", "exception", "another", "exception", "occur", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "File", "tmp", "pip", "build", "wbtwaota", "mujoco", "py", "setup", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "cmdclass", "build", "Build", "File", "usr", "lib", "python", "NUMBER", "distutils", "core", "NUMBER", "py", "line", "NUMBER", "in", "setup", "_setup_distribution", "dist", "klass", "attrs", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "dist", "NUMBER", "py", "line", "NUMBER", "in", "__init__", "self", "NUMBER", "fetch_build_eggs", "attrs", "setup_requires", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "dist", "NUMBER", "py", "line", "NUMBER", "in", "fetch_build_eggs", "replace_conflicting", "True", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "pkg_resources", "__init__", "NUMBER", "py", "line", "NUMBER", "in", "resolve", "dist", "best", "req", "NUMBER", "key", "env", "NUMBER", "best_match", "req", "ws", "installer", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "pkg_resources", "__init__", "NUMBER", "py", "line", "NUMBER", "in", "best_match", "return", "self", "NUMBER", "obtain", "req", "installer", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "pkg_resources", "__init__", "NUMBER", "py", "line", "NUMBER", "in", "obtain", "return", "installer", "requirement", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "dist", "NUMBER", "py", "line", "NUMBER", "in", "fetch_build_egg", "return", "cmd", "NUMBER", "easy_install", "req", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "command", "easy_install", "NUMBER", "py", "line", "NUMBER", "in", "easy_install", "return", "self", "NUMBER", "install_item", "spec", "dist", "NUMBER", "location", "tmpdir", "deps", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "command", "easy_install", "NUMBER", "py", "line", "NUMBER", "in", "install_item", "dists", "self", "NUMBER", "install_eggs", "spec", "download", "tmpdir", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "command", "easy_install", "NUMBER", "py", "line", "NUMBER", "in", "install_eggs", "return", "self", "NUMBER", "build_and_install", "setup_script", "setup_base", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "command", "easy_install", "NUMBER", "py", "line", "NUMBER", "in", "build_and_install", "self", "NUMBER", "run_setup", "setup_script", "setup_base", "args", "File", "usr", "lib", "python", "NUMBER", "dist", "package", "setuptools", "command", "easy_install", "NUMBER", "py", "line", "NUMBER", "in", "run_setup", "raise", "DistutilsError", "Setup", "script", "exited", "with", "s", "v", "NUMBER", "args", "NUMBER", "distutils", "NUMBER", "error", "NUMBER", "DistutilsError", "Setup", "script", "exited", "with", "error", "command", "x", "NUMBER", "_", "NUMBER", "linux", "gnu", "gcc", "fail", "with", "exit", "status", "NUMBER", "Command", "python", "setup", "NUMBER", "py", "egg_info", "fail", "with", "error", "code", "NUMBER", "in", "tmp", "pip", "build", "wbtwaota", "mujoco", "py", "I", "m", "use", "gLinux", "so", "it", "s", "probably", "pretty", "hard", "for", "you", "to", "support", "from", "outside", "Google", "NUMBER", "Just", "reading", "the", "code", "this", "looks", "OK", "so", "I", "m", "going", "to", "go", "ahead", "and", "merge", "even", "though", "I", "haven", "t", "be", "able", "to", "install", "the", "dependencies", "NUMBER", "catherio", "can", "you", "review", "Did", "the", "version", "of", "Keras", "change", "recently", "royaurko", "any", "comment", "I", "ve", "never", "review", "a", "PR", "add", "a", "submodule", "before", "NUMBER", "In", "the", "github", "interface", "it", "just", "looks", "like", "the", "addition", "of", "an", "empty", "file", "NUMBER", "Do", "you", "know", "how", "I", "can", "see", "how", "the", "submodule", "be", "configured", "Thansk", "for", "the", "warning", "catherio", "NUMBER", "Based", "on", "that", "medium", "post", "I", "think", "it", "would", "be", "better", "to", "have", "an", "example", "in", "the", "examples", "directory", "that", "imports", "the", "rlattack", "as", "a", "package", "NUMBER", "The", "README", "for", "the", "example", "can", "give", "the", "user", "instructions", "for", "how", "to", "download", "and", "install", "rlattack", "NUMBER", "I", "ll", "close", "this", "version", "of", "the", "PR", "but", "you", "re", "welcome", "to", "reopen", "a", "version", "that", "doesn", "t", "use", "a", "submodule", "You", "can", "also", "log", "in", "to", "travis", "to", "restart", "individual", "build", "jobs", "NUMBER", "Close", "and", "reopen", "works", "too", "if", "all", "of", "them", "fail", "spuriously", "NUMBER", "huntergregal", "I", "m", "assuming", "cihangxie", "s", "fix", "works", "for", "you", "NUMBER", "If", "not", "feel", "free", "to", "reopen", "the", "issue", "We", "can", "ignore", "googlebot", "since", "we", "all", "know", "Nicolas", "has", "sign", "the", "CLA", "before", "NUMBER", "I", "guess", "this", "be", "some", "glitch", "relate", "to", "Nicolas", "s", "internship", "ending", "be", "remove", "from", "the", "tensorflow", "organization", "on", "github", "maybe", "AlexeyKurakin", "Thanks", "for", "the", "PR", "Can", "you", "add", "test", "for", "the", "attack", "You", "can", "find", "an", "example", "here", "LINK", "_tf", "test_attacks", "NUMBER", "py", "L", "NUMBER", "Thanks", "for", "add", "the", "test", "I", "just", "realized", "that", "it", "might", "make", "sense", "to", "take", "into", "account", "a", "recent", "PR", "by", "goodfeli", "NUMBER", "to", "prevent", "numerical", "instabilities", "NUMBER", "If", "you", "can", "take", "a", "look", "and", "make", "the", "edits", "the", "rest", "be", "LGTM", "and", "ready", "to", "merge", "NUMBER", "Thank", "you", "Thanks", "David", "LGTM", "Did", "you", "get", "a", "chance", "to", "test", "the", "atol", "values", "on", "both", "GPU", "and", "CPU", "thoroughly", "after", "we", "spoke", "I", "asked", "carlini", "on", "hangouts", "and", "he", "says", "noisy_grads", "False", "successfully", "reduced", "the", "accuracy", "to", "NUMBER", "Usually", "I", "say", "we", "don", "t", "need", "a", "tutorial", "for", "every", "new", "attack", "defense", "or", "we", "ll", "end", "up", "with", "too", "many", "tutorials", "but", "in", "this", "case", "the", "extra", "preprocessing", "of", "the", "input", "might", "mean", "it", "makes", "sense", "to", "include", "a", "tutorial", "or", "example", "showing", "how", "the", "discretization", "undiscretization", "function", "should", "be", "use", "in", "the", "context", "of", "training", "attacking", "a", "model", "NUMBER", "Any", "update", "on", "this", "PR", "Sorry", "I", "ve", "consistently", "be", "swamped", "and", "keep", "thinking", "that", "s", "almost", "over", "but", "then", "it", "isn", "t", "NUMBER", "Is", "there", "any", "chance", "Jacob", "or", "Colin", "other", "thermometer", "code", "co", "authors", "could", "review", "it", "I", "think", "let", "s", "just", "close", "this", "PR", "for", "now", "NUMBER", "We", "can", "re", "open", "it", "later", "if", "we", "decide", "to", "use", "thermometer", "one", "hot", "code", "again", "NUMBER", "Thanks", "for", "the", "PR", "but", "I", "don", "t", "see", "any", "file", "checked", "in", "The", "only", "two", "file", "that", "appear", "on", "the", "PR", "be", "NUMBER", "DS_store", "file", "NUMBER", "Thanks", "for", "the", "pull", "request", "in", "the", "future", "it", "would", "be", "best", "to", "discuss", "this", "on", "the", "cleverhans", "dev", "mailing", "list", "to", "avoid", "duplicate", "PRs", "NUMBER", "I", "do", "appreciate", "you", "sharing", "your", "work", "however", "NUMBER", "Let", "us", "see", "if", "it", "makes", "sense", "to", "keep", "NUMBER", "given", "that", "this", "PR", "has", "be", "open", "NUMBER", "gongzhitaao", "be", "you", "planning", "to", "complete", "your", "PR", "soon", "or", "should", "we", "close", "it", "and", "all", "work", "towards", "this", "current", "PR", "be", "merge", "NUMBER", "Thanks", "for", "taking", "the", "time", "to", "look", "at", "this", "PR", "gongzhitaao", "I", "will", "close", "NUMBER", "for", "now", "NUMBER", "Hope", "that", "you", "be", "able", "to", "build", "on", "contribute", "to", "this", "PR", "with", "your", "implementation", "ideas", "NUMBER", "Thanks", "this", "be", "almost", "ready", "to", "merge", "just", "two", "things", "would", "be", "nice", "to", "take", "care", "of", "solve", "the", "conflict", "that", "the", "branch", "has", "w", "the", "master", "branch", "change", "the", "JSMA", "tutorial", "in", "cleverhans_tutorials", "to", "use", "the", "symbolic", "implementation", "by", "default", "this", "will", "also", "make", "sure", "that", "the", "behavior", "be", "consistent", "with", "the", "previous", "implementation", "Thanks", "again", "Thanks", "I", "ll", "try", "a", "few", "things", "on", "my", "machine", "and", "then", "merge", "Thanks", "Alex", "feel", "free", "to", "reopen", "the", "issue", "rittikaadhikari", "if", "that", "did", "not", "solve", "it", "for", "you", "NUMBER", "Yes", "it", "would", "be", "great", "to", "have", "a", "PR", "to", "address", "these", "issue", "you", "may", "want", "to", "send", "a", "quick", "email", "describing", "the", "change", "you", "ll", "make", "to", "cleverhans", "dev", "googlegroups", "NUMBER", "com", "I", "just", "accepted", "your", "membership", "request", "malcolmregan", "did", "you", "get", "a", "chance", "to", "take", "a", "look", "again", "The", "reason", "be", "that", "some", "test", "were", "previously", "fail", "for", "one", "of", "the", "two", "TF", "version", "we", "re", "test", "NUMBER", "These", "test", "be", "not", "ideal", "to", "begin", "with", "but", "before", "we", "solve", "the", "reproducibility", "issue", "NUMBER", "it", "s", "going", "to", "remain", "a", "problem", "NUMBER", "On", "Fri", "Nov", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "PM", "Fartash", "Faghri", "TAG", "write", "npapernot", "TAG", "thanks", "for", "the", "merge", "NUMBER", "Is", "there", "a", "reason", "for", "having", "different", "atol_fac", "for", "different", "TF", "version", "Is", "there", "a", "difference", "in", "the", "underlying", "seeding", "mechanism", "The", "change", "was", "introduce", "in", "NUMBER", "ab", "NUMBER", "a", "NUMBER", "f", "TAG", "NUMBER", "I", "have", "a", "commit", "that", "fail", "the", "test", "for", "TF", "TAG", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Ah", "that", "be", "possible", "I", "will", "try", "to", "spend", "some", "time", "on", "this", "Friday", "afternoon", "NUMBER", "This", "has", "be", "a", "problem", "for", "a", "long", "time", "and", "at", "this", "point", "we", "cannot", "rely", "on", "these", "test", "for", "what", "it", "s", "worth", "NUMBER", "In", "the", "meanwhile", "feel", "free", "to", "adjust", "the", "atol_fac", "if", "needed", "I", "trust", "your", "judgment", "NUMBER", "It", "seems", "you", "have", "commented", "out", "a", "line", "that", "wraps", "the", "Keras", "model", "into", "a", "CleverHans", "model", "NUMBER", "Let", "us", "know", "if", "this", "be", "the", "source", "of", "the", "problem", "NUMBER", "model_wrap", "KerasModelWrapper", "model", "This", "might", "require", "make", "some", "change", "to", "the", "library", "to", "support", "this", "new", "mode", "NUMBER", "Nothing", "in", "mind", "but", "I", "will", "post", "resources", "here", "if", "I", "find", "any", "NUMBER", "Yes", "yenchenlin", "this", "be", "what", "we", "be", "looking", "for", "but", "if", "you", "could", "adapt", "the", "code", "to", "use", "exist", "CleverHans", "library", "function", "that", "would", "be", "better", "NUMBER", "It", "might", "make", "sense", "to", "start", "a", "thread", "on", "the", "cleverhans", "dev", "mailing", "list", "to", "make", "sure", "that", "design", "choices", "be", "made", "collectively", "if", "you", "need", "to", "make", "modifications", "to", "the", "APIs", "of", "the", "CleverHans", "library", "NUMBER", "Thank", "you", "so", "much", "No", "progress", "NUMBER", "I", "don", "t", "think", "anyone", "s", "work", "on", "it", "NUMBER", "It", "s", "something", "I", "d", "consider", "doing", "myself", "but", "haven", "t", "find", "time", "yet", "NUMBER", "Thanks", "It", "s", "probably", "best", "to", "adapt", "just", "one", "of", "the", "tutorials", "though", "NUMBER", "We", "don", "t", "want", "to", "commit", "to", "maintaining", "a", "lot", "of", "duplicate", "tutorial", "code", "NUMBER", "Regarding", "NUMBER", "from", "experience", "it", "has", "be", "best", "to", "avoid", "Keras", "and", "we", "now", "have", "managed", "to", "isolate", "most", "the", "code", "relate", "to", "Keras", "from", "the", "core", "CleverHans", "code", "so", "I", "would", "be", "in", "favor", "of", "provide", "a", "subclass", "of", "cleverhans", "NUMBER", "model", "NUMBER", "Model", "for", "tf", "NUMBER", "eager", "models", "NUMBER", "Regarding", "NUMBER", "if", "it", "be", "too", "complicated", "to", "reuse", "exist", "attack", "classes", "such", "as", "the", "one", "here", "LINK", "L", "NUMBER", "then", "I", "think", "it", "would", "make", "sense", "to", "start", "a", "new", "thread", "in", "the", "cleverhans", "dev", "mailing", "list", "to", "discuss", "what", "be", "the", "best", "way", "to", "proceed", "and", "adapt", "our", "API", "to", "be", "compatible", "with", "the", "eager", "paradigm", "NUMBER", "Let", "s", "loosen", "the", "test", "then", "NUMBER", "The", "tutorials", "do", "need", "better", "seeding", "but", "unfortunately", "all", "of", "our", "efforts", "at", "make", "the", "results", "fully", "deterministic", "have", "be", "unsuccessful", "so", "far", "NUMBER", "Thanks", "Fartash", "Thanks", "for", "the", "PR", "It", "s", "best", "to", "discuss", "the", "question", "regard", "the", "new", "feature", "on", "the", "CleverHans", "mailing", "list", "cleverhans", "dev", "googlegroups", "NUMBER", "com", "which", "you", "can", "ask", "to", "join", "NUMBER", "Thanks", "Did", "you", "make", "progress", "on", "this", "It", "might", "make", "sense", "to", "use", "batch_eval", "or", "adapt", "the", "logic", "that", "it", "implement", "LINK", "_tf", "NUMBER", "py", "L", "NUMBER", "ysharma", "NUMBER", "can", "you", "implement", "the", "fix", "LGTM", "thanks", "for", "catching", "that", "I", "restarted", "it", "but", "the", "test", "be", "still", "fail", "it", "appears", "one", "test", "be", "not", "find", "jmgilmer", "carlini", "Looks", "like", "this", "has", "be", "sitting", "for", "a", "month", "or", "so", "any", "update", "LGTM", "LGTM", "Add", "mkl", "service", "to", "conda", "Thank", "you", "Angus", "Yes", "we", "be", "looking", "into", "it", "NUMBER", "The", "CLA", "googlebot", "looks", "good", "now", "thank", "you", "I", "ll", "ping", "you", "once", "we", "figure", "out", "the", "bug", "with", "Theano", "test", "Thank", "you", "for", "the", "PR", "the", "test", "be", "now", "fix", "NUMBER", "We", "ve", "had", "a", "lot", "of", "PRs", "to", "review", "lately", "so", "it", "might", "take", "a", "bit", "of", "time", "before", "someone", "gets", "to", "this", "but", "we", "will", "as", "soon", "as", "possible", "NUMBER", "Hi", "Yash", "You", "can", "take", "a", "look", "at", "some", "of", "the", "test", "implement", "for", "other", "attacks", "such", "as", "this", "one", "LINK", "_tf", "test_attacks", "NUMBER", "py", "L", "NUMBER", "I", "loosened", "up", "the", "other", "test", "as", "well", "because", "it", "was", "still", "fail", "on", "some", "of", "Travis", "build", "NUMBER", "OK", "to", "ignore", "the", "CLA", "error", "it", "happened", "after", "I", "use", "the", "web", "interface", "on", "GitHub", "to", "edit", "the", "code", "NUMBER", "Unfortunately", "I", "think", "you", "need", "to", "amend", "your", "commit", "in", "order", "to", "fix", "the", "email", "address", "NUMBER", "This", "should", "explain", "how", "LINK", "git", "change", "commit", "email", "For", "some", "reason", "Travis", "fail", "to", "setup", "the", "Theano", "vm", "NUMBER", "It", "error", "while", "trying", "to", "install", "numpy", "NUMBER", "Thank", "you", "for", "the", "pull", "request", "The", "reason", "the", "CLA", "bot", "be", "fail", "seems", "to", "be", "that", "you", "haven", "t", "sign", "your", "commit", "with", "the", "email", "address", "use", "to", "sign", "the", "CLA", "NUMBER", "fartashf", "be", "you", "able", "to", "take", "a", "look", "at", "this", "PR", "in", "the", "next", "couple", "of", "days", "remove", "FLAGS", "from", "utils_tf", "NUMBER", "py", "Yes", "we", "could", "deprecate", "the", "logic", "of", "this", "if", "statement", "LINK", "_tf", "NUMBER", "py", "L", "NUMBER", "and", "require", "that", "the", "file_path", "argument", "be", "supplied", "NUMBER", "npapernot", "Is", "this", "issue", "resolve", "now", "that", "NUMBER", "has", "be", "merge", "I", "don", "t", "think", "this", "be", "resolve", "completely", "I", "believe", "Aurko", "be", "work", "on", "it", "though", "NUMBER", "Did", "you", "check", "that", "you", "be", "giving", "a", "valid", "session", "to", "the", "Attacks", "class", "FAIL", "Test", "if", "pep", "NUMBER", "be", "respected", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "home", "travis", "miniconda", "envs", "test", "environment", "lib", "python", "NUMBER", "site", "package", "nose", "NUMBER", "py", "NUMBER", "egg", "nose", "case", "NUMBER", "py", "line", "NUMBER", "in", "runTest", "self", "NUMBER", "test", "self", "NUMBER", "arg", "File", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "devtools", "test", "test_format", "NUMBER", "py", "line", "NUMBER", "in", "test_format_pep", "NUMBER", "raise", "AssertionError", "PEP", "NUMBER", "Format", "not", "respected", "AssertionError", "PEP", "NUMBER", "Format", "not", "respected", "begin", "captured", "stdout", "TAG", "end", "captured", "stdout", "TAG", "write", "Thanks", "for", "the", "merge", "NUMBER", "You", "be", "receiving", "this", "because", "you", "modify", "the", "open", "close", "state", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "It", "might", "make", "sense", "to", "move", "the", "method", "clip_eta", "self", "eta", "defined", "in", "the", "Madry", "et", "al", "NUMBER", "class", "to", "the", "abstract", "Attack", "class", "since", "most", "attacks", "need", "this", "clipping", "step", "at", "some", "point", "NUMBER", "fartashf", "be", "work", "on", "this", "NUMBER", "Thank", "you", "for", "the", "PR", "The", "test", "be", "fail", "because", "of", "the", "PEP", "NUMBER", "checker", "NUMBER", "Here", "be", "a", "dump", "of", "the", "test", "log", "FAIL", "Test", "if", "pep", "NUMBER", "be", "respected", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "home", "travis", "miniconda", "envs", "test", "environment", "lib", "python", "NUMBER", "site", "package", "nose", "NUMBER", "py", "NUMBER", "egg", "nose", "case", "NUMBER", "py", "line", "NUMBER", "in", "runTest", "self", "NUMBER", "test", "self", "NUMBER", "arg", "File", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "devtools", "test", "test_format", "NUMBER", "py", "line", "NUMBER", "in", "test_format_pep", "NUMBER", "raise", "AssertionError", "PEP", "NUMBER", "Format", "not", "respected", "AssertionError", "PEP", "NUMBER", "Format", "not", "respected", "begin", "captured", "stdout", "TAG", "NUMBER", "characters", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "line", "too", "long", "NUMBER", "NUMBER", "characters", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "line", "too", "long", "NUMBER", "NUMBER", "characters", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "line", "too", "long", "NUMBER", "NUMBER", "characters", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "line", "too", "long", "NUMBER", "NUMBER", "characters", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "line", "too", "long", "NUMBER", "NUMBER", "characters", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "line", "too", "long", "NUMBER", "NUMBER", "characters", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "line", "too", "long", "NUMBER", "NUMBER", "characters", "end", "captured", "stdout", "TAG", "begin", "captured", "stdout", "TAG", "end", "captured", "stdout", "TAG", "begin", "captured", "stdout", "TAG", "end", "captured", "stdout", "TAG", "begin", "captured", "stdout", "TAG", "end", "captured", "stdout", "TAG", "write", "The", "above", "was", "after", "NUMBER", "epochs", "NUMBER", "I", "be", "get", "variation", "over", "run", "NUMBER", "In", "the", "end", "after", "the", "adversarial", "training", "I", "get", "NUMBER", "accuracy", "on", "the", "adversarial", "samples", "NUMBER", "And", "yeah", "the", "model", "be", "not", "hitting", "machine", "zero", "in", "this", "case", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "I", "m", "assuming", "before", "training", "normal", "training", "and", "after", "training", "adversarial", "training", "NUMBER", "That", "do", "look", "like", "a", "big", "improvement", "NUMBER", "Could", "you", "send", "a", "PR", "On", "Fri", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Abhibhav", "Garg", "TAG", "write", "use", "the", "original", "Adadelta", "before", "training", "NUMBER", "and", "after", "training", "NUMBER", "use", "adam", "before", "training", "NUMBER", "and", "after", "training", "NUMBER", "Adam", "seems", "overall", "better", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Yes", "we", "should", "raise", "it", "because", "fail", "to", "get", "the", "usual", "numbers", "for", "Adam", "could", "indicate", "a", "bug", "NUMBER", "On", "Sat", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Abhibhav", "Garg", "TAG", "write", "Should", "we", "increase", "the", "values", "in", "the", "test", "to", "match", "For", "example", "right", "now", "the", "test_mnist_tutorial_tf", "just", "expects", "adv_train_adv_eval", "to", "be", "greater", "than", "NUMBER", "but", "we", "can", "now", "increase", "this", "by", "a", "bit", "NUMBER", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Thanks", "I", "think", "they", "should", "be", "sped", "up", "rather", "than", "remove", "NUMBER", "They", "re", "the", "only", "thing", "we", "have", "resembling", "an", "integration", "test", "NUMBER", "Integration", "test", "be", "important", "as", "well", "as", "unit", "test", "NUMBER", "Also", "before", "we", "had", "the", "test", "people", "routinely", "made", "edits", "to", "the", "tutorials", "themselves", "that", "broke", "the", "tutorials", "NUMBER", "I", "think", "it", "s", "important", "to", "review", "this", "properly", "but", "it", "arrives", "at", "a", "time", "of", "very", "high", "reviewer", "load", "due", "to", "preparation", "for", "the", "NUMBER", "release", "NUMBER", "I", "propose", "leaving", "this", "PR", "in", "place", "until", "the", "preceding", "PRs", "have", "be", "dealt", "with", "NUMBER", "abhibhav", "NUMBER", "be", "you", "still", "willing", "to", "work", "on", "this", "PR", "I", "agree", "if", "that", "be", "easier", "for", "you", "it", "would", "be", "best", "to", "open", "a", "new", "PR", "Not", "yet", "I", "start", "work", "on", "it", "locally", "and", "will", "make", "a", "PR", "this", "week", "Looks", "like", "it", "needs", "a", "PEP", "NUMBER", "cleanup", "to", "pass", "Travis", "but", "otherwise", "ready", "to", "go", "NUMBER", "Thanks", "Thanks", "I", "haven", "t", "looked", "at", "it", "but", "the", "JSMA", "implementation", "might", "be", "crawling", "the", "TensorFlow", "graph", "to", "obtain", "the", "logits", "after", "you", "pass", "it", "probabilities", "NUMBER", "If", "that", "s", "what", "it", "s", "doing", "and", "if", "it", "runs", "without", "raising", "an", "exception", "when", "you", "pass", "it", "the", "logits", "then", "it", "should", "probably", "add", "a", "check", "that", "the", "probabilities", "it", "receives", "be", "the", "output", "of", "the", "Softmax", "op", "NUMBER", "On", "Tue", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Nicholas", "Carlini", "TAG", "write", "Hmm", "NUMBER", "it", "looks", "like", "the", "accuracy", "test", "has", "fail", "NUMBER", "Nicolas", "should", "JSMA", "operate", "post", "softmax", "on", "these", "networks", "If", "so", "the", "documentation", "should", "probably", "change", "NUMBER", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "I", "think", "ideally", "we", "should", "make", "them", "all", "take", "probabilities", "and", "they", "can", "recover", "the", "logits", "if", "needed", "NUMBER", "Maybe", "we", "should", "pull", "out", "the", "code", "for", "doing", "that", "and", "turn", "it", "into", "a", "utility", "function", "NUMBER", "On", "Wed", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Nicolas", "Papernot", "TAG", "write", "I", "talked", "to", "Nicholas", "in", "real", "life", "There", "be", "no", "specific", "need", "to", "remove", "the", "softmax", "layer", "at", "the", "moment", "NUMBER", "However", "we", "should", "update", "the", "documentation", "to", "say", "that", "the", "model", "can", "be", "pre", "or", "post", "softmax", "NUMBER", "I", "will", "also", "open", "a", "new", "issue", "because", "we", "could", "build", "on", "NUMBER", "TAG", "and", "additional", "code", "to", "clarify", "which", "attacks", "need", "the", "logits", "and", "which", "ones", "need", "the", "softmax", "outputs", "NUMBER", "In", "addition", "to", "improving", "the", "documentation", "this", "may", "require", "add", "some", "sanity", "checks", "on", "the", "model", "argument", "when", "initializing", "the", "different", "attacks", "NUMBER", "You", "be", "receiving", "this", "because", "you", "commented", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Didn", "t", "Nicolas", "see", "a", "difference", "in", "performance", "when", "he", "change", "the", "tutorial", "from", "passing", "probabilities", "to", "passing", "logits", "On", "Wed", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Nicolas", "Papernot", "TAG", "write", "npapernot", "commented", "on", "this", "pull", "request", "NUMBER", "In", "tutorials", "mnist_tutorial_jsma", "NUMBER", "py", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "def", "mnist_tutorial_jsma", "train_start", "NUMBER", "train_end", "NUMBER", "test_start", "NUMBER", "grid_shape", "nb_classes", "nb_classes", "img_rows", "img_cols", "channels", "grid_viz_data", "np", "NUMBER", "zeros", "grid_shape", "dtype", "f", "by", "default", "we", "have", "softmax", "after", "a", "CNN", "remove", "it", "here", "The", "JSMA", "implementation", "would", "not", "change", "whether", "it", "be", "be", "fed", "probabilities", "or", "logits", "it", "can", "handle", "both", "NUMBER", "That", "s", "why", "we", "were", "thinking", "of", "update", "the", "documentation", "to", "make", "that", "more", "clear", "rather", "than", "modifying", "the", "tutorial", "the", "few", "lines", "add", "to", "the", "tutorial", "in", "this", "PR", "would", "be", "remove", "NUMBER", "Does", "that", "make", "sense", "or", "do", "you", "prefer", "an", "alternative", "You", "be", "receiving", "this", "because", "you", "commented", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "I", "d", "suggest", "make", "JSMA", "use", "the", "new", "Model", "abstraction", "and", "then", "have", "the", "attack", "explicitly", "request", "either", "logits", "or", "probabilities", "from", "the", "Model", "based", "on", "a", "flag", "in", "the", "__init__", "method", "for", "JSMA", "NUMBER", "That", "way", "people", "don", "t", "need", "to", "redefine", "their", "model", "to", "change", "the", "attack", "behavior", "NUMBER", "On", "Thu", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Nicolas", "Papernot", "TAG", "write", "I", "talked", "to", "Nicholas", "about", "the", "performance", "drop", "he", "observed", "when", "change", "the", "tutorial", "NUMBER", "Basically", "users", "should", "first", "try", "to", "run", "the", "JSMA", "attack", "use", "probabilities", "which", "be", "likely", "to", "work", "better", "in", "most", "cases", "NUMBER", "If", "they", "encounter", "numerical", "issue", "when", "computing", "the", "Jacobian", "they", "can", "try", "feeding", "in", "the", "logits", "directly", "which", "can", "work", "better", "if", "the", "numerical", "instabilities", "be", "due", "to", "the", "softmax", "NUMBER", "This", "be", "why", "we", "use", "the", "logits", "in", "the", "original", "paper", "and", "then", "the", "probabilities", "in", "subsequent", "papers", "NUMBER", "You", "be", "receiving", "this", "because", "you", "commented", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "I", "ve", "be", "waiting", "to", "review", "this", "until", "we", "settle", "NUMBER", "which", "will", "hopefully", "be", "this", "morning", "NUMBER", "Yeah", "let", "s", "resolve", "NUMBER", "before", "we", "increment", "the", "tag", "NUMBER", "This", "be", "worth", "taking", "some", "time", "to", "get", "right", "so", "I", "suggest", "we", "write", "some", "code", "with", "it", "to", "make", "sure", "it", "really", "do", "what", "we", "want", "NUMBER", "This", "doesn", "t", "need", "to", "all", "be", "do", "by", "fartashf", "some", "of", "the", "rest", "of", "us", "can", "also", "push", "to", "this", "branch", "NUMBER", "I", "d", "suggest", "Convert", "the", "tutorials", "to", "use", "the", "new", "interface", "and", "make", "sure", "everything", "all", "works", "Convert", "all", "the", "attacks", "to", "assume", "that", "the", "model", "include", "a", "definition", "of", "the", "probabilities", "and", "make", "sure", "the", "attacks", "all", "fetch", "either", "logits", "or", "probabilities", "as", "needed", "Maybe", "make", "an", "example", "that", "uses", "L", "NUMBER", "regularization", "of", "the", "activities", "or", "something", "like", "that", "that", "exercises", "the", "model", "interface", "more", "Did", "we", "convert", "the", "tutorials", "to", "use", "the", "new", "interface", "When", "generate_np", "be", "call", "more", "than", "once", "with", "different", "argument", "it", "just", "replays", "the", "first", "graph", "NUMBER", "I", "think", "it", "would", "be", "best", "to", "fix", "this", "by", "just", "remove", "generate_np", "because", "some", "keyword", "argument", "need", "to", "trigger", "generation", "of", "new", "graphs", "and", "others", "don", "t", "NUMBER", "This", "seems", "like", "too", "subtle", "of", "a", "point", "for", "most", "Attack", "implementers", "to", "handle", "NUMBER", "You", "can", "use", "the", "while", "loop", "to", "avoid", "make", "a", "large", "unrolled", "graph", "LINK", "_docs", "python", "tf", "while_loop", "Or", "you", "can", "wrap", "python", "code", "up", "to", "make", "a", "tensorflow", "op", "LINK", "_docs", "python", "tf", "py_func", "On", "Mon", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Nicholas", "Carlini", "TAG", "write", "This", "would", "have", "fairly", "large", "consequences", "for", "attacks", "that", "be", "not", "easy", "to", "or", "perhaps", "even", "impossible", "to", "implement", "fully", "symbolically", "NUMBER", "For", "example", "if", "you", "wanted", "to", "generate", "adversarial", "examples", "on", "a", "few", "thousand", "iterations", "use", "the", "attack", "algorithm", "I", "have", "or", "JSMA", "as", "currently", "implement", "you", "would", "have", "to", "construct", "thousands", "of", "tf", "NUMBER", "gradient", "operations", "instead", "of", "caching", "it", "and", "just", "doing", "one", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Oh", "for", "that", "it", "s", "straightforward", "you", "just", "feed", "a", "different", "value", "each", "time", "NUMBER", "On", "Mon", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Nicholas", "Carlini", "TAG", "write", "Oh", "I", "think", "I", "was", "unclear", "what", "I", "meant", "by", "iterations", "I", "didn", "t", "mean", "iterations", "of", "the", "attack", "algorithm", "I", "meant", "iterations", "of", "calling", "attack", "NUMBER", "generate", "NUMBER", "If", "we", "have", "to", "construct", "a", "new", "graph", "each", "time", "that", "would", "be", "expensive", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "No", "you", "generate", "the", "graph", "once", "and", "feed", "many", "different", "values", "through", "it", "NUMBER", "The", "tutorials", "already", "do", "this", "LINK", "_tutorial_tf", "NUMBER", "py", "On", "Tue", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Nicholas", "Carlini", "TAG", "write", "This", "requires", "re", "generating", "the", "entire", "graph", "each", "time", "though", "right", "You", "have", "to", "pay", "the", "cost", "of", "doing", "that", "every", "time", "you", "call", "generate", "when", "ideally", "you", "d", "only", "construct", "the", "graph", "once", "and", "use", "it", "every", "time", "after", "that", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Yes", "by", "wrapping", "a", "python", "function", "that", "do", "the", "JSMA", "code", "in", "a", "tf", "op", "use", "tf", "NUMBER", "py_func", "On", "Tue", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Nicholas", "Carlini", "TAG", "write", "Yeah", "but", "that", "only", "works", "because", "the", "FGS", "attack", "be", "a", "fully", "TF", "graph", "NUMBER", "Could", "you", "do", "this", "same", "thing", "with", "the", "JSMA", "code", "without", "having", "to", "call", "tf", "NUMBER", "gradients", "each", "time", "you", "want", "a", "new", "adversarial", "example", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "I", "think", "everyone", "agrees", "the", "current", "behavior", "be", "a", "bug", "NUMBER", "I", "would", "do", "NUMBER", "if", "I", "were", "work", "alone", "but", "it", "seems", "unlikely", "that", "we", "d", "be", "able", "to", "efficiently", "explain", "the", "situation", "to", "all", "future", "Attack", "subclass", "implementers", "NUMBER", "Subclass", "implementers", "will", "probably", "do", "the", "right", "thing", "if", "their", "implementation", "really", "be", "numpy", "based", "NUMBER", "If", "their", "implementation", "be", "based", "on", "wrapping", "symbolic", "code", "they", "ll", "probably", "leave", "out", "the", "caching", "mechanism", "or", "implement", "the", "caching", "mechanism", "incorrectly", "NUMBER", "We", "could", "make", "a", "default", "implementation", "of", "the", "correct", "caching", "mechanism", "in", "the", "Attack", "superclass", "but", "this", "would", "require", "imposing", "some", "hard", "rules", "like", "that", "every", "value", "in", "kwargs", "be", "fed", "into", "a", "placeholder", "and", "every", "argument", "that", "change", "the", "graph", "structure", "must", "go", "into", "__init__", "NUMBER", "This", "makes", "the", "implementation", "of", "generate", "more", "annoying", "NUMBER", "I", "don", "t", "think", "that", "generate_np", "be", "important", "enough", "that", "we", "should", "redesign", "generate", "to", "make", "it", "feasible", "NUMBER", "On", "Tue", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Nicholas", "Carlini", "TAG", "write", "So", "I", "see", "three", "paths", "forward", "NUMBER", "NUMBER", "Ian", "s", "recommendation", "just", "delete", "the", "generate_np", "functionality", "NUMBER", "Make", "generate", "the", "only", "method", "and", "wrap", "everything", "with", "a", "py_func", "if", "you", "can", "t", "do", "it", "symbolically", "NUMBER", "Since", "this", "doesn", "t", "have", "the", "performance", "implications", "I", "thought", "it", "would", "this", "be", "a", "reasonable", "option", "NUMBER", "The", "only", "potential", "problem", "with", "it", "be", "that", "now", "the", "interface", "be", "slightly", "less", "clean", "for", "a", "new", "user", "who", "just", "wants", "to", "generate", "an", "attack", "since", "they", "ll", "have", "to", "create", "a", "tf", "placeholder", "NUMBER", "NUMBER", "Make", "generate_np", "call", "generate", "every", "time", "it", "receives", "argument", "NUMBER", "Don", "t", "save", "the", "graph", "NUMBER", "This", "be", "potentially", "very", "slow", "to", "do", "but", "we", "could", "document", "it", "with", "a", "big", "warning", "saying", "something", "to", "that", "effect", "NUMBER", "This", "method", "would", "be", "use", "only", "for", "one", "off", "adversarial", "example", "generation", "and", "not", "if", "you", "want", "to", "have", "it", "in", "a", "tight", "loop", "which", "be", "probably", "already", "the", "case", "NUMBER", "NUMBER", "Make", "generate_np", "call", "generate", "every", "time", "it", "receives", "a", "new", "set", "of", "argument", "NUMBER", "Cache", "the", "graph", "objects", "we", "ve", "use", "so", "far", "NUMBER", "If", "the", "argument", "be", "the", "same", "as", "a", "previous", "computation", "then", "re", "use", "that", "older", "graph", "NUMBER", "If", "not", "make", "a", "new", "graph", "NUMBER", "This", "makes", "it", "as", "efficient", "as", "generate", "while", "keep", "the", "nice", "easy", "to", "use", "functionality", "NUMBER", "The", "only", "difficulty", "be", "that", "now", "everyone", "who", "wants", "to", "implement", "an", "attack", "has", "to", "handle", "this", "NUMBER", "There", "might", "be", "some", "nice", "way", "to", "abstract", "this", "into", "the", "Attack", "super", "class", "though", "that", "makes", "it", "easier", "to", "handle", "NUMBER", "Personally", "I", "like", "option", "NUMBER", "followed", "by", "NUMBER", "and", "then", "NUMBER", "NUMBER", "I", "like", "the", "generate_np", "method", "as", "a", "nice", "simple", "interface", "for", "someone", "who", "just", "wants", "an", "adversarial", "example", "and", "if", "this", "comes", "at", "the", "cost", "of", "some", "more", "implementation", "work", "so", "be", "it", "NUMBER", "But", "whatever", "we", "do", "I", "do", "think", "that", "the", "current", "behavior", "of", "use", "old", "argument", "be", "counterintuitive", "at", "best", "and", "should", "be", "change", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Actually", "here", "s", "another", "thought", "generate_np", "be", "OK", "if", "it", "s", "actually", "implement", "in", "NumPy", "NUMBER", "I", "don", "t", "think", "there", "s", "any", "know", "bug", "with", "the", "default", "implementation", "of", "generate", "that", "wraps", "generate_np", "NUMBER", "What", "if", "we", "keep", "generate_np", "as", "a", "method", "that", "subclasses", "can", "optionally", "implement", "if", "they", "want", "to", "make", "the", "default", "implementation", "of", "generate", "wrap", "their", "NumPy", "implementation", "This", "would", "mean", "the", "user", "can", "t", "expect", "generate_np", "to", "work", "for", "every", "class", "but", "some", "classes", "that", "be", "most", "naturally", "implement", "in", "NumPy", "could", "still", "use", "it", "NUMBER", "On", "Wed", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Nicolas", "Papernot", "TAG", "write", "It", "sounds", "like", "the", "best", "option", "be", "to", "deprecate", "generate_np", "and", "remove", "it", "in", "NUMBER", "months", "NUMBER", "Should", "we", "issue", "a", "warning", "when", "the", "user", "calls", "generate_np", "multiple", "times", "to", "warn", "that", "it", "will", "reuse", "the", "first", "graph", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "I", "set", "up", "an", "in", "person", "meeting", "with", "Nicolas", "and", "Nicholas", "to", "discuss", "this", "in", "more", "detail", "NUMBER", "If", "anyone", "would", "like", "to", "join", "the", "meeting", "e", "NUMBER", "g", "NUMBER", "via", "hangouts", "reply", "and", "let", "me", "know", "NUMBER", "We", "ll", "write", "back", "to", "the", "list", "with", "our", "conclusions", "NUMBER", "On", "Wed", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Nicholas", "Carlini", "TAG", "write", "That", "makes", "sense", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "frankyjuang", "Why", "did", "you", "close", "this", "Did", "you", "decide", "it", "wasn", "t", "a", "good", "idea", "after", "looking", "at", "the", "output", "of", "the", "test", "see", "NUMBER", "Yes", "the", "key", "error", "should", "be", "adressed", "by", "NUMBER", "thanks", "for", "confirming", "Hi", "the", "keras", "learning", "phase", "variable", "be", "use", "to", "control", "layers", "that", "have", "different", "behavior", "at", "training", "and", "test", "time", "e", "NUMBER", "g", "NUMBER", "dropout", "NUMBER", "In", "the", "tutorials", "we", "don", "t", "use", "these", "layers", "NUMBER", "To", "avoid", "having", "to", "feed", "a", "value", "of", "this", "variable", "in", "all", "TF", "graph", "runs", "performed", "by", "cleverhans", "we", "simply", "set", "it", "to", "NUMBER", "If", "you", "use", "K", "NUMBER", "fit", "you", "may", "not", "be", "able", "to", "use", "some", "of", "the", "cleverhans", "function", "such", "as", "adversarial", "training", "NUMBER", "Sorry", "for", "the", "confusion", "yes", "I", "meant", "it", "will", "be", "hard", "to", "use", "cleverhans", "function", "as", "be", "because", "the", "learning", "phase", "will", "raise", "a", "value", "not", "fed", "error", "NUMBER", "Actually", "I", "had", "a", "relate", "thought", "the", "other", "day", "we", "may", "want", "to", "have", "an", "optional", "argument", "to", "cleverhans", "function", "that", "run", "a", "TF", "graph", "where", "users", "can", "specify", "a", "feeding", "dictionary", "of", "additional", "variables", "along", "with", "their", "values", "that", "will", "be", "appended", "to", "the", "feeding", "dictionary", "hard", "code", "in", "cleverhans", "when", "run", "sess", "NUMBER", "run", "NUMBER", "Yes", "that", "was", "what", "I", "wanted", "to", "provide", "as", "a", "new", "feature", "to", "allow", "people", "to", "provide", "custom", "placeholders", "and", "their", "values", "that", "should", "be", "add", "to", "the", "feeding", "dictionary", "when", "run", "the", "session", "NUMBER", "The", "current", "argument", "processing", "was", "not", "designed", "to", "support", "this", "but", "it", "was", "not", "intentional", "NUMBER", "Thanks", "could", "you", "make", "a", "PR", "On", "Sun", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "PM", "Holden", "Lee", "TAG", "write", "Running", "pip", "install", "e", "git", "git", "github", "NUMBER", "com", "openai", "cleverhans", "NUMBER", "git", "egg", "cleverhans", "gives", "the", "error", "Permission", "denied", "publickey", "NUMBER", "fatal", "Could", "not", "read", "from", "remote", "repository", "NUMBER", "Please", "make", "sure", "you", "have", "the", "correct", "access", "rights", "and", "the", "repository", "exists", "NUMBER", "Command", "git", "clone", "q", "git", "github", "NUMBER", "com", "openai", "cleverhans", "NUMBER", "git", "home", "optml", "holdenl", "mwu", "NUMBER", "mwu", "src", "cleverhans", "fail", "with", "error", "code", "NUMBER", "in", "None", "This", "can", "be", "fix", "by", "run", "pip", "install", "e", "git", "LINK", "egg", "cleverhans", "instead", "NUMBER", "See", "LINK", "install", "a", "specific", "git", "branch", "on", "github", "with", "pip", "permission", "denied", "pub", "NUMBER", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "This", "be", "an", "issue", "that", "we", "have", "to", "address", "yes", "NUMBER", "The", "save", "feature", "doesn", "t", "work", "because", "we", "be", "defining", "the", "model", "use", "keras", "NUMBER", "Any", "contributions", "be", "welcome", "if", "you", "be", "able", "to", "make", "it", "work", "otherwise", "I", "would", "suggest", "defining", "the", "model", "directly", "use", "tf", "Hi", "I", "be", "not", "sure", "if", "that", "be", "true", "NUMBER", "Here", "be", "a", "PR", "implement", "this", "functionality", "in", "TF", "LINK", "Did", "you", "run", "into", "any", "issue", "run", "cleverhans", "NUMBER", "for", "specify", "which", "version", "of", "tf", "we", "support", "NUMBER", "The", "code", "currently", "mentions", "a", "potential", "deprecation", "for", "version", "that", "don", "t", "support", "global_variables_initializer", "here", "LINK", "_tf", "NUMBER", "py", "L", "NUMBER", "So", "we", "may", "want", "to", "support", "NUMBER", "Closes", "NUMBER", "Moves", "the", "matplotlib", "import", "inside", "the", "only", "two", "function", "of", "utils", "NUMBER", "py", "that", "use", "it", "Closes", "NUMBER", "The", "bug", "find", "was", "due", "to", "not", "use", "the", "TF", "flags", "whereas", "one", "flag", "was", "still", "in", "use", "to", "get", "the", "number", "of", "classes", "in", "the", "jsma", "function", "NUMBER", "The", "dependency", "on", "FLAGS", "be", "now", "remove", "by", "deriving", "the", "number", "of", "classes", "from", "the", "length", "of", "the", "list", "of", "grads", "NUMBER", "Can", "you", "be", "more", "specific", "about", "the", "error", "you", "be", "get", "and", "or", "paste", "the", "error", "log", "Thank", "you", "for", "point", "this", "out", "let", "us", "know", "if", "NUMBER", "fix", "this", "bug", "on", "your", "side", "as", "well", "NUMBER", "I", "based", "it", "off", "the", "snippet", "you", "shared", "NUMBER", "Hi", "Riaan", "The", "value", "of", "the", "parameter", "epsilon", "should", "be", "set", "depending", "on", "the", "input", "domain", "you", "be", "work", "with", "NUMBER", "It", "lets", "you", "trade", "off", "the", "chances", "of", "having", "the", "input", "misclassified", "with", "the", "magnitude", "of", "the", "perturbation", "introduce", "NUMBER", "The", "impact", "of", "an", "epsilon", "parameter", "of", "NUMBER", "on", "your", "CIFAR", "data", "will", "depend", "on", "how", "you", "pre", "processed", "it", "before", "training", "your", "model", "NUMBER", "Have", "you", "tried", "reducing", "the", "value", "of", "epsilon", "You", "may", "want", "to", "check", "LINK", "_cifar", "NUMBER", "_tf", "NUMBER", "py", "and", "ping", "paulhendricks", "Cheers", "In", "cleverhans", "NUMBER", "utils_mnist", "keras", "be", "use", "to", "load", "MNIST", "NUMBER", "We", "could", "directly", "download", "from", "its", "website", "and", "remove", "all", "dependencies", "on", "keras", "Thanks", "for", "the", "code", "snippet", "NUMBER", "You", "be", "right", "this", "would", "be", "the", "way", "to", "go", "once", "Theano", "support", "be", "deprecate", "NUMBER", "We", "recently", "propose", "to", "drop", "Theano", "support", "LINK", "topic", "cleverhans", "dev", "xXqAG", "NUMBER", "RTfo", "so", "we", "will", "soon", "be", "able", "to", "assume", "that", "all", "users", "be", "run", "TensorFlow", "NUMBER", "It", "be", "probably", "easier", "to", "hold", "on", "for", "the", "PR", "that", "will", "deprecate", "Theano", "before", "resolving", "this", "issue", "Closes", "NUMBER", "When", "no", "pixels", "satisfy", "the", "saliency", "map", "the", "JSMA", "will", "try", "to", "remove", "the", "same", "pair", "of", "pixels", "multiple", "times", "from", "the", "search_domain", "list", "NUMBER", "Switched", "to", "discard", "performance", "overhead", "be", "acceptable", "given", "that", "this", "case", "be", "not", "common", "afaik", "Some", "change", "made", "in", "NUMBER", "created", "a", "bug", "by", "setting", "the", "gradients", "of", "pixels", "outside", "of", "the", "search", "domain", "to", "NUMBER", "the", "value", "be", "not", "sufficiently", "extreme", "in", "order", "to", "guarantee", "that", "the", "pixel", "will", "not", "be", "selected", "as", "part", "of", "a", "pair", "when", "computing", "the", "saliency", "score", "Perhaps", "apnorton", "and", "or", "rms", "NUMBER", "This", "PR", "be", "based", "on", "an", "issue", "they", "raise", "apnorton", "do", "you", "have", "any", "suggestions", "before", "we", "merge", "this", "hi", "aam", "at", "would", "you", "mind", "resolving", "the", "conflict", "with", "the", "master", "branch", "now", "that", "NUMBER", "was", "merge", "your", "PR", "should", "pass", "the", "test", "Great", "thank", "you", "Could", "you", "take", "a", "look", "takerum", "Thanks", "takerum", "aam", "at", "Did", "you", "get", "a", "chance", "to", "look", "at", "this", "again", "Just", "wanted", "to", "check", "in", "thanks", "a", "lot", "for", "your", "contributions", "aam", "at", "Thank", "you", "for", "make", "the", "change", "required", "The", "code", "matches", "the", "API", "better", "now", "The", "discussion", "was", "on", "the", "cleverhans", "dev", "mailing", "list", "dropping", "Theano", "support", "NUMBER", "On", "Thu", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Alexander", "Matyasko", "TAG", "write", "npapernot", "TAG", "I", "add", "basic", "test", "for", "utils", "and", "vatm", "method", "NUMBER", "Do", "you", "have", "a", "roadmap", "for", "this", "project", "Can", "you", "point", "me", "out", "to", "the", "discussion", "why", "you", "be", "dropping", "theano", "support", "Thanks", "NUMBER", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "adv_x", "as", "defined", "in", "the", "tutorials", "be", "actually", "the", "images", "generate", "by", "FGSM", "like", "you", "want", "NUMBER", "batch_eval", "will", "evaluate", "any", "graph", "you", "pass", "to", "it", "so", "you", "could", "use", "it", "to", "generate", "either", "the", "adversarial", "images", "or", "just", "the", "perturbations", "NUMBER", "Thank", "you", "rafaelpossas", "I", "will", "get", "back", "to", "this", "after", "NUMBER", "be", "merge", "NUMBER", "Two", "things", "that", "can", "be", "improved", "can", "you", "make", "sure", "PEP", "NUMBER", "test", "pass", "be", "the", "change", "going", "to", "break", "the", "keras", "model", "definition", "for", "clients", "with", "keras", "TAG", "begin", "captured", "stdout", "TAG", "write", "I", "just", "looked", "through", "the", "code", "a", "lot", "has", "change", "since", "I", "last", "contributed", "to", "the", "fork", "NUMBER", "I", "be", "confused", "about", "this", "new", "model", "parameter", "that", "be", "handed", "to", "the", "init", "function", "NUMBER", "Is", "this", "going", "to", "require", "use", "Keras", "Yes", "users", "can", "write", "their", "own", "TF", "model", "constructor", "function", "and", "pass", "those", "as", "callables", "but", "that", "seems", "like", "a", "lot", "of", "complexity", "add", "to", "the", "user", "side", "of", "things", "NUMBER", "The", "only", "time", "that", "I", "see", "this", "parameter", "be", "necessary", "be", "to", "compute", "a", "symbolic", "version", "of", "the", "BasicIterativeMethod", "attack", "NUMBER", "But", "recall", "that", "for", "the", "numeric", "version", "model", "callable", "was", "not", "required", "we", "could", "simply", "revert", "to", "the", "numeric", "version", "that", "we", "had", "before", "and", "use", "tf", "NUMBER", "py_func", "to", "get", "a", "symbolic", "version", "NUMBER", "Also", "we", "should", "address", "the", "fact", "that", "in", "the", "parent", "class", "generate", "and", "generate_np", "would", "get", "stuck", "in", "an", "infinite", "loop", "of", "calling", "each", "other", "back", "and", "forth", "NUMBER", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "rfeinman", "thanks", "for", "the", "PR", "but", "please", "make", "sure", "your", "code", "pass", "PEP", "NUMBER", "test", "next", "time", "I", "fix", "the", "error", "for", "this", "time", "Will", "run", "a", "few", "more", "test", "before", "merge", "No", "worries", "Reuben", "we", "only", "recently", "implement", "the", "pep", "NUMBER", "compliance", "checks", "in", "NUMBER", "Passed", "all", "test", "on", "my", "machine", "merge", "now", "I", "be", "closing", "this", "for", "now", "since", "we", "have", "deprecate", "Theano", "and", "a", "TF", "version", "be", "underway", "NUMBER", "Having", "flags", "tf", "flags", "be", "ok", "in", "the", "tutorials", "but", "it", "would", "be", "easier", "to", "import", "function", "from", "the", "cleverhans", "module", "if", "they", "didn", "t", "reuse", "flags", "directly", "but", "rather", "get", "these", "values", "as", "argument", "e", "NUMBER", "g", "NUMBER", "learning", "rate", "in", "model", "train", "LGTM", "NUMBER", "Fixed", "a", "small", "dimension", "mismatch", "bug", "goodfeli", "do", "you", "consider", "this", "close", "since", "we", "put", "together", "the", "Travis", "conf", "in", "NUMBER", "In", "my", "opinion", "we", "could", "probably", "use", "more", "unit", "test", "Ok", "I", "see", "then", "we", "have", "to", "make", "the", "test", "run", "the", "original", "tutorial", "script", "and", "check", "if", "accuracy", "be", "in", "expected", "range", "for", "both", "models", "on", "legitimate", "and", "adversarial", "inputs", "LGTM", "This", "should", "be", "fix", "now", "NUMBER", "Feel", "free", "to", "reopen", "if", "that", "s", "not", "the", "case", "NUMBER", "The", "test", "be", "passing", "on", "my", "machine", "as", "well", "TF", "NUMBER", "rc", "NUMBER", "and", "same", "keras", "version", "LGTM", "I", "guess", "now", "there", "be", "test", "for", "JSMA", "but", "they", "re", "flaky", "See", "the", "failure", "here", "LINK", "ci", "NUMBER", "org", "tensorflow", "cleverhans", "jobs", "NUMBER", "k", "NUMBER", "Should", "we", "also", "make", "the", "tutorial", "test", "less", "flaky", "somehow", "Seeds", "for", "random", "number", "generators", "Closed", "by", "NUMBER", "kudkudak", "Do", "you", "think", "you", "can", "make", "a", "PR", "for", "this", "Thanks", "On", "Fri", "Feb", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "PM", "Stanislaw", "Jastrzebski", "TAG", "write", "Will", "do", "But", "after", "ICLR", "workshop", "deadline", "You", "be", "receiving", "this", "because", "you", "commented", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "kudkudak", "anything", "new", "regard", "this", "issue", "No", "worries", "your", "help", "be", "appreciated", "LGTM", "thank", "you", "for", "your", "contribution", "regardin", "NUMBER", "this", "be", "not", "possible", "otherwise", "everytime", "we", "make", "a", "new", "call", "to", "jsma", "in", "order", "to", "craft", "a", "new", "adversarial", "example", "we", "will", "create", "new", "TF", "graph", "elements", "and", "make", "the", "operations", "slower", "and", "slower", "at", "each", "call", "of", "jsma", "This", "will", "get", "address", "by", "the", "new", "API", "in", "preparation", "NUMBER", "I", "will", "commit", "a", "few", "change", "to", "the", "documentation", "and", "make", "some", "minor", "change", "to", "the", "code", "NUMBER", "Should", "be", "do", "today", "and", "will", "merge", "this", "tonight", "NUMBER", "Thanks", "mahnerak", "for", "the", "contribution", "this", "be", "a", "good", "first", "step", "towards", "support", "TF", "and", "TH", "NUMBER", "a", "NUMBER", "b", "NUMBER", "moves", "JSMA", "to", "attacks_tf", "Hi", "Reuben", "and", "Hrant", "thanks", "for", "your", "contributions", "NUMBER", "I", "received", "another", "proposal", "by", "email", "for", "a", "unique", "attack", "interface", "NUMBER", "Unfortunately", "things", "be", "hectic", "at", "the", "moment", "since", "I", "m", "at", "NIPS", "but", "I", "ll", "get", "to", "this", "soon", "NUMBER", "Regarding", "NUMBER", "we", "be", "also", "considering", "a", "full", "symbolic", "implementation", "of", "JSMA", "for", "efficiency", "NUMBER", "Regarding", "NUMBER", "the", "reason", "behind", "this", "be", "the", "recent", "discovery", "of", "label", "leaking", "NUMBER", "For", "consistency", "I", "ll", "make", "that", "more", "clear", "and", "perhaps", "disable", "that", "enhancement", "as", "the", "default", "behavior", "NUMBER", "I", "be", "not", "sure", "this", "PR", "makes", "much", "sense", "given", "the", "recent", "addition", "of", "the", "FGSM", "implementation", "in", "Theano", "see", "NUMBER", "which", "change", "a", "lot", "of", "the", "code", "NUMBER", "Two", "comments", "a", "Regarding", "your", "point", "NUMBER", "Alex", "Kurakin", "made", "some", "suggestions", "on", "the", "cleverhans", "dev", "group", "on", "how", "to", "make", "the", "JSMA", "symbolic", "and", "for", "a", "common", "attack", "interface", "NUMBER", "We", "should", "follow", "up", "on", "that", "NUMBER", "b", "It", "would", "still", "be", "useful", "to", "have", "two", "variants", "of", "the", "FGSM", "with", "and", "without", "the", "label", "leaking", "fix", "NUMBER", "Maybe", "as", "an", "optional", "argument", "to", "attacks", "NUMBER", "fgsm", "If", "there", "be", "no", "objections", "I", "will", "close", "this", "PR", "NUMBER", "It", "looks", "easier", "to", "recreate", "one", "specifically", "for", "a", "and", "b", "NUMBER", "note", "to", "self", "two", "empty", "lines", "before", "each", "function", "space", "after", "commas", "in", "tuples", "Sgtm", "I", "ll", "mention", "it", "in", "the", "main", "readme", "add", "in", "NUMBER", "dd", "NUMBER", "e", "NUMBER", "ccdf", "NUMBER", "b", "NUMBER", "d", "NUMBER", "ca", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "d", "right", "now", "the", "map", "definitions", "be", "biased", "towards", "image", "data", "because", "of", "row", "x", "col", "NUMBER", "We", "should", "clean", "up", "the", "code", "to", "define", "them", "for", "any", "input", "vector", "NUMBER", "We", "can", "do", "that", "once", "the", "tutorial", "be", "fully", "merge", "branch", "saliency", "be", "close", "Help", "would", "be", "welcomed", "yes", "feel", "free", "to", "start", "a", "PR", "relate", "to", "this", "Solved", "by", "NUMBER", "Agreed", "should", "we", "wait", "to", "get", "the", "saliency", "map", "attack", "and", "update", "the", "tech", "report", "at", "the", "same", "time", "LINK", "hi", "rfeinman", "thanks", "for", "the", "PR", "NUMBER", "rms", "NUMBER", "be", "work", "on", "merge", "your", "implementation", "with", "one", "we", "have", "developed", "in", "parallel", "NUMBER", "We", "will", "also", "take", "care", "of", "write", "up", "a", "tutorial", "markdown", "to", "go", "with", "the", "script", "NUMBER", "We", "will", "make", "additional", "commit", "to", "your", "PR", "s", "branch", "and", "merge", "it", "when", "all", "of", "that", "be", "ready", "NUMBER", "Thanks", "Same", "here", "I", "think", "the", "current", "version", "makes", "it", "easier", "to", "see", "how", "batches", "be", "indexed", "NUMBER", "LGTM", "thanks", "for", "the", "edits", "Create", "an", "iterator", "so", "one", "can", "write", "for", "batch_index", "in", "dataset", "I", "m", "closing", "this", "for", "now", "feel", "free", "to", "reopen", "if", "you", "feel", "like", "it", "s", "important", "to", "have", "this", "feature", "Work", "in", "progress", "see", "NUMBER", "That", "would", "be", "nice", "thank", "you", "goodfeli", "I", "haven", "t", "seen", "this", "message", "in", "a", "while", "do", "you", "agree", "to", "close", "this", "issue", "The", "issue", "on", "the", "tensorflow", "tracker", "seems", "to", "imply", "that", "the", "problem", "only", "occur", "when", "users", "imported", "Keras", "NUMBER", "It", "appears", "that", "there", "be", "a", "fix", "but", "it", "has", "not", "be", "merge", "into", "TF", "yet", "NUMBER", "Since", "we", "know", "that", "this", "originates", "external", "to", "CleverHans", "there", "be", "no", "need", "to", "submit", "further", "report", "of", "it", "here", "NUMBER", "Follow", "the", "issue", "on", "the", "TensorFlow", "repository", "NUMBER", "NUMBER", "add", "the", "test", "for", "legitimate", "inputs", "yes", "that", "would", "be", "ideal", "the", "thing", "with", "Keras", "be", "that", "it", "requires", "things", "like", "LINK", "_tf", "NUMBER", "py", "L", "NUMBER", "when", "training", "or", "at", "least", "that", "s", "my", "understanding", "NUMBER", "We", "might", "have", "to", "define", "a", "flag", "and", "make", "some", "special", "cases", "for", "people", "use", "Keras", "NUMBER", "I", "have", "not", "particular", "preference", "on", "use", "Keras", "I", "just", "thought", "it", "was", "a", "good", "idea", "to", "include", "in", "the", "tutorial", "to", "allow", "people", "to", "easily", "modify", "the", "model", "NUMBER", "Thoughts", "It", "should", "not", "be", "the", "case", "anymore", "now", "that", "the", "attacks", "module", "has", "be", "refactored", "NUMBER", "All", "keras", "dependencies", "be", "cleared", "as", "far", "as", "I", "know", "NUMBER", "Feel", "free", "to", "reopen", "if", "I", "miss", "anything", "NUMBER", "You", "be", "right", "the", "issue", "was", "due", "to", "my", "naive", "implementation", "which", "redefined", "the", "adversarial", "loss", "in", "the", "TF", "graph", "at", "each", "iteration", "batch", "NUMBER", "NUMBER", "I", "fix", "by", "introduce", "a", "new", "function", "that", "add", "the", "loss", "to", "the", "graph", "and", "which", "returns", "the", "TF", "var", "to", "be", "evaluated", "at", "each", "iteration", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "c", "NUMBER", "f", "NUMBER", "f", "NUMBER", "f", "NUMBER", "fc", "NUMBER", "b", "NUMBER", "c", "NUMBER", "e", "NUMBER", "f", "NUMBER", "fc", "I", "tried", "remove", "the", "convolutions", "and", "it", "decreases", "adversarial", "accuracy", "Adressed", "in", "NUMBER", "dbd", "NUMBER", "f", "NUMBER", "abe", "NUMBER", "da", "NUMBER", "a", "NUMBER", "fac", "NUMBER", "b", "NUMBER", "b", "NUMBER", "aaa", "NUMBER", "c", "NUMBER", "b", "NUMBER", "a", "NUMBER", "de", "NUMBER", "ced", "NUMBER", "completed", "in", "NUMBER", "Unless", "I", "m", "wrong", "this", "shouldn", "t", "be", "the", "case", "anymore", "since", "NUMBER", "was", "merge"], "text_count": [0, 11387, 2897, 1535, 704, 263, 1159, 6, 60, 1360, 1796, 2937, 1661, 1075, 1071, 335, 0, 0, 0, 0, 3490, 952, 596, 298, 743, 498, 0, 0, 0, 0, 6363, 3942, 2503, 126, 1329, 459, 0, 0, 0, 0, 7605, 36, 2936, 2582, 2231, 0, 0, 0, 0, 0, 2454, 898, 1239, 609, 826, 381, 781, 0, 0, 0, 5419, 408, 4332, 369, 0, 0, 0, 0, 0, 0, 4502, 478, 3285, 1304, 626, 0, 0, 0, 0, 0, 7596, 3338, 627, 3253, 344, 526, 0, 0, 0, 0, 507, 2348, 234, 0, 0, 0, 0, 0, 0, 0, 6734, 1365, 4041, 1420, 0, 0, 0, 0, 0, 0, 12103, 23625, 387, 1034, 250, 406, 0, 0, 0, 0, 31621, 112, 23964, 392, 5730, 6854]}, {"repo": "cleverhans", "type": "nonelite", "title": "", "number of text": 1425, "text": "  The original work by Madry et al mentions that in the optimization loop of their attack, they normalize the gradient before multiplying it with the step size. I may have missed some function calls made, but after having a look at the ProjectedGradientDescent implementation, it seems that at no stage are the gradients normalized before perturbing the image.\r\n\r\nA recently released version code-base by the authors themselves for this attack uses gradient normalization as well: https://github.com/MadryLab/robustness/blob/master/robustness/attack_steps.py#L127\r\n\r\nI am not sure if this missing step in the cleverhans implementation is a bug or is done effectively via some other function call/steps (maybe earlier/later somewhere in the code)? MadryEtal uses [ProjectedGradientDescent](https://cleverhans.readthedocs.io/en/latest/_modules/cleverhans/attacks/projected_gradient_descent.html#ProjectedGradientDescent), which further uses FGM to compute the perturbation using the gradient. I could not find any step in the FGSM implementation that normalizes gradients (I may have missed this step in case it is there, in which case I apologize)  @iamgroot42 I might be misunderstanding this but if by \"normalize\" you mean the projection step, I think it is in ```clip_eta```. @michaelshiyu if you have a look [here](https://github.com/MadryLab/robustness/blob/master/robustness/attack_steps.py#L127) (the step() function is called inside the main attack), they normalize the gradient first. The 'clip_eta' step is for limiting the perturbation to the epsilon L-p ball, which is different from what I am talking about @iamgroot42 I don't think this normalization is mentioned in either of the papers referenced by CleverHans' PGD implementation. Although, I think both papers only discussed the inf-norm case unless I've missed something. \r\n\r\nAlso, in their implementation, wouldn't this normalization step affect the following projection step at least when using 2-norm? For example, say if a certain gradient vector has 2-norm 0.5 and we set ```self.eps = 0.7```, then because you normalize this gradient to have norm 1 before the projection, you now have to clip its norm to 0.7. But without normalization, we wouldn't clip this gradient at all.  Page 18 of [this paper](https://arxiv.org/pdf/1905.02175.pdf) by the same research lab references the Madry attack, saying that \"we normalize the gradient at each step of PGD\". If you look at their implementation in the [robustness](https://github.com/MadryLab/robustness) package (which is from the research lab which published the PGD paper), they do actually normalize the gradients (the link I gave in my previous comment). Since this library is maintained and used by the PGD authors themselves, I think we ought to have a similar implementation? What do you think @michaelshiyu  @npapernot  @iamgroot42 I was referring to the normalization in the [robustness](https://github.com/MadryLab/robustness) package. I might be wrong but I think it interferes with the projection step at least when we are using 2-norm. Is this a wanted effect?\r\n\r\nAlso, I might be wrong again but I don't think the PGD attack was proposed by the Madry lab. They themselves referred to [another paper](https://arxiv.org/pdf/1611.01236.pdf) in their [ICLR2018  paper](https://openreview.net/pdf?id=rJzIBfZAb). I think they are aware of that fact, and that it may not be interference according to them. They normalize the gradients first and then do other projection steps. As far as the attack is concerned, well, the Cleverhans implementation does read 'MadryEtAl' :P \r\n\r\nThis is why I am a bit confused: which one of these two is the correct implementation? \r\n @iamgroot42 Personally, I find it difficult to argue that such normalization is beneficial in any generic setting since it messes up the projection step. I took another look at the \"Adversarial Examples Are Not Bugs\" paper and I couldn't find a place where they discuss how this normalization helps.\r\n\r\nMy take is that if you normalize gradient before projecting, you are not projecting the true gradient so you are not performing projected gradient descent as it is from optimization.\r\n\r\nAnyway, I guess they found this to be helpful in some way. But I think this is more of a heuristic thing than being correct or not.  So in that case, the Cleverhans implementation is correct, and theirs is not (in the sense that it is not true to the original attack, and they should keep the normalization optional and use it only when needed, for example when implementing the mentioned paper)? @iamgroot42 I think at least in the 2-norm case, which is what they did for the [robustness](https://github.com/MadryLab/robustness) package, normalizing or not does not really change things since you can undo the effect of normalization by changing the step size for each example. But yes, I think the CleverHans implementation follows the strict definition of projected gradient descent as an optimization technique.\r\n\r\nWith that said, I think @npapernot is much more qualified than me to say which one is correct.  ***The issue tracker should only be used to report bugs or feature requests. If you are looking for support from other library users, please ask a question on [StackOverflow](https://stackoverflow.com/questions/tagged/cleverhans).***\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nJust like most machine-learning based libraries, users should have the option to perform batched attacks. Some attacks may not support parallelism that well, but we can at least offer the option for them to send in all data with a batch size, instead of them batching it themselves and then sending it (some attacks like MadryEtAl cannot be run altogether on a lot of data)\r\n\r\n**Describe the solution you'd like**\r\nA simple loop to iterate through data in batches (resting in the generic Attack class, maybe)? Uses the batch_size attack_parameter (make it standard), uses that batch size to iterate through data batch-wise. We could also check for actual batched support for attacks (for Eg, MadryEtAl doesn't support currently in terms of flags) and pass that on while performing the batched attacks\r\n\r\n**Describe alternatives you've considered**\r\nAs a user, I just break my data into batches and then concentrate all batch-wise perturbed data batches together. It's not too long a workaround, but it would definitely be favorable to have such a functionality behind the curtains in the library itself.\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nI could work on this solution, if the maintainers think this could be useful. Should not take a lot of time (just some basic changes in the attack module, along with maybe some tests?)\r\n Yes, but the batch size used by the attack algorithm does not seem to be a controllable parameter. For instance, running MadryEtAl on a large set of data fails since it tries to compute everything in one go. Maybe support for a 'batch_size' param could help call this attack directly, instead of users breaking data into chunks and then combining data themselves in the end?  I tried to generate adversarial examples on the test set of CIFAR-10 together in one go for a Resnet-50 model, for which I got an internal OOM error. It would be nice to have a 'batch_size' parameter (if I am not wrong, it is already present for some attacks eg HopSkipJumpAttack) for this attack. We could have a basic batch-breaking operation in the base class, and functions which already implement batching could use their batching instead. I could submit a PR for this, if it sounds like a good feature to have?\r\n\r\nCleverhans version:  3.0.1\r\nTensorflow version:  1.14.0  **Describe the bug**\r\nRun python generate_imperceptible_adv.py in /examples/adversarial_asr\r\nThe following error occurred\r\n\r\n File \"/home/fan/anaconda3/envs/tf/lib/python3.7/site-packages/tensorflow/python/framework/load_library.py\", line 61, in load_op_library\r\n    lib_handle = py_tf.TF_LoadLibrary(library_filename)\r\ntensorflow.python.framework.errors_impl.NotFoundError: libtensorflow_framework.so: cannot open shared object file: No such file or directory\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n1. export LINGVO_DEVICE=\"gpu\"\r\n2. export LINGVO_DIR=$HOME/lingvo\r\n3. sudo docker run --rm $(test \"$LINGVO_DEVICE\" = \"gpu\" && echo \"--runtime=nvidia\") -it -v ${LINGVO_DIR}:/tmp/lingvo -v ~/lingvo_compiled:/tmp/lingvo_compiled -v ${HOME}/.gitconfig:/home/${USER}/.gitconfig:ro -p 6006:6006 -p 8888:8888 --name lingvo tensorflow:lingvo bash\r\nroot@cff77d7949d3:/tmp/lingvo# bazel build -c opt --config=cuda //lingvo:trainer\r\nExtracting Bazel installation...\r\nStarting local Bazel server and connecting to it...\r\nINFO: Repository rule 'subpar' returned: {\"remote\": \"https://github.com/google/subpar\", \"commit\": \"07ff5feb7c7b113eea593eb6ec50b51099cf0261\", \"shallow_since\": \"2018-04-26\", \"init_submodules\": False, \"verbose\": False, \"strip_prefix\": \"\", \"patches\": [], \"patch_tool\": \"patch\", \"patch_args\": [\"-p0\"], \"patch_cmds\": [], \"name\": \"subpar\"}\r\nINFO: Analysed target //lingvo:trainer (35 packages loaded).\r\nINFO: Found 1 target...\r\nTarget //lingvo:trainer up-to-date:\r\n  bazel-bin/lingvo/trainer \r\nINFO: Elapsed time: 74.182s, Critical Path: 22.75s\r\nINFO: 22 processes: 22 processwrapper-sandbox.\r\nINFO: Build completed successfully, 35 total actions\r\nroot@cff77d7949d3:/tmp/lingvo# cp -rfL bazel-bin/lingvo/trainer.runfiles/__main__/lingvo /tmp/lingvo_compiled\r\nroot@cff77d7949d3:/tmp/lingvo# exit\r\n4.sudo chown -R $USER ~/lingvo_compiled\r\n5.export PYTHONPATH=$PYTHONPATH:~/lingvo_compiled\r\n6.python generate_imperceptible_adv.py\r\n7.see the error\r\n\r\n**Expected behavior**\r\ngenerate imperceptible adversarial examples\r\n\r\n**Screenshots**\r\n  \r\n![\u5fae\u4fe1\u56fe\u7247_20190917095659](https://user-images.githubusercontent.com/48169187/65005170-8769e600-d931-11e9-9994-82c8ba56dde7.png)\r\n\r\n\r\n**System configuration**\r\n - ubuntu16.04\r\n - Python 3.7\r\n -  tensorflow-gpu 1.14.0 cuda10 cudnn7\r\n\r\n\r\nLooking forward to your reply.  Add a VGG-type baseline CNN model \nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google.com/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Fcleverhans%2Fpull%2F1108) for more info**.\n\n<!-- need_sender_cla --> > Once you've signed (or fixed any issues), please reply here with @googlebot I signed it! and we'll verify it.\r\n\r\n @googlebot \r\nI signed it! @googlebot I signed it!\n\nSent from my iPhone\n\n> On Sep 14, 2019, at 10:17 PM, googlebot <notifications@github.com> wrote:\n> \n> Thanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n> \n> \ud83d\udcdd Please visit https://cla.developers.google.com/ to sign.\n> \n> Once you've signed (or fixed any issues), please reply here with @googlebot I signed it! and we'll verify it.\n> \n> What to do if you already signed the CLA\n> \n> Individual signers\n> \n> It's possible we don't have your GitHub username or you're using a different email address on your commit. Check your existing CLA data and verify that your email is set on your git commits.\n> Corporate signers\n> \n> Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to go/cla#troubleshoot (Public version).\n> The email used to register you as an authorized contributor must be the email used for the Git commit. Check your existing CLA data and verify that your email is set on your git commits.\n> The email used to register you as an authorized contributor must also be attached to your GitHub account.\n> \u2139\ufe0f Googlers: Go here for more info.\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n Hi, thanks for getting back to me.  I will take a look at adding the two tutorials to the examples folder.  In addition to the tutorials, the PR also included the addition of a new baseline model, VGG_model, which is a bit more resilient to adversarial attacks than the existing baseline CNN model.  Will that new model be merged into the master?  Thank you  I am trying to attack on an image using cleverhans package and following is my code:\r\n\r\nwrap = KerasModelWrapper(model)\r\nfgsm = FastGradientMethod(wrap, sess=sess)\r\nfgsm_params = {'eps': 0.3,\r\n               'clip_min': 0.,\r\n               'clip_max': 1.}\r\nadv_x = fgsm.generate_np(x_validation, **fgsm_params)\r\n\r\nfor adv_x = fgsm.generate_np(x_validation, **fgsm_params) line I am getting error as \r\n\"Checkpointable._track_checkpointable() passed type <class 'keras.engine.input_layer.InputLayer'>, not a Checkpointable.\"\r\n\r\nWhat can be the reason?    Hi authors,\r\n\r\nI try to evalute accuracy of my secret model on CIFAR10 data which value defened [0,255] with CWL2.\r\n\r\nFrom what I know, when confidence increases, adversarial data will be stronger and accuracy will decrease\r\n\r\nBut the result is different from what I thought.\r\n\r\n```\r\nacc[clean]: 91.380 %\r\nacc[confidence =  0]: 66.270 %\r\nacc[confidence =  5]: 91.380 %\r\n\r\n```\r\n\r\nAlso, I got some warning:\r\n\r\n```\r\n/usr/local/lib/python3.6/dist-packages/numpy/core/fromnumeric.py:3118: RuntimeWarning: Mean of empty slice.\r\n  out=out, **kwargs)\r\n/usr/local/lib/python3.6/dist-packages/numpy/core/_methods.py:85: RuntimeWarning: invalid value encountered in double_scalars\r\n  ret = ret.dtype.type(ret / rcount)\r\n```\r\n\r\nFollowing is a minimal testcase.\r\n\r\nIn this testcase, confidence=500 may not be a reasonable value, but I just want to repoduce runtime warning in the simple cnn model.\r\n\r\n\r\n```dockerfile\r\n# set tf version\r\nARG TF_VER=1.13.1\r\n\r\n# download data\r\n# Druing building stage, docker can't load cuda modules.\r\n# Using CPU version of tensorflow to download datasets and copy it to GPU version of image\r\nFrom tensorflow/tensorflow:${TF_VER}-py3 as dataset\r\nRUN python -c \"import tensorflow as tf; tf.keras.datasets.cifar10.load_data()\"\r\n\r\n# developing environment\r\nFrom nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04\r\nARG TF_VER\r\n\r\n# install python and tensorflow-gpu\r\nRUN apt update && \\\r\n    apt install -y python3 python3-pip && \\\r\n    ln -s $(which python3) /usr/local/bin/python && \\\r\n    ln -s $(which pip3) /usr/local/bin/pip && \\\r\n    pip install tensorflow-gpu==${TF_VER} && \\\r\n    rm -rf /var/lib/apt/lists/*\r\n\r\n# install tools\r\nRUN apt update && \\\r\n    DEBIAN_FRONTEND=noninteractive apt install tzdata && \\\r\n    apt install -y rsync git vim wget && \\\r\n    apt install -y libsm6 libxrender1 libxext-dev && \\\r\n    rm -rf /var/lib/apt/lists/*\r\n\r\n# install python packages\r\nRUN pip install imgaug pyyaml && \\\r\n    pip install git+https://github.com/tensorflow/cleverhans.git@f1cf6f06b6f0f68334f7fc5b862b01e439dcdc37#egg=cleverhans\r\n\r\n# copy data\r\nCOPY --from=dataset /root/.keras/ /root/.keras\r\n\r\n# set workdir\r\nWORKDIR /workdir/\r\n\r\n# add source code\r\nADD . /workdir/\r\n#RUN git clean -df -- .\r\n\r\n# checkout commit\r\n#RUN git checkout git-hash\r\n\r\n# run program\r\n#CMD bash -c \"make train\"\r\nCMD python train_vgg.py\r\n```\r\n\r\n```python\r\n#%%\r\nfrom __future__ import print_function\r\nfrom tensorflow import keras\r\nfrom tensorflow.keras.datasets import cifar10\r\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\r\nfrom tensorflow.keras.models import Sequential\r\nfrom tensorflow.keras.layers import Dense, Dropout, Activation, Flatten\r\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D\r\nimport tensorflow as tf\r\nimport os\r\n\r\n#%%\r\nimport os\r\nos.environ[\"CUDA_VISIBLE_DEVICES\"] = \"0\"\r\n\r\n# init tf/keras\r\ngpu_options = tf.GPUOptions(allow_growth=True)\r\nsess = tf.Session(config=tf.ConfigProto(gpu_options=gpu_options))\r\ntf.keras.backend.set_session(sess)\r\n\r\n#%%\r\nnum_classes = 10\r\nsave_dir = os.path.join(os.getcwd(), 'models')\r\nmodel_name = 'cifar10_cnn_model.h5'\r\n\r\n# The data, split between train and test sets:\r\n(x_train, y_train), (x_test, y_test) = cifar10.load_data()\r\nprint('x_train shape:', x_train.shape)\r\nprint(x_train.shape[0], 'train samples')\r\nprint(x_test.shape[0], 'test samples')\r\n\r\n# Convert class vectors to binary class matrices.\r\ny_train = keras.utils.to_categorical(y_train, num_classes)\r\ny_test  = keras.utils.to_categorical(y_test, num_classes)\r\n\r\nx_train = x_train.astype('float32')\r\nx_test  = x_test.astype('float32')\r\nx_train = x_train / 1.0\r\nx_test  = x_test / 1.0\r\n\r\n# Save model and weights\r\nif not os.path.isdir(save_dir):\r\n    os.makedirs(save_dir)\r\nmodel_path = os.path.join(save_dir, model_name)\r\n\r\n#%%\r\n\"\"\"\r\nbatch_size = 32\r\nepochs = 100\r\ndata_augmentation = True\r\n\r\nmodel = Sequential()\r\nmodel.add(Conv2D(64, (3, 3), padding='same',\r\n                 input_shape=x_train.shape[1:]))\r\nmodel.add(Activation('relu'))\r\nmodel.add(Conv2D(64, (3, 3)))\r\nmodel.add(Activation('relu'))\r\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\r\nmodel.add(Dropout(0.25))\r\n\r\nmodel.add(Conv2D(128, (3, 3), padding='same'))\r\nmodel.add(Activation('relu'))\r\nmodel.add(Conv2D(128, (3, 3)))\r\nmodel.add(Activation('relu'))\r\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\r\nmodel.add(Dropout(0.25))\r\n\r\nmodel.add(Flatten())\r\nmodel.add(Dense(256))\r\nmodel.add(Activation('relu'))\r\nmodel.add(Dense(256))\r\nmodel.add(Activation('relu'))\r\nmodel.add(Dense(num_classes))\r\nmodel.add(Activation('softmax'))\r\n\r\n# initiate RMSprop optimizer\r\nopt = keras.optimizers.RMSprop(lr=0.0001, decay=1e-6)\r\n\r\n# Let's train the model using RMSprop\r\nmodel.compile(loss='categorical_crossentropy',\r\n              optimizer=opt,\r\n              metrics=['accuracy'])\r\n\r\nif data_augmentation:\r\n    print('Using real-time data augmentation.')\r\n    # This will do preprocessing and realtime data augmentation:\r\n    datagen = ImageDataGenerator(\r\n        featurewise_center=False,  # set input mean to 0 over the dataset\r\n        samplewise_center=False,  # set each sample mean to 0\r\n        featurewise_std_normalization=False,  # divide inputs by std of the dataset\r\n        samplewise_std_normalization=False,  # divide each input by its std\r\n        zca_whitening=False,  # apply ZCA whitening\r\n        zca_epsilon=1e-06,  # epsilon for ZCA whitening\r\n        rotation_range=0,  # randomly rotate images in the range (degrees, 0 to 180)\r\n        # randomly shift images horizontally (fraction of total width)\r\n        width_shift_range=0.1,\r\n        # randomly shift images vertically (fraction of total height)\r\n        height_shift_range=0.1,\r\n        shear_range=0.,  # set range for random shear\r\n        zoom_range=0.,  # set range for random zoom\r\n        channel_shift_range=0.,  # set range for random channel shifts\r\n        # set mode for filling points outside the input boundaries\r\n        fill_mode='nearest',\r\n        cval=0.,  # value used for fill_mode = \"constant\"\r\n        horizontal_flip=True,  # randomly flip images\r\n        vertical_flip=False,  # randomly flip images\r\n        # set rescaling factor (applied before any other transformation)\r\n        rescale=None,\r\n        # set function that will be applied on each input\r\n        preprocessing_function=None,\r\n        # image data format, either \"channels_first\" or \"channels_last\"\r\n        data_format=None,\r\n        # fraction of images reserved for validation (strictly between 0 and 1)\r\n        validation_split=0.0)\r\n\r\n    # Compute quantities required for feature-wise normalization\r\n    # (std, mean, and principal components if ZCA whitening is applied).\r\n    datagen.fit(x_train)\r\n\r\n    # Fit the model on the batches generated by datagen.flow().\r\n    model.fit_generator(datagen.flow(x_train, y_train,\r\n                                     batch_size=batch_size),\r\n                        epochs=epochs,\r\n                        validation_data=(x_test, y_test),\r\n                        workers=1,\r\n                        use_multiprocessing=False)\r\n\r\nmodel.save(model_path)\r\nprint('Saved trained model at %s ' % model_path)\r\n\r\n# Score trained model.\r\nscores = model.evaluate(x_test, y_test, verbose=1)\r\nprint('Test loss:', scores[0])\r\nprint('Test accuracy:', scores[1])\r\n\"\"\"\r\n#%%\r\nimport numpy as np\r\nimport cleverhans.attacks as c_attacks\r\nfrom cleverhans.utils_keras import KerasModelWrapper\r\n\r\ndef gen_attack_data_kernel(confidence, method, x_test, y_test):\r\n\r\n    adv_X_list = []\r\n    for ii in range(batch_count):\r\n\r\n        x = x_test[ii * batch_size: (ii + 1) * batch_size,:]\r\n        y = y_test[ii * batch_size: (ii + 1) * batch_size,:]\r\n        x = method.generate_np(x,\r\n                            y=y,\r\n                            #max_iterations=100,\r\n                            initial_const=1.0,\r\n                            #binary_search_steps=50,\r\n                            confidence=confidence,\r\n                            learning_rate=0.1,\r\n                            batch_size=1000,\r\n                            clip_min=0,\r\n                            clip_max=255)  \r\n\r\n        adv_X_list.extend(x)\r\n\r\n    adv_dataX = np.array(adv_X_list)\r\n    adv_acc = model.evaluate(adv_dataX, y_test, verbose=0, batch_size=batch_size)\r\n    print( \"acc[confidence = {:2d}]: {:.3f} %\".format(confidence, adv_acc[1] * 100) )\r\n\r\n# init tf/keras\r\ntf.keras.backend.clear_session()\r\ngpu_options = tf.GPUOptions(allow_growth=True)\r\nsess = tf.Session(config=tf.ConfigProto(gpu_options=gpu_options))\r\ntf.keras.backend.set_session(sess)\r\ntf.keras.backend.set_learning_phase(0)\r\n\r\n#model_path = 'models/cifar10_clf.h5'\r\nprint( 'model_path: {:s}'.format(model_path) )\r\nmodel = tf.keras.models.load_model(model_path)\r\nwrap  = KerasModelWrapper(model)\r\ncw2   = c_attacks.CarliniWagnerL2(wrap, sess)\r\n\r\nbatch_size = 1000\r\nbatch_count = x_test.shape[0] // batch_size\r\n\r\nadv_acc = model.evaluate(x_test, y_test, verbose=0, batch_size=batch_size)\r\nprint( \"acc[clean]: {:.3f} %\".format(adv_acc[1] * 100) )\r\n\r\n#%%\r\ngen_attack_data_kernel(0  , cw2, x_test, y_test)\r\ngen_attack_data_kernel(500, cw2, x_test, y_test)\r\n\r\n```\r\n\r\n\r\n```\r\n2019-08-24 20:20:53.008932: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\r\n2019-08-24 20:20:53.097623: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:998] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2019-08-24 20:20:53.098260: I tensorflow/compiler/xla/service/service.cc:150] XLA service 0x1765530 executing computations on platform CUDA. Devices:\r\n2019-08-24 20:20:53.098271: I tensorflow/compiler/xla/service/service.cc:158]   StreamExecutor device (0): TITAN RTX, Compute Capability 7.5\r\n2019-08-24 20:20:53.117037: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 3192000000 Hz\r\n2019-08-24 20:20:53.117946: I tensorflow/compiler/xla/service/service.cc:150] XLA service 0x1e29400 executing computations on platform Host. Devices:\r\n2019-08-24 20:20:53.117954: I tensorflow/compiler/xla/service/service.cc:158]   StreamExecutor device (0): <undefined>, <undefined>\r\n2019-08-24 20:20:53.118044: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1433] Found device 0 with properties:\r\nname: TITAN RTX major: 7 minor: 5 memoryClockRate(GHz): 1.77\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 23.65GiB freeMemory: 23.37GiB\r\n2019-08-24 20:20:53.118053: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1512] Adding visible gpu devices: 0\r\n2019-08-24 20:20:53.118680: I tensorflow/core/common_runtime/gpu/gpu_device.cc:984] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2019-08-24 20:20:53.118687: I tensorflow/core/common_runtime/gpu/gpu_device.cc:990]      0\r\n2019-08-24 20:20:53.118690: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1003] 0:   N\r\n2019-08-24 20:20:53.118744: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1115] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 22737 MB memory) -> physical GPU (device: 0, name: TITAN RTX, pci bus id: 0000:01:00.0, compute capability: 7.5)\r\n2019-08-24 20:20:53.795196: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1512] Adding visible gpu devices: 0\r\n2019-08-24 20:20:53.795236: I tensorflow/core/common_runtime/gpu/gpu_device.cc:984] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2019-08-24 20:20:53.795244: I tensorflow/core/common_runtime/gpu/gpu_device.cc:990]      0\r\n2019-08-24 20:20:53.795250: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1003] 0:   N\r\n2019-08-24 20:20:53.795325: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1115] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 22737 MB memory) -> physical GPU (device: 0, name: TITAN RTX, pci bus id: 0000:01:00.0, compute capability: 7.5)\r\nWARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/resource_variable_ops.py:435: colocate_with (from tensorflow.python.framework.ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nColocations handled automatically by placer.\r\nWARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/math_ops.py:3066: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nUse tf.cast instead.\r\n2019-08-24 20:20:55.951422: I tensorflow/stream_executor/dso_loader.cc:152] successfully opened CUDA library libcublas.so.10.0 locally\r\n/usr/local/lib/python3.6/dist-packages/cleverhans/attacks_tf.py:27: UserWarning: attacks_tf is deprecated and will be removed on 2019-07-18 or after. Code should import functions from their new locations directly.\r\n  warnings.warn(\"attacks_tf is deprecated and will be removed on 2019-07-18\"\r\n[INFO 2019-08-24 20:20:59,075 cleverhans] Constructing new graph for attack CarliniWagnerL2\r\n/usr/local/lib/python3.6/dist-packages/cleverhans/compat.py:22: UserWarning: <function reduce_sum_v1 at 0x7f1aac4582f0> is deprecated. Switch to calling the equivalent function in tensorflow.  This function was originally needed as a compatibility layer for old versions of tensorflow,  but support for those versions has now been dropped.\r\n  warnings.warn(str(f) + \" is deprecated. Switch to calling the equivalent function in tensorflow. \"\r\n/usr/local/lib/python3.6/dist-packages/cleverhans/compat.py:22: UserWarning: <function reduce_max_v1 at 0x7f1aac45e048> is deprecated. Switch to calling the equivalent function in tensorflow.  This function was originally needed as a compatibility layer for old versions of tensorflow,  but support for those versions has now been dropped.\r\n  warnings.warn(str(f) + \" is deprecated. Switch to calling the equivalent function in tensorflow. \"\r\nWARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/math_grad.py:102: div (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nDeprecated in favor of operator or tf.math.divide.\r\nWARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/cleverhans/attacks/carlini_wagner_l2.py:82: py_func (from tensorflow.python.ops.script_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\ntf.py_func is deprecated in TF V2. Instead, use\r\n    tf.py_function, which takes a python function which manipulates tf eager\r\n    tensors instead of numpy arrays. It's easy to convert a tf eager tensor to\r\n    an ndarray (just call tensor.numpy()) but having access to eager tensors\r\n    means `tf.py_function`s can use accelerators such as GPUs as well as\r\n    being differentiable using a gradient tape.\r\n\r\n2019-08-24 20:20:53.008932: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\r\n2019-08-24 20:20:53.097623: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:998] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2019-08-24 20:20:53.098260: I tensorflow/compiler/xla/service/service.cc:150] XLA service 0x1765530 executing computations on platform CUDA. Devices:\r\n2019-08-24 20:20:53.098271: I tensorflow/compiler/xla/service/service.cc:158]   StreamExecutor device (0): TITAN RTX, Compute Capability 7.5\r\n2019-08-24 20:20:53.117037: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 3192000000 Hz\r\n2019-08-24 20:20:53.117946: I tensorflow/compiler/xla/service/service.cc:150] XLA service 0x1e29400 executing computations on platform Host. Devices:\r\n2019-08-24 20:20:53.117954: I tensorflow/compiler/xla/service/service.cc:158]   StreamExecutor device (0): <undefined>, <undefined>\r\n2019-08-24 20:20:53.118044: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1433] Found device 0 with properties:\r\nname: TITAN RTX major: 7 minor: 5 memoryClockRate(GHz): 1.77\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 23.65GiB freeMemory: 23.37GiB\r\n2019-08-24 20:20:53.118053: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1512] Adding visible gpu devices: 0\r\n2019-08-24 20:20:53.118680: I tensorflow/core/common_runtime/gpu/gpu_device.cc:984] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2019-08-24 20:20:53.118687: I tensorflow/core/common_runtime/gpu/gpu_device.cc:990]      0\r\n2019-08-24 20:20:53.118690: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1003] 0:   N\r\n2019-08-24 20:20:53.118744: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1115] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 22737 MB memory) -> physical GPU (device: 0, name: TITAN RTX, pci bus id: 0000:01:00.0, compute capability: 7.5)\r\n2019-08-24 20:20:53.795196: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1512] Adding visible gpu devices: 0\r\n2019-08-24 20:20:53.795236: I tensorflow/core/common_runtime/gpu/gpu_device.cc:984] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2019-08-24 20:20:53.795244: I tensorflow/core/common_runtime/gpu/gpu_device.cc:990]      0\r\n2019-08-24 20:20:53.795250: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1003] 0:   N\r\n2019-08-24 20:20:53.795325: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1115] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 22737 MB memory) -> physical GPU (device: 0, name: TITAN RTX, pci bus id: 0000:01:00.0, compute capability: 7.5)\r\nWARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/resource_variable_ops.py:435: colocate_with (from tensorflow.python.framework.ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nColocations handled automatically by placer.\r\nWARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/math_ops.py:3066: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nUse tf.cast instead.\r\n2019-08-24 20:20:55.951422: I tensorflow/stream_executor/dso_loader.cc:152] successfully opened CUDA library libcublas.so.10.0 locally\r\n/usr/local/lib/python3.6/dist-packages/cleverhans/attacks_tf.py:27: UserWarning: attacks_tf is deprecated and will be removed on 2019-07-18 or after. Code should import functions from their new locations directly.\r\n  warnings.warn(\"attacks_tf is deprecated and will be removed on 2019-07-18\"\r\n[INFO 2019-08-24 20:20:59,075 cleverhans] Constructing new graph for attack CarliniWagnerL2\r\n/usr/local/lib/python3.6/dist-packages/cleverhans/compat.py:22: UserWarning: <function reduce_sum_v1 at 0x7f1aac4582f0> is deprecated. Switch to calling the equivalent function in tensorflow.  This function was originally needed as a compatibility layer for old versions of tensorflow,  but support for those versions has now been dropped.\r\n  warnings.warn(str(f) + \" is deprecated. Switch to calling the equivalent function in tensorflow. \"\r\n/usr/local/lib/python3.6/dist-packages/cleverhans/compat.py:22: UserWarning: <function reduce_max_v1 at 0x7f1aac45e048> is deprecated. Switch to calling the equivalent function in tensorflow.  This function was originally needed as a compatibility layer for old versions of tensorflow,  but support for those versions has now been dropped.\r\n  warnings.warn(str(f) + \" is deprecated. Switch to calling the equivalent function in tensorflow. \"\r\nWARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/math_grad.py:102: div (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nDeprecated in favor of operator or tf.math.divide.\r\nWARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/cleverhans/attacks/carlini_wagner_l2.py:82: py_func (from tensorflow.python.ops.script_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\ntf.py_func is deprecated in TF V2. Instead, use\r\n    tf.py_function, which takes a python function which manipulates tf eager\r\n    tensors instead of numpy arrays. It's easy to convert a tf eager tensor to\r\n    an ndarray (just call tensor.numpy()) but having access to eager tensors\r\n    means `tf.py_function`s can use accelerators such as GPUs as well as\r\n    being differentiable using a gradient tape.\r\n\r\n[INFO 2019-08-24 20:25:45,372 cleverhans] Constructing new graph for attack CarliniWagnerL2\r\nx_train shape: (50000, 32, 32, 3)\r\n50000 train samples\r\n10000 test samples\r\nmodel_path: /workdir/models/cifar10_cnn_model.h5\r\nacc[clean]: 79.680 %\r\nacc[confidence =  0]: 1.870 %\r\nacc[confidence = 500]: 79.680 %\r\n/usr/local/lib/python3.6/dist-packages/numpy/core/fromnumeric.py:3118: RuntimeWarning: Mean of empty slice.\r\n  out=out, **kwargs)\r\n/usr/local/lib/python3.6/dist-packages/numpy/core/_methods.py:85: RuntimeWarning: invalid value encountered in double_scalars\r\n  ret = ret.dtype.type(ret / rcount)\r\n\r\n``` @carlini : should the data be centered in 0 or is that done by the change of variable?  I'm little confusing ...\r\n\r\nI thought that `KerasModelWrapper(Model)` would process logits and prob. automatically\r\n\r\nbecause `get_logits` is a member function in class `KerasModelWrapper`\r\n\r\nhttps://github.com/tensorflow/cleverhans/blob/master/cleverhans/utils_keras.py#L143\r\n\r\nand in `carlini_wagner_l2.py:236` uses  self.output = model.get_logits(self.newimg)\r\n\r\nhttps://github.com/tensorflow/cleverhans/blob/master/cleverhans/attacks/carlini_wagner_l2.py#L235-L236\r\n\r\nAlso, when confidence =  0, robust accuracy is near 0% which is a reasonable value.\r\n\r\n--\r\n\r\nI try cwL2 on MNIST dataset which value is centered in 0 and range is  in [-0.5, 0.5] which is consistent with original repo: `nn_robust_attacks` and removing `softmax` layer before  `KerasModelWrapper` \r\n\r\nBut I got same result:\r\n\r\n```python\r\n#%%\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\nimport cleverhans.attacks as c_attacks\r\nfrom cleverhans.utils_keras import KerasModelWrapper\r\n\r\ndef build_model():\r\n    init_op = tf.keras.initializers.he_normal()\r\n    clf_input = tf.keras.layers.Input(shape=(28,28,1 ), name='clf_input')\r\n    flatten   = clf_input\r\n    conv1     = tf.keras.layers.Conv2D(32, (3, 3), activation=\"relu\", kernel_initializer=init_op, name=\"clf/c1\")(flatten)\r\n    pool1     = tf.keras.layers.MaxPooling2D(pool_size=(2, 2), name=\"clf/p1\")(conv1)\r\n    conv3     = tf.keras.layers.Conv2D(64, (3, 3), activation=\"relu\", kernel_initializer=init_op, name=\"clf/c3\")(pool1)\r\n    pool2     = tf.keras.layers.MaxPooling2D(pool_size=(2, 2), name=\"clf/p2\")(conv3)\r\n    flatten2  = tf.keras.layers.Flatten(name=\"clf/f2\")(pool2)\r\n    dense1    = tf.keras.layers.Dense(100, activation=\"relu\", kernel_initializer=init_op, name=\"clf/d1\")(flatten2)\r\n    dense2    = tf.keras.layers.Dense(10 , activation=None  , kernel_initializer=init_op, name=\"clf/d2\")(dense1)\r\n    clf_pre   = dense2\r\n    clf_out   = tf.keras.layers.Activation('softmax', name=\"clf/a2\")(clf_pre)\r\n    pre_model = tf.keras.models.Model(inputs=clf_input, outputs=clf_pre, name='pre_model')\r\n    clf_model = tf.keras.models.Model(inputs=clf_input, outputs=clf_out, name='clf_model')\r\n    clf_model.compile(loss='categorical_crossentropy', optimizer='Nadam', metrics=['accuracy'])\r\n\r\n    return clf_model\r\n\r\ndef get_data():\r\n\r\n    \"\"\"\r\n        download mnist\r\n    \"\"\"\r\n    (trainX, trainY), (testX, testY) = tf.keras.datasets.mnist.load_data()\r\n    trainX = trainX.astype(np.float32)\r\n    testX  = testX.astype(np.float32)\r\n    # ont-hot\r\n    trainY = tf.keras.utils.to_categorical(trainY,10)\r\n    testY  = tf.keras.utils.to_categorical(testY ,10)\r\n    # get validation sets\r\n    validX = trainX[55000:,:]\r\n    validY = trainY[55000:,:]\r\n    trainX = trainX[:55000,:]\r\n    trainY = trainY[:55000,:]\r\n    # expand dimesion\r\n    trainX = np.expand_dims(trainX, axis=3)\r\n    validX = np.expand_dims(validX, axis=3)\r\n    testX  = np.expand_dims(testX , axis=3)\r\n    trainX = trainX / 255.0 * 1 - 0.5\r\n    validX = validX / 255.0 * 1 - 0.5\r\n    testX  = testX  / 255.0 * 1 - 0.5\r\n    trainY = trainY\r\n    validY = validY\r\n    testY  = testY\r\n    return trainX, trainY, validX, validY, testX, testY\r\n\r\n\r\n#%%\r\nif __name__ == '__main__':\r\n\r\n    # reset tf session\r\n    tf.keras.backend.clear_session()\r\n    gpu_options = tf.GPUOptions(allow_growth=True)\r\n    sess = tf.Session(config=tf.ConfigProto(gpu_options=gpu_options))\r\n    tf.keras.backend.set_session(sess)\r\n\r\n    # get data and create model\r\n    trainX, trainY, validX, validY, testX, testY = get_data()\r\n    model = build_model()\r\n\r\n    # train model - warm up\r\n    model.fit(trainX, trainY,\r\n              validation_data=(validX, validY),\r\n              batch_size=1000,\r\n              epochs=1,\r\n              verbose=2)\r\n\r\n    # create attacking method\r\n    wrap = KerasModelWrapper(model)\r\n    wrap.model.summary()\r\n    pgd = c_attacks.ProjectedGradientDescent(wrap, sess=sess)\r\n\r\n    img_max =  0.5\r\n    img_min = -0.5\r\n\r\n    max_epoch = 100\r\n    batch_size = 200\r\n    batch_count =  trainX.shape[0] // batch_size\r\n    for epoch in range(max_epoch):\r\n\r\n        print(\"epoch: [{:d}/{:d}]\".format(epoch+1, max_epoch) )\r\n        for ii in range(batch_count):\r\n\r\n            x = trainX[ii * batch_size: (ii + 1) * batch_size,:]\r\n            y = trainY[ii * batch_size: (ii + 1) * batch_size,:]\r\n\r\n            adv_x = pgd.generate_np(x,\r\n                                y=y,\r\n                                eps=0.3,\r\n                                eps_iter=0.01,\r\n                                ord = np.inf,\r\n                                clip_min=img_min,\r\n                                clip_max=img_max)\r\n\r\n            model.train_on_batch(adv_x, y)\r\n\r\n    # evalate PGD attack\r\n    adv_x = pgd.generate_np(testX,\r\n                            eps=0.3,\r\n                            eps_iter=0.01,\r\n                            ord = np.inf,\r\n                            clip_min=img_min,\r\n                            clip_max=img_max)\r\n    acc = model.evaluate(adv_x, testY, verbose=0)\r\n    print( 'acc:{:.2f}'.format(acc[1] * 100) )\r\n\r\n#%%\r\ndef gen_attack_data_kernel(confidence, method, x_test, y_test):\r\n\r\n    adv_X_list = []\r\n    batch_size = 1000\r\n    batch_count = x_test.shape[0] // batch_size\r\n    for ii in range(batch_count):\r\n\r\n        x = x_test[ii * batch_size: (ii + 1) * batch_size,:]\r\n        y = y_test[ii * batch_size: (ii + 1) * batch_size,:]\r\n        x = method.generate_np(x,\r\n                            y=y,\r\n                            confidence=confidence,\r\n                            batch_size=batch_size,\r\n                            clip_min=img_min,\r\n                            clip_max=img_max)\r\n\r\n        adv_X_list.extend(x)\r\n\r\n    adv_dataX = np.array(adv_X_list)\r\n    adv_acc = model.evaluate(adv_dataX, y_test, verbose=0, batch_size=batch_size)\r\n    print( \"acc[confidence = {:2d}]: {:.3f} %\".format(confidence, adv_acc[1] * 100) )\r\n\r\nclf_model = tf.keras.models.Model(inputs=model.input, outputs=model.get_layer(index=-2).output)\r\nclf_model.summary()\r\nwrap = KerasModelWrapper(model)\r\ncw2   = c_attacks.CarliniWagnerL2(wrap, sess)\r\n\r\nadv_acc = model.evaluate(testX, testY, verbose=0)\r\nprint( \"acc[clean]: {:.3f} %\".format(adv_acc[1] * 100) )\r\ngen_attack_data_kernel(0  , cw2, testX, testY)\r\ngen_attack_data_kernel(5  , cw2, testX, testY)\r\n\r\n```\r\n\r\n```\r\n2019-08-27 13:41:52.116931: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA\r\n2019-08-27 13:41:52.140992: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 3192000000 Hz\r\n2019-08-27 13:41:52.141921: I tensorflow/compiler/xla/service/service.cc:150] XLA service 0x55f0ff212dc0 executing computations on platform Host. Devices:\r\n2019-08-27 13:41:52.141937: I tensorflow/compiler/xla/service/service.cc:158]   StreamExecutor device (0): <undefined>, <undefined>\r\n2019-08-27 13:41:52.237571: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:998] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2019-08-27 13:41:52.238238: I tensorflow/compiler/xla/service/service.cc:150] XLA service 0x55f0fe2459b0 executing computations on platform CUDA. Devices:\r\n2019-08-27 13:41:52.238269: I tensorflow/compiler/xla/service/service.cc:158]   StreamExecutor device (0): TITAN RTX, Compute Capability 7.5\r\n2019-08-27 13:41:52.238350: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1433] Found device 0 with properties:\r\nname: TITAN RTX major: 7 minor: 5 memoryClockRate(GHz): 1.77\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 23.65GiB freeMemory: 23.37GiB\r\n2019-08-27 13:41:52.238389: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1512] Adding visible gpu devices: 0\r\n2019-08-27 13:41:52.239081: I tensorflow/core/common_runtime/gpu/gpu_device.cc:984] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2019-08-27 13:41:52.239090: I tensorflow/core/common_runtime/gpu/gpu_device.cc:990]      0\r\n2019-08-27 13:41:52.239109: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1003] 0:   N\r\n2019-08-27 13:41:52.239152: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1115] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 22737 MB memory) -> physical GPU (device: 0, name: TITAN RTX, pci bus id: 0000:01:00.0, compute capability: 7.5)\r\nWARNING:tensorflow:From /home/ecchen/opt/miniconda/envs/tf/lib/python3.6/site-packages/tensorflow/python/ops/resource_variable_ops.py:435: colocate_with (from tensorflow.python.framework.ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nColocations handled automatically by placer.\r\nTrain on 55000 samples, validate on 5000 samples\r\nWARNING:tensorflow:From /home/ecchen/opt/miniconda/envs/tf/lib/python3.6/site-packages/tensorflow/python/ops/math_ops.py:3066: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nUse tf.cast instead.\r\n2019-08-27 13:41:53.477638: I tensorflow/stream_executor/dso_loader.cc:152] successfully opened CUDA library libcublas.so.10.0 locally\r\n - 2s - loss: 0.9179 - acc: 0.7319 - val_loss: 0.1438 - val_acc: 0.9626\r\n_________________________________________________________________\r\nLayer (type)                 Output Shape              Param #\r\n=================================================================\r\nclf_input (InputLayer)       (None, 28, 28, 1)         0\r\n_________________________________________________________________\r\nclf/c1 (Conv2D)              (None, 26, 26, 32)        320\r\n_________________________________________________________________\r\nclf/p1 (MaxPooling2D)        (None, 13, 13, 32)        0\r\n_________________________________________________________________\r\nclf/c3 (Conv2D)              (None, 11, 11, 64)        18496\r\n_________________________________________________________________\r\nclf/p2 (MaxPooling2D)        (None, 5, 5, 64)          0\r\n_________________________________________________________________\r\nclf/f2 (Flatten)             (None, 1600)              0\r\n_________________________________________________________________\r\nclf/d1 (Dense)               (None, 100)               160100\r\n_________________________________________________________________\r\nclf/d2 (Dense)               (None, 10)                1010\r\n_________________________________________________________________\r\nclf/a2 (Activation)          (None, 10)                0\r\n=================================================================\r\nTotal params: 179,926\r\nTrainable params: 179,926\r\nNon-trainable params: 0\r\n_________________________________________________________________\r\n/home/ecchen/opt/miniconda/envs/tf/lib/python3.6/site-packages/cleverhans/attacks_tf.py:27: UserWarning: attacks_tf is deprecated and will be removed on 2019-07-18 or after. Code should import functions from their new locations directly.\r\n  warnings.warn(\"attacks_tf is deprecated and will be removed on 2019-07-18\"\r\nepoch: [1/100]\r\n[INFO 2019-08-27 13:41:55,072 cleverhans] Constructing new graph for attack ProjectedGradientDescent\r\n/home/ecchen/opt/miniconda/envs/tf/lib/python3.6/site-packages/cleverhans/compat.py:22: UserWarning: <function reduce_sum_v1 at 0x7f8c8e06a950> is deprecated. Switch to calling the equivalent function in tensorflow.  This function was originally needed as a compatibility layer for old versions of tensorflow,  but support for those versions has now been dropped.\r\n  warnings.warn(str(f) + \" is deprecated. Switch to calling the equivalent function in tensorflow. \"\r\nWARNING:tensorflow:From /home/ecchen/opt/miniconda/envs/tf/lib/python3.6/site-packages/cleverhans/compat.py:79: calling softmax_cross_entropy_with_logits_v2_helper (from tensorflow.python.ops.nn_ops) with dim is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\ndim is deprecated, use axis instead\r\nepoch: [2/100]\r\nepoch: [3/100]\r\nepoch: [4/100]\r\nepoch: [5/100]\r\nepoch: [6/100]\r\nepoch: [7/100]\r\nepoch: [8/100]\r\nepoch: [9/100]\r\nepoch: [10/100]\r\nepoch: [11/100]\r\nepoch: [12/100]\r\nepoch: [13/100]\r\nepoch: [14/100]\r\nepoch: [15/100]\r\nepoch: [16/100]\r\nepoch: [17/100]\r\nepoch: [18/100]\r\nepoch: [19/100]\r\nepoch: [20/100]\r\nepoch: [21/100]\r\nepoch: [22/100]\r\nepoch: [23/100]\r\nepoch: [24/100]\r\nepoch: [25/100]\r\nepoch: [26/100]\r\nepoch: [27/100]\r\nepoch: [28/100]\r\nepoch: [29/100]\r\nepoch: [30/100]\r\nepoch: [31/100]\r\nepoch: [32/100]\r\nepoch: [33/100]\r\nepoch: [34/100]\r\nepoch: [35/100]\r\nepoch: [36/100]\r\nepoch: [37/100]\r\nepoch: [38/100]\r\nepoch: [39/100]\r\nepoch: [40/100]\r\nepoch: [41/100]\r\nepoch: [42/100]\r\nepoch: [43/100]\r\nepoch: [44/100]\r\nepoch: [45/100]\r\nepoch: [46/100]\r\nepoch: [47/100]\r\nepoch: [48/100]\r\nepoch: [49/100]\r\nepoch: [50/100]\r\nepoch: [51/100]\r\nepoch: [52/100]\r\nepoch: [53/100]\r\nepoch: [54/100]\r\nepoch: [55/100]\r\nepoch: [56/100]\r\nepoch: [57/100]\r\nepoch: [58/100]\r\nepoch: [59/100]\r\nepoch: [60/100]\r\nepoch: [61/100]\r\nepoch: [62/100]\r\nepoch: [63/100]\r\nepoch: [64/100]\r\nepoch: [65/100]\r\nepoch: [66/100]\r\nepoch: [67/100]\r\nepoch: [68/100]\r\nepoch: [69/100]\r\nepoch: [70/100]\r\nepoch: [71/100]\r\nepoch: [72/100]\r\nepoch: [73/100]\r\nepoch: [74/100]\r\nepoch: [75/100]\r\nepoch: [76/100]\r\nepoch: [77/100]\r\nepoch: [78/100]\r\nepoch: [79/100]\r\nepoch: [80/100]\r\nepoch: [81/100]\r\nepoch: [82/100]\r\nepoch: [83/100]\r\nepoch: [84/100]\r\nepoch: [85/100]\r\nepoch: [86/100]\r\nepoch: [87/100]\r\nepoch: [88/100]\r\nepoch: [89/100]\r\nepoch: [90/100]\r\nepoch: [91/100]\r\nepoch: [92/100]\r\nepoch: [93/100]\r\nepoch: [94/100]\r\nepoch: [95/100]\r\nepoch: [96/100]\r\nepoch: [97/100]\r\nepoch: [98/100]\r\nepoch: [99/100]\r\nepoch: [100/100]\r\n[INFO 2019-08-27 13:49:31,141 cleverhans] Constructing new graph for attack ProjectedGradientDescent\r\nWARNING:tensorflow:From /home/ecchen/opt/miniconda/envs/tf/lib/python3.6/site-packages/cleverhans/attacks/projected_gradient_descent.py:95: to_float (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nUse tf.cast instead.\r\nacc:96.99\r\n_________________________________________________________________\r\nLayer (type)                 Output Shape              Param #\r\n=================================================================\r\nclf_input (InputLayer)       (None, 28, 28, 1)         0\r\n_________________________________________________________________\r\nclf/c1 (Conv2D)              (None, 26, 26, 32)        320\r\n_________________________________________________________________\r\nclf/p1 (MaxPooling2D)        (None, 13, 13, 32)        0\r\n_________________________________________________________________\r\nclf/c3 (Conv2D)              (None, 11, 11, 64)        18496\r\n_________________________________________________________________\r\nclf/p2 (MaxPooling2D)        (None, 5, 5, 64)          0\r\n_________________________________________________________________\r\nclf/f2 (Flatten)             (None, 1600)              0\r\n_________________________________________________________________\r\nclf/d1 (Dense)               (None, 100)               160100\r\n_________________________________________________________________\r\nclf/d2 (Dense)               (None, 10)                1010\r\n=================================================================\r\nTotal params: 179,926\r\nTrainable params: 179,926\r\nNon-trainable params: 0\r\n_________________________________________________________________\r\nacc[clean]: 99.070 %\r\n[INFO 2019-08-27 13:49:33,001 cleverhans] Constructing new graph for attack CarliniWagnerL2\r\n/home/ecchen/opt/miniconda/envs/tf/lib/python3.6/site-packages/cleverhans/compat.py:22: UserWarning: <function reduce_max_v1 at 0x7f8c8dff06a8> is deprecated. Switch to calling the equivalent function in tensorflow.  This function was originally needed as a compatibility layer for old versions of tensorflow,  but support for those versions has now been dropped.\r\n  warnings.warn(str(f) + \" is deprecated. Switch to calling the equivalent function in tensorflow. \"\r\nWARNING:tensorflow:From /home/ecchen/opt/miniconda/envs/tf/lib/python3.6/site-packages/tensorflow/python/ops/math_grad.py:102: div (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nDeprecated in favor of operator or tf.math.divide.\r\nWARNING:tensorflow:From /home/ecchen/opt/miniconda/envs/tf/lib/python3.6/site-packages/cleverhans/attacks/carlini_wagner_l2.py:82: py_func (from tensorflow.python.ops.script_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\ntf.py_func is deprecated in TF V2. Instead, use\r\n    tf.py_function, which takes a python function which manipulates tf eager\r\n    tensors instead of numpy arrays. It's easy to convert a tf eager tensor to\r\n    an ndarray (just call tensor.numpy()) but having access to eager tensors\r\n    means `tf.py_function`s can use accelerators such as GPUs as well as\r\n    being differentiable using a gradient tape.\r\n\r\nacc[confidence =  0]: 0.150 %\r\n[INFO 2019-08-27 14:01:11,281 cleverhans] Constructing new graph for attack CarliniWagnerL2\r\n/home/ecchen/opt/miniconda/envs/tf/lib/python3.6/site-packages/numpy/core/fromnumeric.py:2920: RuntimeWarning: Mean of empty slice.\r\n  out=out, **kwargs)\r\n/home/ecchen/opt/miniconda/envs/tf/lib/python3.6/site-packages/numpy/core/_methods.py:85: RuntimeWarning: invalid value encountered in double_scalars\r\n  ret = ret.dtype.type(ret / rcount)\r\nacc[confidence =  5]: 0.780 %\r\n\r\n``` Okay yeah so you're right. I've looked at this some and I'm confused by what's going on. I hope to have some more time in two weeks after some paper deadlines and will look at this more. If I don't follow up by two weeks from now definitely ping on this thread again. @carlini, any update?\r\n\r\nI found that the minimal testcase for MNIST has some bug.\r\n\r\nActually, I did use the **model with softmax** layer in the code.\r\n\r\n```\r\nclf_model = tf.keras.models.Model(inputs=model.input, outputs=model.get_layer(index=-2).output)\r\nclf_model.summary()\r\nwrap = KerasModelWrapper(model) # model includes softmax layer\r\ncw2   = c_attacks.CarliniWagnerL2(wrap, sess)\r\n```\r\n\r\nWhen I try to wrap a model w/o softmax, cleverhans would raise error message:\r\n```\r\n[[skip]]\r\n  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/utils_keras.py\", line 128, in _get_softmax_name\r\n    raise Exception(\"No softmax layers found\")\r\nException: No softmax layers found\r\n[[skip]]\r\n```\r\n\r\nSo the conclusion is that **softmax** layer is required for `KerasModelWrapper(Model)` and it would process logits and probability automatically.\r\n\r\nAlso, I still can not generate stronger examples and get runtime warning when `confidence ` is increased.\r\n  I try to download the dev dataset for NIPS 2017 Adversarial Competition. However, some images download failed.\r\n\r\nI run \"python download_images.py --input_file=dev_dataset.csv --output_dir=./images/\"\r\nand get output as follow:\r\n\r\n\r\nDownloaded 171 imagesDownload failed: 00c3cd597f1ee96f\r\nDownload failed: 3692f6967c632fee\r\nDownloaded 178 imagesDownload failed: fa2a7d600b62174e\r\nDownloaded 179 imagesDownload failed: 137ab6ca314e9e35\r\nDownloaded 182 imagesDownload failed: 3dc0e8f854bdc9b3\r\nDownload failed: a5949b0719d3ea77\r\nDownloaded 184 imagesDownload failed: 938ada2f2bfa2b68\r\nDownloaded 186 imagesDownload failed: 4bb12984b41d0834\r\nDownloaded 196 imagesDownload failed: 362e4ac62cf888f4\r\nDownloaded 198 imagesDownload failed: 1b57d7bbd673c771\r\nDownloaded 202 imagesDownload failed: 8f9c1e4fd9f4cb2e\r\nDownloaded 209 imagesDownload failed: 871c99d5658c3189\r\nDownload failed: 05817a675e7506d1\r\nDownloaded 300 imagesDownload failed: 8f07c92f0af97807\r\nDownloaded 304 imagesDownload failed: e19a59ad09d18497\r\nDownloaded 306 imagesDownload failed: 37e7dc99bf2704c7\r\nDownloaded 397 imagesDownload failed: 7c249a944594a62e\r\nDownloaded 404 imagesDownload failed: d12aad0d18252b40\r\nDownloaded 406 imagesDownload failed: 0f9d8c86a9f38020\r\nDownloaded 408 imagesDownload failed: e3c3f8889ac99aec\r\nDownloaded 422 imagesDownload failed: 55b85f4336d9603a\r\nDownloaded 425 imagesDownload failed: a90d9627e2145090\r\nDownloaded 436 imagesDownload failed: c755f3b0f89028fc\r\nDownloaded 439 imagesDownload failed: 8af30e5c3fa48a08\r\nDownloaded 446 imagesDownload failed: 70db5a1689f89129\r\nDownloaded 448 imagesDownload failed: 6bff4ecb94f1f84e\r\nDownloaded 523 imagesDownload failed: 9a49001b63903f72\r\nDownloaded 524 imagesDownload failed: de40907c1e2c5515\r\nDownloaded 555 imagesDownload failed: 444109f3ccfacc7b\r\nDownloaded 565 imagesDownload failed: 1a94dc47fdd84a95\r\nDownloaded 571 imagesDownload failed: cbcb7444cc827812\r\nDownloaded 576 imagesDownload failed: b9310b9080c06e4f\r\nDownload failed: c3cf76709c87255b\r\nDownloaded 592 imagesDownload failed: 5bf502c4a4b7d04d\r\nDownloaded 610 imagesDownload failed: 58420b727fcab02b\r\nDownloaded 639 imagesDownload failed: d2cc2eabfc7bf54a\r\nDownloaded 640 imagesDownload failed: bd3617fcc985fe31\r\nDownloaded 642 imagesDownload failed: c9ddfb1043177de8\r\nDownloaded 644 imagesDownload failed: bba5c56cc3eb07c9\r\nDownloaded 673 imagesDownload failed: 000b7d55b6184b08\r\nDownloaded 688 imagesDownload failed: 8859efd46fab37ff\r\nDownload failed: 6b27728f0f816dc6\r\nDownloaded 763 imagesDownload failed: 740981d161a38bad\r\nDownload failed: 5b85f98e0105d135\r\nDownloaded 767 imagesDownload failed: 8c5b5bc0f39e2e06\r\nDownloaded 771 imagesDownload failed: 9d5ef11ec55123e5\r\nDownloaded 784 imagesDownload failed: 82179b1d313e0e23\r\nDownloaded 803 imagesDownload failed: 611f453c4bb616b9\r\nDownloaded 814 imagesDownload failed: c663670c06c06ea4\r\nDownloaded 853 imagesDownload failed: 01244097ca8ffdfa\r\nDownloaded 866 imagesDownload failed: 02eb799d147d5f91\r\nDownloaded 989 imagesDownload failed: 5792d4a42d2a82c8\r\nDownloaded 990 imagesDownload failed: 4146a745f9b2f3cb\r\nDownloaded 991 imagesDownload failed: 49c27b439d39a00c\r\nDownloaded 992 imagesDownload failed: 0e71473957df4793\r\nDownloaded 993 imagesDownload failed: 422d08407aeed1be\r\nDownload failed: 17f3b8a057bc01be\r\nDownloaded 995 imagesDownload failed: 99f175132cd1c6e2\r\nDownloaded 996 imagesDownload failed: 408bae58c26a8076\r\nDownload failed: a414ccf5c51454e0\r\nDownloaded 998 imagesDownload failed: 134bfd93a04b88b2\r\nDownloaded 999 imagesDownload failed: 0aebe24fc257286e\r\nDownloaded 1000 imagesDownload failed: 4053a6a3d0e63c01\r\n\r\n\r\n  ***The issue tracker should only be used to report bugs or feature requests. If you are looking for support from other library users, please ask a question on [StackOverflow](https://stackoverflow.com/questions/tagged/cleverhans).***\r\n\r\nHi,\r\nI am trying to train a DQN model based on RL-attack examples using this line:\r\npython3 train.py --env Breakout --save-dir ./data/Breakout/ --num-steps 200000000\r\n\r\nHowever, the run fails and gives this error\r\nTraceback (most recent call last):\r\n  File \"train.py\", line 195, in <module>\r\n    attack=args.attack\r\n  File \"/cleverhans/examples/RL-attack/rlattack/deepq/build_graph.py\", line 275, in build_train\r\n    act_f = build_act(make_obs_ph, q_func, num_actions, scope=scope, noisy=noisy, reuse=reuse)\r\n  File \"/cleverhans/examples/RL-attack/rlattack/deepq/build_graph.py\", line 207, in build_act\r\n    q_values = q_values.get_logits(observations_ph.get())\r\nAttributeError: 'Tensor' object has no attribute 'get_logits'\r\n\r\nWhen I check the cleverhans/model.py, get_logits() functions are defined there but the fprop() function return NotImplementedError. I am not sure if that's why I got this error or something related with calling  \"from cleverhans.model import CallableModelWrapper\" inside build_graph.py file.\r\n\r\nI am running this script on Ubuntu16.04, Python3.5, Tensorflow 1.14, CleverHans 3.0.1. @behzadanksu can you take a look? cross post from https://stackoverflow.com/questions/57007921/rl-example-attributeerror-tensor-object-has-no-attribute-get-logits This issue was resolved in a recent commit of the main repository ( https://github.com/behzadanksu/rl-attack ). I will submit a pull request to Cleverhans in the following days to synchronize the core implementations.  Thanks @behzadanksu ! Hi,\r\nThanks for the response  @npapernot and @behzadanksu. But now I have some further error in the recent commit  [of the rl-attack repository](https://github.com/behzadanksu/rl-attack.) It looks like now I don't have the error I mentioned here, but when I call env.reset(), it gives NotImplementedError.  I tested by just running these two lines and reset works perfectly and I can see the env:\r\n`env = gym.make('Breakout-v0')`\r\n`obs = env.reset()`\r\n\r\nHowever, when I call this function in train.py file, it gives the error:\r\n`env = gym.make(game_name + \"NoFrameskip-v4\")`\r\n`monitored_env = SimpleMonitor(env)`\r\n`env = wrap_dqn(monitored_env)`\r\n`obs = env.reset()`\r\nSo there must be something wrong with the wrap_dqn function inside atari_wrappers_deprecated.py file. \r\n\r\nI am not sure whether I post this error here or to github page of rl-attack for further discussion.    I apologize if this seems basic. But I'm trying to save MNIST images that have been attacked with FGSM. My code is:\r\n```\r\nimport argparse\r\nimport tensorflow as tf\r\nfrom cleverhans.dataset import MNIST\r\nfrom cleverhans.attacks import FastGradientMethod\r\nfrom cleverhans.model_zoo.basic_cnn import ModelBasicCNN\r\n\r\nparser = argparse.ArgumentParser()\r\nparser.add_argument('--attack', required=True,\r\n                    choices=['fgsm'])\r\n\r\nargs = parser.parse_args()\r\nsess = tf.Session(config=tf.ConfigProto())\r\n\r\n\r\nif args.attack == 'fgsm':\r\n    model = ModelBasicCNN('model1', 10, 64)\r\n    attack = FastGradientMethod(model, sess=sess)\r\n\r\nmnist = MNIST(train_start=0, train_end=60000)\r\nx_train, y_train = mnist.get_set('train')\r\n\r\nfgsm_params = {\r\n    'eps': 0.3,\r\n    'clip_min': 0.,\r\n    'clip_max': 1,\r\n    'y_target': 0\r\n}\r\n\r\nfor i in range(len(x_train)):\r\n    new_x = attack.generate(x_train[i], **fgsm_params)\r\n    print(x_train[i])\r\n    print(new_x)\r\n    print('\\n')\r\n```\r\n\r\nHowever, this results in an error: `AttributeError: 'int' object has no attribute 'get_shape'`\r\n\r\nI know this is an easy fix and I hesitate wasting anyone's valuable time to solve it. But if anyone can provide guidance, I would be very grateful.  #1077  Hi @npapernot, could you please review this PR? Many thanks. Gotcha! Thanks for the details, @npapernot! \r\n\r\nJust to make sure, the three new languages you mentioned are jax, tf2, and pytorch, right? Thanks. > Yes, all of their code should be in future folders\r\n\r\nHi @npapernot, I fixed the PR accordingly. In addition, I did some refactoring and moved all future-related pytorch code that is not currently in ```future``` into ```future/torch```. Could you please take another look at this PR? Many thanks.  fix issue #1074, this patch is given by @npapernot\r\n\r\nfeel free to verify this PR by following Dockerfile:\r\n```\r\nFrom tensorflow/tensorflow:1.13.1-gpu-py3\r\n\r\nRUN apt update && \\\r\n    apt install -y rsync git vim wget\r\n\r\nRUN pip install git+https://github.com/CNOCycle/cleverhans.git@b1427b275d0151686c4d11a99faf488a63498ffe#egg=cleverhans\r\n\r\nRUN wget https://raw.githubusercontent.com/tensorflow/cleverhans/master/cleverhans_tutorials/mnist_tutorial_keras.py\r\n\r\nCMD python mnist_tutorial_keras.py\r\n```\r\n\r\n```\r\nFrom tensorflow/tensorflow:1.14.0-gpu-py3\r\n\r\nRUN apt update && \\\r\n    apt install -y rsync git vim wget\r\n\r\nRUN pip install git+https://github.com/CNOCycle/cleverhans.git@b1427b275d0151686c4d11a99faf488a63498ffe#egg=cleverhans\r\n\r\nRUN wget https://raw.githubusercontent.com/tensorflow/cleverhans/master/cleverhans_tutorials/mnist_tutorial_keras.py\r\n\r\nCMD python mnist_tutorial_keras.py\r\n```\r\n\r\nHowever, I am not sure that the `tf.keras`'s behavior if version is 2.0 or above \nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here (e.g. `I signed it!`) and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google.com/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Fcleverhans%2Fpull%2F1075) for more info**.\n\n<!-- need_sender_cla --> I signed it! CLAs look good, thanks!\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Fcleverhans%2Fpull%2F1075) for more info**.\n\n<!-- ok -->  **Describe the bug**\r\ncleverhans may not work in tf==1.14.0\r\n\r\n**To Reproduce**\r\nEnvironment is built by following Dockerfile:\r\n```Dockerfile\r\n# build_cmd: DOCKER_BUILDKIT=1 docker build --progress plain -t tf14 .\r\n# run_cmd: docker run -it --name tf_cnt tf14 bash\r\nFrom tensorflow/tensorflow:1.14.0-gpu-py3\r\n\r\nRUN apt update && \\\r\n    apt install -y rsync git vim && \\\r\n    apt install -y libsm6 libxrender1 libxext-dev\r\n\r\nRUN pip install imgaug && \\\r\n    pip install git+https://github.com/tensorflow/cleverhans.git@42f477581456fcfb4a1833b9c1a6c1b3cfc49bb0#egg=cleverhans\r\n```\r\n\r\nFollowing is minimum testing code:\r\n```python\r\n#%%\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\nimport cleverhans.attacks as c_attacks\r\nfrom cleverhans.utils_keras import KerasModelWrapper\r\n\r\ndef build_model():\r\n    init_op = tf.keras.initializers.he_normal()\r\n    clf_input = tf.keras.layers.Input(shape=(28,28,1 ), name='clf_input')\r\n    flatten   = clf_input\r\n    conv1     = tf.keras.layers.Conv2D(32, (3, 3), activation=\"relu\", kernel_initializer=init_op, name=\"clf/c1\")(flatten)\r\n    pool1     = tf.keras.layers.MaxPooling2D(pool_size=(2, 2), name=\"clf/p1\")(conv1)\r\n    conv3     = tf.keras.layers.Conv2D(64, (3, 3), activation=\"relu\", kernel_initializer=init_op, name=\"clf/c3\")(pool1)\r\n    pool2     = tf.keras.layers.MaxPooling2D(pool_size=(2, 2), name=\"clf/p2\")(conv3)\r\n    flatten2  = tf.keras.layers.Flatten(name=\"clf/f2\")(pool2)\r\n    dense1    = tf.keras.layers.Dense(100, activation=\"relu\", kernel_initializer=init_op, name=\"clf/d1\")(flatten2)\r\n    dense2    = tf.keras.layers.Dense(10 , activation=None  , kernel_initializer=init_op, name=\"clf/d2\")(dense1)\r\n    clf_pre   = dense2\r\n    clf_out   = tf.keras.layers.Activation('softmax', name=\"clf/a2\")(clf_pre)\r\n    pre_model = tf.keras.models.Model(inputs=clf_input, outputs=clf_pre, name='pre_model')\r\n    clf_model = tf.keras.models.Model(inputs=clf_input, outputs=clf_out, name='clf_model')\r\n    clf_model.compile(loss='categorical_crossentropy', optimizer='Nadam', metrics=['accuracy'])\r\n    \r\n    return clf_model\r\n\r\ndef get_data():\r\n\r\n    \"\"\"\r\n        download mnist\r\n    \"\"\"\r\n    (trainX, trainY), (testX, testY) = tf.keras.datasets.mnist.load_data()  \r\n    trainX = trainX.astype(np.float32)\r\n    testX  = testX.astype(np.float32)   \r\n    # ont-hot\r\n    trainY = tf.keras.utils.to_categorical(trainY,10)\r\n    testY  = tf.keras.utils.to_categorical(testY ,10)   \r\n    # get validation sets\r\n    validX = trainX[55000:,:]\r\n    validY = trainY[55000:,:]   \r\n    trainX = trainX[:55000,:]\r\n    trainY = trainY[:55000,:]   \r\n    # expand dimesion\r\n    trainX = np.expand_dims(trainX, axis=3)\r\n    validX = np.expand_dims(validX, axis=3)\r\n    testX  = np.expand_dims(testX , axis=3) \r\n    trainX = trainX / 255.0\r\n    validX = validX / 255.0\r\n    testX  = testX  / 255.0\r\n    trainY = trainY\r\n    validY = validY\r\n    testY  = testY\r\n    return trainX, trainY, validX, validY, testX, testY\r\n\r\nif __name__ == '__main__':\r\n\r\n    # reset tf session\r\n    tf.keras.backend.clear_session()\r\n    gpu_options = tf.GPUOptions(allow_growth=True)\r\n    sess = tf.Session(config=tf.ConfigProto(gpu_options=gpu_options))\r\n    tf.keras.backend.set_session(sess)\r\n\r\n    # get data and create model\r\n    trainX, trainY, validX, validY, testX, testY = get_data()\r\n    model = build_model()\r\n\r\n    # train model\r\n    model.fit(trainX, trainY,\r\n              validation_data=(validX, validY),\r\n              batch_size=1000,\r\n              epochs=5,\r\n              verbose=2)\r\n\r\n    # create attacking method\r\n    wrap = KerasModelWrapper(model)\r\n    pgd = c_attacks.ProjectedGradientDescent(wrap, sess=sess)\r\n\r\n    # create adv_x\r\n    adv_x = pgd.generate_np(testX,\r\n                            eps=0.3,\r\n                            ord = np.inf,\r\n                            clip_min=0.,\r\n                            clip_max=1.)\r\n    acc = model.evaluate(adv_x, testY, verbose=0)\r\n    print( 'acc:{:.2f}'.format(acc[1] * 100) )\r\n```\r\n\r\nHere is full error message:\r\n```\r\nWARNING: Logging before flag parsing goes to stderr.\r\nW0623 11:26:46.594264 140048769550144 deprecation_wrapper.py:119] From /usr/local/lib/python3.6/dist-packages/cleverhans/utils_tf.py:345: The name tf.GraphKeys is deprecated. Please use tf.compat.v1.GraphKeys instead.\r\n\r\nW0623 11:26:46.608628 140048769550144 deprecation_wrapper.py:119] From test.py:59: The name tf.GPUOptions is deprecated. Please use tf.compat.v1.GPUOptions instead.\r\n\r\nW0623 11:26:46.608806 140048769550144 deprecation_wrapper.py:119] From test.py:60: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.\r\n\r\nW0623 11:26:46.608920 140048769550144 deprecation_wrapper.py:119] From test.py:60: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.\r\n\r\n2019-06-23 11:26:46.609137: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\r\n2019-06-23 11:26:46.613193: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcuda.so.1\r\n2019-06-23 11:26:46.700133: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2019-06-23 11:26:46.700775: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x3ee7e00 executing computations on platform CUDA. Devices:\r\n2019-06-23 11:26:46.700791: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): GeForce GTX 1080 Ti, Compute Capability 6.1\r\n2019-06-23 11:26:46.702363: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 3600000000 Hz\r\n2019-06-23 11:26:46.702833: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x42f7780 executing computations on platform Host. Devices:\r\n2019-06-23 11:26:46.702847: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>\r\n2019-06-23 11:26:46.702958: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2019-06-23 11:26:46.703438: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1640] Found device 0 with properties:\r\nname: GeForce GTX 1080 Ti major: 6 minor: 1 memoryClockRate(GHz): 1.607\r\npciBusID: 0000:01:00.0\r\n2019-06-23 11:26:46.703620: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcudart.so.10.0\r\n2019-06-23 11:26:46.704573: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcublas.so.10.0\r\n2019-06-23 11:26:46.705404: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcufft.so.10.0\r\n2019-06-23 11:26:46.705678: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcurand.so.10.0\r\n2019-06-23 11:26:46.706734: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcusolver.so.10.0\r\n2019-06-23 11:26:46.707592: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcusparse.so.10.0\r\n2019-06-23 11:26:46.709911: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcudnn.so.7\r\n2019-06-23 11:26:46.710002: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2019-06-23 11:26:46.710588: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2019-06-23 11:26:46.711115: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1763] Adding visible gpu devices: 0\r\n2019-06-23 11:26:46.711141: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcudart.so.10.0\r\n2019-06-23 11:26:46.711947: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1181] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2019-06-23 11:26:46.711958: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1187]      0\r\n2019-06-23 11:26:46.711978: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1200] 0:   N\r\n2019-06-23 11:26:46.712277: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2019-06-23 11:26:46.712859: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2019-06-23 11:26:46.713419: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1326] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 9874 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1080 Ti, pci bus id: 0000:01:00.0, compute capability: 6.1)\r\nW0623 11:26:46.714186 140048769550144 deprecation_wrapper.py:119] From test.py:61: The name tf.keras.backend.set_session is deprecated. Please use tf.compat.v1.keras.backend.set_session instead.\r\n\r\nDownloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\r\n11493376/11490434 [==============================] - 7s 1us/step\r\nW0623 11:26:54.311172 140048769550144 deprecation_wrapper.py:119] From test.py:9: The name tf.keras.initializers.he_normal is deprecated. Please use tf.compat.v1.keras.initializers.he_normal instead.\r\n\r\nTrain on 55000 samples, validate on 5000 samples\r\nEpoch 1/5\r\n2019-06-23 11:26:55.344180: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcublas.so.10.0\r\n2019-06-23 11:26:55.517816: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcudnn.so.7\r\n55000/55000 - 2s - loss: 0.6365 - acc: 0.8075 - val_loss: 0.1421 - val_acc: 0.9606\r\nEpoch 2/5\r\n55000/55000 - 1s - loss: 0.1346 - acc: 0.9603 - val_loss: 0.0968 - val_acc: 0.9710\r\nEpoch 3/5\r\n55000/55000 - 1s - loss: 0.1351 - acc: 0.9619 - val_loss: 0.0749 - val_acc: 0.9790\r\nEpoch 4/5\r\n55000/55000 - 1s - loss: 0.0673 - acc: 0.9795 - val_loss: 0.0620 - val_acc: 0.9834\r\nEpoch 5/5\r\n55000/55000 - 1s - loss: 0.0531 - acc: 0.9837 - val_loss: 0.0574 - val_acc: 0.9864\r\n/usr/local/lib/python3.6/dist-packages/cleverhans/attacks_tf.py:27: UserWarning: attacks_tf is deprecated and will be removed on 2019-07-18 or after. Code should import functions from their new locations directly.\r\n  warnings.warn(\"attacks_tf is deprecated and will be removed on 2019-07-18\"\r\n[INFO 2019-06-23 11:26:59,682 cleverhans] Constructing new graph for attack ProjectedGradientDescent\r\nI0623 11:26:59.682575 140048769550144 attack.py:127] Constructing new graph for attack ProjectedGradientDescent\r\nW0623 11:26:59.682862 140048769550144 deprecation_wrapper.py:119] From /usr/local/lib/python3.6/dist-packages/cleverhans/attacks/attack.py:141: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.\r\n\r\nW0623 11:26:59.740708 140048769550144 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/cleverhans/attacks/projected_gradient_descent.py:95: to_float (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nUse `tf.cast` instead.\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 83, in <module>\r\n    clip_max=1.)\r\n  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/attacks/attack.py\", line 186, in generate_np\r\n    self.construct_graph(fixed, feedable, x_val, hash_key)\r\n  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/attacks/attack.py\", line 158, in construct_graph\r\n    x_adv = self.generate(x, **new_kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/attacks/projected_gradient_descent.py\", line 146, in generate\r\n    maximum_iterations=self.nb_iter)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 3501, in while_loop\r\n    return_same_structure)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 3012, in BuildLoop\r\n    pred, body, original_loop_vars, loop_vars, shape_invariants)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 2937, in _BuildLoop\r\n    body_result = body(*packed_vars_for_body)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 3456, in <lambda>\r\n    body = lambda i, lv: (i + 1, orig_body(*lv))\r\n  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/attacks/projected_gradient_descent.py\", line 130, in body\r\n    adv_x = FGM.generate(adv_x, **fgm_params)\r\n  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/attacks/fast_gradient_method.py\", line 54, in generate\r\n    self.model.get_logits(x),\r\n  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/utils_keras.py\", line 168, in get_logits\r\n    logits_name = self._get_logits_name()\r\n  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/utils_keras.py\", line 159, in _get_logits_name\r\n    logits_name = node.inbound_layers[0].name\r\nTypeError: 'Dense' object does not support indexing\r\nE0623 11:26:59.818305 140048769550144 tf_should_use.py:71] ==================================\r\nObject was never used (type <class 'tensorflow.python.framework.ops.Operation'>):\r\n<tf.Operation 'assert_less_equal/Assert/AssertGuard/Merge' type=Merge>\r\nIf you want to mark it as used call its \"mark_used()\" method.\r\nIt was originally created here:\r\n  File \"test.py\", line 83, in <module>\r\n    clip_max=1.)  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/attacks/attack.py\", line 186, in generate_np\r\n    self.construct_graph(fixed, feedable, x_val, hash_key)  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/attacks/attack.py\", line 158, in construct_graph\r\n    x_adv = self.generate(x, **new_kwargs)  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/attacks/projected_gradient_descent.py\", line 146, in generate\r\n    maximum_iterations=self.nb_iter)  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/utils_tf.py\", line 740, in assert_less_equal\r\n    return tf.assert_less_equal(*args, **kwargs)  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/check_ops.py\", line 947, in assert_less_equal\r\n    return control_flow_ops.Assert(condition, data, summarize=summarize)  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/util/tf_should_use.py\", line 193, in wrapped\r\n    return _add_should_use_warning(fn(*args, **kwargs))\r\n==================================\r\nE0623 11:26:59.818655 140048769550144 tf_should_use.py:71] ==================================\r\nObject was never used (type <class 'tensorflow.python.framework.ops.Operation'>):\r\n<tf.Operation 'assert_greater_equal/Assert/AssertGuard/Merge' type=Merge>\r\nIf you want to mark it as used call its \"mark_used()\" method.\r\nIt was originally created here:\r\n  File \"test.py\", line 83, in <module>\r\n    clip_max=1.)  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/attacks/attack.py\", line 186, in generate_np\r\n    self.construct_graph(fixed, feedable, x_val, hash_key)  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/attacks/attack.py\", line 158, in construct_graph\r\n    x_adv = self.generate(x, **new_kwargs)  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/attacks/projected_gradient_descent.py\", line 146, in generate\r\n    maximum_iterations=self.nb_iter)  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/utils_tf.py\", line 749, in assert_greater_equal\r\n    return tf.assert_greater_equal(*args, **kwargs)  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/check_ops.py\", line 1119, in assert_greater_equal\r\n    return control_flow_ops.Assert(condition, data, summarize=summarize)  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/util/tf_should_use.py\", line 193, in wrapped\r\n    return _add_should_use_warning(fn(*args, **kwargs))\r\n==================================\r\n\r\n```\r\n\r\nError message complains that\r\n```\r\n  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/utils_keras.py\", line 159, in _get_logits_name\r\n    logits_name = node.inbound_layers[0].name\r\nTypeError: 'Dense' object does not support indexing\r\n```\r\n\r\nif I replace line `\"/usr/local/lib/python3.6/dist-packages/cleverhans/utils_keras.py:159`\r\n```diff\r\n-    logits_name = node.inbound_layers[0].name\r\n+    logits_name = node.inbound_layers.name\r\n```\r\nthen I can run testing code sucessfully.\r\n\r\nBut I am not sure that this modification is a proper solution.\r\n\r\n**Expected behavior**\r\nI can run testing code sucessfully.\r\n\r\nThis testing code works if tensorflow veriosn is 1.13.1 wihout modifying any code in cleverhans\r\n```diff\r\n- From tensorflow/tensorflow:1.14.0-gpu-py3\r\n+ From tensorflow/tensorflow:1.13.1-gpu-py3\r\n```\r\n\r\n**System configuration**\r\n - host machine: ubuntu:16.04\r\n - docker version\r\n```\r\nClient:\r\n Version:           18.09.6\r\n API version:       1.39\r\n Go version:        go1.10.8\r\n Git commit:        481bc77\r\n Built:             Sat May  4 02:35:27 2019\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          18.09.6\r\n  API version:      1.39 (minimum version 1.12)\r\n  Go version:       go1.10.8\r\n  Git commit:       481bc77\r\n  Built:            Sat May  4 01:59:36 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n\r\n```\r\n Here is full log message[without modifying any code in cleverhans]\r\n```\r\nroot@e343e314748e:/# python mnist_tutorial_keras.py\r\nWARNING: Logging before flag parsing goes to stderr.\r\nW0623 16:43:14.353516 139631312512832 deprecation_wrapper.py:119] From /usr/local/lib/python3.6/dist-packages/cleverhans/utils_tf.py:345: The name tf.GraphKeys is deprecated. Please use tf.compat.v1.GraphKeys instead.\r\n\r\nW0623 16:43:14.359306 139631312512832 deprecation_wrapper.py:119] From mnist_tutorial_keras.py:218: The name tf.app.run is deprecated. Please use tf.compat.v1.app.run instead.\r\n\r\n/usr/local/lib/python3.6/dist-packages/cleverhans_tutorials/__init__.py:24: UserWarning: It appears that you have at least two versions of cleverhans installed, one at / and one at /usr/local/lib/python3.6/dist-packages. You are running the tutorial script from the former but python imported the library module from the latter. This may cause errors, for example if the tutorial version is newer than the library version and attempts to call new features.\r\n  \" call new features.\" % (cur_dir, ch_dir))\r\nW0623 16:43:14.360015 139631312512832 deprecation_wrapper.py:119] From mnist_tutorial_keras.py:52: The name tf.set_random_seed is deprecated. Please use tf.compat.v1.set_random_seed instead.\r\n\r\nW0623 16:43:14.369127 139631312512832 deprecation_wrapper.py:119] From mnist_tutorial_keras.py:54: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.\r\n\r\nW0623 16:43:14.369319 139631312512832 deprecation_wrapper.py:119] From mnist_tutorial_keras.py:61: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.\r\n\r\n2019-06-23 16:43:14.369569: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\r\n2019-06-23 16:43:14.373352: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcuda.so.1\r\n2019-06-23 16:43:14.468148: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2019-06-23 16:43:14.468844: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x3dab6b0 executing computations on platform CUDA. Devices:\r\n2019-06-23 16:43:14.468857: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): GeForce GTX 1080 Ti, Compute Capability 6.1\r\n2019-06-23 16:43:14.487450: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 3600000000 Hz\r\n2019-06-23 16:43:14.487896: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x4194420 executing computations on platform Host. Devices:\r\n2019-06-23 16:43:14.487912: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>\r\n2019-06-23 16:43:14.488333: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2019-06-23 16:43:14.488941: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1640] Found device 0 with properties:\r\nname: GeForce GTX 1080 Ti major: 6 minor: 1 memoryClockRate(GHz): 1.607\r\npciBusID: 0000:01:00.0\r\n2019-06-23 16:43:14.489137: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcudart.so.10.0\r\n2019-06-23 16:43:14.490068: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcublas.so.10.0\r\n2019-06-23 16:43:14.490833: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcufft.so.10.0\r\n2019-06-23 16:43:14.491021: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcurand.so.10.0\r\n2019-06-23 16:43:14.492128: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcusolver.so.10.0\r\n2019-06-23 16:43:14.492925: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcusparse.so.10.0\r\n2019-06-23 16:43:14.495343: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcudnn.so.7\r\n2019-06-23 16:43:14.495434: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2019-06-23 16:43:14.496021: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2019-06-23 16:43:14.496618: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1763] Adding visible gpu devices: 0\r\n2019-06-23 16:43:14.496643: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcudart.so.10.0\r\n2019-06-23 16:43:14.497582: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1181] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2019-06-23 16:43:14.497605: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1187]      0\r\n2019-06-23 16:43:14.497611: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1200] 0:   N\r\n2019-06-23 16:43:14.497943: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2019-06-23 16:43:14.498448: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2019-06-23 16:43:14.499348: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1326] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 9874 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1080 Ti, pci bus id: 0000:01:00.0, compute capability: 6.1)\r\nW0623 16:43:14.499919 139631312512832 deprecation_wrapper.py:119] From mnist_tutorial_keras.py:62: The name tf.keras.backend.set_session is deprecated. Please use tf.compat.v1.keras.backend.set_session instead.\r\n\r\nW0623 16:43:15.135281 139631312512832 deprecation.py:506] From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/init_ops.py:1251: calling VarianceScaling.__init__ (from tensorflow.python.ops.init_ops) with dtype is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nCall initializer instance with the dtype argument instead of passing it to the constructor\r\nDefined Keras model.\r\n/usr/local/lib/python3.6/dist-packages/cleverhans/attacks_tf.py:27: UserWarning: attacks_tf is deprecated and will be removed on 2019-07-18 or after. Code should import functions from their new locations directly.\r\n  warnings.warn(\"attacks_tf is deprecated and will be removed on 2019-07-18\"\r\n/usr/local/lib/python3.6/dist-packages/cleverhans/compat.py:22: UserWarning: <function reduce_max_v1 at 0x7efe1db7eae8> is deprecated. Switch to calling the equivalent function in tensorflow.  This function was originally needed as a compatibility layer for old versions of tensorflow,  but support for those versions has now been dropped.\r\n  warnings.warn(str(f) + \" is deprecated. Switch to calling the equivalent function in tensorflow. \"\r\nW0623 16:43:15.265496 139631312512832 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/cleverhans/attacks/attack.py:280: to_float (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nUse `tf.cast` instead.\r\nTraceback (most recent call last):\r\n  File \"mnist_tutorial_keras.py\", line 218, in <module>\r\n    tf.app.run()\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py\", line 40, in run\r\n    _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef)\r\n  File \"/usr/local/lib/python3.6/dist-packages/absl/app.py\", line 300, in run\r\n    _run_main(main, args)\r\n  File \"/usr/local/lib/python3.6/dist-packages/absl/app.py\", line 251, in _run_main\r\n    sys.exit(main(argv))\r\n  File \"mnist_tutorial_keras.py\", line 209, in main\r\n    learning_rate=FLAGS.learning_rate)\r\n  File \"mnist_tutorial_keras.py\", line 98, in mnist_tutorial\r\n    metrics=['accuracy', adv_acc_metric]\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/training/tracking/base.py\", line 457, in _method_wrapper\r\n    result = method(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py\", line 330, in compile\r\n    masks=self._prepare_output_masks())\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py\", line 2170, in _handle_metrics\r\n    target, output, output_mask))\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py\", line 2118, in _handle_per_output_metrics\r\n    mask)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py\", line 2094, in _call_metric_fn\r\n    strategy=self._distribution_strategy)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/distribute/distributed_training_utils.py\", line 1054, in call_replica_local_fn\r\n    return fn(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training_utils.py\", line 873, in call_metric_function\r\n    return metric_fn(y_true, y_pred, sample_weight=weights)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/metrics.py\", line 170, in __call__\r\n    update_op = self.update_state(*args, **kwargs)  # pylint: disable=not-callable\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/utils/metrics_utils.py\", line 73, in decorated\r\n    update_op = update_state_fn(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/metrics.py\", line 549, in update_state\r\n    matches = self._fn(y_true, y_pred, **self._fn_kwargs)\r\n  File \"mnist_tutorial_keras.py\", line 173, in adv_acc\r\n    x_adv = fgsm.generate(model.input, **fgsm_params)\r\n  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/attacks/fast_gradient_method.py\", line 54, in generate\r\n    self.model.get_logits(x),\r\n  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/utils_keras.py\", line 168, in get_logits\r\n    logits_name = self._get_logits_name()\r\n  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/utils_keras.py\", line 159, in _get_logits_name\r\n    logits_name = node.inbound_layers[0].name\r\nTypeError: 'Dense' object does not support indexing\r\n```\r\nHere is full log message[my solution]\r\n```\r\nroot@e343e314748e:/# python mnist_tutorial_keras.py\r\nWARNING: Logging before flag parsing goes to stderr.\r\nW0623 16:40:13.330367 140509461501760 deprecation_wrapper.py:119] From /usr/local/lib/python3.6/dist-packages/cleverhans/utils_tf.py:345: The name tf.GraphKeys is deprecated. Please use tf.compat.v1.GraphKeys instead.\r\n\r\nW0623 16:40:13.336122 140509461501760 deprecation_wrapper.py:119] From mnist_tutorial_keras.py:218: The name tf.app.run is deprecated. Please use tf.compat.v1.app.run instead.\r\n\r\n/usr/local/lib/python3.6/dist-packages/cleverhans_tutorials/__init__.py:24: UserWarning: It appears that you have at least two versions of cleverhans installed, one at / and one at /usr/local/lib/python3.6/dist-packages. You are running the tutorial script from the former but python imported the library module from the latter. This may cause errors, for example if the tutorial version is newer than the library version and attempts to call new features.\r\n  \" call new features.\" % (cur_dir, ch_dir))\r\nW0623 16:40:13.336828 140509461501760 deprecation_wrapper.py:119] From mnist_tutorial_keras.py:52: The name tf.set_random_seed is deprecated. Please use tf.compat.v1.set_random_seed instead.\r\n\r\nW0623 16:40:13.346027 140509461501760 deprecation_wrapper.py:119] From mnist_tutorial_keras.py:54: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.\r\n\r\nW0623 16:40:13.346190 140509461501760 deprecation_wrapper.py:119] From mnist_tutorial_keras.py:61: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.\r\n\r\n2019-06-23 16:40:13.346500: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\r\n2019-06-23 16:40:13.350280: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcuda.so.1\r\n2019-06-23 16:40:13.440248: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2019-06-23 16:40:13.440868: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x513c010 executing computations on platform CUDA. Devices:\r\n2019-06-23 16:40:13.440882: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): GeForce GTX 1080 Ti, Compute Capability 6.1\r\n2019-06-23 16:40:13.459674: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 3600000000 Hz\r\n2019-06-23 16:40:13.460792: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x5524dc0 executing computations on platform Host. Devices:\r\n2019-06-23 16:40:13.460846: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>\r\n2019-06-23 16:40:13.461115: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2019-06-23 16:40:13.462126: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1640] Found device 0 with properties:\r\nname: GeForce GTX 1080 Ti major: 6 minor: 1 memoryClockRate(GHz): 1.607\r\npciBusID: 0000:01:00.0\r\n2019-06-23 16:40:13.462469: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcudart.so.10.0\r\n2019-06-23 16:40:13.464522: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcublas.so.10.0\r\n2019-06-23 16:40:13.466175: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcufft.so.10.0\r\n2019-06-23 16:40:13.466609: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcurand.so.10.0\r\n2019-06-23 16:40:13.469002: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcusolver.so.10.0\r\n2019-06-23 16:40:13.470760: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcusparse.so.10.0\r\n2019-06-23 16:40:13.474913: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcudnn.so.7\r\n2019-06-23 16:40:13.475036: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2019-06-23 16:40:13.475852: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2019-06-23 16:40:13.476525: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1763] Adding visible gpu devices: 0\r\n2019-06-23 16:40:13.476564: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcudart.so.10.0\r\n2019-06-23 16:40:13.478519: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1181] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2019-06-23 16:40:13.478541: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1187]      0\r\n2019-06-23 16:40:13.478549: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1200] 0:   N\r\n2019-06-23 16:40:13.479008: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2019-06-23 16:40:13.479747: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1005] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2019-06-23 16:40:13.480443: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1326] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 9874 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1080 Ti, pci bus id: 0000:01:00.0, compute capability: 6.1)\r\nW0623 16:40:13.481046 140509461501760 deprecation_wrapper.py:119] From mnist_tutorial_keras.py:62: The name tf.keras.backend.set_session is deprecated. Please use tf.compat.v1.keras.backend.set_session instead.\r\n\r\nW0623 16:40:21.181846 140509461501760 deprecation.py:506] From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/init_ops.py:1251: calling VarianceScaling.__init__ (from tensorflow.python.ops.init_ops) with dtype is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nCall initializer instance with the dtype argument instead of passing it to the constructor\r\nDefined Keras model.\r\n/usr/local/lib/python3.6/dist-packages/cleverhans/attacks_tf.py:27: UserWarning: attacks_tf is deprecated and will be removed on 2019-07-18 or after. Code should import functions from their new locations directly.\r\n  warnings.warn(\"attacks_tf is deprecated and will be removed on 2019-07-18\"\r\n/usr/local/lib/python3.6/dist-packages/cleverhans/compat.py:22: UserWarning: <function reduce_max_v1 at 0x7fca937a1ae8> is deprecated. Switch to calling the equivalent function in tensorflow.  This function was originally needed as a compatibility layer for old versions of tensorflow,  but support for those versions has now been dropped.\r\n  warnings.warn(str(f) + \" is deprecated. Switch to calling the equivalent function in tensorflow. \"\r\nW0623 16:40:21.315337 140509461501760 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/cleverhans/attacks/attack.py:280: to_float (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nUse `tf.cast` instead.\r\nW0623 16:40:21.333926 140509461501760 deprecation_wrapper.py:119] From /usr/local/lib/python3.6/dist-packages/cleverhans/utils_tf.py:749: The name tf.assert_greater_equal is deprecated. Please use tf.compat.v1.assert_greater_equal instead.\r\n\r\n/usr/local/lib/python3.6/dist-packages/cleverhans/compat.py:22: UserWarning: <function reduce_sum_v1 at 0x7fca9379ebf8> is deprecated. Switch to calling the equivalent function in tensorflow.  This function was originally needed as a compatibility layer for old versions of tensorflow,  but support for those versions has now been dropped.\r\n  warnings.warn(str(f) + \" is deprecated. Switch to calling the equivalent function in tensorflow. \"\r\nW0623 16:40:21.357100 140509461501760 deprecation.py:506] From /usr/local/lib/python3.6/dist-packages/cleverhans/compat.py:79: calling softmax_cross_entropy_with_logits_v2_helper (from tensorflow.python.ops.nn_ops) with dim is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\ndim is deprecated, use axis instead\r\nTrain on 60000 samples, validate on 10000 samples\r\nEpoch 1/6\r\n2019-06-23 16:40:22.592598: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.\r\n2019-06-23 16:40:22.602650: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcublas.so.10.0\r\n2019-06-23 16:40:22.774098: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcudnn.so.7\r\n60000/60000 - 6s - loss: 0.6502 - acc: 0.9581 - adv_acc: 0.0342 - val_loss: 0.1435 - val_acc: 0.9890 - val_adv_acc: 0.0278\r\nEpoch 2/6\r\n60000/60000 - 4s - loss: 0.5470 - acc: 0.9906 - adv_acc: 0.0282 - val_loss: 0.1251 - val_acc: 0.9924 - val_adv_acc: 0.0307\r\nEpoch 3/6\r\n60000/60000 - 4s - loss: 0.5320 - acc: 0.9947 - adv_acc: 0.0293 - val_loss: 0.1316 - val_acc: 0.9919 - val_adv_acc: 0.0485\r\nEpoch 4/6\r\n60000/60000 - 5s - loss: 0.5240 - acc: 0.9966 - adv_acc: 0.0365 - val_loss: 0.1250 - val_acc: 0.9901 - val_adv_acc: 0.0481\r\nEpoch 5/6\r\n60000/60000 - 4s - loss: 0.5180 - acc: 0.9981 - adv_acc: 0.0503 - val_loss: 0.1200 - val_acc: 0.9936 - val_adv_acc: 0.0631\r\nEpoch 6/6\r\n60000/60000 - 5s - loss: 0.5139 - acc: 0.9990 - adv_acc: 0.0615 - val_loss: 0.1126 - val_acc: 0.9933 - val_adv_acc: 0.0708\r\nTest accuracy on legitimate examples: 0.9933\r\nTest accuracy on adversarial examples: 0.0708\r\n\r\nRepeating the process, using adversarial training\r\n/usr/local/lib/python3.6/dist-packages/cleverhans/compat.py:22: UserWarning: <function reduce_max_v1 at 0x7fca937a1ae8> is deprecated. Switch to calling the equivalent function in tensorflow.  This function was originally needed as a compatibility layer for old versions of tensorflow,  but support for those versions has now been dropped.\r\n  warnings.warn(str(f) + \" is deprecated. Switch to calling the equivalent function in tensorflow. \"\r\n/usr/local/lib/python3.6/dist-packages/cleverhans/compat.py:22: UserWarning: <function reduce_sum_v1 at 0x7fca9379ebf8> is deprecated. Switch to calling the equivalent function in tensorflow.  This function was originally needed as a compatibility layer for old versions of tensorflow,  but support for those versions has now been dropped.\r\n  warnings.warn(str(f) + \" is deprecated. Switch to calling the equivalent function in tensorflow. \"\r\n/usr/local/lib/python3.6/dist-packages/cleverhans/compat.py:22: UserWarning: <function reduce_max_v1 at 0x7fca937a1ae8> is deprecated. Switch to calling the equivalent function in tensorflow.  This function was originally needed as a compatibility layer for old versions of tensorflow,  but support for those versions has now been dropped.\r\n  warnings.warn(str(f) + \" is deprecated. Switch to calling the equivalent function in tensorflow. \"\r\n/usr/local/lib/python3.6/dist-packages/cleverhans/compat.py:22: UserWarning: <function reduce_sum_v1 at 0x7fca9379ebf8> is deprecated. Switch to calling the equivalent function in tensorflow.  This function was originally needed as a compatibility layer for old versions of tensorflow,  but support for those versions has now been dropped.\r\n  warnings.warn(str(f) + \" is deprecated. Switch to calling the equivalent function in tensorflow. \"\r\nTrain on 60000 samples, validate on 10000 samples\r\nEpoch 1/6\r\n60000/60000 - 8s - loss: 0.9453 - acc: 0.9453 - adv_acc: 0.6864 - val_loss: 0.3397 - val_acc: 0.9842 - val_adv_acc: 0.8329\r\nEpoch 2/6\r\n60000/60000 - 7s - loss: 0.6868 - acc: 0.9825 - adv_acc: 0.8648 - val_loss: 0.2764 - val_acc: 0.9867 - val_adv_acc: 0.8664\r\nEpoch 3/6\r\n60000/60000 - 7s - loss: 0.6490 - acc: 0.9874 - adv_acc: 0.8865 - val_loss: 0.2491 - val_acc: 0.9880 - val_adv_acc: 0.8979\r\nEpoch 4/6\r\n60000/60000 - 7s - loss: 0.6207 - acc: 0.9902 - adv_acc: 0.9060 - val_loss: 0.2219 - val_acc: 0.9905 - val_adv_acc: 0.9066\r\nEpoch 5/6\r\n60000/60000 - 7s - loss: 0.6030 - acc: 0.9920 - adv_acc: 0.9216 - val_loss: 0.2069 - val_acc: 0.9892 - val_adv_acc: 0.9160\r\nEpoch 6/6\r\n60000/60000 - 7s - loss: 0.5901 - acc: 0.9933 - adv_acc: 0.9311 - val_loss: 0.2074 - val_acc: 0.9905 - val_adv_acc: 0.9086\r\nTest accuracy on legitimate examples: 0.9905\r\nTest accuracy on adversarial examples: 0.9086\r\n\r\n\r\n```\r\n The model you mentioned is `mnist_tutorial_keras.py` or that in my testing code?  I propose to replace falconn with faiss. It speeds up an index construction as well as a search.\r\nThere's no mentioning of falconn in Docker file nor in .sh script related.\r\nI'm using the following to install faiss with gpu speed up on Ubuntu container with Conda.\r\n```bash\r\nconda install -c pytorch faiss-gpu\r\n```\r\nI've disabled random samples shuffling upon the index construction in faiss.\r\nBut multiple runs for me given different **dknn_preds**.\r\nIs it supposed to be deterministic?\r\nI can't check it with falconn since it's too slow. Yeah, sure. Here is the output of multiple runs of dknn_tutorial with\r\n  lsh_backend: FAISS\r\n  number_bits: 64\r\n```\r\n1.\r\n\r\n(9250, 10)                                                                                                                             \r\n0.9742702702702702                                                                                                                                                                                                                                                            \r\nSaving reliability diagram at: /tmp/dknn_test.pdf                                                                                                                                                                                                                             \r\n(9250,) (9250,)                                                                                                                                                                                                                                                               \r\n[0.7891816920943134, 0.9473684210526315, 0.9841269841269841, 0.9921798631476051, 0.992822966507177, 0.9989868287740629, 1.0, 0.9987293519695044, 1.0, 1.0]                                                                                                                    \r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]                                                                                                                                                                                                                  \r\n[721, 1007, 1071, 1023, 836, 987, 890, 787, 955, 973]                                                                                                                                                                                                                         \r\n9250                                                                                                                                                                                                                                                                          \r\n(9250, 10)                                                                                                                                                                                                                                                                    \r\n0.24010810810810812                                                                                                                                                                                                                                                           \r\nSaving reliability diagram at: /tmp/dknn_adv.pdf                                                                                                                                                                                                                              \r\n(9250,) (9250,)                                                                                                                                                                                                                                                               \r\n[0.19800498753117207, 0.24965197215777263, 0.2377963737796374, 0.2912621359223301, 0.2860824742268041, 0.41605839416058393, 0.43790849673202614, 0.39361702127659576, 0.36633663366336633, 0.08695652173913043]                                                               \r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]                                                                                                                                                                                                                  \r\n[4010, 2155, 1434, 618, 388, 274, 153, 94, 101, 23]\r\n9250\r\n\r\n2.\r\n(9250, 10)\r\n0.9712432432432433\r\nSaving reliability diagram at: /tmp/dknn_test.pdf\r\n(9250,) (9250,)\r\n[0.7699248120300752, 0.9310344827586207, 0.9861386138613861, 0.988056460369164, 0.9905123339658444, 0.99625, 0.9969666329625885, 1.0, 1.0, 1.0]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[665, 1044, 1010, 921, 1054, 800, 989, 814, 1059, 894]\r\n9250\r\n(9250, 10)\r\n0.20724324324324325\r\nSaving reliability diagram at: /tmp/dknn_adv.pdf\r\n(9250,) (9250,)\r\n[0.16778523489932887, 0.1879507848960543, 0.2251759186864738, 0.2509157509157509, 0.2660753880266075, 0.3191489361702128, 0.2916666666666667, 0.42105263157894735, 0.37583892617449666, 0.34782608695652173]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[3725, 2357, 1279, 546, 451, 282, 240, 152, 149, 69]\r\n9250\r\n\r\n3.\r\n(9250, 10)\r\n0.9704864864864865\r\nSaving reliability diagram at: /tmp/dknn_test.pdf\r\n(9250,) (9250,)\r\n[0.7744565217391305, 0.9344422700587084, 0.9823651452282157, 0.9885974914481186, 0.9950207468879668, 0.9957310565635006, 0.9987864077669902, 1.0, 0.9978991596638656, 1.0]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[736, 1022, 964, 877, 1205, 937, 824, 925, 952, 808]\r\n9250\r\n(9250, 10)\r\n0.22086486486486487\r\nSaving reliability diagram at: /tmp/dknn_adv.pdf\r\n(9250,) (9250,)\r\n[0.1705937794533459, 0.20517316966242877, 0.24709042076991944, 0.3304042179261863, 0.2962962962962963, 0.3632286995515695, 0.3732394366197183, 0.48214285714285715, 0.6052631578947368, 0.6296296296296297]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[4244, 2281, 1117, 569, 459, 223, 142, 112, 76, 27]\r\n9250\r\n\r\n4.\r\n(9250, 10)\r\n0.9726486486486486\r\nSaving reliability diagram at: /tmp/dknn_test.pdf\r\n(9250,) (9250,)\r\n[0.7360655737704918, 0.9472318339100346, 0.9815005138746146, 0.9922737306843267, 0.9954285714285714, 0.9988385598141696, 1.0, 0.9987966305655837, 1.0, 1.0]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[610, 1156, 973, 906, 875, 861, 1018, 831, 957, 1063]\r\n9250\r\n(9250, 10)\r\n0.21275675675675676\r\nSaving reliability diagram at: /tmp/dknn_adv.pdf\r\n(9250,) (9250,)\r\n[0.17803138373751784, 0.19968429360694553, 0.1963470319634703, 0.20314735336194564, 0.27111111111111114, 0.34576271186440677, 0.45535714285714285, 0.49137931034482757, 0.4842105263157895, 0.5]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[3505, 2534, 1314, 699, 450, 295, 224, 116, 95, 18]\r\n9250\r\n\r\n5.\r\n(9250, 10)\r\n0.9713513513513513\r\nSaving reliability diagram at: /tmp/dknn_test.pdf\r\n(9250,) (9250,)\r\n[0.7933673469387755, 0.9353876739562624, 0.9821605550049554, 0.9936775553213909, 0.9954389965792474, 0.9903381642512077, 0.9973992197659298, 1.0, 1.0, 1.0]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[784, 1006, 1009, 949, 877, 828, 769, 1128, 948, 952]\r\n9250\r\n(9250, 10)\r\n0.2427027027027027\r\nSaving reliability diagram at: /tmp/dknn_adv.pdf\r\n(9250,) (9250,)\r\n[0.21751896256422804, 0.2397935241670577, 0.2147458840372226, 0.26194690265486725, 0.33424657534246577, 0.336, 0.4476744186046512, 0.4166666666666667, 0.4166666666666667, 0.2903225806451613]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[4087, 2131, 1397, 565, 365, 250, 172, 168, 84, 31]\r\n9250\r\n\r\n6.\r\n(9250, 10)\r\n0.9695135135135136\r\nSaving reliability diagram at: /tmp/dknn_test.pdf\r\n(9250,) (9250,)\r\n[0.8133472367049009, 0.928150765606596, 0.9755813953488373, 0.9896421845574388, 0.995945945945946, 0.9971428571428571, 0.9947229551451188, 0.9991721854304636, 1.0, 1.0]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[959, 849, 860, 1062, 740, 700, 758, 1208, 1166, 948]\r\n9250\r\n(9250, 10)\r\n0.25113513513513513\r\nSaving reliability diagram at: /tmp/dknn_adv.pdf\r\n(9250,) (9250,)\r\n[0.20701592430186938, 0.23297297297297298, 0.2720465890183028, 0.3031161473087819, 0.3413333333333333, 0.3561643835616438, 0.35784313725490197, 0.5049019607843137, 0.49056603773584906, 0.39215686274509803]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[4333, 1850, 1202, 706, 375, 219, 204, 204, 106, 51]\r\n9250\r\n\r\n``` > Regarding the non-deterministic results on FAISS, I have never used the library so I can't really comment on that\r\n\r\nCould you please provide multiple runs output with falconn?\r\nJust to compare. > The code I've been using is the one you are editing in this example\r\n\r\nHow many cores are needed for falconn to perform reasonably well?\r\nWith 2x2.4 GHz it takes 20 minutes or more per run. I think in couple hours I'll provide falconn runs as well here. Muliple runs of dknn_tutorial with falconn lsh backend.\r\nFLAGS have default values, those are\r\n  lsh_backend: falconn\r\n  number_bits: 17\r\n  nb_tables: 200\r\n  etc\r\n```\r\n1.\r\n(9250, 10)                                                         \r\n0.9872432432432432                                                                                                                     \r\nSaving reliability diagram at: /tmp/dknn_test.pdf \r\n(9250,) (9250,)                                                    \r\n[0.7611940298507462, 0.958974358974359, 0.9789915966386554, 0.9914163090128756, 0.9920948616600791, 0.9924433249370277, 0.9973684210526316, 1.0, 0.9954954954954955, 1.0]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]       \r\n[335, 390, 476, 466, 253, 397, 380, 306, 444, 5803]                \r\n9250                                                               \r\n(9250, 10)                                                         \r\n0.32075675675675674                                                \r\nSaving reliability diagram at: /tmp/dknn_adv.pdf                   \r\n(9250,) (9250,)                                                    \r\n[0.2983072500798467, 0.20353356890459365, 0.2904929577464789, 0.4346153846153846, 0.5346534653465347, 0.5631067961165048, 0.6071428571428571, 0.6, 0.8059701492537313, 0.8664495114006515]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[6262, 1415, 568, 260, 101, 103, 112, 55, 67, 307]\r\n9250\r\n\r\n2.\r\n(9250, 10)                                                                                                                             \r\n0.9876756756756757                                                 \r\nSaving reliability diagram at: /tmp/dknn_test.pdf                                                                                      \r\n(9250,) (9250,)                                                    \r\n[0.7816091954022989, 0.9612244897959183, 0.9769230769230769, 0.9856115107913669, 0.9948979591836735, 1.0, 1.0, 0.9961240310077519, 1.0, 0.9998292349726776]                                                                                                                   \r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]                                                                                                                                                                                                                  \r\n[348, 490, 390, 417, 392, 275, 380, 258, 444, 5856]                                                                                                                                                                                                                           \r\n9250                                                               \r\n(9250, 10)                                                         \r\n0.3067027027027027                                                 \r\nSaving reliability diagram at: /tmp/dknn_adv.pdf                   \r\n(9250,) (9250,)                                                                                                                        \r\n[0.3065626434144103, 0.21056149732620322, 0.26695842450765866, 0.39545454545454545, 0.4090909090909091, 0.4375, 0.5, 0.55, 0.6595744680851063, 0.7486338797814208]                                                                                                            \r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]                                                                           \r\n[6537, 1496, 457, 220, 132, 64, 74, 40, 47, 183]                                                                                                                                                                                                                              \r\n9250\r\n\r\n3.\r\n(9250, 10)                                                         \r\n0.9887567567567568                                                 \r\nSaving reliability diagram at: /tmp/dknn_test.pdf                  \r\n(9250,) (9250,)                                                    \r\n[0.8126888217522659, 0.9534883720930233, 0.9686800894854586, 0.9871794871794872, 0.9939577039274925, 0.9971988795518207, 1.0, 1.0, 1.0, 1.0]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]                                                                                                                                                                                                                  \r\n[331, 430, 447, 390, 331, 357, 403, 293, 405, 5863]                                                                                    \r\n9250                                                                                                                                                                                                                                                                          \r\n(9250, 10)                                                                                                                             \r\n0.33254054054054055                                                                                                                                                                                                                                                           \r\nSaving reliability diagram at: /tmp/dknn_adv.pdf                                                                                       \r\n(9250,) (9250,)                                                                                                                        \r\n[0.3140144073346431, 0.21556122448979592, 0.30985915492957744, 0.4349775784753363, 0.5135135135135135, 0.6287878787878788, 0.6448598130841121, 0.5769230769230769, 0.8125, 0.8484848484848485]                                                                                \r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]                                                                           \r\n[6108, 1568, 568, 223, 148, 132, 107, 52, 80, 264]                                                                                     \r\n9250\r\n\r\n4.\r\n(9250, 10)                                                                                                                                                                                                                                                                    \r\n0.9878918918918919                                                                                                                     \r\nSaving reliability diagram at: /tmp/dknn_test.pdf                                                                                                                                                                                                                             \r\n(9250,) (9250,)                                                                                                                        \r\n[0.75625, 0.9684684684684685, 0.9767441860465116, 0.9877049180327869, 0.9883720930232558, 0.9972451790633609, 1.0, 1.0, 0.9977064220183486, 1.0]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]                                                                                                                                                                                                                  \r\n[320, 444, 344, 488, 344, 363, 398, 287, 436, 5826]                                                                                    \r\n9250                                                                                                                                   \r\n(9250, 10)                                                                                                                             \r\n0.3516756756756757                                                 \r\nSaving reliability diagram at: /tmp/dknn_adv.pdf                                                                                       \r\n(9250,) (9250,)                                                                                                                        \r\n[0.35621128138245844, 0.23251643753735804, 0.26153846153846155, 0.2916666666666667, 0.4049586776859504, 0.43820224719101125, 0.6052631578947368, 0.5111111111111111, 0.7407407407407407, 0.8857142857142857]                                                                  \r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]                                                                           \r\n[6134, 1673, 455, 288, 121, 89, 76, 45, 54, 315]                                                                                       \r\n9250  \r\n\r\n5.\r\n(9250, 10)                                                                                                                             \r\n0.988                                                                                                                                  \r\nSaving reliability diagram at: /tmp/dknn_test.pdf                  \r\n(9250,) (9250,)                                                                                                                        \r\n[0.7923976608187134, 0.9465478841870824, 0.9844357976653697, 0.9770773638968482, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]                         \r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]                                                                                                                                                                                                                  \r\n[342, 449, 514, 349, 366, 258, 383, 294, 462, 5833]                                                                                    \r\n9250                                                                                                                                   \r\n(9250, 10)                                                                                                                             \r\n0.32497297297297295                                                \r\nSaving reliability diagram at: /tmp/dknn_adv.pdf                                                                                       \r\n(9250,) (9250,)                                                                                                                        \r\n[0.33488971180164223, 0.1894167167769092, 0.2736842105263158, 0.35353535353535354, 0.3951612903225806, 0.5517241379310345, 0.4823529411764706, 0.5909090909090909, 0.5111111111111111, 0.8492063492063492]                                                                    \r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]                                                                                                                                                                                                                  \r\n[6211, 1663, 570, 198, 124, 58, 85, 44, 45, 252]                                                                                       \r\n9250                                             \r\n\r\n6.\r\n(9250, 10)                                                                                                                             \r\n0.988                                                                                                                                  \r\nSaving reliability diagram at: /tmp/dknn_test.pdf                  \r\n(9250,) (9250,)                                                                                                                        \r\n[0.7850746268656716, 0.9553990610328639, 0.9763948497854077, 0.9879518072289156, 0.9963636363636363, 0.9945205479452055, 1.0, 1.0, 1.0, 0.9998297292695386]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]                                                                                                                                                                                                                  \r\n[335, 426, 466, 415, 275, 365, 397, 262, 436, 5873]                                                                                                                                                                                                                           \r\n9250                                                                                                                                                                                                                                                                          \r\n(9250, 10)                                                                                                                             \r\n0.3348108108108108                                                 \r\nSaving reliability diagram at: /tmp/dknn_adv.pdf                                                                                       \r\n(9250,) (9250,)                                                                                                                        \r\n[0.3203498927215712, 0.21857585139318886, 0.3190789473684211, 0.396, 0.46534653465346537, 0.5164835164835165, 0.5632183908045977, 0.6486486486486487, 0.7, 0.875]                                                                                                             \r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]                                                                                                                                                                                                                  \r\n[6059, 1615, 608, 250, 101, 91, 87, 37, 50, 352]                                                                                       \r\n9250             \r\n\r\n7.\r\n(9250, 10)                                                                                                                             \r\n0.9869189189189189                                                                                                                     \r\nSaving reliability diagram at: /tmp/dknn_test.pdf                                                                                      \r\n(9250,) (9250,)                                                                                                                        \r\n[0.7507418397626113, 0.9566265060240964, 0.970703125, 0.9938837920489296, 0.9939393939393939, 1.0, 1.0, 1.0, 1.0, 1.0]                 \r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]                                                                                                                                                                                                                  \r\n[337, 415, 512, 327, 330, 396, 421, 297, 437, 5778]                                                                                    \r\n9250                                                                                                                                   \r\n(9250, 10)                                                                                                                             \r\n0.2690810810810811                                                 \r\nSaving reliability diagram at: /tmp/dknn_adv.pdf                                                                                       \r\n(9250,) (9250,)                                                                                                                                                                                                                                                               \r\n[0.26541341405129837, 0.17516902274124155, 0.2545126353790614, 0.2541436464088398, 0.38028169014084506, 0.41904761904761906, 0.5, 0.627906976744186, 0.6122448979591837, 0.7970297029702971]                                                                                  \r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]                                                                                                                                                                                                                  \r\n[6277, 1627, 554, 181, 142, 105, 70, 43, 49, 202]                                                                                      \r\n9250             \r\n``` I've switched to an exact nearest neighbor in faiss. It's GPU version requires more than 8GiB of memory. A tensorflow session creation was tuned to allocate a limited part of GPU memory. The output seems to be comparable to FALCONN's one.\r\nP.S. It's turned out that LSH has a low accuracy. I don't know how to tune it. There's a train_threshold parameter, maybe it controls the quality of LSH search index in the faiss.\r\n\r\n```python\r\nfor k in range(8): \r\n    assert os.system(r\"\"\"\r\n        python cleverhans/model_zoo/deep_k_nearest_neighbors/dknn.py \\\r\n            --lsh_backend 'FAISS' > log_%d.txt 2>&1\r\n    \"\"\" % k) == 0\r\n```\r\n\r\n```\r\n1.                              \r\n(9250, 10)                                              \r\n0.9863783783783784                                      \r\nSaving reliability diagram at: /tmp/dknn_test.pdf                                                                                                                                                                                                                             \r\n(9250,) (9250,)                                                                                                 \r\n[0.7294117647058823, 0.9655870445344129, 0.9726775956284153, 0.9908883826879271, 0.9917127071823204, 1.0, 1.0, 1.0, 1.0, 1.0]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]                                                                           \r\n[340, 494, 366, 439, 362, 254, 409, 267, 460, 5859]\r\n9250                                                                                                            \r\n(9250, 10)                                              \r\n0.33037837837837836                                     \r\nSaving reliability diagram at: /tmp/dknn_adv.pdf                                                                                       \r\n(9250,) (9250,)                                                                                                 \r\n[0.32244833569963716, 0.19945909398242057, 0.2647058823529412, 0.3697478991596639, 0.4084507042253521, 0.39705882352941174, 0.5161290322580645, 0.4528301886792453, 0.7951807228915663, 0.8587896253602305]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]                                                                           \r\n[6339, 1479, 408, 238, 142, 68, 93, 53, 83, 347]                   \r\n9250              \r\n\r\n2.\r\n(9250, 10)\r\n0.9882162162162162\r\nSaving reliability diagram at: /tmp/dknn_test.pdf\r\n(9250,) (9250,)\r\n[0.7837837837837838, 0.9467592592592593, 0.984251968503937, 0.9837962962962963, 1.0, 1.0, 0.9975062344139651, 1.0, 1.0, 1.0]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[333, 432, 381, 432, 282, 375, 401, 291, 446, 5877]\r\n9250\r\n(9250, 10)\r\n0.35924324324324325\r\nSaving reliability diagram at: /tmp/dknn_adv.pdf\r\n(9250,) (9250,)\r\n[0.37477711136326797, 0.1838774150566289, 0.21951219512195122, 0.32459016393442625, 0.4336283185840708, 0.47368421052631576, 0.4945054945054945, 0.6382978723404256, 0.7142857142857143, 0.856353591160221]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[6169, 1501, 492, 305, 113, 114, 91, 47, 56, 362]\r\n9250\r\n\r\n3.\r\n(9250, 10)\r\n0.9873513513513513\r\nSaving reliability diagram at: /tmp/dknn_test.pdf\r\n(9250,) (9250,)\r\n[0.7546583850931677, 0.9561200923787528, 0.9791183294663574, 0.9855072463768116, 0.9961832061068703, 1.0, 0.9948979591836735, 1.0, 0.9977324263038548, 1.0]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[322, 433, 431, 414, 262, 373, 392, 284, 441, 5898]\r\n9250\r\n(9250, 10)\r\n0.3695135135135135\r\nSaving reliability diagram at: /tmp/dknn_adv.pdf\r\n(9250,) (9250,)\r\n[0.3529616724738676, 0.29640371229698376, 0.3738738738738739, 0.43130990415335463, 0.44525547445255476, 0.5724137931034483, 0.5299145299145299, 0.6417910447761194, 0.6086956521739131, 0.7573529411764706]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[5740, 1724, 666, 313, 137, 145, 117, 67, 69, 272]\r\n9250\r\n\r\n4.\r\n(9250, 10)\r\n0.9873513513513513\r\nSaving reliability diagram at: /tmp/dknn_test.pdf\r\n(9250,) (9250,)\r\n[0.7696629213483146, 0.9521640091116174, 0.9843342036553525, 0.9877450980392157, 0.9975124378109452, 0.99581589958159, 1.0, 0.9964788732394366, 1.0, 1.0]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[356, 439, 383, 408, 402, 239, 391, 284, 421, 5927]\r\n9250\r\n(9250, 10)\r\n0.33513513513513515\r\nSaving reliability diagram at: /tmp/dknn_adv.pdf\r\n(9250,) (9250,)\r\n[0.33338516560410514, 0.20697498104624715, 0.23673469387755103, 0.2907488986784141, 0.39490445859872614, 0.4457831325301205, 0.5584415584415584, 0.4782608695652174, 0.5, 0.8527777777777777]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[6431, 1319, 490, 227, 157, 83, 77, 46, 60, 360]\r\n9250\r\n\r\n5.\r\n(9250, 10)\r\n0.9883243243243244\r\nSaving reliability diagram at: /tmp/dknn_test.pdf\r\n(9250,) (9250,)\r\n[0.7850746268656716, 0.9562363238512035, 0.9764150943396226, 0.9923076923076923, 0.995, 0.9977728285077951, 1.0, 1.0, 1.0, 1.0]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[335, 457, 424, 390, 400, 449, 226, 281, 471, 5817]\r\n9250\r\n(9250, 10)\r\n0.3318918918918919\r\nSaving reliability diagram at: /tmp/dknn_adv.pdf\r\n(9250,) (9250,)\r\n[0.3338509316770186, 0.16188373804267844, 0.23110151187904968, 0.26842105263157895, 0.3825503355704698, 0.5333333333333333, 0.6538461538461539, 0.5818181818181818, 0.7682926829268293, 0.8588235294117647]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[6440, 1359, 463, 190, 149, 120, 52, 55, 82, 340]\r\n9250\r\n\r\n6.\r\n(9250, 10)\r\n0.9876756756756757\r\nSaving reliability diagram at: /tmp/dknn_test.pdf\r\n(9250,) (9250,)\r\n[0.7482758620689656, 0.9551569506726457, 0.9798994974874372, 0.9803921568627451, 0.9923954372623575, 0.9946524064171123, 1.0, 1.0, 1.0, 1.0]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[290, 446, 398, 459, 263, 374, 400, 267, 456, 5897]\r\n9250\r\n(9250, 10)\r\n0.30854054054054053\r\nSaving reliability diagram at: /tmp/dknn_adv.pdf\r\n(9250,) (9250,)\r\n[0.3331628303495311, 0.1862539349422875, 0.19710669077757687, 0.2682119205298013, 0.37362637362637363, 0.328, 0.5116279069767442, 0.5384615384615384, 0.5849056603773585, 0.8]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[5865, 1906, 553, 302, 91, 125, 86, 39, 53, 230]\r\n9250\r\n\r\n7.\r\n(9250, 10)\r\n0.9877837837837837\r\nSaving reliability diagram at: /tmp/dknn_test.pdf\r\n(9250,) (9250,)\r\n[0.7760736196319018, 0.9482758620689655, 0.9714964370546318, 0.9951690821256038, 0.9926739926739927, 1.0, 1.0, 1.0, 1.0, 1.0]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[326, 464, 421, 414, 273, 388, 424, 278, 453, 5809]\r\n9250\r\n(9250, 10)\r\n0.3507027027027027\r\nSaving reliability diagram at: /tmp/dknn_adv.pdf\r\n(9250,) (9250,)\r\n[0.3339014828702915, 0.2171945701357466, 0.26294820717131473, 0.35947712418300654, 0.30578512396694213, 0.5135135135135135, 0.608, 0.515625, 0.7142857142857143, 0.8744855967078189]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[5867, 1547, 502, 306, 121, 148, 125, 64, 84, 486]\r\n9250\r\n\r\n8.\r\n(9250, 10)\r\n0.9872432432432432\r\nSaving reliability diagram at: /tmp/dknn_test.pdf\r\n(9250,) (9250,)\r\n[0.7530864197530864, 0.9533333333333334, 0.9799554565701559, 0.9932735426008968, 0.9896551724137931, 0.9977011494252873, 0.99581589958159, 1.0, 1.0, 1.0]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[324, 450, 449, 446, 290, 435, 239, 287, 452, 5878]\r\n9250\r\n(9250, 10)\r\n0.33816216216216216\r\nSaving reliability diagram at: /tmp/dknn_adv.pdf\r\n(9250,) (9250,)\r\n[0.34120778572616867, 0.21046373365041618, 0.30354131534569984, 0.3539518900343643, 0.48872180451127817, 0.5238095238095238, 0.5813953488372093, 0.7037037037037037, 0.6417910447761194, 0.812]\r\n[0.05, 0.15, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 0.85, 0.95]\r\n[6011, 1682, 593, 291, 133, 126, 43, 54, 67, 250]\r\n9250                                                 \r\n``` So there's good news and bad news.\n\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\n:confused: The bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter.  We need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that here in the pull request.\n\n*Note to project maintainer: This is a terminal state, meaning the `cla/google` commit status will not change from this state. It's up to you to confirm consent of all the commit author(s), set the `cla` label to `yes` (if enabled on your project), and then merge this pull request when appropriate.*\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Fcleverhans%2Fpull%2F1073) for more info**.\n\n<!-- need_author_consent --> Cool, no more questions left then? Just wait for the travis script? @npapernot Do you know any practical application of dknn for big enough models?    \r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nNo\r\n\r\n**Describe the solution you'd like**\r\nI would like to see this approach implemented:\r\nhttps://arxiv.org/pdf/1312.6199.pdf\r\nI believe this is a precursor to the GAN approach?\r\n\r\n\r\n  Hi,\r\n\r\nI'm trying to do Saliency Map Method using cleverhans.\r\n\r\nMy model needs to be keras sequential so for that reason I've searched and found cleverhans.utils_keras, Sequential uses KerasModelWrapper. But for some reason I still get it should be cleverhans model. Here's the stacktrace\r\n\r\n> TypeError                                 Traceback (most recent call last)\r\n> <ipython-input-7-2594c5bd6bad> in <module>\r\n>       2 # https://github.com/tensorflow/cleverhans/blob/master/cleverhans/utils_keras.py\r\n>       3 \r\n> ----> 4 jsma = SaliencyMapMethod(model, sess=sess)\r\n>       5 jsma_params = {'theta': 10.0, 'gamma': 0.15,\r\n>       6                    'clip_min': 0., 'clip_max': 1.,\r\n> \r\n> c:\\users\\jeredriq\\appdata\\local\\programs\\python\\python35\\lib\\site-packages\\cleverhans\\attacks\\__init__.py in __init__(self, model, sess, dtypestr, **kwargs)\r\n>     911     \"\"\"\r\n>     912 \r\n> --> 913     super(SaliencyMapMethod, self).__init__(model, sess, dtypestr, **kwargs)\r\n>     914 \r\n>     915     self.feedable_kwargs = ('y_target',)\r\n> \r\n> c:\\users\\jeredriq\\appdata\\local\\programs\\python\\python35\\lib\\site-packages\\cleverhans\\attacks\\__init__.py in __init__(self, model, sess, dtypestr, **kwargs)\r\n>      55 \r\n>      56     if not isinstance(model, Model):\r\n> ---> 57       raise TypeError(\"The model argument should be an instance of\"\r\n>      58                       \" the cleverhans.model.Model class.\")\r\n>      59 \r\n> \r\n> TypeError: The model argument should be an instance of the cleverhans.model.Model class.\r\n\r\nAnd here's my code\r\n```\r\n\r\nimport numpy as np\r\nfrom keras import backend\r\nimport tensorflow as tf\r\nfrom keras.callbacks import ModelCheckpoint\r\nfrom matplotlib import gridspec\r\nfrom matplotlib import pyplot as plt\r\nfrom sklearn.metrics import confusion_matrix, classification_report\r\nfrom keras.datasets import mnist\r\nfrom keras.layers import Dense, Dropout\r\nfrom keras.layers import Flatten\r\nfrom keras.layers.convolutional import Conv2D\r\nfrom keras.layers.convolutional import MaxPooling2D\r\nfrom keras.utils import np_utils\r\nfrom cleverhans.attacks import FastGradientMethod\r\nfrom cleverhans.attacks import BasicIterativeMethod\r\nfrom cleverhans.attacks import SaliencyMapMethod\r\nfrom cleverhans.attacks import DeepFool\r\n\r\nfrom cleverhans.utils_keras import Sequential\r\n\r\n\r\nsess =  backend.get_session()\r\nx = tf.placeholder(tf.float32, shape=(None, 28, 28, 1))\r\ny = tf.placeholder(tf.float32, shape=(None, 10))\r\n# Managing Mnist\r\n(X_train, y_train), (X_test, y_test) = mnist.load_data()\r\nX_train = X_train.reshape(X_train.shape[0], 28, 28, 1)\r\nX_test = X_test.reshape(X_test.shape[0], 28, 28, 1)\r\nX_train = X_train.astype('float32')\r\nX_test = X_test.astype('float32')\r\nX_train/=255\r\nX_test/=255\r\ny_train_cat = np_utils.to_categorical(y_train)\r\ny_test_cat = np_utils.to_categorical(y_test)\r\nnum_classes = y_test_cat.shape[1]\r\n\r\n### Defining Model ###\r\n\r\nmodel = Sequential()      #  <-----  I use Sequential from CleverHans\r\n\r\nmodel.add(Conv2D(32, (5, 5), input_shape=(28,28,1), activation='relu'))\r\nmodel.add(MaxPooling2D(pool_size=(2,2)))\r\nmodel.add(Flatten())\r\nmodel.add(Dense(64, activation='relu'))\r\nmodel.add(Dense(num_classes, activation='softmax'))\r\nmodel.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])\r\nmodel.summary()\r\n\r\nhistory = model.fit(X_train, y_train_cat, epochs=10, batch_size=1024, verbose=1, validation_split=0.7)\r\n\r\n\r\n### And the problem part ###\r\n\r\njsma = SaliencyMapMethod(model, sess=sess)  # <---- Where I get the exception\r\n\r\njsma_params = {'theta': 10.0, 'gamma': 0.15,\r\n                   'clip_min': 0., 'clip_max': 1.,\r\n                   'y_target': None}\r\n\r\nsample_size = 20\r\none_hot_target = np.zeros((sample_size, 10), dtype=np.float32)\r\none_hot_target[:, 1] = 1\r\njsma_params['y_target'] = one_hot_target\r\n\r\nX_test_small = X_test[0:sample_size,:]\r\ny_test_small = y_test[0:sample_size]\r\n\r\nadv_x = jsma.generate_np(X_test_small, **jsma_params)\r\n``` Okay, I still needed to use KerasModelWrapper it seems. I'm not trying to be rude but may I ask why \r\n cleverhans.utils_keras exist? Then it does not really wrap sequential model because I've manually wrapped it \ud83d\ude03  Well, when I import Sequential from cleverhans instead of keras, I expect it to be ready-to-use. But utils_keras is just container for easy usage from cleverhans, i think? I'm suggesting Sequential and other Keras models should still stay in utils_keras.py but when they're called from utils_keras.py, they should already be wrapped with KerasModelWrapper for easier use because I dont believe anyone would call a keras model from cleverhans' utils_keras.py and use it without wrapping it with KerasModelWrapper.\r\n\r\nTo put it simply utils_keras should contain this:\r\n\r\n`Sequential = KerasModelWrapper(tf.keras.models.Sequential)`\r\n\r\n\r\nBut its just my opinion, you may have your reasons for keeping it the way it is.  ***The issue tracker should only be used to report bugs or feature requests. If you are looking for support from other library users, please ask a question on [StackOverflow](https://stackoverflow.com/questions/tagged/cleverhans).***\r\n\r\n**Describe the bug**\r\nAfter running through all the steps as outlined in the readme for \"FGSM against FaceNet\" I am still getting an error when running facenet_fgsm.py:\r\n\r\nI tried both models:\r\nmodel_path = \"models/facenet/20180402-114759/20180402-114759.pb\"\r\n  #model_path = \"models/facenet/20170512-110547/20170512-110547.pb\"\r\n\r\nThe newer model (2018) from https://github.com/davidsandberg/facenet/wiki/Validate-on-LFW tutorial gives the following error:\r\n\r\n.../content/cleverhans/cleverhans/attacks_tf.py:27: UserWarning: attacks_tf is deprecated and will be removed on 2019-07-18 or after. Code should import functions from their new locations directly.\r\n  warnings.warn(\"attacks_tf is deprecated and will be removed on 2019-07-18\"\r\nWARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/control_flow_ops.py:3632: colocate_with (from tensorflow.python.framework.ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nColocations handled automatically by placer.\r\n/content/cleverhans/cleverhans/compat.py:22: UserWarning: <function reduce_max_v1 at 0x7f16d353f510> is deprecated. Switch to calling the equivalent function in tensorflow.  This function was originally needed as a compatibility layer for old versions of tensorflow,  but support for those versions has now been dropped.\r\n  warnings.warn(str(f) + \" is deprecated. Switch to calling the equivalent function in tensorflow. \"\r\nWARNING:tensorflow:From /content/cleverhans/cleverhans/attacks/attack.py:280: to_float (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nUse tf.cast instead.\r\nTraceback (most recent call last):\r\n  File \"facenet_fgsm.py\", line 85, in <module>\r\n    adv_x = fgsm.generate(model.face_input, **fgsm_params)\r\n  File \"/content/cleverhans/cleverhans/attacks/fast_gradient_method.py\", line 54, in generate\r\n    self.model.get_logits(x),\r\n  File \"/content/cleverhans/cleverhans/model.py\", line 70, in get_logits\r\n    \" output in `fprop`\")\r\nNotImplementedError: <class '__main__.InceptionResnetV1Model'>must implement `get_logits` or must define a logits output in `fprop`\r\n\r\n\r\n\r\nThe older model path 2017 gives the following error in facenet_fgsm.py\r\n\r\nModel filename: models/facenet/20170512-110547/20170512-110547.pb\r\nWARNING:tensorflow:From /content/facenet/src/facenet.py:376: FastGFile.__init__ (from tensorflow.python.platform.gfile) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nUse tf.gfile.GFile.\r\nTraceback (most recent call last):\r\n  File \"facenet_fgsm.py\", line 62, in <module>\r\n    model = InceptionResnetV1Model()\r\n  File \"facenet_fgsm.py\", line 20, in __init__\r\n    facenet.load_model(self.model_path)\r\n  File \"/content/facenet/src/facenet.py\", line 378, in load_model\r\n    graph_def.ParseFromString(f.read())\r\ngoogle.protobuf.message.DecodeError: Error parsing message\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Just follow the directions in the FGSM against FaceNet example at https://github.com/tensorflow/cleverhans/tree/master/examples/facenet_adversarial_faces\r\n\r\n**Expected behavior**\r\nI expect it to work as I am following the examples as stated\r\n\r\n**System configuration**\r\n - OS - Running in Google Colab NAME=\"Ubuntu\" VERSION=\"18.04.2 LTS (Bionic Beaver)\"\r\n - Python version 3.6.7\r\n - TensorFlow version 1.13.1\r\n I was using the model from the Validate-on-LFW tutorial which recommended downloading the model from https://drive.google.com/open?id=1EXPBSXwTaqrSC0OhUdXNmKSh9qJUQ55-. \r\n\r\nI didn't realize that there was a model in CleaverHans.  \r\n\r\nThanks for responding to this on a Saturday.\r\n\r\nYou are AWESOME!!!\r\n\r\nRegards,\r\nAbe Ok, went through the files in cleverhans but could not find the *.pb models files for Facenet.\r\n\r\nWhen I first checked, he only place I could find the original model files referenced in facenet_fgsm.py was online at \r\nhttps://github.com/iwantooxxoox/real-time-face-recognition/tree/master/pre-trained/20170512-110547\r\n\r\nNow I found (I swear this wasn't there when I tried searching originally):\r\nhttps://drive.google.com/file/d/0B5MzpY9kBtDVZ2RpVDYwWmxoSUk/edit\r\n\r\nSo I am trying everything with the new model. I hope this works. Will keep you updated. \r\n\r\nPlease enjoy your weekend and thanks for responding so quickly. Looks like the latest model I tried has problems as well.\r\n\r\nI get the following trying to run \r\n\r\npython src/validate_on_lfw.py \\\r\n~/datasets/lfw/lfw_mtcnnpy_160 \\\r\n~/models/facenet/20180402-114759 \\\r\n--distance_metric 1 \\\r\n--use_flipped_images \\\r\n--subtract_mean \\\r\n--use_fixed_image_standardization\r\n\r\nIn the referenced Validate-on-LFW tutorial:\r\n\r\nModel directory: /content/models/facenet/20170512-110547\r\nMetagraph file: model-20170512-110547.meta\r\nCheckpoint file: model-20170512-110547.ckpt-250000\r\n2019-06-09 14:53:24.091085: W tensorflow/core/graph/graph_constructor.cc:1272] Importing a graph with a lower producer version 21 into an existing graph with producer version 27. Shape inference will have run different parts of the graph with different producer versions.\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/importer.py\", line 426, in import_graph_def\r\n    graph._c_graph, serialized, options)  # pylint: disable=protected-access\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Input 0 of node Reshape was passed int32 from batch_join:1 incompatible with expected int64.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/content/facenet/src/validate_on_lfw.py\", line 164, in <module>\r\n    main(parse_arguments(sys.argv[1:]))\r\n  File \"/content/facenet/src/validate_on_lfw.py\", line 73, in main\r\n    facenet.load_model(args.model, input_map=input_map)\r\n  File \"/content/facenet/src/facenet.py\", line 381, in load_model\r\n    saver = tf.train.import_meta_graph(os.path.join(model_exp, meta_file), input_map=input_map)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/training/saver.py\", line 1435, in import_meta_graph\r\n    meta_graph_or_file, clear_devices, import_scope, **kwargs)[0]\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/training/saver.py\", line 1457, in _import_meta_graph_with_return_elements\r\n    **kwargs))\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/meta_graph.py\", line 806, in import_scoped_meta_graph_with_return_elements\r\n    return_elements=return_elements)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/util/deprecation.py\", line 507, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/importer.py\", line 430, in import_graph_def\r\n    raise ValueError(str(e))\r\nValueError: Input 0 of node Reshape was passed int32 from batch_join:1 incompatible with expected int64.\r\n\r\nI decided to just run cleverhans with the model only. Then got:\r\n\r\nUse tf.gfile.GFile.\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\", line 1659, in _create_c_op\r\n    c_op = c_api.TF_FinishOperation(op_desc)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Dimensions must be equal, but are 128 and 512 for 'sub' (op: 'Sub') with input shapes: [?,128], [?,512].\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"facenet_fgsm.py\", line 64, in <module>\r\n    model.convert_to_classifier()\r\n  File \"facenet_fgsm.py\", line 36, in convert_to_classifier\r\n    tf.square(self.embedding_output - self.victim_embedding_input),\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/math_ops.py\", line 812, in binary_op_wrapper\r\n    return func(x, y, name=name)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/gen_math_ops.py\", line 9536, in sub\r\n    \"Sub\", x=x, y=y, name=name)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/op_def_library.py\", line 788, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/util/deprecation.py\", line 507, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\", line 3300, in create_op\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\", line 1823, in __init__\r\n    control_input_ops)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\", line 1662, in _create_c_op\r\n    raise ValueError(str(e))\r\nValueError: Dimensions must be equal, but are 128 and 512 for 'sub' (op: 'Sub') with input shapes: [?,128], [?,512].\r\n\r\nSo I changed facenet_fgsm.py to 128\r\n\r\nclass InceptionResnetV1Model(Model):\r\n  #CHANGED HERE\r\n  #model_path = \"models/facenet/20180402-114759/20180402-114759.pb\"\r\n  model_path = \"models/facenet/20170512-110547/20170512-110547.pb\"\r\n  \r\n  def __init__(self):\r\n    super(InceptionResnetV1Model, self).__init__(scope='model')\r\n\r\n    # Load Facenet CNN\r\n    facenet.load_model(self.model_path)\r\n    # Save input and output tensors references\r\n    graph = tf.get_default_graph()\r\n    self.face_input = graph.get_tensor_by_name(\"input:0\")\r\n    self.embedding_output = graph.get_tensor_by_name(\"embeddings:0\")\r\n\r\n  def convert_to_classifier(self):\r\n    # Create victim_embedding placeholder\r\n    \r\n    self.victim_embedding_input = tf.placeholder(\r\n        tf.float32,\r\n        #CHANGED HERE\r\n        shape=(None, 128))\r\n\r\nThen I got:\r\n\r\nModel filename: models/facenet/20170512-110547/20170512-110547.pb\r\nWARNING:tensorflow:From /content/facenet/src/facenet.py:370: FastGFile.__init__ (from tensorflow.python.platform.gfile) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nUse tf.gfile.GFile.\r\nTraceback (most recent call last):\r\n  File \"facenet_fgsm.py\", line 67, in <module>\r\n    faces1, faces2, labels = set_loader.load_testset(1000)\r\n  File \"/content/cleverhans/examples/facenet_adversarial_faces/set_loader.py\", line 16, in load_testset\r\n    paths, labels = lfw.get_paths(testset_path, pairs, file_extension)\r\nTypeError: get_paths() takes 2 positional arguments but 3 were given\r\n\r\nSo I changed set_loader.py:\r\n\r\ndef load_testset(size):\r\n  # Load images paths and labels\r\n  pairs = lfw.read_pairs(pairs_path)\r\n  #CHANGE HERE\r\n  #paths, labels = lfw.get_paths(testset_path, pairs, file_extension)\r\n  paths, labels = lfw.get_paths(testset_path, pairs)\r\n\r\nThen I got:\r\n\r\nModel filename: models/facenet/20170512-110547/20170512-110547.pb\r\nWARNING:tensorflow:From /content/facenet/src/facenet.py:370: FastGFile.__init__ (from tensorflow.python.platform.gfile) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nUse tf.gfile.GFile.\r\nTraceback (most recent call last):\r\n  File \"facenet_fgsm.py\", line 67, in <module>\r\n    faces1, faces2, labels = set_loader.load_testset(1000)\r\n  File \"/content/cleverhans/examples/facenet_adversarial_faces/set_loader.py\", line 34, in load_testset\r\n    faces1 = facenet.load_data(paths_batch_1, False, False, image_size)\r\n  File \"/content/facenet/src/facenet.py\", line 247, in load_data\r\n    img = misc.imread(image_paths[i])\r\nAttributeError: module 'scipy.misc' has no attribute 'imread'\r\n\r\nSo I changed facenet/src/facenet.py\r\n\r\n#CHANGE HERE\r\nimport imageio\r\n...\r\ndef load_data(image_paths, do_random_crop, do_random_flip, image_size, do_prewhiten=True):\r\n    nrof_samples = len(image_paths)\r\n    images = np.zeros((nrof_samples, image_size, image_size, 3))\r\n    for i in range(nrof_samples):\r\n        #CHANGE HERE\r\n        #img = misc.imread(image_paths[i])\r\n        img = imageio.imread(image_paths[i])\r\n\r\nWhich finally led to:\r\n\r\nColocations handled automatically by placer.\r\n/content/cleverhans/cleverhans/compat.py:22: UserWarning: <function reduce_max_v1 at 0x7fd77fb3b510> is deprecated. Switch to calling the equivalent function in tensorflow.  This function was originally needed as a compatibility layer for old versions of tensorflow,  but support for those versions has now been dropped.\r\n  warnings.warn(str(f) + \" is deprecated. Switch to calling the equivalent function in tensorflow. \"\r\nWARNING:tensorflow:From /content/cleverhans/cleverhans/attacks/attack.py:280: to_float (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nUse tf.cast instead.\r\nTraceback (most recent call last):\r\n  File \"facenet_fgsm.py\", line 85, in <module>\r\n    adv_x = fgsm.generate(model.face_input, **fgsm_params)\r\n  File \"/content/cleverhans/cleverhans/attacks/fast_gradient_method.py\", line 54, in generate\r\n    self.model.get_logits(x),\r\n  File \"/content/cleverhans/cleverhans/model.py\", line 70, in get_logits\r\n    \" output in `fprop`\")\r\nNotImplementedError: <class '__main__.InceptionResnetV1Model'>must implement `get_logits` or must define a logits output in `fprop`\r\n\r\n\r\nI think the example is still broken.  : ( I am a bit confused. I am running the example you referenced above (facenet_fgsm.py) and it has an implemented fprop method.\r\n\r\nDo I need to change the fprop method? It is currently:\r\n\r\n  def fprop(self, x, set_ref=False):\r\n    return dict(zip(self.layer_names, self.layers))\r\n\r\n The error that I was talking about related to a missing fprop method happens when I run facenet_fgsm.py\r\n\r\nWhen I run validate_on_lfw.py I don't get errors with the newer model (20180402-114759) however I still get the missing fprop method when running facenet_fgsm.py with the newer model.  \r\n\r\nYou are correct. With the older model (20170512-110547) I get the following error when running validate_on_lfw.py:\r\n\r\nInstructions for updating:\r\ntf.py_func is deprecated in TF V2. Instead, use\r\n    tf.py_function, which takes a python function which manipulates tf eager\r\n    tensors instead of numpy arrays. It's easy to convert a tf eager tensor to\r\n    an ndarray (just call tensor.numpy()) but having access to eager tensors\r\n    means `tf.py_function`s can use accelerators such as GPUs as well as\r\n    being differentiable using a gradient tape.\r\n    \r\nWARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/image_ops_impl.py:1241: div (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nDeprecated in favor of operator or tf.math.divide.\r\nWARNING:tensorflow:From /content/facenet/src/facenet.py:135: batch_join (from tensorflow.python.training.input) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nQueue-based input pipelines have been replaced by `tf.data`. Use `tf.data.Dataset.interleave(...).batch(batch_size)` (or `padded_batch(...)` if `dynamic_pad=True`).\r\nWARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/input.py:736: QueueRunner.__init__ (from tensorflow.python.training.queue_runner_impl) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nTo construct input pipelines, use the `tf.data` module.\r\nWARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/input.py:736: add_queue_runner (from tensorflow.python.training.queue_runner_impl) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nTo construct input pipelines, use the `tf.data` module.\r\nWARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/input.py:823: to_float (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nUse tf.cast instead.\r\nModel directory: /content/models/facenet/20170512-110547\r\nMetagraph file: model-20170512-110547.meta\r\nCheckpoint file: model-20170512-110547.ckpt-250000\r\n2019-06-09 14:53:24.091085: W tensorflow/core/graph/graph_constructor.cc:1272] Importing a graph with a lower producer version 21 into an existing graph with producer version 27. Shape inference will have run different parts of the graph with different producer versions.\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/importer.py\", line 426, in import_graph_def\r\n    graph._c_graph, serialized, options)  # pylint: disable=protected-access\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Input 0 of node Reshape was passed int32 from batch_join:1 incompatible with expected int64.\r\n\r\n\r\nWhen I run the newer model (20180402-114759) src/validate_on_lfw.py works correctly and I get the correct accuracy output.\r\n\r\nHowever, with the newer model I still get the missing fprop method.\r\n\r\nSo I think I know where the problem is.\r\n\r\nI did not generate the model (*.pb) files.  They were downloaded from the link above.\r\nThe Validate on LFW tutorial does not generate (serialize) the model *.pb files. The newer model files work with Validate on LFW because David Sandberg did not need to add the fprop method to his output serialized facenet models that I downloaded.\r\n\r\nThe fprop method is a new method that needs to be added to facenet model (*.pb) objects so they can work in Cleverhans.\r\n\r\nI looked in  facenet/src/models/inception_resnet_v1.py of David Sandberger's facenet implementation but there is no definition of a class for me to add the fprop method to.\r\n\r\nThe line that crashes starts from facenet_fgsm.py. \r\n\r\nThis doesn't make any sense. I am running facenet_fgsm.py which instantiates the correct model type \r\n\r\nfrom cleverhans.model import Model\r\n...\r\nclass InceptionResnetV1Model(Model):\r\n\r\nmodel = InceptionResnetV1Model()\r\n\r\nOk, looking at the stack again:\r\nFile \"facenet_fgsm.py\", line 85, in\r\nadv_x = fgsm.generate(model.face_input, **fgsm_params)\r\nFile \"/content/cleverhans/cleverhans/attacks/fast_gradient_method.py\", line 54, in generate\r\nself.**model.get_logits(x),**\r\nFile \"/content/cleverhans/cleverhans/model.py\", line 70, in get_logits\r\n\" output in fprop\")\r\nNotImplementedError: <class 'main.InceptionResnetV1Model'>must implement get_logits or must define a logits output in fprop\r\n\r\nThe problem is not the missing fprop but the missing \r\n\r\nget_logits() \r\n\r\nmethod definition of InceptionResnetV1Model in facenet_fgsm.py\r\n\r\nAm I supposed to implement that, and how should I do this if I wasn't the one who created the model (because I downloaded it).\r\n\r\nThank you again for your patience in all this. I think we are almost there.\r\n\r\n\r\n\r\n\r\nClever Ok, will try after I finish my workout.\n\nThanks,\nAbe\n\nOn Mon, Jun 10, 2019, 3:37 PM Nicolas Papernot <notifications@github.com>\nwrote:\n\n> I think you are correct, I haven't worked on this particular example (it\n> was added by @BrunoLopezGarcia <https://github.com/BrunoLopezGarcia>) but\n> it looks like it was written before we made sure that the FGSM was called\n> on logits: see\n> https://github.com/tensorflow/cleverhans/blob/13c84b4411083c4840d3c62329f3cca106b4f499/cleverhans/attacks/fast_gradient_method.py#L54\n>\n> Unfortunately, I don't know much about FaceNet but yes you would have to\n> find a way to create a method get_logits that take an input tensor and\n> returns a tensor containing the corresponding logits. I looked a bit at the\n> code in the example, and it sounds like it is just computing a distance\n> between embeddings and processing the distance to compute a score that is\n> used in place of a classification score. Given that there are no real\n> logits or probs (if my understanding is correct), I think it's ok to just\n> change the following line\n>\n> https://github.com/tensorflow/cleverhans/blob/13c84b4411083c4840d3c62329f3cca106b4f499/examples/facenet_adversarial_faces/facenet_fgsm.py#L49\n> to say instead\n>\n> self.layer_names.append('logits')\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/issues/1067?email_source=notifications&email_token=AF5TCUG7IB6CJTI3PLQ5HWDPZ3JRRA5CNFSM4HWILZLKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODXLNTQI#issuecomment-500619713>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AF5TCUHYIR2F6SCMLLWQOD3PZ3JRRANCNFSM4HWILZLA>\n> .\n>\n I think you are correct. There shouldn't be a logits layer because Facenet is using image embeddings and triplet loss.\r\n\r\nWell, I got farther but now I am running out of memory on Colab. Something seems a bit weird.\r\n\r\nI successfully got through the Validate on LFW tutorial.\r\n\r\nAfter getting these working on Colab I am going to share out the notebooks.\r\n\r\nAlso would like to update the docs.\r\n\r\nHave shared the notebooks with you if you want to take a look at what I have done.\r\n\r\nNot sure how to proceed forward from here.\r\n\r\nThanks for the help,\r\nAbe\r\n\r\n\r\n***********  Begin log output *********************\r\n2019-06-11 16:22:35.454889: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2300000000 Hz\r\n2019-06-11 16:22:35.455200: I tensorflow/compiler/xla/service/service.cc:150] XLA service 0x1ca91e0 executing computations on platform Host. Devices:\r\n2019-06-11 16:22:35.455257: I tensorflow/compiler/xla/service/service.cc:158]   StreamExecutor device (0): <undefined>, <undefined>\r\n2019-06-11 16:22:35.651562: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:998] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2019-06-11 16:22:35.652137: I tensorflow/compiler/xla/service/service.cc:150] XLA service 0x1ca9e40 executing computations on platform CUDA. Devices:\r\n2019-06-11 16:22:35.652220: I tensorflow/compiler/xla/service/service.cc:158]   StreamExecutor device (0): Tesla T4, Compute Capability 7.5\r\n2019-06-11 16:22:35.652593: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1433] Found device 0 with properties: \r\nname: Tesla T4 major: 7 minor: 5 memoryClockRate(GHz): 1.59\r\npciBusID: 0000:00:04.0\r\ntotalMemory: 14.73GiB freeMemory: 14.60GiB\r\n2019-06-11 16:22:35.652622: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1512] Adding visible gpu devices: 0\r\n2019-06-11 16:22:36.107158: I tensorflow/core/common_runtime/gpu/gpu_device.cc:984] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2019-06-11 16:22:36.107214: I tensorflow/core/common_runtime/gpu/gpu_device.cc:990]      0 \r\n2019-06-11 16:22:36.107227: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1003] 0:   N \r\n2019-06-11 16:22:36.107468: W tensorflow/core/common_runtime/gpu/gpu_bfc_allocator.cc:42] Overriding allow_growth setting because the TF_FORCE_GPU_ALLOW_GROWTH environment variable is set. Original config value was 0.\r\n2019-06-11 16:22:36.107507: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1115] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 14115 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)\r\nModel filename: models/facenet/20180402-114759/20180402-114759.pb\r\nWARNING:tensorflow:From /content/facenet/src/facenet.py:376: FastGFile.__init__ (from tensorflow.python.platform.gfile) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nUse tf.gfile.GFile.\r\n2019-06-11 16:22:44.550346: I tensorflow/stream_executor/dso_loader.cc:152] successfully opened CUDA library libcublas.so.10.0 locally\r\n/content/cleverhans/cleverhans/attacks_tf.py:27: UserWarning: attacks_tf is deprecated and will be removed on 2019-07-18 or after. Code should import functions from their new locations directly.\r\n  warnings.warn(\"attacks_tf is deprecated and will be removed on 2019-07-18\"\r\n/content/cleverhans/cleverhans/compat.py:22: UserWarning: <function reduce_max_v1 at 0x7f2e8bc736a8> is deprecated. Switch to calling the equivalent function in tensorflow.  This function was originally needed as a compatibility layer for old versions of tensorflow,  but support for those versions has now been dropped.\r\n  warnings.warn(str(f) + \" is deprecated. Switch to calling the equivalent function in tensorflow. \"\r\nWARNING:tensorflow:From /content/cleverhans/cleverhans/attacks/attack.py:280: to_float (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nUse tf.cast instead.\r\nWARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/control_flow_ops.py:3632: colocate_with (from tensorflow.python.framework.ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nColocations handled automatically by placer.\r\n/content/cleverhans/cleverhans/compat.py:22: UserWarning: <function reduce_sum_v1 at 0x7f2e8bc6d950> is deprecated. Switch to calling the equivalent function in tensorflow.  This function was originally needed as a compatibility layer for old versions of tensorflow,  but support for those versions has now been dropped.\r\n  warnings.warn(str(f) + \" is deprecated. Switch to calling the equivalent function in tensorflow. \"\r\nWARNING:tensorflow:From /content/cleverhans/cleverhans/compat.py:79: calling softmax_cross_entropy_with_logits_v2_helper (from tensorflow.python.ops.nn_ops) with dim is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\ndim is deprecated, use axis instead\r\nWARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/math_ops.py:3066: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nUse tf.cast instead.\r\nFGSM step 1\r\n2019-06-11 16:23:09.185545: W tensorflow/core/common_runtime/bfc_allocator.cc:267] Allocator (GPU_0_bfc) ran out of memory trying to allocate 1.41GiB.  Current allocation summary follows.\r\n2019-06-11 16:23:09.185663: I tensorflow/core/common_runtime/bfc_allocator.cc:597] Bin (256): \tTotal Chunks: 679, Chunks in use: 679. 169.8KiB allocated for chunks. 169.8KiB in use in bin. 29.1KiB client-requested in use in bin.\r\n2019-06-11 16:23:09.185684: I tensorflow/core/common_runtime/bfc_allocator.cc:597] Bin (512): \tTotal Chunks: 414, Chunks in use: 414. 248.0KiB allocated for chunks. 248.0KiB in use in bin. 246.5KiB client-requested in use in bin.\r\n2019-06-11 16:23:09.185714: I tensorflow/core/common_runtime/bfc_allocator.cc:597] Bin (1024): \tTotal Chunks: 75, Chunks in use: 75. 82.2KiB allocated for chunks. 82.2KiB in use in bin. 82.0KiB client-requested in use in bin.\r\n2019-06-11 16:23:09.185729: I tensorflow/core/common_runtime/bfc_allocator.cc:597] Bin (2048): \tTotal Chunks: 30, Chunks in use: 30. 93.0KiB allocated for chunks. 93.0KiB in use in bin. 92.8KiB client-requested in use in bin.\r\n2019-06-11 16:23:09.185744: I tensorflow/core/common_runtime/bfc_allocator.cc:597] Bin (4096): \tTotal Chunks: 12, Chunks in use: 12. 84.0KiB allocated for chunks. 84.0KiB in use in bin. 84.0KiB client-requested in use in bin.\r\n2019-06-11 16:23:09.185758: I tensorflow/core/common_runtime/bfc_allocator.cc:597] Bin (8192): \tTotal Chunks: 0, Chunks in use: 0. 0B allocated for chunks. 0B in use in bin. 0B client-requested in use in bin.\r\n2019-06-11 16:23:09.185773: I tensorflow/core/common_runtime/bfc_allocator.cc:597] Bin (16384): \tTotal Chunks: 2, Chunks in use: 2. 40.0KiB allocated for chunks. 40.0KiB in use in bin. 40.0KiB client-requested in use in bin.\r\n2019-06-11 16:23:09.185787: I tensorflow/core/common_runtime/bfc_allocator.cc:597] Bin (32768): \tTotal Chunks: 62, Chunks in use: 62. 2.06MiB allocated for chunks. 2.06MiB in use in bin. 2.06MiB client-requested in use in bin.\r\n2019-06-11 16:23:09.185801: I tensorflow/core/common_runtime/bfc_allocator.cc:597] Bin (65536): \tTotal Chunks: 12, Chunks in use: 12. 1.08MiB allocated for chunks. 1.08MiB in use in bin. 1.08MiB client-requested in use in bin.\r\n2019-06-11 16:23:09.185816: I tensorflow/core/common_runtime/bfc_allocator.cc:597] Bin (131072): \tTotal Chunks: 2, Chunks in use: 2. 384.0KiB allocated for chunks. 384.0KiB in use in bin. 384.0KiB client-requested in use in bin.\r\n2019-06-11 16:23:09.185831: I tensorflow/core/common_runtime/bfc_allocator.cc:597] Bin (262144): \tTotal Chunks: 102, Chunks in use: 102. 44.27MiB allocated for chunks. 44.27MiB in use in bin. 44.27MiB client-requested in use in bin.\r\n2019-06-11 16:23:09.185846: I tensorflow/core/common_runtime/bfc_allocator.cc:597] Bin (524288): \tTotal Chunks: 30, Chunks in use: 30. 24.94MiB allocated for chunks. 24.94MiB in use in bin. 24.66MiB client-requested in use in bin.\r\n2019-06-11 16:23:09.185861: I tensorflow/core/common_runtime/bfc_allocator.cc:597] Bin (1048576): \tTotal Chunks: 30, Chunks in use: 30. 42.70MiB allocated for chunks. 42.70MiB in use in bin. 41.42MiB client-requested in use in bin.\r\n2019-06-11 16:23:09.185876: I tensorflow/core/common_runtime/bfc_allocator.cc:597] Bin (2097152): \tTotal Chunks: 25, Chunks in use: 25. 67.97MiB allocated for chunks. 67.97MiB in use in bin. 66.81MiB client-requested in use in bin.\r\n2019-06-11 16:23:09.185890: I tensorflow/core/common_runtime/bfc_allocator.cc:597] Bin (4194304): \tTotal Chunks: 0, Chunks in use: 0. 0B allocated for chunks. 0B in use in bin. 0B client-requested in use in bin.\r\n2019-06-11 16:23:09.185903: I tensorflow/core/common_runtime/bfc_allocator.cc:597] Bin (8388608): \tTotal Chunks: 0, Chunks in use: 0. 0B allocated for chunks. 0B in use in bin. 0B client-requested in use in bin.\r\n2019-06-11 16:23:09.185917: I tensorflow/core/common_runtime/bfc_allocator.cc:597] Bin (16777216): \tTotal Chunks: 0, Chunks in use: 0. 0B allocated for chunks. 0B in use in bin. 0B client-requested in use in bin.\r\n2019-06-11 16:23:09.185930: I tensorflow/core/common_runtime/bfc_allocator.cc:597] Bin (33554432): \tTotal Chunks: 0, Chunks in use: 0. 0B allocated for chunks. 0B in use in bin. 0B client-requested in use in bin.\r\n2019-06-11 16:23:09.185943: I tensorflow/core/common_runtime/bfc_allocator.cc:597] Bin (67108864): \tTotal Chunks: 0, Chunks in use: 0. 0B allocated for chunks. 0B in use in bin. 0B client-requested in use in bin.\r\n2019-06-11 16:23:09.185957: I tensorflow/core/common_runtime/bfc_allocator.cc:597] Bin (134217728): \tTotal Chunks: 1, Chunks in use: 0. 161.94MiB allocated for chunks. 0B in use in bin. 0B client-requested in use in bin.\r\n2019-06-11 16:23:09.185973: I tensorflow/core/common_runtime/bfc_allocator.cc:597] Bin (268435456): \tTotal Chunks: 17, Chunks in use: 12. 13.45GiB allocated for chunks. 10.33GiB in use in bin. 10.33GiB client-requested in use in bin.\r\n2019-06-11 16:23:09.185987: I tensorflow/core/common_runtime/bfc_allocator.cc:613] Bin for 1.41GiB was 256.00MiB, Chunk State: \r\n2019-06-11 16:23:09.186009: I tensorflow/core/common_runtime/bfc_allocator.cc:619]   Size: 262.16MiB | Requested Size: 0B | in_use: 0, prev:   Size: 761.84MiB | Requested Size: 761.84MiB | in_use: 1\r\n2019-06-11 16:23:09.186028: I tensorflow/core/common_runtime/bfc_allocator.cc:619]   Size: 262.16MiB | Requested Size: 0B | in_use: 0, prev:   Size: 761.84MiB | Requested Size: 761.84MiB | in_use: 1\r\n2019-06-11 16:23:09.186042: I tensorflow/core/common_runtime/bfc_allocator.cc:619]   Size: 524.32MiB | Requested Size: 128B | in_use: 0, prev:   Size: 761.84MiB | Requested Size: 761.84MiB | in_use: 1\r\n2019-06-11 16:23:09.186058: I tensorflow/core/common_runtime/bfc_allocator.cc:619]   Size: 941.51MiB | Requested Size: 34.7KiB | in_use: 0, prev:   Size: 1.41GiB | Requested Size: 1.41GiB | in_use: 1\r\n2019-06-11 16:23:09.186073: I tensorflow/core/common_runtime/bfc_allocator.cc:619]   Size: 1.17GiB | Requested Size: 723.75MiB | in_use: 0, prev:   Size: 723.75MiB | Requested Size: 723.75MiB | in_use: 1\r\n2019-06-11 16:23:09.186089: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2ab8000000 of size 1517824000\r\n2019-06-11 16:23:09.186100: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2b12782800 of size 1517824000\r\n2019-06-11 16:23:09.186112: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2b6cf05000 of size 1517824000\r\n2019-06-11 16:23:09.186123: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Free  at 0x7f2bc7687800 of size 987246080\r\n2019-06-11 16:23:09.186134: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2c06000000 of size 758912000\r\n2019-06-11 16:23:09.186162: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2c333c1400 of size 758912000\r\n2019-06-11 16:23:09.186175: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2c60782800 of size 758912000\r\n2019-06-11 16:23:09.186186: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2c8db43c00 of size 758912000\r\n2019-06-11 16:23:09.186197: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Free  at 0x7f2cbaf05000 of size 1259319296\r\n2019-06-11 16:23:09.186209: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2d18000000 of size 798848000\r\n2019-06-11 16:23:09.186220: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2d479d7400 of size 798848000\r\n2019-06-11 16:23:09.186231: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Free  at 0x7f2d773ae800 of size 549787648\r\n2019-06-11 16:23:09.186261: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2d98000000 of size 798848000\r\n2019-06-11 16:23:09.186273: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Free  at 0x7f2dc79d7400 of size 274893824\r\n2019-06-11 16:23:09.186284: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2dd8000000 of size 798848000\r\n2019-06-11 16:23:09.186297: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Free  at 0x7f2e079d7400 of size 274893824\r\n2019-06-11 16:23:09.186309: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18000000 of size 3584\r\n2019-06-11 16:23:09.186322: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18000e00 of size 917504\r\n2019-06-11 16:23:09.186334: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e180e0e00 of size 512\r\n2019-06-11 16:23:09.186347: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e180e1000 of size 512\r\n2019-06-11 16:23:09.186359: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e180e1200 of size 512\r\n2019-06-11 16:23:09.186381: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e180e1400 of size 458752\r\n2019-06-11 16:23:09.186393: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18151400 of size 512\r\n2019-06-11 16:23:09.186405: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18151600 of size 512\r\n2019-06-11 16:23:09.186416: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18151800 of size 512\r\n2019-06-11 16:23:09.186427: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18151a00 of size 458752\r\n2019-06-11 16:23:09.186438: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e181c1a00 of size 512\r\n2019-06-11 16:23:09.186450: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e181c1c00 of size 512\r\n2019-06-11 16:23:09.186461: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e181c1e00 of size 512\r\n2019-06-11 16:23:09.186472: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e181c2000 of size 458752\r\n2019-06-11 16:23:09.186483: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18232000 of size 512\r\n2019-06-11 16:23:09.186494: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18232200 of size 512\r\n2019-06-11 16:23:09.186505: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18232400 of size 512\r\n2019-06-11 16:23:09.186517: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18232600 of size 458752\r\n2019-06-11 16:23:09.186528: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e182a2600 of size 3584\r\n2019-06-11 16:23:09.186539: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e182a3400 of size 917504\r\n2019-06-11 16:23:09.186550: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18383400 of size 512\r\n2019-06-11 16:23:09.186561: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18383600 of size 512\r\n2019-06-11 16:23:09.186572: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18383800 of size 512\r\n2019-06-11 16:23:09.186584: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18383a00 of size 458752\r\n2019-06-11 16:23:09.186595: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e183f3a00 of size 512\r\n2019-06-11 16:23:09.186606: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e183f3c00 of size 512\r\n2019-06-11 16:23:09.186618: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e183f3e00 of size 512\r\n2019-06-11 16:23:09.186629: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e183f4000 of size 458752\r\n2019-06-11 16:23:09.186640: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18464000 of size 512\r\n2019-06-11 16:23:09.186651: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18464200 of size 512\r\n2019-06-11 16:23:09.186662: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18464400 of size 512\r\n2019-06-11 16:23:09.186673: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18464600 of size 458752\r\n2019-06-11 16:23:09.186684: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e184d4600 of size 512\r\n2019-06-11 16:23:09.186705: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e184d4800 of size 512\r\n2019-06-11 16:23:09.186717: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e184d4a00 of size 512\r\n2019-06-11 16:23:09.186728: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e184d4c00 of size 458752\r\n2019-06-11 16:23:09.186739: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18544c00 of size 3584\r\n2019-06-11 16:23:09.186750: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18545a00 of size 917504\r\n2019-06-11 16:23:09.186761: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18625a00 of size 512\r\n2019-06-11 16:23:09.186773: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18625c00 of size 512\r\n2019-06-11 16:23:09.186784: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18625e00 of size 512\r\n2019-06-11 16:23:09.186795: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18626000 of size 458752\r\n2019-06-11 16:23:09.186803: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18696000 of size 512\r\n2019-06-11 16:23:09.186813: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18696200 of size 512\r\n2019-06-11 16:23:09.186820: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18696400 of size 512\r\n2019-06-11 16:23:09.186828: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18696600 of size 458752\r\n2019-06-11 16:23:09.186835: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18706600 of size 512\r\n2019-06-11 16:23:09.186844: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18706800 of size 512\r\n2019-06-11 16:23:09.186852: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18706a00 of size 512\r\n2019-06-11 16:23:09.186860: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18706c00 of size 458752\r\n2019-06-11 16:23:09.186867: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18776c00 of size 512\r\n2019-06-11 16:23:09.186875: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18776e00 of size 512\r\n2019-06-11 16:23:09.186888: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18777000 of size 512\r\n2019-06-11 16:23:09.186899: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18777200 of size 458752\r\n2019-06-11 16:23:09.186910: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e187e7200 of size 3584\r\n2019-06-11 16:23:09.186925: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e187e8000 of size 917504\r\n2019-06-11 16:23:09.186938: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e188c8000 of size 512\r\n2019-06-11 16:23:09.186949: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e188c8200 of size 512\r\n2019-06-11 16:23:09.186960: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e188c8400 of size 512\r\n2019-06-11 16:23:09.186971: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e188c8600 of size 458752\r\n2019-06-11 16:23:09.186982: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18938600 of size 512\r\n2019-06-11 16:23:09.186993: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18938800 of size 512\r\n2019-06-11 16:23:09.187003: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18938a00 of size 512\r\n2019-06-11 16:23:09.187014: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18938c00 of size 458752\r\n2019-06-11 16:23:09.187025: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e189a8c00 of size 512\r\n2019-06-11 16:23:09.187036: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e189a8e00 of size 512\r\n2019-06-11 16:23:09.187047: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e189a9000 of size 512\r\n2019-06-11 16:23:09.187058: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e189a9200 of size 458752\r\n2019-06-11 16:23:09.187069: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18a19200 of size 512\r\n2019-06-11 16:23:09.187080: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18a19400 of size 512\r\n2019-06-11 16:23:09.187090: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18a19600 of size 512\r\n2019-06-11 16:23:09.187101: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18a19800 of size 458752\r\n2019-06-11 16:23:09.187112: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18a89800 of size 3584\r\n2019-06-11 16:23:09.187123: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18a8a600 of size 917504\r\n2019-06-11 16:23:09.187134: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18b6a600 of size 512\r\n2019-06-11 16:23:09.187154: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18b6a800 of size 512\r\n2019-06-11 16:23:09.187172: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18b6aa00 of size 512\r\n2019-06-11 16:23:09.187183: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18b6ac00 of size 458752\r\n2019-06-11 16:23:09.187194: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18bdac00 of size 512\r\n2019-06-11 16:23:09.187205: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18bdae00 of size 512\r\n2019-06-11 16:23:09.187216: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18bdb000 of size 512\r\n2019-06-11 16:23:09.187227: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18bdb200 of size 458752\r\n2019-06-11 16:23:09.187239: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18c4b200 of size 512\r\n2019-06-11 16:23:09.187250: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18c4b400 of size 512\r\n2019-06-11 16:23:09.187261: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18c4b600 of size 512\r\n2019-06-11 16:23:09.187272: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18c4b800 of size 458752\r\n2019-06-11 16:23:09.187283: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18cbb800 of size 512\r\n2019-06-11 16:23:09.187294: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18cbba00 of size 512\r\n2019-06-11 16:23:09.198638: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18cbbc00 of size 512\r\n2019-06-11 16:23:09.198664: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18cbbe00 of size 458752\r\n2019-06-11 16:23:09.198673: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18d2be00 of size 3584\r\n2019-06-11 16:23:09.198681: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18d2cc00 of size 917504\r\n2019-06-11 16:23:09.198696: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18e0cc00 of size 512\r\n2019-06-11 16:23:09.198704: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18e0ce00 of size 512\r\n2019-06-11 16:23:09.198712: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18e0d000 of size 512\r\n2019-06-11 16:23:09.198720: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18e0d200 of size 458752\r\n2019-06-11 16:23:09.198728: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18e7d200 of size 512\r\n2019-06-11 16:23:09.198736: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18e7d400 of size 512\r\n2019-06-11 16:23:09.198743: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18e7d600 of size 512\r\n2019-06-11 16:23:09.198751: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18e7d800 of size 458752\r\n2019-06-11 16:23:09.198759: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18eed800 of size 512\r\n2019-06-11 16:23:09.198766: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18eeda00 of size 512\r\n2019-06-11 16:23:09.198774: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18eedc00 of size 512\r\n2019-06-11 16:23:09.198781: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18eede00 of size 458752\r\n2019-06-11 16:23:09.198789: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18f5de00 of size 512\r\n2019-06-11 16:23:09.198797: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18f5e000 of size 512\r\n2019-06-11 16:23:09.198805: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18f5e200 of size 512\r\n2019-06-11 16:23:09.198813: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18f5e400 of size 458752\r\n2019-06-11 16:23:09.198832: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18fce400 of size 3584\r\n2019-06-11 16:23:09.198840: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e18fcf200 of size 917504\r\n2019-06-11 16:23:09.198847: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e190af200 of size 512\r\n2019-06-11 16:23:09.198855: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e190af400 of size 512\r\n2019-06-11 16:23:09.198862: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e190af600 of size 512\r\n2019-06-11 16:23:09.198870: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e190af800 of size 458752\r\n2019-06-11 16:23:09.198878: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1911f800 of size 512\r\n2019-06-11 16:23:09.198886: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1911fa00 of size 512\r\n2019-06-11 16:23:09.198893: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1911fc00 of size 512\r\n2019-06-11 16:23:09.198902: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1911fe00 of size 458752\r\n2019-06-11 16:23:09.198910: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1918fe00 of size 512\r\n2019-06-11 16:23:09.198918: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19190000 of size 512\r\n2019-06-11 16:23:09.198925: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19190200 of size 512\r\n2019-06-11 16:23:09.198932: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19190400 of size 458752\r\n2019-06-11 16:23:09.198939: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19200400 of size 512\r\n2019-06-11 16:23:09.198947: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19200600 of size 512\r\n2019-06-11 16:23:09.199295: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19200800 of size 512\r\n2019-06-11 16:23:09.199320: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19200a00 of size 458752\r\n2019-06-11 16:23:09.199333: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19270a00 of size 3584\r\n2019-06-11 16:23:09.199345: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19271800 of size 917504\r\n2019-06-11 16:23:09.199358: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19351800 of size 512\r\n2019-06-11 16:23:09.199371: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19351a00 of size 512\r\n2019-06-11 16:23:09.199384: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19351c00 of size 512\r\n2019-06-11 16:23:09.199397: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19351e00 of size 458752\r\n2019-06-11 16:23:09.199409: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e193c1e00 of size 512\r\n2019-06-11 16:23:09.199422: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e193c2000 of size 512\r\n2019-06-11 16:23:09.199434: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e193c2200 of size 512\r\n2019-06-11 16:23:09.199447: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e193c2400 of size 458752\r\n2019-06-11 16:23:09.199460: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19432400 of size 512\r\n2019-06-11 16:23:09.199472: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19432600 of size 512\r\n2019-06-11 16:23:09.199485: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19432800 of size 512\r\n2019-06-11 16:23:09.199498: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19432a00 of size 458752\r\n2019-06-11 16:23:09.199511: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e194a2a00 of size 512\r\n2019-06-11 16:23:09.199524: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e194a2c00 of size 512\r\n2019-06-11 16:23:09.199548: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e194a2e00 of size 512\r\n2019-06-11 16:23:09.199561: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e194a3000 of size 458752\r\n2019-06-11 16:23:09.199573: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19513000 of size 3584\r\n2019-06-11 16:23:09.199585: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19513e00 of size 917504\r\n2019-06-11 16:23:09.199605: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e195f3e00 of size 512\r\n2019-06-11 16:23:09.199617: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e195f4000 of size 512\r\n2019-06-11 16:23:09.199628: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e195f4200 of size 512\r\n2019-06-11 16:23:09.199640: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e195f4400 of size 458752\r\n2019-06-11 16:23:09.199652: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19664400 of size 512\r\n2019-06-11 16:23:09.199663: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19664600 of size 512\r\n2019-06-11 16:23:09.199675: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19664800 of size 512\r\n2019-06-11 16:23:09.199701: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19664a00 of size 458752\r\n2019-06-11 16:23:09.199715: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e196d4a00 of size 512\r\n2019-06-11 16:23:09.199727: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e196d4c00 of size 512\r\n2019-06-11 16:23:09.199739: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e196d4e00 of size 512\r\n2019-06-11 16:23:09.199751: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e196d5000 of size 458752\r\n2019-06-11 16:23:09.199764: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19745000 of size 512\r\n2019-06-11 16:23:09.199776: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19745200 of size 512\r\n2019-06-11 16:23:09.199788: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19745400 of size 512\r\n2019-06-11 16:23:09.199800: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19745600 of size 458752\r\n2019-06-11 16:23:09.199812: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e197b5600 of size 3584\r\n2019-06-11 16:23:09.199824: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e197b6400 of size 917504\r\n2019-06-11 16:23:09.199837: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19896400 of size 768\r\n2019-06-11 16:23:09.199866: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19896700 of size 768\r\n2019-06-11 16:23:09.199879: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19896a00 of size 768\r\n2019-06-11 16:23:09.199899: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19896d00 of size 1376256\r\n2019-06-11 16:23:09.199911: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e199e6d00 of size 768\r\n2019-06-11 16:23:09.199923: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e199e7000 of size 768\r\n2019-06-11 16:23:09.199947: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e199e7300 of size 768\r\n2019-06-11 16:23:09.199959: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e199e7600 of size 1376256\r\n2019-06-11 16:23:09.199971: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19b37600 of size 768\r\n2019-06-11 16:23:09.199983: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19b37900 of size 768\r\n2019-06-11 16:23:09.199995: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19b37c00 of size 768\r\n2019-06-11 16:23:09.200010: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19b37f00 of size 442368\r\n2019-06-11 16:23:09.200022: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19ba3f00 of size 768\r\n2019-06-11 16:23:09.200033: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19ba4200 of size 768\r\n2019-06-11 16:23:09.200062: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19ba4500 of size 768\r\n2019-06-11 16:23:09.200075: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19ba4800 of size 442368\r\n2019-06-11 16:23:09.200088: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19c10800 of size 7168\r\n2019-06-11 16:23:09.200101: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19c12400 of size 2752512\r\n2019-06-11 16:23:09.200114: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19eb2400 of size 768\r\n2019-06-11 16:23:09.200127: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19eb2700 of size 768\r\n2019-06-11 16:23:09.200140: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19eb2a00 of size 768\r\n2019-06-11 16:23:09.200182: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e19eb2d00 of size 1376256\r\n2019-06-11 16:23:09.200196: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a002d00 of size 768\r\n2019-06-11 16:23:09.200209: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a003000 of size 768\r\n2019-06-11 16:23:09.200221: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a003300 of size 768\r\n2019-06-11 16:23:09.200239: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a003600 of size 1376256\r\n2019-06-11 16:23:09.200252: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a153600 of size 768\r\n2019-06-11 16:23:09.200264: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a153900 of size 768\r\n2019-06-11 16:23:09.200276: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a153c00 of size 768\r\n2019-06-11 16:23:09.200288: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a153f00 of size 442368\r\n2019-06-11 16:23:09.200301: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a1bff00 of size 768\r\n2019-06-11 16:23:09.200313: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a1c0200 of size 768\r\n2019-06-11 16:23:09.200326: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a1c0500 of size 768\r\n2019-06-11 16:23:09.200338: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a1c0800 of size 442368\r\n2019-06-11 16:23:09.200351: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a22c800 of size 7168\r\n2019-06-11 16:23:09.200364: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a22e400 of size 2752512\r\n2019-06-11 16:23:09.200376: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a4ce400 of size 768\r\n2019-06-11 16:23:09.200389: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a4ce700 of size 768\r\n2019-06-11 16:23:09.200402: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a4cea00 of size 768\r\n2019-06-11 16:23:09.200415: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a4ced00 of size 1376256\r\n2019-06-11 16:23:09.200427: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a61ed00 of size 768\r\n2019-06-11 16:23:09.200441: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a61f000 of size 768\r\n2019-06-11 16:23:09.200453: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a61f300 of size 768\r\n2019-06-11 16:23:09.200477: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a61f600 of size 1376256\r\n2019-06-11 16:23:09.200490: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a76f600 of size 768\r\n2019-06-11 16:23:09.200502: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a76f900 of size 768\r\n2019-06-11 16:23:09.200514: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a76fc00 of size 768\r\n2019-06-11 16:23:09.200526: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a76ff00 of size 442368\r\n2019-06-11 16:23:09.200544: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a7dbf00 of size 768\r\n2019-06-11 16:23:09.200555: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a7dc200 of size 768\r\n2019-06-11 16:23:09.200567: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a7dc500 of size 768\r\n2019-06-11 16:23:09.200578: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a7dc800 of size 442368\r\n2019-06-11 16:23:09.200590: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a848800 of size 7168\r\n2019-06-11 16:23:09.200602: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1a84a400 of size 2752512\r\n2019-06-11 16:23:09.200614: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1aaea400 of size 768\r\n2019-06-11 16:23:09.200626: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1aaea700 of size 768\r\n2019-06-11 16:23:09.200638: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1aaeaa00 of size 768\r\n2019-06-11 16:23:09.200650: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1aaead00 of size 1376256\r\n2019-06-11 16:23:09.200662: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1ac3ad00 of size 768\r\n2019-06-11 16:23:09.200674: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1ac3b000 of size 768\r\n2019-06-11 16:23:09.200686: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1ac3b300 of size 768\r\n2019-06-11 16:23:09.200709: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1ac3b600 of size 1376256\r\n2019-06-11 16:23:09.200721: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1ad8b600 of size 768\r\n2019-06-11 16:23:09.200733: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1ad8b900 of size 768\r\n2019-06-11 16:23:09.200745: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1ad8bc00 of size 768\r\n2019-06-11 16:23:09.200757: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1ad8bf00 of size 442368\r\n2019-06-11 16:23:09.200770: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1adf7f00 of size 768\r\n2019-06-11 16:23:09.200782: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1adf8200 of size 768\r\n2019-06-11 16:23:09.200793: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1adf8500 of size 768\r\n2019-06-11 16:23:09.200808: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1adf8800 of size 442368\r\n2019-06-11 16:23:09.200819: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1ae64800 of size 7168\r\n2019-06-11 16:23:09.200831: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1ae66400 of size 2752512\r\n2019-06-11 16:23:09.200842: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1b106400 of size 768\r\n2019-06-11 16:23:09.200854: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1b106700 of size 768\r\n2019-06-11 16:23:09.200865: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1b106a00 of size 768\r\n2019-06-11 16:23:09.200877: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1b106d00 of size 1376256\r\n2019-06-11 16:23:09.200889: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1b256d00 of size 768\r\n2019-06-11 16:23:09.200901: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1b257000 of size 768\r\n2019-06-11 16:23:09.200913: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1b257300 of size 768\r\n2019-06-11 16:23:09.200925: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1b257600 of size 1376256\r\n2019-06-11 16:23:09.200937: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1b3a7600 of size 768\r\n2019-06-11 16:23:09.200949: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1b3a7900 of size 768\r\n2019-06-11 16:23:09.200962: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1b3a7c00 of size 768\r\n2019-06-11 16:23:09.200973: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1b3a7f00 of size 442368\r\n2019-06-11 16:23:09.200986: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1b413f00 of size 768\r\n2019-06-11 16:23:09.200998: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1b414200 of size 768\r\n2019-06-11 16:23:09.201010: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1b414500 of size 768\r\n2019-06-11 16:23:09.201022: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1b414800 of size 442368\r\n2019-06-11 16:23:09.201035: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1b480800 of size 7168\r\n2019-06-11 16:23:09.201047: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1b482400 of size 2752512\r\n2019-06-11 16:23:09.201059: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1b722400 of size 256\r\n2019-06-11 16:23:09.201078: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1b722500 of size 256\r\n2019-06-11 16:23:09.201090: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e1b722600 of size 307200000\r\n2019-06-11 16:23:09.201102: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e2dc1a600 of size 2048000\r\n2019-06-11 16:23:09.201114: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e2de0e600 of size 256\r\n2019-06-11 16:23:09.201126: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e2de0e700 of size 256\r\n2019-06-11 16:23:09.201138: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e2de0e800 of size 256\r\n2019-06-11 16:23:09.201166: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e2de0e900 of size 256\r\n2019-06-11 16:23:09.201178: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Free  at 0x7f2e2de0ea00 of size 169809408\r\n2019-06-11 16:23:09.201192: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38000000 of size 768\r\n2019-06-11 16:23:09.201204: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38000300 of size 768\r\n2019-06-11 16:23:09.201216: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38000600 of size 768\r\n2019-06-11 16:23:09.201228: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38000900 of size 1376256\r\n2019-06-11 16:23:09.201240: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38150900 of size 768\r\n2019-06-11 16:23:09.201252: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38150c00 of size 768\r\n2019-06-11 16:23:09.201264: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38150f00 of size 768\r\n2019-06-11 16:23:09.201276: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38151200 of size 442368\r\n2019-06-11 16:23:09.201288: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e381bd200 of size 768\r\n2019-06-11 16:23:09.201299: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e381bd500 of size 768\r\n2019-06-11 16:23:09.201312: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e381bd800 of size 768\r\n2019-06-11 16:23:09.201324: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e381bdb00 of size 442368\r\n2019-06-11 16:23:09.201336: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38229b00 of size 7168\r\n2019-06-11 16:23:09.201348: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3822b700 of size 2752512\r\n2019-06-11 16:23:09.201363: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e384cb700 of size 768\r\n2019-06-11 16:23:09.201375: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e384cba00 of size 768\r\n2019-06-11 16:23:09.201386: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e384cbd00 of size 768\r\n2019-06-11 16:23:09.201398: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e384cc000 of size 1376256\r\n2019-06-11 16:23:09.201409: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3861c000 of size 768\r\n2019-06-11 16:23:09.201421: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3861c300 of size 768\r\n2019-06-11 16:23:09.201433: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3861c600 of size 768\r\n2019-06-11 16:23:09.201445: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3861c900 of size 1376256\r\n2019-06-11 16:23:09.201457: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3876c900 of size 768\r\n2019-06-11 16:23:09.201469: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3876cc00 of size 768\r\n2019-06-11 16:23:09.201481: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3876cf00 of size 768\r\n2019-06-11 16:23:09.201493: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3876d200 of size 442368\r\n2019-06-11 16:23:09.201505: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e387d9200 of size 768\r\n2019-06-11 16:23:09.201517: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e387d9500 of size 768\r\n2019-06-11 16:23:09.201529: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e387d9800 of size 768\r\n2019-06-11 16:23:09.201541: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e387d9b00 of size 442368\r\n2019-06-11 16:23:09.201553: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38845b00 of size 7168\r\n2019-06-11 16:23:09.201565: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38847700 of size 2752512\r\n2019-06-11 16:23:09.201577: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38ae7700 of size 768\r\n2019-06-11 16:23:09.201590: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38ae7a00 of size 768\r\n2019-06-11 16:23:09.201602: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38ae7d00 of size 768\r\n2019-06-11 16:23:09.201614: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38ae8000 of size 1376256\r\n2019-06-11 16:23:09.201631: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38c38000 of size 768\r\n2019-06-11 16:23:09.201643: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38c38300 of size 768\r\n2019-06-11 16:23:09.201655: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38c38600 of size 768\r\n2019-06-11 16:23:09.201666: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38c38900 of size 1376256\r\n2019-06-11 16:23:09.201679: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38d88900 of size 768\r\n2019-06-11 16:23:09.201701: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38d88c00 of size 768\r\n2019-06-11 16:23:09.201714: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38d88f00 of size 768\r\n2019-06-11 16:23:09.201727: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38d89200 of size 442368\r\n2019-06-11 16:23:09.201738: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38df5200 of size 768\r\n2019-06-11 16:23:09.201750: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38df5500 of size 768\r\n2019-06-11 16:23:09.201763: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38df5800 of size 768\r\n2019-06-11 16:23:09.201775: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38df5b00 of size 442368\r\n2019-06-11 16:23:09.201788: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38e61b00 of size 7168\r\n2019-06-11 16:23:09.201800: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e38e63700 of size 2752512\r\n2019-06-11 16:23:09.201812: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39103700 of size 768\r\n2019-06-11 16:23:09.201824: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39103a00 of size 768\r\n2019-06-11 16:23:09.201836: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39103d00 of size 768\r\n2019-06-11 16:23:09.201848: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39104000 of size 1376256\r\n2019-06-11 16:23:09.201861: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39254000 of size 768\r\n2019-06-11 16:23:09.201873: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39254300 of size 768\r\n2019-06-11 16:23:09.201885: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39254600 of size 768\r\n2019-06-11 16:23:09.201906: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39254900 of size 1376256\r\n2019-06-11 16:23:09.201917: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e393a4900 of size 768\r\n2019-06-11 16:23:09.201929: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e393a4c00 of size 768\r\n2019-06-11 16:23:09.201940: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e393a4f00 of size 768\r\n2019-06-11 16:23:09.201953: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e393a5200 of size 442368\r\n2019-06-11 16:23:09.201965: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39411200 of size 768\r\n2019-06-11 16:23:09.201977: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39411500 of size 768\r\n2019-06-11 16:23:09.201990: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39411800 of size 768\r\n2019-06-11 16:23:09.202002: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39411b00 of size 442368\r\n2019-06-11 16:23:09.202014: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3947db00 of size 7168\r\n2019-06-11 16:23:09.202026: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3947f700 of size 2752512\r\n2019-06-11 16:23:09.202039: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3971f700 of size 768\r\n2019-06-11 16:23:09.202052: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3971fa00 of size 768\r\n2019-06-11 16:23:09.202064: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3971fd00 of size 768\r\n2019-06-11 16:23:09.202076: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39720000 of size 1376256\r\n2019-06-11 16:23:09.202088: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39870000 of size 768\r\n2019-06-11 16:23:09.202100: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39870300 of size 768\r\n2019-06-11 16:23:09.202113: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39870600 of size 768\r\n2019-06-11 16:23:09.202125: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39870900 of size 1376256\r\n2019-06-11 16:23:09.202137: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e399c0900 of size 768\r\n2019-06-11 16:23:09.202166: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e399c0c00 of size 768\r\n2019-06-11 16:23:09.202179: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e399c0f00 of size 768\r\n2019-06-11 16:23:09.202191: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e399c1200 of size 442368\r\n2019-06-11 16:23:09.202203: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39a2d200 of size 768\r\n2019-06-11 16:23:09.202215: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39a2d500 of size 768\r\n2019-06-11 16:23:09.202227: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39a2d800 of size 768\r\n2019-06-11 16:23:09.202239: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39a2db00 of size 442368\r\n2019-06-11 16:23:09.202251: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39a99b00 of size 7168\r\n2019-06-11 16:23:09.202263: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39a9b700 of size 2752512\r\n2019-06-11 16:23:09.202276: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3b700 of size 1280\r\n2019-06-11 16:23:09.202289: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3bc00 of size 256\r\n2019-06-11 16:23:09.202301: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3bd00 of size 256\r\n2019-06-11 16:23:09.202314: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3be00 of size 256\r\n2019-06-11 16:23:09.202326: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3bf00 of size 256\r\n2019-06-11 16:23:09.202338: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3c000 of size 256\r\n2019-06-11 16:23:09.202351: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3c100 of size 256\r\n2019-06-11 16:23:09.202362: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3c200 of size 256\r\n2019-06-11 16:23:09.202375: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3c300 of size 256\r\n2019-06-11 16:23:09.202387: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3c400 of size 512\r\n2019-06-11 16:23:09.202399: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3c600 of size 256\r\n2019-06-11 16:23:09.202412: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3c700 of size 256\r\n2019-06-11 16:23:09.202424: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3c800 of size 256\r\n2019-06-11 16:23:09.202436: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3c900 of size 256\r\n2019-06-11 16:23:09.202449: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3ca00 of size 1024\r\n2019-06-11 16:23:09.202461: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3ce00 of size 256\r\n2019-06-11 16:23:09.202473: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3cf00 of size 256\r\n2019-06-11 16:23:09.202485: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3d000 of size 256\r\n2019-06-11 16:23:09.202497: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3d100 of size 256\r\n2019-06-11 16:23:09.202509: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3d200 of size 256\r\n2019-06-11 16:23:09.202521: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3d300 of size 256\r\n2019-06-11 16:23:09.202533: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3d400 of size 256\r\n2019-06-11 16:23:09.202546: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3d500 of size 256\r\n2019-06-11 16:23:09.202558: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3d600 of size 256\r\n2019-06-11 16:23:09.202570: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3d700 of size 256\r\n2019-06-11 16:23:09.202583: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3d800 of size 256\r\n2019-06-11 16:23:09.202595: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3d900 of size 256\r\n2019-06-11 16:23:09.202607: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3da00 of size 256\r\n2019-06-11 16:23:09.202619: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3db00 of size 256\r\n2019-06-11 16:23:09.202631: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3dc00 of size 256\r\n2019-06-11 16:23:09.202643: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3dd00 of size 256\r\n2019-06-11 16:23:09.202655: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3de00 of size 256\r\n2019-06-11 16:23:09.202668: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3df00 of size 256\r\n2019-06-11 16:23:09.202680: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3e000 of size 256\r\n2019-06-11 16:23:09.202702: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3e100 of size 256\r\n2019-06-11 16:23:09.202714: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3e200 of size 256\r\n2019-06-11 16:23:09.202726: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3e300 of size 256\r\n2019-06-11 16:23:09.202738: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3e400 of size 256\r\n2019-06-11 16:23:09.202750: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3e500 of size 256\r\n2019-06-11 16:23:09.202762: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3e600 of size 256\r\n2019-06-11 16:23:09.202775: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3e700 of size 256\r\n2019-06-11 16:23:09.202787: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3e800 of size 256\r\n2019-06-11 16:23:09.202799: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3e900 of size 256\r\n2019-06-11 16:23:09.202811: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3ea00 of size 256\r\n2019-06-11 16:23:09.202823: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3eb00 of size 256\r\n2019-06-11 16:23:09.202836: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3ec00 of size 256\r\n2019-06-11 16:23:09.202848: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3ed00 of size 256\r\n2019-06-11 16:23:09.202860: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3ee00 of size 256\r\n2019-06-11 16:23:09.202873: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3ef00 of size 256\r\n2019-06-11 16:23:09.202885: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3f000 of size 256\r\n2019-06-11 16:23:09.202897: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3f100 of size 256\r\n2019-06-11 16:23:09.202910: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3f200 of size 256\r\n2019-06-11 16:23:09.202922: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3f300 of size 256\r\n2019-06-11 16:23:09.202934: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3f400 of size 256\r\n2019-06-11 16:23:09.202946: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3f500 of size 256\r\n2019-06-11 16:23:09.202958: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3f600 of size 256\r\n2019-06-11 16:23:09.202969: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3f700 of size 256\r\n2019-06-11 16:23:09.202981: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3f800 of size 256\r\n2019-06-11 16:23:09.202993: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3f900 of size 256\r\n2019-06-11 16:23:09.203005: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3fa00 of size 256\r\n2019-06-11 16:23:09.203017: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3fb00 of size 256\r\n2019-06-11 16:23:09.203030: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3fc00 of size 256\r\n2019-06-11 16:23:09.203042: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3fd00 of size 256\r\n2019-06-11 16:23:09.203054: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3fe00 of size 256\r\n2019-06-11 16:23:09.203066: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d3ff00 of size 256\r\n2019-06-11 16:23:09.203079: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d40000 of size 256\r\n2019-06-11 16:23:09.203091: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d40100 of size 256\r\n2019-06-11 16:23:09.203103: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d40200 of size 256\r\n2019-06-11 16:23:09.203115: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d40300 of size 256\r\n2019-06-11 16:23:09.203127: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d40400 of size 256\r\n2019-06-11 16:23:09.203140: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d40500 of size 256\r\n2019-06-11 16:23:09.203170: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d40600 of size 256\r\n2019-06-11 16:23:09.203182: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d40700 of size 256\r\n2019-06-11 16:23:09.203195: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d40800 of size 256\r\n2019-06-11 16:23:09.203207: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d40900 of size 256\r\n2019-06-11 16:23:09.203218: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d40a00 of size 256\r\n2019-06-11 16:23:09.203229: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d40b00 of size 256\r\n2019-06-11 16:23:09.203241: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d40c00 of size 256\r\n2019-06-11 16:23:09.203253: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d40d00 of size 256\r\n2019-06-11 16:23:09.203265: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d40e00 of size 256\r\n2019-06-11 16:23:09.203277: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d40f00 of size 256\r\n2019-06-11 16:23:09.203289: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d41000 of size 256\r\n2019-06-11 16:23:09.203301: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d41100 of size 256\r\n2019-06-11 16:23:09.203313: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d41200 of size 256\r\n2019-06-11 16:23:09.203325: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d41300 of size 256\r\n2019-06-11 16:23:09.203338: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d41400 of size 256\r\n2019-06-11 16:23:09.203349: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d41500 of size 256\r\n2019-06-11 16:23:09.203362: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d41600 of size 256\r\n2019-06-11 16:23:09.203374: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d41700 of size 256\r\n2019-06-11 16:23:09.203386: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d41800 of size 256\r\n2019-06-11 16:23:09.203398: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d41900 of size 256\r\n2019-06-11 16:23:09.203410: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d41a00 of size 256\r\n2019-06-11 16:23:09.203423: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d41b00 of size 256\r\n2019-06-11 16:23:09.203435: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d41c00 of size 256\r\n2019-06-11 16:23:09.203447: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d41d00 of size 256\r\n2019-06-11 16:23:09.203460: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d41e00 of size 256\r\n2019-06-11 16:23:09.203472: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d41f00 of size 256\r\n2019-06-11 16:23:09.203484: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d42000 of size 256\r\n2019-06-11 16:23:09.203496: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d42100 of size 256\r\n2019-06-11 16:23:09.203507: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d42200 of size 256\r\n2019-06-11 16:23:09.203519: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d42300 of size 256\r\n2019-06-11 16:23:09.203531: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d42400 of size 256\r\n2019-06-11 16:23:09.203543: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d42500 of size 256\r\n2019-06-11 16:23:09.203556: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d42600 of size 256\r\n2019-06-11 16:23:09.203568: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d42700 of size 256\r\n2019-06-11 16:23:09.203581: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d42800 of size 256\r\n2019-06-11 16:23:09.203593: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d42900 of size 256\r\n2019-06-11 16:23:09.203605: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d42a00 of size 256\r\n2019-06-11 16:23:09.203618: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d42b00 of size 256\r\n2019-06-11 16:23:09.203630: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d42c00 of size 256\r\n2019-06-11 16:23:09.203642: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d42d00 of size 256\r\n2019-06-11 16:23:09.203654: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d42e00 of size 256\r\n2019-06-11 16:23:09.203666: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d42f00 of size 256\r\n2019-06-11 16:23:09.203678: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d43000 of size 256\r\n2019-06-11 16:23:09.203701: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d43100 of size 256\r\n2019-06-11 16:23:09.203715: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d43200 of size 256\r\n2019-06-11 16:23:09.203727: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d43300 of size 256\r\n2019-06-11 16:23:09.203738: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d43400 of size 256\r\n2019-06-11 16:23:09.203750: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d43500 of size 256\r\n2019-06-11 16:23:09.203761: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d43600 of size 256\r\n2019-06-11 16:23:09.203773: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d43700 of size 256\r\n2019-06-11 16:23:09.203785: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d43800 of size 256\r\n2019-06-11 16:23:09.203798: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d43900 of size 256\r\n2019-06-11 16:23:09.203810: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d43a00 of size 256\r\n2019-06-11 16:23:09.203822: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d43b00 of size 256\r\n2019-06-11 16:23:09.203834: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d43c00 of size 256\r\n2019-06-11 16:23:09.203847: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d43d00 of size 256\r\n2019-06-11 16:23:09.203859: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d43e00 of size 512\r\n2019-06-11 16:23:09.203871: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d44000 of size 256\r\n2019-06-11 16:23:09.203884: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d44100 of size 256\r\n2019-06-11 16:23:09.203895: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d44200 of size 256\r\n2019-06-11 16:23:09.203908: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d44300 of size 256\r\n2019-06-11 16:23:09.203920: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d44400 of size 256\r\n2019-06-11 16:23:09.203932: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d44500 of size 256\r\n2019-06-11 16:23:09.203945: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d44600 of size 256\r\n2019-06-11 16:23:09.203957: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d44700 of size 256\r\n2019-06-11 16:23:09.203969: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d44800 of size 256\r\n2019-06-11 16:23:09.203980: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d44900 of size 256\r\n2019-06-11 16:23:09.203992: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d44a00 of size 256\r\n2019-06-11 16:23:09.204003: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d44b00 of size 256\r\n2019-06-11 16:23:09.204015: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d44c00 of size 256\r\n2019-06-11 16:23:09.204027: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d44d00 of size 256\r\n2019-06-11 16:23:09.204039: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d44e00 of size 256\r\n2019-06-11 16:23:09.204052: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d44f00 of size 256\r\n2019-06-11 16:23:09.204064: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d45000 of size 256\r\n2019-06-11 16:23:09.204076: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d45100 of size 256\r\n2019-06-11 16:23:09.204088: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d45200 of size 256\r\n2019-06-11 16:23:09.204101: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d45300 of size 256\r\n2019-06-11 16:23:09.204113: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d45400 of size 256\r\n2019-06-11 16:23:09.204125: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d45500 of size 256\r\n2019-06-11 16:23:09.204137: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d45600 of size 256\r\n2019-06-11 16:23:09.204167: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d45700 of size 256\r\n2019-06-11 16:23:09.204180: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d45800 of size 256\r\n2019-06-11 16:23:09.204192: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d45900 of size 256\r\n2019-06-11 16:23:09.204222: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d45a00 of size 256\r\n2019-06-11 16:23:09.204236: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d45b00 of size 256\r\n2019-06-11 16:23:09.204250: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d45c00 of size 256\r\n2019-06-11 16:23:09.204262: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d45d00 of size 256\r\n2019-06-11 16:23:09.204275: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d45e00 of size 256\r\n2019-06-11 16:23:09.204287: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d45f00 of size 256\r\n2019-06-11 16:23:09.204299: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d46000 of size 256\r\n2019-06-11 16:23:09.204312: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d46100 of size 256\r\n2019-06-11 16:23:09.204324: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d46200 of size 256\r\n2019-06-11 16:23:09.204337: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d46300 of size 256\r\n2019-06-11 16:23:09.204349: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d46400 of size 256\r\n2019-06-11 16:23:09.204362: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d46500 of size 256\r\n2019-06-11 16:23:09.204375: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d46600 of size 256\r\n2019-06-11 16:23:09.204399: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d46700 of size 256\r\n2019-06-11 16:23:09.204412: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d46800 of size 256\r\n2019-06-11 16:23:09.204424: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d46900 of size 256\r\n2019-06-11 16:23:09.204437: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d46a00 of size 1536\r\n2019-06-11 16:23:09.204450: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d47000 of size 256\r\n2019-06-11 16:23:09.204462: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d47100 of size 256\r\n2019-06-11 16:23:09.204474: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d47200 of size 256\r\n2019-06-11 16:23:09.204486: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d47300 of size 256\r\n2019-06-11 16:23:09.204498: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d47400 of size 256\r\n2019-06-11 16:23:09.204511: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d47500 of size 256\r\n2019-06-11 16:23:09.204524: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d47600 of size 256\r\n2019-06-11 16:23:09.204536: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d47700 of size 256\r\n2019-06-11 16:23:09.204548: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d47800 of size 256\r\n2019-06-11 16:23:09.204560: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d47900 of size 256\r\n2019-06-11 16:23:09.204571: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d47a00 of size 256\r\n2019-06-11 16:23:09.204583: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d47b00 of size 256\r\n2019-06-11 16:23:09.204595: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d47c00 of size 256\r\n2019-06-11 16:23:09.204607: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d47d00 of size 256\r\n2019-06-11 16:23:09.204619: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d47e00 of size 256\r\n2019-06-11 16:23:09.204632: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d47f00 of size 256\r\n2019-06-11 16:23:09.204644: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d48000 of size 256\r\n2019-06-11 16:23:09.204656: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d48100 of size 256\r\n2019-06-11 16:23:09.204668: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d48200 of size 256\r\n2019-06-11 16:23:09.204681: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d48300 of size 256\r\n2019-06-11 16:23:09.204703: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d48400 of size 256\r\n2019-06-11 16:23:09.204716: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d48500 of size 256\r\n2019-06-11 16:23:09.204728: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d48600 of size 768\r\n2019-06-11 16:23:09.204741: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d48900 of size 256\r\n2019-06-11 16:23:09.204753: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d48a00 of size 256\r\n2019-06-11 16:23:09.204766: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d48b00 of size 256\r\n2019-06-11 16:23:09.204778: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d48c00 of size 256\r\n2019-06-11 16:23:09.204790: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d48d00 of size 256\r\n2019-06-11 16:23:09.204802: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d48e00 of size 256\r\n2019-06-11 16:23:09.204814: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d48f00 of size 256\r\n2019-06-11 16:23:09.204825: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d49000 of size 256\r\n2019-06-11 16:23:09.204837: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d49100 of size 256\r\n2019-06-11 16:23:09.204849: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d49200 of size 256\r\n2019-06-11 16:23:09.204861: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d49300 of size 256\r\n2019-06-11 16:23:09.204874: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d49400 of size 256\r\n2019-06-11 16:23:09.204886: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d49500 of size 256\r\n2019-06-11 16:23:09.204898: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d49600 of size 256\r\n2019-06-11 16:23:09.204911: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d49700 of size 256\r\n2019-06-11 16:23:09.204922: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d49800 of size 256\r\n2019-06-11 16:23:09.204935: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d49900 of size 256\r\n2019-06-11 16:23:09.204947: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d49a00 of size 256\r\n2019-06-11 16:23:09.204959: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d49b00 of size 256\r\n2019-06-11 16:23:09.204971: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d49c00 of size 256\r\n2019-06-11 16:23:09.204983: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d49d00 of size 256\r\n2019-06-11 16:23:09.204995: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d49e00 of size 256\r\n2019-06-11 16:23:09.205008: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d49f00 of size 256\r\n2019-06-11 16:23:09.205020: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4a000 of size 256\r\n2019-06-11 16:23:09.205032: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4a100 of size 256\r\n2019-06-11 16:23:09.205044: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4a200 of size 256\r\n2019-06-11 16:23:09.205055: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4a300 of size 256\r\n2019-06-11 16:23:09.205067: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4a400 of size 256\r\n2019-06-11 16:23:09.205079: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4a500 of size 256\r\n2019-06-11 16:23:09.205091: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4a600 of size 256\r\n2019-06-11 16:23:09.205103: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4a700 of size 256\r\n2019-06-11 16:23:09.205115: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4a800 of size 256\r\n2019-06-11 16:23:09.205128: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4a900 of size 256\r\n2019-06-11 16:23:09.205140: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4aa00 of size 256\r\n2019-06-11 16:23:09.205171: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4ab00 of size 256\r\n2019-06-11 16:23:09.205183: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4ac00 of size 256\r\n2019-06-11 16:23:09.205196: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4ad00 of size 256\r\n2019-06-11 16:23:09.205208: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4ae00 of size 256\r\n2019-06-11 16:23:09.205220: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4af00 of size 256\r\n2019-06-11 16:23:09.205232: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4b000 of size 256\r\n2019-06-11 16:23:09.205245: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4b100 of size 256\r\n2019-06-11 16:23:09.205258: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4b200 of size 2048\r\n2019-06-11 16:23:09.205270: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4ba00 of size 256\r\n2019-06-11 16:23:09.205282: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4bb00 of size 256\r\n2019-06-11 16:23:09.205295: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4bc00 of size 256\r\n2019-06-11 16:23:09.205307: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4bd00 of size 256\r\n2019-06-11 16:23:09.205319: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4be00 of size 256\r\n2019-06-11 16:23:09.205331: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4bf00 of size 256\r\n2019-06-11 16:23:09.205343: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4c000 of size 256\r\n2019-06-11 16:23:09.205354: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4c100 of size 256\r\n2019-06-11 16:23:09.205367: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4c200 of size 256\r\n2019-06-11 16:23:09.205378: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4c300 of size 256\r\n2019-06-11 16:23:09.205391: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4c400 of size 256\r\n2019-06-11 16:23:09.205403: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4c500 of size 768\r\n2019-06-11 16:23:09.205416: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4c800 of size 768\r\n2019-06-11 16:23:09.205428: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4cb00 of size 768\r\n2019-06-11 16:23:09.205440: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39d4ce00 of size 1376256\r\n2019-06-11 16:23:09.205453: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39e9ce00 of size 768\r\n2019-06-11 16:23:09.205465: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39e9d100 of size 768\r\n2019-06-11 16:23:09.205478: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39e9d400 of size 768\r\n2019-06-11 16:23:09.205490: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39e9d700 of size 1376256\r\n2019-06-11 16:23:09.205503: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39fed700 of size 768\r\n2019-06-11 16:23:09.205515: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39feda00 of size 768\r\n2019-06-11 16:23:09.205527: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39fedd00 of size 768\r\n2019-06-11 16:23:09.205540: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e39fee000 of size 442368\r\n2019-06-11 16:23:09.205552: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a05a000 of size 768\r\n2019-06-11 16:23:09.205564: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a05a300 of size 768\r\n2019-06-11 16:23:09.205576: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a05a600 of size 768\r\n2019-06-11 16:23:09.205588: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a05a900 of size 442368\r\n2019-06-11 16:23:09.205599: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a0c6900 of size 7168\r\n2019-06-11 16:23:09.205612: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a0c8500 of size 2752512\r\n2019-06-11 16:23:09.205624: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a368500 of size 2048\r\n2019-06-11 16:23:09.205636: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a368d00 of size 2048\r\n2019-06-11 16:23:09.205648: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a369500 of size 2048\r\n2019-06-11 16:23:09.205661: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a369d00 of size 3670016\r\n2019-06-11 16:23:09.205674: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a6e9d00 of size 256\r\n2019-06-11 16:23:09.205695: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a6e9e00 of size 256\r\n2019-06-11 16:23:09.205709: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a6e9f00 of size 256\r\n2019-06-11 16:23:09.205722: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a6ea000 of size 3584\r\n2019-06-11 16:23:09.205734: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a6eae00 of size 256\r\n2019-06-11 16:23:09.205747: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a6eaf00 of size 256\r\n2019-06-11 16:23:09.205759: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a6eb000 of size 256\r\n2019-06-11 16:23:09.205771: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a6eb100 of size 36864\r\n2019-06-11 16:23:09.205784: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a6f4100 of size 256\r\n2019-06-11 16:23:09.205796: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a6f4200 of size 256\r\n2019-06-11 16:23:09.205809: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a6f4300 of size 256\r\n2019-06-11 16:23:09.205821: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a6f4400 of size 73728\r\n2019-06-11 16:23:09.205832: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a706400 of size 512\r\n2019-06-11 16:23:09.205844: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a706600 of size 512\r\n2019-06-11 16:23:09.205856: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a706800 of size 512\r\n2019-06-11 16:23:09.205868: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a706a00 of size 20480\r\n2019-06-11 16:23:09.205880: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a70ba00 of size 768\r\n2019-06-11 16:23:09.205893: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a70bd00 of size 768\r\n2019-06-11 16:23:09.205905: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a70c000 of size 768\r\n2019-06-11 16:23:09.205917: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a70c300 of size 552960\r\n2019-06-11 16:23:09.205930: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a793300 of size 1024\r\n2019-06-11 16:23:09.205942: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a793700 of size 1024\r\n2019-06-11 16:23:09.205954: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a793b00 of size 1024\r\n2019-06-11 16:23:09.205967: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a793f00 of size 1769472\r\n2019-06-11 16:23:09.205979: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a943f00 of size 256\r\n2019-06-11 16:23:09.205991: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a944000 of size 1536\r\n2019-06-11 16:23:09.206004: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a944600 of size 1536\r\n2019-06-11 16:23:09.206016: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a944c00 of size 1536\r\n2019-06-11 16:23:09.206031: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3a945200 of size 3538944\r\n2019-06-11 16:23:09.206044: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3aca5200 of size 768\r\n2019-06-11 16:23:09.206056: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3aca5500 of size 768\r\n2019-06-11 16:23:09.206068: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3aca5800 of size 768\r\n2019-06-11 16:23:09.206080: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3aca5b00 of size 196608\r\n2019-06-11 16:23:09.206092: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3acd5b00 of size 768\r\n2019-06-11 16:23:09.206104: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3acd5e00 of size 768\r\n2019-06-11 16:23:09.206116: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3acd6100 of size 768\r\n2019-06-11 16:23:09.206128: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3acd6400 of size 1327104\r\n2019-06-11 16:23:09.206141: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ae1a400 of size 1024\r\n2019-06-11 16:23:09.206172: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ae1a800 of size 1024\r\n2019-06-11 16:23:09.206185: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ae1ac00 of size 1024\r\n2019-06-11 16:23:09.206197: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ae1b000 of size 1769472\r\n2019-06-11 16:23:09.206209: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3afcb000 of size 1024\r\n2019-06-11 16:23:09.206221: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3afcb400 of size 1024\r\n2019-06-11 16:23:09.206234: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3afcb800 of size 1024\r\n2019-06-11 16:23:09.206246: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3afcbc00 of size 917504\r\n2019-06-11 16:23:09.206258: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3b0abc00 of size 1536\r\n2019-06-11 16:23:09.206271: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3b0ac200 of size 1536\r\n2019-06-11 16:23:09.206283: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3b0ac800 of size 1536\r\n2019-06-11 16:23:09.206295: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3b0ace00 of size 3538944\r\n2019-06-11 16:23:09.206308: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3b40ce00 of size 1024\r\n2019-06-11 16:23:09.206320: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3b40d200 of size 1024\r\n2019-06-11 16:23:09.206332: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3b40d600 of size 1024\r\n2019-06-11 16:23:09.206343: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3b40da00 of size 917504\r\n2019-06-11 16:23:09.206355: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3b4eda00 of size 1024\r\n2019-06-11 16:23:09.206366: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3b4ede00 of size 1024\r\n2019-06-11 16:23:09.206378: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3b4ee200 of size 1024\r\n2019-06-11 16:23:09.206391: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3b4ee600 of size 2359296\r\n2019-06-11 16:23:09.206403: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3b72e600 of size 1024\r\n2019-06-11 16:23:09.206415: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3b72ea00 of size 1024\r\n2019-06-11 16:23:09.206427: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3b72ee00 of size 1024\r\n2019-06-11 16:23:09.206440: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3b72f200 of size 917504\r\n2019-06-11 16:23:09.206452: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3b80f200 of size 1024\r\n2019-06-11 16:23:09.206463: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3b80f600 of size 1024\r\n2019-06-11 16:23:09.206475: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3b80fa00 of size 1024\r\n2019-06-11 16:23:09.206488: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3b80fe00 of size 2359296\r\n2019-06-11 16:23:09.206500: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ba4fe00 of size 1024\r\n2019-06-11 16:23:09.206512: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ba50200 of size 1024\r\n2019-06-11 16:23:09.206525: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ba50600 of size 1024\r\n2019-06-11 16:23:09.206537: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ba50a00 of size 2359296\r\n2019-06-11 16:23:09.206550: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bc90a00 of size 256\r\n2019-06-11 16:23:09.206562: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bc90b00 of size 256\r\n2019-06-11 16:23:09.206575: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bc90c00 of size 256\r\n2019-06-11 16:23:09.206588: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bc90d00 of size 32768\r\n2019-06-11 16:23:09.206600: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bc98d00 of size 256\r\n2019-06-11 16:23:09.206612: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bc98e00 of size 256\r\n2019-06-11 16:23:09.206623: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bc98f00 of size 256\r\n2019-06-11 16:23:09.206635: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bc99000 of size 32768\r\n2019-06-11 16:23:09.206647: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bca1000 of size 256\r\n2019-06-11 16:23:09.206659: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bca1100 of size 256\r\n2019-06-11 16:23:09.206671: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bca1200 of size 256\r\n2019-06-11 16:23:09.206684: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bca1300 of size 36864\r\n2019-06-11 16:23:09.206707: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcaa300 of size 256\r\n2019-06-11 16:23:09.206719: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcaa400 of size 256\r\n2019-06-11 16:23:09.206732: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcaa500 of size 256\r\n2019-06-11 16:23:09.206744: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcaa600 of size 32768\r\n2019-06-11 16:23:09.206757: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcb2600 of size 256\r\n2019-06-11 16:23:09.206769: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcb2700 of size 256\r\n2019-06-11 16:23:09.206781: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcb2800 of size 256\r\n2019-06-11 16:23:09.206793: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcb2900 of size 36864\r\n2019-06-11 16:23:09.206806: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcbb900 of size 256\r\n2019-06-11 16:23:09.206818: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcbba00 of size 256\r\n2019-06-11 16:23:09.206830: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcbbb00 of size 256\r\n2019-06-11 16:23:09.206842: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcbbc00 of size 36864\r\n2019-06-11 16:23:09.206855: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcc4c00 of size 1024\r\n2019-06-11 16:23:09.206867: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcc5000 of size 98304\r\n2019-06-11 16:23:09.206879: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcdd000 of size 256\r\n2019-06-11 16:23:09.206891: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcdd100 of size 256\r\n2019-06-11 16:23:09.206903: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcdd200 of size 256\r\n2019-06-11 16:23:09.206915: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcdd300 of size 32768\r\n2019-06-11 16:23:09.206927: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bce5300 of size 256\r\n2019-06-11 16:23:09.206939: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bce5400 of size 256\r\n2019-06-11 16:23:09.206952: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bce5500 of size 256\r\n2019-06-11 16:23:09.206964: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bce5600 of size 32768\r\n2019-06-11 16:23:09.206976: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bced600 of size 256\r\n2019-06-11 16:23:09.206988: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bced700 of size 256\r\n2019-06-11 16:23:09.207001: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bced800 of size 256\r\n2019-06-11 16:23:09.207013: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bced900 of size 36864\r\n2019-06-11 16:23:09.207025: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcf6900 of size 256\r\n2019-06-11 16:23:09.207037: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcf6a00 of size 256\r\n2019-06-11 16:23:09.207050: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcf6b00 of size 256\r\n2019-06-11 16:23:09.207062: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcf6c00 of size 32768\r\n2019-06-11 16:23:09.207075: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcfec00 of size 256\r\n2019-06-11 16:23:09.207087: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcfed00 of size 256\r\n2019-06-11 16:23:09.207099: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcfee00 of size 256\r\n2019-06-11 16:23:09.207111: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bcfef00 of size 36864\r\n2019-06-11 16:23:09.207122: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd07f00 of size 256\r\n2019-06-11 16:23:09.207134: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd08000 of size 256\r\n2019-06-11 16:23:09.207161: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd08100 of size 256\r\n2019-06-11 16:23:09.207174: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd08200 of size 36864\r\n2019-06-11 16:23:09.207187: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd11200 of size 1024\r\n2019-06-11 16:23:09.207200: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd11600 of size 98304\r\n2019-06-11 16:23:09.207212: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd29600 of size 256\r\n2019-06-11 16:23:09.207224: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd29700 of size 256\r\n2019-06-11 16:23:09.207236: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd29800 of size 256\r\n2019-06-11 16:23:09.207248: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd29900 of size 32768\r\n2019-06-11 16:23:09.207260: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd31900 of size 256\r\n2019-06-11 16:23:09.207273: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd31a00 of size 256\r\n2019-06-11 16:23:09.207284: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd31b00 of size 256\r\n2019-06-11 16:23:09.207296: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd31c00 of size 32768\r\n2019-06-11 16:23:09.207309: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd39c00 of size 256\r\n2019-06-11 16:23:09.207321: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd39d00 of size 256\r\n2019-06-11 16:23:09.207333: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd39e00 of size 256\r\n2019-06-11 16:23:09.207346: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd39f00 of size 36864\r\n2019-06-11 16:23:09.207358: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd42f00 of size 256\r\n2019-06-11 16:23:09.207370: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd43000 of size 256\r\n2019-06-11 16:23:09.207382: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd43100 of size 256\r\n2019-06-11 16:23:09.207394: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd43200 of size 32768\r\n2019-06-11 16:23:09.207406: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd4b200 of size 256\r\n2019-06-11 16:23:09.207417: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd4b300 of size 256\r\n2019-06-11 16:23:09.207429: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd4b400 of size 256\r\n2019-06-11 16:23:09.207441: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd4b500 of size 36864\r\n2019-06-11 16:23:09.207454: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd54500 of size 256\r\n2019-06-11 16:23:09.207466: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd54600 of size 256\r\n2019-06-11 16:23:09.207478: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd54700 of size 256\r\n2019-06-11 16:23:09.207491: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd54800 of size 36864\r\n2019-06-11 16:23:09.207503: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd5d800 of size 1024\r\n2019-06-11 16:23:09.207516: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd5dc00 of size 98304\r\n2019-06-11 16:23:09.207528: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd75c00 of size 256\r\n2019-06-11 16:23:09.207540: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd75d00 of size 256\r\n2019-06-11 16:23:09.207553: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd75e00 of size 256\r\n2019-06-11 16:23:09.207565: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd75f00 of size 32768\r\n2019-06-11 16:23:09.207577: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd7df00 of size 256\r\n2019-06-11 16:23:09.207590: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd7e000 of size 256\r\n2019-06-11 16:23:09.207602: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd7e100 of size 256\r\n2019-06-11 16:23:09.207614: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd7e200 of size 32768\r\n2019-06-11 16:23:09.207626: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd86200 of size 256\r\n2019-06-11 16:23:09.207637: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd86300 of size 256\r\n2019-06-11 16:23:09.207649: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd86400 of size 256\r\n2019-06-11 16:23:09.207661: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd86500 of size 36864\r\n2019-06-11 16:23:09.207673: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd8f500 of size 256\r\n2019-06-11 16:23:09.207685: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd8f600 of size 256\r\n2019-06-11 16:23:09.207707: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd8f700 of size 256\r\n2019-06-11 16:23:09.207720: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd8f800 of size 32768\r\n2019-06-11 16:23:09.207732: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd97800 of size 256\r\n2019-06-11 16:23:09.207744: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd97900 of size 256\r\n2019-06-11 16:23:09.207757: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd97a00 of size 256\r\n2019-06-11 16:23:09.207770: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bd97b00 of size 36864\r\n2019-06-11 16:23:09.207782: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bda0b00 of size 256\r\n2019-06-11 16:23:09.207795: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bda0c00 of size 256\r\n2019-06-11 16:23:09.207807: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bda0d00 of size 256\r\n2019-06-11 16:23:09.207820: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bda0e00 of size 36864\r\n2019-06-11 16:23:09.207833: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bda9e00 of size 1024\r\n2019-06-11 16:23:09.207845: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bdaa200 of size 98304\r\n2019-06-11 16:23:09.207857: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bdc2200 of size 256\r\n2019-06-11 16:23:09.207869: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bdc2300 of size 256\r\n2019-06-11 16:23:09.207880: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bdc2400 of size 256\r\n2019-06-11 16:23:09.207892: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bdc2500 of size 32768\r\n2019-06-11 16:23:09.207904: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bdca500 of size 256\r\n2019-06-11 16:23:09.207915: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bdca600 of size 256\r\n2019-06-11 16:23:09.207927: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bdca700 of size 256\r\n2019-06-11 16:23:09.207940: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bdca800 of size 32768\r\n2019-06-11 16:23:09.207952: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bdd2800 of size 256\r\n2019-06-11 16:23:09.207965: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bdd2900 of size 256\r\n2019-06-11 16:23:09.207977: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bdd2a00 of size 256\r\n2019-06-11 16:23:09.207989: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bdd2b00 of size 36864\r\n2019-06-11 16:23:09.208001: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bddbb00 of size 256\r\n2019-06-11 16:23:09.208014: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bddbc00 of size 256\r\n2019-06-11 16:23:09.208026: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bddbd00 of size 256\r\n2019-06-11 16:23:09.208038: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bddbe00 of size 32768\r\n2019-06-11 16:23:09.208050: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bde3e00 of size 256\r\n2019-06-11 16:23:09.208063: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bde3f00 of size 256\r\n2019-06-11 16:23:09.208075: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bde4000 of size 256\r\n2019-06-11 16:23:09.208087: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bde4100 of size 36864\r\n2019-06-11 16:23:09.208100: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bded100 of size 256\r\n2019-06-11 16:23:09.208112: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bded200 of size 256\r\n2019-06-11 16:23:09.208124: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bded300 of size 256\r\n2019-06-11 16:23:09.208135: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bded400 of size 36864\r\n2019-06-11 16:23:09.208164: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bdf6400 of size 1024\r\n2019-06-11 16:23:09.208177: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bdf6800 of size 98304\r\n2019-06-11 16:23:09.208189: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3be0e800 of size 512\r\n2019-06-11 16:23:09.208202: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3be0ea00 of size 512\r\n2019-06-11 16:23:09.208214: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3be0ec00 of size 512\r\n2019-06-11 16:23:09.208227: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3be0ee00 of size 458752\r\n2019-06-11 16:23:09.208239: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3be7ee00 of size 512\r\n2019-06-11 16:23:09.208252: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3be7f000 of size 512\r\n2019-06-11 16:23:09.208264: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3be7f200 of size 512\r\n2019-06-11 16:23:09.208276: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3be7f400 of size 458752\r\n2019-06-11 16:23:09.208289: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3beef400 of size 512\r\n2019-06-11 16:23:09.208301: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3beef600 of size 512\r\n2019-06-11 16:23:09.208313: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3beef800 of size 512\r\n2019-06-11 16:23:09.208326: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3beefa00 of size 458752\r\n2019-06-11 16:23:09.208338: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bf5fa00 of size 512\r\n2019-06-11 16:23:09.208350: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bf5fc00 of size 512\r\n2019-06-11 16:23:09.208362: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bf5fe00 of size 512\r\n2019-06-11 16:23:09.208376: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3bf60000 of size 655360\r\n2019-06-11 16:23:09.208388: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c000000 of size 1024\r\n2019-06-11 16:23:09.208400: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c000400 of size 1024\r\n2019-06-11 16:23:09.208412: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c000800 of size 1024\r\n2019-06-11 16:23:09.208423: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c000c00 of size 2359296\r\n2019-06-11 16:23:09.208435: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c240c00 of size 256\r\n2019-06-11 16:23:09.208447: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c240d00 of size 256\r\n2019-06-11 16:23:09.208459: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c240e00 of size 256\r\n2019-06-11 16:23:09.208471: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c240f00 of size 32768\r\n2019-06-11 16:23:09.208483: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c248f00 of size 256\r\n2019-06-11 16:23:09.208496: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c249000 of size 256\r\n2019-06-11 16:23:09.208508: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c249100 of size 256\r\n2019-06-11 16:23:09.208521: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c249200 of size 32768\r\n2019-06-11 16:23:09.208533: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c251200 of size 256\r\n2019-06-11 16:23:09.208546: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c251300 of size 256\r\n2019-06-11 16:23:09.208558: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c251400 of size 256\r\n2019-06-11 16:23:09.208570: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c251500 of size 36864\r\n2019-06-11 16:23:09.208582: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c25a500 of size 256\r\n2019-06-11 16:23:09.208595: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c25a600 of size 256\r\n2019-06-11 16:23:09.208608: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c25a700 of size 256\r\n2019-06-11 16:23:09.208620: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c25a800 of size 32768\r\n2019-06-11 16:23:09.208632: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c262800 of size 256\r\n2019-06-11 16:23:09.208644: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c262900 of size 256\r\n2019-06-11 16:23:09.208656: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c262a00 of size 256\r\n2019-06-11 16:23:09.208668: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c262b00 of size 36864\r\n2019-06-11 16:23:09.208680: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c26bb00 of size 256\r\n2019-06-11 16:23:09.208701: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c26bc00 of size 256\r\n2019-06-11 16:23:09.208714: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c26bd00 of size 256\r\n2019-06-11 16:23:09.208727: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c26be00 of size 36864\r\n2019-06-11 16:23:09.208739: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c274e00 of size 1024\r\n2019-06-11 16:23:09.208752: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c275200 of size 98304\r\n2019-06-11 16:23:09.208764: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c28d200 of size 256\r\n2019-06-11 16:23:09.208777: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c28d300 of size 256\r\n2019-06-11 16:23:09.208789: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c28d400 of size 256\r\n2019-06-11 16:23:09.208801: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c28d500 of size 32768\r\n2019-06-11 16:23:09.208814: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c295500 of size 256\r\n2019-06-11 16:23:09.208826: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c295600 of size 256\r\n2019-06-11 16:23:09.208838: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c295700 of size 256\r\n2019-06-11 16:23:09.208851: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c295800 of size 32768\r\n2019-06-11 16:23:09.208864: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c29d800 of size 256\r\n2019-06-11 16:23:09.208876: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c29d900 of size 256\r\n2019-06-11 16:23:09.208888: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c29da00 of size 256\r\n2019-06-11 16:23:09.208899: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c29db00 of size 36864\r\n2019-06-11 16:23:09.208910: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2a6b00 of size 256\r\n2019-06-11 16:23:09.208922: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2a6c00 of size 256\r\n2019-06-11 16:23:09.208934: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2a6d00 of size 256\r\n2019-06-11 16:23:09.208946: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2a6e00 of size 32768\r\n2019-06-11 16:23:09.208959: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2aee00 of size 256\r\n2019-06-11 16:23:09.208971: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2aef00 of size 256\r\n2019-06-11 16:23:09.208983: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2af000 of size 256\r\n2019-06-11 16:23:09.208996: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2af100 of size 36864\r\n2019-06-11 16:23:09.209008: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2b8100 of size 256\r\n2019-06-11 16:23:09.209020: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2b8200 of size 256\r\n2019-06-11 16:23:09.209033: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2b8300 of size 256\r\n2019-06-11 16:23:09.209045: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2b8400 of size 36864\r\n2019-06-11 16:23:09.209058: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2c1400 of size 1024\r\n2019-06-11 16:23:09.209070: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2c1800 of size 98304\r\n2019-06-11 16:23:09.209082: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2d9800 of size 256\r\n2019-06-11 16:23:09.209095: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2d9900 of size 256\r\n2019-06-11 16:23:09.209107: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2d9a00 of size 256\r\n2019-06-11 16:23:09.209119: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2d9b00 of size 32768\r\n2019-06-11 16:23:09.209132: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2e1b00 of size 256\r\n2019-06-11 16:23:09.209159: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2e1c00 of size 256\r\n2019-06-11 16:23:09.209172: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2e1d00 of size 256\r\n2019-06-11 16:23:09.209184: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2e1e00 of size 32768\r\n2019-06-11 16:23:09.209196: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2e9e00 of size 256\r\n2019-06-11 16:23:09.209209: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2e9f00 of size 256\r\n2019-06-11 16:23:09.209221: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2ea000 of size 256\r\n2019-06-11 16:23:09.209233: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2ea100 of size 36864\r\n2019-06-11 16:23:09.209245: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2f3100 of size 256\r\n2019-06-11 16:23:09.209257: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2f3200 of size 256\r\n2019-06-11 16:23:09.209270: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2f3300 of size 256\r\n2019-06-11 16:23:09.209281: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2f3400 of size 32768\r\n2019-06-11 16:23:09.209294: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2fb400 of size 256\r\n2019-06-11 16:23:09.209306: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2fb500 of size 256\r\n2019-06-11 16:23:09.209318: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2fb600 of size 256\r\n2019-06-11 16:23:09.209331: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c2fb700 of size 36864\r\n2019-06-11 16:23:09.209342: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c304700 of size 256\r\n2019-06-11 16:23:09.209355: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c304800 of size 256\r\n2019-06-11 16:23:09.209367: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c304900 of size 256\r\n2019-06-11 16:23:09.209379: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c304a00 of size 36864\r\n2019-06-11 16:23:09.209392: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c30da00 of size 1024\r\n2019-06-11 16:23:09.209405: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c30de00 of size 98304\r\n2019-06-11 16:23:09.209417: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c325e00 of size 256\r\n2019-06-11 16:23:09.209430: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c325f00 of size 256\r\n2019-06-11 16:23:09.209441: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c326000 of size 256\r\n2019-06-11 16:23:09.209453: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c326100 of size 32768\r\n2019-06-11 16:23:09.209464: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c32e100 of size 256\r\n2019-06-11 16:23:09.209476: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c32e200 of size 256\r\n2019-06-11 16:23:09.209488: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c32e300 of size 256\r\n2019-06-11 16:23:09.209500: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c32e400 of size 32768\r\n2019-06-11 16:23:09.209512: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c336400 of size 256\r\n2019-06-11 16:23:09.209525: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c336500 of size 256\r\n2019-06-11 16:23:09.209537: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c336600 of size 256\r\n2019-06-11 16:23:09.209549: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c336700 of size 36864\r\n2019-06-11 16:23:09.209562: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c33f700 of size 256\r\n2019-06-11 16:23:09.209574: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c33f800 of size 256\r\n2019-06-11 16:23:09.209586: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c33f900 of size 256\r\n2019-06-11 16:23:09.209598: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c33fa00 of size 32768\r\n2019-06-11 16:23:09.209611: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c347a00 of size 256\r\n2019-06-11 16:23:09.209623: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c347b00 of size 256\r\n2019-06-11 16:23:09.209635: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c347c00 of size 256\r\n2019-06-11 16:23:09.209648: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c347d00 of size 36864\r\n2019-06-11 16:23:09.209661: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c350d00 of size 256\r\n2019-06-11 16:23:09.209673: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c350e00 of size 256\r\n2019-06-11 16:23:09.209684: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c350f00 of size 256\r\n2019-06-11 16:23:09.209707: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c351000 of size 36864\r\n2019-06-11 16:23:09.209719: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c35a000 of size 1024\r\n2019-06-11 16:23:09.209731: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c35a400 of size 98304\r\n2019-06-11 16:23:09.209743: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c372400 of size 256\r\n2019-06-11 16:23:09.209756: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c372500 of size 256\r\n2019-06-11 16:23:09.209768: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c372600 of size 256\r\n2019-06-11 16:23:09.209780: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c372700 of size 32768\r\n2019-06-11 16:23:09.209792: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c37a700 of size 256\r\n2019-06-11 16:23:09.209805: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c37a800 of size 256\r\n2019-06-11 16:23:09.209817: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c37a900 of size 256\r\n2019-06-11 16:23:09.209830: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c37aa00 of size 32768\r\n2019-06-11 16:23:09.209842: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c382a00 of size 256\r\n2019-06-11 16:23:09.209854: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c382b00 of size 256\r\n2019-06-11 16:23:09.209866: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c382c00 of size 256\r\n2019-06-11 16:23:09.209879: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c382d00 of size 36864\r\n2019-06-11 16:23:09.209891: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c38bd00 of size 256\r\n2019-06-11 16:23:09.209904: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c38be00 of size 256\r\n2019-06-11 16:23:09.209916: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c38bf00 of size 256\r\n2019-06-11 16:23:09.209928: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c38c000 of size 32768\r\n2019-06-11 16:23:09.209940: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c394000 of size 256\r\n2019-06-11 16:23:09.209951: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c394100 of size 256\r\n2019-06-11 16:23:09.209963: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c394200 of size 256\r\n2019-06-11 16:23:09.209976: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c394300 of size 36864\r\n2019-06-11 16:23:09.209988: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c39d300 of size 256\r\n2019-06-11 16:23:09.210000: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c39d400 of size 256\r\n2019-06-11 16:23:09.210012: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c39d500 of size 256\r\n2019-06-11 16:23:09.210025: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c39d600 of size 36864\r\n2019-06-11 16:23:09.210037: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c3a6600 of size 1024\r\n2019-06-11 16:23:09.210050: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c3a6a00 of size 98304\r\n2019-06-11 16:23:09.210062: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c3bea00 of size 512\r\n2019-06-11 16:23:09.210075: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c3bec00 of size 512\r\n2019-06-11 16:23:09.210087: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c3bee00 of size 512\r\n2019-06-11 16:23:09.210099: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c3bf000 of size 458752\r\n2019-06-11 16:23:09.210111: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c42f000 of size 512\r\n2019-06-11 16:23:09.210124: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c42f200 of size 512\r\n2019-06-11 16:23:09.210136: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c42f400 of size 512\r\n2019-06-11 16:23:09.210167: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c42f600 of size 458752\r\n2019-06-11 16:23:09.210180: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c49f600 of size 512\r\n2019-06-11 16:23:09.210193: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c49f800 of size 512\r\n2019-06-11 16:23:09.210205: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c49fa00 of size 512\r\n2019-06-11 16:23:09.210216: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c49fc00 of size 458752\r\n2019-06-11 16:23:09.210228: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c50fc00 of size 512\r\n2019-06-11 16:23:09.210239: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c50fe00 of size 512\r\n2019-06-11 16:23:09.210251: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c510000 of size 512\r\n2019-06-11 16:23:09.210263: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c510200 of size 458752\r\n2019-06-11 16:23:09.210275: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c580200 of size 3584\r\n2019-06-11 16:23:09.210288: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c581000 of size 917504\r\n2019-06-11 16:23:09.210301: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c661000 of size 512\r\n2019-06-11 16:23:09.210312: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c661200 of size 512\r\n2019-06-11 16:23:09.210324: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c661400 of size 512\r\n2019-06-11 16:23:09.210337: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c661600 of size 458752\r\n2019-06-11 16:23:09.210349: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c6d1600 of size 512\r\n2019-06-11 16:23:09.210361: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c6d1800 of size 512\r\n2019-06-11 16:23:09.210373: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c6d1a00 of size 512\r\n2019-06-11 16:23:09.210385: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c6d1c00 of size 458752\r\n2019-06-11 16:23:09.210397: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c741c00 of size 512\r\n2019-06-11 16:23:09.210409: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c741e00 of size 512\r\n2019-06-11 16:23:09.210422: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c742000 of size 512\r\n2019-06-11 16:23:09.210434: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c742200 of size 458752\r\n2019-06-11 16:23:09.210447: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c7b2200 of size 512\r\n2019-06-11 16:23:09.210459: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c7b2400 of size 512\r\n2019-06-11 16:23:09.210470: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c7b2600 of size 512\r\n2019-06-11 16:23:09.210482: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c7b2800 of size 458752\r\n2019-06-11 16:23:09.210494: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c822800 of size 3584\r\n2019-06-11 16:23:09.210506: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c823600 of size 917504\r\n2019-06-11 16:23:09.210518: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c903600 of size 512\r\n2019-06-11 16:23:09.210531: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c903800 of size 512\r\n2019-06-11 16:23:09.210543: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c903a00 of size 512\r\n2019-06-11 16:23:09.210555: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c903c00 of size 458752\r\n2019-06-11 16:23:09.210567: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c973c00 of size 512\r\n2019-06-11 16:23:09.210579: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c973e00 of size 512\r\n2019-06-11 16:23:09.210592: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c974000 of size 512\r\n2019-06-11 16:23:09.210605: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c974200 of size 458752\r\n2019-06-11 16:23:09.210617: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c9e4200 of size 512\r\n2019-06-11 16:23:09.210629: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c9e4400 of size 512\r\n2019-06-11 16:23:09.210641: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c9e4600 of size 512\r\n2019-06-11 16:23:09.210653: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3c9e4800 of size 458752\r\n2019-06-11 16:23:09.210666: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ca54800 of size 512\r\n2019-06-11 16:23:09.210678: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ca54a00 of size 512\r\n2019-06-11 16:23:09.210700: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ca54c00 of size 512\r\n2019-06-11 16:23:09.210713: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ca54e00 of size 458752\r\n2019-06-11 16:23:09.210725: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cac4e00 of size 3584\r\n2019-06-11 16:23:09.210737: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cac5c00 of size 917504\r\n2019-06-11 16:23:09.210749: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cba5c00 of size 512\r\n2019-06-11 16:23:09.210761: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cba5e00 of size 512\r\n2019-06-11 16:23:09.210773: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cba6000 of size 512\r\n2019-06-11 16:23:09.210785: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cba6200 of size 458752\r\n2019-06-11 16:23:09.210798: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cc16200 of size 512\r\n2019-06-11 16:23:09.210810: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cc16400 of size 512\r\n2019-06-11 16:23:09.210822: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cc16600 of size 512\r\n2019-06-11 16:23:09.210835: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cc16800 of size 458752\r\n2019-06-11 16:23:09.210848: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cc86800 of size 512\r\n2019-06-11 16:23:09.210877: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cc86a00 of size 512\r\n2019-06-11 16:23:09.210890: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cc86c00 of size 512\r\n2019-06-11 16:23:09.210903: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cc86e00 of size 458752\r\n2019-06-11 16:23:09.210917: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ccf6e00 of size 512\r\n2019-06-11 16:23:09.210930: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ccf7000 of size 512\r\n2019-06-11 16:23:09.210944: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ccf7200 of size 512\r\n2019-06-11 16:23:09.210957: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ccf7400 of size 458752\r\n2019-06-11 16:23:09.210970: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cd67400 of size 3584\r\n2019-06-11 16:23:09.210982: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cd68200 of size 917504\r\n2019-06-11 16:23:09.210995: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ce48200 of size 512\r\n2019-06-11 16:23:09.211007: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ce48400 of size 512\r\n2019-06-11 16:23:09.211020: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ce48600 of size 512\r\n2019-06-11 16:23:09.211033: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ce48800 of size 458752\r\n2019-06-11 16:23:09.211046: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ceb8800 of size 512\r\n2019-06-11 16:23:09.211059: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ceb8a00 of size 512\r\n2019-06-11 16:23:09.211072: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ceb8c00 of size 512\r\n2019-06-11 16:23:09.211085: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ceb8e00 of size 458752\r\n2019-06-11 16:23:09.211098: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cf28e00 of size 512\r\n2019-06-11 16:23:09.211112: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cf29000 of size 512\r\n2019-06-11 16:23:09.211125: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cf29200 of size 512\r\n2019-06-11 16:23:09.211138: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cf29400 of size 458752\r\n2019-06-11 16:23:09.211170: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cf99400 of size 512\r\n2019-06-11 16:23:09.211184: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cf99600 of size 512\r\n2019-06-11 16:23:09.211197: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cf99800 of size 512\r\n2019-06-11 16:23:09.211211: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3cf99a00 of size 458752\r\n2019-06-11 16:23:09.211224: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d009a00 of size 3584\r\n2019-06-11 16:23:09.211237: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d00a800 of size 917504\r\n2019-06-11 16:23:09.211250: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d0ea800 of size 512\r\n2019-06-11 16:23:09.211263: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d0eaa00 of size 512\r\n2019-06-11 16:23:09.211275: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d0eac00 of size 512\r\n2019-06-11 16:23:09.211288: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d0eae00 of size 458752\r\n2019-06-11 16:23:09.211300: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d15ae00 of size 512\r\n2019-06-11 16:23:09.211313: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d15b000 of size 512\r\n2019-06-11 16:23:09.211326: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d15b200 of size 512\r\n2019-06-11 16:23:09.211338: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d15b400 of size 458752\r\n2019-06-11 16:23:09.211352: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d1cb400 of size 512\r\n2019-06-11 16:23:09.211365: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d1cb600 of size 512\r\n2019-06-11 16:23:09.211378: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d1cb800 of size 512\r\n2019-06-11 16:23:09.211391: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d1cba00 of size 458752\r\n2019-06-11 16:23:09.211404: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d23ba00 of size 512\r\n2019-06-11 16:23:09.211417: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d23bc00 of size 512\r\n2019-06-11 16:23:09.211430: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d23be00 of size 512\r\n2019-06-11 16:23:09.211461: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d23c000 of size 458752\r\n2019-06-11 16:23:09.211476: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d2ac000 of size 3584\r\n2019-06-11 16:23:09.211490: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d2ace00 of size 917504\r\n2019-06-11 16:23:09.211503: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d38ce00 of size 512\r\n2019-06-11 16:23:09.211518: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d38d000 of size 512\r\n2019-06-11 16:23:09.211544: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d38d200 of size 512\r\n2019-06-11 16:23:09.211557: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d38d400 of size 458752\r\n2019-06-11 16:23:09.211569: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d3fd400 of size 512\r\n2019-06-11 16:23:09.211581: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d3fd600 of size 512\r\n2019-06-11 16:23:09.211594: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d3fd800 of size 512\r\n2019-06-11 16:23:09.211606: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d3fda00 of size 458752\r\n2019-06-11 16:23:09.211619: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d46da00 of size 512\r\n2019-06-11 16:23:09.211632: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d46dc00 of size 512\r\n2019-06-11 16:23:09.211646: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d46de00 of size 512\r\n2019-06-11 16:23:09.211659: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d46e000 of size 458752\r\n2019-06-11 16:23:09.211673: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d4de000 of size 512\r\n2019-06-11 16:23:09.211686: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d4de200 of size 512\r\n2019-06-11 16:23:09.211710: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d4de400 of size 512\r\n2019-06-11 16:23:09.211723: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d4de600 of size 458752\r\n2019-06-11 16:23:09.211736: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d54e600 of size 3584\r\n2019-06-11 16:23:09.211750: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d54f400 of size 917504\r\n2019-06-11 16:23:09.211763: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d62f400 of size 512\r\n2019-06-11 16:23:09.211776: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d62f600 of size 512\r\n2019-06-11 16:23:09.211790: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d62f800 of size 512\r\n2019-06-11 16:23:09.211803: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d62fa00 of size 458752\r\n2019-06-11 16:23:09.211816: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d69fa00 of size 512\r\n2019-06-11 16:23:09.211829: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d69fc00 of size 512\r\n2019-06-11 16:23:09.211852: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d69fe00 of size 512\r\n2019-06-11 16:23:09.211863: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d6a0000 of size 458752\r\n2019-06-11 16:23:09.211875: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d710000 of size 512\r\n2019-06-11 16:23:09.211888: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d710200 of size 512\r\n2019-06-11 16:23:09.211899: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d710400 of size 512\r\n2019-06-11 16:23:09.211912: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d710600 of size 458752\r\n2019-06-11 16:23:09.211924: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d780600 of size 512\r\n2019-06-11 16:23:09.211937: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d780800 of size 512\r\n2019-06-11 16:23:09.211949: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d780a00 of size 512\r\n2019-06-11 16:23:09.211961: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d780c00 of size 458752\r\n2019-06-11 16:23:09.211974: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d7f0c00 of size 3584\r\n2019-06-11 16:23:09.211987: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d7f1a00 of size 917504\r\n2019-06-11 16:23:09.211999: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d8d1a00 of size 512\r\n2019-06-11 16:23:09.212011: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d8d1c00 of size 512\r\n2019-06-11 16:23:09.212024: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d8d1e00 of size 512\r\n2019-06-11 16:23:09.212036: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d8d2000 of size 458752\r\n2019-06-11 16:23:09.212048: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d942000 of size 512\r\n2019-06-11 16:23:09.212061: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d942200 of size 512\r\n2019-06-11 16:23:09.212073: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d942400 of size 512\r\n2019-06-11 16:23:09.212085: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d942600 of size 458752\r\n2019-06-11 16:23:09.212097: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d9b2600 of size 512\r\n2019-06-11 16:23:09.212108: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d9b2800 of size 512\r\n2019-06-11 16:23:09.212120: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d9b2a00 of size 512\r\n2019-06-11 16:23:09.212132: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3d9b2c00 of size 458752\r\n2019-06-11 16:23:09.212159: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3da22c00 of size 512\r\n2019-06-11 16:23:09.212173: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3da22e00 of size 512\r\n2019-06-11 16:23:09.212185: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3da23000 of size 512\r\n2019-06-11 16:23:09.212199: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3da23200 of size 458752\r\n2019-06-11 16:23:09.212211: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3da93200 of size 3584\r\n2019-06-11 16:23:09.212223: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3da94000 of size 917504\r\n2019-06-11 16:23:09.212235: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3db74000 of size 512\r\n2019-06-11 16:23:09.212248: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3db74200 of size 512\r\n2019-06-11 16:23:09.212260: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3db74400 of size 512\r\n2019-06-11 16:23:09.212272: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3db74600 of size 458752\r\n2019-06-11 16:23:09.212284: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3dbe4600 of size 512\r\n2019-06-11 16:23:09.212297: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3dbe4800 of size 512\r\n2019-06-11 16:23:09.212309: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3dbe4a00 of size 512\r\n2019-06-11 16:23:09.212322: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3dbe4c00 of size 458752\r\n2019-06-11 16:23:09.212335: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3dc54c00 of size 512\r\n2019-06-11 16:23:09.212347: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3dc54e00 of size 512\r\n2019-06-11 16:23:09.212359: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3dc55000 of size 512\r\n2019-06-11 16:23:09.212370: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3dc55200 of size 458752\r\n2019-06-11 16:23:09.212382: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3dcc5200 of size 512\r\n2019-06-11 16:23:09.212393: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3dcc5400 of size 512\r\n2019-06-11 16:23:09.212405: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3dcc5600 of size 512\r\n2019-06-11 16:23:09.212417: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3dcc5800 of size 458752\r\n2019-06-11 16:23:09.212429: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3dd35800 of size 3584\r\n2019-06-11 16:23:09.212442: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3dd36600 of size 917504\r\n2019-06-11 16:23:09.212454: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3de16600 of size 768\r\n2019-06-11 16:23:09.212466: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3de16900 of size 768\r\n2019-06-11 16:23:09.212478: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3de16c00 of size 768\r\n2019-06-11 16:23:09.212491: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3de16f00 of size 2003200\r\n2019-06-11 16:23:09.212505: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e000000 of size 2048\r\n2019-06-11 16:23:09.212517: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e000800 of size 2048\r\n2019-06-11 16:23:09.212529: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e001000 of size 2048\r\n2019-06-11 16:23:09.212541: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e001800 of size 3670016\r\n2019-06-11 16:23:09.212554: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e381800 of size 256\r\n2019-06-11 16:23:09.212567: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e381900 of size 256\r\n2019-06-11 16:23:09.212579: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e381a00 of size 256\r\n2019-06-11 16:23:09.212591: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e381b00 of size 3584\r\n2019-06-11 16:23:09.212604: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e382900 of size 256\r\n2019-06-11 16:23:09.212615: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e382a00 of size 256\r\n2019-06-11 16:23:09.212627: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e382b00 of size 256\r\n2019-06-11 16:23:09.212639: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e382c00 of size 36864\r\n2019-06-11 16:23:09.212651: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e38bc00 of size 256\r\n2019-06-11 16:23:09.212663: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e38bd00 of size 256\r\n2019-06-11 16:23:09.212675: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e38be00 of size 256\r\n2019-06-11 16:23:09.212696: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e38bf00 of size 73728\r\n2019-06-11 16:23:09.212710: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e39df00 of size 512\r\n2019-06-11 16:23:09.212723: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e39e100 of size 512\r\n2019-06-11 16:23:09.212735: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e39e300 of size 512\r\n2019-06-11 16:23:09.212747: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e39e500 of size 20480\r\n2019-06-11 16:23:09.212760: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e3a3500 of size 768\r\n2019-06-11 16:23:09.212772: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e3a3800 of size 768\r\n2019-06-11 16:23:09.212784: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e3a3b00 of size 768\r\n2019-06-11 16:23:09.212796: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e3a3e00 of size 552960\r\n2019-06-11 16:23:09.212809: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e42ae00 of size 1024\r\n2019-06-11 16:23:09.212821: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e42b200 of size 1024\r\n2019-06-11 16:23:09.212834: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e42b600 of size 1024\r\n2019-06-11 16:23:09.212846: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e42ba00 of size 1769472\r\n2019-06-11 16:23:09.212858: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e5dba00 of size 256\r\n2019-06-11 16:23:09.212870: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e5dbb00 of size 1536\r\n2019-06-11 16:23:09.212881: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e5dc100 of size 1536\r\n2019-06-11 16:23:09.212894: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e5dc700 of size 1536\r\n2019-06-11 16:23:09.212906: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e5dcd00 of size 768\r\n2019-06-11 16:23:09.212918: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e5dd000 of size 768\r\n2019-06-11 16:23:09.212931: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e5dd300 of size 768\r\n2019-06-11 16:23:09.212943: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e5dd600 of size 196608\r\n2019-06-11 16:23:09.212956: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e60d600 of size 768\r\n2019-06-11 16:23:09.212968: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e60d900 of size 768\r\n2019-06-11 16:23:09.212980: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e60dc00 of size 768\r\n2019-06-11 16:23:09.212993: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e60df00 of size 2040064\r\n2019-06-11 16:23:09.213006: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3e800000 of size 3538944\r\n2019-06-11 16:23:09.213019: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3eb60000 of size 1024\r\n2019-06-11 16:23:09.213031: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3eb60400 of size 1024\r\n2019-06-11 16:23:09.213043: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3eb60800 of size 1024\r\n2019-06-11 16:23:09.213056: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3eb60c00 of size 1769472\r\n2019-06-11 16:23:09.213069: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ed10c00 of size 1024\r\n2019-06-11 16:23:09.213081: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ed11000 of size 1024\r\n2019-06-11 16:23:09.213093: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ed11400 of size 1024\r\n2019-06-11 16:23:09.213105: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3ed11800 of size 917504\r\n2019-06-11 16:23:09.213116: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3edf1800 of size 1536\r\n2019-06-11 16:23:09.213128: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3edf1e00 of size 1536\r\n2019-06-11 16:23:09.213141: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3edf2400 of size 1536\r\n2019-06-11 16:23:09.213170: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3edf2a00 of size 3538944\r\n2019-06-11 16:23:09.213183: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3f152a00 of size 1024\r\n2019-06-11 16:23:09.213195: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3f152e00 of size 1024\r\n2019-06-11 16:23:09.213208: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3f153200 of size 1024\r\n2019-06-11 16:23:09.213220: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3f153600 of size 917504\r\n2019-06-11 16:23:09.213232: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3f233600 of size 1024\r\n2019-06-11 16:23:09.213243: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3f233a00 of size 1024\r\n2019-06-11 16:23:09.213256: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3f233e00 of size 1024\r\n2019-06-11 16:23:09.213268: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3f234200 of size 2359296\r\n2019-06-11 16:23:09.213280: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3f474200 of size 1024\r\n2019-06-11 16:23:09.213292: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3f474600 of size 1024\r\n2019-06-11 16:23:09.213304: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3f474a00 of size 1024\r\n2019-06-11 16:23:09.213317: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3f474e00 of size 917504\r\n2019-06-11 16:23:09.213329: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3f554e00 of size 1024\r\n2019-06-11 16:23:09.213341: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3f555200 of size 1024\r\n2019-06-11 16:23:09.213353: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3f555600 of size 1024\r\n2019-06-11 16:23:09.213366: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e3f555a00 of size 2795008\r\n2019-06-11 16:23:09.213379: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e41200000 of size 2097152\r\n2019-06-11 16:23:09.213391: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e41400000 of size 1376256\r\n2019-06-11 16:23:09.213403: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e41550000 of size 7168\r\n2019-06-11 16:23:09.213415: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e41551c00 of size 2810880\r\n2019-06-11 16:23:09.213427: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47400000 of size 256\r\n2019-06-11 16:23:09.213440: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47400100 of size 256\r\n2019-06-11 16:23:09.213452: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47400200 of size 256\r\n2019-06-11 16:23:09.213464: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47400300 of size 256\r\n2019-06-11 16:23:09.213476: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47400400 of size 256\r\n2019-06-11 16:23:09.213488: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47400500 of size 256\r\n2019-06-11 16:23:09.213501: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47400600 of size 256\r\n2019-06-11 16:23:09.213513: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47400700 of size 256\r\n2019-06-11 16:23:09.213525: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47400800 of size 512\r\n2019-06-11 16:23:09.213537: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47400a00 of size 256\r\n2019-06-11 16:23:09.213550: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47400b00 of size 256\r\n2019-06-11 16:23:09.213562: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47400c00 of size 768\r\n2019-06-11 16:23:09.213575: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47400f00 of size 256\r\n2019-06-11 16:23:09.213587: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47401000 of size 256\r\n2019-06-11 16:23:09.213600: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47401100 of size 1024\r\n2019-06-11 16:23:09.213612: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47401500 of size 256\r\n2019-06-11 16:23:09.213624: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47401600 of size 256\r\n2019-06-11 16:23:09.213635: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47401700 of size 256\r\n2019-06-11 16:23:09.213647: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47401800 of size 256\r\n2019-06-11 16:23:09.213659: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47401900 of size 256\r\n2019-06-11 16:23:09.213671: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47401a00 of size 256\r\n2019-06-11 16:23:09.213683: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47401b00 of size 256\r\n2019-06-11 16:23:09.213706: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47401c00 of size 256\r\n2019-06-11 16:23:09.213719: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47401d00 of size 256\r\n2019-06-11 16:23:09.213731: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47401e00 of size 256\r\n2019-06-11 16:23:09.213743: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47401f00 of size 256\r\n2019-06-11 16:23:09.213755: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47402000 of size 256\r\n2019-06-11 16:23:09.213768: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47402100 of size 256\r\n2019-06-11 16:23:09.213780: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47402200 of size 256\r\n2019-06-11 16:23:09.213792: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47402300 of size 256\r\n2019-06-11 16:23:09.213805: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47402400 of size 256\r\n2019-06-11 16:23:09.213817: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47402500 of size 256\r\n2019-06-11 16:23:09.213829: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47402600 of size 256\r\n2019-06-11 16:23:09.213842: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47402700 of size 256\r\n2019-06-11 16:23:09.213854: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47402800 of size 256\r\n2019-06-11 16:23:09.213867: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47402900 of size 256\r\n2019-06-11 16:23:09.213879: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47402a00 of size 256\r\n2019-06-11 16:23:09.213890: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47402b00 of size 256\r\n2019-06-11 16:23:09.213902: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47402c00 of size 256\r\n2019-06-11 16:23:09.213914: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47402d00 of size 256\r\n2019-06-11 16:23:09.213926: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47402e00 of size 256\r\n2019-06-11 16:23:09.213939: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47402f00 of size 256\r\n2019-06-11 16:23:09.213951: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47403000 of size 256\r\n2019-06-11 16:23:09.213964: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47403100 of size 256\r\n2019-06-11 16:23:09.213976: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47403200 of size 256\r\n2019-06-11 16:23:09.213988: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47403300 of size 256\r\n2019-06-11 16:23:09.214001: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47403400 of size 256\r\n2019-06-11 16:23:09.214013: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47403500 of size 256\r\n2019-06-11 16:23:09.214025: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47403600 of size 256\r\n2019-06-11 16:23:09.214037: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47403700 of size 256\r\n2019-06-11 16:23:09.214050: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47403800 of size 256\r\n2019-06-11 16:23:09.214062: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47403900 of size 256\r\n2019-06-11 16:23:09.214075: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47403a00 of size 256\r\n2019-06-11 16:23:09.214087: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47403b00 of size 256\r\n2019-06-11 16:23:09.214099: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47403c00 of size 256\r\n2019-06-11 16:23:09.214111: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47403d00 of size 256\r\n2019-06-11 16:23:09.214123: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47403e00 of size 256\r\n2019-06-11 16:23:09.214134: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47403f00 of size 256\r\n2019-06-11 16:23:09.214163: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47404000 of size 256\r\n2019-06-11 16:23:09.214176: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47404100 of size 256\r\n2019-06-11 16:23:09.214188: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47404200 of size 256\r\n2019-06-11 16:23:09.214201: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47404300 of size 256\r\n2019-06-11 16:23:09.214213: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47404400 of size 256\r\n2019-06-11 16:23:09.214226: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47404500 of size 256\r\n2019-06-11 16:23:09.214238: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47404600 of size 256\r\n2019-06-11 16:23:09.214250: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47404700 of size 256\r\n2019-06-11 16:23:09.214262: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47404800 of size 256\r\n2019-06-11 16:23:09.214275: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47404900 of size 256\r\n2019-06-11 16:23:09.214287: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47404a00 of size 256\r\n2019-06-11 16:23:09.214299: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47404b00 of size 256\r\n2019-06-11 16:23:09.214311: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47404c00 of size 256\r\n2019-06-11 16:23:09.214324: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47404d00 of size 256\r\n2019-06-11 16:23:09.214336: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47404e00 of size 256\r\n2019-06-11 16:23:09.214349: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47404f00 of size 256\r\n2019-06-11 16:23:09.214361: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47405000 of size 256\r\n2019-06-11 16:23:09.214373: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47405100 of size 256\r\n2019-06-11 16:23:09.214384: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47405200 of size 256\r\n2019-06-11 16:23:09.214396: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47405300 of size 256\r\n2019-06-11 16:23:09.214407: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47405400 of size 1536\r\n2019-06-11 16:23:09.214419: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47405a00 of size 256\r\n2019-06-11 16:23:09.214432: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47405b00 of size 256\r\n2019-06-11 16:23:09.214444: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47405c00 of size 256\r\n2019-06-11 16:23:09.214456: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47405d00 of size 256\r\n2019-06-11 16:23:09.214468: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47405e00 of size 256\r\n2019-06-11 16:23:09.214480: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47405f00 of size 256\r\n2019-06-11 16:23:09.214492: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47406000 of size 256\r\n2019-06-11 16:23:09.214504: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47406100 of size 256\r\n2019-06-11 16:23:09.214517: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47406200 of size 512\r\n2019-06-11 16:23:09.214529: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47406400 of size 256\r\n2019-06-11 16:23:09.214541: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47406500 of size 256\r\n2019-06-11 16:23:09.214553: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47406600 of size 256\r\n2019-06-11 16:23:09.214565: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47406700 of size 256\r\n2019-06-11 16:23:09.214577: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47406800 of size 256\r\n2019-06-11 16:23:09.214590: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47406900 of size 256\r\n2019-06-11 16:23:09.214603: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47406a00 of size 256\r\n2019-06-11 16:23:09.214615: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47406b00 of size 256\r\n2019-06-11 16:23:09.214627: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47406c00 of size 256\r\n2019-06-11 16:23:09.214639: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47406d00 of size 256\r\n2019-06-11 16:23:09.214651: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47406e00 of size 256\r\n2019-06-11 16:23:09.214663: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47406f00 of size 256\r\n2019-06-11 16:23:09.214675: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47407000 of size 256\r\n2019-06-11 16:23:09.214696: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47407100 of size 256\r\n2019-06-11 16:23:09.214709: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47407200 of size 256\r\n2019-06-11 16:23:09.214722: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47407300 of size 256\r\n2019-06-11 16:23:09.214734: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47407400 of size 256\r\n2019-06-11 16:23:09.214746: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47407500 of size 256\r\n2019-06-11 16:23:09.214758: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47407600 of size 256\r\n2019-06-11 16:23:09.214771: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47407700 of size 256\r\n2019-06-11 16:23:09.214783: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47407800 of size 256\r\n2019-06-11 16:23:09.214795: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47407900 of size 256\r\n2019-06-11 16:23:09.214807: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47407a00 of size 256\r\n2019-06-11 16:23:09.214820: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47407b00 of size 256\r\n2019-06-11 16:23:09.214832: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47407c00 of size 256\r\n2019-06-11 16:23:09.214845: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47407d00 of size 256\r\n2019-06-11 16:23:09.214857: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47407e00 of size 256\r\n2019-06-11 16:23:09.214869: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47407f00 of size 256\r\n2019-06-11 16:23:09.214882: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47408000 of size 256\r\n2019-06-11 16:23:09.214893: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47408100 of size 256\r\n2019-06-11 16:23:09.214905: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47408200 of size 256\r\n2019-06-11 16:23:09.214917: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47408300 of size 256\r\n2019-06-11 16:23:09.214929: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47408400 of size 256\r\n2019-06-11 16:23:09.214941: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47408500 of size 256\r\n2019-06-11 16:23:09.214953: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47408600 of size 256\r\n2019-06-11 16:23:09.214966: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47408700 of size 256\r\n2019-06-11 16:23:09.214978: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47408800 of size 256\r\n2019-06-11 16:23:09.214990: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47408900 of size 256\r\n2019-06-11 16:23:09.215002: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47408a00 of size 256\r\n2019-06-11 16:23:09.215014: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47408b00 of size 256\r\n2019-06-11 16:23:09.215027: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47408c00 of size 256\r\n2019-06-11 16:23:09.215039: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47408d00 of size 256\r\n2019-06-11 16:23:09.215051: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47408e00 of size 256\r\n2019-06-11 16:23:09.215064: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47408f00 of size 256\r\n2019-06-11 16:23:09.215076: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47409000 of size 256\r\n2019-06-11 16:23:09.215088: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47409100 of size 256\r\n2019-06-11 16:23:09.215101: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47409200 of size 256\r\n2019-06-11 16:23:09.215114: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47409300 of size 256\r\n2019-06-11 16:23:09.215125: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47409400 of size 256\r\n2019-06-11 16:23:09.215137: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47409500 of size 256\r\n2019-06-11 16:23:09.215167: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47409600 of size 256\r\n2019-06-11 16:23:09.215180: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47409700 of size 256\r\n2019-06-11 16:23:09.215193: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47409800 of size 256\r\n2019-06-11 16:23:09.215205: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47409900 of size 256\r\n2019-06-11 16:23:09.215217: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47409a00 of size 256\r\n2019-06-11 16:23:09.215230: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47409b00 of size 256\r\n2019-06-11 16:23:09.215242: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47409c00 of size 256\r\n2019-06-11 16:23:09.215254: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47409d00 of size 256\r\n2019-06-11 16:23:09.215266: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47409e00 of size 256\r\n2019-06-11 16:23:09.215279: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47409f00 of size 256\r\n2019-06-11 16:23:09.215291: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740a000 of size 256\r\n2019-06-11 16:23:09.215304: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740a100 of size 256\r\n2019-06-11 16:23:09.215316: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740a200 of size 256\r\n2019-06-11 16:23:09.215328: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740a300 of size 256\r\n2019-06-11 16:23:09.215340: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740a400 of size 256\r\n2019-06-11 16:23:09.215353: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740a500 of size 256\r\n2019-06-11 16:23:09.215373: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740a600 of size 256\r\n2019-06-11 16:23:09.215386: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740a700 of size 256\r\n2019-06-11 16:23:09.215398: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740a800 of size 256\r\n2019-06-11 16:23:09.215410: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740a900 of size 256\r\n2019-06-11 16:23:09.215421: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740aa00 of size 256\r\n2019-06-11 16:23:09.215433: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740ab00 of size 256\r\n2019-06-11 16:23:09.215445: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740ac00 of size 256\r\n2019-06-11 16:23:09.215457: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740ad00 of size 256\r\n2019-06-11 16:23:09.215469: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740ae00 of size 256\r\n2019-06-11 16:23:09.215481: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740af00 of size 256\r\n2019-06-11 16:23:09.215494: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740b000 of size 256\r\n2019-06-11 16:23:09.215506: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740b100 of size 256\r\n2019-06-11 16:23:09.215518: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740b200 of size 256\r\n2019-06-11 16:23:09.215530: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740b300 of size 256\r\n2019-06-11 16:23:09.215543: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740b400 of size 256\r\n2019-06-11 16:23:09.215555: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740b500 of size 256\r\n2019-06-11 16:23:09.215567: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740b600 of size 256\r\n2019-06-11 16:23:09.215580: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740b700 of size 256\r\n2019-06-11 16:23:09.215592: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740b800 of size 256\r\n2019-06-11 16:23:09.215605: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740b900 of size 256\r\n2019-06-11 16:23:09.215618: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740ba00 of size 256\r\n2019-06-11 16:23:09.215630: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740bb00 of size 256\r\n2019-06-11 16:23:09.215642: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740bc00 of size 256\r\n2019-06-11 16:23:09.215654: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740bd00 of size 256\r\n2019-06-11 16:23:09.215666: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740be00 of size 256\r\n2019-06-11 16:23:09.215677: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740bf00 of size 256\r\n2019-06-11 16:23:09.215697: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740c000 of size 256\r\n2019-06-11 16:23:09.215711: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740c100 of size 256\r\n2019-06-11 16:23:09.215723: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740c200 of size 256\r\n2019-06-11 16:23:09.215736: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740c300 of size 256\r\n2019-06-11 16:23:09.215748: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740c400 of size 256\r\n2019-06-11 16:23:09.215760: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740c500 of size 256\r\n2019-06-11 16:23:09.215772: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740c600 of size 256\r\n2019-06-11 16:23:09.215784: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740c700 of size 256\r\n2019-06-11 16:23:09.215797: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740c800 of size 256\r\n2019-06-11 16:23:09.215809: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740c900 of size 256\r\n2019-06-11 16:23:09.215821: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740ca00 of size 256\r\n2019-06-11 16:23:09.215833: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740cb00 of size 256\r\n2019-06-11 16:23:09.215845: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740cc00 of size 256\r\n2019-06-11 16:23:09.215858: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740cd00 of size 256\r\n2019-06-11 16:23:09.215870: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740ce00 of size 256\r\n2019-06-11 16:23:09.215883: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740cf00 of size 256\r\n2019-06-11 16:23:09.215895: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740d000 of size 256\r\n2019-06-11 16:23:09.215906: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740d100 of size 256\r\n2019-06-11 16:23:09.215918: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740d200 of size 256\r\n2019-06-11 16:23:09.215930: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740d300 of size 256\r\n2019-06-11 16:23:09.215942: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740d400 of size 256\r\n2019-06-11 16:23:09.215954: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740d500 of size 256\r\n2019-06-11 16:23:09.215966: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740d600 of size 256\r\n2019-06-11 16:23:09.215979: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740d700 of size 256\r\n2019-06-11 16:23:09.215990: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740d800 of size 256\r\n2019-06-11 16:23:09.216002: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740d900 of size 256\r\n2019-06-11 16:23:09.216014: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740da00 of size 256\r\n2019-06-11 16:23:09.216027: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740db00 of size 256\r\n2019-06-11 16:23:09.216039: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740dc00 of size 256\r\n2019-06-11 16:23:09.216051: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740dd00 of size 256\r\n2019-06-11 16:23:09.216064: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740de00 of size 256\r\n2019-06-11 16:23:09.216076: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740df00 of size 256\r\n2019-06-11 16:23:09.216088: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740e000 of size 256\r\n2019-06-11 16:23:09.216101: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740e100 of size 256\r\n2019-06-11 16:23:09.216113: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740e200 of size 256\r\n2019-06-11 16:23:09.216125: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740e300 of size 256\r\n2019-06-11 16:23:09.216138: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740e400 of size 256\r\n2019-06-11 16:23:09.216168: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740e500 of size 256\r\n2019-06-11 16:23:09.216180: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740e600 of size 256\r\n2019-06-11 16:23:09.216192: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740e700 of size 256\r\n2019-06-11 16:23:09.216204: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740e800 of size 256\r\n2019-06-11 16:23:09.216216: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740e900 of size 256\r\n2019-06-11 16:23:09.216228: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740ea00 of size 256\r\n2019-06-11 16:23:09.216241: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740eb00 of size 256\r\n2019-06-11 16:23:09.216253: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740ec00 of size 256\r\n2019-06-11 16:23:09.216265: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740ed00 of size 256\r\n2019-06-11 16:23:09.216277: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740ee00 of size 256\r\n2019-06-11 16:23:09.216289: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740ef00 of size 256\r\n2019-06-11 16:23:09.216301: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740f000 of size 256\r\n2019-06-11 16:23:09.216314: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740f100 of size 256\r\n2019-06-11 16:23:09.216326: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740f200 of size 256\r\n2019-06-11 16:23:09.216338: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740f300 of size 256\r\n2019-06-11 16:23:09.216350: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740f400 of size 256\r\n2019-06-11 16:23:09.216363: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740f500 of size 256\r\n2019-06-11 16:23:09.216375: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740f600 of size 256\r\n2019-06-11 16:23:09.216388: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740f700 of size 2048\r\n2019-06-11 16:23:09.216400: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4740ff00 of size 256\r\n2019-06-11 16:23:09.216412: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47410000 of size 256\r\n2019-06-11 16:23:09.216424: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47410100 of size 256\r\n2019-06-11 16:23:09.216436: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47410200 of size 768\r\n2019-06-11 16:23:09.216448: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47410500 of size 768\r\n2019-06-11 16:23:09.216460: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47410800 of size 768\r\n2019-06-11 16:23:09.216472: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47410b00 of size 768\r\n2019-06-11 16:23:09.216484: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47410e00 of size 768\r\n2019-06-11 16:23:09.216496: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47411100 of size 768\r\n2019-06-11 16:23:09.216509: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47411400 of size 768\r\n2019-06-11 16:23:09.216521: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47411700 of size 768\r\n2019-06-11 16:23:09.216534: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47411a00 of size 768\r\n2019-06-11 16:23:09.216547: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e47411d00 of size 442368\r\n2019-06-11 16:23:09.216559: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4747dd00 of size 768\r\n2019-06-11 16:23:09.216572: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4747e000 of size 768\r\n2019-06-11 16:23:09.216584: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4747e300 of size 768\r\n2019-06-11 16:23:09.216597: I tensorflow/core/common_runtime/bfc_allocator.cc:632] Chunk at 0x7f2e4747e600 of size 530944\r\n2019-06-11 16:23:09.216609: I tensorflow/core/common_runtime/bfc_allocator.cc:638]      Summary of in-use Chunks by size: \r\n2019-06-11 16:23:09.216627: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 679 Chunks of size 256 totalling 169.8KiB\r\n2019-06-11 16:23:09.216643: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 250 Chunks of size 512 totalling 125.0KiB\r\n2019-06-11 16:23:09.216656: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 164 Chunks of size 768 totalling 123.0KiB\r\n2019-06-11 16:23:09.216670: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 60 Chunks of size 1024 totalling 60.0KiB\r\n2019-06-11 16:23:09.216683: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 1 Chunks of size 1280 totalling 1.2KiB\r\n2019-06-11 16:23:09.216706: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 14 Chunks of size 1536 totalling 21.0KiB\r\n2019-06-11 16:23:09.216719: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 8 Chunks of size 2048 totalling 16.0KiB\r\n2019-06-11 16:23:09.216733: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 22 Chunks of size 3584 totalling 77.0KiB\r\n2019-06-11 16:23:09.216746: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 12 Chunks of size 7168 totalling 84.0KiB\r\n2019-06-11 16:23:09.216760: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 2 Chunks of size 20480 totalling 40.0KiB\r\n2019-06-11 16:23:09.216773: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 30 Chunks of size 32768 totalling 960.0KiB\r\n2019-06-11 16:23:09.216787: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 32 Chunks of size 36864 totalling 1.12MiB\r\n2019-06-11 16:23:09.216801: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 2 Chunks of size 73728 totalling 144.0KiB\r\n2019-06-11 16:23:09.216815: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 10 Chunks of size 98304 totalling 960.0KiB\r\n2019-06-11 16:23:09.216828: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 2 Chunks of size 196608 totalling 384.0KiB\r\n2019-06-11 16:23:09.216842: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 23 Chunks of size 442368 totalling 9.70MiB\r\n2019-06-11 16:23:09.216855: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 79 Chunks of size 458752 totalling 34.56MiB\r\n2019-06-11 16:23:09.216869: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 1 Chunks of size 530944 totalling 518.5KiB\r\n2019-06-11 16:23:09.216883: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 2 Chunks of size 552960 totalling 1.05MiB\r\n2019-06-11 16:23:09.216896: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 1 Chunks of size 655360 totalling 640.0KiB\r\n2019-06-11 16:23:09.216910: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 26 Chunks of size 917504 totalling 22.75MiB\r\n2019-06-11 16:23:09.216923: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 1 Chunks of size 1327104 totalling 1.27MiB\r\n2019-06-11 16:23:09.216936: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 22 Chunks of size 1376256 totalling 28.88MiB\r\n2019-06-11 16:23:09.216949: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 4 Chunks of size 1769472 totalling 6.75MiB\r\n2019-06-11 16:23:09.216961: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 1 Chunks of size 2003200 totalling 1.91MiB\r\n2019-06-11 16:23:09.216975: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 1 Chunks of size 2040064 totalling 1.95MiB\r\n2019-06-11 16:23:09.216988: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 1 Chunks of size 2048000 totalling 1.95MiB\r\n2019-06-11 16:23:09.217001: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 1 Chunks of size 2097152 totalling 2.00MiB\r\n2019-06-11 16:23:09.217015: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 5 Chunks of size 2359296 totalling 11.25MiB\r\n2019-06-11 16:23:09.217029: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 11 Chunks of size 2752512 totalling 28.88MiB\r\n2019-06-11 16:23:09.217042: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 1 Chunks of size 2795008 totalling 2.67MiB\r\n2019-06-11 16:23:09.217056: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 1 Chunks of size 2810880 totalling 2.68MiB\r\n2019-06-11 16:23:09.217070: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 4 Chunks of size 3538944 totalling 13.50MiB\r\n2019-06-11 16:23:09.217083: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 2 Chunks of size 3670016 totalling 7.00MiB\r\n2019-06-11 16:23:09.217097: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 1 Chunks of size 307200000 totalling 292.97MiB\r\n2019-06-11 16:23:09.217110: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 4 Chunks of size 758912000 totalling 2.83GiB\r\n2019-06-11 16:23:09.217123: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 4 Chunks of size 798848000 totalling 2.98GiB\r\n2019-06-11 16:23:09.217137: I tensorflow/core/common_runtime/bfc_allocator.cc:641] 3 Chunks of size 1517824000 totalling 4.24GiB\r\n2019-06-11 16:23:09.217168: I tensorflow/core/common_runtime/bfc_allocator.cc:645] Sum Total of in-use chunks: 10.51GiB\r\n2019-06-11 16:23:09.217221: I tensorflow/core/common_runtime/bfc_allocator.cc:647] Stats: \r\nLimit:                 14800692839\r\nInUse:                 11284742656\r\nMaxInUse:              11284742656\r\nNumAllocs:                    2823\r\nMaxAllocSize:           4113350656\r\n\r\n2019-06-11 16:23:09.217312: W tensorflow/core/common_runtime/bfc_allocator.cc:271] *******************************______*********************________************__*******_******_***_*\r\n2019-06-11 16:23:09.217373: W tensorflow/core/framework/op_kernel.cc:1401] OP_REQUIRES failed at fused_batch_norm_op.cc:285 : Resource exhausted: OOM when allocating tensor with shape[1000,64,77,77] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py\", line 1334, in _do_call\r\n    return fn(*args)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py\", line 1319, in _run_fn\r\n    options, feed_dict, fetch_list, target_list, run_metadata)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py\", line 1407, in _call_tf_sessionrun\r\n    run_metadata)\r\ntensorflow.python.framework.errors_impl.ResourceExhaustedError: OOM when allocating tensor with shape[1000,64,77,77] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n\t [[{{node InceptionResnetV1/Conv2d_2b_3x3/BatchNorm/cond/FusedBatchNorm_1}}]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n\r\n\t [[{{node Identity}}]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"facenet_fgsm.py\", line 95, in <module>\r\n    adv = sess.run(adv_x, feed_dict=feed_dict)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py\", line 929, in run\r\n    run_metadata_ptr)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py\", line 1152, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py\", line 1328, in _do_run\r\n    run_metadata)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py\", line 1348, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.ResourceExhaustedError: OOM when allocating tensor with shape[1000,64,77,77] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n\t [[node InceptionResnetV1/Conv2d_2b_3x3/BatchNorm/cond/FusedBatchNorm_1 (defined at /content/facenet/src/facenet.py:379) ]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n\r\n\t [[node Identity (defined at /content/cleverhans/cleverhans/attacks/fast_gradient_method.py:208) ]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n\r\n\r\nCaused by op 'InceptionResnetV1/Conv2d_2b_3x3/BatchNorm/cond/FusedBatchNorm_1', defined at:\r\n  File \"facenet_fgsm.py\", line 63, in <module>\r\n    model = InceptionResnetV1Model()\r\n  File \"facenet_fgsm.py\", line 20, in __init__\r\n    facenet.load_model(self.model_path)\r\n  File \"/content/facenet/src/facenet.py\", line 379, in load_model\r\n    tf.import_graph_def(graph_def, input_map=input_map, name='')\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/util/deprecation.py\", line 507, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/importer.py\", line 442, in import_graph_def\r\n    _ProcessNewOps(graph)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/importer.py\", line 235, in _ProcessNewOps\r\n    for new_op in graph._add_new_tf_operations(compute_devices=False):  # pylint: disable=protected-access\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\", line 3433, in _add_new_tf_operations\r\n    for c_op in c_api_util.new_tf_operations(self)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\", line 3433, in <listcomp>\r\n    for c_op in c_api_util.new_tf_operations(self)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\", line 3325, in _create_op_from_tf_operation\r\n    ret = Operation(c_op, self)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\", line 1801, in __init__\r\n    self._traceback = tf_stack.extract_stack()\r\n\r\nResourceExhaustedError (see above for traceback): OOM when allocating tensor with shape[1000,64,77,77] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n\t [[node InceptionResnetV1/Conv2d_2b_3x3/BatchNorm/cond/FusedBatchNorm_1 (defined at /content/facenet/src/facenet.py:379) ]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n\r\n\t [[node Identity (defined at /content/cleverhans/cleverhans/attacks/fast_gradient_method.py:208) ]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n******************* End Log Output *******************\r\n\r\nI have  Ok, got farther.\r\n\r\nRealized that I was getting out of memory errors because the input dimensions from the model had increased from 128 to 512 so I reduced the testset size.\r\n\r\n#facenet_fgsm.py\r\n\r\n    self.victim_embedding_input = tf.placeholder(\r\n        tf.float32,\r\n        #CHANGED HERE some models have 512 others have 128\r\n        shape=(None, 512))\r\n...\r\nwith tf.Graph().as_default():\r\n  with tf.Session() as sess:\r\n    # Load model\r\n    model = InceptionResnetV1Model()\r\n    # Convert to classifier\r\n    model.convert_to_classifier()\r\n\r\n    # Load pairs of faces and their labels in one-hot encoding\r\n    #CHANGED HERE reduced size of testset because of OOM errors 1000 to 333\r\n    faces1, faces2, labels = set_loader.load_testset(333)\r\n\r\nI tried changing batch_size and --emb_dim but those did not work.\r\n\r\nI have been looking at torch.cuda.empty_cache() and its equivalents but I don't know where to add it.\r\n\r\nFinally, what I was hoping to get was the perturbed images from the lfw dataset. I am assuming that the facenet_fgsm.py generated these files but I don't see them on the file system.\r\n\r\nAlso the outputs from running different times with different settings don't seem to make sense:\r\n\r\nTestset size: 250. Batch size 64\r\nFGSM step 1\r\nAccuracy: 97.2%\r\nAccuracy against adversarial examples for same person faces (dodging): 8.547008547008547%\r\nAccuracy against adversarial examples for different people faces (impersonation): 48.1203007518797%\r\n\r\nBatch size 32 first run\r\nFGSM step 1\r\nAccuracy: 96.8%\r\nAccuracy against adversarial examples for same person faces (dodging): 8.633093525179856%\r\nAccuracy against adversarial examples for different people faces (impersonation): 42.34234234234234%\r\n\r\nBatch size 32 second run\r\nFGSM step 1\r\nAccuracy: 96.8%\r\nAccuracy against adversarial examples for same person faces (dodging): 7.5%\r\nAccuracy against adversarial examples for different people faces (impersonation): 46.92307692307692%\r\n\r\n\r\n\r\n\r\nTestset size: 333 batch size 64\r\nUse tf.cast instead.\r\nFGSM step 1\r\nAccuracy: 95.4954954954955%\r\nAccuracy against adversarial examples for same person faces (dodging): 13.953488372093023%\r\nAccuracy against adversarial examples for different people faces (impersonation): 59.62732919254658%\r\n\r\nTestset size: 333 batch size 64 second run\r\nFGSM step 1\r\nAccuracy: 96.69669669669669%\r\nAccuracy against adversarial examples for same person faces (dodging): 12.162162162162163%\r\nAccuracy against adversarial examples for different people faces (impersonation): 56.21621621621622%\r\nGot warning no error\r\n\r\n\r\nBatch size 32 first run\r\nFGSM step 1\r\nAccuracy: 96.996996996997%\r\nAccuracy against adversarial examples for same person faces (dodging): 9.036144578313253%\r\nAccuracy against adversarial examples for different people faces (impersonation): 46.10778443113773%\r\n\r\nBatch size 32 second run\r\nFGSM step 1\r\nAccuracy: 97.2972972972973%\r\nAccuracy against adversarial examples for same person faces (dodging): 9.815950920245399%\r\nAccuracy against adversarial examples for different people faces (impersonation): 49.411764705882355%\r\nGot memory limit warning\r\n\r\n\r\n\r\n340\r\nFGSM step 1\r\nAccuracy: 96.17647058823529%\r\nAccuracy against adversarial examples for same person faces (dodging): 11.65644171779141%\r\nAccuracy against adversarial examples for different people faces (impersonation): 53.672316384180796%\r\n\r\n\r\n350\r\nOut of memory errors but got result?\r\nAccuracy: 95.71428571428572%\r\nAccuracy against adversarial examples for same person faces (dodging): 12.804878048780488%\r\nAccuracy against adversarial examples for different people faces (impersonation): 55.91397849462365%\r\n\r\nI am totally off here?\r\n\r\nThanks,\r\nAbe Hi Nicolas,\n\nThanks for checking in on this.\n\nGot things working.  Not all the pictures were aligned but I don't know if\nthat is expected.\n\nHere is the location of the two notebooks.\n\nhttps://github.com/leadharbor/MLSec\n\nOne is associated with setting up and running FaceNet and the other for\nsetting up and running the CleverHans FGSM on FaceNet example.\n\nThere were files in both Cleverhans and Facenet that needed to change to\nget the demos working. I included them in the notebooks as well and how to\nchange them.\n\nLook for \"CHANGE HERE\".\n\nFinally, I was wondering what is the best way to update the Cleverhans\ndocumentation to account for the changes.\n\nRegards,\nAbe\n\nOn Mon, Jun 17, 2019 at 10:11 PM Nicolas Papernot <notifications@github.com>\nwrote:\n\n> Could you state what your problem is now?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/issues/1067?email_source=notifications&email_token=AF5TCUAO4XYKP4TT4ZCSQDLP3BU65A5CNFSM4HWILZLKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODX5GNGA#issuecomment-502949528>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AF5TCUHFY2J3RK5GULC22O3P3BU65ANCNFSM4HWILZLA>\n> .\n>\n Will do.\n\nThanks Again Nicholas.\n\nGlad you are one of the outstanding people working on Cleverhans.\n\nRegards,\nAbe\n\nOn Tue, Jun 18, 2019 at 8:12 AM Nicolas Papernot <notifications@github.com>\nwrote:\n\n> Great to hear that things are now working. If you find that the attacks\n> are not evading the model as often as you would expect, you might want to\n> switch to an iterative attack (e.g., PGD).\n>\n> Unfortunately I won't have time to look at your notebooks but you can\n> definitely open PRs to make changes to CleverHans documentation and code.\n>\n> Thanks!\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/issues/1067?email_source=notifications&email_token=AF5TCUBFZUL7CUU56LCLZHDP3D3OHA5CNFSM4HWILZLKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODX662LA#issuecomment-503180588>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AF5TCUAGSV2KKEFLTWBHC6DP3D3OHANCNFSM4HWILZLA>\n> .\n>\n   This one is on me to review, it's code from the prior project.\r\n\r\nYao can you rebase off master? It should be good to merge after that. Closing this; merged 1070 instead.  I want to generate adversarial examples with C&WL2 on the inceptionv3, but it appeers the error as follows:\r\n[INFO 2019-06-06 21:09:06,138 cleverhans] Constructing new graph for attack CarliniWagnerL2\r\nTraceback (most recent call last):\r\n  File \"cw/cw_inceptionv3.py\", line 163, in <module>\r\n    tf.app.run()\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py\", line 125, in run\r\n    _sys.exit(main(argv))\r\n  File \"cw/cw_inceptionv3.py\", line 139, in main\r\n    x_adv = cwl2.generate_np(x_input,**cw_params)\r\n  File \"/home/ra/cleverhans/cleverhans/attacks/attack.py\", line 185, in generate_np\r\n    self.construct_graph(fixed, feedable, x_val, hash_key)\r\n  File \"/home/ra/cleverhans/cleverhans/attacks/attack.py\", line 157, in construct_graph\r\n    x_adv = self.generate(x, **new_kwargs)\r\n  File \"/home/ra/cleverhans/cleverhans/attacks/carlini_wagner_l2.py\", line 70, in generate\r\n    labels, nb_classes = self.get_or_guess_labels(x, kwargs)\r\n  File \"/home/ra/cleverhans/cleverhans/attacks/attack.py\", line 277, in get_or_guess_labels\r\n    preds = self.model.get_probs(x)\r\n  File \"/home/ra/cleverhans/cleverhans/model.py\", line 84, in get_probs\r\n    d = self.fprop(x, **kwargs)\r\n  File \"/home/ra/cleverhans/cleverhans/model.py\", line 108, in fprop\r\n    raise NotImplementedError('`fprop` not implemented.')\r\nNotImplementedError: `fprop` not implemented.\r\n\r\n\r\nand the the executable file is as follows:\r\n\r\n\"\"\"My changed full source code.\"\"\"\r\n\r\nfrom __future__ import absolute_import\r\nfrom __future__ import division\r\nfrom __future__ import print_function\r\n\r\nimport os\r\nimport warnings\r\nwarnings.filterwarnings('ignore')\r\nimport sys\r\nsys.path.append('/home/ra/cleverhans/')\r\nfrom io import BytesIO\r\nimport numpy as np\r\nimport tensorflow as tf\r\nfrom tensorflow.contrib.slim.nets import inception\r\nfrom PIL import Image\r\nfrom scipy.misc import imsave,imread\r\nfrom cleverhans.model import Model\r\nfrom cleverhans.attacks import CarliniWagnerL2\r\n\r\n\r\nslim = tf.contrib.slim\r\n\r\ndef load_images(input_dir, batch_shape):\r\n  \"\"\"Read png images from input directory in batches.\r\n  Args:\r\n    input_dir: input directory\r\n    batch_shape: shape of minibatch array, i.e. [batch_size, height, width, 3]\r\n  Yields:\r\n    filenames: list file names without path of each image\r\n      Lenght of this list could be less than batch_size, in this case only\r\n      first few images of the result are elements of the minibatch.\r\n    images: array with all images from this batch\r\n  \"\"\"\r\n  images = np.zeros(batch_shape)\r\n  filenames = []\r\n  idx = 0\r\n  batch_size = batch_shape[0]\r\n  for filepath in tf.gfile.Glob(os.path.join(input_dir, '*.png')):\r\n    print(filepath)\r\n   # --- change open method . This change has no impact for code ---\r\n    with open(filepath,\"rb\") as f:\r\n      image = np.array(Image.open(f).convert('RGB')).astype(np.float) / 255.0\r\n    # Images for inception classifier are normalized to be in [-1, 1] interval.\r\n    images[idx, :, :, :] = image * 2.0 - 1.0\r\n    filenames.append(os.path.basename(filepath))\r\n    idx += 1\r\n    if idx == batch_size:\r\n      yield filenames, images\r\n      filenames = []\r\n      images = np.zeros(batch_shape)\r\n      idx = 0\r\n  if idx > 0:\r\n    yield filenames, images\r\n\r\n\r\ndef save_images(images, filenames, output_dir):\r\n  \"\"\"Saves images to the output directory.\r\n  Args:\r\n    images: array with minibatch of images\r\n    filenames: list of filenames without path\r\n      If number of file names in this list less than number of images in\r\n      the minibatch then only first len(filenames) images will be saved.\r\n    output_dir: directory where to save images\r\n  \"\"\"\r\n  for i, filename in enumerate(filenames):\r\n    # Images for inception classifier are normalized to be in [-1, 1] interval,\r\n    # so rescale them back to [0, 1].\r\n    with tf.gfile.Open(os.path.join(output_dir, filename), 'w') as f:\r\n      img = (((images[i, :, :, :] + 1.0) * 0.5) * 255.0).astype(np.uint8)\r\n      Image.fromarray(img).save(f, format='PNG')\r\n\r\n# ---change Model from object---\r\nclass InceptionModel(Model):\r\n  \"\"\"Model class for CleverHans library.\"\"\"\r\n\r\n  def __init__(self, nb_classes):\r\n    super(InceptionModel, self).__init__(nb_classes=nb_classes,\r\n                                         needs_dummy_fprop=True)\r\n    self.built = False\r\n\r\n  def __call__(self, x_input, return_logits=False):\r\n    \"\"\"Constructs model and return probabilities for given input.\"\"\"\r\n    reuse = True if self.built else None\r\n    with slim.arg_scope(inception.inception_v3_arg_scope()):\r\n      # Inception preprocessing uses [-1, 1]-scaled input.\r\n      x_input = x_input * 2.0 - 1.0\r\n      _, end_points = inception.inception_v3(\r\n          x_input, num_classes=self.nb_classes, is_training=False,\r\n          reuse=reuse)\r\n    self.built = True\r\n   # self.logits = end_points['Logits']\r\n    # Strip off the extra reshape op at the output\r\n    self.probs = end_points['Predictions'].op.inputs[0]\r\n    if return_logits:\r\n      return self.logits\r\n    else:\r\n      return self.probs\r\n\r\n # def get_logits(self, x_input):\r\n  #  return self(x_input, return_logits=True)\r\n\r\n # def get_probs(self, x_input):\r\n  #  return self(x_input)\r\n\r\n\r\ndef main(_):\r\n  \"\"\"Run the sample attack\"\"\"\r\n  # Images for inception classifier are normalized to be in [-1, 1] interval,\r\n  # eps is a difference between pixels so it should be in [0, 2] interval.\r\n  # Renormalizing epsilon from [0, 255] to [0, 2].\r\n  tensorflow_master = \"\"\r\n  checkpoint_path   = \"/home/ra/cleverhans/cw/inception_v3.ckpt\"\r\n  input_dir         = \"/home/ra/cleverhans/cw/tmp\"\r\n  output_dir        = \"/home/ra/cleverhans/cw\"\r\n  image_width       = 299\r\n  image_height      = 299\r\n  batch_size        = 50\r\n  nb_classes=1001\r\n  cw_params = {'batch_size': 1,\r\n             'confidence': 10,\r\n             'learning_rate': 0.1,\r\n             'binary_search_steps': 5,\r\n             'max_iterations': 1000,\r\n             'abort_early': True,\r\n             'initial_const': 0.01,\r\n             'clip_min': 0,\r\n             'clip_max': 1}\r\n  batch_shape = [batch_size, image_height, image_width, 3]\r\n  tf.logging.set_verbosity(tf.logging.INFO)\r\n  with tf.Graph().as_default():\r\n    # Prepare graph\r\n    x_input = tf.placeholder(tf.float32, shape=batch_shape)\r\n    model = InceptionModel(nb_classes)\r\n    ses = tf.Session()\r\n    cwl2 = CarliniWagnerL2(model,ses)\r\n    x_adv = cwl2.generate_np(x_input,**cw_params)\r\n    sess.run(tf.global_variables_initializer())\r\n    \r\n  #  save_images(x_adv, filenames, output_dir)\r\n    # Run computation\r\n    saver = tf.train.Saver(slim.get_model_variables())\r\n #   adv_images = sess.run(x_adv, feed_dict={x_input: images})\r\n  #  save_images(adv_images, filenames, output_dir)\r\n    session_creator = tf.train.ChiefSessionCreator(\r\n        scaffold=tf.train.Scaffold(saver=saver),\r\n        checkpoint_filename_with_path=checkpoint_path,\r\n        master=tensorflow_master)\r\n    with tf.train.MonitoredSession(session_creator=session_creator) as sess:\r\n      for filenames, images in load_images(input_dir, batch_shape):\r\n          adv_images = sess.run(x_adv, feed_dict={x_input: images})\r\n          save_images(adv_images, filenames, output_dir)\r\n\r\n\r\nif __name__ == '__main__':\r\n  tf.app.run() > The error specifies that your model object is missing an `fprop` method, which probably explains why the code is failing. To see an example of an implementation of a model class, see:\r\n> \r\n> https://github.com/tensorflow/cleverhans/blob/f1cf6f06b6f0f68334f7fc5b862b01e439dcdc37/cleverhans/model_zoo/all_convolutional.py#L11\r\n\r\nThank you very much\uff0cI have solved it.\r\n  What's going wrong with this code? I have generated adversarial images using cleverhans API - generate_np method. And using the default cleverhans CNN classifier to classify the images. The test accuracy is very low for adversarial images as expected when I use the model after generating the images. But if I save and reload the model, the accuracy is too high. Please check the code here. Is it really working? \r\n\r\nhttps://github.com/csesivakumar/Adversarial_Defense/blob/master/Cleverhans_generatenp.ipynb\r\n\r\nPython: 3.6\r\n Thanks Nicolas. Updated the code. Works fine now.  Hi, Csesivakumar, I had the same issue as you. Can you tell me how did you fix the issue? Thanks! Check out my updated code here. As Nicolas said,  should not initialize the model weight after having trained the classification model. it will assign random weights for the model and FGSM will not generate proper adversarial images based on that model.\r\n\r\nhttps://github.com/csesivakumar/Adversarial_Defense/blob/master/Cleverhans_generatenp.ipynb OK! Thank you very much!  **Describe the bug**\r\nWhen running mnist_blackbox.py, problem occurs while training substitue model.\r\n\r\n![image](https://user-images.githubusercontent.com/9499462/58938337-90cea880-87af-11e9-80bc-2e243f0ed1da.png)\r\n\r\nI realized that after epoch #0, the training log([INFO ~~~) didn't show up. So I made a small change in cleverhans/train.py(below picture) to catch exception and got above result\r\n\r\n![image](https://user-images.githubusercontent.com/9499462/58938491-e440f680-87af-11e9-847a-7b98bdc04121.png)\r\n\r\nI can't even tell this is a normal behavior or not. please someone tell me how to handle this issue  @npapernot Please merge the changes on the previous Boundary Attack++, resulting from changes and improvements in the preprint. The changes in the code are\r\n1. Following suggestions from my collaborators, we decided to change the name of Boundary Attack++ to HopSkipJumpAttack. \r\n2. A new author, Martin J. Wainwright, is added to the paper.\r\n3. Update the choice of stepsize based on a newly established theorem. \r\n4. Change default stepsize search to \"geometric progression\". I have added a new function named as BoundaryAttackPlusPlus, calling the class HopSkipJumpAttack with an extra warning. Does it meet the requirements? So there's good news and bad news.\n\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\n:confused: The bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter.  We need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that here in the pull request.\n\n*Note to project maintainer: This is a terminal state, meaning the `cla/google` commit status will not change from this state. It's up to you to confirm consent of all the commit author(s), set the `cla` label to `yes` (if enabled on your project), and then merge this pull request when appropriate.*\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Fcleverhans%2Fpull%2F1058) for more info**.\n\n<!-- need_author_consent -->  **Describe the bug**\r\nIf I use larger networks like Inception with multiple GPU's, cleverhans/train.py's avg_grads function might get a grads = [None, None, None, None...]. \r\n\r\nThis is probably due to some of the larger networks having extra variables that are not directly useful for training. A quick fix is probably just writing in an if-statement to check if it has None's or the right shapes.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Use an inception model for (I used a internal model for google, but I believe a similar model exists publicly in the tensorflow repo). \r\n2. Use https://github.com/tensorflow/cleverhans/blob/master/cleverhans_tutorials/mnist_tutorial_tf.py and replace the network with Inception.\r\n\r\n**Expected behavior**\r\nThe error from using tf.add_n on a list of None's will be \"ValueError: inputs must be a list of at least one Tensor/IndexedSlices with the same dtype and shape\".\r\n\r\n**System configuration**\r\n - OS Linux\r\n - Python version 3.6\r\n - TensorFlow version 1.x (latest)\r\n   We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for all the commit author(s) or Co-authors.  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA ([login here](https://cla.developers.google.com/) to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\nIn order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again. If the bot doesn't comment, it means it doesn't think anything has changed.\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Fcleverhans%2Fpull%2F1055) for more info**.\n\n<!-- need_author_cla -->   @npapernot can you please check it once? I have tested it in my local, and the attack works flawlessly. Although, it doesn't yet work for batches of images. The authors pointed out to me in private correspondence that their own implementation is in PyTorch, which I did not know. It makes sense to at least compare how the attacks perform on one or two datasets and perhaps to even follow their original implementation (with the appropriate credit in the docstring) Hi! I am aware that the original implementation of DeepFool is in PyTorch (and in Matlab). I have referred to their implementation have checked that everything is according. About running on 2 datasets. I have checked it on MNIST it gets an accuracy of 1.2% on the test set of MNIST.\r\nI will check it on ILSVRC 2012 (else CIFAR10 if Colab takes too much time) and let you know.\r\n\r\nAlso, the original implementation is not vectorized, it can't take batches of images. For MNIST on Lenet it takes 2hours on Colab. I have vectorized the entire implementation [here](https://github.com/iArunava/scratchai/blob/master/scratchai/attacks/attacks/deepfool.py) You may check it out. With the vectorized implementation it takes about 1-2 mins.\r\n\r\n**Also, I will go through your entire review and make relevant updates accordingly as soon as possible.**\r\n\r\nP.S. I have contacted Seyed myself and let him know about my implementation but haven't received feedback yet. Oh my, I am really sorry for the delay, I am caught up with a few projects. I will try to get this to shape as soon as possible. Thanks for understanding.  **Describe the bug**\r\nIn PGD (https://github.com/tensorflow/cleverhans/blob/master/cleverhans/attacks/projected_gradient_descent.py), line 82: adv_x = x + eta, which initialize adv_x with a random perturbation. I figured out the gradient of adv_x cannot be computed based on this line of code, here is a check:\r\n\r\ntf.gradients(self.model.get_logits(adv_x),adv_x)\r\n\r\nIt will generate gradient [NONE].\r\n\r\nWhat I trying to show here is to explain \"adv_x = x + eta\" will lead an error in the later function FGM.generate(adv_x, **fgm_params) where the author computes the gradient using this function: tf.gradients(loss, adv_x). However, because loss is a function of x not adv_x, it will lead to [NONE] as the computed gradient and cause error later. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Set a break point after the line: adv_x = x + eta\r\n2. Run: tf.gradients(self.model.get_logits(adv_x),adv_x)\r\n3. Return [None]\r\n\r\n**To Reproduce (even simpler)**\r\n1. Run: tf.gradients(x+1,x+1)\r\n2. Return [None]\r\n\r\n\r\n**Expected behavior**\r\nThe gradient should not be None, otherwise FGM will fail later. \r\n\r\n**System configuration**\r\n - OS: Linux Redhat\r\n - Python version: 3.6\r\n - TensorFlow version: 1.12\r\n I don't think you can take gradients with respect to operations (`adv_x` or `x+1` in your simpler example represent operations on tensors).\r\nTaking the gradients with respect to the original variable `x` works though. Hi ftramer,\r\n\r\nThanks for the reply. It exactly what I thought it would be.\r\n\r\ntf.gradients(self.model.get_logits(adv_x),adv_x): not working\r\ntf.gradients(self.model.get_logits(adv_x),x): works, \r\n\r\nbut unfortunately, the author sent adv_x to the function: FGM.generate(adv_x, **fgm_params), which will later compute tf.gradients(loss, adv_x), but \"loss\" is a function of x not adv_x. So the code does not go through.  This works because of the semantics of `tf.while_loop`. In each loop iteration, you're computing gradients with respect to the previous iteration of the variable `x_adv`.\r\nDo you actually get an error when you run the full PGD attack? All the tests pass on my side. Yes, here is something I'm running:\r\n\r\n    pgd = ProjectedGradientDescent(model)\r\n    pgd_params = {'clip_min': 0.,\r\n                              'clip_max': 1.}\r\n    adv_x = pgd.generate(model.input, **pgd_params)\r\n\r\nAnd it reports an error. It seems just a standard way to initialize the attack. \r\n\r\nI am not fully convinced by tf.while_loop will make it works. In the first iteration, gradient of \"loss\" need to computed w.r.t. the \"adv_x\", but the node name of \"adv_x\" in the graph is \"add:0\", but the name of node \"x\" is \"input:0\". Because of \"adv_x\" is not included in the graph. It's gradient cannot be computed. \r\n\r\nBTW, what test you are running?  What is `model.input` ? Your `model` should be an instance of the `cleverhans.Model` class.\r\nThis works on my end:\r\n\r\n```\r\nmodel = utils_keras.cnn_model()\r\nmodel_wrapper = utils_keras.KerasModelWrapper(model)\r\npgd = ProjectedGradientDescent(model_wrapper)\r\nadv_x = pgd.generate(model.input, **pgd_params)\r\n``` Hi ftramer, \r\n\r\nThe model I'm using is the faceNet model used here:\r\n \r\nhttps://github.com/tensorflow/cleverhans/blob/master/examples/facenet_adversarial_faces/facenet_fgsm.py\r\nThe model is inherited from a Cleverhans.model.  Fixes #306  What's the accuracy before and after running the attack? The epsilon seems high (at least the default value of 0.3) I will have to check, but I believe accuracy before the attack was around 75% This seems quite low. @david-berthelot do you think we could use your all convolutional model to get a better baseline?   #1040 @AlexeyKurakin I've got the basic tests done. The coverage is higher than the corresponding tests in the current tests_tf package. It would be great if you could give a review and let me know what should be improved. Thanks in advance! So there's good news and bad news.\n\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\n:confused: The bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter.  We need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that here in the pull request.\n\n*Note to project maintainer: This is a terminal state, meaning the `cla/google` commit status will not change from this state. It's up to you to confirm consent of all the commit author(s), set the `cla` label to `yes` (if enabled on your project), and then merge this pull request when appropriate.*\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Fcleverhans%2Fpull%2F1045) for more info**.\n\n<!-- need_author_consent --> CLAs look good, thanks!\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Fcleverhans%2Fpull%2F1045) for more info**.\n\n<!-- ok --> > Thanks a lot for doing this!\r\n> Overall it's a good set of tests. I added some minor comments to improve code.\r\n> \r\n> Sorry for late review I was on leave OOO for some time.\r\n\r\nWelcome back and thanks for the review! I will be working on this in the next few days. Thanks again. Hi @AlexeyKurakin, I've revised the PR according to your comments. It would be great if you could take another look and let me know if I need to change anything else. Many thanks. Almost done.\r\n\r\nThere two issues left:\r\n1) Could you please use Python's implied line continuation instead of `\\` to wrap lines in all places in `test_attacks.py`?\r\nI saw that it's fixed in one place in `test_attacks.py`, but it's still used in many other placed in this file.\r\n\r\n2) Because pytorch tests were moved you need to update `.travis.yml` to point it to new location for pytorch tests. For now just update location of `tests_pytorch` in this line: https://github.com/tensorflow/cleverhans/blob/c8054c23d643de1a63c778627c0b25158ae495f4/.travis.yml#L76\r\nLater we will rewrite entire `.travis.yml` to better reflect location of tests for cleverhans v4 > Almost done.\r\n> \r\n> There two issues left:\r\n> \r\n> 1. Could you please use Python's implied line continuation instead of `\\` to wrap lines in all places in `test_attacks.py`?\r\n>    I saw that it's fixed in one place in `test_attacks.py`, but it's still used in many other placed in this file.\r\n> 2. Because pytorch tests were moved you need to update `.travis.yml` to point it to new location for pytorch tests. For now just update location of `tests_pytorch` in this line: https://github.com/tensorflow/cleverhans/blob/c8054c23d643de1a63c778627c0b25158ae495f4/.travis.yml#L76\r\n>    \r\n>    Later we will rewrite entire `.travis.yml` to better reflect location of tests for cleverhans v4\r\n\r\nBoth fixed. Thanks. Once conflicts with the main branch are resolved, LGTM for merge > Once conflicts with the main branch are resolved, LGTM for merge\r\n\r\nThanks, @npapernot, will fix the conflicts later today. \r\n\r\nThanks for the review, @AlexeyKurakin!  > I actually resolved most of the conflicts already.\r\n> One remaining thing is update `cleverhans/future/torch/utils.py` which I could not do in web-editor\r\n\r\nThanks a lot for helping! I will update ```cleverhans/future/torch/utils.py``` later. Conflicts resolved. Many thanks for the help, @AlexeyKurakin, and @npapernot!   ***The issue tracker should only be used to report bugs or feature requests. If you are looking for support from other library users, please ask a question on [StackOverflow](https://stackoverflow.com/questions/tagged/cleverhans).***\r\n\r\n**Describe the bug**\r\nI am attempting to do a simple CarliniWagnerL2 attack on some images.\r\n\r\n**To Reproduce**\r\nMy code is as follow:\r\n```\r\nfile_list = glob.glob(\"images/*.jpg\")\r\nfor image_path in file_list:\r\n    img = image.load_img(image_path, target_size=(224, 224))\r\n    x = image.img_to_array(img)\r\n    x = x.astype('float32')\r\n    x /= 255\r\n\r\n    X.append(x)\r\n\r\ntarget = [np.zeros((1000,))]\r\ntarget[0][0] = 1\r\ntarget = np.repeat(target, len(X), axis=0)\r\nparams = {\r\n    'max_iterations': 1000,\r\n    'binary_search_steps': 3,\r\n    'initial_const': 1,\r\n    'clip_min': -5,\r\n    'clip_max': 5,\r\n    'batch_size': 1,\r\n    'y_target': target\r\n}\r\n\r\nX = np.array(X)\r\n\r\nx_tensor = K.variable(X)\r\nwith tf.Session() as sess:\r\n    sess.run(tf.global_variables_initializer())\r\n    fgsm = CarliniWagnerL2(wrap, sess=sess)\r\n    adv = fgsm.generate(x_tensor, **params)\r\n```\r\n\r\nThis takes some time, but then gives an error:\r\n```\r\n/Users/shamoon/.local/share/virtualenvs/adversarial-exploration-dPMp-7ya/lib/python3.7/site-packages/numpy/core/fromnumeric.py:3118: RuntimeWarning: Mean of empty slice.\r\n  out=out, **kwargs)\r\n/Users/shamoon/.local/share/virtualenvs/adversarial-exploration-dPMp-7ya/lib/python3.7/site-packages/numpy/core/_methods.py:85: RuntimeWarning: invalid value encountered in double_scalars\r\n  ret = ret.dtype.type(ret / rcount)\r\n```\r\n\r\n**Expected behavior**\r\nAttack images to be created\r\n\r\n**System configuration**\r\n - OS (Mac OS)\r\n - Python version (3.7.2)\r\n - TensorFlow version (1.13)\r\n I'm not sure that I can debug this from the error you've given. Do you have a longer stack trace? Could you try it on exactly one image and report the intermediate results?   @npapernot A quick question: it would be nice if you can clarify what this line is doing, as I understand its multiplying `H x W x C` the height, width and channels (ignoring the batch size). Am I right?\r\nhttps://github.com/tensorflow/cleverhans/blob/f01d21deada2f835c759323ecc58981304054c05/cleverhans/attacks/saliency_map_method.py#L149 That's correct, sorry for the delay in the response, I was on vacation Okay, I this is still under implementation. I will update this PR as soon as possible. Really feels great hearing from you, thanks.  [Travis are now recommending removing the __sudo__ tag](https://blog.travis-ci.com/2018-11-19-required-linux-infrastructure-migration).\n\n\"_If you currently specify __sudo: false__ in your __.travis.yml__, we recommend removing that configuration_\"  The article makes it clear that the __sudo__ tag is now fully deprecated because the __sudo__ command is _always_ available in Travis CI jobs and there is no way to turn it off.  Add a decision-based attack, Boundary Attack++, from the preprint: https://arxiv.org/abs/1904.02144.  So there's good news and bad news.\n\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\n:confused: The bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter.  We need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that here in the pull request.\n\n*Note to project maintainer: This is a terminal state, meaning the `cla/google` commit status will not change from this state. It's up to you to confirm consent of all the commit author(s), set the `cla` label to `yes` (if enabled on your project), and then merge this pull request when appropriate.*\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Fcleverhans%2Fpull%2F1030) for more info**.\n\n<!-- need_author_consent --> Cool! I've created another PR for updating README.md. @npapernot   I wrote something like this awhile back [here](https://github.com/jvmancuso/PytorchAdversarialGym/blob/master/examples/demoFGSM.ipynb).  The underlying codebase is quite a bit different from cleverhans, but maybe some of that can be reused? BTW, the current mnist_tutorial in #1028 is only a few edits away from a cifar10 tutorial. Just change torchvision.datasets.MNIST to torchvision.datasets.CIFAR10 and change the in_channel of the model from 1 to 3.\r\n\r\nOr do we want a bigger/better network for this instead of the current LeNet-5 in the mnist_tutorial?\r\n\r\nIn any case, I can add this tutorial after #1028 has been merged. Thanks. That would probably make more sense, although I'm not sure what having multiple tutorials with only a few lines' difference would accomplish for a new user.  Perhaps there's functionality missing from the MNIST tutorial that would be useful to add? Yes, I agree that these two tutorials would look similar. And I can't see how a cifar10 tutorial would be able to demonstrate any functionality missing from the existing mnist tutorial.\r\n\r\nI think the original idea was to add a cifar10 tutorial but I added a mnist tutorial with my PR instead.    @npapernot I am interested in working on this  @npapernot I can take this one. \r\n\r\nI do have a question, though. Since PyTorch is dynamic in the sense that it does not explicitly build a graph before each run, are we ok with the potential inconsistencies in the API if we go for a fully-PyTorch implementation? \r\n\r\nSome inconsistencies I can think of include, for example, when the user uses a PyTorch implementation, the \u201cx\u201d being fed into attack.generate would be the actual data in contrast to a placeholder when the user uses a TF implementation of the same attack.\r\n\r\nOr do we want to add a layer in the API to resolve these inconsistencies among the three backends?\r\n\r\nThanks. This is a possible implementation of the generate function.\r\n```\r\n    def generate(self, x, **kwargs):\r\n        \"\"\"\r\n        Generate symbolic graph for adversarial examples and return.\r\n        Args:\r\n            x: The model's symbolic inputs.\r\n            kwargs: See `parse_params`\r\n        \"\"\"\r\n\r\n        assert self.parse_params(**kwargs)\r\n\r\n        asserts = []\r\n\r\n        # If a data range was specified, check that the input was in that range\r\n        if self.clip_min is not None:\r\n            asserts.append(x.any() >= self.clip_min)\r\n\r\n        if self.clip_max is not None:\r\n            asserts.append(x.any() <= self.clip_max)\r\n\r\n        # Initialize loop variables\r\n        if self.rand_init:\r\n            eta = torch.FloatTensor(*x.shape).uniform_(-self.minmax, self.minmax)\r\n        else:\r\n            eta = torch.zeros_like(x)\r\n\r\n        # Clip eta\r\n        eta = clip_eta(eta, self.ord, self.eps)\r\n        adv_x = x + eta\r\n\r\n        if self.clip_min is not None or self.clip_max is not None:\r\n            adv_x = torch.clamp(adv_x, self.clip_max, self.clip_min)\r\n\r\n        if self.y_target is not None:\r\n            y = self.y_target\r\n            targeted = True\r\n        elif self.y is not None:\r\n            y = self.y\r\n            targeted = False\r\n        else:\r\n            model_preds = self.model.get_probs(x)\r\n            preds_max = reduce_max(model_preds, 1)\r\n            y = torch.equals(model_preds, preds_max).float()\r\n            y.requires_grad = False\r\n            targeted = False\r\n            del model_preds\r\n\r\n        y_kwarg = 'y_target' if targeted else 'y'\r\n        fgm_params = {\r\n            'eps' : self.eps_iter,\r\n            y_kwarg: y,\r\n            'ord' : self.ord,\r\n            'clip_min' : self.clip_min,\r\n            'clip_max' : self.clip_max\r\n        }\r\n\r\n        if self.ord == 1:\r\n            raise NotImplementedError(\"It's not clear that FGM is a good inner loop\"\r\n                                      \" step for PGD when ord=1, because ord=1 FGM \"\r\n                                      \" changes only one pixel at a time. We need \"\r\n                                      \" to rigoursly test a strong ord=1 PGD \"\r\n                                      \" before enabling this feature.\")\r\n\r\n        FGM = self.FGM_CLASS(self.model, dtype)\r\n\r\n        while i < self.nb_iter:\r\n            \"\"\"\r\n            Do a projected gradient step.\r\n            \"\"\"\r\n            adv_x = FGM.generate(adv_x, **fgm_params)\r\n\r\n            # Clipping perturbation eta to self.ord norm ball\r\n            eta = adv_x - x\r\n            eta = clip_eta(eta, self.ord, self.eps)\r\n            adv_x = x + eta\r\n\r\n            # Redo the clipping.\r\n            # FGM alread already did it, but subtracting and re-adding eta can add some\r\n            # small numerical error\r\n            if self.clip_min is not None or self.clip_max is not None:\r\n                adv_x = torch.clamp(adv_x, self.clip_min, self.clip_max)\r\n\r\n        # Asserts run only on CPU\r\n        # When multi-GPU eval code tries to force all PGD ops onto GPU, this\r\n        # can cause an error.\r\n        common_dtype = torch.float32\r\n        # NOTE Maybe this needs a cast\r\n        asserts.append(self.eps <= (1e6 + self.clip_max - self.clip_min))\r\n        \r\n        return adv_x\r\n``` Hi! \r\nI am currently implementing the attacks in pytorch 1.0 and I was unaware of the of pytorch support on cleverhans, I will be happy to help :) @iArunava do you want to take this one? Thanks. @npapernot I think what you guys are trying to do is better than having a uniform interface across backends. I think it is easier to maintain in the long run.\r\n\r\nSo do we want the model_fn to be wrapped as a cleverhans.model.Model? I see the current wrapper is TF-based. I can implement a PyTorch-based one if that is needed. That may need to be done as a separate Issue.\r\n\r\nThanks. Actually we were thinking of dropping the model API. The idea is to simplify integration by simply having a model_func that takes an input and returns the logits. @david-berthelot Gotcha. Thanks for answering.  Hi :) As I am seeing now, the pytorch models are converted to tf and then the attacks are performed, so where exactly a PyTorch implementation of PGD is going to sit in the library and how its supposed to integrate with the library? Am I missing something? We're dropping the cross-framework approach for the sake of simplicity. The focus is now to make it simple to add an attack to an existing model (say for adversarial training).\r\n\r\nThe way we see it is as a standalone implementation. So in each framework (TF2, JAX, Torch), there'll be a pgd implementation that follows this API:\r\n```\r\ndef pgd(model_fn, input, eps=0.2, iterations=1000):\r\n  # model_fn takes an input batch and produces the corresponding logits.\r\n  # pgd code goes here.\r\n  return adv_input\r\n```\r\n @david-berthelot I'm working on this and I have a quick question. \r\n\r\n@npapernot mentioned that attacks should also support numpy arrays. My idea is to just wrap them as PyTorch objects in the beginning so that inside pgd, everything can be written in pure PyTorch and the code would be cleaner. \r\n\r\nDoes this sound good to you? My concern is that when people explicitly feed in numpy objects, they may be hoping to stay with numpy operations throughout to avoid using GPU (or for some other reasons).\r\n\r\nThanks.\r\n I'm not sure, as far as I know, TF2 can take numpy arrays directly without conversion. For PyTorch, may be just expecting a Tensor would seem to make sense to me and leave it to the caller to convert their numpy array to a tensor. And I think using the GPU would be expected, the other way around would be a surprise to me (like defaulting to CPU).\r\n\r\n@npapernot What's your take on this? @david-berthelot In PyTorch v1.0, I don't think numpy arrays can always be processed directly without error. For example, PyTorch's Tensor operations would throw a TypeError if operand(s) involves a numpy array.\r\n\r\nI agree with supporting PyTorch Tensor only since a conversion before calling the function would be quite trivial and harmless. Also, I think a typical PyTorch pipeline begins with such data conversion anyway.\r\n\r\nThanks. @npapernot Perfect!\r\n\r\nI opened PR  #1028 for this issue. Although, since PGD relies on an FGM engine, I think I will implement that as well. Is it ok to do that in the same PR or is it preferable to open a separate PR for FGM?\r\n\r\nThanks. Also, please ignore the closed PR #1027. I got the branch name wrong when I opened it. Sorry about that. @npapernot I see. I will be waiting for the API template. Just let me know when you guys have it ready. Thanks. @npapernot I made some commits in the PR just to keep track of my work. The current implementations don't conform to the desired function-based API but I will revise everything once you guys have the API template ready.\r\n\r\nThanks. Hi, Sorry for the late reply. Since @michaelshiyu is already on PGD I can start taking another attack,or help Michael on that. Let me know. I created a Pull request for the very simple Noise attack here #1029 \r\nIts WIP. I will make the changes and tag one of you to review. And I am looking forward to the API template will make changes according to that. Super cool!\r\nI've always expecting better support for pytorch in cleverhans and here it will be! :laughing: \r\nWould be extremely happy to help :raised_hand_with_fingers_splayed:  Sounds good. I am already implementing `saliency_map_method` attack in PyTorch. Just let me know when you are ready. I will make the PR. @npapernot awesome! Thanks!  Quick question: for tutorials there are no tf2/jax/torch folders, is it intentional?  PyTorch v1.0 has been around for a while, any thoughts on upgrading the PyTorch support from v0.4 to v1.0?\r\n If we're to support PyTorch v1.0, I can take this issue if nobody else is planning to. @npapernot I\u2019m more than happy to contribute! Do you have anything specific that needs help right now? If not I guess I can start by implementing attacks in PyTorch and put them in future/torch/attacks?   **Describe the bug**\r\ntensorflow.python.framework.errors_impl.InternalError: Invalid loop structure: Mismatched parent frames for \"while/while_context\": \"while/while_context\" vs \"\". The node giving this error: {{node while/gradients/while/model/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad/Enter}}This is an internal bug, please file a bug report with instructions on how to reproduce the error.\r\n\r\nI assume it is related to batch_norm, where the implementation is the same the following,\r\nhttps://github.com/geifmany/cifar-vgg/blob/master/cifar10vgg.py \r\n\r\nAnd I use the KerasModelWrapper to wrap the Keras sequential model. \r\n\r\nP.S  I find cleverhans works to generate adversaries for FGSM, deepfool, but the same error occurs for both BasicIterativeMethod and JSMA\r\n\r\nMy tensorflow version is 1.11.0 and cleverhans version is 3.0.1\r\n\r\n  See #1000 for detail description and  code to reproduce error. Selecting the second label as a target may not always be the best thing to do in the untargeted setting. Would you be able to instead modify the loss in the untargeted case so that rather than maximizing the score of the target class, the attack minimizes the score of the correct class until the input is misclassified? This would likely be more generally applicable @npapernot  Sorry for the delay, I've been working on other stuff recently.\r\nI will try to figure it out next weekend. @npapernot  \r\nCan I have my name on the Authors list in `README.md` if this PR is merged?\r\nI think I've already satisfied the requirments:\r\n```\r\nThe following authors contributed 100 lines or more (ordered according to the GitHub contributors page)\r\n```\r\n:laughing: it will be super cool for me~\r\nHaojieYuan (University of Science and Technology of China)  **Describe the bug**\r\nThe overshoot variable is not used within the while loop in the deepfool_attack function. The perturbation being added at the end after the while loop appears to be redundant code.\r\n\r\n**Link to lines of code**\r\nhttps://github.com/tensorflow/cleverhans/blob/ce6bc7130ab53a0947ddc381599acf749e375dc1/cleverhans/attacks/deep_fool.py#L237\r\n\r\nhttps://github.com/tensorflow/cleverhans/blob/ce6bc7130ab53a0947ddc381599acf749e375dc1/cleverhans/attacks/deep_fool.py#L251\r\n\r\n**Change suggested**\r\nIn line 237 before adding the perturbation there needs to be a `(1+overshoot)` term multiplied to the perturbation `r_tot`. \r\n\r\nLine 251 can be removed. I couldn't find any indication in the paper about the overshoot but the paper had accompanying code with it.\r\n\r\nhttps://github.com/LTS4/DeepFool/blob/575f3d847ee65d78c0e3b0306657e3e6d575ba7b/Python/deepfool.py#L75\r\n\r\nIn this line within the loop they are updating the value with the overshoot term. I am not sure what the actual intent of the authors was and if we can take the code as indication of the intent or whether the code is a bug on their part. I am not sure whether it is worth reopening this issue over that.   Yeah, this is WIP. By the time it's ready to merge I expect not to have anything in experimental  ***The issue tracker should only be used to report bugs or feature requests. If you are looking for support from other library users, please ask a question on [StackOverflow](https://stackoverflow.com/questions/tagged/cleverhans).***\r\n\r\n**Describe the bug**\r\nFor now, I have found two errors in mnist_tutorial_keras.py.\r\nThe first error occurs in the original code in the repo.\r\nValueError: Could not interpret optimizer identifier: <tensorflow.python.keras.optimizers.Adam object at 0x7fa852729f28>\r\nIt may be caused by different versions of Keras libraries from Keras-base and keras in Tensorflow.\r\nI have tried to install keras-2.1.6 as Tensorflow has. But it doesn't work.\r\n\r\nI tried to import keras without Tensorflow as \"import keras\". But it causes the second error.\r\nAttributeError: Layer sequential_1 has multiple inbound nodes, hence the notion of \"layer input\" is ill-defined. Use `get_input_at(node_index)` instead.\r\nThis error occurs at input method of Layer class in keras/engine/base_layer.py\r\nI have no idea what caused this error.\r\n\r\nBesides, I tried to remove keras library. Then I found that the keras library is required by CleverHans.\r\n\r\n\r\n**System configuration**\r\n - CentOS 7\r\n - Python 3.6.8\r\n - TensorFlow r1.12\r\n - Keras 2.2.4\r\n I think I have figure out the first error.\r\nFirst, I import keras directly rather than from tensorflow at the 14th line.\r\nThen, I comment the 87th line which is called to deal with some errors when the model uses custom loss.\r\n\r\nThese operations only make the traditional model training processes work. But the second error still occurs in the adversarial training.\r\n\r\nI have tried to locate the error. I found that Cross-entropy on the adversarial examples in function get_adversarial_loss (line 195) may causes the error. But I still have no idea how to deal with it.  **Is your feature request related to a problem? Please describe.**\r\nHi all, I'm doing research on designing defensive methods. From the references I used and my own experience, a standard of the evaluation process could largely benefit the whole community. Since different evaluation process is conducted, it is hard for people to evaluate their proposed defense with the state-of-the-art. Moreover, some weakly designed evaluation may result in the obfuscated gradient effect which is already identified by @carlini.\r\n\r\n**Describe the solution you'd like**\r\nAs a reference or a suggestion, CleverHans could offer an evaluation demo to the whole community. In this demo, a detailed evaluation plan could be offered which includes a selection of different adversarial examples, different evaluation flows for white-box/black-box defenses and even the computational cost of proposed defenses.\r\n  Replaced eigenvalue computation with Scipy eigs.  Implements a [Houdini](https://arxiv.org/abs/1707.05373)-based loss. The interface is a wrapper around an existing model and loss.\r\n\r\nRelated to issue #377.\r\n\r\nTODO :\r\n- [x] Make implementation more efficient\r\n- [ ] Add tests\r\n- [ ] Add examples Is this still WIP or should I review / merge it? Hi @goodfeli, could you take a quick look when you have the time, just to make sure I'm on the right track so far? I've tried out this implementation with the MNIST CW attack tutorial, and it seems to work.\r\n\r\nHowever, it's far slower - 45 seconds per epoch vs 2.25 for the original implementation, on a GTX 1080 Ti. The main bottleneck seems to be the normal distribution survival function.\r\n\r\nAlso, it causes a slight drop in effectiveness of the attack (98 out of 100). This leads me to some questions about the formulation of the Houdini loss itself. If we want it to reduce to the task loss eventually, like the authors claim, shouldn't there be a factor of 2 multiplied with the stochastic margin? When the actual target is the same as the predicted target, the difference in scores is zero, and the margin is therefore 0.5.\r\n\r\nWhen I multiply by this factor of 2 in my implementation (by adding a 2* [here](https://github.com/tensorflow/cleverhans/pull/967/files#diff-9c91717d5aff218520b49f838328f0f5R279)), I get 100 on 100 effectiveness again. What are your views on this? Moustapha (1st author of the Houdini paper) works at Google now. I'll ask him if he can take a look. Hi Nicolas,\nSure I would be happy to help :)\nI\u2019ll take a look at it later this week.\n\nY\n\n\nOn 5 April 2019 at 3:03:33, Nicolas Papernot (notifications@github.com)\nwrote:\n\nHi @adiyoss <https://github.com/adiyoss> could you take a look and provide\nsome guidance? Would be great to have this loss merged!\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n<https://github.com/tensorflow/cleverhans/pull/967#issuecomment-480104928>,\nor mute the thread\n<https://github.com/notifications/unsubscribe-auth/AH56Dy2IzI2TrRbZd985h6MwHQl5c1HQks5vdpLUgaJpZM4aUK5L>\n.\n @adiyoss gentle ping :)  @npapernot Sure, I'll do it soon, sorry for being late. A little busy with finalizing my PhD dissertation :)\r\n  Would it make sense to put this in `cleverhans.model_zoo` rather than `examples`?  As noted in https://github.com/tensorflow/cleverhans/issues/895, using CleverHans' functionality together with Keras' custom losses allows Keras users to keep using `.fit()` and `.evaluate()` with their models. Providing a tutorial showing how to do this would enable a quick start for Keras / tf.keras users. \r\n\r\nFor example, the accuracy on adversarial examples can be implemented using a custom metric:\r\n\r\n```python\r\ndef adv_acc(y_true, y_pred):\r\n  # Generate adversarial examples\r\n  x_adv = fgsm.generate(model.input, **fgsm_params)\r\n  # Consider the attack to be constant\r\n  x_adv = tf.stop_gradient(x_adv)\r\n\r\n  # Accuracy on the adversarial examples\r\n  y_adv = model(x_adv)\r\n  return keras.metrics.categorical_accuracy(y_true, y_adv)\r\n``` \r\n\r\nTraining and evaluating a model using this metric thus requires minimal changes to the usual Keras workflow:\r\n\r\n```python\r\nmodel.compile(optimizer='adam', \r\n              loss='categorical_crossentropy', \r\n              metrics=['accuracy', adv_acc])\r\nmodel.fit(x_train, y_train, epochs=nb_epochs, validation_data=(x_test, y_test))\r\n\r\n# Evaluate the accuracy on legitimate and adversarial test examples\r\nloss, acc, adv_acc = model.evaluate(x_test, y_test)\r\n```\r\n\r\n## Code\r\n\r\nIn `cleverhans_tutorials/mnist_tutorial_keras.py`, I modified `cleverhans_tutorials/mnist_tutorial_keras_tf.py` and replaced\r\n- `cleverhans.train.train` with `model.fit()`\r\n- `cleverhans.utils_tf.model_eval` with `model.evaluate()`\r\n\r\nSince a tutorial showcasing the use of the CleverHans functions for training and evaluation is very helpful, I decided to put the new implementation into its own module for now. If you find it more appropriate to replace the existing tutorial I am happy to do so. \r\n\r\n`tests_tf/test_mnist_tutorial_keras.py` contains tests for the tutorial, just like `tests_tf/test_mnist_tutorial_keras_tf.py`\r\n\r\n## Metrics\r\n\r\nTo make sure that the new implementation still achieves the same accuracies as the existing one I ran both tutorials with 8 different random seeds on a GPU. Below are the means and standard deviations of the test accuracies in the `cleverhans.utils.AccuracyReport`:\r\n\r\n### Original Implementation\r\n- `clean_train_clean_eval`: 99.33% \u00b1 0.02%\r\n- `clean_train_adv_eval`: 8.28% \u00b1 1.53%\r\n- `adv_train_clean_eval`: 99.07% \u00b1 0.06%\r\n- `adv_train_adv_eval`: 92.13% \u00b1 0.67%\r\n\r\n### New Implementation\r\n- `clean_train_clean_eval`: 99.31% \u00b1 0.06%\r\n- `clean_train_adv_eval`: 8.57% \u00b1 2.44%\r\n- `adv_train_clean_eval`: 99.11% \u00b1 0.07%\r\n- `adv_train_adv_eval`: 92.09% \u00b1 1.08%\r\n\r\n @npapernot thanks for the quick feedback. I renamed `y_` variables to `preds_`.\r\n\r\nThe [TF 1.12 build](https://travis-ci.com/tensorflow/cleverhans/jobs/172435442#L2505) failed because Travis did not receive any output for 10 minutes and thought the build was stalled. After changing `nosetests --nologcapture` to `nosetests --nocapture`, the build passes, since Travis now also sees `print()` outputs from the tutorials. Another option would be to use `travis_wait` or to change all `print()` statements in the tutorials to `_logger.info()`. I'm happy to do that if you prefer.\r\n\r\nThe [TF 1.8 build](https://travis-ci.com/tensorflow/cleverhans/jobs/172968975#L1761) fails because of the tolerance, as you mentioned. Interestingly, it only fails when the test is called as part of `nosetests --nocapture -v --stop tests_tf;`. To verify that, I temporarily added \r\n\r\n`nosetests --nocapture -v --stop tests_tf/test_mnist_tutorial_keras.py;`\r\n\r\nto the travis config, which results in the exact same accs in `report` and `report_2` ([line 1150](https://travis-ci.com/tensorflow/cleverhans/jobs/172968975#L1150) and [line 1176](https://travis-ci.com/tensorflow/cleverhans/jobs/172968975#L1176)). However, the subsequent call of \r\n\r\n`nosetests --nocapture -v --stop tests_tf;`\r\n\r\nresults in different accs in `report` and `report_2` ([line 1720](https://travis-ci.com/tensorflow/cleverhans/jobs/172968975#L1720) and [line 1746](https://travis-ci.com/tensorflow/cleverhans/jobs/172968975#L1746)). This is irritating, since both times the exact same code is executed and it only happens on TF 1.8. It might have to do with some code that is executed in a previous test in `tests_tf`. I hope I will be able to find the reason. I noticed that even after moving the existing Keras tutorial to the examples folder the TF 1.8 build still failed. Like above, `test_mnist_tutorial_keras.py` passes when run in isolation. However, it fails because of different scores in `report_2` when run as a part of `nosetests --nocapture -v --stop tests_tf`. I also found that even running only `test_attacks.py` before the tutorial's test is enough to make it non-deterministic. I spent the last days debugging but could not find the reason for this inter-test dependency, which interestingly does not occur in TF 1.12.\r\n\r\nOne solution would be to run each test separately to eliminate the inter-test dependency, i.e. replace \r\n\r\n```bash\r\nnosetests --nologcapture -v --stop tests_tf;\r\n```\r\n\r\nwith \r\n\r\n```bash\r\nfor test_path in tests_tf/*.py ; do\r\n  nosetests --nocapture -v --stop $test_path;\r\ndone\r\n```\r\n\r\nin `.travis.yml`. This is the current solution and makes the builds pass. An alternative would be to exclude the tutorial's test from the TF 1.8 builds or to remove the comparison of the accuracies in `report` and `report_2`. Which solution would you prefer? So there's good news and bad news.\n\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\n:confused: The bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter.  We need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that here in the pull request.\n\n*Note to project maintainer: This is a terminal state, meaning the `cla/google` commit status will not change from this state. It's up to you to confirm consent of all the commit author(s), set the `cla` label to `yes` (if enabled on your project), and then merge this pull request when appropriate.*\n\nGooglers can find more info about SignCLA and this PR by [following this link](go/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Fcleverhans%2Fpull%2F962).\n\n<!-- need_author_consent --> Thanks I only made one change (decrease the number of epochs for the test) and will merge once tests pass again  ***The issue tracker should only be used to report bugs or feature requests. If you are looking for support from other library users, please ask a question on [StackOverflow](https://stackoverflow.com/questions/tagged/cleverhans).***\r\n\r\n**Describe the bug**\r\nfrom cleverhans.compat import flags\r\nWhen I run this in Python, I get the following error:\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nImportError: cannot import name 'flags'\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\n\r\n**System configuration**\r\n - OS - Ubuntu 16.04\r\n - Python version - 3.6.3 (anaconda installed)\r\n - TensorFlow version - 1.12.0\r\n The version is 3.0.1. Actually, I installed the library using pip today itself. I have attached the screenshot for your reference.\r\n![image](https://user-images.githubusercontent.com/22225079/51554448-5832d000-1e9b-11e9-8fc5-e7509a83155d.png)\r\n I uninstalled the library and then, upgraded the version of pip to 19.0.1. Then when I installed cleverhans using  pip install git+https://github.com/tensorflow/cleverhans.git#egg=cleverhans, it worked. \r\nThanks for the help.  I can't do `pip install git+https://github.com/tensorflow/cleverhans.git#egg=cleverhans` for some reason\r\n\r\nI get `no matches found: git+https://github.com/tensorflow/cleverhans.git#egg=cleverhans` > The version for pip is not the latest (it doesn't keep track of each commit to the master branch but rather is the last versioned CleverHans), could you try installing by cloning the github repository directly? You can do it with `pip install git+https://github.com/tensorflow/cleverhans.git#egg=cleverhans`\r\n\r\nIt works! Thanks for your kind help!  - removed extraneous calls to functions\r\n- avoided reconstructing graph nodes several times\r\n\r\nTODO:\r\n- decompose the eigenvalue computation\r\n- delete the testing code (random seeds, logging time)\r\n- document further\r\n- remove unnecessary files \nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here (e.g. `I signed it!`) and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google.com/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n<!-- need_sender_cla --> I signed it! We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for all the commit author(s) or Co-authors.  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA ([login here](https://cla.developers.google.com/) to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\nIn order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again. If the bot doesn't comment, it means it doesn't think anything has changed.\n\n<!-- need_author_cla --> @npapernot yes, this will eventually supersede #923, however we would prefer #923 for now as a reference. Closing because of https://github.com/tensorflow/cleverhans/pull/961    I use VirtualAdversarialMethod to attack CIFAR-10 dataset,  but on the train dataset, the successful rate is only 0.43622. I use the default parameter setting by the way.\r\nCan you give an VAT method example ? How to set parameter and increase the successful rate above 90% @npapernot I think the code of \r\nVirtualAdversarialMethod  attack has a bug inside it. if this is actually a bug report, can you post details?\r\n\r\nis there anything that looks wrong in the code?\r\n\r\nare there published adversarial error rates for this algorithm that this code isn't achieving?\r\n\r\nVAT is usually used for semi-supervised learning, not adversarial attacks, so I'm not actually sure what error rate it should get. It's likely that the numbers are lower than you're expecting because VAT isn't an aggressive attack algorithm or because you need to use different hyperparameters for this model / dataset. @goodfeli OK, I will do more test on the algorithm on CIFAR-10 dataset, And write a report pdf file to you? Is that OK? @npapernot just wait for me to write it. @goodfeli @npapernot \r\nI found 4 attack method in Cifar-10 untargeted attack has low successful rate, which are\r\n1. VirtualAdversarialMethod, 2. L2 norm of MomentumIterativeMethod,\r\n3. L2 norm of BasicIterativeMethod, 4. L infinity version of deep_fool(the original cleverhans deepfool is L2 norm, I extend it to L-inf version according to original paper,\r\n\r\nIn addition, I also test a L-infinity version of DeepFool, this code is just a little modifed code of original cleverhans' DeepFool to add L-inf functionality, which is described in original paper's page 5.\r\npaper can be downloaded from https://arxiv.org/abs/1511.04599.  But it also test FAILED! SUCCESSFUL RATE is so LOW!\r\n\r\nAll of the code is wrtten in the uploaded script:\r\n[attacker_bug_report_script.zip](https://github.com/tensorflow/cleverhans/files/2783221/attacker_bug_report_script.zip)\r\nYou can download it and just run, it will first train a model on clean CIFAR-10 data.\r\nThen use this model to generate adversarial examples of VirtualAdversarialMethod, L2 norm of MomentumIterativeMethod, L2 norm of BasicIterativeMethod, infinity version of deep_fool. one by one.\r\nThe successful rate will be printed. Because I am in hurry for doing an adversarial example research, if you found the bug or the problem is, please feel free to contact with me as soon as possible. My email is :  sharpstill@163.com @goodfeli @npapernot Do you have any progress on this bug? Or do you have some feedback or problem need to let me know? Can you explain a specific success rate that you expect for a specific model and set of success hyperparameters, why you expect that success rate (e.g. it was published before), and what success rate you're actually getting? @goodfeli My concept of  success rate is : How many proportions of generated adversarial images can be misclassified by the classifier ? For example, the proportions  of VAT generated examples which misclassified by the classifier (which lead the classifier to predict label other than ground truth label) is about 46%. My expectation is above 90%. and L2 norm version of BasicIterativeMethod(BIM) is much lower , less than 10%. But In contrast, The success rate  of L-inf norm of  BIM  is 96% using exactly the same hyper parameters of BIM L2.  @goodfeli all the code I have summarized to the .py file, which is uploaded in my last comment. You can download and run it, and it also supplies all the hyper parameters I used in my experiments. for example, if you use the below configuration and attack methods, you will achieve definitely low attack successful rate on CIFAR-10.\r\n```\r\nATTACKERS = {\"VAT\": VirtualAdversarialMethod, \"MI_FGSM_L2\": MomentumIterativeMethod,\r\n             \"BIM_L2\": BasicIterativeMethod, \"deep_fool_L_infinity\":DeepFool,\r\n             }\r\nATTACK_PARAM = {\"VAT\": {\"nb_iter\":20, \"clip_min\":-3., \"clip_max\":3., \"eps\":6.0, \"xi\":1e-6},\r\n                \"BIM_L2\" :{\"ord\":2, \"rand_init\":False, \"rand_minmax\":0, \"nb_iter\":40,\"eps_iter\":0.1, \"clip_min\":-3., \"clip_max\":3.},\r\n                \"MI_FGSM_L2\": {\"ord\": 2, \"eps\": 0.3, \"nb_iter\": 40, \"decay_factor\": 1.0, \"eps_iter\": 0.1,\r\n                               \"clip_min\": -3., \"clip_max\": 3., },\r\n                \"deep_fool_L_infinity\":{ \"overshoot\": 0.02, \"max_iter\": 40, \"clip_min\": -3., \"clip_max\": 3., \"batch_size\": 500, \"Lp_norm\": np.inf},\r\n                }\r\n``` @goodfeli do you have any progressive or issue let me know for using my script file to reproduce the bugs? I assume this is just VAT working as intended. The VAT papers don't really use it as an attack or measure its success rate AFAIK. VAT is more of a dataset augmentation technique for semi-supervised learning. I'll close this issue, but we can re-open it if anyone provides evidence that correctly implemented VAT should have a high attack success rate. @goodfeli OK, but the other 3 L2 norm version of attack algorithm still have lower than 10%  attack successful rate:\r\n```\r\n \"BIM_L2\" :{\"ord\":2, \"rand_init\":False, \"rand_minmax\":0, \"nb_iter\":40,\"eps_iter\":0.1, \"clip_min\":-3., \"clip_max\":3.},\r\n \"MI_FGSM_L2\": {\"ord\": 2, \"eps\": 0.3, \"nb_iter\": 40, \"decay_factor\": 1.0, \"eps_iter\": 0.1,\r\n                               \"clip_min\": -3., \"clip_max\": 3., },\r\n\"deep_fool_L_infinity\":{ \"overshoot\": 0.02, \"max_iter\": 40, \"clip_min\": -3., \"clip_max\": 3., \"batch_size\": 500, \"Lp_norm\": np.inf}\r\n\r\n```\r\nCan you reopen this question, because I think there still be bug inside BIM and momentum iterative GSM at least.\r\n @npapernot in VAT attack, I observe the  attack successful rate is 46%. My expectation is above 90%. And in L2 norm of BIM and L2 norm of momentum iterative FGSM (MI-FGSM),   both attacks achieve successful rate less than 10%.   But the successful rate of  L-inf norm of BIM and MI-FGSM is 98%.  @npapernot BTW, I use CIFAR_10 to conduct my experiment, please download my script file to run .\r\n[attacker_bug_report_script.zip](https://github.com/tensorflow/cleverhans/files/2816005/attacker_bug_report_script.zip)\r\n  Cleverhans docs' attack list page [here](https://cleverhans.readthedocs.io/en/latest/source/attacks.html), is currently empty.\r\n\r\n![image](https://user-images.githubusercontent.com/13417114/50969965-0aff4780-1506-11e9-8f38-af928587a7d3.png) I imagine this is because I recently moved each attack into its own submodules. @nottombrown , is there something I need to do to register the new submodules with the doc system? Ah sorry for the slow response. It looks like my github updates were being filtered. @npapernot I've added you as a maintainer of the readthedocs project here: https://readthedocs.org/dashboard/cleverhans/  Line 42 in utils_pytorch.py:\r\n  :param model: A pytorch nn.Model object\r\nDo you mean a pytorch nn.Module object. Not sure what a nn.Model is.  Indeed, it should say module. Submitting a fix in a minute or two.  This drops support for Python 2. It also changes all uses of keras to tensorflow.keras (which exists in all the supported versions of tensorflow) rather than standalone keras. it looks like \"from tensorflow import keras\" works and causes the JSON file to get regenerated, so I'll switch to that   @goodfeli could you double-check? I think I recall you setting this to be float64 It seems easiest to me to pull this in for now, and then revisit later. I'm going to eventually want to pass over all this code to check that it's performant, and scrutinize which parts are running on CPU/TPU and whether that's appropriate.... but for now getting it to run at all is a bigger priority.  This looks good, can you confirm there are no code additions in the attack classes? This is just moving things around?  I have thought about re-implementing \"universal adversarial perturbation\" using a trained model and cleverhans. As the previous stage, I searched for a examples that uses trained model to output something Adversarial Examples.\r\n\r\nFor that reason, I've tried using attack_fgsm.py from nips17_adversarial_competition. \r\nhttps://github.com/tensorflow/cleverhans/blob/master/examples/nips17_adversarial_competition/dev_toolkit/sample_attacks/fgsm/attack_fgsm.py\r\n\r\nforemost,I made changes to the directory as follows.\r\n\r\n|- fgsm\r\n&nbsp;&nbsp;&nbsp;|-- input\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|---(( some images ))\r\n&nbsp;&nbsp;&nbsp;|-- output\r\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|--- ((empty directory))\r\n&nbsp;&nbsp;&nbsp;|-- inception_v3.ckpt\r\n&nbsp;&nbsp;&nbsp;|-- atack_fgsm.py\r\n&nbsp;&nbsp;&nbsp;|-- metadata.json\r\n&nbsp;&nbsp;&nbsp;|-- run_attack.sh\r\n\r\nNext, I fixed part of attack_fgsm.py as follows.\r\n\r\n```\r\ntf.flags.DEFINE_string(\r\n    'master', '', 'The address of the TensorFlow master to use.')\r\n\r\ntf.flags.DEFINE_string(\r\n    'checkpoint_path', 'inception_v3.ckpt', 'Path to checkpoint for inception network.')\r\n\r\ntf.flags.DEFINE_string(\r\n    'input_dir', 'input/', 'Input directory with images.')\r\n\r\ntf.flags.DEFINE_string(\r\n    'output_dir', 'output/', 'Output directory with images.')\r\n```\r\n\r\nI execution attack_fgsm.py in this state and the following error appeared.\r\n\r\n```\r\n`fprop` not implemented.\r\nstack trace:\r\n >  File \"G:\\downloads\\cleverhans-master\\cleverhans-master\\examples\\nips17_adversarial_competition\\dev_toolkit\\sample_attacks\\fgsm\\attack_fgsm.py\", line 160, in main\r\n >    save_images(adv_images, filenames, FLAGS.output_dir)\r\n >  File \"G:\\downloads\\cleverhans-master\\cleverhans-master\\examples\\nips17_adversarial_competition\\dev_toolkit\\sample_attacks\\fgsm\\attack_fgsm.py\", line 164, in <module>\r\n >    tf.app.run()\r\n'__main__' \u3092\u8aad\u307f\u8fbc\u307f\u307e\u3057\u305f\r\n'tensorflow.python.platform.app' \u3092\u8aad\u307f\u8fbc\u307f\u307e\u3057\u305f\r\nBackend TkAgg is interactive backend. Turning interactive mode on.\r\n```\r\n\r\nThe program is stopped at the following location.\r\nhttps://github.com/tensorflow/cleverhans/blob/510e16df371f006ded96ad7fbae7486653897aba/examples/nips17_adversarial_competition/dev_toolkit/sample_attacks/fgsm/attack_fgsm.py#L145\r\n\r\nHow can I resolve this error? Sorry. This problem was caused by the change of InceptionModel inheritance from object class to Model class.\r\n\r\nBut, when I undo this change I got a new error.\r\n```\r\nG:\\fgsm>py.exe attack_fgsm.py\r\nTraceback (most recent call last):\r\n  File \"attack_fgsm.py\", line 161, in <module>\r\n    tf.app.run()\r\n  File \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Python36_64\\lib\\site-packages\\tensorflow\\python\\platform\\app.py\", line 125, in run\r\n    _sys.exit(main(argv))\r\n  File \"attack_fgsm.py\", line 144, in main\r\n    fgsm = FastGradientMethod(model)\r\n  File \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Python36_64\\lib\\site-packages\\cleverhans\\attacks\\__init__.py\", line 328, in __init__\r\n    super(FastGradientMethod, self).__init__(model, sess, dtypestr, **kwargs)\r\n  File \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Python36_64\\lib\\site-packages\\cleverhans\\attacks\\__init__.py\", line 57, in __init__\r\n    raise TypeError(\"The model argument should be an instance of\"\r\nTypeError: The model argument should be an instance of the cleverhans.model.Model class.\r\n```\r\nI guess this is due to the inheritance class of the following line, how can i fix.\r\n\r\nhttps://github.com/tensorflow/cleverhans/blob/510e16df371f006ded96ad7fbae7486653897aba/examples/nips17_adversarial_competition/dev_toolkit/sample_attacks/fgsm/attack_fgsm.py#L98 I had forgotten about version of CleverHans. I want to make this source work even in the latest version library.\r\n\r\nI rewrote Inception Model class based on the following source and it worked well.\r\n\r\nhttps://github.com/tensorflow/cleverhans/blob/510e16df371f006ded96ad7fbae7486653897aba/examples/test_imagenet_attacks.py#L86\r\n\r\nThank you.\r\n\r\n```\r\n\"\"\"My changed full source code.\"\"\"\r\n\r\nfrom __future__ import absolute_import\r\nfrom __future__ import division\r\nfrom __future__ import print_function\r\n\r\nimport os\r\nimport warnings\r\n\r\nimport numpy as np\r\nimport tensorflow as tf\r\nfrom tensorflow.contrib.slim.nets import inception\r\nfrom PIL import Image\r\nfrom cleverhans.model import Model\r\n\r\nfrom cleverhans.attacks import FastGradientMethod ,DeepFool\r\n\r\nslim = tf.contrib.slim\r\n\r\n\r\n\r\ntf.flags.DEFINE_string(\r\n    'master', '', 'The address of the TensorFlow master to use.')\r\n\r\ntf.flags.DEFINE_string(\r\n    'checkpoint_path', 'inception_v3.ckpt', 'Path to checkpoint for inception network.')\r\n\r\ntf.flags.DEFINE_string(\r\n    'input_dir', 'input/', 'Input directory with images.')\r\n\r\ntf.flags.DEFINE_string(\r\n    'output_dir', 'output/', 'Output directory with images.')\r\n\r\ntf.flags.DEFINE_float(\r\n    'max_epsilon', 16.0, 'Maximum size of adversarial perturbation.')\r\n\r\ntf.flags.DEFINE_integer(\r\n    'image_width', 299, 'Width of each input images.')\r\n\r\ntf.flags.DEFINE_integer(\r\n    'image_height', 299, 'Height of each input images.')\r\n\r\ntf.flags.DEFINE_integer(\r\n    'batch_size', 1, 'How many images process at one time.')\r\n\r\nFLAGS = tf.flags.FLAGS\r\n\r\n\r\ndef load_images(input_dir, batch_shape):\r\n  \"\"\"Read png images from input directory in batches.\r\n  Args:\r\n    input_dir: input directory\r\n    batch_shape: shape of minibatch array, i.e. [batch_size, height, width, 3]\r\n  Yields:\r\n    filenames: list file names without path of each image\r\n      Lenght of this list could be less than batch_size, in this case only\r\n      first few images of the result are elements of the minibatch.\r\n    images: array with all images from this batch\r\n  \"\"\"\r\n  images = np.zeros(batch_shape)\r\n  filenames = []\r\n  idx = 0\r\n  batch_size = batch_shape[0]\r\n  for filepath in tf.gfile.Glob(os.path.join(input_dir, '*.png')):\r\n    print(filepath)\r\n   # --- change open method . This change has no impact for code ---\r\n    with open(filepath,\"rb\") as f:\r\n      image = np.array(Image.open(f).convert('RGB')).astype(np.float) / 255.0\r\n    # Images for inception classifier are normalized to be in [-1, 1] interval.\r\n    images[idx, :, :, :] = image * 2.0 - 1.0\r\n    filenames.append(os.path.basename(filepath))\r\n    idx += 1\r\n    if idx == batch_size:\r\n      yield filenames, images\r\n      filenames = []\r\n      images = np.zeros(batch_shape)\r\n      idx = 0\r\n  if idx > 0:\r\n    yield filenames, images\r\n\r\n\r\ndef save_images(images, filenames, output_dir):\r\n  \"\"\"Saves images to the output directory.\r\n  Args:\r\n    images: array with minibatch of images\r\n    filenames: list of filenames without path\r\n      If number of file names in this list less than number of images in\r\n      the minibatch then only first len(filenames) images will be saved.\r\n    output_dir: directory where to save images\r\n  \"\"\"\r\n  for i, filename in enumerate(filenames):\r\n    # Images for inception classifier are normalized to be in [-1, 1] interval,\r\n    # so rescale them back to [0, 1].\r\n    with tf.gfile.Open(os.path.join(output_dir, filename), 'w') as f:\r\n      img = (((images[i, :, :, :] + 1.0) * 0.5) * 255.0).astype(np.uint8)\r\n      Image.fromarray(img).save(f, format='PNG')\r\n\r\n# ---change Model from object---\r\nclass InceptionModel(Model):\r\n  \"\"\"Model class for CleverHans library.\"\"\"\r\n\r\n  def __init__(self, nb_classes):\r\n    super(InceptionModel, self).__init__(nb_classes=nb_classes,\r\n                                         needs_dummy_fprop=True)\r\n    self.built = False\r\n\r\n  def __call__(self, x_input, return_logits=False):\r\n    \"\"\"Constructs model and return probabilities for given input.\"\"\"\r\n    reuse = True if self.built else None\r\n    with slim.arg_scope(inception.inception_v3_arg_scope()):\r\n      # Inception preprocessing uses [-1, 1]-scaled input.\r\n      x_input = x_input * 2.0 - 1.0\r\n      _, end_points = inception.inception_v3(\r\n          x_input, num_classes=self.nb_classes, is_training=False,\r\n          reuse=reuse)\r\n    self.built = True\r\n    self.logits = end_points['Logits']\r\n    # Strip off the extra reshape op at the output\r\n    self.probs = end_points['Predictions'].op.inputs[0]\r\n    if return_logits:\r\n      return self.logits\r\n    else:\r\n      return self.probs\r\n\r\n  def get_logits(self, x_input):\r\n    return self(x_input, return_logits=True)\r\n\r\n  def get_probs(self, x_input):\r\n    return self(x_input)\r\n\r\n\r\ndef main(_):\r\n  \"\"\"Run the sample attack\"\"\"\r\n  # Images for inception classifier are normalized to be in [-1, 1] interval,\r\n  # eps is a difference between pixels so it should be in [0, 2] interval.\r\n  # Renormalizing epsilon from [0, 255] to [0, 2].\r\n  eps = 2.0 * FLAGS.max_epsilon / 255.0\r\n  batch_shape = [FLAGS.batch_size, FLAGS.image_height, FLAGS.image_width, 3]\r\n  nb_classes = 1001\r\n\r\n  tf.logging.set_verbosity(tf.logging.INFO)\r\n  with tf.Graph().as_default():\r\n    # Prepare graph\r\n    x_input = tf.placeholder(tf.float32, shape=batch_shape)\r\n\r\n    model = InceptionModel(nb_classes)\r\n\r\n    fgsm = FastGradientMethod(model)\r\n    x_adv = fgsm.generate(x_input, eps=eps, clip_min=-1., clip_max=1.)\r\n\r\n    # Run computation\r\n    saver = tf.train.Saver(slim.get_model_variables())\r\n    session_creator = tf.train.ChiefSessionCreator(\r\n        scaffold=tf.train.Scaffold(saver=saver),\r\n        checkpoint_filename_with_path=FLAGS.checkpoint_path,\r\n        master=FLAGS.master)\r\n\r\n    with tf.train.MonitoredSession(session_creator=session_creator) as sess:\r\n      for filenames, images in load_images(FLAGS.input_dir, batch_shape):\r\n        adv_images = sess.run(x_adv, feed_dict={x_input: images})\r\n        save_images(adv_images, filenames, FLAGS.output_dir)\r\n\r\n\r\nif __name__ == '__main__':\r\n  tf.app.run()\r\n\r\n```\r\n  When I try to run the MomentumIterativeMethod, I get an Internal Error claiming that it is an internal bug.\r\n\r\nCode:\r\n```\r\nmethod = MomentumIterativeMethod(wrap, sess=sess)\r\nx = tf.placeholder(tf.float32, shape=ph_shape)\r\nx_adv = method.generate(x, **params)\r\n# Consider the attack to be constant\r\nx_adv = tf.stop_gradient(x_adv)\r\nx_adv_np = sess.run(x_adv, feed_dict={x: x_np})\r\n```\r\nError:\r\n```\r\nInternalError: Invalid loop structure: Mismatched parent frames for \"while/while_context\": \"while/while_context\" vs \"\". The node giving this error: node while/gradients/while/model_1/dropout_1/cond/mul_grad/Shape/Enter (defined at ../cleverhans/cleverhans/attacks/__init__.py:803) This is an internal bug, please file a bug report with instructions on how to reproduce the error.\r\n```\r\n\r\n**System configuration**\r\n - Python version: 3.6\r\n - TensorFlow version: 1.12.0\r\n Looks like another instance of https://github.com/tensorflow/tensorflow/issues/23166 as pointed out in #874 \r\n\r\nUnfortunately, there are no known solutions yet @kojino Were you able to find any workaround for now?  How to store the CIFAR10 model from the [tutorial](https://github.com/tensorflow/cleverhans/blob/a9f4425867d981ac732a23dce60eb7d08c24ebca/cleverhans_tutorials/cifar10_tutorial_tf.py)? I tried doing the same as in the MNIST tutorial by writing the following after the model has been trained ([line 136](https://github.com/tensorflow/cleverhans/blob/a9f4425867d981ac732a23dce60eb7d08c24ebca/cleverhans_tutorials/cifar10_tutorial_tf.py#L136)):\r\n```\r\nwith sess.as_default():\r\n    save(\"cleanCIFAR10Model.joblib\", model)\r\n```\r\n\r\nThe model trains succesfully but while trying to store it with the above code the following exception occurs: `TypeError: can't pickle _thread.RLock objects`.\r\n\r\n\r\nThe model from the MNIST tutorial is stored in exactly the same way (pasting the above code after the training code). The only notable difference between the MNIST and CIFAR tutorials is the preprocessing at [lines 84 - 86](https://github.com/tensorflow/cleverhans/blob/a9f4425867d981ac732a23dce60eb7d08c24ebca/cleverhans_tutorials/cifar10_tutorial_tf.py#L84). I suspect the exception is caused by the [lambda](https://stackoverflow.com/questions/47066635/checkpointing-keras-model-typeerror-cant-pickle-thread-lock-objects) at lines 85-86 (since `x` and `y` are `tf.float32`'s and Keras does not support serializing tf.Tensor)?\r\n\r\nAny suggestions for how to store the CIFAR model from this tutorial?  AttributeError: 'float' object has no attribute 'dtype'.     \r\npython3.5/site-packages/cleverhans/attacks.py\", line 620, in generate\r\n    dtype=self.eps.dtype)\r\nwhen I run BasicIterativeMethod to craft BIM adversarial example,  with params     bim_paras = {\r\n                    'clip_min': 0.,\r\n                    'clip_max': 1.,\r\n                   'y_target': None\r\n    }\r\n\r\n\r\ni just comment out this line..........................  and it run correctly..\r\n\r\nwin10&ubuntu   python3.5  I've just realized that there is a bug in the implementation of the deepfool attack on cleverhans.\r\nI tried using the original source code implemented in pytorch and the cleverhans code with the same parameters, same environment and on the same image and the output was completely different, I contacted the author of the paper and he told that he doesn't know about the cleverhans implementation and adviced me to use his own implementation Thanks for bring this issue. \r\n\r\nFor the network used in pytorch code, and the network used in tensorflow code, do they have exactly the same parameter, i.e., their network structures and weights are exactly the same? If they are the same, i think there should be a bug here. If they are not exactly the same, the outputs should be completely different. Thanks for your reply, when you say network are you talking about the\nclassification's model used, for instance inception v3 or resnet etc. If so\nam quite sure that it's the same as am working on the inceptionv3 for both\n\nOn Tue, Nov 27, 2018, 2:58 PM Cihang Xie <notifications@github.com> wrote:\n\n> Thanks for bring this issue.\n>\n> For the network used in pytorch code, and the network used in tensorflow\n> code, do they have exactly the same parameter, i.e., their network\n> structures and weights are exactly the same? If they are the same, i think\n> there should be a bug here. If they are not exactly the same, the outputs\n> should be completely different.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/issues/913#issuecomment-442067076>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AoK_-uAPiL76umlSWImNKit2TGLZmQpzks5uzUTogaJpZM4Y07UZ>\n> .\n>\n Yes, inceptionv3 is the network structure. Do these two inceptionv3 have the same weights? For example, by feeding the same image to these two inceptionv3, do they output the same 1000/1001-dimension logit?   Yep it's the same model on both could you please provide the checkpoints of your inceptionv3 in tensorflow and in pytorch?  You can check the 2 implementations here : https://github.com/keras-team/keras-applications/blob/master/keras_applications/inception_v3.py   and  here :  https://github.com/pytorch/vision/blob/master/torchvision/models/inception.py   \r\n\r\nThe architecture is the same, taken from : Rethinking the Inception Architecture for Computer Vision\r\n\r\nHowever the trainining process is not the same: keras model is using:\r\n'inception_v3_weights_tf_dim_ordering_tf_kernels.h5'\r\nand the Torchvision: \r\nmodel_zoo.load_url(model_urls['inception_v3_google'])\r\n\r\nBut i think it's not the case of the probleme because when using the keras model on the Cleverhans's deepfool implementation, although i augment the perturbations it seems it's not perturbing the image and nothing happens.\r\n\r\nHere is my code:\r\n\r\n\r\nimport numpy as np\r\nimport keras\r\nfrom keras import backend\r\nimport tensorflow as tf\r\nfrom cleverhans.utils_keras import KerasModelWrapper\r\nfrom keras.applications import inception_v3\r\nimport cleverhans.attacks\r\nimport scipy.misc\r\n\r\nkeras_model = inception_v3.InceptionV3(weights='imagenet')\r\n\r\n## Set the learning phase to false, the model is pre-trained.\r\nbackend.set_learning_phase(False)\r\n\r\n## Set TF random seed to improve reproducibility\r\ntf.set_random_seed(1234)\r\n\r\nif keras.backend.image_dim_ordering() != 'tf':\r\n    keras.backend.set_image_dim_ordering('tf')\r\n    print(\"INFO: '~/.keras/keras.json' sets 'image_dim_ordering' to \"\r\n          \"'th', temporarily setting to 'tf'\")\r\n\r\n## Retrieve the tensorflow session\r\nsess = backend.get_session()\r\n\r\nimage = scipy.misc.imread(\"input_image.png\")\r\n\r\n## Resizing the image to be of size 299 * 299\r\nimage = np.array(scipy.misc.imresize(image, (299, 299)),\r\n                 dtype=np.float32)\r\n\r\n## converting each pixel to the range [0,1] (Normalization)\r\n\r\nimage = np.array([image / 255.0])\r\n\r\nwrap = KerasModelWrapper(keras_model)\r\n\r\n\r\ndeepfool = cleverhans.attacks.DeepFool(wrap, sess = sess)\r\ndeepfool_params = {'nb_candidate':50,\r\n                    'overshoot':500,\r\n                    'max_iter':500,\r\n                    'nb_classes':None,\r\n                    'clip_min':0.0,\r\n                    'clip_max':1.0}\r\n\r\nadv_deepfool = deepfool.generate_np(image, **deepfool_params)\r\nscipy.misc.imsave(\"adversarial_deepfool.png\", adv_deepfool[0])\r\n The code you put here is not relevant to the question. \r\n\r\nYou need to confirm if these two networks have exactly the same architecture and exactly the same weights. It seems that you confirm the first point, but not verify the second point yet. If these two networks are independently trained (but not using some tools to convert torch models to tf models, or vice versa), the attack results should be different (since gradient is a function of weights).  Yes, i know what you are talking about, i know that the attack will not be the same on the two models since they have maybe different weights as they were trained independently, the issue was that the deepfool attack is not working on cleverhans 2.1.0, that is why i posted the code, because i tried a plethora of deepfool's parameters differenciations and i figured out that it is really not working on the keras pretrained inceptionv3. That's my problem. Then i taught that the problem was in my code so i tried the C&W attack using roughly the same implementation and it works normally, Thanks for your time and your help Oh, now I get your point. I will take a look. Thanks for clarifying.  Dear all,\r\nI just upgraded to cleverhans 2.1.0 version and it seems like the attacks are getting a lot slower for instance a Pgd attack was taking only 10 mn to generate the adversarial image but now it is taking about an hour and a half to generate it and I could not downgrade to 2.0.0 as it doesn't exist anymore in pypi \r\n\r\nIs there an explanation for this problem, is it a problem with the tensorflow's graph generation?\r\n\r\nI am using tensorflow version : 1.12.0\r\nCleverhans version: 2.1.0\r\nPython version: 3.6  Yes, the old version 2.1.0 is still in pypi and you can get it simply by\nrunning:\npip3 install cleverhans==2.1.0\n\nThank you for your responds\n\nBest\n\nOn Mon, Nov 26, 2018, 9:53 PM Nicolas Papernot <notifications@github.com>\nwrote:\n\n> I responded to @B-Yassine <https://github.com/B-Yassine>'s email and just\n> saw this. For everyone else reading this: the old version is still in pypi:\n>\n>    - current version (v3):\n>    https://pypi.org/project/cleverhans/3.0.0.post0/\n>    - older version (v2.1): https://pypi.org/project/cleverhans/2.1.0/\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/issues/910#issuecomment-441794157>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AoK_-iR-ZGvDhFlyAWebQVhFWkWK5gCzks5uzFTmgaJpZM4YxoJM>\n> .\n>\n Yes, of course because am very interested in this domain as I am preparing\nmy Master thesis and being able to contribute will be a honor for me.\n\nI think there's another problem with the deepfool attack as I tried there\nsource code implemented in Pytorch and using the cleverhans implementation\nwith the same parameters and the same model \"inception v3\" and the results\nwhere differents !\n\nThe author told me that he doesn't know about the cleverhans implementation\nand adviced me to use its own implementation\n\nBest,\nYassine\n\nOn Mon, Nov 26, 2018, 10:10 PM Ian Goodfellow <notifications@github.com>\nwrote:\n\n> Do you still want us to help debug the slowness in v3?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/issues/910#issuecomment-441799099>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AoK_-psCWXMxsQNtpbzY3Gk15yuQtCIsks5uzFjQgaJpZM4YxoJM>\n> .\n>\n For the deepfool attack i think it has to be opened as another issue Thanks a lot so the problem has been resolved by downgrading to the previous version 2.1.0 and it can be done by running:\r\npip install cleverhans==2.1.0 and making sure it is running on gpu   ```\r\n # Train an MNIST model\r\n  train_params = {\r\n      'nb_epochs': nb_epochs,\r\n      'batch_size': batch_size,\r\n      'learning_rate': learning_rate\r\n  }\r\n  train(sess, loss, x_train, y_train, args=train_params, rng=rng)\r\n```\r\n\r\nI understand this part but what I'm trying to achieve is to train it with scikitlearn Random Forest like: \r\n\r\n```\r\nmodel = RandomForestClassifier(max_depth=args.max_dep,\r\n                                       n_estimators=args.n_est,\r\n                                       max_features=None,\r\n                                       n_jobs=-1)\r\n```\r\n\r\nAny suggestion how can I do that? Sorry if its a stupid question, I am a newbie  Hi everyone, \r\n\r\nCurrently I'm trying to attack Inception_v3 model with iterative methods, such as ProjectedGradientDescent and MomentumIterativeMethod. With FGSM everything works fine, but with iterative methods I get an error:\r\n\r\n`AttributeError: 'NoneType' object has no attribute 'get_shape'`\r\n\r\nThe problem is that tf.gradients() function in body of  tf.while_loop() returns None. Everything works fine with ModelBasicCNN model, so I guess  the there is something wrong with my InceptionModel class:\r\n\r\n```\r\nfrom tensorflow.contrib.slim.nets import inception\r\n\r\nclass InceptionModel(Model):\r\n    def __init__(self, scope, nb_classes, **kwargs):\r\n        del kwargs\r\n        Model.__init__(self, scope, nb_classes, locals())\r\n        self.fprop(tf.placeholder(tf.float32, batch_shape))\r\n    \r\n    def fprop(self, x, **kwargs):\r\n        del kwargs\r\n        with slim.arg_scope(inception.inception_v3_arg_scope()):\r\n            logits, end_points = inception.inception_v3(\r\n                            x_input, num_classes=self.nb_classes, is_training=False, reuse=tf.AUTO_REUSE)\r\n\r\n        return {self.O_LOGITS: logits, self.O_PROBS: tf.nn.softmax(logits=logits)} \r\n```\r\nUsing VGG16 architecture instead of Inception gives the same error. I'm new to TensorFlow and I can't figure out how to solve this problem. \r\nThank you in advance for your help! \r\n\r\n  So there's good news and bad news.\n\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\n:confused: The bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter.  We need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that here in the pull request.\n\n*Note to project maintainer: This is a terminal state, meaning the `cla/google` commit status will not change from this state. It's up to you to confirm consent of all the commit author(s), set the `cla` label to `yes` (if enabled on your project), and then merge this pull request when appropriate.*\n\n<!-- need_author_consent -->  Hello all,\r\n\r\nI am trying to generate FGSM attack on Facenet. \r\nWhen I execute \"facenet_fgsm.py\", I am getting the error \"implement `get_logits` or must define a logits output in `fprop`\". (please see below)\r\nI am a newbie could someone please help me here?\r\n\r\nPlease let me know if you require any additional details\r\n\r\nError:\r\nTraceback (most recent call last):\r\n  File \"facenet_fgsm.py\", line 89, in <module>\r\n    adv_x = fgsm.generate(model.face_input, **fgsm_params)\r\n  File \"/home/sysgen/anaconda2/envs/facenet/lib/python3.5/site-packages/cleverhans/attacks.py\", line 348, in generate\r\n    self.model.get_logits(x),\r\n  File \"/home/sysgen/anaconda2/envs/facenet/lib/python3.5/site-packages/cleverhans/model.py\", line 74, in get_logits\r\n    \" output in `fprop`\")\r\nNotImplementedError: <class '__main__.InceptionResnetV1Model'>must implement `get_logits` or must define a logits output in `fprop`\r\n\r\n  LGTM  Hi Papernot,\r\n\r\nAdding my Affiliation\r\n@aashish-kumar  HARMAN X  Adding my affiliation:\r\n@aspratyush ex-HARMAN X  I was reading the `mnist_tutorial_keras_tf.py` and wondered if it could be simplified by using Keras' custom losses. For example, the following code runs as fast as the tutorial in both CPU and GPU mode:\r\n\r\n```python\r\nmodel = Sequential([\r\n    ...\r\n])\r\n\r\ndef loss(labels, logits):\r\n    # Compute the cross-entropy on the legitimate examples\r\n    cross_ent = tf.losses.softmax_cross_entropy(labels, logits)\r\n\r\n    # Compute the adversarial examples\r\n    gradients, = tf.gradients(cross_ent, model.input)\r\n    inputs_adv = tf.stop_gradient(model.input + 0.3 * tf.sign(gradients))\r\n\r\n    # Compute the cross-entropy on the adversarial examples\r\n    logits_adv = model(inputs_adv)\r\n    cross_ent_adv = tf.losses.softmax_cross_entropy(labels, logits_adv)\r\n\r\n    return 0.5 * cross_ent + 0.5 * cross_ent_adv\r\n\r\nmodel.compile(optimizer='adam', loss=loss)\r\nmodel.fit(x_train, y_train, ...)\r\n```\r\n\r\nIs there any downside to using custom losses that I am missing? I think it would make the tutorial a bit more accessible to Keras users, as they could stick to the `compile` and `fit` functions of Keras models. I'd be happy to submit a pull request if you think it is appropriate. @npapernot please excuse the slow reply - I have opened a PR here: https://github.com/tensorflow/cleverhans/pull/962  Hi everybody!\r\n\r\nWhen I use cleverhans for SVM, it shows me an error!\r\n\r\n`'SVC' object is not callable`\r\n\r\nDoes cleverhans just work with Neural network based network?\r\n\r\nmy code was:\r\n`fgsm = FastGradientMethod(my_svm_linear_model, sess=sess)`\r\n`fgsm_params = {'eps': 0.3, 'clip_min': 0.,'clip_max': 1.}`\r\n`adv_x = fgsm.generate_np(x_test_encoder, **fgsm_params)` Dear @goodfeli \r\nI check again but the KerasModelWrapper shows another error \r\n`AttributeError: 'SVC' object has no attribute 'layers'`  Hi,\r\nI am trying to craft adversarial examples using the CarliniWagnerL2 method. My input images are in [-1,1] . When I check the outputs, there is no distortion, in fact Euclidean distance is 0. The selected attack parameters are:\r\n\r\n```\r\n    cw_params = {'binary_search_steps': 3, \r\n                 'abort_early' : True, \r\n                 'max_iterations': 250, \r\n                 'learning_rate': 0.001, \r\n                 'batch_size': batch_size, \r\n                 'initial_const': 100, \r\n                 'nb_classes': num_classes, \r\n                 'confidence': 0, \r\n                 'clip_min': -1.0, \r\n                 'clip_max': 1.0 \r\n                 }\r\n``` \r\nI read the parameters' documentation but I couldn't figured out the problem. Hi,\r\n\r\nI am using a pretrained Inception model:\r\n```\r\nclass InceptionModel(object):\r\n    def __init__(self, num_classes):\r\n        self.num_classes = num_classes\r\n        self.built = False\r\n\r\n    def __call__(self, x_input):\r\n        \"\"\"Constructs model and return probabilities for given input.\"\"\"\r\n        reuse = True if self.built else None\r\n        with slim.arg_scope(inception.inception_v3_arg_scope()):\r\n            _, end_points = inception.inception_v3(\r\n                            x_input, num_classes=self.num_classes, is_training=False,\r\n                            reuse=reuse)\r\n        self.built = True\r\n        output = end_points['Predictions']\r\n        probs = output.op.inputs[0]\r\n        return probs\r\n```\r\nAnd this is the attack:\r\n```\r\nwith tf.Session() as sess:\r\n    filenames, images, labels= next(image_iterator)\r\n    print(labels)\r\n    x_input = tf.placeholder(tf.float32, shape=batch_shape)\r\n\r\n    cw_params = {'binary_search_steps': 3, \r\n                 'abort_early' : True, \r\n                 'max_iterations': 250, \r\n                 'learning_rate': 0.001, \r\n                 'batch_size': batch_size, \r\n                 'initial_const': 100, \r\n                 'nb_classes': num_classes, \r\n                 'confidence': 0., \r\n                 'clip_min': -1.0, \r\n                 'clip_max': 1.0 \r\n                 } \r\n\r\n    model = InceptionModel(num_classes)\r\n    clw2=CarliniWagnerL2(model) \r\n    x_adv = clw2.generate(x_input)\r\n\r\n    sess.run(tf.global_variables_initializer())\r\n\r\n    saver = tf.train.Saver(slim.get_model_variables())\r\n\r\n    nontargeted_images = sess.run(x_adv, feed_dict={x_input: images})\r\n```\r\ncleverhans version is 1.0.0\r\npython version is 2.7.12\r\ntensorflow version is 1.4.0 Have you tried to classify the output image and you don't have a misclassification? Or you just wanna visualize the perturbations and you got an imperceptible perturbed output? @B-Yassine I tried to classifying the adversarial image. But The defender classified the adversarial to the correct label. Then I tried to visualize the perturbation but I realised that there were no perturbation. @goodfeli You can find the executable string below:\r\n\r\n```\r\nimport warnings\r\nwarnings.filterwarnings('ignore')\r\n\r\nimport os\r\nfrom cleverhans.attacks import CarliniWagnerL2\r\nfrom io import BytesIO\r\nimport numpy as np\r\nimport pandas as pd\r\nfrom PIL import Image\r\nfrom scipy.misc import imsave,imread\r\nimport tensorflow as tf\r\nfrom tensorflow.contrib.slim.nets import inception  \r\n\r\nslim = tf.contrib.slim\r\ntensorflow_master = \"\"\r\ncheckpoint_incv3       = \"Pretrained/inception_v3.ckpt\"\r\ninput_dir         = \"dataset/images/\"\r\ncategories = pd.read_csv(\"dataset/categories.csv\")\r\nimage_classes = pd.read_csv(\"dataset/images.csv\")\r\n\r\nimage_width       = 299\r\nimage_height      = 299\r\nbatch_size        = 32\r\nbatch_shape = [batch_size, image_height, image_width, 3]\r\nnum_classes = 1001\r\n\r\n\r\ndef load_images(input_dir, batch_shape):\r\n    images = np.zeros(batch_shape)\r\n    filenames = []\r\n    labels =[]\r\n    idx = 0\r\n    batch_size = batch_shape[0]\r\n    for filepath in sorted(tf.gfile.Glob(os.path.join(input_dir, '*.png'))):\r\n        with tf.gfile.Open(filepath, \"rb\") as f:\r\n            images[idx, :, :, :] = imread(f, mode='RGB').astype(np.float32)*2.0/255.0 - 1.0\r\n        filenames.append(os.path.basename(filepath))\r\n        labels.append(image_classes.merge(pd.DataFrame({\"ImageId\":[os.path.basename(filepath)[:-4]]}), on=\"ImageId\")[\"TrueLabel\"][0])\r\n        idx += 1\r\n        if idx == batch_size:\r\n            yield filenames, images, labels\r\n            filenames = []\r\n            labels =[]\r\n            images = np.zeros(batch_shape)\r\n            idx = 0\r\n    if idx > 0:\r\n        yield filenames, images, labels\r\n\r\nclass InceptionModel(object):\r\n    def __init__(self, num_classes):\r\n        self.num_classes = num_classes\r\n        self.built = False\r\n\r\n    def __call__(self, x_input):\r\n        \"\"\"Constructs model and return probabilities for given input.\"\"\"\r\n        reuse = True if self.built else None\r\n        with slim.arg_scope(inception.inception_v3_arg_scope()):\r\n            _, end_points = inception.inception_v3(\r\n                            x_input, num_classes=self.num_classes, is_training=False,\r\n                            reuse=reuse)\r\n        self.built = True\r\n        output = end_points['Predictions']\r\n        probs = output.op.inputs[0]\r\n        return probs\r\n\r\nimage_iterator = load_images(input_dir, batch_shape)\r\n\r\nwith tf.Session() as sess:\r\n    filenames, images, labels= next(image_iterator)\r\n\r\n    x_input = tf.placeholder(tf.float32, shape=batch_shape)\r\n\r\n    cw_params = {'binary_search_steps': 3, \r\n                 'abort_early' : True, \r\n                 'max_iterations': 250, \r\n                 'learning_rate': 0.001, \r\n                 'batch_size': batch_size, \r\n                 'initial_const': 100, \r\n                 'nb_classes': num_classes, \r\n                 'confidence': 0., \r\n                 'clip_min': -1.0, \r\n                 'clip_max': 1.0 \r\n                 } \r\n\r\n    model = InceptionModel(num_classes)\r\n    clw2=CarliniWagnerL2(model) \r\n    x_adv = clw2.generate(x_input, **cw_params)\r\n\r\n    sess.run(tf.global_variables_initializer())\r\n    saver = tf.train.Saver(slim.get_model_variables())\r\n    nontargeted_images = sess.run(x_adv, feed_dict={x_input: images})\r\n``` Try to set the confidence to for example 70 and the learning rate to 0.9\nfor example, so normally you would have a very noisy image, then try to\nvisualize it, just to be sure that the attack is working or not\n\nOn Tue, Dec 11, 2018, 7:06 AM Bilgin Aksoy <notifications@github.com wrote:\n\n> @goodfeli <https://github.com/goodfeli> You can find the executable\n> string below:\n>\n> import warnings\n> warnings.filterwarnings('ignore')\n>\n> import os\n> from cleverhans.attacks import CarliniWagnerL2\n> from io import BytesIO\n> import numpy as np\n> import pandas as pd\n> from PIL import Image\n> from scipy.misc import imsave,imread\n> import tensorflow as tf\n> from tensorflow.contrib.slim.nets import inception\n>\n> slim = tf.contrib.slim\n> tensorflow_master = \"\"\n> checkpoint_incv3       = \"Pretrained/inception_v3.ckpt\"\n> input_dir         = \"dataset/images/\"\n> categories = pd.read_csv(\"dataset/categories.csv\")\n> image_classes = pd.read_csv(\"dataset/images.csv\")\n>\n> image_width       = 299\n> image_height      = 299\n> batch_size        = 32\n> batch_shape = [batch_size, image_height, image_width, 3]\n> num_classes = 1001\n>\n>\n> def load_images(input_dir, batch_shape):\n>     images = np.zeros(batch_shape)\n>     filenames = []\n>     labels =[]\n>     idx = 0\n>     batch_size = batch_shape[0]\n>     for filepath in sorted(tf.gfile.Glob(os.path.join(input_dir, '*.png'))):\n>         with tf.gfile.Open(filepath, \"rb\") as f:\n>             images[idx, :, :, :] = imread(f, mode='RGB').astype(np.float32)*2.0/255.0 - 1.0\n>         filenames.append(os.path.basename(filepath))\n>         labels.append(image_classes.merge(pd.DataFrame({\"ImageId\":[os.path.basename(filepath)[:-4]]}), on=\"ImageId\")[\"TrueLabel\"][0])\n>         idx += 1\n>         if idx == batch_size:\n>             yield filenames, images, labels\n>             filenames = []\n>             labels =[]\n>             images = np.zeros(batch_shape)\n>             idx = 0\n>     if idx > 0:\n>         yield filenames, images, labels\n>\n> class InceptionModel(object):\n>     def __init__(self, num_classes):\n>         self.num_classes = num_classes\n>         self.built = False\n>\n>     def __call__(self, x_input):\n>         \"\"\"Constructs model and return probabilities for given input.\"\"\"\n>         reuse = True if self.built else None\n>         with slim.arg_scope(inception.inception_v3_arg_scope()):\n>             _, end_points = inception.inception_v3(\n>                             x_input, num_classes=self.num_classes, is_training=False,\n>                             reuse=reuse)\n>         self.built = True\n>         output = end_points['Predictions']\n>         probs = output.op.inputs[0]\n>         return probs\n>\n> image_iterator = load_images(input_dir, batch_shape)\n>\n> with tf.Session() as sess:\n>     filenames, images, labels= next(image_iterator)\n>\n>     x_input = tf.placeholder(tf.float32, shape=batch_shape)\n>\n>     cw_params = {'binary_search_steps': 3,\n>                  'abort_early' : True,\n>                  'max_iterations': 250,\n>                  'learning_rate': 0.001,\n>                  'batch_size': batch_size,\n>                  'initial_const': 100,\n>                  'nb_classes': num_classes,\n>                  'confidence': 0.,\n>                  'clip_min': -1.0,\n>                  'clip_max': 1.0\n>                  }\n>\n>     model = InceptionModel(num_classes)\n>     clw2=CarliniWagnerL2(model)\n>     x_adv = clw2.generate(x_input)\n>\n>     sess.run(tf.global_variables_initializer())\n>     saver = tf.train.Saver(slim.get_model_variables())\n>     nontargeted_images = sess.run(x_adv, feed_dict={x_input: images})\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/issues/881#issuecomment-446083699>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AoK_-sHn776kCmp8Zfj-5wrjcFos4Pfhks5u30tVgaJpZM4YN89B>\n> .\n>\n @goodfeli I printed the differences between attacked image and original image. \r\n\r\n`(0.0, 0.0, 0.0)`\r\n\r\nThis is the output and input plotted using matplotlib:\r\n![outputs](https://user-images.githubusercontent.com/11997073/49922012-6c5cd800-fec0-11e8-9679-04fa5929c2db.png)\r\n\r\nThen I changed the parameters like @B-Yassine explained. But still outputs are same.\r\n\r\n it looks like the attack is not working, i will check your code, however, if you need it now you can check my simple code of the C&W attack using cleverhans on the Keras Inceptionv3 pre-trained model Here: https://github.com/B-Yassine/Carlini-and-Wagner_InceptionV3_Imagenet Thank you @B-Yassine. I changed the parameters in your code example. And now the attack is working as expected. But still have problem working with Tensorflow. It is also weird that Keras backend is  Tensorflow and still works. Happy that it works, try maybe to upgrade your tensorflow version: `pip install --upgrade tensorflow-gpu==1.11.0`  just to avoid the last version \"1.12.0\" as i had a lot of errors with it that is why i downgraded to the previous version. Best,  It's helpful to have a link to the docs from the github repo README. \nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here (e.g. `I signed it!`) and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google.com/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n<!-- need_sender_cla --> Signed CLAs look good, thanks!\n\n<!-- ok -->  I notice that in examples/nips17_adversarial_competition/dev_tookit/sample_attacks/fgsm/attack_fgsm.py, when construct the fgsm model using `fgsm=FastGradientMethod(model)`,  no sess object is passed. But when I replace FastGradientMethod with DeepFool or CarliniWagnerL2, it goes wrong  Will you able to construct the fgsm attack without passing a session??? I shall try it and return back to you  @vandeppce Some implementation of attacks (such as FGSM, PGD and few others) works fine without sess as long as you don't use generate_np method.\r\nOther attacks (such as DeepFool, CW, LBFGS and few others) always need session object to be passed. In such case you have to modify the code and pass session object to the attack class  Re-opens the PR #858 with a rebase. A bunch of the tests were written incorrectly and should never have been passing to begin with. I'm going to fix them in this PR so at least they pass, but someone later should go back through and figure out what was intended to happen. Except for this crash, everything passes `terminate called after throwing an instance of 'std::bad_alloc'` Rebase broke the history.\r\n\r\nThe diff still looks somewhat unhappy because I had to merge the two methods together, but it looks somewhat nicer now. Again this issue \"terminate called after throwing an instance of 'std::bad_alloc\". Going to retry. The test is now getting killed, but everything is passing.\r\n\r\nI don't know that much about travis do debug this one. Any suggestions @npapernot @goodfeli? It failed again. Interestingly it is consistently just 2.7 on TF 1.8 that is failing here. Okay so this is very confusing. By removing a test that I never called, the tests pass. Let me put those lines back in and see if it works again. I am 90% sure this is just a travis issue. I installed TF 1.8 on Python 2.7 and I can run the tests successfully. \r\n\r\nIf it's okay with you @npapernot @goodfeli I'm going to comment out this test again so we can merge this commit, and then investigate further. I have removed some duplicated work that was going on in the tests. This should allow the tests to pass, but in the future we will need to find a way to make the tests faster or this will happen again. What does it break?  Hi, there:\r\n\r\nAfter installed cleverhans by `pip install cleverhans --user` on my machine, I'd like to run a tutorial to see if everything's ok. Unfortunately, I received the following error mesage after running `python mnist_tutorial_tf.py`:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"mnist_tutorial_tf.py\", line 19, in <module>\r\n    from cleverhans.loss import CrossEntropy\r\nModuleNotFoundError: No module named 'cleverhans.loss'\r\n```\r\n\r\nThen I checked the version by `python -c 'import cleverhans; print(cleverhans.__version__)` and the version number is `2.0.0-8d4c955f2a5a269a78a612198cf754a4`. \r\n\r\nWhen running the trouble line `from cleverhans.loss import CrossEntropy` in the console, same error exists! So, anyone could help? Thanks. When using python2.7, I get:\r\n```\r\nTraceback (most recent call last):\r\n  File \"mnist_tutorial_tf.py\", line 19, in <module>\r\n    from cleverhans.loss import CrossEntropy\r\nImportError: No module named loss\r\n``` > If you just want to get cleverhans working, the easiest way is to use \"git clone\" and set your PYTHONPATH manually. That's how I always install.\r\n> \r\n> We know that `pip` tends to install `cleverhans` in weird locations that are not on the `PYTHONPATH`. None of the main `cleverhans` developers including myself know enough about `pip` or `setup.py` to tell exactly what is going wrong. If you could tell us where `pip` does put cleverhans on your Mac, that might help us. Alternately, if anyone who does understand `pip` and `setup.py` happens to see this issue, we could use your help.\r\n\r\nSorry for the late reply. I adopted your suggestion and clouds gone, both on Mac and linux.  i the same \r\npython -c 'import cleverhans; print(cleverhans.__version__)'\r\n2.0.0-8d4c955f2a5a269a78a612198cf754a4\r\n\r\nbut \r\n\r\npython -c \"from cleverhans.loss import CrossEntropy\"\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\nModuleNotFoundError: No module named 'cleverhans.loss'\r\n\r\ni install use   pip install cleverhans and path is ;\r\n/mnt/opt/anaconda2/envs/book5/lib/python3.6/site-packages/cleverhans i know why \u3002there is some wrong with setup.py\r\n\r\ngit clone https://github.com/tensorflow/cleverhans\r\n\r\ncp -fr cleverhans cleverhans_tutorials /mnt/opt/anaconda2/envs/book5/lib/python3.6/site-packages/\r\n\r\ncan solve it  ***The issue tracker should only be used to report bugs or feature requests. If you are looking for support from other library users, please ask a question on [StackOverflow](https://stackoverflow.com/questions/tagged/cleverhans).***\r\n\r\n**Describe the bug**\r\nI get an internal issue when I use the eval function with BIM attack examples on CIFAR10 dataset.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. The simple version code is provided.\r\n[reproduce-code.zip](https://github.com/tensorflow/cleverhans/files/2535354/reproduce-code.zip)\r\n2. Run the reproduction code.\r\n\r\n**Expected behavior**\r\nThe code will show internal error on evaluating BIM accuracy. The error message points to while loop.\r\n\r\n**Screenshots**\r\n![capture](https://user-images.githubusercontent.com/6549940/47803017-ea499300-dd07-11e8-996b-f3dcebfd6ddf.PNG)\r\n\r\n**System configuration**\r\n - OS Ubuntu 17.10\r\n - Python version 3.6\r\n - TensorFlow version 1.9\r\n Yep. This is exactly why I raised that issue. I have a short reproduction over there. The same issue occurred when using Basic Iterative attack on a neural network with dropout layers. Reading further I found that setting Keras backend learning phase to 0 (i.e. test) solved the problem.\r\n\r\nI don't know why setting the learning phase to 0 solved the problem but this may be a temporary fix for now.\r\n\r\n  `jsma_batch` is used in `attacks.py` code in the following lines:\r\nhttps://github.com/tensorflow/cleverhans/blob/539223ae33ca4f416e1cc08c533fec3982bd2aad/cleverhans/attacks.py#L924-L965\r\nHowever, this method no longer exists in `attacks_tf.py`. I don't need it. I was just going over the code and realized that it might be a bug in the code. this issue wasn't caught by pylint due to `E0611` being disabled, if you re-enable you will see:\r\n\r\n```\r\ncleverhans/attacks/__init__.py:964: [E0611(no-name-in-module), SaliencyMapMethod.generate] No name 'jsma_batch' in module 'cleverhans.attacks_tf'\r\n```  Hi,\r\n\r\nI'm new to tensorflow, I'm trying to attack with FGSM to my random forest classifier. I'm using mnist dataset.\r\n\r\nSo,\r\n```\r\nclf = RandomForestClassifier(max_features=\"sqrt\", n_estimators=500, n_jobs=-1, verbose=1, warm_start=True)\r\nclf.fit(X_train, y_train)\r\n```\r\nThis is where I declare my classifier. Afterwards\r\n```\r\n\r\nfrom keras import backend\r\nsess =  backend.get_session()\r\n\r\nwrap = KerasModelWrapper(clf)\r\nfgsm = FastGradientMethod(wrap, sess=sess)\r\nfgsm_params = {'eps': 0.15,\r\n               'clip_min': 0.,\r\n               'clip_max': 1.}\r\nadv_x = fgsm.generate_np(X_test, **fgsm_params)\r\nadv_x.shape\r\n```\r\n\r\nWhen I try to execute this part I get the stacktrace below\r\n```\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-5-0e9de5287e93> in <module>\r\n      8                'clip_max': 1.}\r\n      9 \r\n---> 10 adv_x = fgsm.generate_np(X_test, **fgsm_params)\r\n     11 adv_x.shape\r\n\r\nappdata\\local\\programs\\python\\python35\\lib\\site-packages\\cleverhans\\attacks.py in generate_np(self, x_val, **kwargs)\r\n    147 \r\n    148         if hash_key not in self.graphs:\r\n--> 149             self.construct_graph(fixed, feedable, x_val, hash_key)\r\n    150 \r\n    151         x, new_kwargs, x_adv = self.graphs[hash_key]\r\n\r\nappdata\\local\\programs\\python\\python35\\lib\\site-packages\\cleverhans\\attacks.py in construct_graph(self, fixed, feedable, x_val, hash_key)\r\n    121 \r\n    122         # now we generate the graph that we want\r\n--> 123         x_adv = self.generate(x, **new_kwargs)\r\n    124 \r\n    125         self.graphs[hash_key] = (x, new_kwargs, x_adv)\r\n\r\nappdata\\local\\programs\\python\\python35\\lib\\site-packages\\cleverhans\\attacks.py in generate(self, x, **kwargs)\r\n    287         from .attacks_tf import fgm\r\n    288 \r\n--> 289         labels, nb_classes = self.get_or_guess_labels(x, kwargs)\r\n    290 \r\n    291         return fgm(x, self.model.get_probs(x), y=labels, eps=self.eps,\r\n\r\nappdata\\local\\programs\\python\\python35\\lib\\site-packages\\cleverhans\\attacks.py in get_or_guess_labels(self, x, kwargs)\r\n    213             labels = kwargs['y_target']\r\n    214         else:\r\n--> 215             preds = self.model.get_probs(x)\r\n    216             preds_max = tf.reduce_max(preds, 1, keep_dims=True)\r\n    217             original_predictions = tf.to_float(tf.equal(preds,\r\n\r\nappdata\\local\\programs\\python\\python35\\lib\\site-packages\\cleverhans\\utils_keras.py in get_probs(self, x)\r\n    180         :return: A symbolic representation of the probs\r\n    181         \"\"\"\r\n--> 182         name = self._get_softmax_name()\r\n    183 \r\n    184         return self.get_layer(x, name)\r\n\r\nappdata\\local\\programs\\python\\python35\\lib\\site-packages\\cleverhans\\utils_keras.py in _get_softmax_name(self)\r\n    125         :return: Softmax layer name\r\n    126         \"\"\"\r\n--> 127         for i, layer in enumerate(self.model.layers):\r\n    128             cfg = layer.get_config()\r\n    129             if 'activation' in cfg and cfg['activation'] == 'softmax':\r\n\r\nAttributeError: 'RandomForestClassifier' object has no attribute 'layers'\r\n```\r\n\r\nI know this works great with sequential models. How can I use fgsm to attack Random Forest? Its correct but do you know how can I turn sklearn examples into Tensorflow to have that access? I tried using KerasClassifier but I got the same error,  AttributeError: 'KerasClassifier' object has no attribute 'layers'. I'm new to this topics so I believe there should be an easy way to do this instead of just writing whole models via Tensorflow, can you suggest a solution or do you have an example doing this? @goodfeli Well, this maybe not ideal but my code is really short so\r\n```\r\n\r\nimport numpy as np\r\nfrom sklearn import tree\r\nfrom keras.wrappers.scikit_learn import KerasClassifier\r\nfrom keras.datasets import mnist\r\nfrom keras.utils import np_utils\r\nfrom sklearn.metrics import confusion_matrix\r\nfrom sklearn.ensemble import RandomForestClassifier\r\nfrom sklearn.metrics import accuracy_score\r\nimport tensorflow as tf\r\nfrom cleverhans.attacks import FastGradientMethod\r\nfrom sklearn.metrics import confusion_matrix, classification_report\r\nfrom cleverhans.utils_keras import KerasModelWrapper\r\n\r\n\r\n(X_train, y_train), (X_test, y_test) = mnist.load_data()\r\n\r\nX_train = X_train.reshape(60000, 784)\r\nX_test = X_test.reshape(10000, 784)\r\nX_train = X_train.astype('float32')\r\nX_test = X_test.astype('float32')\r\n\r\nY_train = np_utils.to_categorical(y_train, 10)\r\nY_test = np_utils.to_categorical(y_test, 10)\r\n\r\nclf = RandomForestClassifier(max_features=\"sqrt\", n_estimators=500, n_jobs=-1, verbose=1, warm_start=True)\r\nclf.fit(X_train, y_train)\r\ny_test_pred = clf.predict(X_test)\r\nacc_rf = accuracy_score(y_test, y_test_pred)\r\ncm = confusion_matrix(y_test_pred, y_test)\r\ncr = classification_report(y_test_pred, y_test)\r\nprint(cm)\r\nprint('-'*50)\r\nprint(cr)\r\n\r\nfrom keras import backend\r\nsess =  backend.get_session()\r\n# Define input TF placeholder\r\nx = tf.placeholder(tf.float32, shape=(None, 28, 28, 1))\r\ny = tf.placeholder(tf.float32, shape=(None, 10))\r\n\r\n\r\nwrap = KerasModelWrapper(clf)\r\nfgsm = FastGradientMethod(wrap, sess=sess)\r\nfgsm_params = {'eps': 0.15,\r\n               'clip_min': 0.,\r\n               'clip_max': 1.}\r\n\r\n\r\nadv_x = fgsm.generate_np(X_test, **fgsm_params)  [**Attribute error here**]\r\nadv_x.shape\r\n\r\n\r\nadv_pred = model.predict_classes(adv_x)\r\ncm = confusion_matrix(adv_pred, y_test)\r\ncr = classification_report(adv_pred, y_test)\r\nprint(cm)\r\nprint('-'*50)\r\nprint(cr)\r\n```  This is historical baggage from when we had attacks_th.py  JSMA is one of the last attacks that still uses probs in the interface, due to the risk of gradient masking from loss of precision in the softmax. I'm not very familiar with how this attack works so I'm not sure whether we should rewrite it to use logits in the interface or whether we should update the doc to make it clear why probs are safe / necessary.  Grep for \"TODO: this assert looks totally wrong.\" Is it the same assertion error that I meet?\r\n```\r\nfrom cleverhans.attacks import SPSA\r\nSPSA_params = {\r\n    'epsilon': 0.6,\r\n    'num_steps': 40\r\n}\r\n################\r\nSPSA_adv = SPSA(adv, sess=sess)\r\nSPSA_adv_gen = SPSA_adv.generate(x, **SPSA_params)\r\nadv_SPSA = adv.get_logits(SPSA_adv_gen)\r\nadv_SPSA_acc = model_eval(sess, x, y, adv_SPSA, X_test, Y_test, args=eval_params)\r\nprint('Adv training model accuracy on SPSA test examples: %0.4f' % adv_SPSA_acc)\r\n```\r\n\r\n/usr/local/lib/python3.6/dist-packages/cleverhans/attacks_tf.py in _compute_gradients(self, loss_fn, x, unused_optim_state)\r\n   1650         \"\"\"Compute gradient estimates using SPSA.\"\"\"\r\n   1651         # Assumes `x` is a list, containing a [1, H, W, C] image\r\n-> 1652         assert len(x) == 1 and x[0].get_shape().as_list()[0] == 1\r\n   1653         x = x[0]\r\n   1654         x_shape = x.get_shape().as_list()\r\n\r\nAssertionError:   @npapernot do you remember what the typo is? I think the link goes to a line number in the current version of the file, and the lines have changed since you opened the issue.  Fixes #511 Hi @npapernot, thanks for the review - `tempfile` is imported in this diff in `utils_mnist.py` [here](https://github.com/tensorflow/cleverhans/pull/741/files#diff-7711b0a4a46f0eb650e968f8f7ef8e99R7) and was already imported in `dataset.py` [here](https://github.com/tensorflow/cleverhans/pull/741/files#diff-26ff839e0029a86ae2cb18b518010694L16)  I am willing to help with the issue. How do I start?  LGTM, ok to merge when tests pass   I was able to remove W0101 and have all the tests pass on my laptop. I wonder if maybe one of the travis configs uncovers a different failure. Yes, if I run it on Travis, I do get a different check that fails. I've updated the comment in .pylintrc to specifically identify the other check as E1111.  I have some problems making code for certified defense to be tested by Travis.\r\nSo I split the original change https://github.com/tensorflow/cleverhans/pull/723 into travis config and the code itself.\r\n\r\nThis is the first part of the change which only include updates in travis config Yeah, let's drop support for older versions. So do you want to drop support of both TF 1.4 and TF 1.8? and update everything to TF 1.9?\r\nOr you still want to keep support of one of the older versions? yeah, let's do 1.8 and 1.9 for now So there's good news and bad news.\n\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\n:confused: The bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter.  We need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that here in the pull request.\n\n*Note to project maintainer: This is a terminal state, meaning the `cla/google` commit status will not change from this state. It's up to you to confirm consent of all the commit author(s), set the `cla` label to `yes` (if enabled on your project), and then merge this pull request when appropriate.*\n\n<!-- need_author_consent -->  Address #703  It's ready for Travis CI checking \ud83d\ude03  It seems that most of files in `tests_tf` does not conform to pep8 (indent size=2) and pylint. Should the tests conform to them? I'll close this, and reopen a new one to avoid conflict.  Originally code written by Aditi Raghunathan That was actually a completely new PR with completely new commits.\r\nTravis was actually running for the first commit in this PR, but if failed (expectedly): https://travis-ci.com/tensorflow/cleverhans/builds/86953129\r\n\r\nBut Travis didn't run for the second commit (where I updated travis file).\r\n\r\nI'm thinking I'll try to update Travis file first in separate PR and the make another PR with the code changes.\r\n\r\n\r\nI'll keep this open for now, just to keep track of things So there's good news and bad news.\n\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\n:confused: The bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter.  We need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that here in the pull request.\n\n*Note to project maintainer: This is a terminal state, meaning the `cla/google` commit status will not change from this state. It's up to you to confirm consent of all the commit author(s), set the `cla` label to `yes` (if enabled on your project), and then merge this pull request when appropriate.*\n\n<!-- need_author_consent -->   The travis tests have passed on this one, even though only one of the two copies of the travis badges turned green. Not sure why the other one is stuck yellow.\r\n\r\nThis should be safe to merge. It won't cause merge conflicts because it edits only a comment in .pylintrc. It doesn't edit any .py files or the conflict prone \"disable=\" line of .pylintrc.  Merge https://github.com/tensorflow/cleverhans/pull/720 first  Merge https://github.com/tensorflow/cleverhans/pull/717 first  Address #593 . The implementation is based on [here](https://github.com/tensorflow/tensorflow/blob/r1.11/tensorflow/python/ops/image_ops_impl.py#L1176) (including adjusted stddev).\r\nOn single P100 GPU, this is 50x faster than `map_fn` for input shape `(128, 32, 32, 3)` Thanks! The speed sounds great. Can you add a unit test that the 2 methods are equivalent? It's done! It's okay. \r\nI think it's better to create another PR for moving all of them because some of the files in `cleverhans/tests` have the same name with those in `tests_tf` (like test_utils_tf.py), and some of them have different testing styles (class wrapper or method). Therefore, I just put my test in the right place in this PR, and I will create another one to address #703. Fixed :smiley:   I'll close this one and create another one by copying all files.  That test can stay removed because we have new tests in #623   Original code by Aditi Raghunathan / https://github.com/RAditi Google Cloud Build failing due to INVALID_ARGUMENT error, I can not see any details in the cloud console because I don't have permissions I'd recommend copying to a new branch:\r\ngit checkout -b cert2 cert\r\n\r\nand opening a PR for the new branch. That should lose the failed Cloud Build.  Fix #572 .\r\nThe problem is caused by the reason that `batch_eval` in `utils_tf.py` does not return any value. So there's good news and bad news.\n\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\n:confused: The bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter.  We need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that here in the pull request.\n\n*Note to project maintainer: This is a terminal state, meaning the `cla/google` commit status will not change from this state. It's up to you to confirm consent of all the commit author(s), set the `cla` label to `yes` (if enabled on your project), and then merge this pull request when appropriate.*\n\n<!-- need_author_consent --> @npapernot Should I do anything for this?  Without map_fn, the cropping happens at the same location within a batch. This in turn reduces stochasticity for gradient descent.  This is still worth doing on Travis  Closes #538 Done with first review, two suggestions Oh, good point. Sorry, one more revision suggestion: have `check_installation` take a `cur_file` argument. Then the tutorial calls `check_installation(__file__)`.\r\n\r\nThe reasons for this are:\r\n1) Even less risk of something going wrong. The current version could still go run if someone adds `cleverhans_tutorials` from Installation 1 to their `PYTHONPATH` and then runs the tutorials from Installation 2. You'd have to be pretty confused to add `cleverhans_tutorial` to your `PYTHONPATH` but this feature is intended to support people who are confused about `PYTHONPATH` so it seems conceivable that someone would do it.\r\n2) No need to make a new file LGTM when tests pass. Unfortunately this needs a rebase already.  Notes for what I need to do next:\r\n\r\nfor the `long` problem, add:\r\n\r\nfrom builtins import int # This is a long in python 2\r\n\r\nMay need to\r\n\r\npip install future\r\n\r\nto get access to this.   Closes #577  lgtm \ud83d\udc4d   I fixed the test failures by just removing the broken example. I propose removing it because:\r\n- We shouldn't have duplicated code for the whole cartesian product of different ways of running everything. There's already an MNIST keras tutorial and and MNIST black box tutorial, no need for an MNIST keras black box tutorial.\r\n- This was broken (it's a real error, not just a style problem) and no one has noticed, so it's not getting used\r\n- It's in the examples directory so there's no obligation to keep supporting it  @AlexeyKurakin do you know how I should fix this failure in `examples/nips17_adversarial_competition/eval_infra/validation_tool/validate_and_copy_submissions.py`?\r\n\r\nOn line 174 it has `metadata = self.base_validator.validate_submission(local_path)`. The call needs to pass in a second argument, `submission_type`. But we get `submission_type` out of `metadata` so it's not available to pass yet.\r\n\r\nAlso, there are two similarly named files: `examples/nips17_adversarial_competition/eval_infra/validation_tool/validate_submission_lib.py` and   `examples/nips17_adversarial_competition/dev_toolkit/validation_tool/validate_submission_lib.py`. The other one doesn't require a `submission_type` argument. I was able to fix it by renaming file: https://github.com/tensorflow/cleverhans/pull/709  I passed it an incorrect argument, and did not get a warning. Perhaps we should alert users when they have a typo in their kwargs? Hmm I had thought that this would be easy because we already explicitly list the different types of  kwargs for `generate_np`. \r\n```\r\n    # When calling generate_np, arguments in the following set should be\r\n    # fed into the graph, as they are not structural items that require\r\n    # generating a new graph.\r\n    # This dict should map names of arguments to the types they should\r\n    # have.\r\n    # (Usually, the target class will be a feedable keyword argument.)\r\n    self.feedable_kwargs = {}\r\n\r\n    # When calling generate_np, arguments in the following set should NOT\r\n    # be fed into the graph, as they ARE structural items that require\r\n    # generating a new graph.\r\n    # This list should contain the names of the structural arguments.\r\n    self.structural_kwargs = []\r\n```\r\n\r\nHowever, it looks like there are a few places where kwargs don't fall into either `feedable_kwargs` or `structural_kwargs`. For example the `rand_minmax` kwarg here:\r\nhttps://github.com/tensorflow/cleverhans/blob/aa1033a98609c96f6626897fb882219f591a7db3/cleverhans/attacks.py#L489\r\n\r\nIf we think that all `generate_np` kwargs should always be either `feedable` or `structural`, then I think it would be fairly straightforward to do this. If not, then I'm not sure if this is worthwhile. Yes, that seems worth doing. I misunderstood what you meant earlier. I believe it's possible to catch unused keywords when they're passed to `generate_np` because those calls all pass through the base class's graph caching mechanism. Earlier I thought you meant a call to `generate`. That seems hard because each subclass implements its own `generate` and doesn't usually call through a centralized piece of code. Done in this PR: https://github.com/tensorflow/cleverhans/issues/639  Closes #631 \r\n\r\n(WIP) OK to merge after adding the check on type of `sess` Done with new round of review. Two things to discuss:\r\n1) Can we get rid of self.back?\r\n2) Why is a test commented out? Thanks for removing self.back.\r\n\r\nRegarding the test, two further thoughts:\r\n1. I'd suggest just deleting it entirely rather than commenting it out. You could put a link to the commit that removes it in the issue, so that when someone works on the issue they can find the broken implementation quickly. My concern is that if we have a test for attack strength and we comment it out, it looks like the attack got weaker and we thought that was OK. I understand that that's not what happened, but we don't want to even look like we're doing that.\r\n2. If this test wasn't implemented correctly, why wasn't it failing before? It sounds like it should have had some syntax error or raised an exception from passing the wrong type, etc. LGTM. Feel free to merge once the tests pass   Yes exactly  Closed by https://github.com/tensorflow/cleverhans/pull/749  This solves some bugs with the new spatial attack. I'm running the attacks overnight and hope to see how well they do.\r\n\r\n- [x] Optimizes transformation against each individual image, rather than against a batch of images\r\n- [x] Adds black border capabilities as in the unrestricted_advex repo\r\n- [x] Adds tests that the attack can break a hardcoded model either by moving pixels off the image, or choosing not to move pixels off the image\r\n- [x] Solves memory issues by using `tf.map_fn`\r\n\r\ncc @yenchenlin and @carlini  This will also need to be fixed after the switch to 2 spaces. I'd like to merge this in when possible. Could I please get a review @yenchenlin or @npapernot ? This is good to merge pending Travis @npapernot \r\n I plan to merge this in after tests pass. Any issue with that @npapernot ?   Why was the `examples/linear_extrapolation_plot_example.py` file deleted? Regarding plotting, I agree that a new module is worth it. We can also refactor existing plotting tools in `utils.py`   https://github.com/tensorflow/cleverhans/pull/868  Decided not to enable it  This error only triggers in two files:\r\n* utils_keras.py, to access `_inbound_nodes` and `_op`, as part of some graph surgery to find the logits\r\n* nips17_adversarial_competition/eval_infra/code/eval_lib/tests/classification_results_test.py, while manipulating a `CompetitionSubmissions` object as a test object\r\n\r\nThese both seem basically OK to me. Is it alright to enable this check by manually skipping the pylint checks on those lines?  Decided to leave this one disabled. See .pylintrc for an explanation  Done here: https://github.com/tensorflow/cleverhans/pull/731  Decided not to enable this one. See comment in .pylintrc  Decided not to enable this one. See comment in .pylintrc  Is pylint slow locally or on Travis only?  Ok one thing is that it might make sense for us to move to something with a bit more ressources like https://github.com/marketplace/google-cloud-build if Travis starts to be limited?  This is done but didn't get closed  Decided not to enable it, see comment in .pylintrc\r\n  ### Visualizing how my deep learning model performed, I need to plot my model's training history in cleverhans. (i.e. epochs vs accuracy) \r\n\r\nEarlier with keras, code like this would do the job. \r\n\r\n```\r\n...  \r\n ...  \r\n import matplotlib.pyplot as plt  \r\n   \r\n ...  \r\n ...  \r\n # code for building your model  \r\n ...  \r\n ...  \r\n   \r\n # train your model  \r\n history = model.fit(train_data, train_labels,  \r\n                     nb_epoch=nb_epoch, batch_size=32)  \r\n   \r\n print(history.history.keys())  \r\n   \r\n plt.figure(1)  \r\n   \r\n # summarize history for accuracy  \r\n   \r\n plt.subplot(211)  \r\n plt.plot(history.history['acc'])  \r\n plt.plot(history.history['val_acc'])  \r\n plt.title('model accuracy')  \r\n plt.ylabel('accuracy')  \r\n plt.xlabel('epoch')  \r\n plt.legend(['train', 'test'], loc='upper left')  \r\n```\r\n\r\n### Now using cleverhans, I am finding accuracy differently, I am wondering how the graph I would like to plot would be possible as code like : \r\n\r\n ```\r\nhistory = model.fit(train_data, train_labels,  \r\n                     nb_epoch=nb_epoch, batch_size=32)\r\n```\r\nhas been replaced with code like:\r\n\r\n\r\n```\r\n...........................\r\n#code for building model\r\n................................\r\n\r\n# Create TF session and set as Keras backend session\r\nsess = tf.Session()\r\nkeras.backend.set_session(sess)\r\n\r\n#tensorflow placeholder variables\r\nx = tf.placeholder(tf.float32,shape = (None, X_train_scaled.shape[1]))\r\ny = tf.placeholder(tf.float32,shape = (None, 5))\r\n \r\nmodel = mlp_model() \r\npredictions = model(x)\r\ninit = tf.global_variables_initializer()\r\nsess.run(init)\r\n\r\n#Train the model\r\ntrain_params = {\r\n                'nb_epochs': 100,\r\n                'batch_size' : 128,\r\n                'learning_rate' : 0.1,\r\n                'verbose' : 0   \r\n                }\r\n\r\nrng = np.random.RandomState([2018, 9, 24])\r\n\r\n#train the model, not test\r\nmodel_train(sess, \r\n            x, \r\n            y, \r\n            predictions, \r\n            X_train_scaled, \r\n            Y_train, \r\n            evaluate=evaluate,\r\n            args = train_params)\r\n\r\n``` ### Thanks for the info.. Also, how can I calculate evaluation metrics other than 'accuracy' like precision, recall etc Because, . \r\n\r\n```\r\nmodel_train(sess, \r\n            x, \r\n            y, \r\n            predictions, \r\n            X_train_scaled, \r\n            Y_train, \r\n            evaluate=evaluate,\r\n            args = train_params)\r\n```\r\n**returns boolean whereas,** \r\n\r\n`model_eval(sess, x, y, predictions, X_test_scaled, Y_test, args = eval_params)`\r\n\r\n**returns a float with accuracy value.**  Quick comment: it might be nice to set the log level to INFO at the beginning of train and then set it back to what it was before when train returns so that this doesn't affect people beyond their use of train? My bad, your response actually made me realize that my comment doesn't make sense because the way you have it set up right now gives more control to the user and is what I was also looking for. \r\n\r\nI also just checked the tutorials and they set the logger to debug but it's better to set it to info by default in this file indeed because we changed all of the trainer's prints to logging.\r\n\r\nOK to merge once pep8 passes:\r\n\r\n```\r\n======================================================================\r\nFAIL: Test if pep8 is respected.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/travis/miniconda/envs/test-environment/lib/python2.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/home/travis/build/tensorflow/cleverhans/cleverhans/devtools/tests/test_format.py\", line 45, in test_format_pep8\r\n    raise AssertionError(\"PEP8 Format not respected\")\r\nAssertionError: PEP8 Format not respected\r\n-------------------- >> begin captured stdout << ---------------------\r\n```  ### Implementing JSMA attack on NSL-KDD dataset, I got the following error. This error does not occur while implementing the same data on FSGM or other attack.\r\n### \r\n**Error : Retval[0] does not have value\r\nLine:   `   adv_x = jsma.generate_np(sample,**jsma_params)**              `  \r\n\r\n\r\nsource_samples = X_test_scaled.shape[0]\r\n\r\n# Keep track of success (adversarial example classified in target)\r\nresults = np.zeros((5, source_samples), dtype='i')\r\n\r\n# Rate of perturbed features for each test set example and target class\r\nperturbations =  np.zeros((5, source_samples), dtype='f')\r\n\r\n#grads = jacobian_graph(predictions, x, 5)\r\n\r\nX_adv = np.zeros((source_samples,X_test_scaled.shape[1]))\r\n\r\n#Instantiate a SaliencyMethod attack object\r\njsma = SaliencyMapMethod(model, back='tf', sess = sess)\r\n\r\njsma_params = {\r\n               'theta' : 1., \r\n               'gamma' : 0.1,\r\n               'clip_min' : 0.,\r\n               'clip_max': 1.0,\r\n               'y_target': None\r\n               }\r\n\r\nprint('Crafting adversarial test set examples')\r\n\r\n# Loop over the samples we want to perturb into adversarial examples\r\nfor sample_ind in range(0, 1):\r\n        print('--------------------------------------')\r\n        print('Attacking input %i/%i' % (sample_ind + 1, source_samples))\r\n       \r\n        #current observation we want to perturbate\r\n        sample = X_test_scaled[sample_ind:(sample_ind + 1)]\r\n        \r\n        #We want to find an adversarial example for each possible targeet class\r\n        #(i.e. all classes that differ from the label given in the dataset)\r\n        \r\n        #return the index of first matched maximum value\r\n        current_class = int(np.argmax(Y_test[sample_ind])) \r\n        \r\n        target_classes = other_classes(5, current_class)\r\n        \r\n        #Loop over all target classes\r\n        for target in target_classes:\r\n                print('Creating adv. example for target class '+ str(target))\r\n                \r\n                if current_class == 1: #for normal attack\r\n                        break\r\n                \r\n                one_hot_target = np.zeros((1, 5), dtype = np.float32)\r\n                one_hot_target[0, target] = 1\r\n                jsma_params['y_target'] = one_hot_target\r\n                \r\n                adv_x = jsma.generate_np(sample,**jsma_params)  ` This seems related to #456, which was closed because it was not reproducible.  \r\n\r\nCould you detail what changes you made from the JSMA tutorial? Did you change the model in addition to the data?   Also can you post the full stack trace?  **Changes I made from the JSMA tutorial :** \r\n\r\nI am trying to implement a MLP as my model. \r\n\r\n\r\n```\r\ndef mlp_model():\r\n        model = Sequential()\r\n        model.add(Dense(256, activation='relu', input_shape=(X_train_scaled.shape[1],)))\r\n        model.add(Dropout(0.4))\r\n        model.add(Dense(256, activation = 'relu'))\r\n        model.add(Dropout(0.4))\r\n        model.add(Dense(5, activation = 'softmax'))\r\n        model.compile(loss = 'categorical_crossentropy',\r\n                      optimizer = 'adam',\r\n                      metrices = ['accuracy'])\r\n        \r\n        model.summary()\r\n        \r\n        return model\r\n```\r\n\r\nWhereas, **_mnist_tutorial_jsma.py_** tutorial has model \r\n\r\n```\r\n model = ModelBasicCNN('model1', nb_classes, nb_filters)\r\n    preds = model.get_logits(x)\r\n```\r\n\r\nI am implementing my model as\r\n```\r\nmodel = mlp_model()\r\npredictions = model(x)\r\n```\r\n\r\nThis is the only change I brought from the _**mnist_tutorial_jsma.py**_ file.  Here goes the full stack tree:\r\n```\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-5-e54007f34bab>\", line 54, in <module>\r\n    adv_x = jsma.generate_np(sample,**jsma_params)\r\n\r\n  File \"F:\\deeplearning\\RNN\\cleverhans-master\\cleverhans\\attacks.py\", line 167, in generate_np\r\n    return self.sess.run(x_adv, feed_dict)\r\n\r\n  File \"C:\\Users\\Jon Snow\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 900, in run\r\n    run_metadata_ptr)\r\n\r\n  File \"C:\\Users\\Jon Snow\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1135, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n\r\n  File \"C:\\Users\\Jon Snow\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1316, in _do_run\r\n    run_metadata)\r\n\r\n  File \"C:\\Users\\Jon Snow\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1335, in _do_call\r\n    raise type(e)(node_def, op, message)\r\n\r\nInvalidArgumentError: Retval[0] does not have value\r\n``` Based on the syntax, I guess that you are using Keras to define the model? Have you wrapped the Keras model into a CleverHans model using https://github.com/tensorflow/cleverhans/blob/master/cleverhans/utils_keras.py#L101 I added this line in the previous source code.\r\n\r\n`wrap = KerasModelWrapper(model)\r\n`\r\n\r\nSome changes were made to replace **model** with **wrap**. Still, the ERROR remains the same. \r\n\r\n```\r\nsource_samples = X_test_scaled.shape[0]\r\nresults = np.zeros((5, source_samples), dtype='i')\r\nperturbations =  np.zeros((5, source_samples), dtype='f')\r\nX_adv = np.zeros((source_samples, X_test_scaled.shape[1]))\r\njsma = SaliencyMapMethod(wrap, back='tf', sess = sess)\r\njsma_params = {\r\n               'theta' : 1., \r\n               'gamma' : 0.1,\r\n               'clip_min' : 0.,\r\n               'clip_max': 1.0,\r\n               'y_target': None,\r\n               'nb_classes' : 5\r\n               }\r\n\r\nprint('Crafting adversarial test set examples')\r\nfor sample_ind in range(0, 1):\r\n        print('--------------------------------------')\r\n        print('Attacking input %i/%i' % (sample_ind + 1, source_samples))\r\n       \r\n        #current observation we want to perturbate\r\n        sample = X_test_scaled[sample_ind:(sample_ind + 1)]\r\n        \r\n        #We want to find an adversarial example for each possible targeet class\r\n        #(i.e. all classes that differ from the label given in the dataset)\r\n        \r\n        #return the index of first matched maximum value\r\n        current_class = int(np.argmax(Y_test[sample_ind])) \r\n        \r\n        target_classes = other_classes(5, current_class)\r\n        \r\n        #Loop over all target classes\r\n        for target in target_classes:\r\n                print('Creating adv. example for target class '+ str(target))\r\n                \r\n                if current_class == 1: #for normal attack\r\n                        break\r\n                \r\n                one_hot_target = np.zeros((1, 5), dtype = np.float32)\r\n                one_hot_target[0, target] = 1\r\n                jsma_params['y_target'] = one_hot_target\r\n                \r\n                adv_x = jsma.generate_np(sample,**jsma_params)   \r\n```\r\n` Are you training the model with keras or tensorflow? Did you disable the keras learning phase before running the attack? \r\n\r\nIt might be easier to modify the ModelBasicCNN example to remove the convolutions and add more fully connected layers. ### Attached file containing JSMA error. \r\n\r\n\r\n[jsma.txt](https://github.com/tensorflow/cleverhans/files/2412194/jsma.txt)\r\n\r\n\r\n[dataset.zip](https://github.com/tensorflow/cleverhans/files/2412202/dataset.zip)\r\n I was able to have the script run without errors by adding the following line:\r\n\r\n```\r\nkeras.layers.core.K.set_learning_phase(0)\r\n```\r\n\r\nYou can find an example use here: https://github.com/tensorflow/cleverhans/blob/master/cleverhans_tutorials/mnist_tutorial_keras_tf.py  I'm getting the following error running mnist_tutorial_keras_tf.py with SPSA attack\r\n\r\n\r\n File \"mnist_tutorial_keras_tf.py\", line 247, in <module>\r\n    tf.app.run()\r\n  File \"/Linux/Ubuntu/16.04/amd64/TOOLS/TENSORFLOW/1.8.0-GPU-PY2713/lib/python2.7/site-packages/tensorflow/python/platform/app.py\", line 126, in run\r\n    _sys.exit(main(argv))\r\n  File \"mnist_tutorial_keras_tf.py\", line 233, in main\r\n    load_model=FLAGS.load_model)\r\n  File \"mnist_tutorial_keras_tf.py\", line 161, in mnist_tutorial\r\n    adv_x = spsa.generate(x)\r\n  File \"/home/cleverhans/cleverhans/attacks.py\", line 1829, in generate\r\n    is_debug=is_debug,\r\n  File \"/home/cleverhans/cleverhans/attacks_tf.py\", line 1859, in pgd_attack\r\n    tf.shape(input_image), minval=-epsilon, maxval=epsilon, dtype=tf_dtype)\r\nTypeError: bad operand type for unary -: 'NoneType' @goodfeli I attached the edited mnist_tutorial_keras_tf.py\r\n\r\n[mnist_tutorial_keras_tf.py.tar.gz](https://github.com/tensorflow/cleverhans/files/2412331/mnist_tutorial_keras_tf.py.tar.gz)\r\n In the code you shared, the call to `spsa.generate(x)` is missing some arguments. \r\n\r\nJust like other attacks (e.g., the ones in the tutorial), you need to pass some named arguments. For instance, I managed to get that line to execute by adding: \r\n\r\n```\r\nspsa_params = {'epsilon': 0.3, 'y': tf.argmax(y, axis=1), 'num_steps': 5}\r\nadv_x = spsa.generate(x, **spsa_params)\r\n```\r\n\r\nYou will also need to have `x` have a batch size of 1 (for the SPSA attack only), I will make a PR now to add a more friendly error when `x` does not have the right dimension. @npapernot could you please elaborate where do you set x to has batch size of 1,  specifically in the context of the mnist_tutorial_keras_tf.py file? I managed to do it by commenting out the the following line in attacks_tf.py\r\n`assert num_samples % 2 == 0, \"number of samples must be even\"`\r\n\r\nand \r\n\r\nmodifying `self._num_samples = num_samples // 2` to  `self._num_samples = num_samples`\r\n I just set batch_size to 1 in the tutorial script (there is a batch_size flag if you look at the bottom of the script). Hope that solves the problem for you as well. In practice, you probably want to use a different batch_size for training and evaluation/attack (for performance reasons).  ![problem](https://user-images.githubusercontent.com/37574973/45816803-4c79a600-bd0f-11e8-8d84-1261955f5525.png)\r\n\r\nHow should i do? I am getting this \r\n    _sys.exit(main(argv))\r\n  File \"mnist_blackbox.py\", line 292, in main\r\n    lmbda=FLAGS.lmbda, aug_batch_size=FLAGS.data_aug_batch_size)\r\n  File \"mnist_blackbox.py\", line 261, in mnist_blackbox\r\n    rng, img_rows, img_cols, nchannels)\r\n  File \"mnist_blackbox.py\", line 183, in train_sub\r\n    args=eval_params)[0]\r\nTypeError: 'NoneType' object has no attribute '__getitem__'\r\ndo you find any solution?\r\n\r\n  Both of these changes lgtm  Mnist tutorial was broken with Python2, it invokes array.array method providing a unicode string param, where an ascii string is expected. This is a working fix. It seems that continuous integration tests fail cause job errors, not related to code.. it seems.\r\ne.g., two jobs have failed with \r\n\"Unable to download 3.5 archive. The archive may not exist. Please consider a different version.\"\r\nThat is a initialization problem, imho this travis CI stuff sucks a lot :-)\r\nPlease check\r\n  Interested contributors can look at this function to get started:\r\nhttps://github.com/tensorflow/cleverhans/blob/827fd70568c911a4185aa1136f80f0043298cbb3/cleverhans/augmentation.py#L16  What I noticed is that `cleverhans.utils_tf.model_eval` function gives unexpected result, \r\ni.e. result is not consistent with result of `keras.models.Model.evaluate`. \r\n\r\nHere is my code so that result can be reproduced: \r\n\r\n```\r\nimport tensorflow as tf\r\nfrom keras.models import load_model\r\nfrom cleverhans.utils_keras import KerasModelWrapper\r\nfrom cleverhans.utils_tf import model_eval\r\nfrom cleverhans.utils_mnist import data_mnist\r\nfrom keras.optimizers import SGD\r\nfrom keras.layers import Dense, Flatten\r\nfrom keras.layers import Conv2D, MaxPooling2D\r\nfrom keras.models import Sequential\r\n\r\nnum_classes = 10\r\nbatch_size = 128\r\nnb_epochs = 2 # to reproduce results faster\r\nimg_size = 28\r\nnb_channels = 1\r\n\r\n\r\ndef main():\r\n    # Create TF session\r\n    sess = tf.Session()\r\n\r\n    # load data\r\n    x_train, y_train, x_test, y_test = data_mnist()\r\n\r\n    # load model\r\n    # model_path = 'same result if we load a model instead of training it'\r\n    # model = load_model(model_path)\r\n    # print(\"Model loaded.\")\r\n\r\n    # train a model\r\n    model = get_keras_model(num_classes, (img_size, img_size, nb_channels))\r\n    sgd = SGD(lr=0.1, momentum=0.9, decay=0.5)\r\n    model.compile(loss='categorical_crossentropy', optimizer=sgd, metrics=['accuracy'])\r\n    model.fit(x_train, y_train,\r\n              batch_size=batch_size,\r\n              epochs=nb_epochs,\r\n              validation_data=(x_test, y_test),\r\n              shuffle=True)\r\n\r\n\r\n    # Score trained model via keras impl of evaluate method\r\n    scores = model.evaluate(x_test, y_test, verbose=1)\r\n    print('Test accuracy:', scores['acc'])\r\n\r\n    # initialize placeholders\r\n    x = tf.placeholder(tf.float32, shape=(None, img_size, img_size, nb_channels))\r\n    y = tf.placeholder(tf.float32, shape=(None, num_classes))\r\n\r\n    # wrap it\r\n    model = KerasModelWrapper(model)\r\n\r\n    # initialize session\r\n    init_op = tf.global_variables_initializer()\r\n    sess.run(init_op)\r\n\r\n    # Score trained model (again) vie keras implementation of evaluate\r\n    scores = model.model.evaluate(x_test, y_test, verbose=1)\r\n    print('Test accuracy (again):', scores[1])\r\n\r\n    # evaluate wrapper via model_eval\r\n    predictions = model.get_logits(x)\r\n    accuracy = model_eval(sess, x, y, predictions, x_test, y_test, args={'batch_size': batch_size})\r\n    print('Test accuracy (cleverhans impl): ' + str(accuracy))\r\n\r\ndef get_keras_model(num_classes, input_shape):\r\n    model = Sequential()\r\n    model.add(Conv2D(64, kernel_size=(3, 3), strides=(1, 1),\r\n                     activation='relu',\r\n                     input_shape=input_shape))\r\n    model.add(Conv2D(64, kernel_size=(3, 3), strides=(1, 1),\r\n                     activation='relu',\r\n                     input_shape=input_shape))\r\n    model.add(MaxPooling2D(pool_size=(2, 2), strides=(2, 2)))\r\n    model.add(Conv2D(128, (3, 3), activation='relu'))\r\n    model.add(Conv2D(128, (3, 3), activation='relu'))\r\n    model.add(MaxPooling2D(pool_size=(2, 2)))\r\n    model.add(Flatten())\r\n    model.add(Dense(256, activation='relu'))\r\n    model.add(Dense(256, activation='relu'))\r\n    model.add(Dense(num_classes, activation='softmax'))\r\n    return model\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nand output (unimportant messages are omitted) it produces is the following:\r\n\r\n\r\n```\r\nTest accuracy: 0.9633\r\n\r\nTest accuracy (again): 0.9633\r\n\r\nTest accuracy (cleverhans impl): 0.1708\r\n```\r\n\r\nHow is it the case that those accuracies are not the same?   Looks good now.  Nice trick!   As far as I can tell, there's not actually anything to cache in `batch_eval`.\r\n`model_eval` builds the accuracy graph, but `batch_eval` uses a predefined graph. `batch_eval_multi_worker` builds the graph on several GPUs, but `batch_eval` doesn't build anything, it just uses a graph the user already built with their own GPU assignments. I confirmed that this causes the tutorial slowdown. The fix drops the time per epoch of the tutorial on one GTX from 5.1 sec on epoch 10 to 4.75 sec, and there's no upward trend in time per epoch anymore.   Address #543  Sorry for missing lots of values.... There are too many of them. Please check it out. Thx!  I restarted the Travis build in hope that it will successfully show up as passing here this time so we can merge the PR  LGTM  Changing `overshoot` parameter does not have any effect in `DeepFool` attack. I think the problem is with `structural_kwargs` in `attack.py` file.\r\n`over_shoot` should be changed to `overshoot`. @cihangxie  could you take a look?  @goodfeli I'm using `generate_np` yes, we should change the variable from `over_shoot` to `overshoot`. Sorry for this mistake @cihangxie are you interested in being the owner of this issue?  That's a good idea. We could warn the user that the tutorial is importing the CleverHans library from a directory that is different from the parent of the tutorial being executed.  I am trying to run mnist_tutorial_tf.py on Ubuntu 16.04 with Python 3.5.2 and TensorFlow 1.4 ,\r\nbut I am getting:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/adv_attack_code/mnist_tutorial_tf.py\", line 19, in <module>\r\n    from cleverhans.loss import LossCrossEntropy\r\nImportError: No module named 'cleverhans.loss'\r\n\r\ncould you help me with it.\r\nThanks.  Thanks! It is strange yes, I would also have expected that the training learning rate would be impacted. It may be the case that the previous attack learning rate had not been tuned for this particular model given that the tutorial model was changed recently?   This PR adds basic iterative method in Tensorflow eager mode, and mainly modifies the following two parts:\r\n\r\n1. Gradient tape in [this line](https://github.com/tensorflow/cleverhans/compare/master...WindQAQ:master#diff-1e01328cea7defb5113accf896de8718R146) should watch at `x` so that the `tape.gradient(loss, x)` can be calculated. Original `FastGradientMethodTFE` works without any error because the input `x` is created by `tfe.Variable` ([here](https://github.com/tensorflow/cleverhans/blob/master/cleverhans/utils_tfe.py#L70)), which is automatically watched by gradient tape ([ref](https://www.tensorflow.org/api_docs/python/tf/GradientTape)).\r\n\r\n2. Add `BasicIterativeMethodTFE` and add it into available attacks in `cleverhans_tutorial/mnist_tutorial_tfe.py`. It seems that we can use `tfe.py_func()` to selectively enable eager execution, but in this way, the computational graph will also exist.\r\nSee [Eager](https://www.tensorflow.org/guide/eager) for more details. We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for all the commit author(s) or Co-authors.  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA ([login here](https://cla.developers.google.com/) to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\nIn order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again. If the bot doesn't comment, it means it doesn't think anything has changed.\n\n<!-- need_author_cla --> CLAs look good, thanks!\n\n<!-- ok -->  https://github.com/tensorflow/cleverhans/pull/862  I change \r\ndatadir='/tmp/'\r\nto\r\ndatadir='tmp/'\r\nin cleverhans/utils_mnist.py \r\ndef data_mnist(datadir='tmp/', train_start=0, train_end=60000, test_start=0,#datadir='/tmp/'!!!!!!!!!!!!\r\n               test_end=10000):\r\n\r\nand create tmp directory to solve this error\r\n\r\n\r\n\r\n I agree and support such change. The tempfile module handles temporary\nfiles and directories in a portable way that abstracts away the file\nsystem/operating system details. I still have to find a case when it\ndoesn't do the right thing. As a general rule I replace any hardwired\ntemporary directory with the appropriate call into tempfile.\n\nA caveat, though: temporary files created in a temporary directory (by\ntempfile or otherwise) might not survive a reboot. In fact, they don't in\nmodern Linux environments where /tmp is actually a directory in the\nvolatile tmpfs in-core filesystem. But that happens regardless of the\ntempdir path being hardwired or determined by the tempfile module.\n\nOn Mon, Aug 27, 2018 at 1:38 PM Ian Goodfellow <notifications@github.com>\nwrote:\n\n> Can you tell us more about your setup? (Operating system, etc.?) Do you\n> have no '/tmp' directory?\n>\n> Maybe we should use this instead:\n> https://docs.python.org/3/library/tempfile.html#tempfile.TemporaryDirectory\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/issues/511#issuecomment-416306026>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AImIsXbCeosspH1drlDEd6yUbMiRPjXtks5uVC6WgaJpZM4WMsvN>\n> .\n>\n\n\n-- \nLeo Mauro\nAsesor\nDirecci\u00f3n de Servicios Telem\u00e1ticos\nUniversidad Sim\u00f3n Bol\u00edvar\n I think `tempfile.gettempdir()` is what you want here - it returns the path where tempfiles are stored on the current system (as opposed to `tempfile.TemporaryDirectory`, which creates a unique temporary directory each time it is called).\r\n\r\nsee PR #741  This pull request implements the spatial transformation-based attack proposed in [1], addressing #490 . \r\n\r\nHere is the procedure of the attack:\r\n1. randomly sample `n_samples` set of different translation & rotation parameters\r\n2. apply the transformations to the testing set and choose the worst of `n_samples` transformation as the attack\r\n\r\nA notebook demo of the attack can be found [here](http://nbviewer.jupyter.org/github/yenchenlin/cleverhans/blob/transformation-attack/cleverhans_tutorials/mnist_tutorial_tran.ipynb), where the testing accuracy of the classifier drops from **98.74%** to **59.61%** (Results in [1]: **99.31%** to **73.32%**)\r\n\r\n[1] A Rotation and a Translation Suffice: Fooling CNNs with Simple Transformations, Engstorm et al. You've got a few PEP8 errors due to lines being too long, let me see if I can clean those up for you. @nottombrown Would you mind reviewing this to compare it with your implementation? @catherio Thanks a lot!  Sorry for the slow response. I'll take a look at this over the weekend. @nottombrown Thanks! Sorry for the delay. Scheduled some time on Friday to look at this. @nottombrown No worry take your time! Let me know if you would like any clarification @yenchenlin  Hello @nottombrown , thanks for your helpful review! I've simplified the code (a lot) based on your suggestions. \r\n\r\nI have two questions now:\r\n1. Is the padding part of your example tranformation function essential? I tried it but \r\n```\r\ntf.image.resize_image_with_crop_or_pad(x, image_height, image_width)\r\n```\r\nkeep outputting an error saying that Dimension is -100 but it should > 0. I guess -100 comes from 28 (original size) - 128 (padded size) = -100. \r\n\r\n2. Can you suggest me what kind of test cases should I add? Seems like different attacks have different unit tests. Awesome!\r\n\r\n1. I believe that the padding is important because otherwise the corners can get cut off of the image (Try saving a couple samples as images and looking at them)\r\n\r\n2. I would recommend a couple tests:\r\n\r\na) If you set the rotation and translation to zero, and pass MNIST through, do you get the exact same image out?\r\nb) If you use the real attack, does it reduce the performance of the toy classifier in `test_attacks`? There are probably other useful tests but I can't think of them off the top of my head. @goodfeli yes, working on it. Will update the code later today. Hello @nottombrown and @goodfeli , just added the tests and the padding before transformation to prevent corner cutoffs.  Hello @nottombrown , just push another commit which makes the padding size be propotional to image size, nice catch! \r\n\r\nAlso, I just sampled 100 adversarial images from MNIST using transformation that rotate the images by -30 or 30 degree:\r\n![download](https://user-images.githubusercontent.com/7057863/46041334-81f00c00-c0e0-11e8-8c1c-c51768f71015.png)\r\n\r\nI just rebased the branch to master but not sure whether this is what you mean ... sorry if I mess the git commit logs.\r\n Ok, travis seems to be failing now, but lgtm pending travis passing\r\nhttps://travis-ci.org/tensorflow/cleverhans/jobs/433177485\r\n![image](https://user-images.githubusercontent.com/306655/46102910-56bef880-c184-11e8-87a1-c0957e209352.png)\r\n @yenchenlin, I have a commit that seems to solve the issue here:\r\nhttps://github.com/tensorflow/cleverhans/commit/04eec9ff4ad87df669d62c6952e8a2bb470f715c\r\n\r\nI'm going to make it into a PR and will merge it in if it passes Travis. @nottombrown Oh yeah thanks for the catch! Would be happy to do so.\r\n  This replaces #463 by removing the MadryEtAl class that duplicated the BasicIterativeMethod. \r\n\r\nInstead, both classes now inherit from a ProjectedGradientDescent class with a `rand_minmax` used to control the noise added before the gradient descent and switch from one attack to the other.\r\n\r\nThis also allows using L1 and L2 distances w/ MadryEtAl, which was previously only possible w/ BasicIterativeMethod. Been sidetracked by ICLR deadline, will work on it this Friday afternoon  LGTM, OK to merge when tests pass  We have two lines where we pass an explicit `DeprecationWarning` category to `warnings.warn`. It appears that passing that category causes the warning to not show up?\r\n\r\nhttps://github.com/tensorflow/cleverhans/blob/3a70bf23039fc1269faef984244b2c0b530340ec/cleverhans/utils_tf.py#L34\r\nhttps://github.com/tensorflow/cleverhans/blob/3a70bf23039fc1269faef984244b2c0b530340ec/cleverhans/utils_tf.py#L454\r\n\r\nI'm not familiar with the code in question or how the warning system works, but I would suggest removing the category argument in order to get the warning to display to the user.\r\n\r\ncc @david-berthelot who was the original author Ok I will fix it\n\nOn Fri, Aug 17, 2018 at 10:44 AM David Berthelot <notifications@github.com>\nwrote:\n\n> I don't know anything about it, I just copied it from elsewhere after\n> being asked during review to add deprecation warnings.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/issues/500#issuecomment-413939360>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AASt3wx1ZrV-PwOAN7lC_K2dcR315I2Oks5uRwDxgaJpZM4WB7oZ>\n> .\n>\n  Our PGD implementation requires that inputs are bounded to [0.0, 1.0]\r\n\r\nWe had a bug in data preprocessing that resulted in an input that was slightly out of bounds, this was hard to debug initially.\r\n\r\nThese assertions should help people track down the errors faster. Why does the implementation need the input to be bounded between 0 and 1?  It currently crops the output to be between 0 and 1, and then it checks that the perturbation is less than epsilon. \r\n\r\nIf the initial input is less than 0 or more than 1, then it will always error out with a confusing assertion error. Tom and I discussed this offline and agreed to move the check within the `project_perturbation` helper before another PR addresses consolidation of the BIM, Madry and pgd_attack code snippets Also adds a test that addresses #495  @goodfeli - we weren't aware of this when I opened the PR, but the system only requires the [0.0, 1.0] range when the default `project_perturbation` function is used. If you want to have a different range you pass in a different `project_perturbation` function.\r\n\r\nI think that this seems like a sane default, but I don't have a strong opinion. Yes, that is what we noticed on Friday as well. This is specific to the SPSA attack code and the helper function that it calls in `attacks_tf.py` but does not apply to the PGD attack in `attacks.py`. Once we take care of #463, we should be able to consolidate this PGD code as well to only have a single implementation (that uses `clip_min` and `clip_max`).   SPSA has some nice tests:\r\nhttps://github.com/tensorflow/cleverhans/blob/2ebda1ddab0cc3084316b0db7516c8b8e2cc796a/examples/test_imagenet_attacks.py\r\n\r\nHowever, since they live in the `examples` directory, rather than in `cleverhans` or `tests_tf`, they don't get executed by the [travis.yml manifest](https://github.com/tensorflow/cleverhans/blob/master/.travis.yml#L77)\r\n\r\nIs this intentional @juesato ? Looking a bit more deeply, it seems like it's not there because it is too expensive to run on Inception on a travis CPU. Could we perhaps test it on MNIST or a toy dataset? Yeah, the small test ended up being quite easy to add.\r\n\r\n#498 adds tests using the same task as the other attacks in `attacks.py`. Closing this because this seems to now be covered sufficiently.  Within the Model class, it keeps attempted to call self.fprop (which looks to be intentionally broken) instead of the CallableModelWrapper.fprop().  Is there a fix coming for this?  Or can I roll back to a previous version?\r\n\r\n> 2018-08-08 15:43:41.672952: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\r\nTraceback (most recent call last):\r\n  File \"blackbox.py\", line 199, in <module>\r\n    main()\r\n  File \"blackbox.py\", line 196, in main\r\n    pwn(image,label)\r\n  File \"blackbox.py\", line 144, in pwn\r\n    batch_size=10)\r\n  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/attacks.py\", line 151, in generate_np\r\n    self.construct_graph(fixed, feedable, x_val, hash_key)\r\n  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/attacks.py\", line 125, in construct_graph\r\n    x_adv = self.generate(x, **new_kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/attacks.py\", line 1117, in generate\r\n    labels, nb_classes = self.get_or_guess_labels(x, kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/attacks.py\", line 218, in get_or_guess_labels\r\n    preds = self.model.get_probs(x)\r\n  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/model.py\", line 48, in get_probs\r\n    d = self.fprop(x, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/model.py\", line 104, in fprop\r\n    return {self.output_layer: self.callable_fn(x, **kwargs)}\r\n  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/model.py\", line 32, in __call__\r\n    return self.get_probs(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/model.py\", line 48, in get_probs\r\n    d = self.fprop(x, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/cleverhans/model.py\", line 63, in fprop\r\n    raise NotImplementedError('`fprop` not implemented.')\r\nNotImplementedError: `fprop` not implemented. Are you running the latest version of CleverHans?  Latest as of 2 weeks ago. Could you share a bit more context with a code snippet for instance?  As shown by some recent papers [1, 2], simple transformations are sufficient to fool neural network-based vision models. Notably, worst-of-10 attack described in [2] can serve as a good baseline for black-box attack.\r\n\r\nDo you think it's appropriate for cleverhans to include these transformation-based attacks?\r\n\r\n[Here](http://nbviewer.jupyter.org/github/yenchenlin/cleverhans/blob/transformation-attack/cleverhans_tutorials/mnist_tutorial_tran.ipynb) is an ipython notebook demonstrating the effectiveness of these attack. I've tested the model in `mnist_tutorial_tf.py` and find that:\r\n\r\n- accuracy on legitimate examples: **0.9928**\r\n- accuracy on transformed examples: **0.5715**\r\n\r\nwhere the transformation consists of (i) 30-degree rotation and (ii) 10% translation along each direction.\r\n\r\n<img width=\"443\" alt=\"screen shot 2018-08-04 at 8 42 43 am\" src=\"https://user-images.githubusercontent.com/7057863/43670761-6aa4af66-97c2-11e8-8720-ce4412ee1959.png\">\r\n\r\n[1] A Rotation and a Translation Suffice: Fooling CNNs with Simple Transformations, Engstrom et al.\r\n[2] Spatially Transformed Adversarial Examples, Xiao et al.\r\n @yenchenlin would you be able to put together a PR to add these attacks?  @npapernot Yes, working on it! I have a working implementation of this that matches the performance from the paper on ImageNet. Happy to contribute it if @yenchenlin 's implementation isn't ready yet Hello @nottombrown , Thanks!!! But I'm almost there, would be awesome if you can give me a hand in the PR. @nottombrown We can close this now? Closed via #594 !  As shown in #423, APIs like `model_train` and `model_loss` in `utils_tf.py` are deprecated. Change them to `train` and `attack_softmax_cross_entropy` instead.  I rewrote the program to verify deepfool attack according to fgsm demo, but there seems to be some problems during the process. It seems to be a problem with the session delivery process. self.Sess is used before the session created.So the sess is always none. Can you help me with it, or provide a tutorial for deepfool? You can take a look at https://github.com/tensorflow/cleverhans/pull/260/files#diff-c7cecf126d79fa92482e5b42b1be1958. \r\n\r\nBasically, this tutorial is very similar to C&W tutorial, so is not merged in the official cleverhans @Erpim: feel free to reopen this issue if the tutorial provided by @cihangxie does not solve your problem.   Handle deprecated warning from `tf.reduce_*` in `BasicIterativeMethod` and `MomentumIterativeMethod`.\r\n\r\nBy the way, this should have already been handled in c02b0d1, but appears again after 3a362785.   `y_train` in both `cleverhans_tutorials/mnist_tutorial_tf.py` and `cleverhans_tutorials/mnist_tutorial_keras_tf.py` has been label smoothed twice.\r\n\r\nOne is [here](https://github.com/tensorflow/cleverhans/blob/master/cleverhans_tutorials/mnist_tutorial_keras_tf.py#L82), and another occurs when `y_train` passes into `LossCrossEntropy` , which is invoked in `train()`, see [this part](https://github.com/tensorflow/cleverhans/blob/master/cleverhans_tutorials/mnist_tutorial_keras_tf.py#L133) for more details.  Punctuation mistake \nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here (e.g. `I signed it!`) and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google.com/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n<!-- need_sender_cla --> I signed it! CLAs look good, thanks!\n\n<!-- ok --> Is there anything I need to do for you to approve this PR?\r\nHi, I saw you corrected the Punctuation mistake at the README.md at #482 \r\nIs there possible to add me become a contributor for this project. I am doing a school project here. Okay, thanks and have a nice day. Okay, enjoy yourself  As part of creating graph, None arguments are removed. This works as expected, but when generate_np is called in a loop, graph will be constructed only during first iteration. So further calls to generate_np can contain None arguments(as they were removed in function construct_graph) which result in following code to throw error:\r\n\r\n`        for name in feedable:\r\n             feed_dict[new_kwargs[name]] = feedable[name]`\r\n\r\nNone arguments should be removed for every call to generate_np so that a single class instantiation could be used. @goodfeli I think there is some problem with the build setup. Can you please check? There are paths that go to `construct_graph` that don't go through `generate_np`, correct? Does removing the deletion of unused arguments cause errors when you call `construct_graph` through a different path? @carlini \r\nThe problem is with calling `generate_np `multiple times in a loop. For the first iteration the `construct_graph ` will be called, it will not be called after that because of `hask_key`. All the other `generate_np `calls will have `kwargs` with some unused arguments too, which will not be deleted(deletion is part of `construct_graph`). These arguments throw errors while creating the feed_dict. I had proposed a remedy for that but I think removing it from construct_graph is not safe. \r\n\r\nI agree with you that removing unused arguments will cause errors when we call `construct_graph` from different paths where the deletion is not done. An alternative could be, to check for unused arguments while creating `feed_dict ` in this line. \r\n`         for name in feedable:\r\n             feed_dict[new_kwargs[name]] = feedable[name]`\r\n\r\nAlso some paths could be using the unused arguments as control variable, so deletion in construct_variables is not safe.\r\n Yeah, I understand the error case.\r\n\r\nIt seems like putting the deletion in `construct_graph` is where we want it, though, because not everyone uses `generate_np`. For example, if you use `generate` it still needs to delete the extra arguments. @carlini I added a snippet in generate_np to fix the error without any modification to construct_graph. This will have minimum implications and still fixes the error. Sounds good.  Fixes #471  Ah sorry for the slow response. I believe that setting the shape of a\npy_func output is the correct solution here so LGTM\n\nOn Fri, Jul 27, 2018 at 3:58 PM David Berthelot <notifications@github.com>\nwrote:\n\n> @david-berthelot <https://github.com/david-berthelot> requested your\n> review on: tensorflow/cleverhans#478\n> <https://github.com/tensorflow/cleverhans/pull/478> Fix missing shape\n> problems in generate for models that use py_func..\n>\n> \u2014\n> You are receiving this because your review was requested.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/478#event-1758271061>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AASt39yDoDhZ16-as76a0t91bKbU62V5ks5uK5sZgaJpZM4VkxfH>\n> .\n>\n  I've updated the current copyright to 2018, which that hasn't changed around 3 months. \nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here (e.g. `I signed it!`) and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google.com/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n<!-- need_sender_cla --> I've signed the Contributor License Agreement (CLA).  CLAs look good, thanks!\n\n<!-- ok --> Thanks for merging! Much appreciate!  Replaced the deprecated function calls to tf.nn.softmax_cross_entropy_with_logits with tf.losses.softmax_cross_entropy #472 already did a good job of tackling this issue. I am closing this PR.  relatively recent push caused an issue with EAD, this fixes it.  Rebase done.  Can this fix be pushed soon? Lgtm. Squashed and merged  #397 \r\nUse `tf.nn.softmax_cross_entropy_with_logits_v2` instead of `tf.nn.softmax_cross_entropy_with_logits`, which causes deprecated warnings (e.g. when running `cleverhans_tutorials/mnist_tutorial_tf.py`) for Tensorflow 1.8. Already added the date into warnings. Please check it!  The `ModelBasicCNN` defined in `cleverhans_tutorials.tutorial_models` does not work with the following attacks: CarliniWagner, DeepFool, ElasticNetMethod and LBFGS.\r\nI don't know exactly what the reason is, but it seems that the output tensor of generate function cannot infer the shape of the input. @summermjj can you share a snippet of your code and the error log. @summermjj Yes that would help me too to have a code snippet. `import tensorflow as tf\r\nimport numpy as np\r\n\r\ntf.reset_default_graph()\r\n\r\n(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data()\r\nx_train = np.expand_dims(x_train, axis=3).astype('float32')/255\r\nx_test = np.expand_dims(x_test, axis=3).astype('float32')/255\r\ninput_shape = (28, 28, 1)\r\n\r\nx_train = x_train[0:1000]\r\ny_train = y_train[0:1000]\r\nx_test = x_test[0:100]\r\ny_test = y_test[0:100]\r\n\r\nnb_classes = 10\r\ny_train = tf.keras.utils.to_categorical(y_train, nb_classes)\r\ny_test = tf.keras.utils.to_categorical(y_test, nb_classes)\r\nprint(\"x_train shape =\", x_train.shape)\r\nprint('y_train shape =', y_train.shape)\r\nprint (\"x_test shape =\", x_test.shape)\r\n\r\nfrom cleverhans.attacks import CarliniWagnerL2\r\ncw = CarliniWagnerL2(tf_model, sess=sess)\r\n\r\ncw_params = {'binary_search_steps': 5,\r\n              'max_iterations': 100,\r\n              'clip_min': -10,\r\n              'clip_max': 10,\r\n             'learning_rate': .005,\r\n             'initial_const': 0.01,\r\n            'batch_size' : 1,\r\n            'confidence': 0,\r\n            'abort_early': True}\r\n\r\nadv_x = cw.generate(x, **cw_params)\r\nadv_preds = tf_model.get_logits(adv_x)\r\nadv_acc = model_eval(sess, x, y, adv_preds, x_test, y_test, args=eval_params)\r\nprint(adv_acc)`\r\n\r\nAnd here is the error that I get:\r\n\r\n`---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-5-06a227f123df> in <module>()\r\n     12             'abort_early': True}\r\n     13 adv_x = cw.generate(x, **cw_params)\r\n---> 14 adv_preds = tf_model.get_logits(adv_x)\r\n     15 adv_acc = model_eval(sess, x, y, adv_preds, x_test, y_test, args=eval_params)\r\n     16 print(adv_acc)\r\n\r\nc:\\users\\src\\cleverhans\\cleverhans\\model.py in get_logits(self, x, **kwargs)\r\n     39         (i.e., the values fed as inputs to the softmax layer).\r\n     40         \"\"\"\r\n---> 41         return self.fprop(x, **kwargs)[self.O_LOGITS]\r\n     42 \r\n     43     def get_probs(self, x, **kwargs):\r\n\r\nc:\\users\\src\\cleverhans\\cleverhans_tutorials\\tutorial_models.py in fprop(***failed resolving arguments***)\r\n     25                                     kernel_initializer=HeReLuNormalInitializer)\r\n     26         with tf.variable_scope(self.scope, reuse=tf.AUTO_REUSE):\r\n---> 27             y = my_conv(x, self.nb_filters, 8, strides=2, padding='same')\r\n     28             y = my_conv(y, 2 * self.nb_filters, 6, strides=2, padding='valid')\r\n     29             y = my_conv(y, 2 * self.nb_filters, 5, strides=1, padding='valid')\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\tensorflow\\python\\layers\\convolutional.py in conv2d(inputs, filters, kernel_size, strides, padding, data_format, dilation_rate, activation, use_bias, kernel_initializer, bias_initializer, kernel_regularizer, bias_regularizer, activity_regularizer, kernel_constraint, bias_constraint, trainable, name, reuse)\r\n    425       _reuse=reuse,\r\n    426       _scope=name)\r\n--> 427   return layer.apply(inputs)\r\n    428 \r\n    429 \r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\base_layer.py in apply(self, inputs, *args, **kwargs)\r\n    772       Output tensor(s).\r\n    773     \"\"\"\r\n--> 774     return self.__call__(inputs, *args, **kwargs)\r\n    775 \r\n    776   def _set_learning_phase_metadata(self, inputs, outputs):\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\tensorflow\\python\\layers\\base.py in __call__(self, inputs, *args, **kwargs)\r\n    327 \r\n    328       # Actually call layer\r\n--> 329       outputs = super(Layer, self).__call__(inputs, *args, **kwargs)\r\n    330 \r\n    331     if not context.executing_eagerly():\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\base_layer.py in __call__(self, inputs, *args, **kwargs)\r\n    686 \r\n    687         # Check input assumptions set before layer building, e.g. input rank.\r\n--> 688         self._assert_input_compatibility(inputs)\r\n    689         if input_list and self._dtype is None:\r\n    690           try:\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\base_layer.py in _assert_input_compatibility(self, inputs)\r\n   1379         if x.get_shape().ndims is None:\r\n   1380           raise ValueError('Input ' + str(input_index) + ' of layer ' +\r\n-> 1381                            self.name + ' is incompatible with the layer: '\r\n   1382                            'its rank is undefined, but the layer requires a '\r\n   1383                            'defined rank.')\r\n\r\nValueError: Input 0 of layer conv2d_19 is incompatible with the layer: its rank is undefined, but the layer requires a defined rank.`\r\n\r\n**Note:** I can successfully use cw attack using generate_np function, but I was just curious why generate function gives me this error.  Adapt train() api to be compatible with the latest utils_tf version, so that the script is runnable again.  PEP8 checker error fixed for ex_cifar10_tf. py  Some of the attack methods returns \"tensor not in the same graph error\" when the generate() function is called. My tensorflow version is 1.9.\r\n\r\nSaliencyMapMethod:\r\n```\r\n~/notebooks/Denoising the Adversarial Examples/utilities.py in attack_classifier(sess, x, y, model, x_test, y_test, attack_method, target, batch_size)\r\n    206 \r\n    207 \r\n--> 208     adv_x = method.generate(x, **params)\r\n    209     num_batch = x_test.shape[0]// batch_size\r\n    210     adv_imgs = []\r\n\r\n/anaconda/envs/py35/lib/python3.5/site-packages/cleverhans/attacks.py in generate(self, x, **kwargs)\r\n    691                                   theta=self.theta, gamma=self.gamma,\r\n    692                                   clip_min=self.clip_min,\r\n--> 693                                   clip_max=self.clip_max)\r\n    694         else:\r\n    695             from .attacks_tf import jacobian_graph, jsma_batch\r\n\r\n/anaconda/envs/py35/lib/python3.5/site-packages/cleverhans/attacks_tf.py in jsma_symbolic(x, y_target, model, theta, gamma, clip_min, clip_max)\r\n    551     x_adv, _, _, _, _ = tf.while_loop(condition, body,\r\n    552                                       [x, y_target, search_domain, 0, True],\r\n--> 553                                       parallel_iterations=1)\r\n    554 \r\n    555     return x_adv\r\n\r\n/anaconda/envs/py35/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py in while_loop(cond, body, loop_vars, shape_invariants, parallel_iterations, back_prop, swap_memory, name, maximum_iterations)\r\n   3207     if loop_context.outer_context is None:\r\n   3208       ops.add_to_collection(ops.GraphKeys.WHILE_CONTEXT, loop_context)\r\n-> 3209     result = loop_context.BuildLoop(cond, body, loop_vars, shape_invariants)\r\n   3210     if maximum_iterations is not None:\r\n   3211       return result[1]\r\n\r\n/anaconda/envs/py35/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py in BuildLoop(self, pred, body, loop_vars, shape_invariants)\r\n   2939       with ops.get_default_graph()._lock:  # pylint: disable=protected-access\r\n   2940         original_body_result, exit_vars = self._BuildLoop(\r\n-> 2941             pred, body, original_loop_vars, loop_vars, shape_invariants)\r\n   2942     finally:\r\n   2943       self.Exit()\r\n\r\n/anaconda/envs/py35/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py in _BuildLoop(self, pred, body, original_loop_vars, loop_vars, shape_invariants)\r\n   2876         flat_sequence=vars_for_body_with_tensor_arrays)\r\n   2877     pre_summaries = ops.get_collection(ops.GraphKeys._SUMMARY_COLLECTION)  # pylint: disable=protected-access\r\n-> 2878     body_result = body(*packed_vars_for_body)\r\n   2879     post_summaries = ops.get_collection(ops.GraphKeys._SUMMARY_COLLECTION)  # pylint: disable=protected-access\r\n   2880     if not nest.is_sequence(body_result):\r\n\r\n/anaconda/envs/py35/lib/python3.5/site-packages/cleverhans/attacks_tf.py in body(x_in, y_in, domain_in, i_in, cond_in)\r\n    512         # Create a 2D numpy array of scores for each pair of candidate features\r\n    513         scores = tf.cast(scores_mask, tf_dtype) \\\r\n--> 514             * (-target_sum * other_sum) * zero_diagonal\r\n    515 \r\n    516         # Extract the best two pixels\r\n\r\n/anaconda/envs/py35/lib/python3.5/site-packages/tensorflow/python/ops/math_ops.py in binary_op_wrapper(x, y)\r\n    843 \r\n    844   def binary_op_wrapper(x, y):\r\n--> 845     with ops.name_scope(None, op_name, [x, y]) as name:\r\n    846       if isinstance(x, ops.Tensor) and isinstance(y, ops.Tensor):\r\n    847         return func(x, y, name=name)\r\n\r\n/anaconda/envs/py35/lib/python3.5/site-packages/tensorflow/python/framework/ops.py in __enter__(self)\r\n   6001       if self._values is None:\r\n   6002         self._values = []\r\n-> 6003       g = _get_graph_from_inputs(self._values)\r\n   6004       self._g_manager = g.as_default()\r\n   6005       self._g_manager.__enter__()\r\n\r\n/anaconda/envs/py35/lib/python3.5/site-packages/tensorflow/python/framework/ops.py in _get_graph_from_inputs(op_input_list, graph)\r\n   5661         graph = graph_element.graph\r\n   5662       elif original_graph_element is not None:\r\n-> 5663         _assert_same_graph(original_graph_element, graph_element)\r\n   5664       elif graph_element.graph is not graph:\r\n   5665         raise ValueError(\"%s is not from the passed-in graph.\" % graph_element)\r\n\r\n/anaconda/envs/py35/lib/python3.5/site-packages/tensorflow/python/framework/ops.py in _assert_same_graph(original_item, item)\r\n   5597   if original_item.graph is not item.graph:\r\n   5598     raise ValueError(\"%s must be from the same graph as %s.\" % (item,\r\n-> 5599                                                                 original_item))\r\n   5600 \r\n   5601 \r\n\r\nValueError: Tensor(\"Const:0\", shape=(3072, 3072), dtype=float32) must be from the same graph as Tensor(\"while/mul_6:0\", shape=(?, 3072, 3072), dtype=float32).\r\n```\r\nCarliniWagnerL2:\r\n```\r\n/anaconda/envs/py35/lib/python3.5/site-packages/cleverhans/attacks.py in generate(self, x, **kwargs)\r\n    903                       self.max_iterations, self.abort_early,\r\n    904                       self.initial_const, self.clip_min, self.clip_max,\r\n--> 905                       nb_classes, x.get_shape().as_list()[1:])\r\n    906 \r\n    907         def cw_wrap(x_val, y_val):\r\n\r\n/anaconda/envs/py35/lib/python3.5/site-packages/cleverhans/attacks_tf.py in __init__(self, sess, model, batch_size, confidence, targeted, learning_rate, binary_search_steps, max_iterations, abort_early, initial_const, clip_min, clip_max, num_labels, shape)\r\n    695 \r\n    696         # prediction BEFORE-SOFTMAX of the model\r\n--> 697         self.output = model.get_logits(self.newimg)\r\n    698 \r\n    699         # distance to the input data\r\n\r\n/anaconda/envs/py35/lib/python3.5/site-packages/cleverhans/model.py in get_logits(self, x)\r\n     46         (i.e., the values fed as inputs to the softmax layer).\r\n     47         \"\"\"\r\n---> 48         return self.get_layer(x, 'logits')\r\n     49 \r\n     50     def get_probs(self, x):\r\n\r\n/anaconda/envs/py35/lib/python3.5/site-packages/cleverhans/model.py in get_layer(self, x, layer)\r\n     33         \"\"\"\r\n     34         # Return the symbolic representation (Tensor) for this layer.\r\n---> 35         output = self.fprop(x)\r\n     36         try:\r\n     37             requested = output[layer]\r\n\r\n~/notebooks/Denoising the Adversarial Examples/model.py in fprop(self, x, set_ref)\r\n     38             if set_ref:\r\n     39                 layer.ref = x\r\n---> 40             x = layer.fprop(x)\r\n     41             assert x is not None\r\n     42             states.append(x)\r\n\r\n~/notebooks/Denoising the Adversarial Examples/model.py in fprop(self, x)\r\n    110     def fprop(self, x):\r\n    111         return tf.nn.conv2d(x, self.kernels, (1,) + tuple(self.strides) + (1,),\r\n--> 112                             self.padding) + self.b\r\n    113 \r\n    114     def get_params(self):\r\n\r\n/anaconda/envs/py35/lib/python3.5/site-packages/tensorflow/python/ops/gen_nn_ops.py in conv2d(input, filter, strides, padding, use_cudnn_on_gpu, data_format, dilations, name)\r\n    954         \"Conv2D\", input=input, filter=filter, strides=strides,\r\n    955         padding=padding, use_cudnn_on_gpu=use_cudnn_on_gpu,\r\n--> 956         data_format=data_format, dilations=dilations, name=name)\r\n    957     _result = _op.outputs[:]\r\n    958     _inputs_flat = _op.inputs\r\n\r\n/anaconda/envs/py35/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py in _apply_op_helper(self, op_type_name, name, **keywords)\r\n    348       # Need to flatten all the arguments into a list.\r\n    349       # pylint: disable=protected-access\r\n--> 350       g = ops._get_graph_from_inputs(_Flatten(keywords.values()))\r\n    351       # pylint: enable=protected-access\r\n    352     except AssertionError as e:\r\n\r\n/anaconda/envs/py35/lib/python3.5/site-packages/tensorflow/python/framework/ops.py in _get_graph_from_inputs(op_input_list, graph)\r\n   5661         graph = graph_element.graph\r\n   5662       elif original_graph_element is not None:\r\n-> 5663         _assert_same_graph(original_graph_element, graph_element)\r\n   5664       elif graph_element.graph is not graph:\r\n   5665         raise ValueError(\"%s is not from the passed-in graph.\" % graph_element)\r\n\r\n/anaconda/envs/py35/lib/python3.5/site-packages/tensorflow/python/framework/ops.py in _assert_same_graph(original_item, item)\r\n   5597   if original_item.graph is not item.graph:\r\n   5598     raise ValueError(\"%s must be from the same graph as %s.\" % (item,\r\n-> 5599                                                                 original_item))\r\n   5600 \r\n   5601 \r\n\r\nValueError: Tensor(\"add_2:0\", shape=(128, 32, 32, 3), dtype=float32) must be from the same graph as Tensor(\"conv2d/kernel:0\", shape=(3, 3, 3, 64), dtype=float32_ref).\r\n```\r\n\r\nMomentum Iterative:\r\n```\r\n/anaconda/envs/py35/lib/python3.5/site-packages/cleverhans/attacks.py in generate(self, x, **kwargs)\r\n    547                                      tf.reduce_mean(tf.abs(grad),\r\n    548                                                     red_ind,\r\n--> 549                                                     keep_dims=True))\r\n    550             momentum = self.decay_factor * momentum + grad\r\n    551 \r\n\r\n/anaconda/envs/py35/lib/python3.5/site-packages/tensorflow/python/ops/gen_math_ops.py in maximum(x, y, name)\r\n   4423   if _ctx is None or not _ctx._eager_context.is_eager:\r\n   4424     _, _, _op = _op_def_lib._apply_op_helper(\r\n-> 4425         \"Maximum\", x=x, y=y, name=name)\r\n   4426     _result = _op.outputs[:]\r\n   4427     _inputs_flat = _op.inputs\r\n\r\n/anaconda/envs/py35/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py in _apply_op_helper(self, op_type_name, name, **keywords)\r\n    348       # Need to flatten all the arguments into a list.\r\n    349       # pylint: disable=protected-access\r\n--> 350       g = ops._get_graph_from_inputs(_Flatten(keywords.values()))\r\n    351       # pylint: enable=protected-access\r\n    352     except AssertionError as e:\r\n\r\n/anaconda/envs/py35/lib/python3.5/site-packages/tensorflow/python/framework/ops.py in _get_graph_from_inputs(op_input_list, graph)\r\n   5661         graph = graph_element.graph\r\n   5662       elif original_graph_element is not None:\r\n-> 5663         _assert_same_graph(original_graph_element, graph_element)\r\n   5664       elif graph_element.graph is not graph:\r\n   5665         raise ValueError(\"%s is not from the passed-in graph.\" % graph_element)\r\n\r\n/anaconda/envs/py35/lib/python3.5/site-packages/tensorflow/python/framework/ops.py in _assert_same_graph(original_item, item)\r\n   5597   if original_item.graph is not item.graph:\r\n   5598     raise ValueError(\"%s must be from the same graph as %s.\" % (item,\r\n-> 5599                                                                 original_item))\r\n   5600 \r\n   5601 \r\n\r\nValueError: Tensor(\"Mean:0\", shape=(?, 1, 1, 1), dtype=float32) must be from the same graph as Tensor(\"Cast/x:0\", shape=(), dtype=float32).\r\n``` Yes, I uploaded the code under this [repository](https://github.com/kyleliang919/Analysis-of-Adversarial-Attacks). The code for the model architecture is located in the model.py. There is an example in the experiments.ipynb showing how to replicate one of the above errors. \r\nThanks for your help in advance.  Problem resolved  Bug fix in SPSA attack (Replaced self.model.num_classes with self.model.nb_classes to cater for the changes in model.py) \nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here (e.g. `I signed it!`) and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google.com/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n<!-- need_sender_cla --> I signed it!\n\nOn Thu, Jul 19, 2018 at 5:29 PM googlebot <notifications@github.com> wrote:\n\n> Thanks for your pull request. It looks like this may be your first\n> contribution to a Google open source project (if not, look below for help).\n> Before we can look at your pull request, you'll need to sign a Contributor\n> License Agreement (CLA).\n>\n> \ud83d\udcdd *Please visit https://cla.developers.google.com/\n> <https://cla.developers.google.com/> to sign.*\n>\n> Once you've signed (or fixed any issues), please reply here (e.g. I\n> signed it!) and we'll verify it.\n> ------------------------------\n> What to do if you already signed the CLA Individual signers\n>\n>    - It's possible we don't have your GitHub username or you're using a\n>    different email address on your commit. Check your existing CLA data\n>    <https://cla.developers.google.com/clas> and verify that your email is\n>    set on your git commits\n>    <https://help.github.com/articles/setting-your-email-in-git/>.\n>\n> Corporate signers\n>\n>    - Your company has a Point of Contact who decides which employees are\n>    authorized to participate. Ask your POC to be added to the group of\n>    authorized contributors. If you don't know who your Point of Contact is,\n>    direct the Google project maintainer to go/cla#troubleshoot (Public\n>    version <https://opensource.google.com/docs/cla/#troubleshoot>).\n>    - The email used to register you as an authorized contributor must be\n>    the email used for the Git commit. Check your existing CLA data\n>    <https://cla.developers.google.com/clas> and verify that your email is\n>    set on your git commits\n>    <https://help.github.com/articles/setting-your-email-in-git/>.\n>    - The email used to register you as an authorized contributor must\n>    also be attached to your GitHub account\n>    <https://github.com/settings/emails>.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/464#issuecomment-406317587>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ADtHK3XOmIMmIzGeeOR8tNtJKXeebOP5ks5uIKXMgaJpZM4VWnh->\n> .\n>\n CLAs look good, thanks!\n\n<!-- ok -->   Thanks for the PR. If we are going to add this logic to the PGD attacks, wouldn't it be easier to call `fgm` directly from `attacks.py` in the `attack_single_step` method of class `MadryEtAl`? Unless I missed something, the logic implemented is the same. This way we reduce duplicated code. Agreed, I was simply adding to the already written code for PGD. Will make\nthis push.\n\nOn Thu, Jul 19, 2018 at 3:17 AM, Nicolas Papernot <notifications@github.com>\nwrote:\n\n> Thanks for the PR. If we are going to add this logic to the PGD attacks,\n> wouldn't it be easier to call fgm directly from attacks.py in the\n> attack_single_step method of class MadryEtAl? Unless I missed something,\n> the logic implemented is the same. This way we reduce duplicated code.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/463#issuecomment-406179062>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIk5_x8eHTu4W6yx7wtpjj14rinFIEc2ks5uIDKTgaJpZM4VVmfP>\n> .\n>\n Made the update.  PEP8 is failing on the latest commit: \r\n\r\n```\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:1380:1: E302 expected 2 blank lines, found 1\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:1483:5: E301 expected 1 blank line, found 0\r\n``` Thanks for changing the code to reuse the `FastGradientMethod`. This helps reduce code duplication. However, I just realized that now `BasicIterativeMethod` and `MadryEtAl` are identical to the exception that `MadryEtAl` has a `rand_init` argument (which makes sense). \r\n\r\nI'm sorry I had not thought about that but I think it would make sense in that case to also consolidate these two classes into one. To make the change backward-compatible, would you be able to create a new class called `ProjectedGradientDescent` that implements what is called `MadryEtAl` at the moment and then have `BasicIterativeMethod` and `MadryEtAl` return an object instantiated from the `ProjectedGradientDescent` class? Ideally, the `ProjectedGradientDescent` would have as the `rand_init` argument not a boolean but a floating point value which is used as the abs value of minval and maxval in the call to `tf.random_uniform`. This way we can also support the attack presented in Florian's work on transferability at the same time. At the moment I am pretty busy, but I welcome any other contributors to\nmake the change!\n\nOn Tue, Aug 14, 2018, 8:07 PM Nicolas Papernot <notifications@github.com>\nwrote:\n\n> Thanks for changing the code to reuse the FastGradientMethod. This helps\n> reduce code duplication. However, I just realized that now\n> BasicIterativeMethod and MadryEtAl are identical to the exception that\n> MadryEtAl has a rand_init argument (which makes sense).\n>\n> I'm sorry I had not thought about that but I think it would make sense in\n> that case to also consolidate these two classes into one. To make the\n> change backward-compatible, would you be able to create a new class called\n> ProjectedGradientDescent that implements what is called MadryEtAl at the\n> moment and then have BasicIterativeMethod and MadryEtAl return an object\n> instantiated from the ProjectedGradientDescent class? Ideally, the\n> ProjectedGradientDescent would have as the rand_init argument not a\n> boolean but a floating point value which is used as the abs value of minval\n> and maxval in the call to tf.random_uniform. This way we can also support\n> the attack presented in Florian's work on transferability at the same time.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/463#issuecomment-413054344>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIk5_zTCnJ5xGrk9dS28mw3IUrOtC30mks5uQ2Y2gaJpZM4VVmfP>\n> .\n>\n Closing because of #508   Use [flake8](http://flake8.pycqa.org) to look for Python syntax errors or undefined names on both Python 2 and Python 3.\r\n\r\nPython 2 tests should pass when #455 is fixed.\r\n\r\n__E901,E999,F821,F822,F823__ are the \"showstopper\" flake8 issues that can halt the runtime with a SyntaxError, NameError, etc.  Most other flake8 issues are merely \"style violations\" -- useful for readability but they do not effect runtime safety.  This PR therefore recommends a flake8 run of these tests on the entire codebase.\r\n* F821: undefined name `name`\r\n* F822: undefined name `name` in `__all__`\r\n* F823: local variable `name` referenced before assignment\r\n* E901: SyntaxError or IndentationError\r\n* E999: SyntaxError -- failed to compile a file into an Abstract Syntax Tree I know that the other tests did not find what flake8 found.  I see no problem with running multiple tests if they run efficiently and they discover different issues. The __devtools/tests/test_format__ approach is leveraging the pycodestyle module.  Flake8 is a superset of pycodestyle + PyFlakes + McCabe complexity analysis plus a few extra tests of its own.   The __--select=E901,E999,F821,F822,F823__ turns off the pycodestyle stuff as I described in the commit message.  If you want to turn the screws down tight (Django does this...) just remove the __--select__ option and then flake8 will be a full replacement for the devtools/tests/test_format approach but will be even more comprehensive. I agree 100%...  The commit message starts with a link to the full docs of flake8 and the five specific errors that this PR is meant to address are each described thereafter. Perhaps [this](https://travis-ci.org/cclauss/flake8_for_tensorflow) and [this](https://github.com/tensorflow/models/pulls?q=is%3Apr+author%3Acclauss+is%3Aclosed) will help to explain.  If this project had tests in place to detect undefined names then they would already be fixed.  If they were already fixed then this repo would be green on the former and this PR would not exist. Were you able to find existing tests that were looking for _undefined names_?  I was not.   \nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here (e.g. `I signed it!`) and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google.com/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n<!-- need_sender_cla --> I signed it! CLAs look good, thanks!\n\n<!-- ok --> Thanks for the PR. Could you be a bit more specific on what the bug is and when it occurs? Also @juesato could you take a look since you wrote most of the code that this PR would impact? I think the problem is that in the method `_compute_gradients` of class `UnrolledOptimizer`, argument `x` is assumed to be a *list* while the same argument `x` of function `loss_fn` is assumed to be a *Tensor*. This doesn't type check, and will definitely cause problems when using some subclasses of `UnrolledOptimizer`, such as `UnrolledAdam`. For example, consider line 1746-1747.\r\n\r\nIn the class `SPSAAdam`, there is already a similar fix for this problem\r\n\r\n```Python\r\n        # Assumes `x` is a list, containing a [1, H, W, C] image\r\n        assert len(x) == 1 and x[0].get_shape().as_list()[0] == 1\r\n        x = x[0]\r\n``` \r\nTherefore, we should do something for `UnrolledOptimizer`, even though I am not sure my fix is optimal. @goodfeli I have just added an assert to check input format. Without this fix there will be an exception raised around line 1742 I will do it asap. It seems there is no test for `pgd_attack()`, and that's partly the reason why this bug exists. We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for all the commit author(s) or Co-authors.  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA ([login here](https://cla.developers.google.com/) to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\nIn order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again. If the bot doesn't comment, it means it doesn't think anything has changed.\n\n<!-- need_author_cla --> CLAs look good, thanks!\n\n<!-- ok --> @goodfeli @npapernot I have fixed another bug in `UnrolledGradientDecent` and added tests for `pgd_attack()`.\r\n\r\nList of major changes in the code:\r\n1. In `attacks_tf.py`, I implemented method `init_state()` for class `UnrolledGradientDescent`, which is required for using the `UnrolledGradientDescent` optimizer in `pgd_attack()`\r\n2. As discussed previously, I fixed the bug in `_compute_gradients()` of class `UnrolledOptimizer`\r\n3. In `test_attacks_tf.py`, I added tests for `pgd_attack()`. I considered cases of targeted / untargeted attacks, as well as using `UnrolledAdam` or `UnrolledGradientDescent` as the optimizer.  Hi, \r\n\r\nWhen I use the BasicIterativeMethod, I encounter a problem:\r\n\r\nbim = BasicIterativeMethod(wrap, sess=sess)\r\nbim_params = {'eps': 0.2, 'eps_iter': 0.05, 'nb_iter': 10, 'ord': 2, 'y_target': None}\r\nadv_x = bim.generate(x, **bim_params)\r\n\r\nuntil here, the code worked well, \r\n\r\nThen I tried to use the following code to get adversarial example in numpy array, and some errors occur:\r\n\r\nfeed_dict = {x: X_test}\r\nadv_sample = sess.run(adv_x, feed_dict)\r\n\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-36-e66cca37c6f5>\", line 3, in <module>\r\n    adv_sample = sess.run(adv_x, feed_dict)\r\n\r\n  File \"/Users/chenhx1992/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 900, in run\r\n    run_metadata_ptr)\r\n\r\n  File \"/Users/chenhx1992/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1135, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n\r\n  File \"/Users/chenhx1992/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1316, in _do_run\r\n    run_metadata)\r\n\r\n  File \"/Users/chenhx1992/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1335, in _do_call\r\n    raise type(e)(node_def, op, message)\r\n\r\nInvalidArgumentError: Retval[0] does not have value\r\n\r\nThis problem don't occur when I use FastGradientMethod. \r\n\r\nIs there anything I do wrong? \r\n\r\nHope get your valuable suggestion. Thanks in advance!\r\n  I tried this. It is working fine. We might need slightly more information to help. You can modify cleverhans_tutorial/mnist_tutorial_tf.py to figure out what you might be doing wrong.  \r\nflake8 testing of https://github.com/tensorflow/cleverhans on Python 2.7.14\r\n\r\n$ __flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics__\r\n```\r\n./examples/madry_lab_challenges/cifar10/madry_cifar10_model.py:267:31: F821 undefined name 'self'\r\n    return tf.nn.xw_plus_b(x, self.w, self.b)\r\n                              ^\r\n./examples/madry_lab_challenges/cifar10/madry_cifar10_model.py:267:39: F821 undefined name 'self'\r\n    return tf.nn.xw_plus_b(x, self.w, self.b)\r\n                                      ^\r\n2       F821 undefined name 'self'\r\n2\r\n``` Yes I think so, looks like set_input_shape is not called. I can look into it. Looked at it, it's working from the latest master as far as  can tell:\r\n`python cifar10/attack_model.py`\r\n\r\nSo the code is working. I don't what flake8 is doing / if it's a config problem. Are you sure that line 267 of madry_cifar10_model.py is getting executed? I am not familiar with that example, I checked if some recent refactoring broke it, but running it I see no problem, it runs properly (using the latest master branch). Did you try running:\r\n`python cifar10/attack_model.py`  I am trying to run the example https://github.com/tensorflow/cleverhans/blob/master/cleverhans_tutorials/mnist_tutorial_keras_tf.py\r\n\r\nI am getting the following error\r\n![bug](https://user-images.githubusercontent.com/4279025/42626594-5542235e-8590-11e8-8a8a-899d01bb2338.PNG)\r\n I get the following error running the command\r\n![err1](https://user-images.githubusercontent.com/4279025/42655267-3a680b92-85e1-11e8-9dbb-0e097ea02095.PNG)\r\n @goodfeli \r\nIf the follwoing image helps\r\n<img width=\"996\" alt=\"screen shot 2018-07-12 at 2 53 04 pm\" src=\"https://user-images.githubusercontent.com/4279025/42655976-618abc40-85e3-11e8-8bd0-121077ba3846.png\">\r\n I tried on two different machines\r\n\r\n1) Windows\r\n\r\n2) MAC\r\n\r\nAnd is getting the same problem.  In the message the correct class member was rendered as *file** (note the\nbold font)*, but the correct member is __file__ (note the two underscore\ncharacters before and after \"file\". It seems that the response was\nprocessed by some markup processor that uses double underscore to signify\nbold font. Let's see if this response also shows the \"__file__\" as a bold\n\"file\".\n\nOn Thu, Jul 12, 2018 at 4:16 PM Md Johirul Islam <notifications@github.com>\nwrote:\n\n> I tried on two different machines\n>\n>    1.\n>\n>    Windows\n>    2.\n>\n>    MAC\n>\n> And is getting the same problem.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/issues/453#issuecomment-404636887>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AImIscioqMBt4RIEKTJQT2t8tm26xFdtks5uF66LgaJpZM4VMjmi>\n> .\n>\n\n\n-- \nLeo Mauro\nAsesor\nDirecci\u00f3n de Servicios Telem\u00e1ticos\nUniversidad Sim\u00f3n Bol\u00edvar\n @goodfeli \r\nI am getting the following output\r\n<img width=\"1121\" alt=\"screen shot 2018-07-13 at 9 32 53 am\" src=\"https://user-images.githubusercontent.com/4279025/42697102-c83f03fa-867f-11e8-97d7-c8b490d8b5f6.png\">\r\n <img width=\"1171\" alt=\"screen shot 2018-07-13 at 9 33 47 am\" src=\"https://user-images.githubusercontent.com/4279025/42697134-df0521fa-867f-11e8-9ccd-ea934afa51ae.png\">\r\n @goodfeli \r\nThis is what i get\r\n<img width=\"1135\" alt=\"screen shot 2018-07-13 at 2 13 40 pm\" src=\"https://user-images.githubusercontent.com/4279025/42709699-fba7884e-86a6-11e8-950a-551c84bf8791.png\">\r\n I am facing the same issue as above, to cross check I downloaded the tar.gz file from PyPI for cleverhans https://files.pythonhosted.org/packages/e8/ea/c057263636b14c28923b42ed8ef52c0ba24d38e05fc3720f62df80a2f735/cleverhans-2.1.0.tar.gz. It doesn't contain loss.py\r\n The PyPi package contains a version of CleverHans that I uploaded based on tag v.2.1.0 on GitHub so it does not contain any updates made to the repo since then. This is why it does not contain `loss.py`, which was added in a more recent PR by David. In other words, if you'd like to get the bleeding edge version, it is best to clone the GitHub repo since the PyPi package only contains the version snapshots. You can see the `README` for the corresponding instructions. @npapernot \r\nNow it makes sense to me. I was also installing the application using pip. And there was actually no module named `cleverhans.loss`. I checked manually in the package path. \r\nThanks Still having some issues with this. The following code snippet fails on a fresh (public) Google colab notebook on both Python 2 and Python 3 with or without accelerators\r\n\r\n```\r\n!pip install -e git+https://github.com/tensorflow/cleverhans.git#egg=cleverhans\r\nfrom __future__ import absolute_import\r\nfrom cleverhans.loss import CrossEntropy\r\n```\r\n\r\nResults in the following error:\r\n\r\n```\r\nImportErrorTraceback (most recent call last)\r\n<ipython-input-1-c2e561dc6bec> in <module>()\r\n      1 get_ipython().system(u'pip install -e git+https://github.com/tensorflow/cleverhans.git#egg=cleverhans')\r\n      2 from __future__ import absolute_import\r\n----> 3 from cleverhans.loss import CrossEntropy\r\n\r\nImportError: No module named cleverhans.loss\r\n```\r\n\r\nAs suggested in [this StackOverflow answer](https://stackoverflow.com/questions/47525550/installing-cleverhans-on-collaboratory), the following code snippet fixes the issue and runs without error:\r\n\r\n```\r\n!pip install -e git+https://github.com/tensorflow/cleverhans.git#egg=cleverhans\r\nimport sys\r\nsys.path.append('/content/src/cleverhans')\r\nfrom __future__ import absolute_import\r\nfrom cleverhans.loss import CrossEntropy\r\n```\r\n\r\nI think `setup.py` might have a bug preventing the paths from linking as intended. @chrisdonahue It's not cleverhans-related issue. It is intended behavior with `pip -e`. You can simply try other packages and get the same error. Or remove `-e` and success:\r\n\r\n```\r\n!pip install git+https://github.com/tensorflow/cleverhans.git#egg=cleverhans\r\nfrom cleverhans.loss import CrossEntropy\r\n```\r\n\r\n`pip -e` (editable mode) installs package inside `<current dir>/src`. Individual package directory has to be added to `sys.path` to make it importable. Python will automatically fill `sys.path` at startup, but not at runtime. Of course `pip` has no capability to force running Python process to update its `sys.path`.\r\n\r\nSo with `pip -e`, you need either append package directory to `sys.path`, or restart python interpreter. Ah! Of course. Maybe an update to the README would help. Currently the wording is\r\n\r\n```\r\nIf you'd instead like to install the bleeding edge version, use:\r\n\r\npip install -e git+https://github.com/tensorflow/cleverhans.git#egg=cleverhans\r\n```\r\n\r\nMaybe it should be (note the removal of `-e`)\r\n```\r\nIf you'd instead like to install the bleeding edge version, use:\r\n\r\npip install git+https://github.com/tensorflow/cleverhans.git#egg=cleverhans\r\n\r\nIf you'd like to develop cleverhans, first fork the repository then clone your fork:\r\n\r\ngit clone git@github.com:<USERNAME>/cleverhans.git\r\ncd cleverhans\r\npip install -e .\r\n```  I think the torch tutorial requires pytorch but it is not part of setup.py. I would prefer not making pytorch a mandatory dependency, which would add some overhead for those using tensorflow only. I'm not familiar with the explicit dependence issue either, but @nottombrown should be able to comment. \r\n\r\nOne suggestion I had would be to (1) add pytorch as an extra dependency and (2) change the Travis matrix to include a pytorch config and (3) remove pytorch from other configs of the matrix (to have tensorflow only configs) I\u2018m on the road and can\u2019t see the offending code currently, but papernot\u2019s\nsuggestion seems reasonable to me. Pytorch should be an \u201cextras\u201d dependency\nOn Wed, Jul 11, 2018 at 10:22 PM Nicolas Papernot <notifications@github.com>\nwrote:\n\n> I would prefer not making pytorch a mandatory dependency, which would add\n> some overhead for those using tensorflow only. I'm not familiar with the\n> explicit dependence issue either, but @nottombrown\n> <https://github.com/nottombrown> should be able to comment.\n>\n> One suggestion I had would be to (1) add pytorch as an extra dependency\n> and (2) change the Travis matrix to include a pytorch config and (3) remove\n> pytorch from other configs of the matrix (to have tensorflow only configs)\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/issues/452#issuecomment-404297995>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AASt35ZZGMhZoUMG-qa1CJ26E8BNy8g2ks5uFl6jgaJpZM4VK9-C>\n> .\n>\n   HI Ian,\n\nFirst of all, sorry for not first going to the Google Group, I'll make sure\nto do so next time.\n\nThe reason why I added the EAD tutorial is that recently we've found that\nat the cost of a minimal increase in distortion, EAD can be configured to\nas computationally efficient as attacks such as BIM and PGD. Due to the\nminimal increase, we would rather keep the default params to reflect the\noptimized config that was presented in the introductory paper, but in the\ntutorial we can show that EAD is not destined to be much slower than BIM or\nPGD, given the right configuration it can be made as fast with only a\nminimal increase in distortion.\n\nAs tutorials have already been uploaded for FGSM, JSMA, and CW, attacks\nwhich are all called similarly (due to the consistent Cleverhans API), I\nthought this was reason enough to include a tutorial for EAD. I hope that's\nok.\n\nLet me know.\n\nOn Mon, Jul 9, 2018 at 1:33 PM, Ian Goodfellow <notifications@github.com>\nwrote:\n\n> Looks mostly good. There is one typo to fix, and we probably want the new\n> tutorial to go in the examples directory. Otherwise fine.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/451#issuecomment-403558429>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIk5_9s2_AdAHA5sAg25IlNERWSNE9Yvks5uE5PTgaJpZM4VGQqi>\n> .\n>\n I can remember two reasons for adding a tutorial for the JSMA but not sure if it's exhaustive: (1) demonstrate how to run the source-target misclassification attack (i.e., run for all possible targets based on each sample' source class) and (2) demonstrate how to use the adversarial example visualization utilities. Again from what I can recall, that's why the JSMA tutorial does not include adversarial training (unlike the FGSM tutorial): it was focusing on demonstrating other aspects of the library.\r\n\r\nI don't remember why we added the tutorial for the CW but my guess would be that at that time we had a different API that was not as homogeneous across the different attacks? I would also vote against a proliferation of attack tutorials if they are using a consistent API Understood. Just to clarify the CW tutorial does both (1) and (2) cited\nhere, making it, at least with the current API, identical to the JSMA\ntutorial. Given that the CW tutorial is in effect identical to the JSMA\ntutorial, EAD is quite similar (can be reduced to CW with beta=0, and has\nbeen empirically shown to improve attack strength with non-zero beta), and\nat least I feel this EAD hyperparameter setting is important for users to\nknow as it allows EAD/CW to retain its attack strength while being as\ncomputationally efficient as iterative FGSM, I would like to instead just\nadd EAD as a option in the CW tutorial.\n\nThis will require no additional support/maintenance burden as there will be\nno additional tutorial. Hope this at least is ok!\n\nOn Fri, Jul 13, 2018 at 6:31 AM, Nicolas Papernot <notifications@github.com>\nwrote:\n\n> I would also vote against a proliferation of attack tutorials if they are\n> using a consistent API\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/451#issuecomment-404794552>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIk5_3NCC6MRTkli2XTbKpqmBei8EqYxks5uGHcSgaJpZM4VGQqi>\n> .\n>\n In regards to the attack, only the fact that FGSM uses the 'generate()'\nfunction while CW uses the 'generate_np()' function, which is a pretty big\ndifference. EAD shares this difference with FGSM and essentially all of the\nother attacks, and this difference isn't reflected in the docs (nor in the\nArxiv paper). For CW, this is only reflected in the tutorial. Another\nreason why I would like to include EAD in the CW tutorial.\n\nAlso, the differences outlined by Nicolas for JSMA, which are independent\nof actually calling the attack.\n\nOn Fri, Jul 13, 2018 at 11:54 AM, Ian Goodfellow <notifications@github.com>\nwrote:\n\n> What are the big differences between the tensorflow tutorial with FGSM and\n> the CW tutorial? Are the APIs still different for those attacks?\n>\n>\n>\n> On Fri, Jul 13, 2018 at 3:47 AM, ysharma1126 <notifications@github.com>\n> wrote:\n>\n> > Understood. Just to clarify the CW tutorial does both (1) and (2) cited\n> > here, making it, at least with the current API, identical to the JSMA\n> > tutorial. Given that the CW tutorial is in effect identical to the JSMA\n> > tutorial, EAD is quite similar (can be reduced to CW with beta=0, and has\n> > been empirically shown to improve attack strength with non-zero beta),\n> and\n> > at least I feel this EAD hyperparameter setting is important for users to\n> > know as it allows EAD/CW to retain its attack strength while being as\n> > computationally efficient as iterative FGSM, I would like to instead just\n> > add EAD as a option in the CW tutorial.\n> >\n> > This will require no additional support/maintenance burden as there will\n> be\n> > no additional tutorial. Hope this at least is ok!\n> >\n> > On Fri, Jul 13, 2018 at 6:31 AM, Nicolas Papernot <\n> > notifications@github.com>\n> > wrote:\n> >\n> > > I would also vote against a proliferation of attack tutorials if they\n> are\n> > > using a consistent API\n> > >\n> > > \u2014\n> > > You are receiving this because you authored the thread.\n> > > Reply to this email directly, view it on GitHub\n> > > <https://github.com/tensorflow/cleverhans/pull/\n> > 451#issuecomment-404794552>,\n> > > or mute the thread\n> > > <https://github.com/notifications/unsubscribe-auth/AIk5_\n> > 3NCC6MRTkli2XTbKpqmBei8EqYxks5uGHcSgaJpZM4VGQqi>\n> > > .\n> > >\n> >\n> > \u2014\n> > You are receiving this because you commented.\n> > Reply to this email directly, view it on GitHub\n> > <https://github.com/tensorflow/cleverhans/pull/\n> 451#issuecomment-404797736>,\n> > or mute the thread\n> > <https://github.com/notifications/unsubscribe-\n> auth/AAXrGh7jU4aqdPEjzroECtb-Jr_mqJSzks5uGHrFgaJpZM4VGQqi>\n> > .\n>\n> >\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/451#issuecomment-404875073>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIk5__bib1ddYIEUujvPypUMSmRzgoINks5uGMLLgaJpZM4VGQqi>\n> .\n>\n Any thoughts? CW is called differently than FGSM/BIM/PGD, and EAD shares\nthat property. Users realize that that's the case when they check out the\ntutorial for CW, but there's no indication in the repo that this property\nis shared by EAD. Plus, again, I'd like to share that hyperparameter config\nwhich gives good results while staying as computationally efficient as\nPGD/BIM. So by adding EAD to the CW tutorial, those issues would be\nresolved, with no additional support/maintenance required.\n\nOn Fri, Jul 13, 2018 at 1:34 PM, Yash Sharma <ysharma1126@gmail.com> wrote:\n\n> In regards to the attack, only the fact that FGSM uses the 'generate()'\n> function while CW uses the 'generate_np()' function, which is a pretty big\n> difference. EAD shares this difference with FGSM and essentially all of the\n> other attacks, and this difference isn't reflected in the docs (nor in the\n> Arxiv paper). For CW, this is only reflected in the tutorial. Another\n> reason why I would like to include EAD in the CW tutorial.\n>\n> Also, the differences outlined by Nicolas for JSMA, which are independent\n> of actually calling the attack.\n>\n> On Fri, Jul 13, 2018 at 11:54 AM, Ian Goodfellow <notifications@github.com\n> > wrote:\n>\n>> What are the big differences between the tensorflow tutorial with FGSM and\n>> the CW tutorial? Are the APIs still different for those attacks?\n>>\n>>\n>>\n>> On Fri, Jul 13, 2018 at 3:47 AM, ysharma1126 <notifications@github.com>\n>> wrote:\n>>\n>> > Understood. Just to clarify the CW tutorial does both (1) and (2) cited\n>> > here, making it, at least with the current API, identical to the JSMA\n>> > tutorial. Given that the CW tutorial is in effect identical to the JSMA\n>> > tutorial, EAD is quite similar (can be reduced to CW with beta=0, and\n>> has\n>> > been empirically shown to improve attack strength with non-zero beta),\n>> and\n>> > at least I feel this EAD hyperparameter setting is important for users\n>> to\n>> > know as it allows EAD/CW to retain its attack strength while being as\n>> > computationally efficient as iterative FGSM, I would like to instead\n>> just\n>> > add EAD as a option in the CW tutorial.\n>> >\n>> > This will require no additional support/maintenance burden as there\n>> will be\n>> > no additional tutorial. Hope this at least is ok!\n>> >\n>> > On Fri, Jul 13, 2018 at 6:31 AM, Nicolas Papernot <\n>> > notifications@github.com>\n>> > wrote:\n>> >\n>> > > I would also vote against a proliferation of attack tutorials if they\n>> are\n>> > > using a consistent API\n>> > >\n>> > > \u2014\n>> > > You are receiving this because you authored the thread.\n>> > > Reply to this email directly, view it on GitHub\n>> > > <https://github.com/tensorflow/cleverhans/pull/\n>> > 451#issuecomment-404794552>,\n>> > > or mute the thread\n>> > > <https://github.com/notifications/unsubscribe-auth/AIk5_\n>> > 3NCC6MRTkli2XTbKpqmBei8EqYxks5uGHcSgaJpZM4VGQqi>\n>> > > .\n>> > >\n>> >\n>> > \u2014\n>> > You are receiving this because you commented.\n>> > Reply to this email directly, view it on GitHub\n>> > <https://github.com/tensorflow/cleverhans/pull/451#\n>> issuecomment-404797736>,\n>> > or mute the thread\n>> > <https://github.com/notifications/unsubscribe-auth/\n>> AAXrGh7jU4aqdPEjzroECtb-Jr_mqJSzks5uGHrFgaJpZM4VGQqi>\n>> > .\n>>\n>> >\n>>\n>> \u2014\n>> You are receiving this because you authored the thread.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/tensorflow/cleverhans/pull/451#issuecomment-404875073>,\n>> or mute the thread\n>> <https://github.com/notifications/unsubscribe-auth/AIk5__bib1ddYIEUujvPypUMSmRzgoINks5uGMLLgaJpZM4VGQqi>\n>> .\n>>\n>\n>\n Relatively busy currently, so for now I'll pass.\n\nOn Tue, Jul 31, 2018 at 3:33 PM, Ian Goodfellow <notifications@github.com>\nwrote:\n\n> Do you mind starting a discussion on cleverhans-dev so more people will\n> weigh in?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/451#issuecomment-409341130>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIk5_7e2jjqikvMvvUmU5BYAbqw-JVC3ks5uMLEBgaJpZM4VGQqi>\n> .\n>\n  Implemented batch processing of Jacobian Augmentation step improving the substitute training time quite significantly. No problem I'll take a look @npapernot Modified code based on the comments. Please review  #397 Tensorflow 1.8 depreciation messages handled.  @npapernot , Please have a look at this, handles the left over warnings from #437 .  My bad @feedforward, I suggested earlier to replace the deprecated call inline for a tutorial script but had not realized that there were that many changes needed throughout the CleverHans module as well. If that many lines need to be changed, it would be better to create a compat module indeed @npapernot that is not an issue, i can roll back the changes to my previous PR.\r\n\r\nso as per @goodfeli 's suggestion, will create compact.py @goodfeli , Yes, please review this .. @goodfeli Thank you ...  The cleverhans_tutorial has been written only for MNIST with extensive hard coding of data-set parameters(like image width/height/channels. I have modified the code to handle other data-sets. The user need to only modify utils_mnist.py for his dataset and rest of the code will work out of box. Also I made sure the tutorials work for all image-size & channels. Image parameter are obtained from the X_train variable loaded by utils_mnist.py\r\n\r\nConformed to PEP8 Changelog:-\r\n1) Removed Hard-coded values and used the info from dataset to populate them:\r\n      - Images:  (28,28,1)  to (img_rows,img_cols,nchannels).\r\n      - Number of classes (10) to nb_classes  (some tutorials had it hard coded it while others were not using it for model generation)\r\n 2)  Commented `assert X_test.shape[0] == test_end - test_start, X_test.shape`  : The assertion is too specific to MNIST \r\n3)  Made Label Smoothing optional(added an argument) as some tutorials are using it while others do not.\r\n4) In Keras Tutorial: Changed the model dump from /tmp to local folder. This can be problem when multiple users on the same machine :- This one is debatable.\r\n5) Removed the flag `-    flags.DEFINE_integer('nb_classes', 10, 'Number of output classes')` as changing this parameter doesn't actually change the model parameters. \r\n\r\nComments?  @npapernot   Resolved conflict with latest commit.\r\nThere is an interesting update.\r\nX_train,Y_train have been changed to x_train,y_train. Is this change planned?\r\nI have seen that these variables names are not consistent for all the tests. I have fixed most of them as of now.\r\n Yes that was a recent change, variable names were changed from X_train to x_train in #423   The patch in #398, also discussed in #400, adds `model.get_params()` to `model_train`. However, since `get_params()` is a tensorflow specific API, it causes a regression when using Keras-based model. This PR checks the model type, uses a conditional `model_train` implementation, and also sets `model.trainable=False` when using Keras-based models. Thanks for the PR. Unfortunately, we decided a few months ago to remove all Keras dependencies from the CleverHans module and tutorials to the exception of two files: `cleverhans/utils_keras.py` and `cleverhans_tutorials/mnist_tutorial_keras_tf.py`. This is primarily because supporting Keras created a lot of overhead so I would rather move a blackbox tutorial using Keras to the `examples/` folder where we have looser constraints for merging code. \r\n\r\n@goodfeli  any opinion?  @aspratyush Do you want to move this file to `examples/` or should I close this PR? Thanks! @npapernot : Have moved the keras-based black-box model file to `examples/`\r\n\r\nWhile with the recent update to `cleverhans.utils_tf.train` that makes `var_list` an optional parameter resolves regression with respect to `get_params()`, usage of `cleverhans.loss.LossCrossEntropy` requires that the defined model be an instance of `cleverhans.model.Model`. Hence, a Keras-based black-box model would need to be wrapped in a `cleverhans.utils_keras.KerasModelWrapper` to successfully run this example.\r\n\r\nSince this PR was about re-enabling support for Keras-based models in mnist_blackbox, have updated the same PR to address handling such an implementation. Thanks!   @npapernot This passes checks now We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for all the commit author(s) or Co-authors.  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA ([login here](https://cla.developers.google.com/) to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\nIn order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again. If the bot doesn't comment, it means it doesn't think anything has changed.\n\n<!-- need_author_cla --> CLAs look good, thanks!\n\n<!-- ok --> @goodfeli Alrighty this should be g2g  WIP I think it would make sense to discuss this change on the cleverhans-dev mailing list first because it would be a major API change  (just to be clear, I think coming up with an unified terminology for the different attack parameters is a good idea and would be beneficial to the community if done based on a consensus) Yes there were no objections on the mailing list so we are good to proceed with the change @aidangomez any updates? @npapernot sorry, super preoccupied with work at the moment. Will return to this shortly. Ping @aidangomez ? @npapernot Ah yes, forgot about this. Thanks for the ping, will reset to master and try my best to knock off attacks.py and models.py. The change I'll make is 4 spaces instead of 2, and consistent naming schemes. Okay so since the diffs are unreadable here is what has been changed:\r\n  - nb_iters -> step_count\r\n  - eps_iter -> step_size\r\n  - epsilon -> eps (or eps_iter depending on the intended use)\r\n  - 2 space indent following the Tensorflow style guide Thanks for making the changes @aidangomez \r\n\r\nI talked about this offline w/ @goodfeli. We'd rather avoid merging such a large PR right before ICLR so we'll hold on this for another 2 weeks.\r\n\r\nIt would also be cleaner for the history to make two different PRs: one that changes to 2 space indents and one that changes the names. Would you be able to work on that after ICLR or should I take care of it?  @npapernot Hmm so I was thinking about this and maybe we should create a decorator that warns when someone is using an deprecated name?\r\n\r\nThen we could also support using that argument for some time period.\r\n\r\nRe: waiting + separating into two different PRs, that sounds fine to me. I'll repurpose this one into the renaming PR and open a new two spaces PR.\r\n\r\nSince it's a real pain in the arse to resolve conflicts, and waiting means that conflicts will proliferate, just ping me here when you're comfortable with doing a merge and I'll work on this again. Once you give me the go ahead, we'll need to put a hold on other PRs so that this one can go through unpolluted by others changes. SGTM, will check in after ICLR  Move away from adopting the naming scheme (arbitrarily) chosen by authors, and establish names with consistent semantics across attacks.\r\n\r\nProposed naming scheme:\r\n  - \"eps\": the maximum perturbation applied to a clean data sample\r\n  - \"step_count\": the number of steps to take in an iterative attack\r\n  - \"step_size\": the size of step to take at each iteration\r\n  - \"true_label\": (disjoint w/ target_label) the true one_hot label to move away from\r\n  - \"target_label\": (disjoint w/ true_label) the target one_hot label to move towards\r\n  - \"clip_max\": clip final adversarial example to this maximum value\r\n  - \"clip_min\": clip final adversarial example to this minimum value I agree with the proposed argument names but would recommend running this by the cleverhans-dev mailing list in case someone else has an objection @goodfeli Yeah I thought about making an object that has all the validation logic/deprecation warnings built-in but I wanted to ask you two how separate you want to stay from TF. Would you be comfortable\r\nwith using `tf.contrib.training.HParams`? It an extremely familiar object to anyone who uses the tensorflow Estimator API or Tensor2Tensor and can be customized as we see fit. I could also write my own analogous object.\r\n\r\n@npapernot Okay I've applied to join the group and will send a message  I'm using `tf.py_func` to wrap a Python function and build a new operation. That is wrapped by a Keras layer that's the first one of a Keras `Sequential` model - it should perform a filtering task.\r\n\r\nI've reproduced the problem on a script that should be easier to follow.\r\n\r\n```python\r\n     1  import tensorflow as tf\r\n     2  from keras.models import Sequential\r\n     3  from keras.layers import Dense, Activation\r\n     4  from keras.engine.topology import Layer\r\n     5  from cleverhans.utils_keras import KerasModelWrapper\r\n     6  from cleverhans.attacks import FastGradientMethod\r\n     7\r\n     8  class MyLayer(Layer):\r\n     9      def __init__(self, **kwargs):\r\n    10          super(MyLayer, self).__init__(**kwargs)\r\n    11\r\n    12      def build(self, input_shape):\r\n    13          super(MyLayer, self).build(input_shape)\r\n    14\r\n    15      def call(self, X):\r\n    16          def __function(X): return np.sinh(X)\r\n    17          return tf.reshape(tf.py_func(__function, [X], tf.float32), shape=(-1, *X.shape[1:]))\r\n    18          # tf.reshape() is needed to enforce shape of output\r\n    19\r\n    20  kerasmodel = Sequential([\r\n    21      # Dense(10, batch_input_shape=(None, 4)),\r\n    22      # Activation('softmax'),\r\n    23      MyLayer(batch_input_shape=(None, 4)),\r\n    24      Activation('softmax'),\r\n    25  ])\r\n    26  kerasmodel.compile(optimizer='adagrad', loss='mse', metrics=['accuracy']) # randomly chosen params\r\n    27\r\n    28  cleverhansmodel = KerasModelWrapper(kerasmodel)\r\n    29  attack = FastGradientMethod(cleverhansmodel)\r\n    30\r\n    31  Xsym = tf.placeholder(tf.float32, shape=(None, 4))\r\n    32  attack.generate(Xsym)\r\n```\r\nIf I run the above script,\r\n```\r\n$ python example.py\r\nUsing TensorFlow backend.\r\nWARNING:tensorflow:From /home/g/.local/share/virtualenvs/cleverhansexample-iTqMYa-7/src/cleverhans/cleverhans/attacks.py:216: calling reduce_max (from tensorflow.python.ops.math_ops) with keep_dims is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nkeep_dims is deprecated, use keepdims instead\r\nWARNING:tensorflow:From /home/g/.local/share/virtualenvs/cleverhansexample-iTqMYa-7/src/cleverhans/cleverhans/attacks_tf.py:62: calling reduce_sum (from tensorflow.python.ops.math_ops) with keep_dims is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nkeep_dims is deprecated, use keepdims instead\r\nWARNING:tensorflow:From /home/g/.local/share/virtualenvs/cleverhansexample-iTqMYa-7/src/cleverhans/cleverhans/utils_tf.py:37: softmax_cross_entropy_with_logits (from tensorflow.python.ops.nn_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\n\r\nFuture major versions of TensorFlow will allow gradients to flow\r\ninto the labels input on backprop by default.\r\n\r\nSee @{tf.nn.softmax_cross_entropy_with_logits_v2}.\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/g/.local/share/virtualenvs/cleverhansexample-iTqMYa-7/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py\", line 510, in _apply_op_helper\r\n    preferred_dtype=default_dtype)\r\n  File \"/home/g/.local/share/virtualenvs/cleverhansexample-iTqMYa-7/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1104, in internal_convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/home/g/.local/share/virtualenvs/cleverhansexample-iTqMYa-7/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py\", line 235, in _constant_tensor_conversion_function\r\n    return constant(v, dtype=dtype, name=name)\r\n  File \"/home/g/.local/share/virtualenvs/cleverhansexample-iTqMYa-7/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py\", line 214, in constant\r\n    value, dtype=dtype, shape=shape, verify_shape=verify_shape))\r\n  File \"/home/g/.local/share/virtualenvs/cleverhansexample-iTqMYa-7/lib/python3.6/site-packages/tensorflow/python/framework/tensor_util.py\", line 420, in make_tensor_proto\r\n    raise ValueError(\"None values not supported.\")\r\nValueError: None values not supported.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/g/.local/share/virtualenvs/cleverhansexample-iTqMYa-7/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py\", line 524, in _apply_op_helper\r\n    values, as_ref=input_arg.is_ref).dtype.name\r\n  File \"/home/g/.local/share/virtualenvs/cleverhansexample-iTqMYa-7/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1104, in internal_convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/home/g/.local/share/virtualenvs/cleverhansexample-iTqMYa-7/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py\", line 235, in _constant_tensor_conversion_function\r\n    return constant(v, dtype=dtype, name=name)\r\n  File \"/home/g/.local/share/virtualenvs/cleverhansexample-iTqMYa-7/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py\", line 214, in constant\r\n    value, dtype=dtype, shape=shape, verify_shape=verify_shape))\r\n  File \"/home/g/.local/share/virtualenvs/cleverhansexample-iTqMYa-7/lib/python3.6/site-packages/tensorflow/python/framework/tensor_util.py\", line 420, in make_tensor_proto\r\n    raise ValueError(\"None values not supported.\")\r\nValueError: None values not supported.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"example.py\", line 32, in <module>\r\n    attack.generate(Xsym)\r\n  File \"/home/g/.local/share/virtualenvs/cleverhansexample-iTqMYa-7/src/cleverhans/cleverhans/attacks.py\", line 294, in generate\r\n    targeted=(self.y_target is not None))\r\n  File \"/home/g/.local/share/virtualenvs/cleverhansexample-iTqMYa-7/src/cleverhans/cleverhans/attacks_tf.py\", line 74, in fgm\r\n    normalized_grad = tf.sign(grad)\r\n  File \"/home/g/.local/share/virtualenvs/cleverhansexample-iTqMYa-7/lib/python3.6/site-packages/tensorflow/python/ops/math_ops.py\", line 453, in sign\r\n    return gen_math_ops.sign(x, name=name)\r\n  File \"/home/g/.local/share/virtualenvs/cleverhansexample-iTqMYa-7/lib/python3.6/site-packages/tensorflow/python/ops/gen_math_ops.py\", line 6877, in sign\r\n    \"Sign\", x=x, name=name)\r\n  File \"/home/g/.local/share/virtualenvs/cleverhansexample-iTqMYa-7/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py\", line 528, in _apply_op_helper\r\n    (input_name, err))\r\nValueError: Tried to convert 'x' to a tensor and failed. Error: None values not supported\r\n```\r\nWhat's triggering the error is https://github.com/tensorflow/cleverhans/blob/29e7e3b5ca1ca8fb1481c17d0875df2a323e3ae0/cleverhans/attacks_tf.py#L70-L74 It seems like CleverHans requires me to compute the gradient for the newly defined operation. But in the original case I don't know how to compute the gradient. The original function wrapped by _tf.py_func_ is rather complex. Also I'm planning to wrap a variety of functions and understanding what the gradient is for all of them is a pain.\r\n\r\nNote that decommenting lines 21, 22 of the above script makes CleverHans quite again. In  `__function`, why not use `tf.sinh` instead of `np.sinh`? that's unrelated to the issue.\n\nBy the way, the point of using `tf.py_func` is building new operators without using TensorFlow operators but a Python function.\n\n> On 23 Jun 2018, at 20:36, Gokula Krishnan <notifications@github.com> wrote:\n> \n> In __function, why not use tf.sinh instead of np.sinh?\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n  For eager execution. \r\n1. A subclass of cleverhans.model.Model for tf.eager models is added. (cleverhans.model.Model_Eager), \r\nthis uses only tf_eager without any keras dependencies.\r\n\r\n2. New file attacks_eager is added, (existing attacks run through session using feed_dict making it too hard to adapt.), \r\nbut structure of attacks.py is adapted to attacks_eager.py,  so objects of both attack classes can be replaced with out any difference.\r\n\r\n3. tutorial to show the use tutorial_mnist_eager.py\r\n\r\n4. unit tests for all the above.   @nottombrown @david-berthelot , would you be able to review this PR since you use this logic more often than I do? Hmmm, I haven't actually used `tf.eager` for a project yet. @david-berthelot have you? @david-berthelot  requested changes are applied, with replies to the your comments, let me know what your thoughts are, particularly on handling AttackTFE class @david-berthelot updated PR contains the requested changes. A few more changes and it'll be done (the refactor of attack to reuse tf as much as possible since it's meant to be the same). Also need 3rd opinion on committing obsolete / deprecated code. Refactored to\r\n1. Inhereted from Attack class.\r\n2. Uses recently merged loss class\r\n3. Uses network similar to recently merged MakeBasicCNN Refactored eager code. The final changes are done. @goodfeli  Please have a look at this. @npapernot Hi, review process is done, @david-berthelot approved the final version, please merge this PR.  Quick question; though perhaps this is the wrong place.\r\n\r\nWhen I just step back and think about the infinity norm of a gradient, I think of it as max of the absolute value of the gradient.  \r\n\r\nBut in cleverhans infinity normalization on the gradient is treated as it as the sign operator on the gradient: https://github.com/tensorflow/cleverhans/blob/master/cleverhans/attacks_tf.py#L74\r\n\r\nI was wondering if anyone could give me a quick hint on what to read to understand the justification?\r\n\r\n\r\n\r\n  http://cleverhans.readthedocs.io/en/latest/source/attacks.html\r\n\r\nWhat happened? Please restore.  Any response? Odd. I'll take a look and see if I can track down the issue Thanks for the PR @nottombrown \r\n\r\nDo we have to trigger something to rebuild the docs? They don't seem to have refreshed yet despite the PR being merged There was a second configuration issue with the hosted docs.\r\n\r\nResolved now and the docs will auto-rebuild whenever there is a push to `master`.\r\n\r\nhttp://cleverhans.readthedocs.io/en/latest/source/attacks.html\r\n  The Loss is the base for defining defense, it allows to manipulate inputs and labels.\r\nChanges:\r\n\r\n- New Loss class to create defenses.\r\n- Implemented cross-entropy with smoothing, mixup and feature pairing.\r\n- The Model class has a few changes: removed the get_layer_names API since it wasn't used, and taking explicitly the number of classes (None if non-applicable).\r\n- Fixed some broken examples to be compatible with latest TF (1.8) Thanks for the PR David, I will take a look asap Note that the Model class is not backward compatible, so may be we should do a Version change. Let me know what you think. @AlexeyKurakin could you take a look as well? I remember we had long discussions about this last summer with you Same for me, LGTM once comments are addressed and the conflict w/ the master branch is resolved  Successfully downloaded the entire cleverhans directory using pip on Mac. Now, in mnist_tutorial_keras_tf.py all the 'from cleverhans.[]  import' statements are erring with \"This inspection detects names that should resolve but don't.\r\n\r\nAny advice to fix this would be awesome, thank you.  Hi folks, I'm a student works on adversarial examples and new to cleverhans. I spend some time on the entry level tensorflow tutorial of MNIST with FGSM. I noticed that the MLP model is using lower level APIs. I have my local copy which rewrites the MLP with high level tensorflow API like tf.layers which is more like a Keras syntax. I'm not sure if this is something useful or there are existed examples. Anyway, if it could benefit others, I'm more than happy to contribute my code. Thanks for the reply, @goodfeli . BTW, I saw that model_train and model_loss are provided as utils. However, it didn't support complex model structure such as stack model or ensemble model and only cross entropy loss. Is it a feature to be supported in the future?  Howdy,\r\n\r\nThanks so much for sharing your work!\r\n\r\nWhen trying to reproduce an error in the Adversarial Patch notebook [related to failing to load the `cross_model_patch` object], I found that when following the instructions for running the notebook in Colaboratory [Python 2 with GPU], the notebook threw a `ResourceExhaustedError` at the \"Transfer Attack (AKA Blackbox)\" section. Here's a [link to the cell](https://colab.research.google.com/drive/1GmUJUHZ0lR0UqDEujr7bayDfYx_AatTq#scrollTo=iibw1L5NxVK6&line=8&uniqifier=1) in a copy of the notebook that I ran. It seems that in the notebook in the repo, this cell might not have been run -- there's no output for that cell saved. \r\n\r\nAny insights on how to get the notebook running would be much appreciated! Not sure what's up with this. I just spun up a new colab with Python2 and a GPU and it worked correctly for me.\r\n\r\n![image](https://user-images.githubusercontent.com/306655/41066517-e5c37ac4-6996-11e8-8b95-fb6ecafe605b.png)\r\n\r\nI would try to fix it by doing the following (in order of increasing annoyingness):\r\n```\r\n1. Restart your colab kernel\r\n2. Change your runtime type and then change it back\r\n3. Reduce the BATCH_SIZE from 16 to 8\r\n``` I had already tried the first two suggestions, but dropping the `BATCH_SIZE` down to `8` worked like a charm -- thanks!\r\n\r\n```\r\nBeginning blackbox experiment with ensemble: ['resnet50', 'xception', 'inceptionv3', 'vgg16'] and target vgg19\r\n[0] loss: 12.815981\r\n...\r\n[450] loss: 0.39939258\r\n```  I built cleverhans environment. And, executed mnist_tutorial_tf.py.\r\nThe mnist_tutorial_tf.py worked fine. And, I done some easy change like save models.\r\n\r\nI want to save the fooling image files generated by FGSM(Such as , The panda image in the \"Explaining and Harnessing Adversarial Examples\"). But  It is not working well.\r\n\r\nWhat  source code should I add to The tutorial? I would like to export the adversarial examples in the MNIST Blackbox Example to my file system:\r\nhttps://github.com/tensorflow/cleverhans/blob/36e3c78fbcbdcec93718edd1450eedd9131616f0/cleverhans_tutorials/mnist_blackbox.py#L254\r\n\r\nI experimented with the following code:\r\n```\r\ndef convert_and_save_image(image):\r\n        encoded_image = tf.image.encode_jpeg(image, format=\"grayscale\")\r\n        writeOp = tf.write_file(\"./example_images/adversarials/\" + \r\n                         datetime.datetime.now().strftime(\"%Y%m%d%H%M%S\")\r\n                         + str(round(random.random() * 1000)) + \".jpg\",\r\n                         encoded_image)\r\n        return writeOp\r\n\r\ncasted_image_tf = tf.cast(x_adv_sub, tf.uint8)\r\nencoded_images_tf = tf.map_fn(convert_and_save_image, casted_image_tf)\r\nsession.run(encoded_images_tf)\r\n```\r\nBut as writeOp is an operation it can not be run by session.run() and also needs some values for the placeholders. It would be awesome if someone could help me with this. I just appended this code in Line 255 in the MNIST Blackbox Example to get PIL images from the Tensors and store them in the file system:\r\n ```\r\nencoded_images = sess.run(x_adv_sub, feed_dict={x: X_test})\r\n\r\nimport os\r\nfrom PIL import Image\r\nimport datetime \r\ndirectory = \"/tmp/adv_learn/example_images/adversarials/\" + datetime.datetime.now().strftime(\"%Y%m%d%H%M\") + \"/\"\r\nif not os.path.exists(directory):\r\n    os.makedirs(directory)\r\nimages = []\r\nfor idx, img_arr in enumerate(encoded_images):\r\n            img = Image.fromarray(np.squeeze(img_arr) * 255).convert(\"RGB\") # Pixels are in range 0 to 1 and need to be in 0-255 for PIL\r\n    #img.show()\r\n    path = directory + str(idx) + \".jpeg\"\r\n    img.save(path, \"JPEG\")\r\n    images.append({\"Path\": path, \"img\": img})\r\n```  Progress towards #397 Thanks for the PR! It might make sense to deprecate TF 1.1 at the same time since it was released over a year ago. That could also help to prevent increasing the burden on Travis when processing pull requests. \r\n\r\nAny thoughts @goodfeli ?  So there's good news and bad news.\n\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\n:confused: The bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter.  We need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that here in the pull request.\n\n*Note to project maintainer: This is a terminal state, meaning the `cla/google` commit status will not change from this state. It's up to you to confirm consent of the commit author(s) and merge this pull request when appropriate.*\n\n<!-- need_author_consent --> Added the missing `scikit-learn` dependency. I give permission to include my commits in this PR I give permission to include my commits in this PR Found an issue here. The sklearn data is sorted by categories, so our train and test set are not IID. \r\n\r\nTwo options:\r\n1. Shuffle the mnist data ourselves\r\n2. Use MNIST dataset from `torchvision.datasets` (https://pytorch.org/docs/stable/torchvision/datasets.html#mnist)\r\n\r\nI would gravitate towards [2] because torchvision seems lighter-weight than sklearn, and we don't have shuffle things ourselves. Heavyweight pytorch dependency is causing issues, so I switched to a new mnist source. Does the new loader return images in a different random order every run? Removed print statements. The order of the loader is deterministic. It uses the ordering from http://yann.lecun.com/exdb/mnist/\r\n\r\nYou can see the code here:\r\nhttps://github.com/datapythonista/mnist/blob/master/mnist/__init__.py Thanks! LGTM, feel free to merge when tests pass  Per discussion in https://groups.google.com/forum/#!topic/cleverhans-dev/V01rBSEyljQ We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for all the commit author(s) or Co-authors.  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA ([login here](https://cla.developers.google.com/) to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\nIn order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again. If the bot doesn't comment, it means it doesn't think anything has changed.\n\n<!-- need_author_cla --> Ran `git commit --amend --reset-author --no-edit` to resolve CLA issue.  When referencing cleverhans using your recommended bibtex, latex warns that there are \"too many commas\". This is because commas are supposed to be used to [differentiate ordering of names, rather than separate authors](https://tex.stackexchange.com/a/343164). This pull request updates it to separate authors using `and`.  To my understanding, when you call `FastGradientMethod.generate` you can't pass `y_target=None` as an argument and expect cleverhans to behave like you didn't pass it.\r\n\r\nhttps://github.com/tensorflow/cleverhans/blob/fcf1e2a18e72dd42280f04a50fce3eb4e0b20fcf/cleverhans/attacks.py#L200-L205\r\n\r\nChanging check into `'y_target' in kwargs and kwargs['y_target'] is not None` would make the function behave as one would expect. Sure, I'll do it @npapernot \r\n\r\n-Kashyap Murali I have created a pull request @npapernot   fixed pair_visual to handle images with single-dimensional entry in the shape  keras: 2.1.4\r\ntf: 1.5.0\r\ncleverhans: 2.0.0-aa80e13d0f63be3197ba61290f46e44d\r\nUbuntu: 17.10\r\n\r\n`jsma = SaliencyMapMethod(wrap, sess=sess)`\r\n\r\n`jsma_params = {'gamma': 0.1, 'clip_min': 0., 'clip_max': 1.}`\r\n`adv_x2 = jsma.generate_np(x_val,**jsma_params)`\r\n\r\n`adv_pred2 = np.argmax(model.predict(adv_x2), axis = 1)`\r\n`adv_acc2 =  np.mean(np.equal(adv_pred2, y_val)) `\r\n\r\nFGSM and BasicIterativeMethod went okay. \r\nError text:\r\n\r\n> MemoryError                               Traceback (most recent call last)\r\n<ipython-input-22-82bc83f252e1> in <module>()\r\n      6 jsma_params = {'gamma': 0.1,\r\n      7                'clip_min': 0., 'clip_max': 1.}\r\n----> 8 adv_x2 = jsma.generate_np(x_val,**jsma_params)\r\n      9 \r\n     10 adv_pred2 = np.argmax(model.predict(adv_x2), axis = 1)\r\n\r\n> ~/src/cleverhans/cleverhans/attacks.py in generate_np(self, x_val, **kwargs)\r\n    139 \r\n    140         if hash_key not in self.graphs:\r\n--> 141             self.construct_graph(fixed, feedable, x_val, hash_key)\r\n    142 \r\n    143         x, new_kwargs, x_adv = self.graphs[hash_key]\r\n\r\n> ~/src/cleverhans/cleverhans/attacks.py in construct_graph(self, fixed, feedable, x_val, hash_key)\r\n    113 \r\n    114         # now we generate the graph that we want\r\n--> 115         x_adv = self.generate(x, **new_kwargs)\r\n    116 \r\n    117         self.graphs[hash_key] = (x, new_kwargs, x_adv)\r\n\r\n> ~/src/cleverhans/cleverhans/attacks.py in generate(self, x, **kwargs)\r\n    688                                   theta=self.theta, gamma=self.gamma,\r\n    689                                   clip_min=self.clip_min,\r\n--> 690                                   clip_max=self.clip_max)\r\n    691         else:\r\n    692             from .attacks_tf import jacobian_graph, jsma_batch\r\n\r\n> ~/src/cleverhans/cleverhans/attacks_tf.py in jsma_symbolic(x, y_target, model, theta, gamma, clip_min, clip_max)\r\n    431     increase = bool(theta > 0)\r\n    432 \r\n--> 433     tmp = np.ones((nb_features, nb_features), int)\r\n    434     np.fill_diagonal(tmp, 0)\r\n    435     zero_diagonal = tf.constant(tmp, tf.float32)\r\n\r\n> /usr/local/lib/python3.6/dist-packages/numpy/core/numeric.py in ones(shape, dtype, order)\r\n    186 \r\n    187     \"\"\"\r\n--> 188     a = empty(shape, dtype, order)\r\n    189     multiarray.copyto(a, 1, casting='unsafe')\r\n    190     return a\r\n\r\n> MemoryError:  What is the shape of `x_val`? (1, 224, 224, 3)\r\n\r\nhttps://github.com/recluse27/diplo/blob/master/deprocessing.ipynb I thought 4 GB RAM would be enough.\r\nDon't yo know are there any free cloud resources to try JSMA there? Kaggle doesn't allow to upload keras pretrained models, for example I met the same question when try JSMA. I run it on a server using Titan Xp GPU. Can you help me deal with it? `jsma = SaliencyMapMethod(model, sess=sess)\r\n  sess.run(tf.global_variables_initializer())\r\n  x_adv = jsma.generate(x_input, clip_min=-1., clip_max=1.)\r\n`\r\nWhen I run, I got the following error text:\r\n\r\nMemoryErrorTraceback (most recent call last)\r\n/notebooks/AdversarialExamples/test.py in <module>()\r\n     96         sess.close()\r\n     97 \r\n---> 98 main()\r\n\r\n/notebooks/AdversarialExamples/test.py in main()\r\n     84         jsma = SaliencyMapMethod(model, sess=sess)\r\n     85         sess.run(tf.global_variables_initializer())\r\n---> 86         x_adv = jsma.generate(x_input, clip_min=-1., clip_max=1.)\r\n     87         saver = tf.train.Saver(slim.get_model_variables())\r\n     88         saver.restore(sess, checkpoint_path)\r\n\r\n/usr/local/lib/python3.5/dist-packages/cleverhans/attacks.py in generate(self, x, **kwargs)\r\n    691                                   theta=self.theta, gamma=self.gamma,\r\n    692                                   clip_min=self.clip_min,\r\n--> 693                                   clip_max=self.clip_max)\r\n    694         else:\r\n    695             from .attacks_tf import jacobian_graph, jsma_batch\r\n\r\n/usr/local/lib/python3.5/dist-packages/cleverhans/attacks_tf.py in jsma_symbolic(x, y_target, model, theta, gamma, clip_min, clip_max)\r\n    433     increase = bool(theta > 0)\r\n    434 \r\n--> 435     tmp = np.ones((nb_features, nb_features), int)\r\n    436     np.fill_diagonal(tmp, 0)\r\n    437     zero_diagonal = tf.constant(tmp, tf_dtype)\r\n\r\n/usr/local/lib/python3.5/dist-packages/numpy/core/numeric.py in ones(shape, dtype, order)\r\n    186 \r\n    187     \"\"\"\r\n--> 188     a = empty(shape, dtype, order)\r\n    189     multiarray.copyto(a, 1, casting='unsafe')\r\n    190     return a\r\n\r\nMemoryError: \r\n\r\nI am not sure whether there are anyone else encounter the same error, I think maybe Numpy does not support a very big matrix, so maybe using Scipy generate sparse matrix can work? I understand, thank you! I ran it on a Titan Xp GPU with about 12GB Memory, so maybe I can run the code on a server with 90GB RAMs, instead of using GPU.  I have same problem too when i use the JSMA, My RAM is 32GB, and GPU memory is 11GB*2, I don't think the problem is out of my memory, How did you deal with it?  My real name is Rujun Long.\r\nThank you! @npapernot\r\n What are each of your affiliations? @Shuolongbj @paulhendricks @zHiOoO  0101.AI\r\nThanks I am from the University of Toronto. \r\nThanks.   Hi, \r\n\r\nThanks for the great repository. \r\n\r\nIn the tutorial code `mnist_blackbox.py`, The blackbox is first prepared and then a substitute is trained using a subset of the test samples. When the subsitute is trained with the function `model_train`, \r\n\r\nhttps://github.com/tensorflow/cleverhans/blob/6b065c4507f50e2545c009f75e82678f92353163/cleverhans_tutorials/mnist_blackbox.py#L150\r\n\r\nI notice that at this line, \r\n\r\nhttps://github.com/tensorflow/cleverhans/blob/6b065c4507f50e2545c009f75e82678f92353163/cleverhans/utils_tf.py#L117\r\n\r\nthe optimizer minimizes the loss. Since there is no `var_list` defined, it considers the variables of both the Blackbox and Substitute models. \r\n\r\nI would suggest adding another parameter to `train_params` - `tvars` which contains the variables list to optimize for. \r\n\r\nBest,  Thanks for the quick response. \r\n\r\nI will be happy to place a PR - but unfortunately I am on time crunch - so perhaps, I can do it next month. \r\n\r\n  Looks good.  We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for all the commit author(s) or Co-authors.  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA ([login here](https://cla.developers.google.com/) to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\nIn order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again. If the bot doesn't comment, it means it doesn't think anything has changed.\n\n<!-- need_author_cla --> CLAs look good, thanks!\n\n<!-- ok -->  Closing this given that `mnist_tutorial_tf.py` does not raise any deprecation warnings anymore. If anyone notices another warning, feel free to open an issue.  I'm wondering how I can parallelise attacking and generating adversarial examples since it seems cleverhans does not support this yet. Any suggestions would be appreciated!  attack.py contains the classes for all the supported adversarial attacks. In the init of the attack classes has been added a variable `dtypestr` the strting of the dtype wanted. This will be converted in np_dtype and tf_dtype and stored in the attack class, so that can be used in the following methods: `generate` and `generate_np`..\r\n\r\nalso attack_tf.py was modified for this purpose. This python file is less organized so instead of passing a dtype around following the flow of the functions calls, I added global variables tf_dtype and np_dtype of the module.\r\n\r\nThe code has been tested and as far as I could see all attacks are working properly in both float32 and float64. \nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here (e.g. `I signed it!`) and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](go/cla#troubleshoot) ([Public version](https://opensource.google.com/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n<!-- need_sender_cla --> I signed it! CLAs look good, thanks!\n\n<!-- ok --> Hello! Sorry had been quite a busy period, I think now PEP8 issue is fixed.\r\n\r\n```\r\n$ nosetests --nologcapture cleverhans/devtools/tests/test_format.py\r\n..\r\n----------------------------------------------------------------------\r\nRan 2 tests in 1.142s\r\n\r\nOK\r\n```\r\n  Bug: Currently the `ex_cifar10_tf.py` example is broken due to a change in the fgsm API.\r\n\r\nTo reproduce: install the current version of cleverhans with `python setup.py install` and run the example.\r\n\r\nExpected:\r\n```\r\n$ python ex_cifar10_tf.py\r\n Test accuracy on legitimate test examples: 0.4957\r\n Test accuracy on legitimate test examples: 0.5728\r\n...\r\n```\r\n\r\nActual:\r\n```\r\n$ python ex_cifar10_tf.py\r\nUsing TensorFlow backend.\r\nTraceback (most recent call last):\r\n  File \"ex_cifar10_tf.py\", line 15, in <module>\r\n    from cleverhans.attacks import fgsm\r\nImportError: cannot import name 'fgsm'\r\n```\r\n\r\nThis PR updates `ex_cifar10_tf.py` to use the new FastGradientMethod class. Thanks Nicolas, I've made that change.  ```\r\n if viz_enabled:   \r\n                  figure = pair_visual(   \r\n                    np.reshape(sample, (img_rows, img_cols)),\r\n                    np.reshape(adv_x, (img_rows, img_cols)), figure)\r\n```\r\n\r\nto\r\n```\r\n if viz_enabled:   \r\n                  figure = pair_visual(   \r\n                    np.reshape(sample, (img_rows, img_cols,channels)),\r\n                    np.reshape(adv_x, (img_rows, img_cols,channels)), figure)\r\n```\r\n\r\n Unfortunately change throws error on MNIST:\r\n\r\nTypeError: Invalid dimensions for image data\r\n\r\nHad to revert to:\r\n\r\n if viz_enabled:   \r\n                  figure = pair_visual(   \r\n                    np.reshape(sample, (img_rows, img_cols)),\r\n                    np.reshape(adv_x, (img_rows, img_cols)), figure)\r\n\r\n Should I fix pair_visual or tomstelk will? Please go ahead with fix, thanks.   I'm not sure of the cited errors in the build, all I did was update the Readme.  It might make sense to make this the last thing we do after getting the release ready, since the PRs we're merging while getting the release ready are changing the author order / list I'll send a PR to fix the build I don't know anything more about the contributor, no contact information on\nthe Github.\n\nI'll send my final contributor list in a pull request once the bugs have\nbeen fixed then.\n\nOn Thu, Apr 12, 2018 at 7:57 PM, Ian Goodfellow <notifications@github.com>\nwrote:\n\n> I'll send a PR to fix the build\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/382#issuecomment-380979194>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIk5_yVq8akJeRTrpqsvzWYdzG9Z7L24ks5tn-oGgaJpZM4TSJm6>\n> .\n>\n Final Contributor List updated, please pull. Build failed again, apparently due to a problem with test_mnist_tutorial_keras_tf.  The Keras tutorial still fails. Can you please tell Travis to do another build?   The new parameters have default values that correspond exactly to the\nprevious behavior.\n\nOn Mon, Apr 9, 2018 at 2:12 AM, Nicolas Papernot <notifications@github.com>\nwrote:\n\n> Thanks for the PR, would you be able to add deprecation warning given that\n> you are changing the API? Unless the new parameters have default values\n> that correspond exactly to the previous behavior.\n>\n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/379#issuecomment-379644250>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIk5_9NCtCyMX4t2JrEQB5J8a8dWP9Y_ks5tmvuygaJpZM4TLxmR>\n> .\n>\n  Having read about [Houdini ](http://papers.nips.cc/paper/7273-houdini-fooling-deep-structured-visual-and-speech-recognition-models-with-adversarial-examples.pdf)and its success in various domains to construct adversarial samples, it would be great to have it in cleverhans. This would be nice to address once #423 is merged @npapernot I working on this, will be able to submit PR in a week.  Thanks @feedforward. It might make sense to hold on before #423 is merged so that we can use the new loss class directly. @feedforward now that #423 is merged, this would be a good time to make the PR. Thanks! @npapernot I am working on it, will submit the PR in couple of days, thanks for the info. @npapernot, @feedforward - I'd like to work on this, if there's no PR already in the works. Any details I should know before starting off? Hi @npapernot, I've started a WIP PR (#967).\r\n\r\nThanks for the reminder and apologies for the delay. I've been busy with a lot of other stuff in the last two months, hence couldn't look into this earlier.  Three subdirectories created in competition directory:\r\n- dataset - subdirectory for dataset\r\n- dev_toolkit - development toolkit moved to this subdirectory\r\n- eval_infra - placeholder directory for evaluation infrastructure\r\n I think build is broken for some reason. This code does not touch anything in core cleverhans, so it should not affect core cleverhans tests.\r\nI also noticed that tests are passing for TF version 1.4.1, but failing for TF version 1.1.0 Yes, that's right TF 1.1 build is failing, see here: https://github.com/tensorflow/cleverhans/pull/370 @goodfeli build is fixed and all tests are passing now, please take a look at this PR  To make sure issues like https://github.com/tensorflow/cleverhans/issues/354 don't repeat, we could add a docstring linter to the travis tests.\r\n\r\nThere's one set up for Sphinx already in pylearn2.devtools. We already copied the PEP8 checker from that module so it shouldn't be too much work to also copy the docstring linter. Hello @goodfeli , I'm happy to help on this.\r\n\r\nJust want to confirm, it seems like you also copied the docstring linter [here](https://github.com/tensorflow/cleverhans/blob/master/cleverhans/devtools/tests/docscrape.py#L775-L830).\r\n\r\nMaybe we just need to remove the [temporarily disabled docstring test](https://github.com/tensorflow/cleverhans/blob/master/cleverhans/devtools/tests/test_format.py#L78-L79) and fix the files who violate the docstring rule?\r\n\r\nLet me know if I got it wrong.\r\n That would be great, thanks!\r\n\r\nI'm not 100% sure I've copied everything needed by the disabled test, so there might be something more than just removing the line that disables it.\r\n\r\n Got it.\r\n\r\nBy simply enabling the docstring test, I get the following output:\r\n```\r\n/Users/YenChen/Desktop/Python/cleverhans/cleverhans/attacks.py:\r\nLBFGS class has no Parameters section\r\nLBFGS:construct_graph:No Parameters section\r\nLBFGS:generate_np:No Parameters section\r\nLBFGS:get_or_guess_labels:Brief function summary is longer than 3 lines\r\nLBFGS:get_or_guess_labels:No Parameters section\r\nLBFGS:construct_variables:No Parameters section\r\nLBFGS:generate:No Parameters section\r\nLBFGS:parse_params:**missing** method-level docstring\r\n...\r\n/Users/YenChen/Desktop/Python/cleverhans/examples/multigpu_advtrain/utils_cifar.py:\r\n...\r\n__doc__:Line 2 exceeds 75 chars: \"https://github.com/renmengye/r\"...\r\n__doc__:Line 8 exceeds 75 chars: \"Permission is hereby granted, \"...\r\n__doc__:Line 9 exceeds 75 chars: \"of this software and associate\"...\r\n__doc__:Line 10 exceeds 75 chars: \"in the Software without restri\"...\r\n__doc__:Line 15 exceeds 75 chars: \"The above copyright notice and\"...\r\n__doc__:Line 22 exceeds 75 chars: \"LIABILITY, WHETHER IN AN ACTIO\"...\r\n__doc__:Line 23 exceeds 75 chars: \"OUT OF OR IN CONNECTION WITH T\"...\r\n...\r\n```\r\n\r\nSince there are 400+ violations in total, I think we can:\r\n\r\n1. Fix some more important files (e.g., attack API)\r\n2. Add the remaining of files (e.g., NIPS competition 2017) to whitelists and fix them later\r\n\r\nMay I know your opinion? Thanks for the reply. I've used the tests to fix some files' docstring. However, I need your inputs on docstring format design.\r\n\r\nHere's part of the outputs (but representative) after running docstring tests:\r\n```\r\n/Users/YenChen/Desktop/Python/cleverhans/cleverhans_tutorials/mnist_tutorial_jsma.py:\r\n__doc__:**missing** module-level docstring\r\nmnist_tutorial_jsma:No Parameters section\r\nmain:**missing** function-level docstring\r\n```\r\n\r\nIt basically points out 3 problems:\r\n\r\n1. We need module-level docstring for each file (tutorials part fixed in #367)\r\n2. Current tests use keywords such as `Parameters` and `Returns` to detect docstring errors (see example [here](https://github.com/scikit-learn/scikit-learn/blob/34aad31924dc9c8551e6ff8edf4e729dbfc1b973/sklearn/linear_model/least_angle.py#L49-L50)). This format is adopted by both scikit-learn and pylearn2. \r\nDo we want to add these keywords to docstring or modify the tests to detect current format `:param xxx:`?\r\n3. `main` function like [this](https://github.com/tensorflow/cleverhans/blob/master/cleverhans_tutorials/mnist_blackbox.py#L258) doesn't have docstring, do we need to add one to pass the test?   Linting bug was masking a real failure. A test needs to be updated to not exercise the deprecated API:\r\n\r\n```\r\n======================================================================\r\nERROR: test_mnist_blackbox (test_mnist_blackbox.TestMNISTBlackboxF)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/travis/build/tensorflow/cleverhans/tests_tf/test_mnist_blackbox.py\", line 27, in test_mnist_blackbox\r\n    report = mnist_blackbox.mnist_blackbox(**mnist_blackbox_args)\r\n  File \"/home/travis/build/tensorflow/cleverhans/cleverhans_tutorials/mnist_blackbox.py\", line 225, in mnist_blackbox\r\n    rng=rng)\r\n  File \"/home/travis/build/tensorflow/cleverhans/cleverhans_tutorials/mnist_blackbox.py\", line 71, in prep_bbox\r\n    args=train_params, rng=rng)\r\nTypeError: model_train() got an unexpected keyword argument 'verbose'\r\n``` my latest change is big enough it should probably be reviewed again thanks  On line 102 of tutorial_models.py https://github.com/tensorflow/cleverhans/blob/master/cleverhans_tutorials/tutorial_models.py\r\n\r\nI think it should be output_shape[0] = batch_size No problem :)   This pull request ( https://github.com/tensorflow/cleverhans/pull/323 ) will make it possible, but you should be aware that we now know that attack isn't strong enough ( https://github.com/anishathalye/obfuscated-gradients ). We will hopefully have the stronger attack added to CleverHans soon once the code for it is released.  The dtypes of most tensors in the `generate_np` caching system are hard-coded to float32. If you pass in a float64 tensor, nothing sensible happens. This is a restriction compared to the `generate` interface.\r\n\r\nI have never been a fan of `generate_np` and would be in favor of just removing it since it's one of the more difficult features to maintain and doesn't add any actual adversarial example functionality.\r\n\r\nWe may also want to investigate whether eager mode + generate provide the functionality that generate_np is meant to provide.\r\n\r\nFinally, if we want to keep generate_np, the interface should probably be changed, so that there are multiple allowed dtypes for each argument and the choice of specific dtype is treated as a structural argument. cc @npapernot @carlini  This seems low-priority and self-contained, would it be a good candidate to mark as \"help wanted\"? SGTM  It seems that the perturbations computed by the FastGradientMethod (FGM) and BasicIterativeMethod attacks are sometimes equal to zero.\r\n\r\nIn a first preliminary test (not in cleverhans), this problem was due to the overconfidence of the network. The cross-entropy is thus very flat and the gradient very small, this created an underflow problem.\r\nWe solved this passing to float64 precision in tensorflow.\r\nI noticed Cleverhans is using float32 (specified in several places in the code). I wonder if it is possible to specify easily to use float64 precision instead and/or if you think there is another workaround to that?\r\n\r\nWe are trying to produce FGSM adversarial examples for MNIST, for example using a simple fully connected architecture of 784-200-10. The accuracy on the trained network is initially around 96% on test set. It drops to 48% on the adversarials generated with FGM {params eps=0.1, ord=np.inf, clip_min=0, clip_max=1}. However we noted that 45% of the MNIST test set examples are not changed by the FGSM attack. Do you know if anyone else had the same issue?\r\n Thanks goodfeli for the quick answer.\r\nI tried to pass logits instead of probs as you suggested, specifying the keyword 'logits' to the CallableModelWrapper. Unfortunately this did not solve the issue...\r\n\r\nWe trained a network of 784-200-10 with 100 epochs on MNIST training set. I also attach the weights if you want to give it a try... (W0.npy, b0.npy, W1.npy, b1.npy).\r\nX_test is the test set of MNIST.\r\n\r\n[CODE]\r\nW0_np = np.load(\"experiments/W0.npy\")\r\nb0_np = np.load(\"experiments/b0.npy\")\r\nW1_np = np.load(\"experiments/W1.npy\")\r\nb1_np = np.load(\"experiments/b1.npy\")\r\n\r\nW0 = tf.Variable(W0_np, dtype = tf.floatXX)\r\nb0 = tf.Variable(b0_np, dtype = tf.floatXX)\r\nW1 = tf.Variable(W1_np, dtype = tf.floatXX)\r\nb1 = tf.Variable(b1_np, dtype = tf.floatXX)\r\n\r\nsess = tf.Session()\r\nsess.run(tf.global_variables_initializer())\r\n\r\ndef nn(x):\r\n    x = tf.cast(x, tf.floatXX)\r\n    h = tf.matmul(x, W0) + b0\r\n    h = tf.nn.relu(h)\r\n    logits = tf.matmul(h, W1) + b1\r\n    #probs = tf.nn.softmax(logits)\r\n    return logits\r\n\r\nnn_model = CallableModelWrapper(nn, 'logits')\r\nfgsm = FastGradientMethod(nn_model, 'tf', sess)\r\nfgsm_params = {'eps' : 0.1,\r\n'ord' : np.inf,\r\n'clip_min' : 0,\r\n'clip_max' : 1}\r\nfgsm_adv_test = fgsm.generate_np(X_test, **fgsm_params)\r\n[/CODE]\r\n\r\nWe generated 3 sets of adversarial examples: fgsm_ch_float32.npy, fgsm_ch_float64.npy, fgsm_tf_float64.npy.\r\nThese are respectively the adversarial examples generated with cleverhans using float32 and float64 in the code above, and the last ones are adversarial examples generated using a code written in tensorflow with float64 everywhere.\r\n\r\nWe found performances to be quite different, both the examples generated with cleverhans show around 48% accuracy and the number of images that are not modified at all is around 45%.\r\nIn the case of the examples generated directly in tf with float64 the accuracy drops to around 3% and all images are modified by fgsm.\r\n\r\nI suspect that this is due to the fact that the cleverhans attacks use all float32, is there any workaround possible?\r\nWe also tried to change to float64 in the attacks.py and attacks_tf.py but not much changed, I am sure we missed something somewhere. Also in doing so, we broke other attacks methods like for example CW.\r\nThanks for any insights on this,\r\nCheers,\r\nRiccardo\r\n\r\n[weights.zip](https://github.com/tensorflow/cleverhans/files/1689118/weights.zip)\r\n If switching to flaot64 didn't change anything, then isn't it most likely some other problem? Dear iamgroot42, thanks for the answer.\r\nFocusing on the fgsm algorithm, the percentage of not changed images with cleverhans (45%) and the accuracy (50%) are very similar to the code implemented directly in tf with float32.\r\nWhen switching to float64 in tf the problem is solved. That is why I believe the float32 is the issue.\r\n\r\nNow, I managed to solve the problem changing float32 to float64 in attacks.py and attacks_tf.py, also I changed the tf.to_float (line 53 in attacks_tf.py) to y = tf.cast(tf.equal(preds, preds_max), dtype=tf.float64).\r\nIn this way I generate adversarial examples that leads to an accuracy of 5.8%. That seems better now.\r\n\r\nI wonder if there is an easy way to specify the desired accuracy in cleverhans. If not, this is something very easy to implement and would be very useful for the users.\r\nNow I need to change manually the library everytime I change accuracy, that is not ideal..\r\nI think the best way of doing this would be having the user specify the type of x and y placeholders, agree?\r\n Agreed. Letting the user specify a placeholder would be the best workaround for this. The line you changed (53 of attacks_tf.py) isn't actually involved in this code snippet. `y` is provided by `get_or_guess_labels` in attacks.py I reproduce this problem, but for both float32 *and* float64 BTW, if you want to make your placeholder, or any other kind of input tensor, just use the `generate` method rather than `generate_np`. OK, I had to edit the code in a few more places to make everything float64. With everything successfully float64, I am able to reproduce the problem at float32 and then make it go away by switching to float64. 3.7M entries of the gradient on the input get rounded to 0 for float32, none for float64 Yes, that seems to be exactly the problem I mentioned!\r\n\r\nSo, I understand from your answer you suggest me to use ```generate```. I see that in this way I can provide my own placeholder for x, and actually I could also modify ```construct_graph``` to get an extra argument, the type of the x placeholder, in this way I do not need to specify in my external code the construction of the feedable and fixed graph. But I still see some problems:\r\n1. the feedable kwargs types are specified as float32 in the init of the Attack\r\n2. I am quite sure the ```tf.to_float``` standard behaviour is return float32 and there are some instances of this method in the code\r\n3. in some ```generate``` methods there is explicit reference to float32 (e.g. DeepFool, ElasticNetMethod, CarliniWagnerL2, SaliencyMapMethod..). Not sure how critical is to use float64 for these attacks, but using generate with a float64 placeholder might generate conflicts..?\r\n\r\nI think maybe the best solution would be to pass a tf.type (maybe with a check for supported types, in the beginning only float32 and float64 I guess) to the ```Attack.__init__```, at that point can be stored in ```self.type``` and reused when needed? (in all the mentioned places 1-2-3)\r\nOr how would you advice me to proceed?\r\n\r\n I looked into this a bit more yesterday.\r\n\r\nI didn't realize that the machinery for generate_np interfered with the machinery for generate so much. I'm pretty annoyed about that, and I think the solution might just be to remove generate_np.\r\n\r\nAnother potential solution would be to try to get TensorFlow to support a floatX feature similar to what Theano has. In the meantime we could make a cleverhans.floatX and then phase it out after TensorFlow adds it.\r\n\r\n I'm going to start a conversation on cleverhans-dev Update: it looks like generate_np doesn't actually interfere with generate, though generate_np itself doesn't support float64.\r\n\r\nI suggest just sending small PRs like this one whenever you encounter something that doesn't support float64: https://github.com/tensorflow/cleverhans/pull/356 Ok, sure\r\n\r\nThanks for the feedback,\r\nI will try to send some small PRs like the one you showed in the next days I can contribute on this, I will work on it and submit a pull request..\r\nI have two questions, before I modify stuffs I want to be sure I fully understand the architecture so I will be able to properly test it:\r\n1. could you point me to a minimal working example with **generate** of the code I pasted above where i was using generate_np instead? (the very simple one-layer network just for understanding)\r\n2. Let's say I already have a tf.graph that goes from node **x** to node **logits** stored in a tf.session inside an my favourite object class of my own python module. Can I pass somehow this graph to cleverhans **generate** to generate adversarial examples for such a network? Or should I pass the whole function generating the tensorflow graph nodes from **x** to **logits**?\r\n(E.g. In my understanding for carlini wagner the graph is used to generate the output starting from a image treated as a variable\r\n self.output = model.get_logits(self.newimg) )\r\nwith fgsm seems to work instead. So in general it is not possible to just reference to the nodes I already possess and one should pass the whole graph generation function instead. Would there be possible to avoid this, and simply \"augment\" the graph I already possess in my python object session with the necessary nodes for the adversarial generation?\r\n Ok, I think for point 1 it was quite easy (correct me if there is a better way):\r\n```\r\n def nn(x):\r\n        return create_logits(x)\r\n sess = tf.Session()\r\n x = tf.placeholder(tf_dtype, shape=[None]+input_shape)\r\n nn_model = CallableModelWrapper(nn, 'logits')\r\n with sess.graph.as_default():\r\n     attack = AttackClass(nn_model, 'tf', sess, dtypestr=dtypestr)\r\n     x_adv = attack.generate(x, **params)\r\n x_adv_test=sess.run(x_adv, {x:x_test})\r\n```\r\n\r\nThe question of point 2 still remains though..  Hi,\r\nWhen I call the FastGradientMethod an error rises that : \"The model argument should be an instance of the cleverhans.model.Model class.\"\r\n\r\n<ipython-input-8-7bdd93be4f06> in <module>()\r\n        5     model = InceptionModel(num_classes)\r\n        6 \r\n----> 7     fgsm  =  FastGradientMethod(model)\r\n\r\nWhat can I do?\r\nBest,\r\nB.A. I wrap my InceptionModel with the Model class. But Another error rises that \"AttributeError: 'module' object has no attribute 'model'\" I read the tutorials. I used the same manner, but unable to solve it. This seems to be a problem with the InceptionModel class since ` cleverhans.model.Model` does not have a model attribute This is my model class:\r\n```\r\nclass InceptionModel(object):\r\n    def __init__(self, num_classes):\r\n        self.num_classes = num_classes\r\n        self.built = False\r\n\r\n    def __call__(self, x_input):\r\n        \"\"\"Constructs model and return probabilities for given input.\"\"\"\r\n        reuse = True if self.built else None\r\n        with slim.arg_scope(inception.inception_v3_arg_scope()):\r\n            _, end_points = inception.inception_v3(\r\n                            x_input, num_classes=self.num_classes, is_training=False,\r\n                            reuse=reuse)\r\n        self.built = True\r\n        output = end_points['Predictions']\r\n        probs = output.op.inputs[0]\r\n        return probs\r\n```\r\nAnd the code par t to attack the network:\r\n\r\n```\r\ntf.logging.set_verbosity(tf.logging.INFO)\r\n\r\nwith tf.Graph().as_default():\r\n    x_input = tf.placeholder(tf.float32, shape=batch_shape)\r\n\r\n    model = cleverhans.model.Model(InceptionModel(num_classes))\r\n\r\n    fgsm  = FastGradientMethod()\r\n    x_adv = fgsm.generate(x_input, eps=eps, clip_min=-1., clip_max=1.)\r\n\r\n    saver = tf.train.Saver(slim.get_model_variables())\r\n    session_creator = tf.train.ChiefSessionCreator(\r\n                      scaffold=tf.train.Scaffold(saver=saver),\r\n                      checkpoint_filename_with_path=checkpoint_path,\r\n                      master=tensorflow_master)\r\n\r\n    with tf.train.MonitoredSession(session_creator=session_creator) as sess:\r\n        nontargeted_images = sess.run(model, feed_dict={x_input: images})\r\n```\r\n\r\n > AttributeError                            Traceback (most recent call last)\r\n> <ipython-input-6-f20d89f9976f> in <module>()\r\n>       4     x_input = tf.placeholder(tf.float32, shape=batch_shape)\r\n>       5 \r\n> ----> 6     model = cleverhans.model.Model(InceptionModel(num_classes))\r\n>       7 \r\n>       8     fgsm  = FastGradientMethod(model)\r\n> \r\n> AttributeError: 'module' object has no attribute 'model' Unfortunately, I don't know. I couldn't find it.  Hi,\r\nHow should I import the module and use the Model and Attacks classes?  I imported the module the way in tutorials but unable to use the model and attack class. Am I missing something?\r\n\r\nI can use attack class but unable to use model class if I import like this:\r\n`from cleverhans.attacks import FastGradientMethod` \r\n\r\nIf I use these imports\r\n```\r\nimport cleverhans.model\r\nimport cleverhans.attacks\r\n\r\nmodels= cleverhans.model.Model(InceptionModel(num_classes))\r\nfgsm  = cleverhans.attacks.FastGradientMethod(models)\r\nx_adv = fgsm.generate(x_input, eps=eps, clip_min=-1., clip_max=1.)\r\n```\r\nError:\r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-23-7a387e6b5be9> in <module>()\r\n      4     x_input = tf.placeholder(tf.float32, shape=batch_shape)\r\n      5 \r\n----> 6     models= cleverhans.model.Model(InceptionModel(num_classes))\r\n      7     fgsm  = cleverhans.attacks.FastGradientMethod(models)\r\n      8     x_adv = fgsm.generate(x_input, eps=eps, clip_min=-1., clip_max=1.)\r\n\r\nTypeError: __init__() takes 1 positional argument but 2 were given\r\n```\r\n\r\n\r\n One easier and cleaner way might be to rewrite your inception model class to inherit directly from the CleverHans model class since it's already only a wrapper for the slim model. You can look at the wrapper we included for keras in the utils_keras.py file for some guidance. hello \uff0chave you solved the problem ? I have same problem.  **from cleverhans.model import Model** \r\nIncluding this should solve the issue. **I rewrote \"class InceptionModel\"**\r\n**code:**\r\n\r\nfrom cleverhans.model import Model\r\nclass InceptionModel(Model):\r\n  \"\"\"Model class for CleverHans library.\"\"\"\r\n\r\n  def __init__(self, nb_classes):\r\n    super(InceptionModel, self).__init__(nb_classes=nb_classes,\r\n                                         needs_dummy_fprop=True)\r\n    self.built = False\r\n\r\n  def __call__(self, x_input, return_logits=False):\r\n    \"\"\"Constructs model and return probabilities for given input.\"\"\"\r\n    reuse = True if self.built else None\r\n    with slim.arg_scope(inception.inception_v3_arg_scope()):\r\n      # Inception preprocessing uses [-1, 1]-scaled input.\r\n      x_input = x_input * 2.0 - 1.0\r\n      _, end_points = inception.inception_v3(\r\n          x_input, num_classes=self.nb_classes, is_training=False,\r\n          reuse=reuse)\r\n    self.built = True\r\n    self.logits = end_points['Logits']\r\n    # Strip off the extra reshape op at the output\r\n    self.probs = end_points['Predictions'].op.inputs[0]\r\n    if return_logits:\r\n      return self.logits\r\n    else:\r\n      return self.probs\r\n\r\n  def get_logits(self, x_input):\r\n    return self(x_input, return_logits=True)\r\n\r\n  def get_probs(self, x_input):\r\n    return self(x_input)\r\n\r\n\r\ndef _top_1_accuracy(logits, labels):\r\n  return tf.reduce_mean(\r\n      tf.cast(tf.nn.in_top_k(logits, labels, 1), tf.float32))  Would there be any interest in having the cleverhans .py files converted into Jupyter notebooks? \r\n\r\nIt would assist with readability (HTML-exports and friendly formatting on GitHub!), and also give an opportunity to add annotations and illustrations rather than in-line comments. I would prefer to keep the files as .py so new users have less overhead to\nrun the tutorials, but I'm open to having new tutorials in notebooks\n\nOn Sun, Jan 28, 2018, 12:41 AM Paige Bailey <notifications@github.com>\nwrote:\n\n> Would there be any interest in having the cleverhans .py files converted\n> into Jupyter notebooks?\n>\n> It would assist with readability (HTML-exports and friendly formatting on\n> GitHub!), and also give an opportunity to add annotations and illustrations\n> rather than in-line comments.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/issues/348>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIbS9sGxU3QbzC7wBxP11uM4_CFfWk7sks5tO7Q6gaJpZM4Rvfxd>\n> .\n>\n  Following the discussion with @goodfeli , @npapernot and @catherio on my previous PR, this PR contains only example scripts that import RLAttack ( https://github.com/behzadanksu/rl-attack ) as a package.  @goodfeli sorry for the late response. Did you run it in Python 3? I'm looking into this and will let you know in a few mins, thanks.  @goodfeli seems like this issue comes up in certain Linux distros like CentOS and older RedHats (I found one mention of this happening in MacOS as well). A potential fix is to install libffi beforehand. Can you try the following (or its yum equivalent if necessary) before installing RLAttack?\r\n\r\nsudo apt-get install libffi6 libffi-dev\r\n\r\nAlso, what OS/distro are you running this on?  Thanks @catherio for linking to the medium article, very useful read. Submodules don't seem to be like a good idea for us, and an example importing the target repository would be a better option. LGTM!  The latest builds (with tf 1.1.0) are failing with the following error:\r\n```\r\n======================================================================\r\nERROR: test_get_logits_over_interval (test_utils.TestUtils)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/travis/build/tensorflow/cleverhans/tests_tf/test_utils.py\", line 97, in test_get_logits_over_interval\r\n    num_points=num_points)\r\n  File \"/home/travis/build/tensorflow/cleverhans/cleverhans/utils.py\", line 273, in get_logits_over_interval\r\n    logits = model.get_logits(lin_batch)\r\n  File \"/home/travis/build/tensorflow/cleverhans/cleverhans/utils_keras.py\", line 151, in get_logits\r\n    logits_name = self._get_logits_name()\r\n  File \"/home/travis/build/tensorflow/cleverhans/cleverhans/utils_keras.py\", line 141, in _get_logits_name\r\n    node = softmax_layer.inbound_nodes[0]\r\nAttributeError: 'Activation' object has no attribute 'inbound_nodes'\r\n----------------------------------------------------------------------\r\n```\r\n\r\nSee https://travis-ci.org/tensorflow/cleverhans/jobs/330906885 (build for https://github.com/tensorflow/cleverhans/pull/336) `inbound_nodes` got renamed to `_inbound_nodes` as of https://github.com/keras-team/keras/commit/958239c621a6be037c5f8b30be9270310735f725#diff-fe3ca734e8421a17729d0b0ea4c800ba. What's the right way to proceed?  Proposal: replace that line (which is the only use of _inbound_nodes) with a hasattr check and a deprecation warning, to avoid breaking folks who are still using older Keras closed as of #343   RLAttack added to examples. \r\n\r\nRLAttack is an interface between Cleverhans and OpenAI Baselines for experimenting with adversarial example attacks on deep Reinforcement Learning. Current version supports FGSM, Iterative, and CWL2 attacks on DQNs. \r\n\r\nThanks to Nicolas Papernot for suggesting this PR on cleverhans-dev .  Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address on your commit.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot. The email used to register you as an authorized contributor must be the email used for the Git commit.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again. If the bot doesn't comment, it means it doesn't think anything has changed.\n\n<!-- need_sender_cla --> Signed CLA CLAs look good, thanks!\n\n<!-- ok --> @npapernot @goodfeli I would appreciate your review on this :)  In the PR, I see that you are not merging any source code but rather including one of your repository as a submodule of the CleverHans repository. Is that correct? If yes, is the repo you are trying to link to this one: https://github.com/behzadanksu/rl-attack  If the purpose is just to demonstrate the attack on RL agents, I think there are easier ways than adding baseline as a submodule?\r\n\r\nFor example: \r\n- Adding a single DQN script and attack it during inference I would quite strongly advise against adding a submodule to cleverhans without a major reason to, which I haven't yet seen. The section \"The dangers we face\" in this medium post explains my thinking: https://medium.com/@porteneuve/mastering-git-submodules-34c65e940407\r\n\r\nOther options include importing rlattack as a package and including an example script showing how it's used, or merging the code into this repository. @goodfeli @npapernot @catherio @yenchenlin  Thank you for your comments, and apologies for my late response. Following your suggestions, I am preparing an example script with a detailed README file, and will submit another PR soon.  This build failure looks spurious. Going to try closing and re-opening the pull request to re-run the build. The build with tensorflow 1.1.0 is now fine, but the 1.4.1 build is failing for reasons that look real. I'll see what I can do about that (https://github.com/tensorflow/cleverhans/issues/339). Er, to clarify, I was wrong when I said tf 1.1.0 works \"fine\" - actually the build with 1.1.0 fails for a different reason, just much later in the process.\r\n\r\nNone of this has anything to do with your typofix obviously. Just happens to be revealing other issues that are preventing an auto-merge. I'll manually merge your change in a sec, and I've documented these build issues elsewhere. Included in pr #343   \r\nTrying to run the target class example using the inception_v3.ckpt checkpoint\r\n(cleverhans/examples/nips17_adversarial_competition/sample_targeted_attacks/iter_target_class/) but getting this error:\r\n\r\n```\r\nNotFoundError (see above for traceback): Tensor name \"InceptionV3/AuxLogits/Conv2d_2a_3x5/BatchNorm/beta\" not found in checkpoint files inception_v3.ckpt\r\n\t [[Node: save/RestoreV2_4 = RestoreV2[dtypes=[DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save/Const_0_0, save/RestoreV2_4/tensor_names, save/RestoreV2_4/shape_and_slices)]]\r\n```\r\n\r\n\r\nAm also receiving this same error when trying other attacks as well\r\n\r\n   @npapernot This has been sitting for a little while, are you up to take a look or triage/delegate? @AlexeyKurakin would be the best to deal with this issue, he merged most of the code and checkpoints for the adversarial competition.  From the error, it looks like the checkpoint and model definition don't match. @huntergregal I guess the error is that you are using the images with smaller size for the attack (i.e., your image size is smaller than 299x299).\r\n\r\nYour variable name is InceptionV3/AuxLogits/Conv2d_2a_3x5, while the default name stored at checkpoint is InceptionV3/AuxLogits/Conv2d_2a_5x5. You can take a look at \r\nhttps://github.com/tensorflow/models/blob/master/research/slim/nets/inception_v3.py/#L510, where the kernel size is generated by kernel_size = _reduced_kernel_size_for_small_input(aux_logits, [5, 5]), which is determined by the input size.\r\n\r\nIf this is the problem, i think there are two ways to solve it: (a) resize your image to 299x299; or (2) comments all line related to auxlogits in your model definition.\r\n  So there's good news and bad news.\n\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\n:confused: The bad news is that it appears that one or more commits were authored by someone other than the pull request submitter.  We need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that here in the pull request.\n\n*Note to project maintainer: This is a terminal state, meaning the `cla/google` commit status will not change from this State. It's up to you to confirm consent of the commit author(s) and merge this pull request when appropriate.*\n\n<!-- need_author_consent --> Re the bot failing, I think it's because I pushed the edit from github's website. It keeps making the bot fail every time I do that and there seemed to be no solutions to that last time I checked (ok to merge)    This branch implement the momentum iterative attack method, which was proposed to improve the transferability of adversarial examples and won the first places in NIPS 2017 adversarial competitions. The current implementation includes L1, L2 and L infinity attacks. I have added the tests. I've fixed the numerical instability issue in the recent commit.  This addresses the issue for better seeding  #253 .\r\nThe trick was two create two graphs since in a single graph two random variable nodes must generate different values.\r\nThere are still some repeatability issues but only GPU and of a lesser magnitude. CPU appears totally deterministic now. Yes I did, also tested keras\n\nOn Mon, Dec 11, 2017 at 10:25 PM Nicolas Papernot <notifications@github.com>\nwrote:\n\n> Did you get a chance to test the atol values on both GPU and CPU\n> thoroughly after we spoke?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/325#issuecomment-350957259>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABIc7HTFpJVmMhiA_mIx8W5-z-CCZtFTks5s_hxDgaJpZM4Q-cpS>\n> .\n>\n Thank you!  Added the utility functions for discretizing image inputs using one-hot and thermometer encoding, and add the Logit Space-Projected Gradient Ascent (LS-PGA) from the paper https://openreview.net/pdf?id=S18Su--CW. Also added an example tutorial for thermometer encoding and LSPGA. Thanks!\r\n\r\nShould I review now or after you've made some updates to get it out of WIP status? You could review for content/technical correctness, but at the moment this doesn't fit into the Cleverhans spec, hence I tagged it WIP. Can you add some documentation on how to call into these functions? For example, in ls-pga, the model argument appears different than the cleverhans standard model (this one takes a projection function as an argument, and also a reuse?). Similarly, the discretize_fn argument seems like you should be passing discretize_uniform as an argument, but ls-pga doesn't supply a levels argument.\r\n\r\nA small example of training a standard model (just plain, without adversarial training) with thermometer encoding, and then showing LS-PGA on it would be a simple way to make this much easier to understand. I added an ipython example [notebook](https://github.com/royaurko/cleverhans/blob/019fe954f6196bb99f31bd545be16b36c5213075/cleverhans/discretization/Discretization%20Example.ipynb) of how to use the discretization functions and the LS-PGA attack on discretized inputs. Hope that helps! Thanks; but it appears the code has a bug.\r\n\r\nOn line 40 you call discretize_fn with 1 argument. This is received from line 182, where discretize_fn is an argument to lspga. In the example code you call it with discretize_uniform, which expects at least two arguments, one of which must be levels (and also has a thermometer argument). \r\n\r\nIf I change L40 to \r\n`q = discretize_fn(alpha * low + (1. - alpha) * high, levels)`\r\nthen when I train, I end up with the shape of `features_disc_adv` being 192 instead of 24. This appears to be because the shape starts out as (batch_size, 32, 32, 24, 8), presumably incorrectly.\r\n\r\nAlso, I assume on the ipython notebook that the line\r\n`logits_adv = model(features_adv, is_training=phase)`\r\nshould be\r\n`logits_adv = model(features_disc_adv, is_training=phase)`\r\n\r\nEdit: I mistyped my change to L40, it's corrected above to the new line.\r\n I have been able to make the code into something that runs without crashing. It required changing L40 to:\r\n`q = discretize_fn(alpha * low + (1. - alpha) * high, levels, thermometer)`\r\n\r\nas well as changing the example script from\r\n`features_disc_adv = adv_lspga(features_disc, model, discretize_uniform`\r\nto\r\n`features_disc_adv = adv_lspga(features, model, discretize_uniform`\r\nand now it is running.\r\n\r\nThe problem now is that on an unsecured CIFAR model I've trained with thermometer encoding, using the eps=0.031, attack_step=0.01, steps=10, it only reduces the accuracy to ~60% from ~80%. Can you confirm these are the right arguments to be using? You need to set noisy_grads=False while testing, since otherwise you're attacking image + noise and not the image itself. HTH. I adapted the code to fit the cleverhans spec, I will add some tests shortly. @goodfeli are you still up to review this? it looks like it's waiting for another review pass. Following up with @catherio and @goodfeli. Looks like it still needs to be reviewed? @royaurko Can you make the changes? I'll merge afterwards  The original cleverhans assumes the clip_min and clip_max to be the same for all pixels.\r\nHowever, in some case, for example, preprocessing a image by subtracting the corresponding mean value on each pixel, the clip_min and clip_max are actually different for each pixel.\r\nThe modified code supports the mentioned new clip for four attack classes: FastGradientMethod, BasicIterativeMethod, VirtualAdversarialMethod, MadryEtAl; while SaliencyMapMethod, CarliniWagnerL2, DeepFool, ElasticNetMethod are not modified yet. Hi,\r\nI always fail at test_mnist_tutorial_tf, which also happened in Build # 1029.\r\nTheoretically, I do not change anything related to this test, but it still fails.\r\nI was testing with the original code to see if there is any chance that it is the problem of the original code.\r\nI noticed that the solution to Buid # 1029 fail was to tolerate a larger gap. Do you think it is okay to do that in my case? I tested with 3e-2 instead of 2e-2 and it succeeded. \r\n Thanks. Were you seeing the failures on Travis, your own machine, or both? It is good on my own machine. It failed only on Travis. OK, and now I see the tolerance you had to raise was for the determinism tests, not the correctness tests, so that's less likely to be important Great!\r\nThanks! I'm sorry, but I think we actually should not merge this feature.\r\n\r\nIn order to keep the code cleanly decomposed, implementations of universally applicable Attacks shouldn't need to contain logic related to specific preprocessing steps. This approach wouldn't scale to support all kinds of preprocessing like ZCA, GCN, etc. We're also likely to introduce bugs while trying to maintain attacks that have to take more complicated logic related to the mean preprocessing into account.\r\n\r\nI think the right way to use this is just to pass a tensor-valued argument to clip_min and clip_max.\r\n\r\nIn general, before starting a PR with work on a new feature, it's best to write to cleverhans-dev@googlegroups.com to make sure we agree on the new feature.  I know there is currently another open pull request for the JSMA, but I just want to share the work I have done and hopefully it can help too.\r\n\r\nMy motivation for the change is to improve the efficiency to generate adversarial examples for JSMA. With the change, the time needed for generation should be greatly reduced. I haven't done a precise measurement, but it roughly takes about 15 sec to generate 500 adversarial samples with GPU.\r\n\r\nThe change tries to keeps the same interface of the original implementation, so that no modification is needed for tutorial.\r\n\r\nI have run the tests in the test_tf and the tutorial. I think there is something wrong with the \"test_generate_np_targeted_gives_adversarial_example\" test. I tried to fix it, but I can't find a good way to do so. Maybe someone can comment on what the test is trying to do.\r\n\r\nAny comments and suggestions are appreciated. @npapernot I'm OK either way.  I quickly went through the implementation. As far as I could see, for smaller image size, this solution should be faster than mine since the graph is simpler and more vectorized.\r\n@zHiOoO Have you tested 256x256 images from ImageNet? @gongzhitaao No, I haven't tried using images with 256x256. You have a very good point. What I have done is a direct port from the original implementation. It works well for simple dataset like MNIST, but it does has memory issue for datasets with larger image size.  @npapernot I think we could close my PR #275 and work toward this submission.\r\n@zHiOoO Your code has some good idea that I want to integrate into my own implementation.  Thank you for the PR :smiley:  @npapernot I think it's ready for you to re-review @npapernot The conflict is resolved. I have also added a new parameter for JSMA to allow switching between two implementations.   ![image](https://user-images.githubusercontent.com/13933251/33177200-cb2ab282-d02f-11e7-8402-90d60b60091f.png)\r\n\r\nWhenever I try to run the run_attacks_and_defenses.py or the run_attacks_and_defenses.sh, I end up getting stuck at \"Restoring parameters from inception_v3.ckpt\" -- would anyone know how I can get past this point?\r\n\r\nThanks\r\n @AlexeyKurakin ? Could you provide some additional information about the issue.\r\n\r\n1) Did you modify the code of the attack? I yes - does it work fine with unmodified version?\r\n\r\n2) How long did you wait? It looks like you running it on CPU, and it's quite slow to run inception model on CPU. So it might be the case that your model is just running and you need to wait longer.\r\nRestoring parameters from the checkpoint may take up to a few minutes (depeding on you CPU and disk speed). After parameters are restored model starts generating adversarial examples, which may take some time on CPU\r\nTo see if your model actually doing anything, you can check output folder to see if there is any files saved there. Also you can add additional printing/logging before and after session run.\r\n  More of a nit-pick here,\r\nmodel.Model has `__metaclass__ = ABCMeta` so I'm assuming that it's to be extended before use.\r\n\r\nHowever, I installed `cleverhans` via `pip` and I am able to initiate an instance of `Model`.\r\n\r\nThis shows that the property is not implemented properly. I'm not sure what's the best way to do this,\r\nbut decorating the method we want to overload with `@abstractmethod` (cf. https://dbader.org/blog/abstract-base-classes-in-python) \r\n\r\nI'd be happy to send a PR with the changes if that's the desired behaviour.\r\n\r\nAdditionally, it would be good to mention which methods we want users to implement when extending in the docs.\r\n Great, I'll write it up. I'm new to cleverhans, so could you let me know which methods *must* be overloaded? Looks like `get_layer_names` and `fprop` are the only candidates.\r\n Closing after discussions on cleverhans-dev  Has targeted FGSM been shown to reliably work? Do you have a minimal example of it failing?\r\n\r\nFor people working on CH, maybe regard this issue as \"Verify that targeted FGSM has adequate tests and if not add them\" There's already a unit test example for targeted FGSM:\r\nhttps://github.com/tensorflow/cleverhans/blob/master/tests_tf/test_attacks.py#L158\r\n\r\nFeel free to reopen if you can provide a reusable test case. Thank you for the test, I will look at that. \r\n\r\nAttached is a simple case demonstrating targeted FGSM failure. An MNIST model is trained similarly to  Cleverhans tutorials and then targeted FGSM is performed on examples.\r\n\r\nThe script prints the target that FGSM is trying to achieve and the class of the corresponding example. These two things rarely match. \r\n\r\nThe attached script runs from the cleverhans directory.\r\n\r\n[FGSMTargetFailureExample.zip](https://github.com/tensorflow/cleverhans/files/1463115/FGSMTargetFailureExample.zip)\r\n Can I ask you two debugging questions before we look into it ourselves?\r\n\r\n1) Does untargeted FGSM work? If not, then maybe there's a problem with the way your model is integrated into CleverHans.\r\n\r\n2) Does targeted BasicIterativeMethod with several iterations work? If so, then maybe your model is robust enough to resist FGSM. Without more concrete evidence that this is a bug, I'm going to assume this just means targeted FGSM is not a very strong targeted algorithm against this model. Feel free to reopen if you find more concrete evidence that this is a software bug.  Given the atol_fac, the tests had become too loose. the new values allow 1.5% change in the train/test clean/adv accuracies except for adversarial training accuracy that is allowed to change 6%. @npapernot, thanks for the merge. Is there a reason for having different atol_fac for different TF versions? Is there a difference in the underlying seeding mechanism? The change was introduced in 7ab2a7fa4a07f3a52a49e5197b347ba78c7cb8ed. I have a commit that fails the test for TF<1.1.0. I see, thanks. I wonder whether it's better to use one loose atol_fac for\nall TF versions. PR #278 now fails the test_mnist_tutorial_tf test for\nTF<1.1.0. I suspect the tests fail not because of different behavior of\ndifferent TF versions but just due to randomness.\n\nOn Sat, Nov 4, 2017 at 4:00 AM, Nicolas Papernot <notifications@github.com>\nwrote:\n\n> The reason is that some tests were previously failing for one of the two TF\n> versions we're testing. These tests are not ideal to begin with, but before\n> we solve the reproducibility issue #253, it's going to remain a problem.\n>\n> On Fri, Nov 3, 2017, 7:45 PM Fartash Faghri <notifications@github.com>\n> wrote:\n>\n> > @npapernot <https://github.com/npapernot>, thanks for the merge. Is\n> there\n> > a reason for having different atol_fac for different TF versions? Is\n> there\n> > a difference in the underlying seeding mechanism? The change was\n> introduced\n> > in 7ab2a7f\n> > <https://github.com/tensorflow/cleverhans/commit/\n> 7ab2a7fa4a07f3a52a49e5197b347ba78c7cb8ed>.\n> > I have a commit that fails the test for TF<1.1.0.\n> >\n> > \u2014\n> > You are receiving this because you were mentioned.\n> >\n> >\n> > Reply to this email directly, view it on GitHub\n> > <https://github.com/tensorflow/cleverhans/pull/\n> 308#issuecomment-341866452>,\n> > or mute the thread\n> > <https://github.com/notifications/unsubscribe-auth/\n> AIbS9uUUWfcQcmAA2ZHF5JOFa0wFwDWcks5sy8-wgaJpZM4QRs6O>\n>\n> > .\n> >\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/308#issuecomment-341879338>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AG-A-XgYgMSHL64VJhmbUH7cknKVn1PQks5szBmfgaJpZM4QRs6O>\n> .\n>\n This causes the tests to fail on CPU on tf 1.0.1 on my MacBook Pro now.\r\n\r\n  File \"/Users/goodfellow/cleverhans/tests_tf/test_mnist_tutorial_tf.py\", line 46, in test_mnist_tutorial_tf\r\n    atol=atol_fac * 5e-3)\r\n  File \"/Users/goodfellow/cleverhans/cleverhans/devtools/checks.py\", line 29, in assertClose\r\n    assert np.allclose(x, y, *args, **kwargs), (x, y)\r\nAssertionError: (0.94540000000000002, 0.96060000000000001)\r\n-------------------- >> begin captured stdout << --------------------- As a temporary fix, I made a new PR #310 to loosen tests for TF<1.1.0.  I have not been able to successfully generate adversarial examples on the MNIST dataset when the model is trained in Keras.\r\nQuite possibly I am doing something rather silly here.\r\n\r\n\r\nThe jupyter notebook highlighting this issue is here:\r\n\r\nhttps://github.com/vinayprabhu/Lyapunov_defense/blob/master/MNIST_CW_Fail_Keras.ipynb\r\n\r\nAlso, cw_params = {'binary_search_steps': 15,\r\n             'y_target': adv_ys,\r\n             'max_iterations': 50000,\r\n             'learning_rate': 1,\r\n             'batch_size': source_samples * nb_classes if\r\n             targeted else source_samples,\r\n             'initial_const': 0.1,\r\n            'verbose':False} I haven't run the ipython notebook. What specifically goes wrong? For the MNIST  architecture and the specific image examples, (in the examples), 'Successfully generated adversarial examples on 100 of 100 instances' was a given.\r\nHowever, the number of 'Successfully generated adversarial examples' dramatically drops when the model is trained in Keras and imported into TF. \r\n\r\nWith, the CW-parameters being set at:\r\n\r\ncw = CarliniWagnerL2(model, back='tf', sess=sess)\r\ncw_params = {'binary_search_steps': 15,\r\n             'y_target': adv_ys,\r\n             'max_iterations': 50000,\r\n             'learning_rate': 1, # Now trying with higher learning rate\r\n             'batch_size': source_samples * nb_classes if\r\n             targeted else source_samples,\r\n             'initial_const': 0.1,\r\n            'verbose':False}\r\n\r\nadv = cw.generate_np(adv_inputs, **cw_params),\r\n\r\nI get:\r\n\r\n[INFO 2017-11-03 11:24:06,239 cleverhans] Constructing new graph for attack CarliniWagnerL2\r\n[DEBUG 2017-11-03 11:24:06,591 cleverhans] Running CWL2 attack on instance 0 of 100\r\n[DEBUG 2017-11-03 11:24:06,607 cleverhans]   Binary search step 0 of 15\r\n[DEBUG 2017-11-03 11:24:06,656 cleverhans]     Iteration 0 of 50000: loss=8.98 l2=0 f=0.1\r\n[DEBUG 2017-11-03 11:24:35,039 cleverhans]     Iteration 5000 of 50000: loss=9.78 l2=0.00807 f=0.1\r\n[DEBUG 2017-11-03 11:24:35,039 cleverhans]     Failed to make progress; stop early\r\n[DEBUG 2017-11-03 11:24:35,041 cleverhans]   Successfully generated adversarial examples on 12 of 100 instances.\r\n[DEBUG 2017-11-03 11:24:35,042 cleverhans]    Mean successful distortion: 0.5183\r\n[DEBUG 2017-11-03 11:24:35,043 cleverhans]   Binary search step 1 of 15\r\n[DEBUG 2017-11-03 11:24:35,048 cleverhans]     Iteration 0 of 50000: loss=87.9 l2=0 f=0.1\r\n[DEBUG 2017-11-03 11:25:04,936 cleverhans]     Iteration 5000 of 50000: loss=89.2 l2=0.0126 f=0.1\r\n[DEBUG 2017-11-03 11:25:04,938 cleverhans]     Failed to make progress; stop early\r\n[DEBUG 2017-11-03 11:25:04,940 cleverhans]   Successfully generated adversarial examples on 13 of 100 instances.\r\n[DEBUG 2017-11-03 11:25:04,941 cleverhans]    Mean successful distortion: 0.7094\r\n[DEBUG 2017-11-03 11:25:04,942 cleverhans]   Binary search step 2 of 15\r\n[DEBUG 2017-11-03 11:25:04,947 cleverhans]     Iteration 0 of 50000: loss=869 l2=0 f=0.1\r\n[DEBUG 2017-11-03 11:25:33,665 cleverhans]     Iteration 5000 of 50000: loss=945 l2=1.94 f=0.1\r\n[DEBUG 2017-11-03 11:25:33,666 cleverhans]     Failed to make progress; stop early\r\n[DEBUG 2017-11-03 11:25:33,667 cleverhans]   Successfully generated adversarial examples on 21 of 100 instances.\r\n[DEBUG 2017-11-03 11:25:33,668 cleverhans]    Mean successful distortion: 1.308\r\n[DEBUG 2017-11-03 11:25:33,669 cleverhans]   Binary search step 3 of 15\r\n[DEBUG 2017-11-03 11:25:33,674 cleverhans]     Iteration 0 of 50000: loss=7.93e+03 l2=0 f=0.1\r\n[DEBUG 2017-11-03 11:26:01,821 cleverhans]     Iteration 5000 of 50000: loss=5.9e+03 l2=7.74 f=0.1\r\n[DEBUG 2017-11-03 11:26:27,807 cleverhans]     Iteration 10000 of 50000: loss=5.95e+03 l2=8.26 f=0.1\r\n[DEBUG 2017-11-03 11:26:27,808 cleverhans]     Failed to make progress; stop early\r\n[DEBUG 2017-11-03 11:26:27,810 cleverhans]   Successfully generated adversarial examples on 29 of 100 instances.\r\n[DEBUG 2017-11-03 11:26:27,810 cleverhans]    Mean successful distortion: 1.986\r\n[DEBUG 2017-11-03 11:26:27,811 cleverhans]   Binary search step 4 of 15\r\n[DEBUG 2017-11-03 11:26:27,816 cleverhans]     Iteration 0 of 50000: loss=7.13e+04 l2=0 f=0.1\r\n[DEBUG 2017-11-03 11:26:53,880 cleverhans]     Iteration 5000 of 50000: loss=3.19e+04 l2=29.7 f=0.1\r\n[DEBUG 2017-11-03 11:27:18,578 cleverhans]     Iteration 10000 of 50000: loss=3.12e+04 l2=30.9 f=0.1\r\n[DEBUG 2017-11-03 11:27:41,984 cleverhans]     Iteration 15000 of 50000: loss=2.99e+04 l2=31.6 f=0.1\r\n[DEBUG 2017-11-03 11:28:06,907 cleverhans]     Iteration 20000 of 50000: loss=2.98e+04 l2=31.5 f=0.1\r\n[DEBUG 2017-11-03 11:28:29,756 cleverhans]     Iteration 25000 of 50000: loss=2.98e+04 l2=31.5 f=0.1\r\n[DEBUG 2017-11-03 11:28:29,757 cleverhans]     Failed to make progress; stop early\r\n[DEBUG 2017-11-03 11:28:29,758 cleverhans]   Successfully generated adversarial examples on 44 of 100 instances.\r\n[DEBUG 2017-11-03 11:28:29,759 cleverhans]    Mean successful distortion: 3.098\r\n[DEBUG 2017-11-03 11:28:29,760 cleverhans]   Binary search step 5 of 15\r\n[DEBUG 2017-11-03 11:28:29,766 cleverhans]     Iteration 0 of 50000: loss=5.67e+05 l2=0 f=0.1\r\n[DEBUG 2017-11-03 11:28:52,962 cleverhans]     Iteration 5000 of 50000: loss=2.21e+05 l2=39 f=0.1\r\n[DEBUG 2017-11-03 11:29:16,913 cleverhans]     Iteration 10000 of 50000: loss=2.18e+05 l2=39.1 f=0.1\r\n[DEBUG 2017-11-03 11:29:39,540 cleverhans]     Iteration 15000 of 50000: loss=2.15e+05 l2=39.5 f=0.1\r\n[DEBUG 2017-11-03 11:30:05,767 cleverhans]     Iteration 20000 of 50000: loss=2.15e+05 l2=39.4 f=0.1\r\n[DEBUG 2017-11-03 11:30:27,869 cleverhans]     Iteration 25000 of 50000: loss=2.15e+05 l2=39.4 f=0.1\r\n[DEBUG 2017-11-03 11:30:51,580 cleverhans]     Iteration 30000 of 50000: loss=2.14e+05 l2=39.4 f=0.1\r\n[DEBUG 2017-11-03 11:31:16,913 cleverhans]     Iteration 35000 of 50000: loss=2.15e+05 l2=39.4 f=0.1\r\n[DEBUG 2017-11-03 11:31:16,914 cleverhans]     Failed to make progress; stop early\r\n[DEBUG 2017-11-03 11:31:16,916 cleverhans]   Successfully generated adversarial examples on 50 of 100 instances.\r\n[DEBUG 2017-11-03 11:31:16,917 cleverhans]    Mean successful distortion: 3.435\r\n[DEBUG 2017-11-03 11:31:16,918 cleverhans]   Binary search step 6 of 15\r\n[DEBUG 2017-11-03 11:31:16,925 cleverhans]     Iteration 0 of 50000: loss=5.03e+06 l2=0 f=0.1\r\n[DEBUG 2017-11-03 11:31:16,926 cleverhans]     Failed to make progress; stop early\r\n[DEBUG 2017-11-03 11:31:16,928 cleverhans]   Successfully generated adversarial examples on 50 of 100 instances.\r\n[DEBUG 2017-11-03 11:31:16,929 cleverhans]    Mean successful distortion: 3.435\r\n[DEBUG 2017-11-03 11:31:16,930 cleverhans]   Binary search step 7 of 15\r\n[DEBUG 2017-11-03 11:31:16,936 cleverhans]     Iteration 0 of 50000: loss=4.99e+07 l2=0 f=0.1\r\n[DEBUG 2017-11-03 11:31:16,937 cleverhans]     Failed to make progress; stop early\r\n[DEBUG 2017-11-03 11:31:16,940 cleverhans]   Successfully generated adversarial examples on 50 of 100 instances.\r\n[DEBUG 2017-11-03 11:31:16,941 cleverhans]    Mean successful distortion: 3.435\r\n[DEBUG 2017-11-03 11:31:16,942 cleverhans]   Binary search step 8 of 15\r\n[DEBUG 2017-11-03 11:31:16,948 cleverhans]     Iteration 0 of 50000: loss=4.99e+08 l2=0 f=0.1\r\n[DEBUG 2017-11-03 11:31:16,949 cleverhans]     Failed to make progress; stop early\r\n[DEBUG 2017-11-03 11:31:16,951 cleverhans]   Successfully generated adversarial examples on 50 of 100 instances.\r\n[DEBUG 2017-11-03 11:31:16,952 cleverhans]    Mean successful distortion: 3.435\r\n[DEBUG 2017-11-03 11:31:16,954 cleverhans]   Binary search step 9 of 15\r\n[DEBUG 2017-11-03 11:31:16,959 cleverhans]     Iteration 0 of 50000: loss=4.99e+09 l2=0 f=0.1\r\n[DEBUG 2017-11-03 11:31:16,961 cleverhans]     Failed to make progress; stop early\r\n[DEBUG 2017-11-03 11:31:16,963 cleverhans]   Successfully generated adversarial examples on 50 of 100 instances.\r\n[DEBUG 2017-11-03 11:31:16,964 cleverhans]    Mean successful distortion: 3.435\r\n[DEBUG 2017-11-03 11:31:16,965 cleverhans]   Binary search step 10 of 15\r\n[DEBUG 2017-11-03 11:31:16,972 cleverhans]     Iteration 0 of 50000: loss=4.99e+10 l2=0 f=0.1\r\n[DEBUG 2017-11-03 11:31:16,973 cleverhans]     Failed to make progress; stop early\r\n[DEBUG 2017-11-03 11:31:16,975 cleverhans]   Successfully generated adversarial examples on 50 of 100 instances.\r\n[DEBUG 2017-11-03 11:31:16,976 cleverhans]    Mean successful distortion: 3.435\r\n[DEBUG 2017-11-03 11:31:16,978 cleverhans]   Binary search step 11 of 15\r\n[DEBUG 2017-11-03 11:31:16,984 cleverhans]     Iteration 0 of 50000: loss=4.99e+11 l2=0 f=0.1\r\n[DEBUG 2017-11-03 11:31:16,985 cleverhans]     Failed to make progress; stop early\r\n[DEBUG 2017-11-03 11:31:16,988 cleverhans]   Successfully generated adversarial examples on 50 of 100 instances.\r\n[DEBUG 2017-11-03 11:31:16,989 cleverhans]    Mean successful distortion: 3.435\r\n[DEBUG 2017-11-03 11:31:16,990 cleverhans]   Binary search step 12 of 15\r\n[DEBUG 2017-11-03 11:31:16,996 cleverhans]     Iteration 0 of 50000: loss=4.99e+12 l2=0 f=0.1\r\n[DEBUG 2017-11-03 11:31:16,997 cleverhans]     Failed to make progress; stop early\r\n[DEBUG 2017-11-03 11:31:16,999 cleverhans]   Successfully generated adversarial examples on 50 of 100 instances.\r\n[DEBUG 2017-11-03 11:31:17,000 cleverhans]    Mean successful distortion: 3.435\r\n[DEBUG 2017-11-03 11:31:17,001 cleverhans]   Binary search step 13 of 15\r\n[DEBUG 2017-11-03 11:31:17,007 cleverhans]     Iteration 0 of 50000: loss=4.99e+13 l2=0 f=0.1\r\n[DEBUG 2017-11-03 11:31:17,008 cleverhans]     Failed to make progress; stop early\r\n[DEBUG 2017-11-03 11:31:17,011 cleverhans]   Successfully generated adversarial examples on 50 of 100 instances.\r\n[DEBUG 2017-11-03 11:31:17,012 cleverhans]    Mean successful distortion: 3.435\r\n[DEBUG 2017-11-03 11:31:17,013 cleverhans]   Binary search step 14 of 15\r\n[DEBUG 2017-11-03 11:31:17,019 cleverhans]     Iteration 0 of 50000: loss=4.99e+11 l2=0 f=0.1\r\n[DEBUG 2017-11-03 11:31:17,020 cleverhans]     Failed to make progress; stop early\r\n[DEBUG 2017-11-03 11:31:17,023 cleverhans]   Successfully generated adversarial examples on 50 of 100 instances.\r\n[DEBUG 2017-11-03 11:31:17,023 cleverhans]    Mean successful distortion: 3.435 Thanks for the reply!\r\nI had the KerasModelWrapper in the code before when it threw up errors. I will update this reply with the errors. ![image](https://user-images.githubusercontent.com/7390549/32694090-d7a1eef6-c6eb-11e7-960f-b3876becd012.png)\r\n@npapernot I get the following tensorshape error upon using the model wrapper:\r\n\r\n\r\n###################################################################\r\n\r\n\r\n[INFO 2017-11-11 22:22:09,677 cleverhans] Constructing new graph for attack CarliniWagnerL2\r\n[DEBUG 2017-11-11 22:22:09,956 cleverhans] Running CWL2 attack on instance 0 of 100\r\n[DEBUG 2017-11-11 22:22:09,965 cleverhans]   Binary search step 0 of 1\r\n\r\nUnknownErrorTraceback (most recent call last)\r\n<ipython-input-13-e9d26acf9e1f> in <module>()\r\n     21              targeted else source_samples,\r\n     22              'initial_const': 10}\r\n---> 23 adv = cw.generate_np(adv_inputs, **cw_params)\r\n\r\n/notebooks/Deep_grebox_attacks/src/cleverhans/cleverhans/attacks.pyc in generate_np(self, x_val, **kwargs)\r\n    185             feed_dict[new_kwargs[name]] = feedable[name]\r\n    186 \r\n--> 187         return self.sess.run(x_adv, feed_dict)\r\n    188 \r\n    189     def get_or_guess_labels(self, x, kwargs):\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in run(self, fetches, feed_dict, options, run_metadata)\r\n    887     try:\r\n    888       result = self._run(None, fetches, feed_dict, options_ptr,\r\n--> 889                          run_metadata_ptr)\r\n    890       if run_metadata:\r\n    891         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _run(self, handle, fetches, feed_dict, options, run_metadata)\r\n   1118     if final_fetches or final_targets or (handle and feed_dict_tensor):\r\n   1119       results = self._do_run(handle, final_targets, final_fetches,\r\n-> 1120                              feed_dict_tensor, options, run_metadata)\r\n   1121     else:\r\n   1122       results = []\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\r\n   1315     if handle is None:\r\n   1316       return self._do_call(_run_fn, self._session, feeds, fetches, targets,\r\n-> 1317                            options, run_metadata)\r\n   1318     else:\r\n   1319       return self._do_call(_prun_fn, self._session, handle, feeds, fetches)\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _do_call(self, fn, *args)\r\n   1334         except KeyError:\r\n   1335           pass\r\n-> 1336       raise type(e)(node_def, op, message)\r\n   1337 \r\n   1338   def _extend_graph(self):\r\n\r\nUnknownError: InvalidArgumentError: Incompatible shapes: [100,10] vs. [100,128]\r\n\t [[Node: mul_15 = Mul[T=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](sub_9, model_1/flatten_1/Reshape)]]\r\n  @npapernot\r\nIs there any suggested reading/code samples you suggest to look into? Hello @npapernot ,\r\n\r\nI wrote an easy demo of using FGSM to attack MNIST model [here](https://github.com/yenchenlin/adversarial-example-tf-eager/blob/master/mnist_tutorial_tf_eager.ipynb).\r\n\r\nLet me know if this is what you are referring to. If so, I will make the code become compatible with cleverhans and submit a PR. Hello @npapernot I'll start to adapt my code and open threads on the mailing list if needed, thanks!\r\n  Hi @yenchenlin - are you working on this? It would still be helpful for us, if you're still up for it! Hi @yenchenlin - since we haven't heard from you, I'm going to re-mark this as \"help wanted\", but we would definitely still appreciate a contribution from you if you are interested. Hello @catherio , sorry for the late reply. Now I have time to work on it! I was busy in the last few months for grad school application \ud83d\ude05. Hey @yenchenlin - Let us know if you're working on this and we can mark you as the owner. Any progress here? Hi, @alexbw @goodfeli  i want to work on it, i will adapt the 6 tutorials in cleverhans_tutorials folder to work in eager mode, let me know if any thing else needs to be done. Hello @goodfeli, @npapernot, and @krishnacodes  , sorry for the late reply (in mandatory military so no internet ...)\r\n\r\nIn my tf-eager ipython notebook example [here](https://github.com/yenchenlin/adversarial-example-tf-eager/blob/master/mnist_tutorial_tf_eager.ipynb), there are two main parts which can potentially reuse the existing code in cleverhans:\r\n\r\n1. Model (block **[2]** in notebook)\r\n```\r\nclass MNISTModel(tfe.Network):\r\n...\r\n```\r\n\r\n2. FGSM (block **[5]** in notebook)\r\n```\r\ndef craft_adv(model, dataset):\r\n...\r\n```\r\n\r\nFor 1., it seems that we can only build model in eager mode either using 1) a subclass of `tfe.Network` or layers defined in `tf.keras`. In cleverhans, we now only have model building code for normal tf and native keras. Should we add new code specific for eager mode? (an example using `tf.keras` which is compatible with eager mode can be found [here](https://github.com/tensorflow/models/blob/master/official/mnist/mnist.py#L33-L86))\r\n\r\nAnd for 2., it's unclear how we can resue the existing code in `attacks_tf.py` since it is based on placeholder. However, eager mode is not compatible with placeholder. Should we just add new methods specific for eager mode in `attacks_tf.py`? Hi @npapernot i submitted a PR for this \r\nRegarding 1. A subclass of cleverhans.model.Model is created for eager models.\r\nRegarding 2. A new attacks_eager is added (existing attacks run through session using feed_dict making it too hard to adapt.)\r\n\r\nThe new eager code is passing all the previous unit tests.(PR)\r\nBut test cases i wrote for eager execution are throwing an error in the travis virtual env.\r\nDetails: ValueError: tf.enable_eager_execution must be called at program startup.\r\nTravis logs : [travis logs](https://travis-ci.org/tensorflow/cleverhans/jobs/394798926) \r\n\r\ni couldn't reproduce the error in my local machine.(and tests are running without any error.)\r\nif anyone can please run the these tests [unit tests for eager exec](https://drive.google.com/drive/folders/1rJOcvJueyxcx1po-nsr4J0Gz5256MIvI?usp=sharing) and reproduce the error on travis it will be very helpful.\r\n\r\nIf the error is not reproducible, is it likely that travis env has a issue with eager exec ?, \r\nsomeone faced the same issue with jupyter notebook [similar issue](https://github.com/tensorflow/tensorflow/issues/18304).   Thanks Nicolas for the comments. I addressed them above. Tests are failing on the mnist_tutorial_tf which is untouched by this PR. Looks like the atol_fac for Tensorflow=1.1.0 is too tight. Or maybe the tutorial needs better seeding. Thanks, @npapernot. Tests have passed.  Quick fix for executing Madry PGD in the targeted case. \r\n\r\nQuick question: As proposed in the 'Delving into Transferable Adversarial Examples' paper, executing attacks on an ensemble models normally generates more readily transferable adversarial examples. For some tests I'm doing, I've modified the Cleverhans attacks I've been using to rather than attack a single model, attack a list of models. Therefore, if you wanted to execute a simple attack on a single model, you would pass that model in as a one-element list. \r\n\r\nWould this code be of interest to be integrated into Cleverhans? More generally, I do think code which makes it easier to perform attacks on an ensemble of models should be integrated.   [This](https://github.com/tensorflow/cleverhans/blob/master/cleverhans/attacks_tf.py#L943) line selects 'batch_size' number of examples. However, the batch size is defined for the class object and because of tensor value substitution, an error gets thrown if the variables gets a smaller batch.\r\n\r\nFor example, if the batch size is 64 and the function is called with 72 samples, the second iteration of the loop throws an error. \r\n\r\nOne possible workaround could be to copy the remainder data to fill the batch size and then extract the relevant data while returning. Fixed in https://github.com/tensorflow/cleverhans/pull/301 @iamgroot42 - It looks like you closed #301. Do you want to close this issue also? @nottombrown no; the issue very much exists. My PR had some conflicts and I don't have the bandwidth to look into it right now. I'll be submitting another PR with the fix soon. This is an issue shared by the C&W attack, so I'm adding @carlini to this thread. \r\n\r\nPersonally, I don't feel this issue to be very significant as I don't believe being constrained to set the batch_size to a number perfectly divisble by num_samples (for Non-Targeted Attack) or num_samples * num_classes (for Targeted Attack) makes it difficult to find a batch_size which works for the user's desires. Additionally, if batch_size=1 isn't ideal as speed is an issue, setting batch_size to num_samples (for Non-Targeted Attack) or num_samples * num_classes (for Targeted Attack) still yields good attack performance. \r\n\r\nIf the users still feel this issue is significant, I'll attempt to implement a fix as soon as I can.  @ysharma1126 it's not about finding a batch_size per se. The current code expects the number of input samples to be **always** divisible by the provided batch size, which is a very bad way to go about it (what if I have 7919 examples?). Setting the batch size to 1, in this case, would be very slow, and the only other batch size you could set is 7919 itself, which I doubt would fit on a GPU for any decently-big model. I'll be implementing a fix soon (hopefully this week) to fix this issue. Thanks I merged the temporary fix (setting the batch_size to 1) in the meanwhile Something I've done as a workaround: set the batch size to something reasonable (~100), and pad the input by duplicating the last item so that it's a multiple of the batch size. I can submit a fix for this I think by getting the dynamic size of the batch at runtime. @iamgroot42 good points, yes for ease of use a fix should be made. Thanks for your efforts! Implemented a fix in https://github.com/tensorflow/cleverhans/pull/353 Issue fixed.   Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_sender_cla --> I signed it! CLAs look good, thanks!\n\n<!-- ok -->  This branch implements the CW L0 attack. It is implemented on top of the L2 attack, so some generalizations are required there. mnist_tutorial_tf is failing erroneously, it seems (I didn't touch that file). I'm not sure why, but the python 3.5 build is timing out. I will address these comments next week or so -- have a few things I need finish over the next couple of days. @carlini Any updates? No worries if not, I'm just doing a routine pass through all our pull requests to check their status. Huh, I thought I pushed a few days ago but I guess it didn't go. Let me see. It looks like the build is broken for different reasons than this PR. I'm starting to take a look now: #339 and #340  @carlini build is fixed on master now as of PR #343 , you should be able to rebase @carlini - wanted to make sure you saw my earlier message. the build is passing now, so if you want to rebase and resolve the conflict, this should be ready to merge. I'm going to close this until I have time to fix everything. I'll submit a new PR once it's ready.  The linked readthedocs url is not currently built, however it builds correctly locally and on my personal fork of this repo.\r\n\r\nIf webhooks are properly configured, merging this PR should also trigger a sphynx build at http://cleverhans.readthedocs.io/\r\n\r\nAfter checks pass, I plan to merge this in.    LGTM, feel free to merge if it makes the tests pass Just commenting to explain some of the things Nicolas and I have been discussing on hangouts to others. Travis CI is failing to run the Theano tests, CleverHans has deprecated support for Theano and will remove it entirely Nov 8, the Theano team announced they will quit developing Theano, so it seems OK to remove rather than debug problematic Theano tests.  Similar to `mnist_tutorial_tf.py` only using MadryEtAl attack Hi Angus,\r\nPlease write to cleverhans-dev before starting work on new features, to make sure you spend time only on features we plan to merge. We do not want to create more tutorials for each attack, because it is a large amount of duplicated code to maintain and test.\r\n-Ian If you'd like to work on something like a generic trainer script or a generic attack script that can run attacks on a saved model, that could be configured to give results for the Madry attack. Please free free to discuss further on cleverhans-dev. Hi Ian, that sounds like a good idea. I already have something like a generic attack script I could share. I will note to communicate on cleverhans-dev for next time.   This attack builds on the C&W L2 attack by generalizing it to the elastic-net case, where L1-oriented adversarial examples can be generated. These examples were shown to be both state-of-the-art and distinct in various attack scenarios, and more importantly, were shown to have improved transferability. \r\n\r\nPaper link: https://arxiv.org/abs/1709.04114 The build failed on the Theano versions, no clue why, but isn't that fine as Theano support will be deprecated? This looks good. Since you're a co-author of the paper, we'll rely on you to make sure it's a correct implementation of the method you developed, and we'll mostly just review for style and maintainability.\r\n\r\nCan you please add some tests? They don't need to be extremely exhaustive tests, but there should be at least one test per new class. Hi Ian,\n\nThanks. I tested my attack by replacing a few lines of code in\nmnist_tutorial_cw.py. How should I add those results as tests? Make a new\ntutorial for this attack and show the output?\n\nLet me know how best this should be done.\n\nThanks,\n\nYash Sharma\n\nOn Mon, Oct 2, 2017 at 1:45 PM, Ian Goodfellow <notifications@github.com>\nwrote:\n\n> This looks good. Since you're a co-author of the paper, we'll rely on you\n> to make sure it's a correct implementation of the method you developed, and\n> we'll mostly just review for style and maintainability.\n>\n> Can you please add some tests? They don't need to be extremely exhaustive\n> tests, but there should be at least one test per new class.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/288#issuecomment-333609689>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIk5__E_7Tnubii3QN70NIcKTLGebA_yks5soSEngaJpZM4PoBiJ>\n> .\n>\n Thanks Nicolas. Added a test, locally tested and the attack passes the test. Waiting on the build.  Another error that doesn't appear to have anything to do with my method, can you please check? Yes, it seems like that is just the test being flaky. Can you send a commit dropping the threshold for that test to .93? Sure\n\nOn Tue, Oct 3, 2017 at 2:00 PM, Ian Goodfellow <notifications@github.com>\nwrote:\n\n> Yes, it seems like that is just the test being flaky. Can you send a\n> commit dropping the threshold for that test to .93?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/288#issuecomment-333927794>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIk5_1pLmJexQqD-b0FeVNFHzRxU8BlUks5sonZEgaJpZM4PoBiJ>\n> .\n>\n So there's good news and bad news.\n\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\n:confused: The bad news is that it appears that one or more commits were authored by someone other than the pull request submitter.  We need to confirm that they're okay with their commits being contributed to this project.  Please have them confirm that here in the pull request.\n\n*Note to project maintainer: This is a terminal state, meaning the `cla/google` commit status will not change from this State. It's up to you to confirm consent of the commit author(s) and merge this pull request when appropriate.*\n\n<!-- need_author_consent -->  This attack builds on the C&W L2 attack by generalizing it to the elastic-net case, where L1-oriented adversarial examples can be generated. These examples were shown to be both state-of-the-art and distinct in various attack scenarios, and more importantly, were shown to have improved transferability.\r\n\r\nPaper link: https://arxiv.org/abs/1709.04114 We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for the commit author(s).  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA ([login here](https://cla.developers.google.com/) to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\nIn order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_author_cla -->  According to @279, it's better to notify users when `ord` value is not valid. This looks good, and any of the CleverHans team should feel free to merge it as soon as the tests pass. Two of the test jobs failed because the Theano installer failed to download MKL. I doubt that they will have any problem when rerun. Thanks @npapernot for solving the CI issue!\r\nI think this can be merged?  This attack builds on the C&W L2 attack by generalizing it to the elastic-net case, where L1-oriented adversarial examples can be generated. These examples were shown to be both state-of-the-art and distinct in various attack scenarios, and more importantly, were shown to have improved transferability. \r\n\r\nPaper link: https://arxiv.org/abs/1709.04114 We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for the commit author(s).  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA ([login here](https://cla.developers.google.com/) to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\nIn order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_author_cla --> I signed it!\n\nOn Wed, Sep 27, 2017 at 2:48 PM, googlebot <notifications@github.com> wrote:\n\n> We found a Contributor License Agreement for you (the sender of this pull\n> request), but were unable to find agreements for the commit author(s). If\n> you authored these, maybe you used a different email address in the git\n> commits than was used to sign the CLA (login here\n> <https://cla.developers.google.com/> to double check)? If these were\n> authored by someone else, then they will need to sign a CLA as well, and\n> confirm that they're okay with these being contributed to Google.\n> In order to pass this check, please resolve this problem and have the pull\n> request author add another comment and the bot will run again.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/284#issuecomment-332619325>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIk5_xH9rUz7AsHjQ_-Ful6ZvuQ3Suxcks5smphygaJpZM4PmOhr>\n> .\n>\n   It looks like there aren't any tests, can you add at least one test per new function / class? Yeah. Thanks. This PR is unfinished. I'm resolving the issues.\n\nOn Thu, Oct 5, 2017 at 12:33 PM, Yen <notifications@github.com> wrote:\n\n> *@yenchenlin* commented on this pull request.\n> ------------------------------\n>\n> In cleverhans/feat_advs.py\n> <https://github.com/tensorflow/cleverhans/pull/283#discussion_r142990386>:\n>\n> > +    # If clipping is needed, reset all values outside of [clip_min, clip_max]\n> +    if (clip_min is not None) and (clip_max is not None):\n> +        adv_x = tf.clip_by_value(adv_x, clip_min, clip_max)\n> +\n> +    return adv_x\n> +\n> +\n> +class FastFeatureGradient(Attack):\n> +\n> +    \"\"\"\n> +    This is similar to FGSM but done for the internal representations.\n> +    \"\"\"\n> +\n> +    def __init__(self, model, back='tf', sess=None):\n> +        \"\"\"\n> +        Create a FastGradientMethod instance.\n>\n> This should be Create a FastFeatureGradient instance, right?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/283#pullrequestreview-67436751>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AG-A-c3Pn5yyR2bUEkkbMFJ6XE879lhfks5spQThgaJpZM4PlLap>\n> .\n>\n Thanks for the comments. I have addressed the comments except for the one regarding writing tests. The example in `imagenet_featadvs/` is supposed to be a very basic test which is not converging to 0 right now. Let me know if you have any ideas for unit tests and if you found any bugs through reviewing. The tests are failing with \"from utils_tf import clip_eta\" getting an ImportError @npapernot thanks for the reminder. I fixed the issues and added a test. The tests fail for test_mnist_tutorial_tf.TestMNISTTutorialTF. I guess it's again due to a tight threshold. Quoting the failure here:\r\n    Traceback (most recent call last):\r\n      File \"/home/travis/build/tensorflow/cleverhans/tests_tf/test_mnist_tutorial_tf.py\", line 27, in test_mnist_tutorial_tf\r\n        self.assertLess(report.train_clean_train_adv_eval, 0.036)\r\n    AssertionError: 0.036799999999999999 not less than 0.036 Since this changes `FastGradientMethod` it does seem possible the failure is real.\r\n\r\nNotes for my future self / other people following the thread: this PR changes `FastGradientMethod` to call `clip_eta` rather than having its own version of the `clip_eta` code internally. This is a great refactor (thanks Fartash!) but I'm concerned that there's something subtly different between the two versions that we don't know about.\r\n\r\nFartash: are the tests failing on your machine too or just on Travis? It looks like they fail only for newer version of TensorFlow. Do they fail consistently or flakily? From one run of Travis it looks like we have 4 trials that all support the hypothesis that the tests fail consistently for TensorFlow > 1.1. Since they consistently passed before, this looks like something did meaningfully change in `clip_eta`.\r\n\r\n\r\n\r\n My bad for mixing multiple PRs. This PR is actually not changing the `FastGradientMethod`. It only refactors `BasicIterativeMethod` to use `clip_eta`. This should not affect the tutorial. `clip_eta` was introduced in 47d85a6d73401d60f21be0653bf7bae78b4c459b and later was moved to `utils_tf.py` in 766add490bef3fc48393b4056973f62ace3e1f55.\r\n\r\nTests don't fail on my machine. I tested with Tensorflow 1.4.0 using python 2.7.14 and 3.6.3. Are you sure the test only takes 19 seconds? The tests for this PR took up to 33 minutes to run but if I look at another currently open PR they're consistently under 26.\r\n\r\nhttps://travis-ci.org/tensorflow/cleverhans/builds/314515713?utm_source=github_status&utm_medium=notification This one is also just barely over 26 for only one of 4 runs: https://travis-ci.org/tensorflow/cleverhans/builds/314921361?utm_source=github_status&utm_medium=notification Thanks, it does look a lot faster now.\r\n\r\nUnfortunately, we now have two more examples of the tensorflow 1.1 tests failing, and by exactly the same amount of error as before:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/travis/build/tensorflow/cleverhans/tests_tf/test_mnist_tutorial_tf.py\", line 27, in test_mnist_tutorial_tf\r\n    self.assertLess(report.train_clean_train_adv_eval, 0.036)\r\nAssertionError: 0.036799999999999999 not less than 0.036\r\n\r\nSince this isn't happening to pull requests in other branches, I do think there's something unusual about this branch.\r\n\r\nOne thing you might try is to rebase your branch on top of master and run the tests locally. If the rebase gets the tests to fail locally, that would give you some more convenient signal for debugging. You'll need to push -f back to the pull request after the merge.\r\n I rebased and the tests still pass on my machine.\r\nTo make the PR simpler, I separated the part regarding `clip_eta` into a new PR #326. We will get a clue after that one is tested. Thanks! Feel free to push -f the remainder of the code to this branch. If we're lucky, it will just pass. The checks have passed. I think it is only because of randomness in the tests. The only change I made was moving part of the code to PR #326. Thanks!  Hello @npapernot ,\r\n\r\nIt seems that now the only FLAGS in `utils_tf.py` exists in function `tf_model_load`, and this function is only called in `mnist_tutorial_cw.py`.\r\n\r\nI deleted the FLAGS in function `tf_model_load` and confirmed that `mnist_tutorial_cw.py` still works fine. Does it mean we can simply add a deprecation message in function `tf_model_load` for FLAGS and completely delete FLAGS from `utils_tf.py` in the near future? @royaurko Any updates?  error in this function    \r\n        def cw_wrap(x_val, y_val):\r\n            return np.array(attack.attack(x_val, y_val), dtype=np.float32)\r\n        wrap = tf.py_func(cw_wrap, [x, labels], tf.float32)\r\n\r\n\r\npy_func not returning tensor \r\ntensorflow.python.framework.errors_impl.UnknownError: AttributeError: 'NoneType' object has no attribute 'run'\r\n\t [[Node: PyFunc = PyFunc[Tin=[DT_FLOAT, DT_FLOAT], Tout=[DT_FLOAT], token=\"pyfunc_0\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_arg_Placeholder_0_0, one_hot)]] yes that was the issue. a valid session resolves it. thank you.   Thanks. This PR is unfinished. I'm resolving the issues.\n\nOn Sun, Oct 1, 2017 at 3:09 PM, Nicolas Papernot <notifications@github.com>\nwrote:\n\n> ======================================================================\n> FAIL: Test if pep8 is respected.\n> ----------------------------------------------------------------------\n> Traceback (most recent call last):\n>   File \"/home/travis/miniconda/envs/test-environment/lib/python3.5/site-packages/nose-1.3.7-py3.5.egg/nose/case.py\", line 197, in runTest\n>     self.test(*self.arg)\n>   File \"/home/travis/build/tensorflow/cleverhans/cleverhans/devtools/tests/test_format.py\", line 45, in test_format_pep8\n>     raise AssertionError(\"PEP8 Format not respected\")\n> AssertionError: PEP8 Format not respected\n> -------------------- >> begin captured stdout << ---------------------\n> /home/travis/build/tensorflow/cleverhans/examples/multigpu_advtrain/trainer.py:21:1: W391 blank line at end of file\n> /home/travis/build/tensorflow/cleverhans/examples/multigpu_advtrain/trainer_sgpu.py:67:45: E128 continuation line under-indented for visual indent\n> /home/travis/build/tensorflow/cleverhans/examples/multigpu_advtrain/trainer_sgpu.py:71:45: E128 continuation line under-indented for visual indent\n> /home/travis/build/tensorflow/cleverhans/examples/multigpu_advtrain/manager.py:238:5: E301 expected 1 blank line, found 0\n> /home/travis/build/tensorflow/cleverhans/examples/multigpu_advtrain/manager.py:271:1: W391 blank line at end of file\n> --------------------- >> end captured stdout << ----------------------\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/278#issuecomment-333399223>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AG-A-ZioBStjZBcV2jycUz2G3AnE1yXPks5sn-N4gaJpZM4PklaA>\n> .\n>\n Let me know when I should re-review I see you pushed a few commits, should I re-review? I think I have addressed all the comments. However, the numbers I get don't\nmatch what I expect. I'm debugging it. It would greatly help if you could\nreview. It might help in figuring out what causes the mismatch of numbers.\n\nOn Fri, Oct 13, 2017 at 5:11 PM, Ian Goodfellow <notifications@github.com>\nwrote:\n\n> I see you pushed a few commits, should I re-review?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/278#issuecomment-336568588>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AG-A-RKuBiyQnDxeeQz78Dqx6XguWx4Mks5sr9IQgaJpZM4PklaA>\n> .\n>\n I just removed `run.py`. There is now a single script `run_multigpu.py` that does both single GPU run and multi-GPU and uses the new abstraction. I hope you did not spend time on `run.py`. @goodfeli This PR is ready for re-review. Thanks. Thanks for the re-review. Requested changes are now addressed. New Docstrings are added and svhn/cifar utils moved. Thanks for the merge.  I think we should keep the `Attack` class as close to abstract as possible, but we could maybe put a `clip_eta` function in `utils_tf.py`.  Completed in #305   1. This is for issue #116 \r\n2. Test cases passed, have not test the tutorial code yet.\r\n\r\nPlease let me know if you have suggestions and comments. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_sender_cla --> I signed it! CLAs look good, thanks!\n\n<!-- ok --> I think I need to rewrite large part of `mnist_tutorial_jsma.py` using the new interface. Yes, I saw the PEP8 log, weird is that it is 79 instead of 80 :rofl: .  I will update it as well as the `mnist_tutorial_jsma.py`. Why does the tutorial need to be rewritten? Changing the underlying implementation shouldn't impact the interface.\r\n\r\nAlso it would be good to benchmark the speed of the two implementations to make sure they're comparable. One of the good qualities of JSMA is it's fast. @carlini Since I change the JSMA API a bit.\r\n\r\n1. `gamma` -> `epochs`, you could either specify max epochs to run or if epochs is a floating number, it is treat as gamma and max epochs is automatically determined.\r\n2. `y_target` takes the class label(s) **not** one-hot encoded.  Rationale is that during JSMA the one-hot encoded labels are converted back to class labels and the one-hot labels are never used.\r\n3. Add `pair`, If `True`, perturb two pixels at a time, otherwise one pixel at a time.\r\n4. Add `min_proba`, denoting the minimum desired confidence for the labels to be wrongly classified.\r\n\r\nBesides, JSMA now takes a batch of images, the 2-level nested for loops in tutorials could be reduced to a single for loop. @npapernot Here are some of my thoughts\r\n1. My rationale is that if you have N pixels, with `gamma` the algorithm runs maximum N epochs.  What if you want to run more than N epochs?  And besides, `epochs` is more straightforward to me.  But yes, I agree it is subjective and debatable, if you still think `gamma` makes more sense than `epochs`,  I would change it back in the next PR.\r\n2. Yes, a deprecating warning is definitely more friendly.\r\n3. For this, it would be much more difficult.  As pointed out in your paper, the complexity is `O(n^k)` where `k` is the number of pixels to perturb at a time.  Naively you could just use loops but that will be inefficient.  Currently, the `_jsma_impl` and `_jsma2_impl` are optimized for `k=1` and `k=2` cases by vectoring the operations as much as possible in mini batches.  I could write a version for general `k` values but IMHO, it is unnecessary.  We could discuss this if you want.\r\n4. Yes, I would include a benchmark in the next PR. @npapernot Yes.  I'm actually testing a new implementation of JSMA.  The current implementation uses a `map_fn` function to simulate the batch-JSMA which is actually slow.  I'm reimplementing the `_jsma_impl` in a batched way.  Besides I'm working on some benchmarks showing that it really works as expected.  I think I will update the PR in early November. @catherio Yes. LOL A bit slow, but yes, still working on the features  `mnist_tutorial_madryetal.py` is supposed to reproduce the results of the paper: https://arxiv.org/pdf/1706.06083.pdf\r\n\r\nIt gets better results.\r\n\r\nHere are the first 10 and last 10 iterations of this command:\r\n`python mnist_tutorial_madryetal.py --clean_train False --nb_epochs 100`\r\n\r\n\r\n[INFO 2017-09-22 01:10:07,728 cleverhans] Epoch 0 took 227.005951166 seconds\r\nTest accuracy on legitimate examples: 0.9814\r\nTest accuracy on adversarial examples: 0.2328\r\n[INFO 2017-09-22 01:14:29,324 cleverhans] Epoch 1 took 225.296789885 seconds\r\nTest accuracy on legitimate examples: 0.9875\r\nTest accuracy on adversarial examples: 0.4358\r\n[INFO 2017-09-22 01:18:50,357 cleverhans] Epoch 2 took 224.643723011 seconds\r\nTest accuracy on legitimate examples: 0.9879\r\nTest accuracy on adversarial examples: 0.6959\r\n[INFO 2017-09-22 01:23:12,155 cleverhans] Epoch 3 took 225.241991997 seconds\r\nTest accuracy on legitimate examples: 0.9886\r\nTest accuracy on adversarial examples: 0.7668\r\n[INFO 2017-09-22 01:27:34,159 cleverhans] Epoch 4 took 225.454128027 seconds\r\nTest accuracy on legitimate examples: 0.9901\r\nTest accuracy on adversarial examples: 0.7875\r\n[INFO 2017-09-22 01:31:55,593 cleverhans] Epoch 5 took 225.021591902 seconds\r\nTest accuracy on legitimate examples: 0.9913\r\nTest accuracy on adversarial examples: 0.8104\r\n[INFO 2017-09-22 01:36:17,346 cleverhans] Epoch 6 took 225.302556038 seconds\r\nTest accuracy on legitimate examples: 0.9920\r\nTest accuracy on adversarial examples: 0.8072\r\n[INFO 2017-09-22 01:40:38,634 cleverhans] Epoch 7 took 224.783905029 seconds\r\nTest accuracy on legitimate examples: 0.9916\r\nTest accuracy on adversarial examples: 0.8097\r\n[INFO 2017-09-22 01:45:00,257 cleverhans] Epoch 8 took 225.015685797 seconds\r\nTest accuracy on legitimate examples: 0.9922\r\nTest accuracy on adversarial examples: 0.8171\r\n[INFO 2017-09-22 01:49:21,331 cleverhans] Epoch 9 took 224.659055948 seconds\r\nTest accuracy on legitimate examples: 0.9915\r\nTest accuracy on adversarial examples: 0.8321\r\n[INFO 2017-09-22 01:53:42,967 cleverhans] Epoch 10 took 225.024608135 seconds\r\nTest accuracy on legitimate examples: 0.9924\r\nTest accuracy on adversarial examples: 0.8631\r\n\r\n\r\n\r\n[INFO 2017-09-22 07:33:05,518 cleverhans] Epoch 90 took 223.041524172 seconds\r\nTest accuracy on legitimate examples: 0.9905\r\nTest accuracy on adversarial examples: 0.9433\r\n[INFO 2017-09-22 07:37:25,188 cleverhans] Epoch 91 took 223.353102922 seconds\r\nTest accuracy on legitimate examples: 0.9904\r\nTest accuracy on adversarial examples: 0.9438\r\n[INFO 2017-09-22 07:41:43,964 cleverhans] Epoch 92 took 222.522644043 seconds\r\nTest accuracy on legitimate examples: 0.9909\r\nTest accuracy on adversarial examples: 0.9476\r\n[INFO 2017-09-22 07:46:03,226 cleverhans] Epoch 93 took 223.163653135 seconds\r\nTest accuracy on legitimate examples: 0.9901\r\nTest accuracy on adversarial examples: 0.9436\r\n[INFO 2017-09-22 07:50:21,975 cleverhans] Epoch 94 took 222.51416111 seconds\r\nTest accuracy on legitimate examples: 0.9902\r\nTest accuracy on adversarial examples: 0.9441\r\n[INFO 2017-09-22 07:54:41,040 cleverhans] Epoch 95 took 222.864598989 seconds\r\nTest accuracy on legitimate examples: 0.9910\r\nTest accuracy on adversarial examples: 0.9451\r\n[INFO 2017-09-22 07:58:59,766 cleverhans] Epoch 96 took 222.39167881 seconds\r\nTest accuracy on legitimate examples: 0.9903\r\nTest accuracy on adversarial examples: 0.9409\r\n[INFO 2017-09-22 08:03:18,902 cleverhans] Epoch 97 took 222.829951048 seconds\r\nTest accuracy on legitimate examples: 0.9900\r\nTest accuracy on adversarial examples: 0.9391\r\n[INFO 2017-09-22 08:07:37,987 cleverhans] Epoch 98 took 222.753010988 seconds\r\nTest accuracy on legitimate examples: 0.9907\r\nTest accuracy on adversarial examples: 0.9433\r\n[INFO 2017-09-22 08:11:57,235 cleverhans] Epoch 99 took 223.244225979 seconds\r\nTest accuracy on legitimate examples: 0.9903\r\nTest accuracy on adversarial examples: 0.9418\r\n[INFO 2017-09-22 08:12:33,438 cleverhans] Completed model training. Great. Thank you.  I added two functions in cleverhans/utils.py:\r\n 1. get_logits_over_interval() to get the logits over a bounded interval\r\n 2. linear_extrapolation_plot() to plot these logits\r\n\r\nAlso added the file linear_extrapolation_plot_example.py in the example directory. I addressed your comments and added a test for the get logits function. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_sender_cla --> I think it's OK to ignore Googlebot since we know who you are and know Googlebot is mistaken, but you should fix the Travis tests. They're currently failing due to a float32 vs float64 error. I can review further once the tests pass. CLAs look good, thanks!\n\n<!-- ok -->  Yeah, it looks like we are putting the stop_gradient in the eval rather than the adversarial training algorithm.    The `source_samples` flag wasn't being used in the CarliniWagner tutorial, this PR attempts to make the tutorial more reasonable for various settings of the `viz_enabled`,`targeted`, and `source_samples` `FLAGS`. Magic numbers have also been replaced with the relevant variables where appropriate. The failed test for Python 2.7/TensorFlow 1.1.0 appears to be related to #17 and https://github.com/tensorflow/tensorflow/issues/8652 Thanks for the feedback. I actually think that the grid visualisation is reasonable for the untargeted case as shown in the following screenshot (one adversarial per corresponding clean image). I was thinking we could do something similar to the `mnist_tutorial_jsma.py` where pair_visual is used as an animation, but the adversarials are computed in a batch for the cw tutorial as opposed to one at a time so I wasn't sure it made sense here. \r\n\r\n![cleverhans _grid_visualization](https://user-images.githubusercontent.com/5000421/30674046-4b8348f8-9e45-11e7-98ea-94a6d37031ae.png)\r\n Here's a screenshot:\r\n\r\n![cleverhans _grid_visualization_screenshot_untargeted](https://user-images.githubusercontent.com/5000421/30700061-7ac4e79c-9eb4-11e7-9f2d-c001b5feebe6.png)\r\n  https://www.kaggle.com/c/nips-2017-non-targeted-adversarial-attack/discussion/39626#222159   (The tests failed)  Shouldn't it just use the tf default session when no explicit session is provided? Won't this break some existing usages of attack classes that don't require session? Ie FastGradientMethod, in nips17 examples it's currently called without session for TF. I think @rwightman is right and I assume that's why the tests are failing but I haven't looked at their output. I don't think there should be a warning. TensorFlow doesn't issue warnings when you use the default session. There's nothing wrong with using a default session.   Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_sender_cla --> I signed it! After rebasing and amending the commits, the email address now has been fixed. But there is still an error message says 'Failure: CLAs are signed, but unable to verify author consent'. Is there anything I am missing? Thanks! Thanks!  implementation of deepfool algorithm https://arxiv.org/pdf/1511.04599.pdf Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_sender_cla --> we have signed it. Sorry for the inconvenience. You need to say exactly \"I signed it!\" to or googlebot won't understand I signed it! I would vote no more tutorials, no new flags running different attacks in the existing tutorials.\r\n\r\nA whole tutorial demonstrating an attack is more work to maintain than the underlying library functionality of the attack itself.\r\n\r\nIf we add more flags to the existing tutorials to make them implement more features, they become too complicated for the purpose of being an easy-to-read document for people to learn from.\r\n\r\nIf we really want an all purpose script that can train any model or run any attack, that's not really a tutorial anymore, and we should make an official trainer script or attack generation script. I signed it! I've signed the CLA, but it says 'Failure: CLAs are signed, but unable to verify author consent', could you please tell me what am I missing? And there are few commits I pushed with email address 'bairdzhang@users.noreply.github.com', and how can I sign CLA for those commits? Thanks! I think the easiest thing might be:\r\n\r\n1) Close this PR\r\n\r\n2) Do a rebase and \"amend\" the commits using \"bairdzhang@users.noreply.github.com\" to use the right e-mail address\r\n\r\n3) Open a new PR\r\n\r\nSorry for the trouble with Googlebot  Hi, the pytorch docker requires the `--ipc=host` flag in the cmd\r\n\r\nhttps://github.com/pytorch/pytorch#docker-image\r\n\r\nAn example is `nvidia-docker run --rm -ti --ipc=host pytorch/pytorch:latest`\r\n\r\ncould you add this in the framework? yes, shouldn't I post this issue here? Yes, @npapernot is just clarifying which part of the codebase this issue is about. @AlexeyKurakin , can you take on this issue? We think this doesn't matter now that the competition is over. Also, we think competitors were able to use pytorch using their own custom containers.    @npapernot  and I discussed this today during the hackathon. Our current state of knowledge is: TensorFlow isn't deterministic so we won't be able to make CleverHans completely deterministic. There are still some things we could do to make CleverHans more deterministic, like set eigen to be single threaded. Which David?\r\n\r\nI think the main thing to do is to run the determinism tests with Eigen configured to be single-threaded. I'm not sure whether there are more sources of non-determinism in TensorFlow besides that.\r\n\r\nCleverHans will probably always be non-deterministic during real use because the underlying linear algebra primitives are non-deterministic, but we can write unit tests that check that CleverHans isn't adding new non-determinism by failing to seed RNGs. I have narrowed the problem down to a trivially small test case. The problem was consecutive calls to tf.Session() seemed to have their internal seed (it's been 2 weeks I looked at it, didn't have time since then so I'm not entirely clear).  Manually tested on various valid and invalid submissions with python2 and python3  This is more of a stack exchange style (seeking expert help) question rather than a report of a technical issue. But I thought I'd try my luck here, as you guys are the experts:\r\n\r\nMy issue is that a model being trained on FGSM examples does not learn anything. I'm fairly certain the cause of this issue lies in the details of my implementation as it differs slightly from the implementation used in the Cleverhans tutorials (see end of post), but am having trouble seeing why or how any of the details of my implementation would make any difference to the training process.\r\n\r\nThe problem is best demonstrated by comparing the output of the training function when a model is being trained on the MNIST training set and the output of the training function when a model is being trained on FGSM examples derived from the MNIST training set (I'm using keras 'fit' function rather than the functions shipped with the cleverhans package):\r\n\r\n```\r\nTraining model on MNIST:\r\n\tEpoch 1/10\r\n\t60000/60000 [==============================] - 51s - loss: 1.1707 - acc: 0.6933      \r\n\tEpoch 2/10\r\n\t60000/60000 [==============================] - 51s - loss: 0.3488 - acc: 0.8959     \r\n\tEpoch 3/10\r\n\t60000/60000 [==============================] - 51s - loss: 0.2744 - acc: 0.9192     \r\n\tEpoch 4/10\r\n\t60000/60000 [==============================] - 51s - loss: 0.2286 - acc: 0.9324     \r\n\tEpoch 5/10\r\n\t60000/60000 [==============================] - 51s - loss: 0.1948 - acc: 0.9419     \r\n\tEpoch 6/10\r\n\t60000/60000 [==============================] - 51s - loss: 0.1697 - acc: 0.9498     \r\n\tEpoch 7/10\r\n\t60000/60000 [==============================] - 51s - loss: 0.1507 - acc: 0.9547     \r\n\tEpoch 8/10\r\n\t60000/60000 [==============================] - 51s - loss: 0.1364 - acc: 0.9599     \r\n\tEpoch 9/10\r\n\t60000/60000 [==============================] - 51s - loss: 0.1240 - acc: 0.9632     \r\n\tEpoch 10/10\r\n\t60000/60000 [==============================] - 52s - loss: 0.1154 - acc: 0.9655     \r\n\tacc on MNIST test set: 0.9675\r\n```\r\n```\r\nTraining model on ~60000 FGSM examples derived from MNIST training set:\r\n\tEpoch 1/10\r\n\t57811/57811 [==============================] - 47s - loss: 116.9297 - acc: 0.0992     \r\n\tEpoch 2/10\r\n\t57811/57811 [==============================] - 47s - loss: 116.9235 - acc: 0.0649     \r\n\tEpoch 3/10\r\n\t57811/57811 [==============================] - 47s - loss: 116.9233 - acc: 0.0639     \r\n\tEpoch 4/10\r\n\t57811/57811 [==============================] - 47s - loss: 116.9232 - acc: 0.0634     \r\n\tEpoch 5/10\r\n\t57811/57811 [==============================] - 47s - loss: 116.9232 - acc: 0.0633     \r\n\tEpoch 6/10\r\n\t57811/57811 [==============================] - 47s - loss: 116.9232 - acc: 0.0635     \r\n\tEpoch 7/10\r\n\t57811/57811 [==============================] - 47s - loss: 116.9231 - acc: 0.0631     \r\n\tEpoch 8/10\r\n\t57811/57811 [==============================] - 47s - loss: 116.9231 - acc: 0.0625     \r\n\tEpoch 9/10\r\n\t57811/57811 [==============================] - 47s - loss: 116.9231 - acc: 0.0616     \r\n\tEpoch 10/10\r\n\t57811/57811 [==============================] - 47s - loss: 116.9231 - acc: 0.0623     \r\n```\r\nI do not understand why this would happen as the FGSM examples are clearly recognizable as digits, just with added adversarial noise. Any ideas why training would not be successful on the FGSM examples? \r\n\r\nSome details of my implementation that may be important to problem solution:\r\n- I am using the Keras 'fit' function instead of the model_train() and model_eval() functions used in the Cleverhans tutorials\r\n\r\n- To allow the use of the keras 'fit' function, I compile the cnn_model after initialization with \r\n ```  \r\nmodel.compile(loss='categorical_crossentropy',\r\n              optimizer='sgd',\r\n              metrics=['accuracy'])\r\n```\r\n\r\n- Instead of passing the FGSM example generator to a trainer function symbolically, as done in Cleverhans tutorials, I save the FGSM examples as numpy files, and then train the model on a dataset comprised of these saved examples.\r\n\r\nThank you,\r\nMalcolm\r\n\r\n\r\n Thank you response. I figured it out shortly after I posted: I was storing the targets of the FGSM examples as integers when in fact they were one-hot vectors. Probably should have been the first place I looked.\r\nThank you!  The bias was initialized but not used. The tests might need to be fixed because of this change. The model becomes stronger. Here are the numbers from `mnist_tutorial_tf.py` with `nb_epochs=50` before and after the change. There is a noticeable difference in the accuracy when the model is naively trained and tested against adversarial examples.\r\n\r\nWith Adversarial training\r\nLegitimate examples:\r\nBefore: 99.23 +/- 0.03\r\nAfter: 99.21 +/- 0.03\r\n\r\nAdversarial examples:\r\nBefore: 98.45 +/- 0.12\r\nAfter: 98.73 +/- 0.18\r\n\r\nWithout adversarial training\r\nLegitimate examples:\r\nBefore: 99.31 +/- 0.03\r\nAfter: 99.33 +/- 0.03\r\n\r\nAdversarial examples:\r\nBefore: 11.67 +/- 2.06\r\nAfter: 21.02 +/- 1.74  Add description of new baselines.  Here, I want to get the attack examples with SaliencyMapMethod on the ImageNet datasets based on the examples/nips17_adversarial_competition/sample_attacks/fgsm/attack_fgsm.py file.\r\n\r\nAnd I just change the following code :\r\n\r\n```\r\n   fgsm = FastGradientMethod(model)\r\n   x_adv = fgsm.generate(x_input, eps=eps, clip_min=-1., clip_max=1.)\r\n```\r\nwith:\r\n\r\n```\r\n    jsma= SaliencyMapMethod(model)\r\n    target = np.zeros((1,1000),dtype=np.float32)\r\n    target[0,50] = 1                    #here, we suppose that the target label is 50\r\n    jsma_params = {'theta': 1., 'gamma': 0.1,\r\n                   'clip_min': 0., 'clip_max': 1.,\r\n                   'y_target': target}\r\n    x_adv = jsma.generate(x_input,**jsma_params)\r\n```\r\nBut, it doesn't work.  @npapernot The error \"UnknownError (see above for traceback): exceptions.AttributeError: 'NoneType' object has no attribute 'run'\" is reported. I experienced some similar errors:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/script_ops.py\", line 82, in __call__\r\n    ret = func(*args)\r\n  File \"/usr/local/lib/python2.7/dist-packages/cleverhans-1.0.0-py2.7.egg/cleverhans/attacks.py\", line 364, in jsma_wrap\r\n    targets=None)\r\n  File \"/usr/local/lib/python2.7/dist-packages/cleverhans-1.0.0-py2.7.egg/cleverhans/attacks_tf.py\", line 355, in jsma_batch\r\n    gt = model_argmax(sess, x, pred, val)\r\n  File \"/usr/local/lib/python2.7/dist-packages/cleverhans-1.0.0-py2.7.egg/cleverhans/utils_tf.py\", line 334, in model_argmax\r\n    probabilities = sess.run(predictions, feed_dict)\r\nAttributeError: 'NoneType' object has no attribute 'run'\r\n2017-09-07 18:42:19.049038: W tensorflow/core/framework/op_kernel.cc:1152] Internal: Failed to run py callback pyfunc_0: see error log.\r\nTraceback (most recent call last):\r\n  File \"attack_salmap.py\", line 151, in <module>\r\n    tf.app.run()\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py\", line 48, in run\r\n    _sys.exit(main(_sys.argv[:1] + flags_passthrough))\r\n  File \"attack_salmap.py\", line 146, in main\r\n    adv_images = sess.run(x_adv, feed_dict={x_input: images})\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 484, in run\r\n    run_metadata=run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 820, in run\r\n    run_metadata=run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 776, in run\r\n    return self._sess.run(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 930, in run\r\n    run_metadata=run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 776, in run\r\n    return self._sess.run(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 778, in run\r\n    run_metadata_ptr)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 982, in _run\r\n    feed_dict_string, options, run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1032, in _do_run\r\n    target_list, options, run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1052, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InternalError: Failed to run py callback pyfunc_0: see error log.\r\n         [[Node: PyFunc = PyFunc[Tin=[DT_FLOAT], Tout=[DT_FLOAT], token=\"pyfunc_0\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_recv_Placeholder_0)]]\r\n\r\nCaused by op u'PyFunc', defined at:\r\n  File \"attack_salmap.py\", line 151, in <module>\r\n    tf.app.run()\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py\", line 48, in run\r\n    _sys.exit(main(_sys.argv[:1] + flags_passthrough))\r\n  File \"attack_salmap.py\", line 135, in main\r\n    x_adv = fgsm.generate(x_input, clip_min=-1., clip_max=1.)\r\n  File \"/usr/local/lib/python2.7/dist-packages/cleverhans-1.0.0-py2.7.egg/cleverhans/attacks.py\", line 367, in generate\r\n    wrap = tf.py_func(jsma_wrap, [x], tf.float32)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/script_ops.py\", line 189, in py_func\r\n    input=inp, token=token, Tout=Tout, name=name)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_script_ops.py\", line 40, in _py_func\r\n    name=name)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 768, in apply_op\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 2336, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1228, in __init__\r\n    self._traceback = _extract_stack()\r\n\r\nInternalError (see above for traceback): Failed to run py callback pyfunc_0: see error log.\r\n         [[Node: PyFunc = PyFunc[Tin=[DT_FLOAT], Tout=[DT_FLOAT], token=\"pyfunc_0\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_recv_Placeholder_0)]]\r\n```\r\n\r\nThe code is like this:\r\n\r\n```\r\n  eps = 2.0 * FLAGS.max_epsilon / 255.0\r\n  batch_shape = [FLAGS.batch_size, FLAGS.image_height, FLAGS.image_width, 3]\r\n  num_classes = 1001\r\n\r\n  tf.logging.set_verbosity(tf.logging.INFO)\r\n\r\n  with tf.Graph().as_default():\r\n    # Prepare graph\r\n    x_input = tf.placeholder(tf.float32, shape=batch_shape)\r\n\r\n    model = InceptionModel(num_classes)\r\n\r\n    salmap= SaliencyMapMethod(model)\r\n    x_adv = salmap.generate(x_input, clip_min=-1., clip_max=1.)\r\n\r\n    # Run computation\r\n    saver = tf.train.Saver(slim.get_model_variables())\r\n    session_creator = tf.train.ChiefSessionCreator(\r\n        scaffold=tf.train.Scaffold(saver=saver),\r\n        checkpoint_filename_with_path=FLAGS.checkpoint_path,\r\n        master=FLAGS.master)\r\n\r\n    with tf.train.MonitoredSession(session_creator=session_creator) as sess:\r\n      for filenames, images in load_images(FLAGS.input_dir, batch_shape):\r\n        adv_images = sess.run(x_adv, feed_dict={x_input: images})\r\n        save_images(adv_images, filenames, FLAGS.output_dir)\r\n```\r\n\r\n Thanks for the quick response and suggestion!\r\n\r\nAfter updating cleverhans to 2.0. The error is like this:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/script_ops.py\", line 82, in __call__\r\n    ret = func(*args)\r\n  File \"/root/src/cleverhans/cleverhans/attacks.py\", line 534, in jsma_wrap\r\n    y_target=None)\r\n  File \"/root/src/cleverhans/cleverhans/attacks_tf.py\", line 393, in jsma_batch\r\n    gt = model_argmax(sess, x, pred, val, feed=feed)\r\n  File \"/root/src/cleverhans/cleverhans/utils_tf.py\", line 377, in model_argmax\r\n    probabilities = sess.run(predictions, feed_dict)\r\nAttributeError: 'NoneType' object has no attribute 'run'\r\n2017-09-09 02:02:38.473482: W tensorflow/core/framework/op_kernel.cc:1152] Internal: Failed to run py callback pyfunc_0: see error log.\r\nTraceback (most recent call last):\r\n  File \"attack_salmap.py\", line 151, in <module>\r\n    tf.app.run()\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py\", line 48, in run\r\n    _sys.exit(main(_sys.argv[:1] + flags_passthrough))\r\n  File \"attack_salmap.py\", line 146, in main\r\n    adv_images = sess.run(x_adv, feed_dict={x_input: images})\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 484, in run\r\n    run_metadata=run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 820, in run\r\n    run_metadata=run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 776, in run\r\n    return self._sess.run(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 930, in run\r\n    run_metadata=run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 776, in run\r\n    return self._sess.run(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 778, in run\r\n    run_metadata_ptr)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 982, in _run\r\n    feed_dict_string, options, run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1032, in _do_run\r\n    target_list, options, run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1052, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InternalError: Failed to run py callback pyfunc_0: see error log.\r\n         [[Node: PyFunc = PyFunc[Tin=[DT_FLOAT], Tout=[DT_FLOAT], token=\"pyfunc_0\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_recv_Placeholder_0)]]\r\n \r\nCaused by op u'PyFunc', defined at:\r\n  File \"attack_salmap.py\", line 151, in <module>\r\n    tf.app.run()\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py\", line 48, in run\r\n    _sys.exit(main(_sys.argv[:1] + flags_passthrough))\r\n  File \"attack_salmap.py\", line 135, in main\r\n    x_adv = fgsm.generate(x_input, clip_min=-1., clip_max=1.)\r\n  File \"/root/src/cleverhans/cleverhans/attacks.py\", line 537, in generate\r\n    wrap = tf.py_func(jsma_wrap, [x], tf.float32)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/script_ops.py\", line 189, in py_func\r\n    input=inp, token=token, Tout=Tout, name=name)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_script_ops.py\", line 40, in _py_func\r\n    name=name)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 768, in apply_op\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 2336, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1228, in __init__\r\n    self._traceback = _extract_stack()\r\n \r\nInternalError (see above for traceback): Failed to run py callback pyfunc_0: see error log.\r\n         [[Node: PyFunc = PyFunc[Tin=[DT_FLOAT], Tout=[DT_FLOAT], token=\"pyfunc_0\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_recv_Placeholder_0)]]\r\n \r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/anaconda3/lib/python3.6/subprocess.py\", line 269, in call\r\n    return p.wait(timeout=timeout)\r\n  File \"/home/ubuntu/anaconda3/lib/python3.6/subprocess.py\", line 1439, in wait\r\n    (pid, sts) = self._try_wait(0)\r\n  File \"/home/ubuntu/anaconda3/lib/python3.6/subprocess.py\", line 1386, in _try_wait\r\n    (pid, sts) = os.waitpid(self.pid, wait_flags)\r\nKeyboardInterrupt\r\n \r\nDuring handling of the above exception, another exception occurred:\r\n \r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/cleverhans/examples/nips17_adversarial_competition/run_attacks_and_defenses.py\", line 557, in <module>\r\n    main()\r\n  File \"/home/ubuntu/cleverhans/examples/nips17_adversarial_competition/run_attacks_and_defenses.py\", line 531, in main\r\n    args.epsilon)\r\n  File \"/home/ubuntu/cleverhans/examples/nips17_adversarial_competition/run_attacks_and_defenses.py\", line 98, in run\r\n    subprocess.call(cmd)\r\n  File \"/home/ubuntu/anaconda3/lib/python3.6/subprocess.py\", line 271, in call\r\n    p.kill()\r\n  File \"/home/ubuntu/anaconda3/lib/python3.6/subprocess.py\", line 1572, in kill\r\n    self.send_signal(signal.SIGKILL)\r\n  File \"/home/ubuntu/anaconda3/lib/python3.6/subprocess.py\", line 1562, in send_signal\r\n    os.kill(self.pid, sig)\r\nPermissionError: [Errno 1] Operation not permitted\r\n\r\n```\r\n\r\n\r\n I think the reason may be when I create the SaliencyMapMethod object, I also need to pass the session object. But, I am not sure how to modify a graph after creating a session.\r\n\r\nHere is what I am trying. The following code has dimension mismatch error in jsma_batch(). The jacobian_graph() step takes more than a hour..\r\n\r\n```python\r\ndef main(_):\r\n  # Images for inception classifier are normalized to be in [-1, 1] interval,\r\n  # eps is a difference between pixels so it should be in [0, 2] interval.\r\n  # Renormalizing epsilon from [0, 255] to [0, 2].\r\n  eps = 2.0 * FLAGS.max_epsilon / 255.0\r\n  batch_shape = [FLAGS.batch_size, FLAGS.image_height, FLAGS.image_width, 3]\r\n  num_classes = 1001\r\n\r\n  from cleverhans.attacks_tf import jacobian_graph, jsma_batch\r\n\r\n  tf.logging.set_verbosity(tf.logging.INFO)\r\n\r\n  with tf.Graph().as_default() as d_graph:\r\n    # Prepare graph\r\n    x_input = tf.placeholder(tf.float32, shape=batch_shape)\r\n\r\n    model = InceptionModel(num_classes)\r\n\r\n    preds = model(x_input)\r\n    grads = jacobian_graph(preds, x_input, num_classes)\r\n\r\n    # Run computation\r\n    saver = tf.train.Saver(slim.get_model_variables())\r\n    session_creator = tf.train.ChiefSessionCreator(\r\n        scaffold=tf.train.Scaffold(saver=saver),\r\n        checkpoint_filename_with_path=FLAGS.checkpoint_path,\r\n        master=FLAGS.master)\r\n\r\n    with tf.train.MonitoredSession(session_creator=session_creator) as sess:\r\n      print(\"Session is closed:\",sess._is_closed())\r\n\r\n      for filenames, images in load_images(FLAGS.input_dir, batch_shape):\r\n\r\n        adv_images = jsma_batch(sess, x_input, preds, grads, images,\r\n                                    1, 0.1, -1,\r\n                                    1, num_classes,\r\n                                    y_target=None)\r\n\r\n        save_images(adv_images, filenames, FLAGS.output_dir)\r\n\r\n\r\ndef load_images(input_dir, batch_shape):\r\n  \"\"\"Read png images from input directory in batches.\r\n  Args:\r\n    input_dir: input directory\r\n    batch_shape: shape of minibatch array, i.e. [batch_size, height, width, 3]\r\n  Yields:\r\n    filenames: list file names without path of each image\r\n      Lenght of this list could be less than batch_size, in this case only\r\n      first few images of the result are elements of the minibatch.\r\n    images: array with all images from this batch\r\n  \"\"\"\r\n  images = np.zeros(batch_shape)\r\n  filenames = []\r\n  idx = 0\r\n  batch_size = batch_shape[0]\r\n  for filepath in tf.gfile.Glob(os.path.join(input_dir, '*.png')):\r\n    with tf.gfile.Open(filepath) as f:\r\n      image = np.array(Image.open(f).convert('RGB')).astype(np.float) / 255.0\r\n    # Images for inception classifier are normalized to be in [-1, 1] interval.\r\n    images[idx, :, :, :] = image * 2.0 - 1.0\r\n    filenames.append(os.path.basename(filepath))\r\n    idx += 1\r\n    if idx == batch_size:\r\n      yield filenames, images\r\n      filenames = []\r\n      images = np.zeros(batch_shape)\r\n      idx = 0\r\n  if idx > 0:\r\n    yield filenames, images\r\n```\r\n I experience the similar problems here. I was trying to merge CarliniWagnerL2 attack in attacks.py into examples/nips17_adversarial_competition/sample_attacks.\r\n\r\nI got the error when I keep the SessionMonitor() the same as attack_fgsm.py. However, I was getting error like uninitialized variables... Like Below\r\n\r\n    INFO:tensorflow:Restoring parameters from inception_v3.ckpt\r\n      INFO:tensorflow:Restoring parameters from inception_v3.ckpt\r\n      Traceback (most recent call last):\r\n        File \"attack_cwL2.py\", line 217, in <module>\r\n          tf.app.run()\r\n        File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/platform/app.py\", line 48, in run\r\n          _sys.exit(main(_sys.argv[:1] + flags_passthrough))\r\n        File \"attack_cwL2.py\", line 202, in main\r\n          with tf.train.MonitoredSession(session_creator=session_creator) as sess:\r\n        File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/training/monitored_session.py\", line 668, in __init__\r\n          stop_grace_period_secs=stop_grace_period_secs)\r\n        File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/training/monitored_session.py\", line 490, in __init__\r\n          self._sess = _RecoverableSession(self._coordinated_creator)\r\n        File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/training/monitored_session.py\", line 842, in __init__\r\n          _WrappedSession.__init__(self, self._create_session())\r\n        File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/training/monitored_session.py\", line 847, in _create_session\r\n          return self._sess_creator.create_session()\r\n        File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/training/monitored_session.py\", line 551, in create_session\r\n          self.tf_sess = self._session_creator.create_session()\r\n        File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/training/monitored_session.py\", line 425, in create_session\r\n          init_fn=self._scaffold.init_fn)\r\n        File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/training/session_manager.py\", line 289, in prepare_session\r\n          msg))\r\n      RuntimeError: Init operations did not make model ready for local_init.  Init op: group_deps, init fn: None, error: Variables not initialized: Variable, timg, tlab, const, beta1_power, beta2_power, Variable/Adam, Variable/Adam_1\r\n\r\n\r\nAfter some searchings in the web, one possible answer is that the program tried to run two tensorflow at the same time. Then I thought maybe tensorflow does not connect the graph defined for inception model and the graph of attacks inside CarliniWagnerL2 attacks. \r\n\r\nThen I changed the code to better resemble the mnist_tutorial_cw.py, which runs CarliniWagnerL2 attacks in mnist dataset instead. The code is below:\r\n\r\n    eps = 2.0 * FLAGS.max_epsilon / 255.0\r\n    batch_shape = [FLAGS.batch_size, FLAGS.image_height, FLAGS.image_width, 3]\r\n    num_classes = 1001\r\n\r\n    tf.logging.set_verbosity(tf.logging.INFO)\r\n\r\n    with tf.Graph().as_default():\r\n      # Prepare graph\r\n      x_input = tf.placeholder(tf.float32, shape=batch_shape)\r\n\r\n      model = InceptionModel(num_classes)\r\n\r\n      cw = CarliniWagnerL2(model)\r\n\r\n      # untargetted attacks\r\n      cw_params = {\r\n                # \"batch_size\": FLAGS.batch_size,\r\n                \"clip_min\": -1.0,\r\n                \"clip_max\": 1.0,\r\n                # 'binary_search_steps': 1,\r\n                }\r\n\r\n      x_adv = cw.generate(x_input, **cw_params)\r\n\r\n      sess = tf.Session()\r\n\r\n      # Run computation\r\n      saver = tf.train.Saver(slim.get_model_variables())\r\n\r\n      ckpt = tf.train.get_checkpoint_state(FLAGS.checkpoint_path)\r\n      if ckpt and ckpt.model_checkpoint_path:\r\n        saver.restore(sess, ckpt.model_checkpoint_path)\r\n\r\n        \r\n        \r\n      sess.run(tf.global_variables_initializer() )\r\n      for filenames, images in load_images(FLAGS.input_dir, batch_shape):\r\n        adv_images = sess.run(x_adv, feed_dict={x_input: images})\r\n        save_images(adv_images, filenames, FLAGS.output_dir)\r\n\r\nSo I restore the model explicitly myself and try to run the entire thing with sess. But I got another error below:\r\n\r\n\r\n    2017-09-14 22:07:53.570776: W tensorflow/core/framework/op_kernel.cc:1192] Unknown: AttributeError: 'NoneType' object has no attribute 'run'\r\n    Traceback (most recent call last):\r\n      File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1327, in _do_call\r\n        return fn(*args)\r\n      File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1306, in _run_fn\r\n        status, run_metadata)\r\n      File \"/usr/local/Cellar/python3/3.6.0/Frameworks/Python.framework/Versions/3.6/lib/python3.6/contextlib.py\", line 89, in __exit__\r\n        next(self.gen)\r\n      File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/framework/errors_impl.py\", line 466, in raise_exception_on_not_ok_status\r\n        pywrap_tensorflow.TF_GetCode(status))\r\n    tensorflow.python.framework.errors_impl.UnknownError: AttributeError: 'NoneType' object has no attribute 'run'\r\n    \t [[Node: PyFunc = PyFunc[Tin=[DT_FLOAT, DT_FLOAT], Tout=[DT_FLOAT], token=\"pyfunc_0\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_arg_Placeholder_0_0, _arg_Placeholder_1_0_1)]]\r\n\r\n    During handling of the above exception, another exception occurred:\r\n\r\n    Traceback (most recent call last):\r\n      File \"attack_cwL2.py\", line 217, in <module>\r\n        tf.app.run()\r\n      File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/platform/app.py\", line 48, in run\r\n        _sys.exit(main(_sys.argv[:1] + flags_passthrough))\r\n      File \"attack_cwL2.py\", line 213, in main\r\n        adv_images = sess.run(x_adv, feed_dict={x_input: images, y_input: reals})\r\n      File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 895, in run\r\n        run_metadata_ptr)\r\n      File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1124, in _run\r\n        feed_dict_tensor, options, run_metadata)\r\n      File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\r\n        options, run_metadata)\r\n      File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1340, in _do_call\r\n        raise type(e)(node_def, op, message)\r\n    tensorflow.python.framework.errors_impl.UnknownError: AttributeError: 'NoneType' object has no attribute 'run'\r\n    \t [[Node: PyFunc = PyFunc[Tin=[DT_FLOAT, DT_FLOAT], Tout=[DT_FLOAT], token=\"pyfunc_0\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_arg_Placeholder_0_0, _arg_Placeholder_1_0_1)]]\r\n\r\n    Caused by op 'PyFunc', defined at:\r\n      File \"attack_cwL2.py\", line 217, in <module>\r\n        tf.app.run()\r\n      File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/platform/app.py\", line 48, in run\r\n        _sys.exit(main(_sys.argv[:1] + flags_passthrough))\r\n      File \"attack_cwL2.py\", line 184, in main\r\n        x_adv = cw.generate(x_input, **cw_params)\r\n      File \"/Users/ximinlin/Documents/Python/malwares/cleverhans/cleverhans/attacks.py\", line 726, in generate\r\n        wrap = tf.py_func(cw_wrap, [x, labels], tf.float32)\r\n      File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/ops/script_ops.py\", line 203, in py_func\r\n        input=inp, token=token, Tout=Tout, name=name)\r\n      File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/ops/gen_script_ops.py\", line 36, in _py_func\r\n        name=name)\r\n      File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\r\n        op_def=op_def)\r\n      File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 2630, in create_op\r\n        original_op=self._default_original_op, op_def=op_def)\r\n      File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1204, in __init__\r\n        self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\n    UnknownError (see above for traceback): AttributeError: 'NoneType' object has no attribute 'run'\r\n    \t [[Node: PyFunc = PyFunc[Tin=[DT_FLOAT, DT_FLOAT], Tout=[DT_FLOAT], token=\"pyfunc_0\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_arg_Placeholder_0_0, _arg_Placeholder_1_0_1)]] \r\n\r\nI think the Nonetype is referring to sess, since I am not calling any run() in my code. So I later print out the sess.\r\n\r\n    <tensorflow.python.client.session.Session object at 0x11c653ba8>\r\n\r\nwhich is definitely not None....  @XiminLin: The .sess member of the Attack class is None, not your own. You need to create the session and pass it to the attack class as in the test_attack, TestCarliniWagnerL2 or the MINST examples...\r\n\r\nIt is definitely a bit confusing as the sess argument in the init method defaults to None since not all TF attacks require it, and none of the Theano ones do. All attacks that require it should probably be checking the precondition with an assert and/or error log. I think one, but not all of them do when I was browsing the code looking at the CW implementation... @npapernot @XiminLin \r\n\r\nI think I solve this problem by:\r\n\r\n1. use tf.Session() instead of tf.train.MonitoredSession(), so you can modify the  graph after session created\r\n2. pass session variable when initializing the attack\r\n\r\nBut the gradient graph calculation seems to take quite some time. I am considering saving it as a graph and load the graph from the file. \r\n\r\nThanks for helping! Seems that it solves my problems as well. But it takes too long to run... Thanks for helping I still got the same error as @XiminLin \r\nCan you show your working code?  Adversarially trained imagenet models are uploaded to downloads.tensorflow.org, so updating checkpoint locations accordingly  So there's good news and bad news.\n\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\n:confused: The bad news is that it appears that one or more commits were authored by someone other than the pull request submitter.  We need to confirm that they're okay with their commits being contributed to this project.  Please have them confirm that here in the pull request.\n\n*Note to project maintainer: This is a terminal state, meaning the `cla/google` commit status will not change from this State. It's up to you to confirm consent of the commit author(s) and merge this pull request when appropriate.*\n\n<!-- need_author_consent -->  Just to clarify, why  `adv = tf.stop_gradient(x + eps * tf.sign(g))` is wrong?\r\nI always had an impression that we want to treat adversarial examples as a constant (i.e. don't backprop through it for adversarial training) and that's the purpose of tf.stop_gradient  When the model's prediction is used instead of true labels, it makes more sense to do `stop_gradient(pred)`.\r\n\r\nThis can be fixed by doing `stop_gradient` after these lines:\r\nhttps://github.com/tensorflow/cleverhans/blob/master/cleverhans/attacks.py#L391\r\nhttps://github.com/tensorflow/cleverhans/blob/master/cleverhans/attacks.py#L208\r\nhttps://github.com/tensorflow/cleverhans/blob/master/cleverhans/attacks_tf.py#L54  Addressing #232. Running `mnist_blackbox.py` and `mnist_tutorial_tf.py` the numbers were in the range of .5%. To be specific about the change in accuracy, I ran the scripts `mnist_blackbox.py` and `mnist_tutorial_tf.py` 4 times before and after the change. The change to the mean of accuracy is within one standard deviation.\r\n\r\n`mnist_blackbox.py`\r\nLegitimate examples:\r\nBefore: 99.08+/-0.10\r\nAfter: 99.10+/-0.10\r\n\r\nAdversarial examples:\r\nBefore: 73.89+/-3.21\r\nAfter: 73.68+/-4.6\r\n\r\n`mnist_tutorial_tf.py`\r\nLegitimate examples:\r\nBefore: 99.20+/-0.05\r\nAfter: 99.24+/-0.03\r\n\r\nAdversarial examples:\r\nBefore: 98.56+/-0.21\r\nAfter: 98.49+/-0.24 The scripts were called with `nb_epochs=50`. Yes. The previous numbers were with adversarial training.\n\nAlso without adversarial training the numbers are within one standard\ndeviation.\n\nLegitimate examples:\nBefore: 99.26+/-0.02\nAfter: 99.24+/-0.03\n\nAdversarial examples:\nBefore: 15.24+/-1.27\nAfter: 15.5+/-1.44\n\nOn Fri, Aug 18, 2017 at 10:42 AM, Ian Goodfellow <notifications@github.com>\nwrote:\n\n> For mnist_tutorial_tf.py, are all of these numbers with adversarial\n> training? What happens without adversarial training?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/235#issuecomment-323416832>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AG-A-SpKtasxqC1lh4TDkWzvUH8hoDz0ks5sZcz5gaJpZM4O7Fd7>\n> .\n>\n Similar to the seeding of TenosorFlow, I set a fixed seed in the tutorials for the `random` module. This is instead of passing the seed as an argument to `model_train`.  A few minor fixes for the logger, changing messages in a few places to be slightly better. Also enable the logger for the tf example. Eh. It's probably not the cleanest part of the code, but that's how I report success/failure. It initializes to 1e10 and \"success\" will mean less than that. Probably that should be fixed, because it's a fine assumption for image tasks (a distortion of ~200 max is possible on imagenet) but may not hold in general. I can deal with that in another PR. Done  Remove use of keras from the JSMA/CW tutorials. Replace the model with the pure TF model in mnist_tutorial_tf. Move the model in that tutorial to models.py.  I don't really want this to be a replacement for Keras. I moved the MLP to the core models file because utils_keras has its own cnn_model, and this was mainly meant as a drop-in replacement for that.\r\n\r\nThat said, I can see how people might now build off of (or be be confused by) a MLP implementation in the core of cleverhans. I'd be perfectly happy moving it to the tutorials folder. Makes sense. I wonder if there's a need for using Sonnet, of if it would be possible to just nix all model-building dependencies and write it with pure tf. But yeah, that's a discussion for later.\r\n\r\nYeah, doing that now. No, not our own MLP/Layer -- just removing all specifics of libraries that help build models. CleverHans has its own Model interface now, so I don't see any need to use Keras to build a model (or Sonnet) internally.\r\n\r\nBasically, I would argue the extent of Keras in CleverHans is a KerasModelWrapper to allow the Keras <-> CleverHans interaction. Makes sense. Whoops, I forgot I never finished rewriting the black box tutorial. Will do that tomorrow. The blackbox test failed, rate was 0.69 instead of 0.7. I've adjusted the test.\r\n\r\nI would vote to remove all thresholds from these tests and just use them as \"does it crash\" test, but that's another conversation for later. Looks like I may have decreased the accuracy with the switch away from keras, now the other accuracy piece is failing. I'll look in to how that happened. Yeah ... I would just like a reproducible way to know that though. Because more often than not, the tutorials failing have just been because it's a few percent below the threshold randomly. The issue is that dropout is enabled during evaluation-time without keras handling this. I don't especially want to have to re-implement training/testing dropout enable/disable for our own MLP layer, but I will if I have to. Ian, any thoughts on how to do this easily?\r\n\r\nOtherwise I'll just add a cleverhans_learning_phase to mirror keras_learning_phase. Okay, I've removed dropout now. I don't want to decide some fairly deep architectural changes to how models exist in this PR. Alright, it's passing now. I didn't notice a difference, but I can get the stats from before and after to verify. They're identical:\r\n\r\n\r\nmaster\r\n\r\nCW: model accuracy 0.9867, distortion 3.172\r\nJSMA: model accuracy 0.9873, distortion 0.0290\r\nblackbox: 0.9882, secondary accuracy 0.837\r\n\r\nremove_keras\r\n\r\nCW: model accuracy 0.9879, distortion 3.199\r\nJSMA: model accuracy 0.0.9887, distortion 0.0288\r\nblackbox: 0.9882, secondary accuracy 0.822  Remove nb_classes argument from CW and JSMA attacks. Infer it from the shape of the result of the model. (For github: This fixes #217.)  The JSMA untargeted attack selects the target class at random, a better result can be obtained by modifying the minimization objective to make the original class more-wrong instead of a random class less-wrong.\r\n\r\nThe FGM, BIM, and CW attacks have untargeted behave in this way, and it would be more clear if JSMA behaved this way too. I would vote for calling this something different then. Or putting a docstring warning maybe. I have code that does this sitting somewhere, yeah. I agree that some kind of warning would be helpful here, I was expecting the untargeted JSMA attack to make the original class more wrong. I'd be willing to submit a PR for this once symbolic JSMA is merged.  So the attack I have is targeted by design, and the untargeted attack is just a corresponding flip-the-objective type of thing. I think we can apply that to JSMA too. This is what I did some time earlier last year when I wanted JSMA to be untargeted. It would definitely be best to try out a few things and make sure that we pick the right choice though.\r\n\r\nLet me simplify notation for github since it can't stylize math and assume JSMA to just operate over one pixel p instead of paris pq. In JSMA, for image x and target t let's define\r\n\r\na_p = (d/dx_p) Z(x)_t\r\nb_p = sum_{j != t}  (d/dx_p) Z(x)_j\r\n\r\nSo that to perform JSMA, we optimize for argmax_p (-a_p*b_p) * (a_p > 0) * (b_p < 0)\r\n\r\nWhere the terms here correspond to:\r\n- a_p > 0 : make the target class more likely\r\n- b_p < 0: make the best other class less likely\r\n- (-a_p*b_p) : break ties by making the change biggest\r\n\r\nTo do this in an untargeted manner, we just have to set t to be the original class and flip a few signs, and instead optimize for argmax_p (a_p*b_p) * (a_p < 0) * (b_p > 0)\r\n\r\nSo that now we have \r\n- a_p > 0 : make the target (original) class LESS likely\r\n- b_p < 0: make the best other class MORE likely\r\n- (-a_p*b_p) : break ties by making the change biggest\r\n\r\nI think this worked when I did it.  I'm a bit confused by the use of \"more-wrong\" and \"less-wrong\" in this thread. Do you mean \"less probable\" and \"more probable\" respectively?  @npapernot What's the status of this issue? It has been open for a long time without activity. Do we need to more actively find someone to take the baton on this? Maybe prioritize it at the next work session? Seems fine, just going to mark it as \"help wanted\" for \"nobody has the baton\" @npapernot Can I work on this one? I think Carlini's idea will work just fine.  I'm not sure we ever settled on what the best option is here. It would probably call for a bit of research to compare the different ways to make the attack untargeted. Maybe it would make sense to build in a consistent behavior across the different targeted attacks that allows the user to select different strategies when no specific target labels are specified like choose the target label to be (a) runner up according to softmax probabilities, (b) label with smallest softmax probabilities, (c) random target label @npapernot  I think all the three options you have mentioned are heuristic based targetted attacks.  These will note be pure untargetted like how FGSM method works. Based on the Carlini's idea, I have created JSMA untargetted. It does not require a target label for generating attack. I have compared it with perturbations required in targetted format. Here is the graph.\r\n\r\n![jsma_untar](https://user-images.githubusercontent.com/2477787/42752372-4e0f9520-890b-11e8-9df5-6bfa5febd2d4.jpg)\r\nHere the min and Average Pertub are for JSMA targetted attack. These are collected by running JSMA for all targets and then selecting the minimum(excluding True Class) and averaged.\r\n\r\nThe untargetted JSMA is better compared to averaged targetted JSMA and works in purely untargetted form. I had to do very small changes to your original JSMA. I have kept it as a pull request #458 for deliberation on the right way to integrate it. Thank you Aashish for making a PR and running the experiment above, I appreciate the contribution. There are a few issues with PR #458: \r\n\r\n* we should keep the API consistent with other attacks. The `SaliencyMapMethod` class has a parameter called `y_target` that can be used to trigger the untargeted attack when it is set to `None`.\r\n* a lot of the code for `jsma_symbolic_untargetted` in PR #458 is duplicated from `jsma_symbolic`. We should avoid duplicating code and instead try to merge both functions.\r\n* as mentioned previously (see #451), we should not create a new tutorial for the untargeted JSMA (file `mnist_tutorial_untar_jsma.py`) and instead modify the existing JSMA tutorial to include the untargeted behavior.\r\n\r\nGiven the amount of code that would need to be changed to address these comments, it will be easier to start the PR from scratch so I think it is easier to close this PR for now and keep all of the conversation here in one single place (if needed for future reference). This way we can discuss first how we'd like to implement this change before we work on a new PR.\r\n\r\nBack to the conversation we had above, there are four strategies that surfaced in the discussion to address the case where no specific target label is provided by the user to the attack class:\r\n1. minimize the probability of assigning the correct class\r\n2. maximize the probability of assigning the runner up class (the class that is originally assigned the second largest softmax probability)\r\n3. maximize the probability of assigning the least likely class (the class that is originally assigned the smallest softmax probability)\r\n4. maximize the probability of assigning a randomly chosen class (a class is selected at random for each test point attacked)\r\n\r\n(Definitions of 2-4 assume that the attack is _only_ fed correctly classified test inputs, which is a reasonable thing to do and assume in my opinion.)\r\n\r\nCurrently, the FGM, BIM, and CW attacks are following strategy 1. when no target is provided and `y_target` is set to `None`. This the strategy that Nicholas suggested a variant of the JSMA for above and that you implemented in #458. I think it makes sense to include a strategy like that to be the default behavior (when `y_target` is set to `None`) modulo some minor modifications (see below for comments on the specific strategy). \r\n\r\nI think it would also make sense to include the strategies 2-4 in all attacks. One way to do this would be to accept as a value for argument `y_target` the following three strings: `runnerup` (for strategy 2.), `leastlikely` (for strategy 3.) and `rand` (for strategy 4.). This would help with benchmarking the attacks in the targeted mode without having to specify specific targets manually for each test input. \r\n\r\nComing back to the implementation of strategy 1. for the JSMA, I agree that optimizing for argmax_p (a_p*b_p) * (a_p < 0) * (b_p > 0) is consistent with the spirit of the original targeted JSMA attack. One potential limitation is that without a specific target class, the attack might oscillate between different classes that differ from the original class before one of them is assigned a larger logit than the correct class. For this reason, I'd be interested in comparing the success rate and mean perturbation of strategies 1. and 2. on the full MNIST & CIFAR10 test sets before we set strategy to be the default untargeted strategy, i.e. the strategy followed when `y_target=None` in `SaliencyMapMethod`. This will help clarify whether that's an issue we should be concerned about or not at all. That a good suggestion yes, we could make three functions `runner_up`, `least_likely` and `random_class` that take in either a single input or a batch of inputs as well as a model and return the target classes encoded as a hot one vector or labels. @npapernot \r\nI agree with the suggestion. \r\nContinuing on the discussion. I collected Data for JSMA attack on MNIST test set. Here are the results from the experiment. On this graph, I have sorted the prediction probabilities & perturbations from the targeted attacks and identified which class the minimum perturbation belongs to. I have ignored the true class.(model prediction accuracy was 99.33).\r\n![chart1](https://user-images.githubusercontent.com/2477787/43009424-47eafb78-8c5b-11e8-991d-d94efde73829.jpg)\r\nIt was no surprise that the 1st runner_up class scored the highest but beyond that there was good spread in other classes. This means choosing 1st runner_up class as the target class will result us in the least perturbed adversarial images around ~30% of time.\r\nAlso as part of the experiment I evaluate the average perturbation for runner_up classes and compared them to the un-targeted JSMA perturbations. Here are the result.\r\n![chart2](https://user-images.githubusercontent.com/2477787/43009735-116f0b92-8c5c-11e8-80b7-a4c007b3faca.jpg)\r\nAs we can see un-targetted JSMA performs quite good on an average. I agree that there is possibility of oscillation in un-targetted attacks but the correlation between runner_up predicted class and perturbations is not high enough, resulting in inferior attacks on an average. \r\nThese results are for JSMA attacks only. Since it's an iterative attack with quite small updates, makes it good candidate to analyze perturbations. Thanks for the detailed analysis. This is sufficient evidence to start implementing strategy 1 as described above as the untargeted JSMA strategy. Could you put a PR together while addressing the comments left above?\r\n\r\nAlso, if you have enough time, it would be nice to implement in a separate PR the 3 functions for strategies 2-4 as Ian suggested in his comment. If you don't have time, I'll flag it as a feature improvement waiting for a contributor in the issue tracker. \r\n\r\nI will be offline until August 10 at which point I will take a look at the PR(s) unless someone else already approved the changes before I get back to it. @npapernot If no one is currently working on this, can I take it up? I need to decrease the probability of assigning the correct class, and then implement the three alternative strategies (2-4), right? @vikramnitin9  @npapernot  I was busy with some release.I will be submitting the pull request for the feature in a week's time. Okay  \u2026 at the end of the attack but it should be done at each step. Thanks for suggesting the test. I made sure the new test would fail if the clipping is not done right. It is explained in a comment inside the test.  As discussed earlier, a new logging framework for enabling debug messages during attack generation.  ## While I implemented jsma method with my data, I saw the perturbation features are all the same  shown bleow.\r\n\r\n##  print chosen feature every iteration. I thought it caused by all elements in scores_mask are 0s.\r\n\r\nscores_mask.shape: (140, 140)\r\nBest: 0\r\np1: 0\r\np2: 0\r\nnf 140\r\nscores_mask.shape: (140, 140)\r\nBest: 0\r\np1: 0\r\np2: 0\r\nnf 140\r\nscores_mask.shape: (140, 140)\r\nBest: 0\r\np1: 0\r\np2: 0\r\nnf 140\r\nscores_mask.shape: (140, 140)\r\nBest: 0\r\np1: 0\r\np2: 0\r\nnf 140\r\nscores_mask.shape: (140, 140)\r\nBest: 0\r\np1: 0\r\np2: 0\r\nnf 140\r\nscores_mask.shape: (140, 140)\r\nBest: 0\r\np1: 0\r\np2: 0\r\nnf 140\r\nscores_mask.shape: (140, 140)\r\nBest: 0\r\np1: 0\r\np2: 0\r\nnf 140\r\nscores_mask.shape: (140, 140)\r\nBest: 0\r\np1: 0\r\np2: 0\r\nnf 140\r\nscores_mask.shape: (140, 140)\r\nBest: 0\r\np1: 0\r\np2: 0\r\nnf 140\r\nscores_mask.shape: (140, 140)\r\nBest: 0\r\np1: 0\r\np2: 0\r\nnf 140\r\nscores_mask.shape: (140, 140)\r\nBest: 0\r\np1: 0\r\np2: 0\r\nnf 140\r\nscores_mask.shape: (140, 140)\r\nBest: 0\r\np1: 0\r\np2: 0\r\nnf 140\r\nscores_mask.shape: (140, 140)\r\nBest: 0\r\np1: 0\r\np2: 0\r\nnf 140\r\nscores_mask.shape: (140, 140)\r\nBest: 0\r\np1: 0\r\np2: 0\r\nnf 140\r\nscores_mask.shape: (140, 140)\r\nBest: 0\r\np1: 0\r\np2: 0\r\nnf 140\r\nscores_mask.shape: (140, 140)\r\nBest: 0\r\np1: 0\r\np2: 0\r\nnf 140\r\nscores_mask.shape: (140, 140)\r\nBest: 0\r\np1: 0\r\np2: 0 Sorry for the unclear description.\r\nWhat I encountered is I found some samples weren't perturbated well when I used JSMA method.\r\nI set the distortion rate as 25%. As I have 140 input features, it should iterate 17 times( assigned 34 features)  in JSMA(def jsma) as it didn't cheat the classifier(FCNN). I thought my average distortion rate would reach some point more than 4%, which is the average distortion rate I got. \r\n\r\nI dived into the code and printed each input features Saliency Map(def saliency_map) chose. Somehow  in some samples, NOT all samples, Saliency Map(def saliency_map) chose the same point, the first point(feature of index 0), all the time. While I printed the score mask(140*140), all the elements in score mask were 0s which means no derivate met the condition ((target_sum > 0) & (other_sum < 0)). I am not sure it meant to be like that or not. \r\nI am pretty sure my gradients are not all nan. I excluded the situation since I have trained a CNN with embedding layer which caused the gradients all nan in my previous experiment. \r\n\r\nHope it helps. If it is not clear enough, I'd like to provide my model and dataset.\r\nReally appreciate your work~  I tried running ex_cifar10_tf.py and noticed that the model was not learning.  That is, the printed test accuracy did not change from epoch to epoch.  Changing the learning rate from 0.1 to 0.001 appears to fix the problem.  Note, 0.001 is the learning rate used in the MNIST tutorials. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_sender_cla --> I've signed the CLA. CLAs look good, thanks!\n\n<!-- ok -->  When I run ex_cifar10_tf.py example, the model appears not to train.  That is, the printed test accuracy is 0.1 after every epoch of (non-adversarial) training.  Perhaps I am misunderstanding what this script is intended to do?  I have a branch for this and will push it some time soon.  This should let users run JSMA attacks (and all others using generate_np) on models that require more `feed_dict` parameters than just inputs.\r\n\r\nNote: I'm using the attacks_tf helpers rather than the abstract attacks interface since it doesn't seem to be compatible with the rest of my code, so I only added a test for that case, but it might be good to add more tests to verify it works with the main interface. Sure, sounds good! I'll slim down the PR so it just affects `attacks_tf`, which solves my problem. > OK to merge once the slim dependency has been removed in the test\r\n\r\nDone!  As discussed on the mailing list, use better keyword arguments for targeted attacks. This also implements targeted attacks for FGM and BIM. Pending test results, this is ready to merge.  This should give a boost when downloading the images. My PEP8 linter cried until I changed the indentation level to 4 spaces, I hope that's fine :) Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_sender_cla --> I signed it! CLAs look good, thanks!\n\n<!-- ok --> Dear @AlexeyKurakin,\r\n\r\nThanks a lot for your extensive feedback. I removed the additional dependencies and copied the code to `download_images_multiprocessed.py`, just as you said. A minor change I applied to both versions was to check first whether the output directory already exists before downloading the images into it.\r\n\r\nBest Regards,\r\nWilli Thanks again for your feedback!\r\nNow, I'm checking whether `output_dir` is a relative or absolute path and handle that accordingly. The multi-threading version was merged into the original download_images file and a flag was added. The README was adapted correspondingly. Sorry for the delay.\r\nI was too busy with evaluation of the first round of the competition, that's why didn't update this PR.\r\nI have few more minor comments which I will post soon. @npapernot I'm sorry about not implementing the feedback on time and not answering your question. That was a busy month... I'd be very happy if you could reopen this PR again and have a look at the changes once again I just pushed :)  On downloading the images I got this warning for image 486,\r\n\r\n> Downloaded 486 images/home/shpeley/miniconda3/lib/python3.6/site-packages/PIL/Image.py:2438: DecompressionBombWarning: Image size (102638475 pixels) exceeds limit of 89478485 pixels, could be decompression bomb DOS attack.\r\n  DecompressionBombWarning)\r\n\r\nand also this warning,\r\n\r\n> Downloaded 989 images/home/shpeley/miniconda3/lib/python3.6/site-packages/PIL/TiffImagePlugin.py:709: UserWarning: Corrupt EXIF data.  Expecting to read 12 bytes but only got 10. \r\n  warnings.warn(str(msg))\r\n\r\nYet when I check the files with `ls dataset/images -l` there's no apparent file size issues. \r\n\r\nUsing `ls dataset/images | wc -l` shows a count of 1000 files, so no files are missing.\r\n\r\nRemoving the `images` directory and reinstalling gave the same errors. I'm using python 3.6.1 and pillow 4.2.1\r\n\r\n I suppose this is related to the adversarial examples competition for NIPS? If yes, @AlexeyKurakin might have the answer to your problem Yes. These are the images installed through the download_data.sh script in the examples/nips17_adversarial_competition/ folder. Looking at dev_dataset.csv, image 486 has this data.\r\n\r\n> ImageId\tURL\tx1\ty1\tx2\ty2\tTrueLabel\tTargetClass\tOriginalLandingURL\r\nad43e858c614db4d\thttps://c1.staticflickr.com/9/8263/28394550932_d93637d26b_o.jpg\t0.0\t0.25\t0.5625\t1.0\t968\t71\thttps://flickr.com/7831824@N04/28394550932\r\n\r\nThis is the photo cropped and scaled from the images folder.\r\n![ad43e858c614db4d](https://user-images.githubusercontent.com/18505950/28491372-5c1b8ee0-6ead-11e7-93b7-ebc05aba6533.png)\r\n\r\nIf that's how the cropping and rotation were intended, the image came out fine. There was definitely nothing which would blow up the number of pixels for a DOS attack. Perhaps this error is new in pillow 4.2.1?\r\n As a separate issue, if that's not the cropping and rotation you're looking for then the `download_image()` function in `download_images.py` needs to read the exif rotational data and rotate the image if needed before applying crop and resize.  New L2 attack implementation from \"Towards Evaluating the Robustness of Neural Networks\".\r\n\r\nCommits are cherry-picked from #156. Thanks a lot for the PR Nicholas, I left a few comments for the first part of the code and will take a look again when you got a chance to make the edits (but I suspect the other files are more straightforward from the quick glance I took). The tests are failing because of the two following `pep8` errors:\r\n\r\n```\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:556:72: W291 trailing whitespace\r\n/home/travis/build/tensorflow/cleverhans/cleverhans/attacks.py:577:77: W291 trailing whitespace\r\n``` I have a fix for those pep8 errors, along with removing the attacks_tf.py extra class to make the code cleaner. If not done tonight, will be done tomorrow. Re standardizing on \"targeted\", \"y\", etc., do we maybe want to make targeted and non-targeted attacks official part of the Attack interface?\r\n So there's good news and bad news.\n\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\n:confused: The bad news is that it appears that one or more commits were authored by someone other than the pull request submitter.  We need to confirm that they're okay with their commits being contributed to this project.  Please have them confirm that here in the pull request.\n\n*Note to project maintainer: This is a terminal state, meaning the `cla/google` commit status will not change from this state. It's up to you to confirm consent of the commit author(s) and merge this pull request when appropriate.*\n\n<!-- need_author_consent --> CLAs look good, thanks!\n\n<!-- ok --> Rebase seems to have slightly confused googlebot.\r\n\r\nUnless there's anything else, I'm happy with the current state of the commit. The final possible change I have in mind would be to remove nb_classes and just figure it out based on the model, but I think I will do that in a separate PR so I can fix JSMA too.  This is outside of the cleverhans/ or tutorials/ folders, LGTM  I run the tutorial code called mnist_blackbox.py, however the result is not the expected for the test accuracy of oracle on adversarial generated using the substitute is 0.85096. It  seems the adversarial examples have little effect on the test accuracy. Has anyone else meet this problem? By the way, the version of tensorflow I used is 1.2.1. I think it's not the problem of tensorflow.\r\n\r\n```\r\nSuccessfully downloaded train-images-idx3-ubyte.gz 9912422 bytes.\r\nExtracting /tmp/train-images-idx3-ubyte.gz\r\nSuccessfully downloaded train-labels-idx1-ubyte.gz 28881 bytes.\r\nExtracting /tmp/train-labels-idx1-ubyte.gz\r\nSuccessfully downloaded t10k-images-idx3-ubyte.gz 1648877 bytes.\r\nExtracting /tmp/t10k-images-idx3-ubyte.gz\r\nSuccessfully downloaded t10k-labels-idx1-ubyte.gz 4542 bytes.\r\nExtracting /tmp/t10k-labels-idx1-ubyte.gz\r\nX_train shape: (60000, 28, 28, 1)\r\nX_test shape: (10000, 28, 28, 1)\r\nPreparing the black-box model.\r\nDefined TensorFlow model graph.\r\nCompleted model training.\r\nTest accuracy of black-box on legitimate test examples: 0.989746192155\r\nTraining the substitute model.\r\nDefined TensorFlow model graph for the substitute.\r\nSubstitute training epoch #0\r\nCompleted model training.\r\nAugmenting substitute training data.\r\nLabeling substitute training data.\r\nSubstitute training epoch #1\r\nCompleted model training.\r\nAugmenting substitute training data.\r\nLabeling substitute training data.\r\nSubstitute training epoch #2\r\nCompleted model training.\r\nAugmenting substitute training data.\r\nLabeling substitute training data.\r\nSubstitute training epoch #3\r\nCompleted model training.\r\nAugmenting substitute training data.\r\nLabeling substitute training data.\r\nSubstitute training epoch #4\r\nCompleted model training.\r\nAugmenting substitute training data.\r\nLabeling substitute training data.\r\nSubstitute training epoch #5\r\nCompleted model training.\r\nTest accuracy of oracle on adversarial examples generated using the substitute: 0.850964466594\r\n``` Yes, there is a related issue raised #176 . Switched to the Adam optimizer has resulted this drop in accuracy. Using Adadelta will get you better results, a test accuracy of 0.497 on the adversarial samples. Something will be done about this soon. Yes, I might rewrite the tutorial later to show how transferability is affected by the different architecture choices (e.g., including convolutions vs. not including any). But I have a note in my todo list to do this, it's not necessary to keep the issue open.  all other code has 2 spaces I don't have a strong opinion, but PEP8 says python should have 4 spaces (and all non-google python code I'm aware of uses 4). Do you see any benefits of going to 2 spaces? My bad. This was a mistake, I meant to say that most of the code base has 4 spaces, but the tutorial has 2 spaces. \r\n\r\nI don't have a preference towards 2 or 4 spaces and am happy to use either.   see #170 I am currently working on it. For the MNIST tutorials, we can increase the adversarial examples after adversarial training from 0.07 to 0.70.\r\nHowever, I just realized that switching to Adam messed up the blackbox tutorial. Originally, test accuracy of oracle on samples generated by substitute was roughly 0.5, but switching to Adam has actually made that worse, it is now a little over 0.8. @abhibhav14  Did you make any progress on this? \r\n\r\nIf not, I'll probably make a PR soon to address this issue because some of the tests are more frequently flaky because of the new optimizers For each of the tests, I have reassessed the accuracies and made a pull request at #197 . For the blackbox attack, the accuracy of the blackbox on the adversarial examples in the test is quite low, since the blackbox network is trained on a limited set on a few epochs. However, I still have not been able to fix the tutorial. I tried doubling the holdout, but this barely decreases the accuracy by about 0.05 while taking up double the time as before. Running the test on the black-box tutorial is hard because it is expensive to do the data augmentation. One way to make the test more representative might be to make the black-box and substitute models more similar in the tutorial itself. I'm not sure this is the way we want to go though, so the tutorial doesn't loose generality.  The model we get is quite a bit more accurate with Adam, reaching 0.9933 compared to the 0.9774 of the current model, but at the cost of accuracy on the adversarial samples, which goes up from 0.0124 to 0.0277, all on MNIST. The loss function itself probably becomes zero for some inputs, which causes the gradient sign method to fail more. The above was after 6 epochs.\r\nI am getting variation over run. In the end, after the adversarial training I get 0.9614 accuracy on the adversarial samples.\r\nAnd yeah, the model is not hitting machine zero in this case. using the original Adadelta: before training - 0.013 and after training 0.56\r\nusing adam: before training - 0.028 and after training 0.96\r\nAdam seems overall better. I will run everything a couple of more times to make sure the trend continues, then send one in. @goodfeli Everything checks out fine, I have made a PR #171 where I made the change to the utils_tf and also all the relevant tutorials. #171 was merged, so it looks like we can close this Should we increase the values in the tests to match? For example, right now the test_mnist_tutorial_tf just expects adv_train_adv_eval to be greater than 0.06, but we can now increase this by a bit. Good catch, I opened #176 to not forget about this  The pull request is to address the problem of [\"How to save and load model? #139\"](https://github.com/tensorflow/cleverhans/issues/139) Ok now the CLA check passed, but the tests are broken because the tutorial should receive the flag values as optional arguments of the `mnist_tutorial` function and not through `FLAGS` directly. Why did you close this @shenqixiaojiang ? Sorry,I'm new to the Pull Request of github. \r\nIf the close operation had bad effect, I will be very sorry for this.\r\n@npapernot   These tests are really slow to run, flakey, and should be replaced by unit tests of each individual method. Given that #155 cut testing time to about 12mn, I'm going to close this for now. Once unit test have a better coverage of the code base, we can decrease the test time even more by further reducing the problem size of tutorial tests.  So there's good news and bad news.\n\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\n:confused: The bad news is that it appears that one or more commits were authored by someone other than the pull request submitter.  We need to confirm that they're okay with their commits being contributed to this project.  Please have them confirm that here in the pull request.\n\n*Note to project maintainer: This is a terminal state, meaning the `cla/google` commit status will not change from this state. It's up to you to confirm consent of the commit author(s) and merge this pull request when appropriate.*\n\n<!-- need_author_consent --> The CLA bot appears confused by the fact I resolved conflicts on the web interface.  Found some PEP8 errors -- will fix them in a few min  The example uses the classes from the pure tf implementation (#151).  Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_sender_cla --> I signed it! CLAs look good, thanks!\n\n<!-- ok --> Thank you for the pull request! I left a few comments in my review above. Feel free to ping me if you have any questions Agreed Now that the model abstraction is merged, it's OK to revisit this. I see there are changes requested by @npapernot . I will make those changes and also change the tutorial to use the new model abstraction. Just so you know there will also be changes pushed to the `generate_np` method per what was discussed on the mailing list. The new `generate_np` method will be merged first (because #156 has been rebased multiple times already). \r\n\r\n @npapernot  Given the extent of changes to the library, I think it would be best to close this PR and create a new one.  Some attacks operate with the model's logits and others with the softmax probs. We should improve the documentation to make sure it is clear when the `model` argument of an attack class needs to be logits and when it needs to be softmax probs (see #157). In addition, we could use #154 to have some more automated checks in the `__init__` method of attacks that test whether the `model` argument is appropriate. There could also be some more generic checks looking for the TensorFlow softmax op. Now that the model abstraction is merged, we should allow a model object to be passed to the attacks to make these things more clear.\r\n\r\nBesides that, a pass to the docstrings to check for consistency in the description of what layer is expected to be fed should be sufficient to close this issue. #199 takes care of the first point\r\n\r\n Is this done?    JSMA is implemented at the logit layer, pre-softmax. However, the tutorial implements it after the softmax. Add some (keras-specific) code to remove the last softmax layer. Hmm ... it looks like the accuracy test has failed. Nicolas, should JSMA operate post-softmax on these networks? If so, the documentation should probably change. It looks like it's not doing this (even if it was, then removing the softmax should be a no-op). The JSMA should be able to run with both the logits and softmax outputs. Did you make this PR because the implementation failed on some network? I talked to Nicholas in real life :) There is no specific need to remove the softmax layer at the moment. However, we should update the documentation to say that the model can be pre or post softmax. \r\n\r\nI will also open a new issue, because we could build on #154, and additional code, to clarify which attacks need the logits and which ones need the softmax outputs. In addition to improving the documentation, this may require adding some sanity checks on the `model` argument when initializing the different attacks. Would it make sense to require that the model argument be an instance of the new model abstraction class? This would allow the attack to have more guarantees about the structure of the model. It would also make it easier for attacks to have a robust access to the logits layer or softmax layer. I talked to Nicholas about the performance drop he observed when changing the tutorial.\r\n\r\nBasically, users should first try to run the JSMA attack using probabilities, which is likely to work better in most cases. If they encounter numerical issues when computing the Jacobian, they can try feeding in the logits directly, which can work better if the numerical instabilities are due to the softmax. This is why we used the logits in the original paper, and then the probabilities in subsequent papers.  I've implemented the attack algorithm I describe in \"Towards Evaluating the Robustness of Neural Networks\". This should not be merged until Bug 150 is decided for a proper implementation of how we want to do handle multiple calls to generate_np. Right now it is correct but not efficient. Thanks for the PR! I took a first pass and left a few comments. I'll have to take a closer look again later +1 on doing things in that order, so we don't have to rebase the PR My rebase messed up the comments.\r\n\r\nI think I'm going to avoid rewriting JSMA and VAT generate_np in this PR and make another one for those after this one gets merged in. Given the recent discussion regarding PR #154, I think this code can be merged mostly independently (that is, attacks will still work the same way by using __call__, they will just be called differently). The only conflicts will be in the tutorials. So there's good news and bad news.\n\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\n:confused: The bad news is that it appears that one or more commits were authored by someone other than the pull request submitter.  We need to confirm that they're okay with their commits being contributed to this project.  Please have them confirm that here in the pull request.\n\n*Note to project maintainer: This is a terminal state, meaning the `cla/google` commit status will not change from this state. It's up to you to confirm consent of the commit author(s) and merge this pull request when appropriate.*\n\n<!-- need_author_consent --> I rebased again and it seems this has confused googlebot. OK, model abstraction merged, ready to rebase this Working on that now. This is an ugly rebase. Will pick up tomorrow. OK, let us know if you need some help with the rebase I just realized this PR already has +4,000 lines of delta so it may be hard to review the changes effectively. Should we try to create a new one or even two new ones (one for generate_np and one for the new attack)?  I'm basically working on doing that. I'm replaying my commits off the current master and removing everything from 665a5b4 to 3a155f0 and from d221450 to d3416eb that got smashed in here, and making a new branch with just the changes I've made. Regarding making two PRs, one for the attack and one for generate_np: I can do that, sure. The best thing to do for that would be to merge generate_np first, then the L2 attack (and make it use the new generate_np functionality).\r\n\r\nThis shouldn't take more than few hours to split everything apart and replay the commits, I should have it done by tonight. Per discussion, closing this PR and will open two new ones.   Should this wait until bug 150 is decided and resolved? We should also close #145 at the same time   Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_sender_cla --> I signed it! CLAs look good, thanks!\n\n<!-- ok --> Could you add some tests to `test_tf/` to make sure that the right exceptions are thrown in the ModelAbstraction class and that a dummy Keras model correctly instantiates when using KerasModelWrapper? There is an error in the KerasModelWrappper fprop function, in the bit that checks if the model being requested is already cached. The current code attempts to call a dictionary. It should be \r\nreturn self.model_dict\\[layer\\](x)\r\nand not\r\nreturn self.model_dict(x) Thanks Nicolas for the comments and approving. I made the new changes you suggested. Let's agree in the group if the current implementation is what we really want. I agree with converting the rest of the code to use the model abstraction.\nWe might need to change the model abstraction based on specific use-cases.\n\nLet me make the change to `fprop` and `get_layer`. Then I can proceed with\nconverting attacks and others can help with the rest of your suggested list.\n\nOn Thu, Jun 8, 2017 at 2:19 PM, Ian Goodfellow <notifications@github.com>\nwrote:\n\n> This is worth taking some time to get right, so I suggest we write some\n> code with it to make sure it really does what we want. This doesn't need to\n> all be done by @fartashf <https://github.com/fartashf> ; some of the rest\n> of us can also push to this branch.\n> I'd suggest:\n>\n>    - Convert the tutorials to use the new interface, and make sure\n>    everything all works\n>    - Convert all the attacks to assume that the model includes a\n>    definition of the probabilities, and make sure the attacks all fetch either\n>    logits or probabilities as needed\n>    - Maybe make an example that uses L1 regularization of the activities,\n>    or something like that that exercises the model interface more\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/cleverhans/pull/154#issuecomment-307185812>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AG-A-fA8m-WZTIaicowXx6oYftOgWnYfks5sCDs3gaJpZM4NyFmN>\n> .\n>\n I can work on converting the tutorials that depend on Keras to use new new wrapper. I have updated the attacks and made a PR to fartashfs branch over here https://github.com/fartashf/cleverhans/pull/1 Let us resolve the discussion on the `cleverhans-dev` mailing list before continuing to work on this PR: https://groups.google.com/forum/#!topic/cleverhans-dev/5F6XDlDB2S4 This will likely break the Travis build but it's probably best if we make sure we all agree before continuing to edit So there's good news and bad news.\n\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\n:confused: The bad news is that it appears that one or more commits were authored by someone other than the pull request submitter.  We need to confirm that they're okay with their commits being contributed to this project.  Please have them confirm that here in the pull request.\n\n*Note to project maintainer: This is a terminal state, meaning the `cla/google` commit status will not change from this state. It's up to you to confirm consent of the commit author(s) and merge this pull request when appropriate.*\n\n<!-- need_author_consent --> I confirm the commits. We haven't converted the tutorials yet, it's probably a good idea to do so before merging Ian, Nicolas, are there any other changes that are needed to merge this? Looks good on my end, Ian is traveling so he might need more time to review the PR  We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for the commit author(s).  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA ([login here](https://cla.developers.google.com/) to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\n\n<!-- need_author_cla --> CLAs look good, thanks!\n\n<!-- ok -->  This would have fairly large consequences for attacks that are not easy to (or perhaps even impossible to) implement fully symbolically.\r\n\r\nFor example, if you wanted to generate adversarial examples on a few thousand iterations using the attack algorithm I have, or JSMA as currently implemented, you would have to construct thousands of tf.gradient() operations, instead of caching it and just doing one. Oh, I think I was unclear what I meant by \"iterations\" -- I didn't mean iterations of the attack algorithm, I meant iterations of calling attack.generate(). If we have to construct a new graph each time, that would be expensive. This requires re-generating the entire graph each time though, right? You have to pay the cost of doing that every time you call generate(), when ideally you'd only construct the graph once and use it every time after that. Yeah, but that only works because the FGS attack is a fully TF graph. Could you do this same thing with the JSMA code without having to call tf.gradients() each time you want a new adversarial example? Oh, I didn't realize that would do that, okay, now I understand what you're saying. Then yes, I agree just removing generate_np would be the easiest solution. The JSMA code is already being wrapped with `py_func` in the generate() method of `SaliencyMapMethod` https://github.com/openai/cleverhans/blob/master/cleverhans/attacks.py#L356 To put this issue into context with the previous design choices made. In the Attacks interface PR #75, we discussed how multiple calls to `generate_np` should be handled here https://github.com/tensorflow/cleverhans/pull/75/files/6b6cf82fd22b63b43c9cd8af790ead7ed99b9195#diff-b52d3b38c185a956192766f2aa9284cd and here https://github.com/tensorflow/cleverhans/pull/75#issuecomment-289622743 \r\n\r\nSo the current implementations of `generate_np` should generate a graph stored as `self._x_adv` taking input `self.x` (for instance https://github.com/tensorflow/cleverhans/blob/master/cleverhans/attacks.py#L80).\r\n\r\nIf the graph needs additional variables (like the target label placeholder) that is given a different value at each call (like the target label value), the placeholder is stored as an attribute when calling `parse_params`.\r\n\r\nThis may not be ideal, so suggestions to improve the behavior of `generate_np` are welcome So I see three paths forward.\r\n\r\n1. Ian's recommendation: just delete the generate_np functionality. Make generate the only method, and wrap everything with a py_func if you can't do it symbolically. Since this doesn't have the performance implications I thought it would, this is a reasonable option. The only potential problem with it is that now the interface is slightly less clean for a new user who just wants to generate an attack, since they'll have to create a tf placeholder.\r\n\r\n2. Make generate_np call generate() every time it receives arguments. Don't save the graph. This is potentially very slow to do, but we could document it with a big warning saying something to that effect. This method would be used only for one-off adversarial example generation and not if you want to have it in a tight loop (which is probably already the case).\r\n\r\n3. Make generate_np call generate() every time it receives a *new* set of arguments. Cache the graph objects we've used so far. If the arguments are the same as a previous computation, then re-use that older graph. If not, make a new graph. This makes it as efficient as generate() while keeping the nice easy-to-use functionality. The only difficulty is that now everyone who wants to implement an attack has to handle this. There might be some nice way to abstract this into the Attack super class, though, that makes it easier to handle.\r\n\r\nPersonally, I like option (3) followed by (1) and then (2). I like the generate_np() method as a nice simple interface for someone who just wants an adversarial example, and if this comes at the cost of some more implementation work, so be it.\r\n\r\nBut whatever we do, I do think that the current behavior of using old arguments is counterintuitive at best and should be changed. It sounds like the best option is to deprecate `generate_np` and remove it in 6 months. \r\n\r\nShould we issue a warning when the user calls `generate_np` multiple times to warn that it will reuse the first graph? If the interface is going to exist, then I would argue it should exist for all attacks. I think the API would be more confusing if some attacks implement generate_np and some don't.\r\n\r\nAnother possible option would be to require the method exists, but leave it up to the attack implementor as to whether they just call generate() fresh every time (and pay the performance hit) or if they do some graph caching. It might make sense to have two abstract classes inherit from `Attack`: `SymbolicAttack` and `NonSymbolicAttack`. Non-abstract attack classes who inherit from one of these two rather than `Attack`. \r\n\r\nThe two abstract classes would make it easier for developers/users to understand the different implementations required by each type of attack and the implications in terms of expected behavior.\r\n\r\nThe `NonSymbolicAttack` child classes would implement `generate_np` only (using Numpy), and `generate` would be constructed by wrapping `generate_np` in the `NonSymbolicAttack` class definition.\r\n\r\nThe `SymbolicAttack` child classes would implement `generate` only.  If NonSymbolicAttack has a generate method (that wraps generate_np) why not have SymbolicAttack have a generate_np method (that wraps generate)? I was proposing this scheme with the solution of having only some classes implement `generate_np` in mind. If we decide to go the other route, and have all classes implement `generate_np`, then it does not necessarily apply anymore. That makes sense. I have started implementing this in my PR. The Attack class is now up to date and FGSM works with it. I will now continue with updating the other attacks. PR #198 now implements this fix.  Use built-in function `tf.report_uninitialized_variables` to get uninitialized variables. Besides, would it be better if we set `init_all=False` of `model_train` as default? The tests were failing because of the `pep8` checker No, I found that it's not a good idea to use `tf.report_uninitialized_variables` since it requires a VariableScope with `reuse` set to `True`.  Closed by #155  Hello, \r\n\r\nI have been playing around with the Jacobian Salience Map method of creating adversarial examples. If I understand it correctly, this hyperparameter indicates what percentage is allowed to change maximally.\r\nHowever, if I train a network and set gamma too high, it causes some sort of cryptic crash.\r\n\r\nI'll keep looking at it but as of yet I haven't figured it out.\r\n\r\nHere is the error log:\r\n\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/tensorflow/python/ops/script_ops.pyc in __call__(self, token, args)\r\n     80     if func is None:\r\n     81       raise ValueError(\"callback %s is not found\" % token)\r\n---> 82     ret = func(*args)\r\n     83     # Ensures that we return either a single numpy array or a list of numpy\r\n     84     # arrays.\r\n\r\n<ipython-input-4-baac389e7bba> in jsma_wrap(x_val, targets)\r\n     40                                   self.theta, self.gamma, self.clip_min,\r\n     41                                   self.clip_max, self.nb_classes,\r\n---> 42                                   targets=targets)\r\n     43 \r\n     44             # Attack is targeted, target placeholder will need to be fed\r\n\r\n/home/riaan/src/cleverhans/cleverhans/attacks_tf.pyc in jsma_batch(sess, x, pred, grads, X, theta, gamma, clip_min, clip_max, nb_classes, targets)\r\n    328 \r\n    329         X_adv[ind], _, _ = jsma(sess, x, pred, grads, val, np.argmax(target),\r\n--> 330                                 theta, gamma, clip_min, clip_max)\r\n    331 \r\n    332     return np.asarray(X_adv, dtype=np.float32)\r\n\r\n/home/riaan/src/cleverhans/cleverhans/attacks_tf.pyc in jsma(sess, x, predictions, grads, sample, target, theta, gamma, clip_min, clip_max)\r\n    270         # and return the two best candidate features for perturbation\r\n    271         i, j, search_domain = saliency_map(\r\n--> 272             grads_target, grads_others, search_domain, increase)\r\n    273 \r\n    274         # Apply the perturbation to the two input features selected previously\r\n\r\n/home/riaan/src/cleverhans/cleverhans/attacks_tf.pyc in saliency_map(grads_target, grads_other, search_domain, increase)\r\n    150     # Remove used pixels from our search domain\r\n    151     search_domain.remove(p1)\r\n--> 152     search_domain.remove(p2)\r\n    153 \r\n    154     return p1, p2, search_domain\r\n\r\nKeyError: 0\r\n\r\n---------------------------------------------------------------------------\r\nInternalError                             Traceback (most recent call last)\r\n<ipython-input-8-4c82c8f256ec> in <module>()\r\n----> 1 z_list, z_test = module.JSMA_generate()\r\n\r\n<ipython-input-6-17f5c0f546a4> in JSMA_generate(self)\r\n    581                 adv_z = jsma.generate_np(z_test[sample_ind:(sample_ind+1)],\r\n    582                                          self.decoder,self.use_rec,\r\n--> 583                                          **jsma_params)\r\n    584 \r\n    585                 if zs ==None:\r\n\r\n<ipython-input-4-baac389e7bba> in generate_np(self, z_val, decoder, use_rec, **kwargs)\r\n     87             feed_dict = {self._z: z_val, self.targets: kwargs['y_val'], use_rec:True,\r\n     88                          self.jsma:True }\r\n---> 89         return self.sess.run(self._z_adv, feed_dict=feed_dict)\r\n     90 \r\n     91     def parse_params(self, theta=1., gamma=np.inf, nb_classes=10, clip_min=0.,\r\n\r\n/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/tensorflow/python/client/session.pyc in run(self, fetches, feed_dict, options, run_metadata)\r\n    776     try:\r\n    777       result = self._run(None, fetches, feed_dict, options_ptr,\r\n--> 778                          run_metadata_ptr)\r\n    779       if run_metadata:\r\n    780         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\r\n\r\n/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/tensorflow/python/client/session.pyc in _run(self, handle, fetches, feed_dict, options, run_metadata)\r\n    980     if final_fetches or final_targets:\r\n    981       results = self._do_run(handle, final_targets, final_fetches,\r\n--> 982                              feed_dict_string, options, run_metadata)\r\n    983     else:\r\n    984       results = []\r\n\r\n/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/tensorflow/python/client/session.pyc in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\r\n   1030     if handle is None:\r\n   1031       return self._do_call(_run_fn, self._session, feed_dict, fetch_list,\r\n-> 1032                            target_list, options, run_metadata)\r\n   1033     else:\r\n   1034       return self._do_call(_prun_fn, self._session, handle, feed_dict,\r\n\r\n/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/tensorflow/python/client/session.pyc in _do_call(self, fn, *args)\r\n   1050         except KeyError:\r\n   1051           pass\r\n-> 1052       raise type(e)(node_def, op, message)\r\n   1053 \r\n   1054   def _extend_graph(self):\r\n\r\nInternalError: Failed to run py callback pyfunc_24: see error log.\r\n\t [[Node: PyFunc_24 = PyFunc[Tin=[DT_FLOAT, DT_FLOAT], Tout=[DT_FLOAT], token=\"pyfunc_24\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_recv_Placeholder_24_0, _recv_labels_0)]]\r\n\r\nCaused by op u'PyFunc_24', defined at:\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/runpy.py\", line 174, in _run_module_as_main\r\n    \"__main__\", fname, loader, pkg_name)\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/runpy.py\", line 72, in _run_code\r\n    exec code in run_globals\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/ipykernel_launcher.py\", line 16, in <module>\r\n    app.launch_new_instance()\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/traitlets/config/application.py\", line 658, in launch_instance\r\n    app.start()\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/ipykernel/kernelapp.py\", line 477, in start\r\n    ioloop.IOLoop.instance().start()\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/zmq/eventloop/ioloop.py\", line 177, in start\r\n    super(ZMQIOLoop, self).start()\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/tornado/ioloop.py\", line 888, in start\r\n    handler_func(fd_obj, events)\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/tornado/stack_context.py\", line 277, in null_wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/zmq/eventloop/zmqstream.py\", line 440, in _handle_events\r\n    self._handle_recv()\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/zmq/eventloop/zmqstream.py\", line 472, in _handle_recv\r\n    self._run_callback(callback, msg)\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/zmq/eventloop/zmqstream.py\", line 414, in _run_callback\r\n    callback(*args, **kwargs)\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/tornado/stack_context.py\", line 277, in null_wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/ipykernel/kernelbase.py\", line 283, in dispatcher\r\n    return self.dispatch_shell(stream, msg)\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/ipykernel/kernelbase.py\", line 235, in dispatch_shell\r\n    handler(stream, idents, msg)\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/ipykernel/kernelbase.py\", line 399, in execute_request\r\n    user_expressions, allow_stdin)\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/ipykernel/ipkernel.py\", line 196, in do_execute\r\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/ipykernel/zmqshell.py\", line 533, in run_cell\r\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 2717, in run_cell\r\n    interactivity=interactivity, compiler=compiler, result=result)\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 2821, in run_ast_nodes\r\n    if self.run_code(code, result):\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 2881, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-8-4c82c8f256ec>\", line 1, in <module>\r\n    z_list, z_test = module.JSMA_generate()\r\n  File \"<ipython-input-6-17f5c0f546a4>\", line 583, in JSMA_generate\r\n    **jsma_params)\r\n  File \"<ipython-input-4-baac389e7bba>\", line 72, in generate_np\r\n    self._z_adv = self.generate(self._z, **kwargs)\r\n  File \"<ipython-input-4-baac389e7bba>\", line 45, in generate\r\n    wrap = tf.py_func(jsma_wrap, [x, self.targets], tf.float32)\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/tensorflow/python/ops/script_ops.py\", line 189, in py_func\r\n    input=inp, token=token, Tout=Tout, name=name)\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/tensorflow/python/ops/gen_script_ops.py\", line 40, in _py_func\r\n    name=name)\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 768, in apply_op\r\n    op_def=op_def)\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2336, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"/home/riaan/anaconda2/envs/tensorflow1.0/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1228, in __init__\r\n    self._traceback = _extract_stack()\r\n\r\nInternalError (see above for traceback): Failed to run py callback pyfunc_24: see error log.\r\n\t [[Node: PyFunc_24 = PyFunc[Tin=[DT_FLOAT, DT_FLOAT], Tout=[DT_FLOAT], token=\"pyfunc_24\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_recv_Placeholder_24_0, _recv_labels_0)]]\r\n\r\n\r\nI am running this on tensorflow 1 in anaconda. \r\n\r\nkind regards,\r\n\r\nRiaan Zoetmulder\r\n\r\n\r\n@npapernot  This may have already been solved by: https://github.com/openai/cleverhans/pull/122 actually.\r\n\r\nCan be closed.  Hi I was wondering if it is possible to remove dependency of `K.set_learning_phase(0)` in the tutorials?\r\n If I try to remove it I get all sorts of errors. If it is removed none of the attacks works. Mainly in the tutorials if we replace `model_train` with `model.fit` and `model_eval` with `model.evaluate` everything works fine without the need of `K.set_learning_phase()` except from the actual attacks. Any idea why is this happening? @npapernot thanks a lot for the prompt respond. Yeah actually I've had dropout and batch norm layers and couldn't figure out what was going on.\r\n\r\n> If you use K.fit, you may not be able to use some of the cleverhans functions such as adversarial training\r\n\r\nIMHO I think it might be doable, unless I'm missing sth else fundamental here. So if I do K.fit for training I can say sth like this along the lines when I compile the model before training:\r\n\r\n```\r\n# Define loss\r\nloss = model_loss(y, predictions)\r\nloss = (loss + model_loss(y, predictions_adv)) / 2\r\nK.compile(optimizer='adam', loss=loss, metrics=['accuracy']) \r\n``` @npapernot \r\n\r\n> Sorry for the confusion, yes I meant it will be hard to use cleverhans functions \"as is\" because the learning phase will raise a value not fed error.\r\n\r\nYes indeed, I had this error the other day and was trying to figure out what was going on. If someone removes `K.set_learning_phase()` will definitely need to substitute that in the session feed dictionary as {'K.set_learning_phase()': 0} or equivalently {'keras_learning_phase': 0}.\r\n\r\n> Actually, I had a related thought the other day: we may want to have an optional argument to cleverhans functions that run a TF graph where users can specify a feeding dictionary of additional variables along with their values that will be appended to the feeding dictionary hard-coded in cleverhans (when running sess.run)\r\n\r\nThis is much better and makes the functionality of the library more flexible this way. For instance one might just need to use some functions and not change the whole code base from K.fit to model_train when appropriate. I'm hoping to write a tutorial that uses only TensorFlow, with no framework\non top. That would remove all dependence on Keras. But it might take a\nwhile before I get to this, so someone else is welcome / encouraged to do\nit too.\n\nOn Tue, May 16, 2017 at 8:05 AM, kirk86 <notifications@github.com> wrote:\n\n> @npapernot <https://github.com/npapernot>\n>\n> Sorry for the confusion, yes I meant it will be hard to use cleverhans\n> functions \"as is\" because the learning phase will raise a value not fed\n> error.\n>\n> Yes indeed, I had this error the other day and was trying to figure out\n> what was going. If someone removes K.set_learning_phase() will definitely\n> need to substitute that in the session feed dictionary as\n> {'K.set_learning_phase()': 0} or equivalently {'keras_learning_phase': 0}.\n>\n> Actually, I had a related thought the other day: we may want to have an\n> optional argument to cleverhans functions that run a TF graph where users\n> can specify a feeding dictionary of additional variables along with their\n> values that will be appended to the feeding dictionary hard-coded in\n> cleverhans (when running sess.run)\n>\n> This is much better and makes the functionality of the library more\n> flexible this way. For instance one might just need to use some functions\n> and not change the whole code base from K.fit to model_train when\n> appropriate.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openai/cleverhans/issues/142#issuecomment-301811657>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGrGo7ykFKVnEfIYSznPe1zitSqw8ks5r6bslgaJpZM4NcUpW>\n> .\n>\n Hey guys, just a quick question/extension on what @npapernot suggested about `feed_dict`. I've noticed that all functions take params such `train_params` or `eval_params` so I tried to remove `K.set_learning_phase(0)` and hard coded it in the params as `'keras_learnig_phase': 0` but after doing some digging up I found out that `batch_eval` is not using/passing all arguments to feed_dict, so there is no current way to pass that argument to the tensorflow feed_dict. Maybe this should be sth to be considered regarding what @npapernot suggested about allowing users to pass arguments. So at the moment we can pass arguments to the different functions but the `_FlagsWrapper object` that does the argument processing return only a number of those which are later fed to `feed_dict`. Was that intentional or by desing? Howdy!!\r\n\r\nCan anyone please help me out in resolving this error. Have been trying resolving it for such a long time.\r\nSeems, Keras is literally made for a good reason since tensor flow kills time. Any help would be highly appreaciated.\r\n\r\nHere I am trying to convert x4 (tf.tensor object -- intermediate layer from Keras model) into numpy array so I can perform some operation on it as highlighted in the section \"A\" below. I tried almost everything that is mentioned on the internet, but to avail.\r\n\r\nThe code snippet is as below:\r\n\r\nprint(\"x4: \", x4) <<--- here x4 is the output of any intermediate layer from model built using keras.\r\nwith tf.Session() as sess:\r\nprint(\"sess: \", sess)\r\narr = x4.eval(sess)\r\n#arr = sess.run(x4)\r\n\r\n  print(\"arr: \", arr)\r\n  print(\"len(arr): \", len(arr))\r\n==== A =====\r\nfor x_axis in range(len(arr)):\r\nif arr[x_axis] < 0.35:\r\nrg_train[x_axis]=a1np.exp(-b1np.exp(-c1*(11*(arr[x_axis]+0.6-0.13)-5)))\r\nelse:\r\nrg_train[x_axis]=anp.exp(-bnp.exp(-c*(11*(arr[x_axis]-0.13)-5)))+0.5\r\nreturn rg_train\r\n==== A ====\r\n\r\nThe error log is:\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/util/nest.pyc in flatten_dict_items(dictionary)\r\n214 \"\"\"\r\n215 if not isinstance(dictionary, dict):\r\n--> 216 raise TypeError(\"input must be a dictionary\")\r\n217 flat_dictionary = {}\r\n218 for i, v in _six.iteritems(dictionary):\r\n\r\nTypeError: input must be a dictionary\r\n\r\n** When I feed a dictionary into it then it says placeholder shoudl be fed, when I do that then it gives me some another error. really fed up with this issue **\r\n\r\nRegards,\r\nPriya Arora  Running\r\n```\r\npip install -e git+git@github.com:openai/cleverhans.git#egg=cleverhans\r\n```\r\ngives the error\r\n```\r\nPermission denied (publickey).\r\nfatal: Could not read from remote repository.\r\n\r\nPlease make sure you have the correct access rights\r\nand the repository exists.\r\nCommand \"git clone -q git@github.com:openai/cleverhans.git /home/optml/holdenl/mwu2/mwu/src/cleverhans\" failed with error code 128 in None\r\n```\r\nThis can be fixed by running \r\n```\r\npip install -e git+http://github.com/openai/cleverhans.git#egg=cleverhans\r\n```\r\ninstead. (See http://stackoverflow.com/questions/21387456/cannot-install-a-specific-git-branch-on-github-with-pip-permission-denied-pub.)  Hello,I have trouble in loading model when I saved the model with TF format. The model can't load using 'saver.restore'. \r\nSo could you give me some suggestion on saving and loading the trained model?\r\nThanks. Quick comment: I think the bug where reloading the model in Keras doesn't work might be due to an \"initialize_all_variables\" call. That's worth checking at some point. @npapernot @goodfeli \r\nI had tried some methods to address it. Unfortunately,it didn't work.\r\nFinally, FGSM was implemented by Keras with TF backend.\r\nDuring this, I found a funny thing that same architectures in different platform had different performance and the difference was huge which was explored in the MNIST datasets. The phenomenon seems to be inconsistent with \"The Space of Transferable Adversarial Examples\". @shenqixiaojiang, did you get a chance to look at what @goodfeli suggested? @npapernot Sorry,I made a mistake of the suggestion of @goodfeli .  Now, it works. \r\nThank you very much. Would you be willing to open a PR to include the code that is able to load/save models? @npapernot  yeah,my pleasure. A PR was opened for this problem.\r\nIn addition, could you give me some suggests with the following problem:\r\nSame architectures in different platform such as Keras,pyTorch and Caffe had different performance and the difference was huge which was explored in the MNIST datasets. \r\nThe phenomenon seems to be inconsistent with the theory of \"The Space of Transferable Adversarial Examples\".  tf.argmax can't assign axis with -1, here is the official tutorial\r\n```\r\naxis: A Tensor. Must be one of the following types: int32, int64. int32, 0 <= axis < rank(input).\r\n Describes which axis of the input Tensor to reduce across. For vectors, use axis = 0.\r\n``` Hi, \r\nI updated the version of tensorflow to the latest and restart my computer. The issue still exists, here is the error information\r\n```\r\nValueError: Dimension (-1) must be in the range [0, 2), where 2 is the number \r\nof dimensions in the input. for 'ArgMax' (op: 'ArgMax') with input shapes: [?,10], []\r\n```\r\nCan you run the mnist_blackbox.py with the latest version of tensorflow to see if it works? Maybe something is wrong with my version of tensorflow The black box tutorial works for me.\r\n\r\n60000 train samples\r\n10000 test samples\r\nPreparing the black-box model.\r\nDefined TensorFlow model graph.\r\nCompleted model training.\r\nTest accuracy of black-box on legitimate test examples: 0.971212121212\r\nTraining the substitute model.\r\nDefined TensorFlow model graph for the substitute.\r\nSubstitute training epoch #0\r\nCompleted model training.\r\nAugmenting substitute training data.\r\nLabeling substitute training data.\r\nSubstitute training epoch #1\r\nCompleted model training.\r\nAugmenting substitute training data.\r\nLabeling substitute training data.\r\nSubstitute training epoch #2\r\nCompleted model training.\r\nAugmenting substitute training data.\r\nLabeling substitute training data.\r\nSubstitute training epoch #3\r\nCompleted model training.\r\nAugmenting substitute training data.\r\nLabeling substitute training data.\r\nSubstitute training epoch #4\r\nCompleted model training.\r\nAugmenting substitute training data.\r\nLabeling substitute training data.\r\nSubstitute training epoch #5\r\nCompleted model training.\r\nTest accuracy of oracle on adversarial examples generated using the substitute: 0.0966666666727\r\n I'm using tf 1.1.0. What version are you using?\r\n\r\n    goodfellow@instance-2:~/cleverhans/tutorials$ python -c \"import tensorflow as tf; print tf.__version__\"\r\n    1.1.0\r\n I'm sorry for my mistake. I followed the tensorflow tutorial to update my tensorflow. However it seems the version of my tensorflow is r0.12. Maybe it's the problem. I'll update it to the latest version to check the result. Thank you for your answer. Maybe it's the problem. tensorflow/tensorflow#9872 For the PR, do you want to change it to do a version check? The current code makes a slightly smaller graph and should be better for the latest version of tf, but it could be good to support version 0.12.\r\n\r\nThis topic is orthogonal to the PR, but at some point we should make a formal policy for which versions of tf we support.  LGTM, thanks. I'll merge once the tests pass.  This PR doesn't seem to fix the aformentioned bug; it's still persisting (trying out the tutorial file as it is for JSMA)  Before the training process of substitute network, the oracle network was trained with the same session with the substitute network, so when training the substitute network with\r\n```\r\ndef train_sub(sess, x, y, bbox_preds, X_sub, Y_sub):\r\n```\r\nit initialize all variables not only in substitute network, but also the variables in oracle network. So the training process of oracle network is useless.\r\n```\r\nif hasattr(tf, \"global_variables_initializer\"):\r\n            tf.global_variables_initializer().run()\r\n        else:\r\n            warnings.warn(\"Update your copy of tensorflow; future versions of \"\r\n                          \"cleverhans may drop support for this version.\")\r\n            sess.run(tf.initialize_all_variables())\r\n```\r\nSo it can't prove the adversarial examples generated by the substitute network fools the oracle network for the oracle network is randomly initialized after the training of substitute network.\r\nCan anyone tell me that is it understood correctly?\r\nI think the initialization should be like this\r\n```\r\ndef initialize_uninitialized(sess):\r\n       global_vars = tf.global_variables()\r\n       is_not_initialized = sess.run([tf.is_variable_initialized(var) for var in global_vars])\r\n       not_initialized_vars = [v for (v, f) in zip(global_vars, is_not_initialized) if not f]\r\n       print([str(i.name) for i in not_initialized_vars]) # only for testing\r\n       if len(not_initialized_vars):\r\n            sess.run(tf.variables_initializer(not_initialized_vars))\r\n with sess.as_default():\r\n       if hasattr(tf, \"global_variables_initializer\"):\r\n            initialize_uninitialized(sess)\r\n``` I run the mnist_blackbox.py after the modification, but the result if as follows\r\n```\r\nTest accuracy of oracle on adversarial examples generated using the substitute: 0.770964466957\r\n```\r\nif we replace the relatively complicated Jacobian-based dataset augmentation with simply repetition of training set at last step,\r\n```\r\n# X_sub = jacobian_augmentation(sess, x, X_sub, Y_sub, grads,\r\n#                                                     FLAGS.lmbda)\r\nX_sub = np.concatenate([X_sub, X_sub], axis=0)\r\n```\r\n```\r\nTest accuracy of oracle on adversarial examples generated using the substitute: 0.690152283574\r\n```\r\nthe result is relatively better, which means the Jacobian-based dataset \r\naugmentation has not effect for better adversarial examples generation. \r\n\r\nIs there something wrong with the implementation? Narrator: the bug likely responsible for @leviswind's observation was later found (#321)  Hello,\r\n\r\nI have made my own little implementation of some of the methods described here (using some of your code as an example). I have a specific question regarding the Fast Gradient Sign method.\r\n\r\nI have set epsilon to 0.3 as per the example. About 97.5 percent of my predicted labels change. This should be good. However on Cifar 10, the images become quite pixelated due to this. Is this supposed to happen? I thought the perturbations were invisible to the naked eye.\r\n\r\nThe convnet I am using uses 3 convolutional layers and 1 softmax layer with relu activations.\r\n\r\nregards,\r\n\r\n\r\nRiaan I have tried various values for epsilon. between 0.007 up until 0.3 . I preprocess the data by dividing it by 255.0. With for example 0.07, approximately 70% of the labels changes! The lower I go, the less the likelihood of the prediction changing!\r\n\r\nAnd yes I am using that code to replicate your research! If you wish, I can send you what I have done, although I don't want to impose!\r\n\r\n@paulhendricks   since you all use tf, couldn't you also load it like this?  \r\n```\r\nfrom tensorflow.examples.tutorials.mnist import input_data\r\n\r\nmnist = input_data.read_data_sets(\"/data_dir/\", one_hot=True)\r\n```\r\nand then use the batching built into that object? \r\neg: `mnist.train.next_batch(batch_size)[0]`\r\n\r\nif you like that solution, I can implement it and make a p.r.   Who should review this? I don't know much about JSMA This PR fixes the issues I observed on my end. No KeyError bugs observed with `discard` over `remove` & all selected pixels are from the valid set by explicitly giving invalid pixels a highly negative/positive score versus setting them to 0.   Adds perturbation used for virtual adversarial training as described in https://arxiv.org/abs/1507.00677. Both theano and tensorflow are supported. Tests fail for tensorflow on `Failure: ImportError (No module named 'PyQt4')`. Thanks for the pr!\n\nThis test error will be solved after #75 is merged (the pr #75 still needs\na few edits and it will be good to go).\n\nTraveling---will get back to you in a few days\n\nOn Thu, Apr 27, 2017, 10:15 AM Alexander Matyasko <notifications@github.com>\nwrote:\n\n> Tests fail for tensorflow on Failure: ImportError (No module named\n> 'PyQt4').\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openai/cleverhans/pull/125#issuecomment-297645414>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIbS9qP7Q28dXUDJb67BHMUGXfQO6R8Gks5r0E6egaJpZM4NJ29p>\n> .\n>\n @npapernot I resolved conflicts and tests are passing. LGTM! @npapernot Thanks! I reviewed your comments but didn't have time to make changes. I am traveling right now and I will address your comments as soon as possible. @npapernot Thank you for your review! I addressed your comments. @npapernot Thanks for the updates! One last thing before we merge @aam-at, we are striving to add more tests to the core module components. Since this will be inside `cleverhans/`, could you write tests in `tests_tf/` that we can rely on to make sure that future PRs don't break your code?\r\n\r\nWriting Theano tests is not necessary as we have dropped support for it and all Theano code is deprecated. @npapernot I added basic tests for `utils` and `vatm` method. Do you have a roadmap for this project? Can you point me out to the discussion why you are dropping `theano` support? Thanks. @npapernot Thanks for the merge!\r\n@goodfeli Thanks for pointing out to the discussion! Thanks for the contribution @aam-at, very much appreciated! Can you let us know what your affiliation is so we can add you to the  technical report when we increment the version number of the library? @npapernot I contacted you via email.  How can I save only the images generated from either FGSM or JSMA attacks? \r\n\r\nIt looks like the tensor of images returned out of `batch_eval(sess, [x], [adv_x], [X_train], args=eval_params)` only give the noise that will be added to the original images.\r\n\r\nI'm training a detector, and this library looks much better than the way I was generating fooling images before. I just can't figure out how to get the actual perturbed images. \r\n\r\nThanks. \r\n  - Changes related to the new Convolution Layers in Keras\r\n- Fixed a bug caused by this change on Keras (https://github.com/fchollet/keras/pull/5866) where the outcome of the metrics function is no longer a scalar, therefore the mean should be calculated manually.\r\n Thanks @npapernot.. As you have noticed is not backward compatible with previous versions.. I think it looks good now..  Sure thing...  @npapernot @goodfeli \r\n\r\nChanges have been pushed, tested the code on both 1.2 and 2.0 versions of Keras and it works fine.. Thanks for the feedback guys.\r\n The latest commit broke the build because it still uses the old `kernel` parameter name in the function body. After that is fixed and the tests pass, I think this is good to merge. Also, should we change setup.py to run keras 2.0 on travis? yeah, it's because tf was too old in the travis config, I updated it now we also have to fix the keras scalar output issue for theano as well  do you mean multithreading, etc? Sorry the title of this is somewhat unrelated to the description now that I changed it. The goal was to implement the JSMA completely symbolically in TF (no Python/Numpy involved). This requires among other things to change the current Python while loop into a TF while loop. Sorry for my limited knowledge about Tensorflow. For the part like:\r\n\r\n```\r\n        search_domain = set([i for i in xrange(nb_features)\r\n                             if adv_x[0, i] < clip_max])\r\n```\r\n\r\nCould this also be written symbolically? In the `test_attacks.py`, where is the `sess.run(tf.global_variables_initializer())`?   I run the test_mnist_accuracy.py, meet the following error:\r\nUsing TensorFlow backend.\r\nX_train shape: (60000, 28, 28, 1)\r\n60000 train samples\r\n10000 test samples\r\n/anaconda/lib/python2.7/site-packages/cleverhans-1.0.0-py2.7.egg/cleverhans/utils.py:143: UserWarning: Update your `Conv2D` call to the Keras 2 API: `Conv2D(64, (8, 8), padding=\"same\", strides=(2, 2))`\r\n  border_mode=\"same\"\r\n/anaconda/lib/python2.7/site-packages/cleverhans-1.0.0-py2.7.egg/cleverhans/utils.py:147: UserWarning: Update your `Conv2D` call to the Keras 2 API: `Conv2D(128, (6, 6), padding=\"valid\", strides=(2, 2))`\r\n  border_mode=\"valid\"),\r\n/anaconda/lib/python2.7/site-packages/cleverhans-1.0.0-py2.7.egg/cleverhans/utils.py:149: UserWarning: Update your `Conv2D` call to the Keras 2 API: `Conv2D(128, (5, 5), strides=(1, 1))`\r\n  Convolution2D(nb_filters * 2, 5, 5, subsample=(1, 1)),\r\nDefined TensorFlow model graph.\r\nEpoch 0\r\n        Epoch took 8.60225486755 seconds\r\nEpoch 1\r\n        Epoch took 8.84567499161 seconds\r\nCompleted model training.\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-1-4bcd96e1bffd>\", line 1, in <module>\r\n    runfile('/Users/adhockuang/myworkspace/cleverhans-master/tests_tf/test_mnist_accuracy.py', wdir='/Users/adhockuang/myworkspace/cleverhans-master/tests_tf')\r\n\r\n  File \"/anaconda/lib/python2.7/site-packages/spyder/utils/site/sitecustomize.py\", line 866, in runfile\r\n    execfile(filename, namespace)\r\n\r\n  File \"/anaconda/lib/python2.7/site-packages/spyder/utils/site/sitecustomize.py\", line 94, in execfile\r\n    builtins.execfile(filename, *where)\r\n\r\n  File \"/Users/adhockuang/myworkspace/cleverhans-master/tests_tf/test_mnist_accuracy.py\", line 84, in <module>\r\n    app.run()\r\n\r\n  File \"/anaconda/lib/python2.7/site-packages/tensorflow/python/platform/app.py\", line 44, in run\r\n    _sys.exit(main(_sys.argv[:1] + flags_passthrough))\r\n\r\n  File \"/Users/adhockuang/myworkspace/cleverhans-master/tests_tf/test_mnist_accuracy.py\", line 76, in main\r\n    args=eval_params)\r\n\r\n  File \"/anaconda/lib/python2.7/site-packages/cleverhans-1.0.0-py2.7.egg/cleverhans/utils_tf.py\", line 206, in model_eval\r\n    keras.backend.learning_phase(): 0})\r\n\r\nValueError: operands could not be broadcast together with shapes (128,) (80,) (128,)  Code ATM requires keras<2.0.0, can you try rerunning with keras==1.2.2? thanks, I will try.  This now works https://gist.github.com/kudkudak/aa1eff9f9c0f40b3cfcc945e453d83c4 (note removed Dropout layers in cnn_model)\r\n\r\nA bit random note: while doing this, it got me thinking about the way cleverhans is now coupled with keras, wrote few lines about it in https://github.com/openai/cleverhans/issues/109  I get this when I run the unmodified version of the tutorial on CPU, with the latest keras.\r\nThe error does not show up with keras 1.2\r\n\r\n```\r\n(tensorflow) rva5120@cse-p336mcro05:~/tensorflow/cleverhans/tutorials$ python mnist_tutorial_tf.py\r\nUsing TensorFlow backend.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE3 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\nX_train shape: (60000, 28, 28, 1)\r\n60000 train samples\r\n10000 test samples\r\n/home/grads/rva5120/tensorflow/cleverhans/cleverhans/utils.py:143: UserWarning: Update your `Conv2D` call to the Keras 2 API: `Conv2D(64, (8, 8), padding=\"same\", strides=(2, 2))`\r\n  border_mode=\"same\"\r\n/home/grads/rva5120/tensorflow/cleverhans/cleverhans/utils.py:147: UserWarning: Update your `Conv2D` call to the Keras 2 API: `Conv2D(128, (6, 6), padding=\"valid\", strides=(2, 2))`\r\n  border_mode=\"valid\"),\r\n/home/grads/rva5120/tensorflow/cleverhans/cleverhans/utils.py:149: UserWarning: Update your `Conv2D` call to the Keras 2 API: `Conv2D(128, (5, 5), strides=(1, 1))`\r\n  Convolution2D(nb_filters * 2, 5, 5, subsample=(1, 1)),\r\nDefined TensorFlow model graph.\r\nEpoch 0\r\n\tEpoch took 52.5618000031 seconds\r\nTraceback (most recent call last):\r\n  File \"mnist_tutorial_tf.py\", line 122, in <module>\r\n    app.run()\r\n  File \"/home/grads/rva5120/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/platform/app.py\", line 44, in run\r\n    _sys.exit(main(_sys.argv[:1] + flags_passthrough))\r\n  File \"mnist_tutorial_tf.py\", line 81, in main\r\n    evaluate=evaluate, args=train_params)\r\n  File \"/home/grads/rva5120/tensorflow/cleverhans/cleverhans/utils_tf.py\", line 142, in model_train\r\n    evaluate()\r\n  File \"mnist_tutorial_tf.py\", line 70, in evaluate\r\n    args=eval_params)\r\n  File \"/home/grads/rva5120/tensorflow/cleverhans/cleverhans/utils_tf.py\", line 206, in model_eval\r\n    keras.backend.learning_phase(): 0})\r\nValueError: operands could not be broadcast together with shapes (128,) (16,) (128,) \r\n\r\n``` A general comment: \r\n\r\nCode assumes now keras <2.0.0. Easiest solution is to add keras==1.2.2 to requirements.txt, but maybe a better solutions is to remove any dependency on keras in cleverhans? I feel that cnn_model (as well as some other functions) shipped with package would be \"better off\" defined in examples.\r\n\r\nI see that dependency on keras is a bit deeper than few functions like cnn_model, but in general I am not sure this dependency is needed (or at least - it could be better separated). Anyways package defines separate functions and utilities for theano and tensorflow. To make this comment more concrete, this could be achieved by adding \"theano_function_kwargs\" to model_argmax, th_model_train, making download of mnist independent of keras and removing cnn_model.\r\n\r\nIf keeping keras dependency is strategic - maybe a better solution would be using functions from keras.backend? This would avoid splitted codebase in most places (except for some cornercases that require calling into given theano/tf API) I have fixed the Keras issue on my local version and I am happy to make a pull request if needed. Here are the steps I followed (please let me know if we can improve and/or is not the right approach):\r\n\r\n1 - Change the Convolutional2D into CNNMODEL to the new keras 2.0 api (CONV2D), note that the following parameters have changed name/format:\r\n\r\nnb_filter -> filters float kernel dimension arguments become a single tuple argument, kernel size.    E.g. a legacy call Conv2D(10, 3, 3) becomes Conv2D(10, (3, 3))\r\nkernel_size can be set to an integer instead of a tuple, e.g. Conv2D(10, 3) is equivalent to Conv2D(10, (3, 3)).\r\n\r\nsubsample -> strides. Can also be set to an integer.\r\n\r\nborder_mode -> padding\r\n\r\n2 - Inside model_eval in utils_tf.py at the end of the for loop we have the following:\r\n\r\n        \r\naccuracy += cur_batch_size * acc_value.eval(\r\n                       feed_dict={x: X_test[start:end],\r\n                       y: Y_test[start:end],\r\n                       keras.backend.learning_phase(): 0})\r\n\r\nJust added a if to ignore the remaining points in case the batch has a size that is lower than the current batch size (Not sure if this would be the right approach, but at least it worked for now):\r\n\r\n**if cur_batch_size == args.batch_size:**\r\n   accuracy += cur_batch_size * acc_value.eval(\r\n                    feed_dict={x: X_test[start:end],\r\n                     y: Y_test[start:end],\r\n                      keras.backend.learning_phase(): 0})  Despite only training the nnet for 10 epochs, the results are promising. The adversarialy trained CIFAR10 model performs as well as the non-adversarialy trained CIFAR10 model (about 0.47 accuracy after 10 epochs); however, test accuracy on adversarial examples is about 0.11 for the adversarialy trained CIFAR10 model as opposed to a test accuracy of 0.01 for the non-adversarialy trained CIFAR10 model.\r\n\r\nIf this is useful, definitely let me know! I'd love to implement the other attacks for cifar10 and perhaps refactor.\r\n\r\nI'd also love to train the model for longer than 10 epochs. I'll run some additional tests and report the results. For future reference, you should write to cleverhans-dev@googlegroups.com before starting a new feature, to make sure no one else is doing the same thing, etc. Thanks for your help fixing this @npapernot!\r\n\r\nAnd I will going forward @goodfeli, thanks!  When running JSMA, fix a bug where if the set of changable features\r\nis odd, then it will crash if no solution is found instead of\r\nreturning failure.\r\n\r\nThis is triggered because JSMA assumes there are at least two pixels\r\nthat can be changed at any point in time. If there is only one, things\r\ngo bad. I think this might not get reviewed until next week. I don't use this particular part of the codebase. @npapernot would be a good reviewer but he is on vacation until Monday.  Instead of computing saliency map in python with Pool.map,\r\nuse efficient numpy operations. This gives a speedup of ~50x\r\non MNIST/CIFAR tests using only a single thread. Not sure why that test failed.\r\n\r\nAlso, you may want to hold off on merging this in. This commit (and the existing code before it) both assume that the 2-dimensional matrix can fit in memory, which is not the case on ImageNet (299x299x3 Inception would require ~300GB of RAM). I have code to take care of this that I can make compatible with cleverhans. I'll make the changes early next week (Oakland camera-ready is Monday, hence the PRs).  Duplicate of #139   wrote two conditions to actually check the viz_enabled flag as well as adjusted the first print statement that shows how many adversarial examples will be crafted to the correct value (we don't create an adversarial example for the source class, so just had to subtract 1) I'll leave this for someone who uses JSMA to review  Adds two visualizations: side-by-side, which shows the original image, the peterbations, then the adversarial example, and grid, which gives a 10x10 grid showing originals down the diagonal (same viz. used in Papernot's DL limitations paper). Also added proper useage of both visualizations in mnist-jsma tutorial. To make it easier for new users, I also added a couple flags in the tutorial to control if visualizations are rendered or not (also, for the best visualization, I made the default number of test set examples to 10, so that the grid is nearly complete. I only say nearly because the first 10 samples are not unique.)\r\n\r\n Committer: Ryan Sheatsley <rms5643@psu.edu>\r\n\r\ncloses #6   I think it would be good to add a test of each value of `ord`. A simple enough test might pass on travis, since we don't know what it is making the mnist accuracy test get low accuracy. I won't insist on changing the name / interface, but have you given some thought as to whether it makes sense to still call this `fgsm` when `ord` is anything other than `np.inf`? The \"s\" in `fgsm` is for \"sign\" and we take the sign only if we are using the max norm.    Fixes #69\r\nTested: \r\n\r\n- Ran tests and tutorials to check backwards compatibility\r\n  ```\r\n  tests/test_mnist_accuracy.sh\r\n  tests/test_mnist_accuracy_th.sh\r\n  python tutorials/mnist_tutorial_tf.py\r\n  python tutorials/mnist_tutorial_th.py\r\n   ```\r\n- Modified `tutorials/mnist_tutorial_tf.py`:\r\n  ```\r\n  # - Remove batch_size, nb_epochs, learning_rate flags\r\n  # - Modify model_train, model_eval calls:\r\n  args = {'batch_size': 128, 'nb_epochs': 6, 'learning_rate': 0.1}\r\n  model_train(..., args=args)\r\n  ...\r\n  model_eval(..., args=args)\r\n   ```\r\n-----\r\n\r\nChanges:\r\n* Added backwards-compatible argument wrappers\r\n* Added `args` parameter to TF utils functions\r\n* Fixed a bug with mutable default parameter value\r\n* Standardized `args` in TF and theano utils\r\n\r\n\r\nNote that this produces warnings like this one:\r\n\r\n    UserWarning: Setting parameters (batch_size) from TensorFlow FLAGS is deprecated.\r\n\r\nI am not sure if the following should go in this PR:\r\n\r\n- Add unit tests. Requires setting up unit tests ( #19 ).\r\n- Rewrite TF tutorials and tests to set the args explicitly.\r\n- This may be a good place to change the `args` name both in TF and Theano utils to something like `training_params`\r\n Hi @npapernot,\r\nThe tutorial seems to be fine. This is what I got:\r\n```\r\nX_train shape: (60000, 28, 28, 1)\r\n60000 train samples\r\n10000 test samples\r\nPreparing the black-box model.\r\nDefined TensorFlow model graph.\r\n/home/bogdan/Workspace/cleverhans/cleverhans/utils_tf.py:35: UserWarning: Setting parameters (learning_rate) from TensorFlow FLAGS is deprecated.\r\n  'deprecated.'.format(name))\r\n/home/bogdan/Workspace/cleverhans/cleverhans/utils_tf.py:35: UserWarning: Setting parameters (nb_epochs) from TensorFlow FLAGS is deprecated.\r\n  'deprecated.'.format(name))\r\n/home/bogdan/Workspace/cleverhans/cleverhans/utils_tf.py:35: UserWarning: Setting parameters (batch_size) from TensorFlow FLAGS is deprecated.\r\n  'deprecated.'.format(name))\r\nCompleted model training.\r\nTest accuracy of black-box on legitimate test examples: 0.96969696989\r\nTraining the substitute model.\r\nDefined TensorFlow model graph for the substitute.\r\nSubstitute training epoch #0\r\nCompleted model training.\r\nAugmenting substitute training data.\r\nLabeling substitute training data.\r\nSubstitute training epoch #1\r\nCompleted model training.\r\nAugmenting substitute training data.\r\nLabeling substitute training data.\r\nSubstitute training epoch #2\r\nCompleted model training.\r\nAugmenting substitute training data.\r\nLabeling substitute training data.\r\nSubstitute training epoch #3\r\nCompleted model training.\r\nAugmenting substitute training data.\r\nLabeling substitute training data.\r\nSubstitute training epoch #4\r\nCompleted model training.\r\nAugmenting substitute training data.\r\nLabeling substitute training data.\r\nSubstitute training epoch #5\r\nCompleted model training.\r\nTest accuracy of oracle on adversarial examples generated using the substitute: 0.0965656565807\r\n```\r\nThe warnings are expected. As I mentioned, I am not sure if rewriting TF tutorials and tests to set the args explicitly should go in this PR. I can do it here though. Looks good to me, thanks!  Looks good to merge once the pep8 test runs  Implemented the basic iterative method (iterative version of FGSM) as per Kurakin et al. (2016). This required that I add an option in FGSM for 'y', the placeholder for the actual labels. Using the model predictions as the labels does not work for the iterative method. Should have tests, maybe test that it achieves some error rate for a basic reference model Re the name of the pull request, should this be changed to \"new Attack interface\" or something? The actual diff of the code doesn't include the word \"iterative\" anywhere generate_numpy could cache the graph from the first call rather than become\ndisabled\n\nOn Mon, Mar 27, 2017 at 4:42 PM Nicolas Papernot <notifications@github.com>\nwrote:\n\n> *@npapernot* commented on this pull request.\n> ------------------------------\n>\n> In cleverhans/attacks.py\n> <https://github.com/openai/cleverhans/pull/75#discussion_r108306299>:\n>\n> > +\n> +from .utils import random_targets\n> +\n> +\n> +class Attack:\n> +    \"\"\"\n> +    Abstract base class for all attack classes. All attacks must override the\n> +    `craft` method that returns adversarial examples corresponding to the input\n> +    data. However, the `generate_symbolic` method is optional.\n> +    \"\"\"\n> +    __metaclass__ = ABCMeta\n> +\n> +    def __init__(self, x, pred, back='tf', sess=None, clip_min=None,\n> +                 clip_max=None, params={}):\n> +        \"\"\"\n> +        :param x: The model's symbolic inputs.\n>\n> We can have the generate_numpy() call generate() once and keep track of\n> the fact that it has called generate()\n>\n> We'd have to disable generate_numpy() if the user called generate() more\n> than once\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openai/cleverhans/pull/75#discussion_r108306299>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAXrGpACQGDcvjCjqDZ_6Kz1yyT4osb_ks5rqEl5gaJpZM4L0g50>\n> .\n>\n-- \nSent from Gmail Mobile\n Are there any outlying tasks? Can I help? Yes, we need to make small changes to the iterative FGM to address the remaining comments I just looked through the code; a lot has changed since I last contributed to the fork. I am confused about this new \"model\" parameter that is handed to the __init__ functions. Is this going to require using Keras? Yes, users can write their own TF model constructor functions and pass those as callables, but that seems like a lot of complexity added to the user side of things. The only time that I see this parameter being necessary is to compute a symbolic version of the BasicIterativeMethod attack. But recall that for the numeric version, \"model\" callable was not required; we could simply revert to the numeric version that we had before, and use tf.py_func() to get a symbolic version.\r\n\r\nAlso, we should address the fact that in the parent class, generate() and generate_np() would get stuck in an infinite loop of calling each other back and forth.  Remaining: \r\n\r\n* potential infinite loop between `generate()` and `generate_np()`\r\n* fix Travis test failing because of `matplotlib` / `Qt`  Addressing issue #37 by making jsma_tf attack generalized to accept data of any shape. We should eventually write a new tutorial for data of some other shape; maybe CIFAR-10. I have tested this on data of different shapes. Apologies - I will follow this new req in the future. The while statement in 246-247 should also be adjusted so that the 'and' comes before the line break.    Theano implementation of L2 attack from [Carlini et al, 2016]. This attack is slower than FGSM, but produces good-looking examples with high success rate.\r\nAdam optimizer is also added for the algorithm.\r\nSee https://arxiv.org/abs/1608.04644 for other details. Needs tests  +1, good idea   This pull request should be merged after https://github.com/openai/cleverhans/pull/66\r\n Closes #65  Closes #60    The existing tests use code duplication rather than calling the main() function of the tutorial, so they need to be independently maintained No, this isn't closed. A way of rephrasing this issue is \"if I put `assert False` in the first line of `mnist_tutorial_tf.py`, the Travis build should fail\" Dear @goodfeli, I found the line 182 of utils_tf.py ''acc_value = tf.reduce_mean(keras.metrics.categorical_accuracy(y, model))\" should be changed to \"acc_value = tf.reduce_mean(tf.cast(keras.metrics.categorical_accuracy(y, model), 'float'))\". Thanks for your team and projects. Closed by #119 #148 #149    \r\n    ian@11:~/cleverhans/tutorials$ KERAS_BACKEND=\"theano\" python mnist_tutorial_th.py \r\n    Using Theano backend.\r\n    INFO: '~/.keras/keras.json' sets 'image_dim_ordering' to 'tf', temporarily setting to 'th'\r\n    X_train shape: (60000, 1, 28, 28)\r\n    60000 train samples\r\n    10000 test samples\r\n    Loaded MNIST test data.\r\n    Defined Theano model graph.\r\n    Starting model training using Theano.\r\n    Defined optimizer.\r\n    Epoch 0\r\n        Epoch took 338.5225307941437 seconds\r\n @mahnerak do you know what could be going on? For me, it takes about 6 seconds per epoch. (GTX980 with cuDNN enabled)\r\n\r\nIt seems like your GPU device is not enabled for theano.\r\nBy default you can see `Using gpu device 0: GeForce GTX 980 (CNMeM is disabled, cuDNN 5005)` if you're running it on a GPU.\r\nIn order to enable GPU support, add these lines to `.theanorc` file in your home directory. \r\n`[global]`\r\n`device = gpu0`  > Completed model training.\r\nTraceback (most recent call last):\r\n  File \"test_mnist_accuracy.py\", line 71, in <module>\r\n    app.run()\r\n  File \"/home/mahnerak/.local/lib/python2.7/site-packages/tensorflow/python/platform/app.py\", line 44, in run\r\n    _sys.exit(main(_sys.argv[:1] + flags_passthrough))\r\n  File \"test_mnist_accuracy.py\", line 67, in main\r\n    assert float(accuracy) >= 0.98, accuracy\r\nAssertionError: 0.9639 It just passed three times in a row for me.\r\n\r\n- Could it be flaky? If you re-run it, does it still fail?\r\n- Are you running from a clean copy of the master branch?\r\n- What version of keras and tensorflow are you using? - Tried just now. Failed 5 times in a row. For each run got ~0.96 accuracy.\r\n- Running from clean copy (current version) of the master branch\r\n- TensorFlow v0.12, Keras v1.2.0\r\n\r\nOne more thing. I noticed that Adadelta from TensorFlow behaves different than implementations found in Keras and Lasagne (Theano versions), when I was implementing theano version of FGSM. Then I ran Keras version of Adadelta on TensorFlow, and its results were also different than the ones from TensorFlow's default Adadelta. It was a bit confusing.\r\n\r\nToday I updated TensorFlow, and its Adadelta behaves like the other implementations. @mahnerak : is there a 3rd digit to your tensorflow version? I am also running keras 1.2.0. My tensorflow is 0.12.1. Have you checked cleverhans.__file__ to make sure your PYTHONPATH is set correctly and that you are in fact importing the clean unmodified master branch?\r\n@npapernot : what are your versions? TensorFlow version is 0.12-head (compiled from sources today).\r\nChecked PYTHONPATH again, it's set correct. \r\nI'll try to do clean install tensorflow (with prebuild binaries) and keras on another machine and run the tests. It's possible tensorflow 0.12-head is broken.\r\nI suggest checking `cleverhans.__file__` rather than checking `PYTHONPATH`. Installed 0.12.1 from prebuilt binaries. Tests are passing now.  @mahnerak I would suggest reporting this on the tensorflow repository issues tracker if you haven't already     Yes, I'd like to keep that open until we have more unit tests for the JSMA (and other attacks) and rely less on the somewhat flaky tutorial tests. Does that sound right? Yes correct, I'll edit #176  `batch_eval` in `utils_th` (https://github.com/openai/cleverhans/blob/master/cleverhans/utils_th.py#L167) throws an error if computation graph doesn't use `learning_phase`. Way to fix that would be to add `on_unused_input='ignore'` to arguments of `theano.function` call. Will do! But after ICLR workshop deadline :) Sorry :) Will look into it this weekend\r\n\r\n2017-03-23 22:19 GMT+01:00 Nicolas Papernot <notifications@github.com>:\r\n\r\n> @kudkudak <https://github.com/kudkudak> anything new regarding this issue?\r\n>\r\n> \u2014\r\n> You are receiving this because you were mentioned.\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/openai/cleverhans/issues/56#issuecomment-288863501>,\r\n> or mute the thread\r\n> <https://github.com/notifications/unsubscribe-auth/ABf8aQXmkXT3K__tmkX7J1dY6Ay70nqaks5rouHmgaJpZM4LZv1H>\r\n> .\r\n>\r\n  In newer Keras default dim ordering was switched from `th` to `tf`  IMHO, there might be a couple of improvements over the JSMA API.\r\n\r\n1. `increase` and `theta` are duplicates.\r\n`increase=True` <-> `theta=+x`\r\n`increase=False` <-> `theta=-x`\r\n2. `jacobian_graph` is like a loose ends to me.\r\nI think the gradients should be calculated internally in the JSMA function, it is, at least to me, counter-intuitive to called some random function before calling the `jsma`. Actually TF provides a [tf.while_loop](https://www.tensorflow.org/api_docs/python/control_flow_ops/control_flow_operations#while_loop) to achieve this.  I have an example implementation of JSMA with tf.while_loop, please see [here](https://github.com/gongzhitaao/tensorflow-adversarial/blob/master/attacks/jsma.py#L59).  1. Separate attacks modules for Tensor and Theano\r\n2. Theano implementation of FGSM\r\n3. New tutorial for FGSM in Theano\r\n\r\nNext steps would be:\r\n- Remove Keras dependency in JSMA implementation\r\n- Move present JSMA implementation to attacks_tf\r\n- Implement JSMA in Theano\r\n- Implement more attacks Could you make a `test_mnist_accuracy_th` or similar? This looks like a lot of new code without new tests to accompany it. Otherwise looks like basically the right direction, thanks! I'm working on this right now\r\ntheano and TF results are different now, probably because of different initializations `tests/test_mnist_accuracy_th.py` is provided. It tests not only the accuracy of trained MNIST model, but also accuracy of the same model on the crafted adversarial examples.  There are 3 important changes here:\r\n\r\n1. Updated code style so that FGSM is consistent with JSMA. Both attacks should return a numpy array with the adversarial sample(s). Previously, FGSM returned a symbolic tensor that needed to be evaluated.\r\n2. Improved general code style; user should not have to define TF placeholders when unnecessary.\r\n3. Fixed FGSM algorithm; the adversary knows the _correct_ label for each sample they are trying to perturb, thus GT labels should be used to compute model loss, not model predictions. In the MNIST case this was a minor discrepancy (model achieves ~99% accuracy, so predictions and GT labels are roughly equivalent), but for other models this is more important. importing attacks inside utils_tf does not seem to be a good idea.. These are just my suggestions, and they don't need to be merged if they don't seem right. I think the first point is pretty good, attacks should have similar interfaces... in case one wants to use multiple attacks in the same code I just read through the paper about label leaking and I understand the phenomenon now - thanks. I think it's important to have both options implemented, because some people might not be doing adversarial training, but solely using FGSM to craft adversarial samples. Yes, attacks probably should have similar interfaces. We're about to make a change soon to accommodate iterative attacks. I don't want to do numeric and symbolic versions of every attack. Just symbolic with no `_symbolic` prefix. Some of the other things in this PR make sense but I wouldn't want to merge the part that turns existing symbolic attacks numeric. @goodfeli that's fine, I understand your concern. I would just say that if you are hoping to have a similar interface for every attack, and you're planning to keep FGSM symbolic only, you'd need to somehow alter JSMA so that it returns a symbolic tensor. I authored a portion of the JSMA code and I'm not sure I can see how that would be done at the moment while retaining computational efficiency. Yes, I think we can close this PR and follow up on (a) and (b) separately. I read through Alex's message on the dev group (including his linked Google doc) and, while he mentions that he would help rewrite JSMA, I didn't see any details. But I await eagerly to see what he comes up with.  Should we just say to use PEP8, instead of making a cleverhans-specific style guide?  Agreed that this is important. FGSM works for any input shape, but JSMA is only for image data with shape (n_samples, 1, n_rows, n_cols). This is not very well generalized because it only works for black-and-white images. We should update to work with color images and with flat vector data. I can help.  We should do a new release with a major version increment because of #25 . Because the loss was used as part of the attacks, this bug made the attacks appear too weak. Yes, I think so.\nAlso, I found another bug, in the evaluation metric. Sending a pull request in a few minutes. So we can bundle all of that into one update.\n  It can compute one adversarial sample at a time. I've also included a new script in tutorials/ showing how to use my code. Right now the algorithm is rather slow for computing adversarial samples, but it seems to get the job done well. \n  Not a big deal.  But it looks much cleaner.\n I prefer the existing version, because it's more explicit about what is going on, and contains a comment explaining a possibly non-intuitive behavior.\n  so that the code blocks are properly highlighted.\n Your are welcome! Thanks for merging.\n\nGe\n\nOn Friday, October 14, 2016, Nicolas Papernot notifications@github.com\nwrote:\n\n> LGTM, thanks for the edits\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/openai/cleverhans/pull/24#issuecomment-253911316, or mute\n> the thread\n> https://github.com/notifications/unsubscribe-auth/AAme2mbt0113mNw23XvxH4AUyde3hzUiks5qz-YogaJpZM4KVOIZ\n> .\n  Does MILA labs' fuel already provide something like this? (@dwf?)\n\nDoes keras provide anything similar?\n\nFor tensorflow implementations, we probably want a queue op, not a python iterator.\n  For now, I guess we have to run each of them manually? We should either copy the docker setup from OpenAI Gym or the nose setup from Pylearn2.\n  vim is showing me red marks on indentations in `test_mnist_accuracy.py`. We should set up a standard way to configure our editors.\n The whitespace and a few uses of xrange have been what it took to make the tutorials work with python3. If you are inclined to fix these, I would prepare a pull request.\r\n  This seems harmless, but it is annoying. Not sure if we can fix it, since it may be a bug in TensorFlow itself.\n\nAt the end of the MNIST tutorial, I get this error message:\n    Exception AttributeError: AttributeError(\"'NoneType' object has no attribute 'raise_exception_on_not_ok_status'\",) in <bound method Session.__del__ of <tensorflow.python.client.session.Session object at 0x7fb09c05ad50>> ignored\n I still get it consistently:\n`Completed model training.\nException ignored in: <bound method BaseSession.__del__ of <tensorflow.python.client.session.Session object at 0x7f99aa445c88>>\nTraceback (most recent call last):\n  File \"/opt/anaconda/4.2.0/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 522, in __del__\n  File \"/opt/anaconda/4.2.0/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 518, in close\n  File \"/opt/anaconda/4.2.0/lib/python3.5/contextlib.py\", line 133, in helper\nTypeError: 'NoneType' object is not callable`\n Looks fixed now, maybe by updating tensorflow to 0.12 It still happens, it is just flaky.\r\n\r\nOut of three runs, I had this happen once:\r\n    Completed model training.\r\n    Exception ignored in: <bound method BaseSession.__del__ of <tensorflow.python.client.session.Session object at 0x7f5564ed4f28>>\r\n    Traceback (most recent call last):\r\n      File \"/home/ian/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 581, in __del__\r\n    UnboundLocalError: local variable 'status' referenced before assignment I get the following message which is somehow related:\r\n\r\nException ignored in: <bound method Session.__del__ of <tensorflow.python.client.session.Session object at 0x7f4e28be0668>>\r\nTraceback (most recent call last):\r\n  File \"/data/dgueraco/tensorflow/lib/python3.4/site-packages/tensorflow/python/client/session.py\", line 582, in __del__\r\nAttributeError: 'NoneType' object has no attribute 'TF_DeleteStatus'\r\n\r\nAdding `sess.close()` at the end of the tutorial seems to fix it. I don't get this error message anymore. Can re-open if someone else does. I am getting this error `AttributeError: 'NoneType' object has no attribute 'TF_DeleteStatus'` when I run keras code Thanks for the report. Re-opening the issue. I am also periodically getting a similar error at the end of my program when using Keras\r\n`Exception ignored in: <bound method Session.__del__ of <tensorflow.python.client.session.Session object at 0x7fc0665ff2b0>>\r\nTraceback (most recent call last):\r\n  File \".../lib/python3.4/site-packages/tensorflow/python/client/session.py\", line 595, in __del__\r\nTypeError: 'NoneType' object is not callable`\r\nI'm using Keras version 2.0.5 and Tensorflow version 1.2.1 I can see the issue in Tensorflow 1.4dev. A recent Travis build for #266 -- Python 2.7/TensorFlow 1.1.0 turns up a similar error:\r\n\r\n`Exception AttributeError: \"'NoneType' object has no attribute 'TF_NewStatus'\" in <bound method` `Session.__del__ of <tensorflow.python.client.session.Session object at 0x7f95ad07c610>> ignored`\r\n\r\nIt looks like the issue is well known here: https://github.com/tensorflow/tensorflow/issues/8652\r\n I am also getting this error\r\n```\r\nException ignored in: <bound method BaseSession.__del__ of <tensorflow.python.client.session.Session object at 0x7f711d56b7b8>>\r\nTraceback (most recent call last):\r\n  File \"~/venv/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 701, in __del__\r\nTypeError: 'NoneType' object is not callable\r\n\r\n``` And the issue happened in the following session.py block \r\n\r\n```\r\ndef __del__(self):\r\n    # cleanly ignore all exceptions\r\n    try:\r\n      self.close()\r\n    except Exception:  # pylint: disable=broad-except\r\n      pass\r\n    if self._session is not None:\r\n      # We create `status` outside the `try` block because at shutdown\r\n      # `tf_session` may have been garbage collected, and the creation of a\r\n      # status object may fail. In that case, we prefer to ignore the failure\r\n      # and silently leak the session object, since the program is about to\r\n      # terminate.\r\n      status = None\r\n      try:\r\n        status = tf_session.TF_NewStatus() # the problem occurs here\r\n        if self._created_with_new_api:\r\n          tf_session.TF_DeleteSession(self._session, status)\r\n        else:\r\n          tf_session.TF_DeleteDeprecatedSession(self._session, status)\r\n      except AttributeError:\r\n        # 'NoneType' object has no attribute 'TF_NewStatus'\r\n        pass\r\n      finally:\r\n        if status is not None:\r\n          tf_session.TF_DeleteStatus(status)\r\n      self._session = None\r\n``` I have got the some problem with Tensorflow + Keras.\r\n\r\nTensorflow: 1.3.0\r\nKeras: 2.0.6\r\n\r\n```^CTraceback (most recent call last):\r\n  File \"main.py\", line 172, in <module>\r\n    main()\r\n  File \"main.py\", line 142, in xxx\r\n    p = model.predict(i)\r\n  File \"/usr/local/lib/python3.5/dist-packages/keras/models.py\", line 909, in predict\r\n    return self.model.predict(x, batch_size=batch_size, verbose=verbose)\r\n  File \"/usr/local/lib/python3.5/dist-packages/keras/engine/training.py\", line 1517, in predict\r\n    batch_size=batch_size, verbose=verbose)\r\n  File \"/usr/local/lib/python3.5/dist-packages/keras/engine/training.py\", line 1141, in _predict_loop\r\n    batch_outs = f(ins_batch)\r\n  File \"/usr/local/lib/python3.5/dist-packages/keras/backend/tensorflow_backend.py\", line 2268, in __call__\r\n    **self.session_kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 895, in run\r\n    run_metadata_ptr)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1124, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\r\n    options, run_metadata)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1327, in _do_call\r\n    return fn(*args)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1306, in _run_fn\r\n    status, run_metadata)\r\n``` I am still getting the same error with Tf: 1.4.0 and Keras 2.1.2 TF 1.4.0 and Keras 2.0.8 here\r\n\r\nThough it does not seem to have any negative consequences, does it? It doesn't seem to have negative consequences besides an annoying amount of text.\r\n\r\nWe don't need more reports that it's happening here in the CleverHans repository.\r\n\r\nFeel free to comment on the open issue for TensorFlow: https://github.com/tensorflow/tensorflow/issues/8652\r\n\r\nAll we can do in CleverHans is wait for the source of the issue to be fixed. @goodfeli thanks for the response!\r\nThe only annoying issue is that I am trying to save the classification results in a csv file for some audio clips and it doesn't reach that line. However, I get the results in the terminal.\r\nI figured I have to restart Atom in my case and open a new terminal to re-run the code correctly If you're having trouble with code not executing, open a new issue. This issue is just to track the weird error message, which seems to originate external to CleverHans. get same kind of error with\uff1a\r\n\r\ntensorflow:1.5.0\r\nkeras:2.1.3\r\n\r\n```\r\nException ignored in: <bound method BaseSession.__del__ of <tensorflow.python.client.session.Session object at 0x7f191b5f8860>>\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 696, in __del__\r\nTypeError: 'NoneType' object is not callable\r\n\r\n``` Exception ignored in: <bound method BaseSession.__del__ of <tensorflow.python.client.session.Session object at 0x7f5b4bcab9e8>>\r\nTraceback (most recent call last):\r\n  File \"/home/rps/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 696, in __del__\r\nTypeError: 'NoneType' object is not callable\r\n\r\n\r\nSame error here.\r\nThis happens to me ONLY when I run a script while the same script is already running.\r\n\r\n\r\nKeras: 2.1.2\r\nTensorflow: 1.4.1\r\n\r\n I get the error once every three runs or so, Tensorflow 1.5, Linux. This is the code:\r\n```\r\na = tf.get_variable('a', initializer=[23.6])\r\nwith tf.get_default_graph().gradient_override_map({\"Round\": \"Identity\"}):\r\n    x = tf.round(a)\r\n\r\ng = tf.gradients(x, a)\r\n\r\nwith tf.Session() as sess:\r\n    sess.run(tf.global_variables_initializer())\r\n    G = sess.run(g)\r\n    print(G)\r\n```\r\nSometimes error:\r\n```\r\n[array([1.], dtype=float32)]\r\nException ignored in: <bound method BaseSession.__del__ of <tensorflow.python.client.session.Session object at 0x7f873c429828>>\r\nTraceback (most recent call last):\r\n  File \"/user/dlb/virt_env_tf15_cpu/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 702, in __del__\r\nTypeError: 'NoneType' object is not callable\r\n\r\n```\r\n @goodfeli shall we close this issue then? Closing this issue because it is outside the domain of CleverHans.\r\n\r\nHere's the link to the open issue in Tensorflow:\r\nhttps://github.com/tensorflow/tensorflow/issues/8652 ```\r\nException ignored in: <bound method BaseSession._Callable.__del__ of <tensorflow\r\n.python.client.session.BaseSession._Callable object at 0x0000000023596048>>\r\nTraceback (most recent call last):\r\n  File \"F:\\DeepFaceLab\\_internal\\bin\\lib\\site-packages\\tensorflow\\python\\client\\\r\nsession.py\", line 1413, in __del__\r\nAttributeError: 'NoneType' object has no attribute 'raise_exception_on_not_ok_st\r\natus'\r\n```\r\n\r\nsame error. TF 1.11.0 , keras 2.2.4 still not solved I think it would be best to raise an issue on the tensorflow tracker or to ping the existing issue: https://github.com/tensorflow/tensorflow/issues/8652 my last tests show that is keras issue \r\nhttps://github.com/keras-team/keras/issues/11751  with current model, after 5 epochs of adversarial training, clean accuracy should definitely be .97 or better, adv accuracy should definitely be .79 or better. usually better than this but things aren't seeded so it fluctuates\n  ideally we would only need keras for the tutorial, so that people using other frameworks can run the benchmarks\n I think let's make sure people can import the attacks and run them without needing any particular framework. e.g., it should work if the user has only theano, or if the user has only tensorflow. It's OK for the tutorial to use keras.\n  should benchmark it and make sure the runtime is correct.\n without looking at the code, I bet we're missing a stop_gradient somewhere\n 3.7 seconds per 100 batches for naive training\n 52 sec per 100 batches for adv training\n in pylearn2, my result with adversarial training takes 3 sec per full epoch\n in pylearn2, without adversarial training, my code runs in 1 sec per full epoch\n naive training is forward-back, O(2).\nadversarial training is forward-back, back(with different targets)-forward-back, so O(5) if no steps can be parallelized. So it should be roughly 2.5X slower than naive training in theory.\nThe pylearn2 implementation is 3X slower than naive training, so apparently in practice we can expect some extra overhead.\nDoesn't explain why this is > 10X slower.\n whoa, actually something is seriously weird.\n1st 100 batches with adv training take 54 seconds\n2nd 100 batches take 102 seconds\n3rd 100 batches take 153 seconds\n  I got something > .6. Not sure why this would be; I'd expect something like .99 for such a large eps.\n oh, maybe because it's a convolutional model. all my MNIST experiments in the past have been with fully connected models.\n OK, this seems legit then. Interesting that convolution is so effective on MNIST.\n  was i meant to need to set image order to 'th' in ~/.keras?\n (it's ok, it just needs to be documented clearly / maybe check it and raise a ValueError or something in the tutorial)\n can the tutorial just override the keras settings to the ones that are needed for the tutorial?\n    ", "text_all_count": 146477, "text_word_token": ["The", "original", "work", "by", "Madry", "et", "al", "mentions", "that", "in", "the", "optimization", "loop", "of", "their", "attack", "they", "normalize", "the", "gradient", "before", "multiplying", "it", "with", "the", "step", "size", "NUMBER", "I", "may", "have", "miss", "some", "function", "calls", "made", "but", "after", "having", "a", "look", "at", "the", "ProjectedGradientDescent", "implementation", "it", "seems", "that", "at", "no", "stage", "be", "the", "gradients", "normalized", "before", "perturbing", "the", "image", "NUMBER", "A", "recently", "release", "version", "code", "base", "by", "the", "authors", "themselves", "for", "this", "attack", "uses", "gradient", "normalization", "as", "well", "LINK", "_steps", "NUMBER", "py", "L", "NUMBER", "I", "be", "not", "sure", "if", "this", "miss", "step", "in", "the", "cleverhans", "implementation", "be", "a", "bug", "or", "be", "do", "effectively", "via", "some", "other", "function", "call", "steps", "maybe", "earlier", "later", "somewhere", "in", "the", "code", "MadryEtal", "uses", "ProjectedGradientDescent", "LINK", "_modules", "cleverhans", "attacks", "projected_gradient_descent", "NUMBER", "html", "ProjectedGradientDescent", "which", "further", "uses", "FGM", "to", "compute", "the", "perturbation", "use", "the", "gradient", "NUMBER", "I", "could", "not", "find", "any", "step", "in", "the", "FGSM", "implementation", "that", "normalizes", "gradients", "I", "may", "have", "miss", "this", "step", "in", "case", "it", "be", "there", "in", "which", "case", "I", "apologize", "iamgroot", "NUMBER", "I", "might", "be", "misunderstanding", "this", "but", "if", "by", "normalize", "you", "mean", "the", "projection", "step", "I", "think", "it", "be", "in", "clip_eta", "NUMBER", "michaelshiyu", "if", "you", "have", "a", "look", "here", "LINK", "_steps", "NUMBER", "py", "L", "NUMBER", "the", "step", "function", "be", "call", "inside", "the", "main", "attack", "they", "normalize", "the", "gradient", "first", "NUMBER", "The", "clip_eta", "step", "be", "for", "limiting", "the", "perturbation", "to", "the", "epsilon", "L", "p", "ball", "which", "be", "different", "from", "what", "I", "be", "talking", "about", "iamgroot", "NUMBER", "I", "don", "t", "think", "this", "normalization", "be", "mention", "in", "either", "of", "the", "papers", "referenced", "by", "CleverHans", "PGD", "implementation", "NUMBER", "Although", "I", "think", "both", "papers", "only", "discussed", "the", "inf", "norm", "case", "unless", "I", "ve", "miss", "something", "NUMBER", "Also", "in", "their", "implementation", "wouldn", "t", "this", "normalization", "step", "affect", "the", "following", "projection", "step", "at", "least", "when", "use", "NUMBER", "norm", "For", "example", "say", "if", "a", "certain", "gradient", "vector", "has", "NUMBER", "norm", "NUMBER", "and", "we", "set", "self", "NUMBER", "eps", "NUMBER", "then", "because", "you", "normalize", "this", "gradient", "to", "have", "norm", "NUMBER", "before", "the", "projection", "you", "now", "have", "to", "clip", "its", "norm", "to", "NUMBER", "But", "without", "normalization", "we", "wouldn", "t", "clip", "this", "gradient", "at", "all", "NUMBER", "Page", "NUMBER", "of", "this", "paper", "LINK", "by", "the", "same", "research", "lab", "references", "the", "Madry", "attack", "saying", "that", "we", "normalize", "the", "gradient", "at", "each", "step", "of", "PGD", "NUMBER", "If", "you", "look", "at", "their", "implementation", "in", "the", "robustness", "LINK", "package", "which", "be", "from", "the", "research", "lab", "which", "publish", "the", "PGD", "paper", "they", "do", "actually", "normalize", "the", "gradients", "the", "link", "I", "gave", "in", "my", "previous", "comment", "NUMBER", "Since", "this", "library", "be", "maintained", "and", "use", "by", "the", "PGD", "authors", "themselves", "I", "think", "we", "ought", "to", "have", "a", "similar", "implementation", "What", "do", "you", "think", "michaelshiyu", "npapernot", "iamgroot", "NUMBER", "I", "was", "referring", "to", "the", "normalization", "in", "the", "robustness", "LINK", "package", "NUMBER", "I", "might", "be", "wrong", "but", "I", "think", "it", "interferes", "with", "the", "projection", "step", "at", "least", "when", "we", "be", "use", "NUMBER", "norm", "NUMBER", "Is", "this", "a", "wanted", "effect", "Also", "I", "might", "be", "wrong", "again", "but", "I", "don", "t", "think", "the", "PGD", "attack", "was", "propose", "by", "the", "Madry", "lab", "NUMBER", "They", "themselves", "referred", "to", "another", "paper", "LINK", "in", "their", "ICLR", "NUMBER", "paper", "LINK", "rJzIBfZAb", "NUMBER", "I", "think", "they", "be", "aware", "of", "that", "fact", "and", "that", "it", "may", "not", "be", "interference", "according", "to", "them", "NUMBER", "They", "normalize", "the", "gradients", "first", "and", "then", "do", "other", "projection", "steps", "NUMBER", "As", "far", "as", "the", "attack", "be", "concerned", "well", "the", "Cleverhans", "implementation", "do", "read", "MadryEtAl", "P", "This", "be", "why", "I", "be", "a", "bit", "confused", "which", "one", "of", "these", "two", "be", "the", "correct", "implementation", "iamgroot", "NUMBER", "Personally", "I", "find", "it", "difficult", "to", "argue", "that", "such", "normalization", "be", "beneficial", "in", "any", "generic", "setting", "since", "it", "messes", "up", "the", "projection", "step", "NUMBER", "I", "took", "another", "look", "at", "the", "Adversarial", "Examples", "Are", "Not", "Bugs", "paper", "and", "I", "couldn", "t", "find", "a", "place", "where", "they", "discuss", "how", "this", "normalization", "helps", "NUMBER", "My", "take", "be", "that", "if", "you", "normalize", "gradient", "before", "projecting", "you", "be", "not", "projecting", "the", "true", "gradient", "so", "you", "be", "not", "performing", "projected", "gradient", "descent", "as", "it", "be", "from", "optimization", "NUMBER", "Anyway", "I", "guess", "they", "find", "this", "to", "be", "helpful", "in", "some", "way", "NUMBER", "But", "I", "think", "this", "be", "more", "of", "a", "heuristic", "thing", "than", "be", "correct", "or", "not", "NUMBER", "So", "in", "that", "case", "the", "Cleverhans", "implementation", "be", "correct", "and", "theirs", "be", "not", "in", "the", "sense", "that", "it", "be", "not", "true", "to", "the", "original", "attack", "and", "they", "should", "keep", "the", "normalization", "optional", "and", "use", "it", "only", "when", "needed", "for", "example", "when", "implement", "the", "mention", "paper", "iamgroot", "NUMBER", "I", "think", "at", "least", "in", "the", "NUMBER", "norm", "case", "which", "be", "what", "they", "did", "for", "the", "robustness", "LINK", "package", "normalizing", "or", "not", "do", "not", "really", "change", "things", "since", "you", "can", "undo", "the", "effect", "of", "normalization", "by", "change", "the", "step", "size", "for", "each", "example", "NUMBER", "But", "yes", "I", "think", "the", "CleverHans", "implementation", "follows", "the", "strict", "definition", "of", "projected", "gradient", "descent", "as", "an", "optimization", "technique", "NUMBER", "With", "that", "said", "I", "think", "npapernot", "be", "much", "more", "qualified", "than", "me", "to", "say", "which", "one", "be", "correct", "NUMBER", "The", "issue", "tracker", "should", "only", "be", "use", "to", "report", "bug", "or", "feature", "request", "NUMBER", "If", "you", "be", "looking", "for", "support", "from", "other", "library", "users", "please", "ask", "a", "question", "on", "StackOverflow", "LINK", "NUMBER", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Just", "like", "most", "machine", "learning", "based", "libraries", "users", "should", "have", "the", "option", "to", "perform", "batched", "attacks", "NUMBER", "Some", "attacks", "may", "not", "support", "parallelism", "that", "well", "but", "we", "can", "at", "least", "offer", "the", "option", "for", "them", "to", "send", "in", "all", "data", "with", "a", "batch", "size", "instead", "of", "them", "batching", "it", "themselves", "and", "then", "sending", "it", "some", "attacks", "like", "MadryEtAl", "cannot", "be", "run", "altogether", "on", "a", "lot", "of", "data", "Describe", "the", "solution", "you", "d", "like", "A", "simple", "loop", "to", "iterate", "through", "data", "in", "batches", "resting", "in", "the", "generic", "Attack", "class", "maybe", "Uses", "the", "batch_size", "attack_parameter", "make", "it", "standard", "uses", "that", "batch", "size", "to", "iterate", "through", "data", "batch", "wise", "NUMBER", "We", "could", "also", "check", "for", "actual", "batched", "support", "for", "attacks", "for", "Eg", "MadryEtAl", "doesn", "t", "support", "currently", "in", "terms", "of", "flags", "and", "pass", "that", "on", "while", "performing", "the", "batched", "attacks", "Describe", "alternatives", "you", "ve", "considered", "As", "a", "user", "I", "just", "break", "my", "data", "into", "batches", "and", "then", "concentrate", "all", "batch", "wise", "perturbed", "data", "batches", "together", "NUMBER", "It", "s", "not", "too", "long", "a", "workaround", "but", "it", "would", "definitely", "be", "favorable", "to", "have", "such", "a", "functionality", "behind", "the", "curtains", "in", "the", "library", "itself", "NUMBER", "A", "clear", "and", "concise", "description", "of", "any", "alternative", "solutions", "or", "features", "you", "ve", "considered", "NUMBER", "Additional", "context", "I", "could", "work", "on", "this", "solution", "if", "the", "maintainers", "think", "this", "could", "be", "useful", "NUMBER", "Should", "not", "take", "a", "lot", "of", "time", "just", "some", "basic", "change", "in", "the", "attack", "module", "along", "with", "maybe", "some", "test", "Yes", "but", "the", "batch", "size", "use", "by", "the", "attack", "algorithm", "do", "not", "seem", "to", "be", "a", "controllable", "parameter", "NUMBER", "For", "instance", "run", "MadryEtAl", "on", "a", "large", "set", "of", "data", "fail", "since", "it", "try", "to", "compute", "everything", "in", "one", "go", "NUMBER", "Maybe", "support", "for", "a", "batch_size", "param", "could", "help", "call", "this", "attack", "directly", "instead", "of", "users", "breaking", "data", "into", "chunks", "and", "then", "combining", "data", "themselves", "in", "the", "end", "I", "tried", "to", "generate", "adversarial", "examples", "on", "the", "test", "set", "of", "CIFAR", "NUMBER", "together", "in", "one", "go", "for", "a", "Resnet", "NUMBER", "model", "for", "which", "I", "get", "an", "internal", "OOM", "error", "NUMBER", "It", "would", "be", "nice", "to", "have", "a", "batch_size", "parameter", "if", "I", "be", "not", "wrong", "it", "be", "already", "present", "for", "some", "attacks", "eg", "HopSkipJumpAttack", "for", "this", "attack", "NUMBER", "We", "could", "have", "a", "basic", "batch", "breaking", "operation", "in", "the", "base", "class", "and", "function", "which", "already", "implement", "batching", "could", "use", "their", "batching", "instead", "NUMBER", "I", "could", "submit", "a", "PR", "for", "this", "if", "it", "sounds", "like", "a", "good", "feature", "to", "have", "Cleverhans", "version", "NUMBER", "Tensorflow", "version", "NUMBER", "Describe", "the", "bug", "Run", "python", "generate_imperceptible_adv", "NUMBER", "py", "in", "examples", "adversarial_asr", "The", "following", "error", "occur", "File", "home", "fan", "anaconda", "NUMBER", "envs", "tf", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "load_library", "NUMBER", "py", "line", "NUMBER", "in", "load_op_library", "lib_handle", "py_tf", "NUMBER", "TF_LoadLibrary", "library_filename", "tensorflow", "NUMBER", "python", "NUMBER", "framework", "NUMBER", "errors_impl", "NUMBER", "NotFoundError", "libtensorflow_framework", "NUMBER", "so", "cannot", "open", "shared", "object", "file", "No", "such", "file", "or", "directory", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "export", "LINGVO_DEVICE", "gpu", "NUMBER", "export", "LINGVO_DIR", "HOME", "lingvo", "NUMBER", "sudo", "docker", "run", "rm", "test", "LINGVO_DEVICE", "gpu", "echo", "runtime", "nvidia", "it", "v", "LINGVO_DIR", "tmp", "lingvo", "v", "lingvo_compiled", "tmp", "lingvo_compiled", "v", "HOME", "NUMBER", "gitconfig", "home", "USER", "NUMBER", "gitconfig", "ro", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "name", "lingvo", "tensorflow", "lingvo", "bash", "root", "cff", "NUMBER", "d", "NUMBER", "d", "NUMBER", "tmp", "lingvo", "bazel", "build", "c", "opt", "config", "cuda", "lingvo", "trainer", "Extracting", "Bazel", "installation", "NUMBER", "Starting", "local", "Bazel", "server", "and", "connecting", "to", "it", "NUMBER", "INFO", "Repository", "rule", "subpar", "returned", "remote", "LINK", "commit", "NUMBER", "ff", "NUMBER", "feb", "NUMBER", "c", "NUMBER", "b", "NUMBER", "eea", "NUMBER", "eb", "NUMBER", "ec", "NUMBER", "b", "NUMBER", "cf", "NUMBER", "shallow_since", "NUMBER", "NUMBER", "NUMBER", "init_submodules", "False", "verbose", "False", "strip_prefix", "patches", "patch_tool", "patch", "patch_args", "p", "NUMBER", "patch_cmds", "name", "subpar", "INFO", "Analysed", "target", "lingvo", "trainer", "NUMBER", "package", "loaded", "NUMBER", "INFO", "Found", "NUMBER", "target", "NUMBER", "Target", "lingvo", "trainer", "up", "to", "date", "bazel", "bin", "lingvo", "trainer", "INFO", "Elapsed", "time", "NUMBER", "s", "Critical", "Path", "NUMBER", "s", "INFO", "NUMBER", "processes", "NUMBER", "processwrapper", "sandbox", "NUMBER", "INFO", "Build", "completed", "successfully", "NUMBER", "total", "actions", "root", "cff", "NUMBER", "d", "NUMBER", "d", "NUMBER", "tmp", "lingvo", "cp", "rfL", "bazel", "bin", "lingvo", "trainer", "NUMBER", "runfiles", "__main__", "lingvo", "tmp", "lingvo_compiled", "root", "cff", "NUMBER", "d", "NUMBER", "d", "NUMBER", "tmp", "lingvo", "exit", "NUMBER", "sudo", "chown", "R", "USER", "lingvo_compiled", "NUMBER", "export", "PYTHONPATH", "PYTHONPATH", "lingvo_compiled", "NUMBER", "python", "generate_imperceptible_adv", "NUMBER", "py", "NUMBER", "see", "the", "error", "Expected", "behavior", "generate", "imperceptible", "adversarial", "examples", "Screenshots", "\u5fae\u4fe1\u56fe\u7247_", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "ba", "NUMBER", "dde", "NUMBER", "png", "System", "configuration", "ubuntu", "NUMBER", "Python", "NUMBER", "tensorflow", "gpu", "NUMBER", "cuda", "NUMBER", "cudnn", "NUMBER", "Looking", "forward", "to", "your", "reply", "NUMBER", "Add", "a", "VGG", "type", "baseline", "CNN", "model", "Thanks", "for", "your", "pull", "request", "NUMBER", "It", "looks", "like", "this", "may", "be", "your", "first", "contribution", "to", "a", "Google", "open", "source", "project", "if", "not", "look", "below", "for", "help", "NUMBER", "Before", "we", "can", "look", "at", "your", "pull", "request", "you", "ll", "need", "to", "sign", "a", "Contributor", "License", "Agreement", "CLA", "NUMBER", "memo", "Please", "visit", "TAG", "to", "sign", "NUMBER", "Once", "you", "ve", "sign", "or", "fix", "any", "issue", "please", "reply", "here", "with", "googlebot", "I", "sign", "it", "and", "we", "ll", "verify", "it", "NUMBER", "What", "to", "do", "if", "you", "already", "sign", "the", "CLA", "Individual", "signers", "It", "s", "possible", "we", "don", "t", "have", "your", "GitHub", "username", "or", "you", "re", "use", "a", "different", "email", "address", "on", "your", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "Corporate", "signers", "Your", "company", "has", "a", "Point", "of", "Contact", "who", "decides", "which", "employees", "be", "authorized", "to", "participate", "NUMBER", "Ask", "your", "POC", "to", "be", "add", "to", "the", "group", "of", "authorized", "contributors", "NUMBER", "If", "you", "don", "t", "know", "who", "your", "Point", "of", "Contact", "be", "direct", "the", "Google", "project", "maintainer", "to", "go", "cla", "troubleshoot", "LINK", "troubleshoot", "Public", "version", "LINK", "troubleshoot", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "be", "the", "email", "use", "for", "the", "Git", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "also", "be", "attached", "to", "your", "GitHub", "account", "LINK", "NUMBER", "\u2139", "Googlers", "Go", "here", "LINK", "NUMBER", "A", "NUMBER", "F", "NUMBER", "Fgithub", "NUMBER", "com", "NUMBER", "Ftensorflow", "NUMBER", "Fcleverhans", "NUMBER", "Fpull", "NUMBER", "F", "NUMBER", "for", "more", "info", "NUMBER", "TAG", "Once", "you", "ve", "sign", "or", "fix", "any", "issue", "please", "reply", "here", "with", "googlebot", "I", "sign", "it", "and", "we", "ll", "verify", "it", "NUMBER", "googlebot", "I", "sign", "it", "googlebot", "I", "sign", "it", "Sent", "from", "my", "iPhone", "On", "Sep", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "googlebot", "TAG", "write", "Thanks", "for", "your", "pull", "request", "NUMBER", "It", "looks", "like", "this", "may", "be", "your", "first", "contribution", "to", "a", "Google", "open", "source", "project", "if", "not", "look", "below", "for", "help", "NUMBER", "Before", "we", "can", "look", "at", "your", "pull", "request", "you", "ll", "need", "to", "sign", "a", "Contributor", "License", "Agreement", "CLA", "NUMBER", "Please", "visit", "LINK", "to", "sign", "NUMBER", "Once", "you", "ve", "sign", "or", "fix", "any", "issue", "please", "reply", "here", "with", "googlebot", "I", "sign", "it", "and", "we", "ll", "verify", "it", "NUMBER", "What", "to", "do", "if", "you", "already", "sign", "the", "CLA", "Individual", "signers", "It", "s", "possible", "we", "don", "t", "have", "your", "GitHub", "username", "or", "you", "re", "use", "a", "different", "email", "address", "on", "your", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "NUMBER", "Corporate", "signers", "Your", "company", "has", "a", "Point", "of", "Contact", "who", "decides", "which", "employees", "be", "authorized", "to", "participate", "NUMBER", "Ask", "your", "POC", "to", "be", "add", "to", "the", "group", "of", "authorized", "contributors", "NUMBER", "If", "you", "don", "t", "know", "who", "your", "Point", "of", "Contact", "be", "direct", "the", "Google", "project", "maintainer", "to", "go", "cla", "troubleshoot", "Public", "version", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "be", "the", "email", "use", "for", "the", "Git", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "also", "be", "attached", "to", "your", "GitHub", "account", "NUMBER", "\u2139", "Googlers", "Go", "here", "for", "more", "info", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "or", "mute", "the", "thread", "NUMBER", "Hi", "thanks", "for", "get", "back", "to", "me", "NUMBER", "I", "will", "take", "a", "look", "at", "add", "the", "two", "tutorials", "to", "the", "examples", "folder", "NUMBER", "In", "addition", "to", "the", "tutorials", "the", "PR", "also", "include", "the", "addition", "of", "a", "new", "baseline", "model", "VGG_model", "which", "be", "a", "bit", "more", "resilient", "to", "adversarial", "attacks", "than", "the", "exist", "baseline", "CNN", "model", "NUMBER", "Will", "that", "new", "model", "be", "merge", "into", "the", "master", "Thank", "you", "I", "be", "trying", "to", "attack", "on", "an", "image", "use", "cleverhans", "package", "and", "following", "be", "my", "code", "wrap", "KerasModelWrapper", "model", "fgsm", "FastGradientMethod", "wrap", "sess", "sess", "fgsm_params", "eps", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "adv_x", "fgsm", "NUMBER", "generate_np", "x_validation", "fgsm_params", "for", "adv_x", "fgsm", "NUMBER", "generate_np", "x_validation", "fgsm_params", "line", "I", "be", "get", "error", "as", "Checkpointable", "NUMBER", "_track_checkpointable", "pass", "type", "TAG", "not", "a", "Checkpointable", "NUMBER", "What", "can", "be", "the", "reason", "Hi", "authors", "I", "try", "to", "evalute", "accuracy", "of", "my", "secret", "model", "on", "CIFAR", "NUMBER", "data", "which", "value", "defened", "NUMBER", "NUMBER", "with", "CWL", "NUMBER", "From", "what", "I", "know", "when", "confidence", "increases", "adversarial", "data", "will", "be", "stronger", "and", "accuracy", "will", "decrease", "But", "the", "result", "be", "different", "from", "what", "I", "thought", "NUMBER", "acc", "clean", "NUMBER", "acc", "confidence", "NUMBER", "NUMBER", "acc", "confidence", "NUMBER", "NUMBER", "Also", "I", "get", "some", "warning", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "numpy", "core", "fromnumeric", "NUMBER", "py", "NUMBER", "RuntimeWarning", "Mean", "of", "empty", "slice", "NUMBER", "out", "out", "kwargs", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "numpy", "core", "_methods", "NUMBER", "py", "NUMBER", "RuntimeWarning", "invalid", "value", "encountered", "in", "double_scalars", "ret", "ret", "NUMBER", "dtype", "NUMBER", "type", "ret", "rcount", "Following", "be", "a", "minimal", "testcase", "NUMBER", "In", "this", "testcase", "confidence", "NUMBER", "may", "not", "be", "a", "reasonable", "value", "but", "I", "just", "want", "to", "repoduce", "runtime", "warning", "in", "the", "simple", "cnn", "model", "NUMBER", "dockerfile", "set", "tf", "version", "ARG", "TF_VER", "NUMBER", "download", "data", "Druing", "build", "stage", "docker", "can", "t", "load", "cuda", "modules", "NUMBER", "Using", "CPU", "version", "of", "tensorflow", "to", "download", "datasets", "and", "copy", "it", "to", "GPU", "version", "of", "image", "From", "tensorflow", "tensorflow", "TF_VER", "py", "NUMBER", "as", "dataset", "RUN", "python", "c", "import", "tensorflow", "as", "tf", "tf", "NUMBER", "keras", "NUMBER", "datasets", "NUMBER", "cifar", "NUMBER", "load_data", "developing", "environment", "From", "nvidia", "cuda", "NUMBER", "cudnn", "NUMBER", "runtime", "ubuntu", "NUMBER", "ARG", "TF_VER", "install", "python", "and", "tensorflow", "gpu", "RUN", "apt", "update", "apt", "install", "y", "python", "NUMBER", "python", "NUMBER", "pip", "ln", "s", "which", "python", "NUMBER", "usr", "local", "bin", "python", "ln", "s", "which", "pip", "NUMBER", "usr", "local", "bin", "pip", "pip", "install", "tensorflow", "gpu", "TF_VER", "rm", "rf", "var", "lib", "apt", "lists", "install", "tool", "RUN", "apt", "update", "DEBIAN_FRONTEND", "noninteractive", "apt", "install", "tzdata", "apt", "install", "y", "rsync", "git", "vim", "wget", "apt", "install", "y", "libsm", "NUMBER", "libxrender", "NUMBER", "libxext", "dev", "rm", "rf", "var", "lib", "apt", "lists", "install", "python", "package", "RUN", "pip", "install", "imgaug", "pyyaml", "pip", "install", "git", "LINK", "f", "NUMBER", "cf", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "f", "NUMBER", "f", "NUMBER", "fc", "NUMBER", "b", "NUMBER", "b", "NUMBER", "e", "NUMBER", "dcdc", "NUMBER", "egg", "cleverhans", "copy", "data", "COPY", "from", "dataset", "root", "NUMBER", "keras", "root", "NUMBER", "keras", "set", "workdir", "WORKDIR", "workdir", "add", "source", "code", "ADD", "NUMBER", "workdir", "RUN", "git", "clean", "df", "NUMBER", "checkout", "commit", "RUN", "git", "checkout", "git", "hash", "run", "program", "CMD", "bash", "c", "make", "train", "CMD", "python", "train_vgg", "NUMBER", "py", "python", "from", "__future__", "import", "print_function", "from", "tensorflow", "import", "keras", "from", "tensorflow", "NUMBER", "keras", "NUMBER", "datasets", "import", "cifar", "NUMBER", "from", "tensorflow", "NUMBER", "keras", "NUMBER", "preprocessing", "NUMBER", "image", "import", "ImageDataGenerator", "from", "tensorflow", "NUMBER", "keras", "NUMBER", "models", "import", "Sequential", "from", "tensorflow", "NUMBER", "keras", "NUMBER", "layers", "import", "Dense", "Dropout", "Activation", "Flatten", "from", "tensorflow", "NUMBER", "keras", "NUMBER", "layers", "import", "Conv", "NUMBER", "D", "MaxPooling", "NUMBER", "D", "import", "tensorflow", "as", "tf", "import", "os", "import", "os", "os", "NUMBER", "environ", "CUDA_VISIBLE_DEVICES", "NUMBER", "init", "tf", "keras", "gpu_options", "tf", "NUMBER", "GPUOptions", "allow_growth", "True", "sess", "tf", "NUMBER", "Session", "config", "tf", "NUMBER", "ConfigProto", "gpu_options", "gpu_options", "tf", "NUMBER", "keras", "NUMBER", "backend", "NUMBER", "set_session", "sess", "num_classes", "NUMBER", "save_dir", "os", "NUMBER", "path", "NUMBER", "join", "os", "NUMBER", "getcwd", "models", "model_name", "cifar", "NUMBER", "_cnn_model", "NUMBER", "h", "NUMBER", "The", "data", "split", "between", "train", "and", "test", "sets", "x_train", "y_train", "x_test", "y_test", "cifar", "NUMBER", "load_data", "print", "x_train", "shape", "x_train", "NUMBER", "shape", "print", "x_train", "NUMBER", "shape", "NUMBER", "train", "samples", "print", "x_test", "NUMBER", "shape", "NUMBER", "test", "samples", "Convert", "class", "vectors", "to", "binary", "class", "matrices", "NUMBER", "y_train", "keras", "NUMBER", "utils", "NUMBER", "to_categorical", "y_train", "num_classes", "y_test", "keras", "NUMBER", "utils", "NUMBER", "to_categorical", "y_test", "num_classes", "x_train", "x_train", "NUMBER", "astype", "float", "NUMBER", "x_test", "x_test", "NUMBER", "astype", "float", "NUMBER", "x_train", "x_train", "NUMBER", "x_test", "x_test", "NUMBER", "Save", "model", "and", "weights", "if", "not", "os", "NUMBER", "path", "NUMBER", "isdir", "save_dir", "os", "NUMBER", "makedirs", "save_dir", "model_path", "os", "NUMBER", "path", "NUMBER", "join", "save_dir", "model_name", "batch_size", "NUMBER", "epochs", "NUMBER", "data_augmentation", "True", "model", "Sequential", "model", "NUMBER", "add", "Conv", "NUMBER", "D", "NUMBER", "NUMBER", "NUMBER", "padding", "same", "input_shape", "x_train", "NUMBER", "shape", "NUMBER", "model", "NUMBER", "add", "Activation", "relu", "model", "NUMBER", "add", "Conv", "NUMBER", "D", "NUMBER", "NUMBER", "NUMBER", "model", "NUMBER", "add", "Activation", "relu", "model", "NUMBER", "add", "MaxPooling", "NUMBER", "D", "pool_size", "NUMBER", "NUMBER", "model", "NUMBER", "add", "Dropout", "NUMBER", "model", "NUMBER", "add", "Conv", "NUMBER", "D", "NUMBER", "NUMBER", "NUMBER", "padding", "same", "model", "NUMBER", "add", "Activation", "relu", "model", "NUMBER", "add", "Conv", "NUMBER", "D", "NUMBER", "NUMBER", "NUMBER", "model", "NUMBER", "add", "Activation", "relu", "model", "NUMBER", "add", "MaxPooling", "NUMBER", "D", "pool_size", "NUMBER", "NUMBER", "model", "NUMBER", "add", "Dropout", "NUMBER", "model", "NUMBER", "add", "Flatten", "model", "NUMBER", "add", "Dense", "NUMBER", "model", "NUMBER", "add", "Activation", "relu", "model", "NUMBER", "add", "Dense", "NUMBER", "model", "NUMBER", "add", "Activation", "relu", "model", "NUMBER", "add", "Dense", "num_classes", "model", "NUMBER", "add", "Activation", "softmax", "initiate", "RMSprop", "optimizer", "opt", "keras", "NUMBER", "optimizers", "NUMBER", "RMSprop", "lr", "NUMBER", "decay", "NUMBER", "e", "NUMBER", "Let", "s", "train", "the", "model", "use", "RMSprop", "model", "NUMBER", "compile", "loss", "categorical_crossentropy", "optimizer", "opt", "metrics", "accuracy", "if", "data_augmentation", "print", "Using", "real", "time", "data", "augmentation", "NUMBER", "This", "will", "do", "preprocessing", "and", "realtime", "data", "augmentation", "datagen", "ImageDataGenerator", "featurewise_center", "False", "set", "input", "mean", "to", "NUMBER", "over", "the", "dataset", "samplewise_center", "False", "set", "each", "sample", "mean", "to", "NUMBER", "featurewise_std_normalization", "False", "divide", "inputs", "by", "std", "of", "the", "dataset", "samplewise_std_normalization", "False", "divide", "each", "input", "by", "its", "std", "zca_whitening", "False", "apply", "ZCA", "whitening", "zca_epsilon", "NUMBER", "e", "NUMBER", "epsilon", "for", "ZCA", "whitening", "rotation_range", "NUMBER", "randomly", "rotate", "images", "in", "the", "range", "degrees", "NUMBER", "to", "NUMBER", "randomly", "shift", "images", "horizontally", "fraction", "of", "total", "width", "width_shift_range", "NUMBER", "randomly", "shift", "images", "vertically", "fraction", "of", "total", "height", "height_shift_range", "NUMBER", "shear_range", "NUMBER", "set", "range", "for", "random", "shear", "zoom_range", "NUMBER", "set", "range", "for", "random", "zoom", "channel_shift_range", "NUMBER", "set", "range", "for", "random", "channel", "shifts", "set", "mode", "for", "filling", "points", "outside", "the", "input", "boundaries", "fill_mode", "nearest", "cval", "NUMBER", "value", "use", "for", "fill_mode", "constant", "horizontal_flip", "True", "randomly", "flip", "images", "vertical_flip", "False", "randomly", "flip", "images", "set", "rescaling", "factor", "applied", "before", "any", "other", "transformation", "rescale", "None", "set", "function", "that", "will", "be", "applied", "on", "each", "input", "preprocessing_function", "None", "image", "data", "format", "either", "channels_first", "or", "channels_last", "data_format", "None", "fraction", "of", "images", "reserved", "for", "validation", "strictly", "between", "NUMBER", "and", "NUMBER", "validation_split", "NUMBER", "Compute", "quantities", "required", "for", "feature", "wise", "normalization", "std", "mean", "and", "principal", "components", "if", "ZCA", "whitening", "be", "applied", "NUMBER", "datagen", "NUMBER", "fit", "x_train", "Fit", "the", "model", "on", "the", "batches", "generate", "by", "datagen", "NUMBER", "flow", "NUMBER", "model", "NUMBER", "fit_generator", "datagen", "NUMBER", "flow", "x_train", "y_train", "batch_size", "batch_size", "epochs", "epochs", "validation_data", "x_test", "y_test", "workers", "NUMBER", "use_multiprocessing", "False", "model", "NUMBER", "save", "model_path", "print", "Saved", "trained", "model", "at", "s", "model_path", "Score", "trained", "model", "NUMBER", "scores", "model", "NUMBER", "evaluate", "x_test", "y_test", "verbose", "NUMBER", "print", "Test", "loss", "scores", "NUMBER", "print", "Test", "accuracy", "scores", "NUMBER", "import", "numpy", "as", "np", "import", "cleverhans", "NUMBER", "attacks", "as", "c_attacks", "from", "cleverhans", "NUMBER", "utils_keras", "import", "KerasModelWrapper", "def", "gen_attack_data_kernel", "confidence", "method", "x_test", "y_test", "adv_X_list", "for", "ii", "in", "range", "batch_count", "x", "x_test", "ii", "batch_size", "ii", "NUMBER", "batch_size", "y", "y_test", "ii", "batch_size", "ii", "NUMBER", "batch_size", "x", "method", "NUMBER", "generate_np", "x", "y", "y", "max_iterations", "NUMBER", "initial_const", "NUMBER", "binary_search_steps", "NUMBER", "confidence", "confidence", "learning_rate", "NUMBER", "batch_size", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "adv_X_list", "NUMBER", "extend", "x", "adv_dataX", "np", "NUMBER", "array", "adv_X_list", "adv_acc", "model", "NUMBER", "evaluate", "adv_dataX", "y_test", "verbose", "NUMBER", "batch_size", "batch_size", "print", "acc", "confidence", "NUMBER", "d", "NUMBER", "f", "NUMBER", "format", "confidence", "adv_acc", "NUMBER", "NUMBER", "init", "tf", "keras", "tf", "NUMBER", "keras", "NUMBER", "backend", "NUMBER", "clear_session", "gpu_options", "tf", "NUMBER", "GPUOptions", "allow_growth", "True", "sess", "tf", "NUMBER", "Session", "config", "tf", "NUMBER", "ConfigProto", "gpu_options", "gpu_options", "tf", "NUMBER", "keras", "NUMBER", "backend", "NUMBER", "set_session", "sess", "tf", "NUMBER", "keras", "NUMBER", "backend", "NUMBER", "set_learning_phase", "NUMBER", "model_path", "models", "cifar", "NUMBER", "_clf", "NUMBER", "h", "NUMBER", "print", "model_path", "s", "NUMBER", "format", "model_path", "model", "tf", "NUMBER", "keras", "NUMBER", "models", "NUMBER", "load_model", "model_path", "wrap", "KerasModelWrapper", "model", "cw", "NUMBER", "c_attacks", "NUMBER", "CarliniWagnerL", "NUMBER", "wrap", "sess", "batch_size", "NUMBER", "batch_count", "x_test", "NUMBER", "shape", "NUMBER", "batch_size", "adv_acc", "model", "NUMBER", "evaluate", "x_test", "y_test", "verbose", "NUMBER", "batch_size", "batch_size", "print", "acc", "clean", "NUMBER", "f", "NUMBER", "format", "adv_acc", "NUMBER", "NUMBER", "gen_attack_data_kernel", "NUMBER", "cw", "NUMBER", "x_test", "y_test", "gen_attack_data_kernel", "NUMBER", "cw", "NUMBER", "x_test", "y_test", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "platform", "cpu_feature_guard", "NUMBER", "cc", "NUMBER", "Your", "CPU", "support", "instructions", "that", "this", "TensorFlow", "binary", "was", "not", "compiled", "to", "use", "AVX", "NUMBER", "FMA", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "cuda", "cuda_gpu_executor", "NUMBER", "cc", "NUMBER", "successful", "NUMA", "node", "read", "from", "SysFS", "had", "negative", "value", "NUMBER", "but", "there", "must", "be", "at", "least", "one", "NUMA", "node", "so", "returning", "NUMA", "node", "zero", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "XLA", "service", "NUMBER", "x", "NUMBER", "executing", "computations", "on", "platform", "CUDA", "NUMBER", "Devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "StreamExecutor", "device", "NUMBER", "TITAN", "RTX", "Compute", "Capability", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "platform", "profile_utils", "cpu_utils", "NUMBER", "cc", "NUMBER", "CPU", "Frequency", "NUMBER", "Hz", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "XLA", "service", "NUMBER", "x", "NUMBER", "e", "NUMBER", "executing", "computations", "on", "platform", "Host", "NUMBER", "Devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "StreamExecutor", "device", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Found", "device", "NUMBER", "with", "properties", "name", "TITAN", "RTX", "major", "NUMBER", "minor", "NUMBER", "memoryClockRate", "GHz", "NUMBER", "pciBusID", "NUMBER", "NUMBER", "NUMBER", "totalMemory", "NUMBER", "GiB", "freeMemory", "NUMBER", "GiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Adding", "visible", "gpu", "devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Device", "interconnect", "StreamExecutor", "with", "strength", "NUMBER", "edge", "matrix", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "NUMBER", "N", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Created", "TensorFlow", "device", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "device", "GPU", "NUMBER", "with", "NUMBER", "MB", "memory", "physical", "GPU", "device", "NUMBER", "name", "TITAN", "RTX", "pci", "bus", "id", "NUMBER", "NUMBER", "NUMBER", "compute", "capability", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Adding", "visible", "gpu", "devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Device", "interconnect", "StreamExecutor", "with", "strength", "NUMBER", "edge", "matrix", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "NUMBER", "N", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Created", "TensorFlow", "device", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "device", "GPU", "NUMBER", "with", "NUMBER", "MB", "memory", "physical", "GPU", "device", "NUMBER", "name", "TITAN", "RTX", "pci", "bus", "id", "NUMBER", "NUMBER", "NUMBER", "compute", "capability", "NUMBER", "WARNING", "tensorflow", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "resource_variable_ops", "NUMBER", "py", "NUMBER", "colocate_with", "from", "tensorflow", "NUMBER", "python", "NUMBER", "framework", "NUMBER", "ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Colocations", "handle", "automatically", "by", "placer", "NUMBER", "WARNING", "tensorflow", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "math_ops", "NUMBER", "py", "NUMBER", "to_int", "NUMBER", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "math_ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Use", "tf", "NUMBER", "cast", "instead", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "dso_loader", "NUMBER", "cc", "NUMBER", "successfully", "opened", "CUDA", "library", "libcublas", "NUMBER", "so", "NUMBER", "locally", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks_tf", "NUMBER", "py", "NUMBER", "UserWarning", "attacks_tf", "be", "deprecate", "and", "will", "be", "remove", "on", "NUMBER", "NUMBER", "NUMBER", "or", "after", "NUMBER", "Code", "should", "import", "function", "from", "their", "new", "locations", "directly", "NUMBER", "warnings", "NUMBER", "warn", "attacks_tf", "be", "deprecate", "and", "will", "be", "remove", "on", "NUMBER", "NUMBER", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Constructing", "new", "graph", "for", "attack", "CarliniWagnerL", "NUMBER", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "compat", "NUMBER", "py", "NUMBER", "UserWarning", "TAG", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "This", "function", "was", "originally", "needed", "as", "a", "compatibility", "layer", "for", "old", "version", "of", "tensorflow", "but", "support", "for", "those", "version", "has", "now", "be", "drop", "NUMBER", "warnings", "NUMBER", "warn", "str", "f", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "compat", "NUMBER", "py", "NUMBER", "UserWarning", "TAG", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "This", "function", "was", "originally", "needed", "as", "a", "compatibility", "layer", "for", "old", "version", "of", "tensorflow", "but", "support", "for", "those", "version", "has", "now", "be", "drop", "NUMBER", "warnings", "NUMBER", "warn", "str", "f", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "WARNING", "tensorflow", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "math_grad", "NUMBER", "py", "NUMBER", "div", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "math_ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Deprecated", "in", "favor", "of", "operator", "or", "tf", "NUMBER", "math", "NUMBER", "divide", "NUMBER", "WARNING", "tensorflow", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "carlini_wagner_l", "NUMBER", "py", "NUMBER", "py_func", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "script_ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "tf", "NUMBER", "py_func", "be", "deprecate", "in", "TF", "V", "NUMBER", "Instead", "use", "tf", "NUMBER", "py_function", "which", "takes", "a", "python", "function", "which", "manipulates", "tf", "eager", "tensors", "instead", "of", "numpy", "arrays", "NUMBER", "It", "s", "easy", "to", "convert", "a", "tf", "eager", "tensor", "to", "an", "ndarray", "just", "call", "tensor", "NUMBER", "numpy", "but", "having", "access", "to", "eager", "tensors", "means", "tf", "NUMBER", "py_function", "s", "can", "use", "accelerators", "such", "as", "GPUs", "as", "well", "as", "be", "differentiable", "use", "a", "gradient", "tape", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "platform", "cpu_feature_guard", "NUMBER", "cc", "NUMBER", "Your", "CPU", "support", "instructions", "that", "this", "TensorFlow", "binary", "was", "not", "compiled", "to", "use", "AVX", "NUMBER", "FMA", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "cuda", "cuda_gpu_executor", "NUMBER", "cc", "NUMBER", "successful", "NUMA", "node", "read", "from", "SysFS", "had", "negative", "value", "NUMBER", "but", "there", "must", "be", "at", "least", "one", "NUMA", "node", "so", "returning", "NUMA", "node", "zero", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "XLA", "service", "NUMBER", "x", "NUMBER", "executing", "computations", "on", "platform", "CUDA", "NUMBER", "Devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "StreamExecutor", "device", "NUMBER", "TITAN", "RTX", "Compute", "Capability", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "platform", "profile_utils", "cpu_utils", "NUMBER", "cc", "NUMBER", "CPU", "Frequency", "NUMBER", "Hz", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "XLA", "service", "NUMBER", "x", "NUMBER", "e", "NUMBER", "executing", "computations", "on", "platform", "Host", "NUMBER", "Devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "StreamExecutor", "device", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Found", "device", "NUMBER", "with", "properties", "name", "TITAN", "RTX", "major", "NUMBER", "minor", "NUMBER", "memoryClockRate", "GHz", "NUMBER", "pciBusID", "NUMBER", "NUMBER", "NUMBER", "totalMemory", "NUMBER", "GiB", "freeMemory", "NUMBER", "GiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Adding", "visible", "gpu", "devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Device", "interconnect", "StreamExecutor", "with", "strength", "NUMBER", "edge", "matrix", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "NUMBER", "N", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Created", "TensorFlow", "device", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "device", "GPU", "NUMBER", "with", "NUMBER", "MB", "memory", "physical", "GPU", "device", "NUMBER", "name", "TITAN", "RTX", "pci", "bus", "id", "NUMBER", "NUMBER", "NUMBER", "compute", "capability", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Adding", "visible", "gpu", "devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Device", "interconnect", "StreamExecutor", "with", "strength", "NUMBER", "edge", "matrix", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "NUMBER", "N", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Created", "TensorFlow", "device", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "device", "GPU", "NUMBER", "with", "NUMBER", "MB", "memory", "physical", "GPU", "device", "NUMBER", "name", "TITAN", "RTX", "pci", "bus", "id", "NUMBER", "NUMBER", "NUMBER", "compute", "capability", "NUMBER", "WARNING", "tensorflow", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "resource_variable_ops", "NUMBER", "py", "NUMBER", "colocate_with", "from", "tensorflow", "NUMBER", "python", "NUMBER", "framework", "NUMBER", "ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Colocations", "handle", "automatically", "by", "placer", "NUMBER", "WARNING", "tensorflow", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "math_ops", "NUMBER", "py", "NUMBER", "to_int", "NUMBER", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "math_ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Use", "tf", "NUMBER", "cast", "instead", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "dso_loader", "NUMBER", "cc", "NUMBER", "successfully", "opened", "CUDA", "library", "libcublas", "NUMBER", "so", "NUMBER", "locally", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks_tf", "NUMBER", "py", "NUMBER", "UserWarning", "attacks_tf", "be", "deprecate", "and", "will", "be", "remove", "on", "NUMBER", "NUMBER", "NUMBER", "or", "after", "NUMBER", "Code", "should", "import", "function", "from", "their", "new", "locations", "directly", "NUMBER", "warnings", "NUMBER", "warn", "attacks_tf", "be", "deprecate", "and", "will", "be", "remove", "on", "NUMBER", "NUMBER", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Constructing", "new", "graph", "for", "attack", "CarliniWagnerL", "NUMBER", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "compat", "NUMBER", "py", "NUMBER", "UserWarning", "TAG", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "This", "function", "was", "originally", "needed", "as", "a", "compatibility", "layer", "for", "old", "version", "of", "tensorflow", "but", "support", "for", "those", "version", "has", "now", "be", "drop", "NUMBER", "warnings", "NUMBER", "warn", "str", "f", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "compat", "NUMBER", "py", "NUMBER", "UserWarning", "TAG", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "This", "function", "was", "originally", "needed", "as", "a", "compatibility", "layer", "for", "old", "version", "of", "tensorflow", "but", "support", "for", "those", "version", "has", "now", "be", "drop", "NUMBER", "warnings", "NUMBER", "warn", "str", "f", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "WARNING", "tensorflow", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "math_grad", "NUMBER", "py", "NUMBER", "div", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "math_ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Deprecated", "in", "favor", "of", "operator", "or", "tf", "NUMBER", "math", "NUMBER", "divide", "NUMBER", "WARNING", "tensorflow", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "carlini_wagner_l", "NUMBER", "py", "NUMBER", "py_func", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "script_ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "tf", "NUMBER", "py_func", "be", "deprecate", "in", "TF", "V", "NUMBER", "Instead", "use", "tf", "NUMBER", "py_function", "which", "takes", "a", "python", "function", "which", "manipulates", "tf", "eager", "tensors", "instead", "of", "numpy", "arrays", "NUMBER", "It", "s", "easy", "to", "convert", "a", "tf", "eager", "tensor", "to", "an", "ndarray", "just", "call", "tensor", "NUMBER", "numpy", "but", "having", "access", "to", "eager", "tensors", "means", "tf", "NUMBER", "py_function", "s", "can", "use", "accelerators", "such", "as", "GPUs", "as", "well", "as", "be", "differentiable", "use", "a", "gradient", "tape", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Constructing", "new", "graph", "for", "attack", "CarliniWagnerL", "NUMBER", "x_train", "shape", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "train", "samples", "NUMBER", "test", "samples", "model_path", "workdir", "models", "cifar", "NUMBER", "_cnn_model", "NUMBER", "h", "NUMBER", "acc", "clean", "NUMBER", "acc", "confidence", "NUMBER", "NUMBER", "acc", "confidence", "NUMBER", "NUMBER", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "numpy", "core", "fromnumeric", "NUMBER", "py", "NUMBER", "RuntimeWarning", "Mean", "of", "empty", "slice", "NUMBER", "out", "out", "kwargs", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "numpy", "core", "_methods", "NUMBER", "py", "NUMBER", "RuntimeWarning", "invalid", "value", "encountered", "in", "double_scalars", "ret", "ret", "NUMBER", "dtype", "NUMBER", "type", "ret", "rcount", "carlini", "should", "the", "data", "be", "centered", "in", "NUMBER", "or", "be", "that", "do", "by", "the", "change", "of", "variable", "I", "m", "little", "confusing", "NUMBER", "I", "thought", "that", "KerasModelWrapper", "Model", "would", "process", "logits", "and", "prob", "NUMBER", "automatically", "because", "get_logits", "be", "a", "member", "function", "in", "class", "KerasModelWrapper", "LINK", "_keras", "NUMBER", "py", "L", "NUMBER", "and", "in", "carlini_wagner_l", "NUMBER", "py", "NUMBER", "uses", "self", "NUMBER", "output", "model", "NUMBER", "get_logits", "self", "NUMBER", "newimg", "LINK", "_wagner_l", "NUMBER", "py", "L", "NUMBER", "L", "NUMBER", "Also", "when", "confidence", "NUMBER", "robust", "accuracy", "be", "near", "NUMBER", "which", "be", "a", "reasonable", "value", "NUMBER", "I", "try", "cwL", "NUMBER", "on", "MNIST", "dataset", "which", "value", "be", "centered", "in", "NUMBER", "and", "range", "be", "in", "NUMBER", "NUMBER", "which", "be", "consistent", "with", "original", "repo", "nn_robust_attacks", "and", "remove", "softmax", "layer", "before", "KerasModelWrapper", "But", "I", "get", "same", "result", "python", "import", "numpy", "as", "np", "import", "tensorflow", "as", "tf", "import", "cleverhans", "NUMBER", "attacks", "as", "c_attacks", "from", "cleverhans", "NUMBER", "utils_keras", "import", "KerasModelWrapper", "def", "build_model", "init_op", "tf", "NUMBER", "keras", "NUMBER", "initializers", "NUMBER", "he_normal", "clf_input", "tf", "NUMBER", "keras", "NUMBER", "layers", "NUMBER", "Input", "shape", "NUMBER", "NUMBER", "NUMBER", "name", "clf_input", "flatten", "clf_input", "conv", "NUMBER", "tf", "NUMBER", "keras", "NUMBER", "layers", "NUMBER", "Conv", "NUMBER", "D", "NUMBER", "NUMBER", "NUMBER", "activation", "relu", "kernel_initializer", "init_op", "name", "clf", "c", "NUMBER", "flatten", "pool", "NUMBER", "tf", "NUMBER", "keras", "NUMBER", "layers", "NUMBER", "MaxPooling", "NUMBER", "D", "pool_size", "NUMBER", "NUMBER", "name", "clf", "p", "NUMBER", "conv", "NUMBER", "conv", "NUMBER", "tf", "NUMBER", "keras", "NUMBER", "layers", "NUMBER", "Conv", "NUMBER", "D", "NUMBER", "NUMBER", "NUMBER", "activation", "relu", "kernel_initializer", "init_op", "name", "clf", "c", "NUMBER", "pool", "NUMBER", "pool", "NUMBER", "tf", "NUMBER", "keras", "NUMBER", "layers", "NUMBER", "MaxPooling", "NUMBER", "D", "pool_size", "NUMBER", "NUMBER", "name", "clf", "p", "NUMBER", "conv", "NUMBER", "flatten", "NUMBER", "tf", "NUMBER", "keras", "NUMBER", "layers", "NUMBER", "Flatten", "name", "clf", "f", "NUMBER", "pool", "NUMBER", "dense", "NUMBER", "tf", "NUMBER", "keras", "NUMBER", "layers", "NUMBER", "Dense", "NUMBER", "activation", "relu", "kernel_initializer", "init_op", "name", "clf", "d", "NUMBER", "flatten", "NUMBER", "dense", "NUMBER", "tf", "NUMBER", "keras", "NUMBER", "layers", "NUMBER", "Dense", "NUMBER", "activation", "None", "kernel_initializer", "init_op", "name", "clf", "d", "NUMBER", "dense", "NUMBER", "clf_pre", "dense", "NUMBER", "clf_out", "tf", "NUMBER", "keras", "NUMBER", "layers", "NUMBER", "Activation", "softmax", "name", "clf", "a", "NUMBER", "clf_pre", "pre_model", "tf", "NUMBER", "keras", "NUMBER", "models", "NUMBER", "Model", "inputs", "clf_input", "outputs", "clf_pre", "name", "pre_model", "clf_model", "tf", "NUMBER", "keras", "NUMBER", "models", "NUMBER", "Model", "inputs", "clf_input", "outputs", "clf_out", "name", "clf_model", "clf_model", "NUMBER", "compile", "loss", "categorical_crossentropy", "optimizer", "Nadam", "metrics", "accuracy", "return", "clf_model", "def", "get_data", "download", "mnist", "trainX", "trainY", "testX", "testY", "tf", "NUMBER", "keras", "NUMBER", "datasets", "NUMBER", "mnist", "NUMBER", "load_data", "trainX", "trainX", "NUMBER", "astype", "np", "NUMBER", "float", "NUMBER", "testX", "testX", "NUMBER", "astype", "np", "NUMBER", "float", "NUMBER", "ont", "hot", "trainY", "tf", "NUMBER", "keras", "NUMBER", "utils", "NUMBER", "to_categorical", "trainY", "NUMBER", "testY", "tf", "NUMBER", "keras", "NUMBER", "utils", "NUMBER", "to_categorical", "testY", "NUMBER", "get", "validation", "sets", "validX", "trainX", "NUMBER", "validY", "trainY", "NUMBER", "trainX", "trainX", "NUMBER", "trainY", "trainY", "NUMBER", "expand", "dimesion", "trainX", "np", "NUMBER", "expand_dims", "trainX", "axis", "NUMBER", "validX", "np", "NUMBER", "expand_dims", "validX", "axis", "NUMBER", "testX", "np", "NUMBER", "expand_dims", "testX", "axis", "NUMBER", "trainX", "trainX", "NUMBER", "NUMBER", "NUMBER", "validX", "validX", "NUMBER", "NUMBER", "NUMBER", "testX", "testX", "NUMBER", "NUMBER", "NUMBER", "trainY", "trainY", "validY", "validY", "testY", "testY", "return", "trainX", "trainY", "validX", "validY", "testX", "testY", "if", "__name__", "__main__", "reset", "tf", "session", "tf", "NUMBER", "keras", "NUMBER", "backend", "NUMBER", "clear_session", "gpu_options", "tf", "NUMBER", "GPUOptions", "allow_growth", "True", "sess", "tf", "NUMBER", "Session", "config", "tf", "NUMBER", "ConfigProto", "gpu_options", "gpu_options", "tf", "NUMBER", "keras", "NUMBER", "backend", "NUMBER", "set_session", "sess", "get", "data", "and", "create", "model", "trainX", "trainY", "validX", "validY", "testX", "testY", "get_data", "model", "build_model", "train", "model", "warm", "up", "model", "NUMBER", "fit", "trainX", "trainY", "validation_data", "validX", "validY", "batch_size", "NUMBER", "epochs", "NUMBER", "verbose", "NUMBER", "create", "attacking", "method", "wrap", "KerasModelWrapper", "model", "wrap", "NUMBER", "model", "NUMBER", "summary", "pgd", "c_attacks", "NUMBER", "ProjectedGradientDescent", "wrap", "sess", "sess", "img_max", "NUMBER", "img_min", "NUMBER", "max_epoch", "NUMBER", "batch_size", "NUMBER", "batch_count", "trainX", "NUMBER", "shape", "NUMBER", "batch_size", "for", "epoch", "in", "range", "max_epoch", "print", "epoch", "d", "d", "NUMBER", "format", "epoch", "NUMBER", "max_epoch", "for", "ii", "in", "range", "batch_count", "x", "trainX", "ii", "batch_size", "ii", "NUMBER", "batch_size", "y", "trainY", "ii", "batch_size", "ii", "NUMBER", "batch_size", "adv_x", "pgd", "NUMBER", "generate_np", "x", "y", "y", "eps", "NUMBER", "eps_iter", "NUMBER", "ord", "np", "NUMBER", "inf", "clip_min", "img_min", "clip_max", "img_max", "model", "NUMBER", "train_on_batch", "adv_x", "y", "evalate", "PGD", "attack", "adv_x", "pgd", "NUMBER", "generate_np", "testX", "eps", "NUMBER", "eps_iter", "NUMBER", "ord", "np", "NUMBER", "inf", "clip_min", "img_min", "clip_max", "img_max", "acc", "model", "NUMBER", "evaluate", "adv_x", "testY", "verbose", "NUMBER", "print", "acc", "NUMBER", "f", "NUMBER", "format", "acc", "NUMBER", "NUMBER", "def", "gen_attack_data_kernel", "confidence", "method", "x_test", "y_test", "adv_X_list", "batch_size", "NUMBER", "batch_count", "x_test", "NUMBER", "shape", "NUMBER", "batch_size", "for", "ii", "in", "range", "batch_count", "x", "x_test", "ii", "batch_size", "ii", "NUMBER", "batch_size", "y", "y_test", "ii", "batch_size", "ii", "NUMBER", "batch_size", "x", "method", "NUMBER", "generate_np", "x", "y", "y", "confidence", "confidence", "batch_size", "batch_size", "clip_min", "img_min", "clip_max", "img_max", "adv_X_list", "NUMBER", "extend", "x", "adv_dataX", "np", "NUMBER", "array", "adv_X_list", "adv_acc", "model", "NUMBER", "evaluate", "adv_dataX", "y_test", "verbose", "NUMBER", "batch_size", "batch_size", "print", "acc", "confidence", "NUMBER", "d", "NUMBER", "f", "NUMBER", "format", "confidence", "adv_acc", "NUMBER", "NUMBER", "clf_model", "tf", "NUMBER", "keras", "NUMBER", "models", "NUMBER", "Model", "inputs", "model", "NUMBER", "input", "outputs", "model", "NUMBER", "get_layer", "index", "NUMBER", "NUMBER", "output", "clf_model", "NUMBER", "summary", "wrap", "KerasModelWrapper", "model", "cw", "NUMBER", "c_attacks", "NUMBER", "CarliniWagnerL", "NUMBER", "wrap", "sess", "adv_acc", "model", "NUMBER", "evaluate", "testX", "testY", "verbose", "NUMBER", "print", "acc", "clean", "NUMBER", "f", "NUMBER", "format", "adv_acc", "NUMBER", "NUMBER", "gen_attack_data_kernel", "NUMBER", "cw", "NUMBER", "testX", "testY", "gen_attack_data_kernel", "NUMBER", "cw", "NUMBER", "testX", "testY", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "platform", "cpu_feature_guard", "NUMBER", "cc", "NUMBER", "Your", "CPU", "support", "instructions", "that", "this", "TensorFlow", "binary", "was", "not", "compiled", "to", "use", "SSE", "NUMBER", "SSE", "NUMBER", "AVX", "AVX", "NUMBER", "FMA", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "platform", "profile_utils", "cpu_utils", "NUMBER", "cc", "NUMBER", "CPU", "Frequency", "NUMBER", "Hz", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "XLA", "service", "NUMBER", "x", "NUMBER", "f", "NUMBER", "ff", "NUMBER", "dc", "NUMBER", "executing", "computations", "on", "platform", "Host", "NUMBER", "Devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "StreamExecutor", "device", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "cuda", "cuda_gpu_executor", "NUMBER", "cc", "NUMBER", "successful", "NUMA", "node", "read", "from", "SysFS", "had", "negative", "value", "NUMBER", "but", "there", "must", "be", "at", "least", "one", "NUMA", "node", "so", "returning", "NUMA", "node", "zero", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "XLA", "service", "NUMBER", "x", "NUMBER", "f", "NUMBER", "fe", "NUMBER", "b", "NUMBER", "executing", "computations", "on", "platform", "CUDA", "NUMBER", "Devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "StreamExecutor", "device", "NUMBER", "TITAN", "RTX", "Compute", "Capability", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Found", "device", "NUMBER", "with", "properties", "name", "TITAN", "RTX", "major", "NUMBER", "minor", "NUMBER", "memoryClockRate", "GHz", "NUMBER", "pciBusID", "NUMBER", "NUMBER", "NUMBER", "totalMemory", "NUMBER", "GiB", "freeMemory", "NUMBER", "GiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Adding", "visible", "gpu", "devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Device", "interconnect", "StreamExecutor", "with", "strength", "NUMBER", "edge", "matrix", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "NUMBER", "N", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Created", "TensorFlow", "device", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "device", "GPU", "NUMBER", "with", "NUMBER", "MB", "memory", "physical", "GPU", "device", "NUMBER", "name", "TITAN", "RTX", "pci", "bus", "id", "NUMBER", "NUMBER", "NUMBER", "compute", "capability", "NUMBER", "WARNING", "tensorflow", "From", "home", "ecchen", "opt", "miniconda", "envs", "tf", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "ops", "resource_variable_ops", "NUMBER", "py", "NUMBER", "colocate_with", "from", "tensorflow", "NUMBER", "python", "NUMBER", "framework", "NUMBER", "ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Colocations", "handle", "automatically", "by", "placer", "NUMBER", "Train", "on", "NUMBER", "samples", "validate", "on", "NUMBER", "samples", "WARNING", "tensorflow", "From", "home", "ecchen", "opt", "miniconda", "envs", "tf", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "ops", "math_ops", "NUMBER", "py", "NUMBER", "to_int", "NUMBER", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "math_ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Use", "tf", "NUMBER", "cast", "instead", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "dso_loader", "NUMBER", "cc", "NUMBER", "successfully", "opened", "CUDA", "library", "libcublas", "NUMBER", "so", "NUMBER", "locally", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "val_loss", "NUMBER", "val_acc", "NUMBER", "_________________________________________________________________", "Layer", "type", "Output", "Shape", "Param", "clf_input", "InputLayer", "None", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "_________________________________________________________________", "clf", "c", "NUMBER", "Conv", "NUMBER", "D", "None", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "_________________________________________________________________", "clf", "p", "NUMBER", "MaxPooling", "NUMBER", "D", "None", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "_________________________________________________________________", "clf", "c", "NUMBER", "Conv", "NUMBER", "D", "None", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "_________________________________________________________________", "clf", "p", "NUMBER", "MaxPooling", "NUMBER", "D", "None", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "_________________________________________________________________", "clf", "f", "NUMBER", "Flatten", "None", "NUMBER", "NUMBER", "_________________________________________________________________", "clf", "d", "NUMBER", "Dense", "None", "NUMBER", "NUMBER", "_________________________________________________________________", "clf", "d", "NUMBER", "Dense", "None", "NUMBER", "NUMBER", "_________________________________________________________________", "clf", "a", "NUMBER", "Activation", "None", "NUMBER", "NUMBER", "Total", "params", "NUMBER", "NUMBER", "Trainable", "params", "NUMBER", "NUMBER", "Non", "trainable", "params", "NUMBER", "_________________________________________________________________", "home", "ecchen", "opt", "miniconda", "envs", "tf", "lib", "python", "NUMBER", "site", "package", "cleverhans", "attacks_tf", "NUMBER", "py", "NUMBER", "UserWarning", "attacks_tf", "be", "deprecate", "and", "will", "be", "remove", "on", "NUMBER", "NUMBER", "NUMBER", "or", "after", "NUMBER", "Code", "should", "import", "function", "from", "their", "new", "locations", "directly", "NUMBER", "warnings", "NUMBER", "warn", "attacks_tf", "be", "deprecate", "and", "will", "be", "remove", "on", "NUMBER", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Constructing", "new", "graph", "for", "attack", "ProjectedGradientDescent", "home", "ecchen", "opt", "miniconda", "envs", "tf", "lib", "python", "NUMBER", "site", "package", "cleverhans", "compat", "NUMBER", "py", "NUMBER", "UserWarning", "TAG", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "This", "function", "was", "originally", "needed", "as", "a", "compatibility", "layer", "for", "old", "version", "of", "tensorflow", "but", "support", "for", "those", "version", "has", "now", "be", "drop", "NUMBER", "warnings", "NUMBER", "warn", "str", "f", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "WARNING", "tensorflow", "From", "home", "ecchen", "opt", "miniconda", "envs", "tf", "lib", "python", "NUMBER", "site", "package", "cleverhans", "compat", "NUMBER", "py", "NUMBER", "calling", "softmax_cross_entropy_with_logits_v", "NUMBER", "_helper", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "nn_ops", "with", "dim", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "dim", "be", "deprecate", "use", "axis", "instead", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "epoch", "NUMBER", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Constructing", "new", "graph", "for", "attack", "ProjectedGradientDescent", "WARNING", "tensorflow", "From", "home", "ecchen", "opt", "miniconda", "envs", "tf", "lib", "python", "NUMBER", "site", "package", "cleverhans", "attacks", "projected_gradient_descent", "NUMBER", "py", "NUMBER", "to_float", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "math_ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Use", "tf", "NUMBER", "cast", "instead", "NUMBER", "acc", "NUMBER", "_________________________________________________________________", "Layer", "type", "Output", "Shape", "Param", "clf_input", "InputLayer", "None", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "_________________________________________________________________", "clf", "c", "NUMBER", "Conv", "NUMBER", "D", "None", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "_________________________________________________________________", "clf", "p", "NUMBER", "MaxPooling", "NUMBER", "D", "None", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "_________________________________________________________________", "clf", "c", "NUMBER", "Conv", "NUMBER", "D", "None", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "_________________________________________________________________", "clf", "p", "NUMBER", "MaxPooling", "NUMBER", "D", "None", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "_________________________________________________________________", "clf", "f", "NUMBER", "Flatten", "None", "NUMBER", "NUMBER", "_________________________________________________________________", "clf", "d", "NUMBER", "Dense", "None", "NUMBER", "NUMBER", "_________________________________________________________________", "clf", "d", "NUMBER", "Dense", "None", "NUMBER", "NUMBER", "Total", "params", "NUMBER", "NUMBER", "Trainable", "params", "NUMBER", "NUMBER", "Non", "trainable", "params", "NUMBER", "_________________________________________________________________", "acc", "clean", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Constructing", "new", "graph", "for", "attack", "CarliniWagnerL", "NUMBER", "home", "ecchen", "opt", "miniconda", "envs", "tf", "lib", "python", "NUMBER", "site", "package", "cleverhans", "compat", "NUMBER", "py", "NUMBER", "UserWarning", "TAG", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "This", "function", "was", "originally", "needed", "as", "a", "compatibility", "layer", "for", "old", "version", "of", "tensorflow", "but", "support", "for", "those", "version", "has", "now", "be", "drop", "NUMBER", "warnings", "NUMBER", "warn", "str", "f", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "WARNING", "tensorflow", "From", "home", "ecchen", "opt", "miniconda", "envs", "tf", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "ops", "math_grad", "NUMBER", "py", "NUMBER", "div", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "math_ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Deprecated", "in", "favor", "of", "operator", "or", "tf", "NUMBER", "math", "NUMBER", "divide", "NUMBER", "WARNING", "tensorflow", "From", "home", "ecchen", "opt", "miniconda", "envs", "tf", "lib", "python", "NUMBER", "site", "package", "cleverhans", "attacks", "carlini_wagner_l", "NUMBER", "py", "NUMBER", "py_func", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "script_ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "tf", "NUMBER", "py_func", "be", "deprecate", "in", "TF", "V", "NUMBER", "Instead", "use", "tf", "NUMBER", "py_function", "which", "takes", "a", "python", "function", "which", "manipulates", "tf", "eager", "tensors", "instead", "of", "numpy", "arrays", "NUMBER", "It", "s", "easy", "to", "convert", "a", "tf", "eager", "tensor", "to", "an", "ndarray", "just", "call", "tensor", "NUMBER", "numpy", "but", "having", "access", "to", "eager", "tensors", "means", "tf", "NUMBER", "py_function", "s", "can", "use", "accelerators", "such", "as", "GPUs", "as", "well", "as", "be", "differentiable", "use", "a", "gradient", "tape", "NUMBER", "acc", "confidence", "NUMBER", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Constructing", "new", "graph", "for", "attack", "CarliniWagnerL", "NUMBER", "home", "ecchen", "opt", "miniconda", "envs", "tf", "lib", "python", "NUMBER", "site", "package", "numpy", "core", "fromnumeric", "NUMBER", "py", "NUMBER", "RuntimeWarning", "Mean", "of", "empty", "slice", "NUMBER", "out", "out", "kwargs", "home", "ecchen", "opt", "miniconda", "envs", "tf", "lib", "python", "NUMBER", "site", "package", "numpy", "core", "_methods", "NUMBER", "py", "NUMBER", "RuntimeWarning", "invalid", "value", "encountered", "in", "double_scalars", "ret", "ret", "NUMBER", "dtype", "NUMBER", "type", "ret", "rcount", "acc", "confidence", "NUMBER", "NUMBER", "Okay", "yeah", "so", "you", "re", "right", "NUMBER", "I", "ve", "looked", "at", "this", "some", "and", "I", "m", "confused", "by", "what", "s", "going", "on", "NUMBER", "I", "hope", "to", "have", "some", "more", "time", "in", "two", "weeks", "after", "some", "paper", "deadlines", "and", "will", "look", "at", "this", "more", "NUMBER", "If", "I", "don", "t", "follow", "up", "by", "two", "weeks", "from", "now", "definitely", "ping", "on", "this", "thread", "again", "NUMBER", "carlini", "any", "update", "I", "find", "that", "the", "minimal", "testcase", "for", "MNIST", "has", "some", "bug", "NUMBER", "Actually", "I", "did", "use", "the", "model", "with", "softmax", "layer", "in", "the", "code", "NUMBER", "clf_model", "tf", "NUMBER", "keras", "NUMBER", "models", "NUMBER", "Model", "inputs", "model", "NUMBER", "input", "outputs", "model", "NUMBER", "get_layer", "index", "NUMBER", "NUMBER", "output", "clf_model", "NUMBER", "summary", "wrap", "KerasModelWrapper", "model", "model", "include", "softmax", "layer", "cw", "NUMBER", "c_attacks", "NUMBER", "CarliniWagnerL", "NUMBER", "wrap", "sess", "When", "I", "try", "to", "wrap", "a", "model", "w", "o", "softmax", "cleverhans", "would", "raise", "error", "message", "skip", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "utils_keras", "NUMBER", "py", "line", "NUMBER", "in", "_get_softmax_name", "raise", "Exception", "No", "softmax", "layers", "find", "Exception", "No", "softmax", "layers", "find", "skip", "So", "the", "conclusion", "be", "that", "softmax", "layer", "be", "required", "for", "KerasModelWrapper", "Model", "and", "it", "would", "process", "logits", "and", "probability", "automatically", "NUMBER", "Also", "I", "still", "can", "not", "generate", "stronger", "examples", "and", "get", "runtime", "warning", "when", "confidence", "be", "increase", "NUMBER", "I", "try", "to", "download", "the", "dev", "dataset", "for", "NIPS", "NUMBER", "Adversarial", "Competition", "NUMBER", "However", "some", "images", "download", "fail", "NUMBER", "I", "run", "python", "download_images", "NUMBER", "py", "input_file", "dev_dataset", "NUMBER", "csv", "output_dir", "NUMBER", "images", "and", "get", "output", "as", "follow", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "c", "NUMBER", "cd", "NUMBER", "f", "NUMBER", "ee", "NUMBER", "f", "Download", "fail", "NUMBER", "f", "NUMBER", "c", "NUMBER", "fee", "Downloaded", "NUMBER", "imagesDownload", "fail", "fa", "NUMBER", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "e", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "ab", "NUMBER", "ca", "NUMBER", "e", "NUMBER", "e", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "dc", "NUMBER", "e", "NUMBER", "f", "NUMBER", "bdc", "NUMBER", "b", "NUMBER", "Download", "fail", "a", "NUMBER", "b", "NUMBER", "d", "NUMBER", "ea", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "ada", "NUMBER", "f", "NUMBER", "bfa", "NUMBER", "b", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "bb", "NUMBER", "b", "NUMBER", "d", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "e", "NUMBER", "ac", "NUMBER", "cf", "NUMBER", "f", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "b", "NUMBER", "d", "NUMBER", "bbd", "NUMBER", "c", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "f", "NUMBER", "c", "NUMBER", "e", "NUMBER", "fd", "NUMBER", "f", "NUMBER", "cb", "NUMBER", "e", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "c", "NUMBER", "d", "NUMBER", "c", "NUMBER", "Download", "fail", "NUMBER", "a", "NUMBER", "e", "NUMBER", "d", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "f", "NUMBER", "c", "NUMBER", "f", "NUMBER", "af", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "e", "NUMBER", "a", "NUMBER", "ad", "NUMBER", "d", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "e", "NUMBER", "dc", "NUMBER", "bf", "NUMBER", "c", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "c", "NUMBER", "a", "NUMBER", "a", "NUMBER", "e", "Downloaded", "NUMBER", "imagesDownload", "fail", "d", "NUMBER", "aad", "NUMBER", "d", "NUMBER", "b", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "f", "NUMBER", "d", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "ac", "NUMBER", "aec", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "b", "NUMBER", "f", "NUMBER", "d", "NUMBER", "a", "Downloaded", "NUMBER", "imagesDownload", "fail", "a", "NUMBER", "d", "NUMBER", "e", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "c", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "fc", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "af", "NUMBER", "e", "NUMBER", "c", "NUMBER", "fa", "NUMBER", "a", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "db", "NUMBER", "a", "NUMBER", "f", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "bff", "NUMBER", "ecb", "NUMBER", "f", "NUMBER", "f", "NUMBER", "e", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "a", "NUMBER", "b", "NUMBER", "f", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "de", "NUMBER", "c", "NUMBER", "e", "NUMBER", "c", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "f", "NUMBER", "ccfacc", "NUMBER", "b", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "a", "NUMBER", "dc", "NUMBER", "fdd", "NUMBER", "a", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "cbcb", "NUMBER", "cc", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "b", "NUMBER", "b", "NUMBER", "c", "NUMBER", "e", "NUMBER", "f", "Download", "fail", "c", "NUMBER", "cf", "NUMBER", "c", "NUMBER", "b", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "bf", "NUMBER", "c", "NUMBER", "a", "NUMBER", "b", "NUMBER", "d", "NUMBER", "d", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "b", "NUMBER", "fcab", "NUMBER", "b", "Downloaded", "NUMBER", "imagesDownload", "fail", "d", "NUMBER", "cc", "NUMBER", "eabfc", "NUMBER", "bf", "NUMBER", "a", "Downloaded", "NUMBER", "imagesDownload", "fail", "bd", "NUMBER", "fcc", "NUMBER", "fe", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "c", "NUMBER", "ddfb", "NUMBER", "de", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "bba", "NUMBER", "c", "NUMBER", "cc", "NUMBER", "eb", "NUMBER", "c", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "b", "NUMBER", "d", "NUMBER", "b", "NUMBER", "b", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "efd", "NUMBER", "fab", "NUMBER", "ff", "Download", "fail", "NUMBER", "b", "NUMBER", "f", "NUMBER", "f", "NUMBER", "dc", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "d", "NUMBER", "a", "NUMBER", "bad", "Download", "fail", "NUMBER", "b", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "c", "NUMBER", "b", "NUMBER", "bc", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "d", "NUMBER", "ef", "NUMBER", "ec", "NUMBER", "e", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "b", "NUMBER", "d", "NUMBER", "e", "NUMBER", "e", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "f", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "b", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "c", "NUMBER", "c", "NUMBER", "c", "NUMBER", "ea", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "ca", "NUMBER", "ffdfa", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "eb", "NUMBER", "d", "NUMBER", "d", "NUMBER", "f", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "a", "NUMBER", "c", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "a", "NUMBER", "f", "NUMBER", "b", "NUMBER", "f", "NUMBER", "cb", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "c", "NUMBER", "b", "NUMBER", "d", "NUMBER", "a", "NUMBER", "c", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "e", "NUMBER", "df", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "d", "NUMBER", "aeed", "NUMBER", "be", "Download", "fail", "NUMBER", "f", "NUMBER", "b", "NUMBER", "a", "NUMBER", "bc", "NUMBER", "be", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "f", "NUMBER", "cd", "NUMBER", "c", "NUMBER", "e", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "bae", "NUMBER", "c", "NUMBER", "a", "NUMBER", "Download", "fail", "a", "NUMBER", "ccf", "NUMBER", "c", "NUMBER", "e", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "bfd", "NUMBER", "a", "NUMBER", "b", "NUMBER", "b", "NUMBER", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "aebe", "NUMBER", "fc", "NUMBER", "e", "Downloaded", "NUMBER", "imagesDownload", "fail", "NUMBER", "a", "NUMBER", "a", "NUMBER", "d", "NUMBER", "e", "NUMBER", "c", "NUMBER", "The", "issue", "tracker", "should", "only", "be", "use", "to", "report", "bug", "or", "feature", "request", "NUMBER", "If", "you", "be", "looking", "for", "support", "from", "other", "library", "users", "please", "ask", "a", "question", "on", "StackOverflow", "LINK", "NUMBER", "Hi", "I", "be", "trying", "to", "train", "a", "DQN", "model", "based", "on", "RL", "attack", "examples", "use", "this", "line", "python", "NUMBER", "train", "NUMBER", "py", "env", "Breakout", "save", "dir", "NUMBER", "data", "Breakout", "num", "steps", "NUMBER", "However", "the", "run", "fail", "and", "gives", "this", "error", "Traceback", "most", "recent", "call", "last", "File", "train", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "attack", "args", "NUMBER", "attack", "File", "cleverhans", "examples", "RL", "attack", "rlattack", "deepq", "build_graph", "NUMBER", "py", "line", "NUMBER", "in", "build_train", "act_f", "build_act", "make_obs_ph", "q_func", "num_actions", "scope", "scope", "noisy", "noisy", "reuse", "reuse", "File", "cleverhans", "examples", "RL", "attack", "rlattack", "deepq", "build_graph", "NUMBER", "py", "line", "NUMBER", "in", "build_act", "q_values", "q_values", "NUMBER", "get_logits", "observations_ph", "NUMBER", "get", "AttributeError", "Tensor", "object", "has", "no", "attribute", "get_logits", "When", "I", "check", "the", "cleverhans", "model", "NUMBER", "py", "get_logits", "function", "be", "defined", "there", "but", "the", "fprop", "function", "return", "NotImplementedError", "NUMBER", "I", "be", "not", "sure", "if", "that", "s", "why", "I", "get", "this", "error", "or", "something", "relate", "with", "calling", "from", "cleverhans", "NUMBER", "model", "import", "CallableModelWrapper", "inside", "build_graph", "NUMBER", "py", "file", "NUMBER", "I", "be", "run", "this", "script", "on", "Ubuntu", "NUMBER", "Python", "NUMBER", "Tensorflow", "NUMBER", "CleverHans", "NUMBER", "behzadanksu", "can", "you", "take", "a", "look", "cross", "post", "from", "LINK", "example", "attributeerror", "tensor", "object", "has", "no", "attribute", "get", "logits", "This", "issue", "was", "resolve", "in", "a", "recent", "commit", "of", "the", "main", "repository", "LINK", "attack", "NUMBER", "I", "will", "submit", "a", "pull", "request", "to", "Cleverhans", "in", "the", "following", "days", "to", "synchronize", "the", "core", "implementations", "NUMBER", "Thanks", "behzadanksu", "Hi", "Thanks", "for", "the", "response", "npapernot", "and", "behzadanksu", "NUMBER", "But", "now", "I", "have", "some", "further", "error", "in", "the", "recent", "commit", "of", "the", "rl", "attack", "repository", "LINK", "attack", "NUMBER", "It", "looks", "like", "now", "I", "don", "t", "have", "the", "error", "I", "mention", "here", "but", "when", "I", "call", "env", "NUMBER", "reset", "it", "gives", "NotImplementedError", "NUMBER", "I", "test", "by", "just", "run", "these", "two", "lines", "and", "reset", "works", "perfectly", "and", "I", "can", "see", "the", "env", "env", "gym", "NUMBER", "make", "Breakout", "v", "NUMBER", "obs", "env", "NUMBER", "reset", "However", "when", "I", "call", "this", "function", "in", "train", "NUMBER", "py", "file", "it", "gives", "the", "error", "env", "gym", "NUMBER", "make", "game_name", "NoFrameskip", "v", "NUMBER", "monitored_env", "SimpleMonitor", "env", "env", "wrap_dqn", "monitored_env", "obs", "env", "NUMBER", "reset", "So", "there", "must", "be", "something", "wrong", "with", "the", "wrap_dqn", "function", "inside", "atari_wrappers_deprecated", "NUMBER", "py", "file", "NUMBER", "I", "be", "not", "sure", "whether", "I", "post", "this", "error", "here", "or", "to", "github", "page", "of", "rl", "attack", "for", "further", "discussion", "NUMBER", "I", "apologize", "if", "this", "seems", "basic", "NUMBER", "But", "I", "m", "trying", "to", "save", "MNIST", "images", "that", "have", "be", "attacked", "with", "FGSM", "NUMBER", "My", "code", "be", "import", "argparse", "import", "tensorflow", "as", "tf", "from", "cleverhans", "NUMBER", "dataset", "import", "MNIST", "from", "cleverhans", "NUMBER", "attacks", "import", "FastGradientMethod", "from", "cleverhans", "NUMBER", "model_zoo", "NUMBER", "basic_cnn", "import", "ModelBasicCNN", "parser", "argparse", "NUMBER", "ArgumentParser", "parser", "NUMBER", "add_argument", "attack", "required", "True", "choices", "fgsm", "args", "parser", "NUMBER", "parse_args", "sess", "tf", "NUMBER", "Session", "config", "tf", "NUMBER", "ConfigProto", "if", "args", "NUMBER", "attack", "fgsm", "model", "ModelBasicCNN", "model", "NUMBER", "NUMBER", "NUMBER", "attack", "FastGradientMethod", "model", "sess", "sess", "mnist", "MNIST", "train_start", "NUMBER", "train_end", "NUMBER", "x_train", "y_train", "mnist", "NUMBER", "get_set", "train", "fgsm_params", "eps", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "y_target", "NUMBER", "for", "i", "in", "range", "len", "x_train", "new_x", "attack", "NUMBER", "generate", "x_train", "i", "fgsm_params", "print", "x_train", "i", "print", "new_x", "print", "n", "However", "this", "results", "in", "an", "error", "AttributeError", "int", "object", "has", "no", "attribute", "get_shape", "I", "know", "this", "be", "an", "easy", "fix", "and", "I", "hesitate", "wasting", "anyone", "s", "valuable", "time", "to", "solve", "it", "NUMBER", "But", "if", "anyone", "can", "provide", "guidance", "I", "would", "be", "very", "grateful", "NUMBER", "NUMBER", "Hi", "npapernot", "could", "you", "please", "review", "this", "PR", "Many", "thanks", "NUMBER", "Gotcha", "Thanks", "for", "the", "details", "npapernot", "Just", "to", "make", "sure", "the", "three", "new", "languages", "you", "mention", "be", "jax", "tf", "NUMBER", "and", "pytorch", "right", "Thanks", "NUMBER", "Yes", "all", "of", "their", "code", "should", "be", "in", "future", "folders", "Hi", "npapernot", "I", "fix", "the", "PR", "accordingly", "NUMBER", "In", "addition", "I", "did", "some", "refactoring", "and", "moved", "all", "future", "relate", "pytorch", "code", "that", "be", "not", "currently", "in", "future", "into", "future", "torch", "NUMBER", "Could", "you", "please", "take", "another", "look", "at", "this", "PR", "Many", "thanks", "NUMBER", "fix", "issue", "NUMBER", "this", "patch", "be", "given", "by", "npapernot", "feel", "free", "to", "verify", "this", "PR", "by", "following", "Dockerfile", "From", "tensorflow", "tensorflow", "NUMBER", "gpu", "py", "NUMBER", "RUN", "apt", "update", "apt", "install", "y", "rsync", "git", "vim", "wget", "RUN", "pip", "install", "git", "LINK", "b", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "faf", "NUMBER", "a", "NUMBER", "ffe", "egg", "cleverhans", "RUN", "wget", "LINK", "_tutorials", "mnist_tutorial_keras", "NUMBER", "py", "CMD", "python", "mnist_tutorial_keras", "NUMBER", "py", "From", "tensorflow", "tensorflow", "NUMBER", "gpu", "py", "NUMBER", "RUN", "apt", "update", "apt", "install", "y", "rsync", "git", "vim", "wget", "RUN", "pip", "install", "git", "LINK", "b", "NUMBER", "b", "NUMBER", "d", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "faf", "NUMBER", "a", "NUMBER", "ffe", "egg", "cleverhans", "RUN", "wget", "LINK", "_tutorials", "mnist_tutorial_keras", "NUMBER", "py", "CMD", "python", "mnist_tutorial_keras", "NUMBER", "py", "However", "I", "be", "not", "sure", "that", "the", "tf", "NUMBER", "keras", "s", "behavior", "if", "version", "be", "NUMBER", "or", "above", "Thanks", "for", "your", "pull", "request", "NUMBER", "It", "looks", "like", "this", "may", "be", "your", "first", "contribution", "to", "a", "Google", "open", "source", "project", "if", "not", "look", "below", "for", "help", "NUMBER", "Before", "we", "can", "look", "at", "your", "pull", "request", "you", "ll", "need", "to", "sign", "a", "Contributor", "License", "Agreement", "CLA", "NUMBER", "memo", "Please", "visit", "TAG", "to", "sign", "NUMBER", "Once", "you", "ve", "sign", "or", "fix", "any", "issue", "please", "reply", "here", "e", "NUMBER", "g", "NUMBER", "I", "sign", "it", "and", "we", "ll", "verify", "it", "NUMBER", "What", "to", "do", "if", "you", "already", "sign", "the", "CLA", "Individual", "signers", "It", "s", "possible", "we", "don", "t", "have", "your", "GitHub", "username", "or", "you", "re", "use", "a", "different", "email", "address", "on", "your", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "Corporate", "signers", "Your", "company", "has", "a", "Point", "of", "Contact", "who", "decides", "which", "employees", "be", "authorized", "to", "participate", "NUMBER", "Ask", "your", "POC", "to", "be", "add", "to", "the", "group", "of", "authorized", "contributors", "NUMBER", "If", "you", "don", "t", "know", "who", "your", "Point", "of", "Contact", "be", "direct", "the", "Google", "project", "maintainer", "to", "go", "cla", "troubleshoot", "LINK", "troubleshoot", "Public", "version", "LINK", "troubleshoot", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "be", "the", "email", "use", "for", "the", "Git", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "also", "be", "attached", "to", "your", "GitHub", "account", "LINK", "NUMBER", "\u2139", "Googlers", "Go", "here", "LINK", "NUMBER", "A", "NUMBER", "F", "NUMBER", "Fgithub", "NUMBER", "com", "NUMBER", "Ftensorflow", "NUMBER", "Fcleverhans", "NUMBER", "Fpull", "NUMBER", "F", "NUMBER", "for", "more", "info", "NUMBER", "TAG", "I", "sign", "it", "CLAs", "look", "good", "thanks", "\u2139", "Googlers", "Go", "here", "LINK", "NUMBER", "A", "NUMBER", "F", "NUMBER", "Fgithub", "NUMBER", "com", "NUMBER", "Ftensorflow", "NUMBER", "Fcleverhans", "NUMBER", "Fpull", "NUMBER", "F", "NUMBER", "for", "more", "info", "NUMBER", "TAG", "Describe", "the", "bug", "cleverhans", "may", "not", "work", "in", "tf", "NUMBER", "To", "Reproduce", "Environment", "be", "build", "by", "following", "Dockerfile", "Dockerfile", "build_cmd", "DOCKER_BUILDKIT", "NUMBER", "docker", "build", "progress", "plain", "t", "tf", "NUMBER", "NUMBER", "run_cmd", "docker", "run", "it", "name", "tf_cnt", "tf", "NUMBER", "bash", "From", "tensorflow", "tensorflow", "NUMBER", "gpu", "py", "NUMBER", "RUN", "apt", "update", "apt", "install", "y", "rsync", "git", "vim", "apt", "install", "y", "libsm", "NUMBER", "libxrender", "NUMBER", "libxext", "dev", "RUN", "pip", "install", "imgaug", "pip", "install", "git", "LINK", "NUMBER", "f", "NUMBER", "fcfb", "NUMBER", "a", "NUMBER", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "c", "NUMBER", "b", "NUMBER", "cfc", "NUMBER", "bb", "NUMBER", "egg", "cleverhans", "Following", "be", "minimum", "test", "code", "python", "import", "numpy", "as", "np", "import", "tensorflow", "as", "tf", "import", "cleverhans", "NUMBER", "attacks", "as", "c_attacks", "from", "cleverhans", "NUMBER", "utils_keras", "import", "KerasModelWrapper", "def", "build_model", "init_op", "tf", "NUMBER", "keras", "NUMBER", "initializers", "NUMBER", "he_normal", "clf_input", "tf", "NUMBER", "keras", "NUMBER", "layers", "NUMBER", "Input", "shape", "NUMBER", "NUMBER", "NUMBER", "name", "clf_input", "flatten", "clf_input", "conv", "NUMBER", "tf", "NUMBER", "keras", "NUMBER", "layers", "NUMBER", "Conv", "NUMBER", "D", "NUMBER", "NUMBER", "NUMBER", "activation", "relu", "kernel_initializer", "init_op", "name", "clf", "c", "NUMBER", "flatten", "pool", "NUMBER", "tf", "NUMBER", "keras", "NUMBER", "layers", "NUMBER", "MaxPooling", "NUMBER", "D", "pool_size", "NUMBER", "NUMBER", "name", "clf", "p", "NUMBER", "conv", "NUMBER", "conv", "NUMBER", "tf", "NUMBER", "keras", "NUMBER", "layers", "NUMBER", "Conv", "NUMBER", "D", "NUMBER", "NUMBER", "NUMBER", "activation", "relu", "kernel_initializer", "init_op", "name", "clf", "c", "NUMBER", "pool", "NUMBER", "pool", "NUMBER", "tf", "NUMBER", "keras", "NUMBER", "layers", "NUMBER", "MaxPooling", "NUMBER", "D", "pool_size", "NUMBER", "NUMBER", "name", "clf", "p", "NUMBER", "conv", "NUMBER", "flatten", "NUMBER", "tf", "NUMBER", "keras", "NUMBER", "layers", "NUMBER", "Flatten", "name", "clf", "f", "NUMBER", "pool", "NUMBER", "dense", "NUMBER", "tf", "NUMBER", "keras", "NUMBER", "layers", "NUMBER", "Dense", "NUMBER", "activation", "relu", "kernel_initializer", "init_op", "name", "clf", "d", "NUMBER", "flatten", "NUMBER", "dense", "NUMBER", "tf", "NUMBER", "keras", "NUMBER", "layers", "NUMBER", "Dense", "NUMBER", "activation", "None", "kernel_initializer", "init_op", "name", "clf", "d", "NUMBER", "dense", "NUMBER", "clf_pre", "dense", "NUMBER", "clf_out", "tf", "NUMBER", "keras", "NUMBER", "layers", "NUMBER", "Activation", "softmax", "name", "clf", "a", "NUMBER", "clf_pre", "pre_model", "tf", "NUMBER", "keras", "NUMBER", "models", "NUMBER", "Model", "inputs", "clf_input", "outputs", "clf_pre", "name", "pre_model", "clf_model", "tf", "NUMBER", "keras", "NUMBER", "models", "NUMBER", "Model", "inputs", "clf_input", "outputs", "clf_out", "name", "clf_model", "clf_model", "NUMBER", "compile", "loss", "categorical_crossentropy", "optimizer", "Nadam", "metrics", "accuracy", "return", "clf_model", "def", "get_data", "download", "mnist", "trainX", "trainY", "testX", "testY", "tf", "NUMBER", "keras", "NUMBER", "datasets", "NUMBER", "mnist", "NUMBER", "load_data", "trainX", "trainX", "NUMBER", "astype", "np", "NUMBER", "float", "NUMBER", "testX", "testX", "NUMBER", "astype", "np", "NUMBER", "float", "NUMBER", "ont", "hot", "trainY", "tf", "NUMBER", "keras", "NUMBER", "utils", "NUMBER", "to_categorical", "trainY", "NUMBER", "testY", "tf", "NUMBER", "keras", "NUMBER", "utils", "NUMBER", "to_categorical", "testY", "NUMBER", "get", "validation", "sets", "validX", "trainX", "NUMBER", "validY", "trainY", "NUMBER", "trainX", "trainX", "NUMBER", "trainY", "trainY", "NUMBER", "expand", "dimesion", "trainX", "np", "NUMBER", "expand_dims", "trainX", "axis", "NUMBER", "validX", "np", "NUMBER", "expand_dims", "validX", "axis", "NUMBER", "testX", "np", "NUMBER", "expand_dims", "testX", "axis", "NUMBER", "trainX", "trainX", "NUMBER", "validX", "validX", "NUMBER", "testX", "testX", "NUMBER", "trainY", "trainY", "validY", "validY", "testY", "testY", "return", "trainX", "trainY", "validX", "validY", "testX", "testY", "if", "__name__", "__main__", "reset", "tf", "session", "tf", "NUMBER", "keras", "NUMBER", "backend", "NUMBER", "clear_session", "gpu_options", "tf", "NUMBER", "GPUOptions", "allow_growth", "True", "sess", "tf", "NUMBER", "Session", "config", "tf", "NUMBER", "ConfigProto", "gpu_options", "gpu_options", "tf", "NUMBER", "keras", "NUMBER", "backend", "NUMBER", "set_session", "sess", "get", "data", "and", "create", "model", "trainX", "trainY", "validX", "validY", "testX", "testY", "get_data", "model", "build_model", "train", "model", "model", "NUMBER", "fit", "trainX", "trainY", "validation_data", "validX", "validY", "batch_size", "NUMBER", "epochs", "NUMBER", "verbose", "NUMBER", "create", "attacking", "method", "wrap", "KerasModelWrapper", "model", "pgd", "c_attacks", "NUMBER", "ProjectedGradientDescent", "wrap", "sess", "sess", "create", "adv_x", "adv_x", "pgd", "NUMBER", "generate_np", "testX", "eps", "NUMBER", "ord", "np", "NUMBER", "inf", "clip_min", "NUMBER", "clip_max", "NUMBER", "acc", "model", "NUMBER", "evaluate", "adv_x", "testY", "verbose", "NUMBER", "print", "acc", "NUMBER", "f", "NUMBER", "format", "acc", "NUMBER", "NUMBER", "Here", "be", "full", "error", "message", "WARNING", "Logging", "before", "flag", "parsing", "goes", "to", "stderr", "NUMBER", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation_wrapper", "NUMBER", "py", "NUMBER", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "utils_tf", "NUMBER", "py", "NUMBER", "The", "name", "tf", "NUMBER", "GraphKeys", "be", "deprecate", "NUMBER", "Please", "use", "tf", "NUMBER", "compat", "NUMBER", "v", "NUMBER", "GraphKeys", "instead", "NUMBER", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation_wrapper", "NUMBER", "py", "NUMBER", "From", "test", "NUMBER", "py", "NUMBER", "The", "name", "tf", "NUMBER", "GPUOptions", "be", "deprecate", "NUMBER", "Please", "use", "tf", "NUMBER", "compat", "NUMBER", "v", "NUMBER", "GPUOptions", "instead", "NUMBER", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation_wrapper", "NUMBER", "py", "NUMBER", "From", "test", "NUMBER", "py", "NUMBER", "The", "name", "tf", "NUMBER", "Session", "be", "deprecate", "NUMBER", "Please", "use", "tf", "NUMBER", "compat", "NUMBER", "v", "NUMBER", "Session", "instead", "NUMBER", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation_wrapper", "NUMBER", "py", "NUMBER", "From", "test", "NUMBER", "py", "NUMBER", "The", "name", "tf", "NUMBER", "ConfigProto", "be", "deprecate", "NUMBER", "Please", "use", "tf", "NUMBER", "compat", "NUMBER", "v", "NUMBER", "ConfigProto", "instead", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "platform", "cpu_feature_guard", "NUMBER", "cc", "NUMBER", "Your", "CPU", "support", "instructions", "that", "this", "TensorFlow", "binary", "was", "not", "compiled", "to", "use", "AVX", "NUMBER", "FMA", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcuda", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "cuda", "cuda_gpu_executor", "NUMBER", "cc", "NUMBER", "successful", "NUMA", "node", "read", "from", "SysFS", "had", "negative", "value", "NUMBER", "but", "there", "must", "be", "at", "least", "one", "NUMA", "node", "so", "returning", "NUMA", "node", "zero", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "XLA", "service", "NUMBER", "x", "NUMBER", "ee", "NUMBER", "e", "NUMBER", "executing", "computations", "on", "platform", "CUDA", "NUMBER", "Devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "StreamExecutor", "device", "NUMBER", "GeForce", "GTX", "NUMBER", "Ti", "Compute", "Capability", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "platform", "profile_utils", "cpu_utils", "NUMBER", "cc", "NUMBER", "CPU", "Frequency", "NUMBER", "Hz", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "XLA", "service", "NUMBER", "x", "NUMBER", "f", "NUMBER", "executing", "computations", "on", "platform", "Host", "NUMBER", "Devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "StreamExecutor", "device", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "cuda", "cuda_gpu_executor", "NUMBER", "cc", "NUMBER", "successful", "NUMA", "node", "read", "from", "SysFS", "had", "negative", "value", "NUMBER", "but", "there", "must", "be", "at", "least", "one", "NUMA", "node", "so", "returning", "NUMA", "node", "zero", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Found", "device", "NUMBER", "with", "properties", "name", "GeForce", "GTX", "NUMBER", "Ti", "major", "NUMBER", "minor", "NUMBER", "memoryClockRate", "GHz", "NUMBER", "pciBusID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcudart", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcublas", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcufft", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcurand", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcusolver", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcusparse", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcudnn", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "cuda", "cuda_gpu_executor", "NUMBER", "cc", "NUMBER", "successful", "NUMA", "node", "read", "from", "SysFS", "had", "negative", "value", "NUMBER", "but", "there", "must", "be", "at", "least", "one", "NUMA", "node", "so", "returning", "NUMA", "node", "zero", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "cuda", "cuda_gpu_executor", "NUMBER", "cc", "NUMBER", "successful", "NUMA", "node", "read", "from", "SysFS", "had", "negative", "value", "NUMBER", "but", "there", "must", "be", "at", "least", "one", "NUMA", "node", "so", "returning", "NUMA", "node", "zero", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Adding", "visible", "gpu", "devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcudart", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Device", "interconnect", "StreamExecutor", "with", "strength", "NUMBER", "edge", "matrix", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "NUMBER", "N", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "cuda", "cuda_gpu_executor", "NUMBER", "cc", "NUMBER", "successful", "NUMA", "node", "read", "from", "SysFS", "had", "negative", "value", "NUMBER", "but", "there", "must", "be", "at", "least", "one", "NUMA", "node", "so", "returning", "NUMA", "node", "zero", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "cuda", "cuda_gpu_executor", "NUMBER", "cc", "NUMBER", "successful", "NUMA", "node", "read", "from", "SysFS", "had", "negative", "value", "NUMBER", "but", "there", "must", "be", "at", "least", "one", "NUMA", "node", "so", "returning", "NUMA", "node", "zero", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Created", "TensorFlow", "device", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "device", "GPU", "NUMBER", "with", "NUMBER", "MB", "memory", "physical", "GPU", "device", "NUMBER", "name", "GeForce", "GTX", "NUMBER", "Ti", "pci", "bus", "id", "NUMBER", "NUMBER", "NUMBER", "compute", "capability", "NUMBER", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation_wrapper", "NUMBER", "py", "NUMBER", "From", "test", "NUMBER", "py", "NUMBER", "The", "name", "tf", "NUMBER", "keras", "NUMBER", "backend", "NUMBER", "set_session", "be", "deprecate", "NUMBER", "Please", "use", "tf", "NUMBER", "compat", "NUMBER", "v", "NUMBER", "keras", "NUMBER", "backend", "NUMBER", "set_session", "instead", "NUMBER", "Downloading", "data", "from", "LINK", "keras", "datasets", "mnist", "NUMBER", "npz", "NUMBER", "NUMBER", "NUMBER", "s", "NUMBER", "us", "step", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation_wrapper", "NUMBER", "py", "NUMBER", "From", "test", "NUMBER", "py", "NUMBER", "The", "name", "tf", "NUMBER", "keras", "NUMBER", "initializers", "NUMBER", "he_normal", "be", "deprecate", "NUMBER", "Please", "use", "tf", "NUMBER", "compat", "NUMBER", "v", "NUMBER", "keras", "NUMBER", "initializers", "NUMBER", "he_normal", "instead", "NUMBER", "Train", "on", "NUMBER", "samples", "validate", "on", "NUMBER", "samples", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcublas", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcudnn", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "val_loss", "NUMBER", "val_acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "val_loss", "NUMBER", "val_acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "val_loss", "NUMBER", "val_acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "val_loss", "NUMBER", "val_acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "val_loss", "NUMBER", "val_acc", "NUMBER", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks_tf", "NUMBER", "py", "NUMBER", "UserWarning", "attacks_tf", "be", "deprecate", "and", "will", "be", "remove", "on", "NUMBER", "NUMBER", "NUMBER", "or", "after", "NUMBER", "Code", "should", "import", "function", "from", "their", "new", "locations", "directly", "NUMBER", "warnings", "NUMBER", "warn", "attacks_tf", "be", "deprecate", "and", "will", "be", "remove", "on", "NUMBER", "NUMBER", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Constructing", "new", "graph", "for", "attack", "ProjectedGradientDescent", "I", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "attack", "NUMBER", "py", "NUMBER", "Constructing", "new", "graph", "for", "attack", "ProjectedGradientDescent", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation_wrapper", "NUMBER", "py", "NUMBER", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "attack", "NUMBER", "py", "NUMBER", "The", "name", "tf", "NUMBER", "placeholder", "be", "deprecate", "NUMBER", "Please", "use", "tf", "NUMBER", "compat", "NUMBER", "v", "NUMBER", "placeholder", "instead", "NUMBER", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation", "NUMBER", "py", "NUMBER", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "projected_gradient_descent", "NUMBER", "py", "NUMBER", "to_float", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "math_ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Use", "tf", "NUMBER", "cast", "instead", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "test", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "clip_max", "NUMBER", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "attack", "NUMBER", "py", "line", "NUMBER", "in", "generate_np", "self", "NUMBER", "construct_graph", "fix", "feedable", "x_val", "hash_key", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "attack", "NUMBER", "py", "line", "NUMBER", "in", "construct_graph", "x_adv", "self", "NUMBER", "generate", "x", "new_kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "projected_gradient_descent", "NUMBER", "py", "line", "NUMBER", "in", "generate", "maximum_iterations", "self", "NUMBER", "nb_iter", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "control_flow_ops", "NUMBER", "py", "line", "NUMBER", "in", "while_loop", "return_same_structure", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "control_flow_ops", "NUMBER", "py", "line", "NUMBER", "in", "BuildLoop", "pred", "body", "original_loop_vars", "loop_vars", "shape_invariants", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "control_flow_ops", "NUMBER", "py", "line", "NUMBER", "in", "_BuildLoop", "body_result", "body", "packed_vars_for_body", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "control_flow_ops", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "body", "lambda", "i", "lv", "i", "NUMBER", "orig_body", "lv", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "projected_gradient_descent", "NUMBER", "py", "line", "NUMBER", "in", "body", "adv_x", "FGM", "NUMBER", "generate", "adv_x", "fgm_params", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "fast_gradient_method", "NUMBER", "py", "line", "NUMBER", "in", "generate", "self", "NUMBER", "model", "NUMBER", "get_logits", "x", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "utils_keras", "NUMBER", "py", "line", "NUMBER", "in", "get_logits", "logits_name", "self", "NUMBER", "_get_logits_name", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "utils_keras", "NUMBER", "py", "line", "NUMBER", "in", "_get_logits_name", "logits_name", "node", "NUMBER", "inbound_layers", "NUMBER", "NUMBER", "name", "TypeError", "Dense", "object", "do", "not", "support", "indexing", "E", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "tf_should_use", "NUMBER", "py", "NUMBER", "Object", "was", "never", "use", "type", "TAG", "TAG", "If", "you", "want", "to", "mark", "it", "as", "use", "call", "its", "mark_used", "method", "NUMBER", "It", "was", "originally", "created", "here", "File", "test", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "clip_max", "NUMBER", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "attack", "NUMBER", "py", "line", "NUMBER", "in", "generate_np", "self", "NUMBER", "construct_graph", "fix", "feedable", "x_val", "hash_key", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "attack", "NUMBER", "py", "line", "NUMBER", "in", "construct_graph", "x_adv", "self", "NUMBER", "generate", "x", "new_kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "projected_gradient_descent", "NUMBER", "py", "line", "NUMBER", "in", "generate", "maximum_iterations", "self", "NUMBER", "nb_iter", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "utils_tf", "NUMBER", "py", "line", "NUMBER", "in", "assert_less_equal", "return", "tf", "NUMBER", "assert_less_equal", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "check_ops", "NUMBER", "py", "line", "NUMBER", "in", "assert_less_equal", "return", "control_flow_ops", "NUMBER", "Assert", "condition", "data", "summarize", "summarize", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "util", "tf_should_use", "NUMBER", "py", "line", "NUMBER", "in", "wrapped", "return", "_add_should_use_warning", "fn", "args", "kwargs", "E", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "tf_should_use", "NUMBER", "py", "NUMBER", "Object", "was", "never", "use", "type", "TAG", "TAG", "If", "you", "want", "to", "mark", "it", "as", "use", "call", "its", "mark_used", "method", "NUMBER", "It", "was", "originally", "created", "here", "File", "test", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "clip_max", "NUMBER", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "attack", "NUMBER", "py", "line", "NUMBER", "in", "generate_np", "self", "NUMBER", "construct_graph", "fix", "feedable", "x_val", "hash_key", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "attack", "NUMBER", "py", "line", "NUMBER", "in", "construct_graph", "x_adv", "self", "NUMBER", "generate", "x", "new_kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "projected_gradient_descent", "NUMBER", "py", "line", "NUMBER", "in", "generate", "maximum_iterations", "self", "NUMBER", "nb_iter", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "utils_tf", "NUMBER", "py", "line", "NUMBER", "in", "assert_greater_equal", "return", "tf", "NUMBER", "assert_greater_equal", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "check_ops", "NUMBER", "py", "line", "NUMBER", "in", "assert_greater_equal", "return", "control_flow_ops", "NUMBER", "Assert", "condition", "data", "summarize", "summarize", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "util", "tf_should_use", "NUMBER", "py", "line", "NUMBER", "in", "wrapped", "return", "_add_should_use_warning", "fn", "args", "kwargs", "Error", "message", "complains", "that", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "utils_keras", "NUMBER", "py", "line", "NUMBER", "in", "_get_logits_name", "logits_name", "node", "NUMBER", "inbound_layers", "NUMBER", "NUMBER", "name", "TypeError", "Dense", "object", "do", "not", "support", "indexing", "if", "I", "replace", "line", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "utils_keras", "NUMBER", "py", "NUMBER", "diff", "logits_name", "node", "NUMBER", "inbound_layers", "NUMBER", "NUMBER", "name", "logits_name", "node", "NUMBER", "inbound_layers", "NUMBER", "name", "then", "I", "can", "run", "test", "code", "sucessfully", "NUMBER", "But", "I", "be", "not", "sure", "that", "this", "modification", "be", "a", "proper", "solution", "NUMBER", "Expected", "behavior", "I", "can", "run", "test", "code", "sucessfully", "NUMBER", "This", "test", "code", "works", "if", "tensorflow", "veriosn", "be", "NUMBER", "wihout", "modifying", "any", "code", "in", "cleverhans", "diff", "From", "tensorflow", "tensorflow", "NUMBER", "gpu", "py", "NUMBER", "From", "tensorflow", "tensorflow", "NUMBER", "gpu", "py", "NUMBER", "System", "configuration", "host", "machine", "ubuntu", "NUMBER", "docker", "version", "Client", "Version", "NUMBER", "API", "version", "NUMBER", "Go", "version", "go", "NUMBER", "Git", "commit", "NUMBER", "bc", "NUMBER", "Built", "Sat", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "OS", "Arch", "linux", "amd", "NUMBER", "Experimental", "false", "Server", "Docker", "Engine", "Community", "Engine", "Version", "NUMBER", "API", "version", "NUMBER", "minimum", "version", "NUMBER", "Go", "version", "go", "NUMBER", "Git", "commit", "NUMBER", "bc", "NUMBER", "Built", "Sat", "May", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "OS", "Arch", "linux", "amd", "NUMBER", "Experimental", "false", "Here", "be", "full", "log", "message", "without", "modifying", "any", "code", "in", "cleverhans", "root", "e", "NUMBER", "e", "NUMBER", "e", "python", "mnist_tutorial_keras", "NUMBER", "py", "WARNING", "Logging", "before", "flag", "parsing", "goes", "to", "stderr", "NUMBER", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation_wrapper", "NUMBER", "py", "NUMBER", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "utils_tf", "NUMBER", "py", "NUMBER", "The", "name", "tf", "NUMBER", "GraphKeys", "be", "deprecate", "NUMBER", "Please", "use", "tf", "NUMBER", "compat", "NUMBER", "v", "NUMBER", "GraphKeys", "instead", "NUMBER", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation_wrapper", "NUMBER", "py", "NUMBER", "From", "mnist_tutorial_keras", "NUMBER", "py", "NUMBER", "The", "name", "tf", "NUMBER", "app", "NUMBER", "run", "be", "deprecate", "NUMBER", "Please", "use", "tf", "NUMBER", "compat", "NUMBER", "v", "NUMBER", "app", "NUMBER", "run", "instead", "NUMBER", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans_tutorials", "__init__", "NUMBER", "py", "NUMBER", "UserWarning", "It", "appears", "that", "you", "have", "at", "least", "two", "version", "of", "cleverhans", "install", "one", "at", "and", "one", "at", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "NUMBER", "You", "be", "run", "the", "tutorial", "script", "from", "the", "former", "but", "python", "imported", "the", "library", "module", "from", "the", "latter", "NUMBER", "This", "may", "cause", "error", "for", "example", "if", "the", "tutorial", "version", "be", "newer", "than", "the", "library", "version", "and", "attempts", "to", "call", "new", "features", "NUMBER", "call", "new", "features", "NUMBER", "cur_dir", "ch_dir", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation_wrapper", "NUMBER", "py", "NUMBER", "From", "mnist_tutorial_keras", "NUMBER", "py", "NUMBER", "The", "name", "tf", "NUMBER", "set_random_seed", "be", "deprecate", "NUMBER", "Please", "use", "tf", "NUMBER", "compat", "NUMBER", "v", "NUMBER", "set_random_seed", "instead", "NUMBER", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation_wrapper", "NUMBER", "py", "NUMBER", "From", "mnist_tutorial_keras", "NUMBER", "py", "NUMBER", "The", "name", "tf", "NUMBER", "ConfigProto", "be", "deprecate", "NUMBER", "Please", "use", "tf", "NUMBER", "compat", "NUMBER", "v", "NUMBER", "ConfigProto", "instead", "NUMBER", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation_wrapper", "NUMBER", "py", "NUMBER", "From", "mnist_tutorial_keras", "NUMBER", "py", "NUMBER", "The", "name", "tf", "NUMBER", "Session", "be", "deprecate", "NUMBER", "Please", "use", "tf", "NUMBER", "compat", "NUMBER", "v", "NUMBER", "Session", "instead", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "platform", "cpu_feature_guard", "NUMBER", "cc", "NUMBER", "Your", "CPU", "support", "instructions", "that", "this", "TensorFlow", "binary", "was", "not", "compiled", "to", "use", "AVX", "NUMBER", "FMA", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcuda", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "cuda", "cuda_gpu_executor", "NUMBER", "cc", "NUMBER", "successful", "NUMA", "node", "read", "from", "SysFS", "had", "negative", "value", "NUMBER", "but", "there", "must", "be", "at", "least", "one", "NUMA", "node", "so", "returning", "NUMA", "node", "zero", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "XLA", "service", "NUMBER", "x", "NUMBER", "dab", "NUMBER", "b", "NUMBER", "executing", "computations", "on", "platform", "CUDA", "NUMBER", "Devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "StreamExecutor", "device", "NUMBER", "GeForce", "GTX", "NUMBER", "Ti", "Compute", "Capability", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "platform", "profile_utils", "cpu_utils", "NUMBER", "cc", "NUMBER", "CPU", "Frequency", "NUMBER", "Hz", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "XLA", "service", "NUMBER", "x", "NUMBER", "executing", "computations", "on", "platform", "Host", "NUMBER", "Devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "StreamExecutor", "device", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "cuda", "cuda_gpu_executor", "NUMBER", "cc", "NUMBER", "successful", "NUMA", "node", "read", "from", "SysFS", "had", "negative", "value", "NUMBER", "but", "there", "must", "be", "at", "least", "one", "NUMA", "node", "so", "returning", "NUMA", "node", "zero", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Found", "device", "NUMBER", "with", "properties", "name", "GeForce", "GTX", "NUMBER", "Ti", "major", "NUMBER", "minor", "NUMBER", "memoryClockRate", "GHz", "NUMBER", "pciBusID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcudart", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcublas", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcufft", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcurand", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcusolver", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcusparse", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcudnn", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "cuda", "cuda_gpu_executor", "NUMBER", "cc", "NUMBER", "successful", "NUMA", "node", "read", "from", "SysFS", "had", "negative", "value", "NUMBER", "but", "there", "must", "be", "at", "least", "one", "NUMA", "node", "so", "returning", "NUMA", "node", "zero", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "cuda", "cuda_gpu_executor", "NUMBER", "cc", "NUMBER", "successful", "NUMA", "node", "read", "from", "SysFS", "had", "negative", "value", "NUMBER", "but", "there", "must", "be", "at", "least", "one", "NUMA", "node", "so", "returning", "NUMA", "node", "zero", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Adding", "visible", "gpu", "devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcudart", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Device", "interconnect", "StreamExecutor", "with", "strength", "NUMBER", "edge", "matrix", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "NUMBER", "N", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "cuda", "cuda_gpu_executor", "NUMBER", "cc", "NUMBER", "successful", "NUMA", "node", "read", "from", "SysFS", "had", "negative", "value", "NUMBER", "but", "there", "must", "be", "at", "least", "one", "NUMA", "node", "so", "returning", "NUMA", "node", "zero", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "cuda", "cuda_gpu_executor", "NUMBER", "cc", "NUMBER", "successful", "NUMA", "node", "read", "from", "SysFS", "had", "negative", "value", "NUMBER", "but", "there", "must", "be", "at", "least", "one", "NUMA", "node", "so", "returning", "NUMA", "node", "zero", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Created", "TensorFlow", "device", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "device", "GPU", "NUMBER", "with", "NUMBER", "MB", "memory", "physical", "GPU", "device", "NUMBER", "name", "GeForce", "GTX", "NUMBER", "Ti", "pci", "bus", "id", "NUMBER", "NUMBER", "NUMBER", "compute", "capability", "NUMBER", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation_wrapper", "NUMBER", "py", "NUMBER", "From", "mnist_tutorial_keras", "NUMBER", "py", "NUMBER", "The", "name", "tf", "NUMBER", "keras", "NUMBER", "backend", "NUMBER", "set_session", "be", "deprecate", "NUMBER", "Please", "use", "tf", "NUMBER", "compat", "NUMBER", "v", "NUMBER", "keras", "NUMBER", "backend", "NUMBER", "set_session", "instead", "NUMBER", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation", "NUMBER", "py", "NUMBER", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "init_ops", "NUMBER", "py", "NUMBER", "calling", "VarianceScaling", "NUMBER", "__init__", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "init_ops", "with", "dtype", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Call", "initializer", "instance", "with", "the", "dtype", "argument", "instead", "of", "passing", "it", "to", "the", "constructor", "Defined", "Keras", "model", "NUMBER", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks_tf", "NUMBER", "py", "NUMBER", "UserWarning", "attacks_tf", "be", "deprecate", "and", "will", "be", "remove", "on", "NUMBER", "NUMBER", "NUMBER", "or", "after", "NUMBER", "Code", "should", "import", "function", "from", "their", "new", "locations", "directly", "NUMBER", "warnings", "NUMBER", "warn", "attacks_tf", "be", "deprecate", "and", "will", "be", "remove", "on", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "compat", "NUMBER", "py", "NUMBER", "UserWarning", "TAG", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "This", "function", "was", "originally", "needed", "as", "a", "compatibility", "layer", "for", "old", "version", "of", "tensorflow", "but", "support", "for", "those", "version", "has", "now", "be", "drop", "NUMBER", "warnings", "NUMBER", "warn", "str", "f", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation", "NUMBER", "py", "NUMBER", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "attack", "NUMBER", "py", "NUMBER", "to_float", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "math_ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Use", "tf", "NUMBER", "cast", "instead", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "mnist_tutorial_keras", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "tf", "NUMBER", "app", "NUMBER", "run", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "platform", "app", "NUMBER", "py", "line", "NUMBER", "in", "run", "_run", "main", "main", "argv", "argv", "flags_parser", "_parse_flags_tolerate_undef", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "absl", "app", "NUMBER", "py", "line", "NUMBER", "in", "run", "_run_main", "main", "args", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "absl", "app", "NUMBER", "py", "line", "NUMBER", "in", "_run_main", "sys", "NUMBER", "exit", "main", "argv", "File", "mnist_tutorial_keras", "NUMBER", "py", "line", "NUMBER", "in", "main", "learning_rate", "FLAGS", "NUMBER", "learning_rate", "File", "mnist_tutorial_keras", "NUMBER", "py", "line", "NUMBER", "in", "mnist_tutorial", "metrics", "accuracy", "adv_acc_metric", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "training", "track", "base", "NUMBER", "py", "line", "NUMBER", "in", "_method_wrapper", "result", "method", "self", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "keras", "engine", "training", "NUMBER", "py", "line", "NUMBER", "in", "compile", "masks", "self", "NUMBER", "_prepare_output_masks", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "keras", "engine", "training", "NUMBER", "py", "line", "NUMBER", "in", "_handle_metrics", "target", "output", "output_mask", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "keras", "engine", "training", "NUMBER", "py", "line", "NUMBER", "in", "_handle_per_output_metrics", "mask", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "keras", "engine", "training", "NUMBER", "py", "line", "NUMBER", "in", "_call_metric_fn", "strategy", "self", "NUMBER", "_distribution_strategy", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "keras", "distribute", "distributed_training_utils", "NUMBER", "py", "line", "NUMBER", "in", "call_replica_local_fn", "return", "fn", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "keras", "engine", "training_utils", "NUMBER", "py", "line", "NUMBER", "in", "call_metric_function", "return", "metric_fn", "y_true", "y_pred", "sample_weight", "weights", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "keras", "metrics", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "update_op", "self", "NUMBER", "update_state", "args", "kwargs", "pylint", "disable", "not", "callable", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "keras", "utils", "metrics_utils", "NUMBER", "py", "line", "NUMBER", "in", "decorated", "update_op", "update_state_fn", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "keras", "metrics", "NUMBER", "py", "line", "NUMBER", "in", "update_state", "matches", "self", "NUMBER", "_fn", "y_true", "y_pred", "self", "NUMBER", "_fn_kwargs", "File", "mnist_tutorial_keras", "NUMBER", "py", "line", "NUMBER", "in", "adv_acc", "x_adv", "fgsm", "NUMBER", "generate", "model", "NUMBER", "input", "fgsm_params", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "fast_gradient_method", "NUMBER", "py", "line", "NUMBER", "in", "generate", "self", "NUMBER", "model", "NUMBER", "get_logits", "x", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "utils_keras", "NUMBER", "py", "line", "NUMBER", "in", "get_logits", "logits_name", "self", "NUMBER", "_get_logits_name", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "utils_keras", "NUMBER", "py", "line", "NUMBER", "in", "_get_logits_name", "logits_name", "node", "NUMBER", "inbound_layers", "NUMBER", "NUMBER", "name", "TypeError", "Dense", "object", "do", "not", "support", "indexing", "Here", "be", "full", "log", "message", "my", "solution", "root", "e", "NUMBER", "e", "NUMBER", "e", "python", "mnist_tutorial_keras", "NUMBER", "py", "WARNING", "Logging", "before", "flag", "parsing", "goes", "to", "stderr", "NUMBER", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation_wrapper", "NUMBER", "py", "NUMBER", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "utils_tf", "NUMBER", "py", "NUMBER", "The", "name", "tf", "NUMBER", "GraphKeys", "be", "deprecate", "NUMBER", "Please", "use", "tf", "NUMBER", "compat", "NUMBER", "v", "NUMBER", "GraphKeys", "instead", "NUMBER", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation_wrapper", "NUMBER", "py", "NUMBER", "From", "mnist_tutorial_keras", "NUMBER", "py", "NUMBER", "The", "name", "tf", "NUMBER", "app", "NUMBER", "run", "be", "deprecate", "NUMBER", "Please", "use", "tf", "NUMBER", "compat", "NUMBER", "v", "NUMBER", "app", "NUMBER", "run", "instead", "NUMBER", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans_tutorials", "__init__", "NUMBER", "py", "NUMBER", "UserWarning", "It", "appears", "that", "you", "have", "at", "least", "two", "version", "of", "cleverhans", "install", "one", "at", "and", "one", "at", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "NUMBER", "You", "be", "run", "the", "tutorial", "script", "from", "the", "former", "but", "python", "imported", "the", "library", "module", "from", "the", "latter", "NUMBER", "This", "may", "cause", "error", "for", "example", "if", "the", "tutorial", "version", "be", "newer", "than", "the", "library", "version", "and", "attempts", "to", "call", "new", "features", "NUMBER", "call", "new", "features", "NUMBER", "cur_dir", "ch_dir", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation_wrapper", "NUMBER", "py", "NUMBER", "From", "mnist_tutorial_keras", "NUMBER", "py", "NUMBER", "The", "name", "tf", "NUMBER", "set_random_seed", "be", "deprecate", "NUMBER", "Please", "use", "tf", "NUMBER", "compat", "NUMBER", "v", "NUMBER", "set_random_seed", "instead", "NUMBER", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation_wrapper", "NUMBER", "py", "NUMBER", "From", "mnist_tutorial_keras", "NUMBER", "py", "NUMBER", "The", "name", "tf", "NUMBER", "ConfigProto", "be", "deprecate", "NUMBER", "Please", "use", "tf", "NUMBER", "compat", "NUMBER", "v", "NUMBER", "ConfigProto", "instead", "NUMBER", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation_wrapper", "NUMBER", "py", "NUMBER", "From", "mnist_tutorial_keras", "NUMBER", "py", "NUMBER", "The", "name", "tf", "NUMBER", "Session", "be", "deprecate", "NUMBER", "Please", "use", "tf", "NUMBER", "compat", "NUMBER", "v", "NUMBER", "Session", "instead", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "platform", "cpu_feature_guard", "NUMBER", "cc", "NUMBER", "Your", "CPU", "support", "instructions", "that", "this", "TensorFlow", "binary", "was", "not", "compiled", "to", "use", "AVX", "NUMBER", "FMA", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcuda", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "cuda", "cuda_gpu_executor", "NUMBER", "cc", "NUMBER", "successful", "NUMA", "node", "read", "from", "SysFS", "had", "negative", "value", "NUMBER", "but", "there", "must", "be", "at", "least", "one", "NUMA", "node", "so", "returning", "NUMA", "node", "zero", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "XLA", "service", "NUMBER", "x", "NUMBER", "c", "NUMBER", "executing", "computations", "on", "platform", "CUDA", "NUMBER", "Devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "StreamExecutor", "device", "NUMBER", "GeForce", "GTX", "NUMBER", "Ti", "Compute", "Capability", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "platform", "profile_utils", "cpu_utils", "NUMBER", "cc", "NUMBER", "CPU", "Frequency", "NUMBER", "Hz", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "XLA", "service", "NUMBER", "x", "NUMBER", "dc", "NUMBER", "executing", "computations", "on", "platform", "Host", "NUMBER", "Devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "StreamExecutor", "device", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "cuda", "cuda_gpu_executor", "NUMBER", "cc", "NUMBER", "successful", "NUMA", "node", "read", "from", "SysFS", "had", "negative", "value", "NUMBER", "but", "there", "must", "be", "at", "least", "one", "NUMA", "node", "so", "returning", "NUMA", "node", "zero", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Found", "device", "NUMBER", "with", "properties", "name", "GeForce", "GTX", "NUMBER", "Ti", "major", "NUMBER", "minor", "NUMBER", "memoryClockRate", "GHz", "NUMBER", "pciBusID", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcudart", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcublas", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcufft", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcurand", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcusolver", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcusparse", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcudnn", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "cuda", "cuda_gpu_executor", "NUMBER", "cc", "NUMBER", "successful", "NUMA", "node", "read", "from", "SysFS", "had", "negative", "value", "NUMBER", "but", "there", "must", "be", "at", "least", "one", "NUMA", "node", "so", "returning", "NUMA", "node", "zero", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "cuda", "cuda_gpu_executor", "NUMBER", "cc", "NUMBER", "successful", "NUMA", "node", "read", "from", "SysFS", "had", "negative", "value", "NUMBER", "but", "there", "must", "be", "at", "least", "one", "NUMA", "node", "so", "returning", "NUMA", "node", "zero", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Adding", "visible", "gpu", "devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcudart", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Device", "interconnect", "StreamExecutor", "with", "strength", "NUMBER", "edge", "matrix", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "NUMBER", "N", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "cuda", "cuda_gpu_executor", "NUMBER", "cc", "NUMBER", "successful", "NUMA", "node", "read", "from", "SysFS", "had", "negative", "value", "NUMBER", "but", "there", "must", "be", "at", "least", "one", "NUMA", "node", "so", "returning", "NUMA", "node", "zero", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "cuda", "cuda_gpu_executor", "NUMBER", "cc", "NUMBER", "successful", "NUMA", "node", "read", "from", "SysFS", "had", "negative", "value", "NUMBER", "but", "there", "must", "be", "at", "least", "one", "NUMA", "node", "so", "returning", "NUMA", "node", "zero", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Created", "TensorFlow", "device", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "device", "GPU", "NUMBER", "with", "NUMBER", "MB", "memory", "physical", "GPU", "device", "NUMBER", "name", "GeForce", "GTX", "NUMBER", "Ti", "pci", "bus", "id", "NUMBER", "NUMBER", "NUMBER", "compute", "capability", "NUMBER", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation_wrapper", "NUMBER", "py", "NUMBER", "From", "mnist_tutorial_keras", "NUMBER", "py", "NUMBER", "The", "name", "tf", "NUMBER", "keras", "NUMBER", "backend", "NUMBER", "set_session", "be", "deprecate", "NUMBER", "Please", "use", "tf", "NUMBER", "compat", "NUMBER", "v", "NUMBER", "keras", "NUMBER", "backend", "NUMBER", "set_session", "instead", "NUMBER", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation", "NUMBER", "py", "NUMBER", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "init_ops", "NUMBER", "py", "NUMBER", "calling", "VarianceScaling", "NUMBER", "__init__", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "init_ops", "with", "dtype", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Call", "initializer", "instance", "with", "the", "dtype", "argument", "instead", "of", "passing", "it", "to", "the", "constructor", "Defined", "Keras", "model", "NUMBER", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks_tf", "NUMBER", "py", "NUMBER", "UserWarning", "attacks_tf", "be", "deprecate", "and", "will", "be", "remove", "on", "NUMBER", "NUMBER", "NUMBER", "or", "after", "NUMBER", "Code", "should", "import", "function", "from", "their", "new", "locations", "directly", "NUMBER", "warnings", "NUMBER", "warn", "attacks_tf", "be", "deprecate", "and", "will", "be", "remove", "on", "NUMBER", "NUMBER", "NUMBER", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "compat", "NUMBER", "py", "NUMBER", "UserWarning", "TAG", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "This", "function", "was", "originally", "needed", "as", "a", "compatibility", "layer", "for", "old", "version", "of", "tensorflow", "but", "support", "for", "those", "version", "has", "now", "be", "drop", "NUMBER", "warnings", "NUMBER", "warn", "str", "f", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation", "NUMBER", "py", "NUMBER", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "attack", "NUMBER", "py", "NUMBER", "to_float", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "math_ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Use", "tf", "NUMBER", "cast", "instead", "NUMBER", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation_wrapper", "NUMBER", "py", "NUMBER", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "utils_tf", "NUMBER", "py", "NUMBER", "The", "name", "tf", "NUMBER", "assert_greater_equal", "be", "deprecate", "NUMBER", "Please", "use", "tf", "NUMBER", "compat", "NUMBER", "v", "NUMBER", "assert_greater_equal", "instead", "NUMBER", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "compat", "NUMBER", "py", "NUMBER", "UserWarning", "TAG", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "This", "function", "was", "originally", "needed", "as", "a", "compatibility", "layer", "for", "old", "version", "of", "tensorflow", "but", "support", "for", "those", "version", "has", "now", "be", "drop", "NUMBER", "warnings", "NUMBER", "warn", "str", "f", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "W", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "deprecation", "NUMBER", "py", "NUMBER", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "compat", "NUMBER", "py", "NUMBER", "calling", "softmax_cross_entropy_with_logits_v", "NUMBER", "_helper", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "nn_ops", "with", "dim", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "dim", "be", "deprecate", "use", "axis", "instead", "Train", "on", "NUMBER", "samples", "validate", "on", "NUMBER", "samples", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "W", "tensorflow", "compiler", "jit", "mark_for_compilation_pass", "NUMBER", "cc", "NUMBER", "One", "time", "warning", "Not", "use", "XLA", "CPU", "for", "cluster", "because", "envvar", "TF_XLA_FLAGS", "tf_xla_cpu_global_jit", "was", "not", "set", "NUMBER", "If", "you", "want", "XLA", "CPU", "either", "set", "that", "envvar", "or", "use", "experimental_jit_scope", "to", "enable", "XLA", "CPU", "NUMBER", "To", "confirm", "that", "XLA", "be", "active", "pass", "vmodule", "xla_compilation_cache", "NUMBER", "as", "a", "proper", "command", "line", "flag", "not", "via", "TF_XLA_FLAGS", "or", "set", "the", "envvar", "XLA_FLAGS", "xla_hlo_profile", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcublas", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "NUMBER", "cc", "NUMBER", "Successfully", "opened", "dynamic", "library", "libcudnn", "NUMBER", "so", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "adv_acc", "NUMBER", "val_loss", "NUMBER", "val_acc", "NUMBER", "val_adv_acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "adv_acc", "NUMBER", "val_loss", "NUMBER", "val_acc", "NUMBER", "val_adv_acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "adv_acc", "NUMBER", "val_loss", "NUMBER", "val_acc", "NUMBER", "val_adv_acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "adv_acc", "NUMBER", "val_loss", "NUMBER", "val_acc", "NUMBER", "val_adv_acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "adv_acc", "NUMBER", "val_loss", "NUMBER", "val_acc", "NUMBER", "val_adv_acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "adv_acc", "NUMBER", "val_loss", "NUMBER", "val_acc", "NUMBER", "val_adv_acc", "NUMBER", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "Repeating", "the", "process", "use", "adversarial", "training", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "compat", "NUMBER", "py", "NUMBER", "UserWarning", "TAG", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "This", "function", "was", "originally", "needed", "as", "a", "compatibility", "layer", "for", "old", "version", "of", "tensorflow", "but", "support", "for", "those", "version", "has", "now", "be", "drop", "NUMBER", "warnings", "NUMBER", "warn", "str", "f", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "compat", "NUMBER", "py", "NUMBER", "UserWarning", "TAG", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "This", "function", "was", "originally", "needed", "as", "a", "compatibility", "layer", "for", "old", "version", "of", "tensorflow", "but", "support", "for", "those", "version", "has", "now", "be", "drop", "NUMBER", "warnings", "NUMBER", "warn", "str", "f", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "compat", "NUMBER", "py", "NUMBER", "UserWarning", "TAG", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "This", "function", "was", "originally", "needed", "as", "a", "compatibility", "layer", "for", "old", "version", "of", "tensorflow", "but", "support", "for", "those", "version", "has", "now", "be", "drop", "NUMBER", "warnings", "NUMBER", "warn", "str", "f", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "compat", "NUMBER", "py", "NUMBER", "UserWarning", "TAG", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "This", "function", "was", "originally", "needed", "as", "a", "compatibility", "layer", "for", "old", "version", "of", "tensorflow", "but", "support", "for", "those", "version", "has", "now", "be", "drop", "NUMBER", "warnings", "NUMBER", "warn", "str", "f", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "Train", "on", "NUMBER", "samples", "validate", "on", "NUMBER", "samples", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "adv_acc", "NUMBER", "val_loss", "NUMBER", "val_acc", "NUMBER", "val_adv_acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "adv_acc", "NUMBER", "val_loss", "NUMBER", "val_acc", "NUMBER", "val_adv_acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "adv_acc", "NUMBER", "val_loss", "NUMBER", "val_acc", "NUMBER", "val_adv_acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "adv_acc", "NUMBER", "val_loss", "NUMBER", "val_acc", "NUMBER", "val_adv_acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "adv_acc", "NUMBER", "val_loss", "NUMBER", "val_acc", "NUMBER", "val_adv_acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "adv_acc", "NUMBER", "val_loss", "NUMBER", "val_acc", "NUMBER", "val_adv_acc", "NUMBER", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "The", "model", "you", "mention", "be", "mnist_tutorial_keras", "NUMBER", "py", "or", "that", "in", "my", "test", "code", "I", "propose", "to", "replace", "falconn", "with", "faiss", "NUMBER", "It", "speeds", "up", "an", "index", "construction", "as", "well", "as", "a", "search", "NUMBER", "There", "s", "no", "mentioning", "of", "falconn", "in", "Docker", "file", "nor", "in", "NUMBER", "sh", "script", "relate", "NUMBER", "I", "m", "use", "the", "following", "to", "install", "faiss", "with", "gpu", "speed", "up", "on", "Ubuntu", "container", "with", "Conda", "NUMBER", "bash", "conda", "install", "c", "pytorch", "faiss", "gpu", "I", "ve", "disabled", "random", "samples", "shuffling", "upon", "the", "index", "construction", "in", "faiss", "NUMBER", "But", "multiple", "runs", "for", "me", "given", "different", "dknn_preds", "NUMBER", "Is", "it", "supposed", "to", "be", "deterministic", "I", "can", "t", "check", "it", "with", "falconn", "since", "it", "s", "too", "slow", "NUMBER", "Yeah", "sure", "NUMBER", "Here", "be", "the", "output", "of", "multiple", "runs", "of", "dknn_tutorial", "with", "lsh_backend", "FAISS", "number_bits", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_test", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_adv", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_test", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_adv", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_test", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_adv", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_test", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_adv", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_test", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_adv", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_test", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_adv", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Regarding", "the", "non", "deterministic", "results", "on", "FAISS", "I", "have", "never", "use", "the", "library", "so", "I", "can", "t", "really", "comment", "on", "that", "Could", "you", "please", "provide", "multiple", "runs", "output", "with", "falconn", "Just", "to", "compare", "NUMBER", "The", "code", "I", "ve", "be", "use", "be", "the", "one", "you", "be", "editing", "in", "this", "example", "How", "many", "cores", "be", "needed", "for", "falconn", "to", "perform", "reasonably", "well", "With", "NUMBER", "x", "NUMBER", "GHz", "it", "takes", "NUMBER", "minutes", "or", "more", "per", "run", "NUMBER", "I", "think", "in", "couple", "hours", "I", "ll", "provide", "falconn", "runs", "as", "well", "here", "NUMBER", "Muliple", "runs", "of", "dknn_tutorial", "with", "falconn", "lsh", "backend", "NUMBER", "FLAGS", "have", "default", "values", "those", "be", "lsh_backend", "falconn", "number_bits", "NUMBER", "nb_tables", "NUMBER", "etc", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_test", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_adv", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_test", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_adv", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_test", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_adv", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_test", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_adv", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_test", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_adv", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_test", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_adv", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_test", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_adv", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "ve", "switched", "to", "an", "exact", "nearest", "neighbor", "in", "faiss", "NUMBER", "It", "s", "GPU", "version", "requires", "more", "than", "NUMBER", "GiB", "of", "memory", "NUMBER", "A", "tensorflow", "session", "creation", "was", "tuned", "to", "allocate", "a", "limited", "part", "of", "GPU", "memory", "NUMBER", "The", "output", "seems", "to", "be", "comparable", "to", "FALCONN", "s", "one", "NUMBER", "P", "NUMBER", "S", "NUMBER", "It", "s", "turned", "out", "that", "LSH", "has", "a", "low", "accuracy", "NUMBER", "I", "don", "t", "know", "how", "to", "tune", "it", "NUMBER", "There", "s", "a", "train_threshold", "parameter", "maybe", "it", "controls", "the", "quality", "of", "LSH", "search", "index", "in", "the", "faiss", "NUMBER", "python", "for", "k", "in", "range", "NUMBER", "assert", "os", "NUMBER", "system", "r", "python", "cleverhans", "model_zoo", "deep_k_nearest_neighbors", "dknn", "NUMBER", "py", "lsh_backend", "FAISS", "log_", "d", "NUMBER", "txt", "NUMBER", "NUMBER", "k", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_test", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_adv", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_test", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_adv", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_test", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_adv", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_test", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_adv", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_test", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_adv", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_test", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_adv", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_test", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_adv", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_test", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Saving", "reliability", "diagram", "at", "tmp", "dknn_adv", "NUMBER", "pdf", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "So", "there", "s", "good", "news", "and", "bad", "news", "NUMBER", "thumbsup", "The", "good", "news", "be", "that", "everyone", "that", "needs", "to", "sign", "a", "CLA", "the", "pull", "request", "submitter", "and", "all", "commit", "authors", "have", "do", "so", "NUMBER", "Everything", "be", "all", "good", "there", "NUMBER", "confused", "The", "bad", "news", "be", "that", "it", "appears", "that", "one", "or", "more", "commit", "were", "authored", "or", "co", "authored", "by", "someone", "other", "than", "the", "pull", "request", "submitter", "NUMBER", "We", "need", "to", "confirm", "that", "all", "authors", "be", "ok", "with", "their", "commit", "be", "contributed", "to", "this", "project", "NUMBER", "Please", "have", "them", "confirm", "that", "here", "in", "the", "pull", "request", "NUMBER", "Note", "to", "project", "maintainer", "This", "be", "a", "terminal", "state", "meaning", "the", "cla", "google", "commit", "status", "will", "not", "change", "from", "this", "state", "NUMBER", "It", "s", "up", "to", "you", "to", "confirm", "consent", "of", "all", "the", "commit", "author", "s", "set", "the", "cla", "label", "to", "yes", "if", "enable", "on", "your", "project", "and", "then", "merge", "this", "pull", "request", "when", "appropriate", "NUMBER", "\u2139", "Googlers", "Go", "here", "LINK", "NUMBER", "A", "NUMBER", "F", "NUMBER", "Fgithub", "NUMBER", "com", "NUMBER", "Ftensorflow", "NUMBER", "Fcleverhans", "NUMBER", "Fpull", "NUMBER", "F", "NUMBER", "for", "more", "info", "NUMBER", "TAG", "Cool", "no", "more", "question", "left", "then", "Just", "wait", "for", "the", "travis", "script", "npapernot", "Do", "you", "know", "any", "practical", "application", "of", "dknn", "for", "big", "enough", "models", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "No", "Describe", "the", "solution", "you", "d", "like", "I", "would", "like", "to", "see", "this", "approach", "implement", "LINK", "I", "believe", "this", "be", "a", "precursor", "to", "the", "GAN", "approach", "Hi", "I", "m", "trying", "to", "do", "Saliency", "Map", "Method", "use", "cleverhans", "NUMBER", "My", "model", "needs", "to", "be", "keras", "sequential", "so", "for", "that", "reason", "I", "ve", "search", "and", "find", "cleverhans", "NUMBER", "utils_keras", "Sequential", "uses", "KerasModelWrapper", "NUMBER", "But", "for", "some", "reason", "I", "still", "get", "it", "should", "be", "cleverhans", "model", "NUMBER", "Here", "s", "the", "stacktrace", "TypeError", "Traceback", "most", "recent", "call", "last", "TAG", "in", "TAG", "NUMBER", "LINK", "_keras", "NUMBER", "py", "NUMBER", "NUMBER", "jsma", "SaliencyMapMethod", "model", "sess", "sess", "NUMBER", "jsma_params", "theta", "NUMBER", "gamma", "NUMBER", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "c", "users", "jeredriq", "appdata", "local", "program", "python", "python", "NUMBER", "lib", "site", "package", "cleverhans", "attacks", "__init__", "NUMBER", "py", "in", "__init__", "self", "model", "sess", "dtypestr", "kwargs", "NUMBER", "NUMBER", "NUMBER", "super", "SaliencyMapMethod", "self", "NUMBER", "__init__", "model", "sess", "dtypestr", "kwargs", "NUMBER", "NUMBER", "self", "NUMBER", "feedable_kwargs", "y_target", "c", "users", "jeredriq", "appdata", "local", "program", "python", "python", "NUMBER", "lib", "site", "package", "cleverhans", "attacks", "__init__", "NUMBER", "py", "in", "__init__", "self", "model", "sess", "dtypestr", "kwargs", "NUMBER", "NUMBER", "if", "not", "isinstance", "model", "Model", "NUMBER", "raise", "TypeError", "The", "model", "argument", "should", "be", "an", "instance", "of", "NUMBER", "the", "cleverhans", "NUMBER", "model", "NUMBER", "Model", "class", "NUMBER", "NUMBER", "TypeError", "The", "model", "argument", "should", "be", "an", "instance", "of", "the", "cleverhans", "NUMBER", "model", "NUMBER", "Model", "class", "NUMBER", "And", "here", "s", "my", "code", "import", "numpy", "as", "np", "from", "keras", "import", "backend", "import", "tensorflow", "as", "tf", "from", "keras", "NUMBER", "callbacks", "import", "ModelCheckpoint", "from", "matplotlib", "import", "gridspec", "from", "matplotlib", "import", "pyplot", "as", "plt", "from", "sklearn", "NUMBER", "metrics", "import", "confusion_matrix", "classification_report", "from", "keras", "NUMBER", "datasets", "import", "mnist", "from", "keras", "NUMBER", "layers", "import", "Dense", "Dropout", "from", "keras", "NUMBER", "layers", "import", "Flatten", "from", "keras", "NUMBER", "layers", "NUMBER", "convolutional", "import", "Conv", "NUMBER", "D", "from", "keras", "NUMBER", "layers", "NUMBER", "convolutional", "import", "MaxPooling", "NUMBER", "D", "from", "keras", "NUMBER", "utils", "import", "np_utils", "from", "cleverhans", "NUMBER", "attacks", "import", "FastGradientMethod", "from", "cleverhans", "NUMBER", "attacks", "import", "BasicIterativeMethod", "from", "cleverhans", "NUMBER", "attacks", "import", "SaliencyMapMethod", "from", "cleverhans", "NUMBER", "attacks", "import", "DeepFool", "from", "cleverhans", "NUMBER", "utils_keras", "import", "Sequential", "sess", "backend", "NUMBER", "get_session", "x", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "shape", "None", "NUMBER", "NUMBER", "NUMBER", "y", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "shape", "None", "NUMBER", "Managing", "Mnist", "X_train", "y_train", "X_test", "y_test", "mnist", "NUMBER", "load_data", "X_train", "X_train", "NUMBER", "reshape", "X_train", "NUMBER", "shape", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "X_test", "X_test", "NUMBER", "reshape", "X_test", "NUMBER", "shape", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "X_train", "X_train", "NUMBER", "astype", "float", "NUMBER", "X_test", "X_test", "NUMBER", "astype", "float", "NUMBER", "X_train", "NUMBER", "X_test", "NUMBER", "y_train_cat", "np_utils", "NUMBER", "to_categorical", "y_train", "y_test_cat", "np_utils", "NUMBER", "to_categorical", "y_test", "num_classes", "y_test_cat", "NUMBER", "shape", "NUMBER", "Defining", "Model", "model", "Sequential", "TAG", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "This", "function", "was", "originally", "needed", "as", "a", "compatibility", "layer", "for", "old", "version", "of", "tensorflow", "but", "support", "for", "those", "version", "has", "now", "be", "drop", "NUMBER", "warnings", "NUMBER", "warn", "str", "f", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "WARNING", "tensorflow", "From", "content", "cleverhans", "cleverhans", "attacks", "attack", "NUMBER", "py", "NUMBER", "to_float", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "math_ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Use", "tf", "NUMBER", "cast", "instead", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "facenet_fgsm", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "adv_x", "fgsm", "NUMBER", "generate", "model", "NUMBER", "face_input", "fgsm_params", "File", "content", "cleverhans", "cleverhans", "attacks", "fast_gradient_method", "NUMBER", "py", "line", "NUMBER", "in", "generate", "self", "NUMBER", "model", "NUMBER", "get_logits", "x", "File", "content", "cleverhans", "cleverhans", "model", "NUMBER", "py", "line", "NUMBER", "in", "get_logits", "output", "in", "fprop", "NotImplementedError", "TAG", "must", "implement", "get_logits", "or", "must", "define", "a", "logits", "output", "in", "fprop", "The", "older", "model", "path", "NUMBER", "gives", "the", "following", "error", "in", "facenet_fgsm", "NUMBER", "py", "Model", "filename", "models", "facenet", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "pb", "WARNING", "tensorflow", "From", "content", "facenet", "src", "facenet", "NUMBER", "py", "NUMBER", "FastGFile", "NUMBER", "__init__", "from", "tensorflow", "NUMBER", "python", "NUMBER", "platform", "NUMBER", "gfile", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Use", "tf", "NUMBER", "gfile", "NUMBER", "GFile", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "facenet_fgsm", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "model", "InceptionResnetV", "NUMBER", "Model", "File", "facenet_fgsm", "NUMBER", "py", "line", "NUMBER", "in", "__init__", "facenet", "NUMBER", "load_model", "self", "NUMBER", "model_path", "File", "content", "facenet", "src", "facenet", "NUMBER", "py", "line", "NUMBER", "in", "load_model", "graph_def", "NUMBER", "ParseFromString", "f", "NUMBER", "read", "google", "NUMBER", "protobuf", "NUMBER", "message", "NUMBER", "DecodeError", "Error", "parsing", "message", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Just", "follow", "the", "directions", "in", "the", "FGSM", "against", "FaceNet", "example", "at", "LINK", "_adversarial_faces", "Expected", "behavior", "I", "expect", "it", "to", "work", "as", "I", "be", "following", "the", "examples", "as", "stated", "System", "configuration", "OS", "Running", "in", "Google", "Colab", "NAME", "Ubuntu", "VERSION", "NUMBER", "LTS", "Bionic", "Beaver", "Python", "version", "NUMBER", "TensorFlow", "version", "NUMBER", "I", "was", "use", "the", "model", "from", "the", "Validate", "on", "LFW", "tutorial", "which", "recommended", "downloading", "the", "model", "from", "LINK", "NUMBER", "EXPBSXwTaqrSC", "NUMBER", "OhUdXNmKSh", "NUMBER", "qJUQ", "NUMBER", "NUMBER", "I", "didn", "t", "realize", "that", "there", "was", "a", "model", "in", "CleaverHans", "NUMBER", "Thanks", "for", "responding", "to", "this", "on", "a", "Saturday", "NUMBER", "You", "be", "AWESOME", "Regards", "Abe", "Ok", "went", "through", "the", "file", "in", "cleverhans", "but", "could", "not", "find", "the", "NUMBER", "pb", "models", "file", "for", "Facenet", "NUMBER", "When", "I", "first", "checked", "he", "only", "place", "I", "could", "find", "the", "original", "model", "file", "referenced", "in", "facenet_fgsm", "NUMBER", "py", "was", "online", "at", "LINK", "time", "face", "recognition", "tree", "master", "pre", "trained", "NUMBER", "NUMBER", "Now", "I", "find", "I", "swear", "this", "wasn", "t", "there", "when", "I", "tried", "searching", "originally", "LINK", "So", "I", "be", "trying", "everything", "with", "the", "new", "model", "NUMBER", "I", "hope", "this", "works", "NUMBER", "Will", "keep", "you", "update", "NUMBER", "Please", "enjoy", "your", "weekend", "and", "thanks", "for", "responding", "so", "quickly", "NUMBER", "Looks", "like", "the", "latest", "model", "I", "tried", "has", "problem", "as", "well", "NUMBER", "I", "get", "the", "following", "trying", "to", "run", "python", "src", "validate_on_lfw", "NUMBER", "py", "datasets", "lfw", "lfw_mtcnnpy_", "NUMBER", "models", "facenet", "NUMBER", "NUMBER", "distance_metric", "NUMBER", "use_flipped_images", "subtract_mean", "use_fixed_image_standardization", "In", "the", "referenced", "Validate", "on", "LFW", "tutorial", "Model", "directory", "content", "models", "facenet", "NUMBER", "NUMBER", "Metagraph", "file", "model", "NUMBER", "NUMBER", "meta", "Checkpoint", "file", "model", "NUMBER", "NUMBER", "ckpt", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "W", "tensorflow", "core", "graph", "graph_constructor", "NUMBER", "cc", "NUMBER", "Importing", "a", "graph", "with", "a", "lower", "producer", "version", "NUMBER", "into", "an", "exist", "graph", "with", "producer", "version", "NUMBER", "Shape", "inference", "will", "have", "run", "different", "parts", "of", "the", "graph", "with", "different", "producer", "version", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "framework", "importer", "NUMBER", "py", "line", "NUMBER", "in", "import_graph_def", "graph", "NUMBER", "_c_graph", "serialized", "options", "pylint", "disable", "protected", "access", "tensorflow", "NUMBER", "python", "NUMBER", "framework", "NUMBER", "errors_impl", "NUMBER", "InvalidArgumentError", "Input", "NUMBER", "of", "node", "Reshape", "was", "pass", "int", "NUMBER", "from", "batch_join", "NUMBER", "incompatible", "with", "expected", "int", "NUMBER", "During", "handle", "of", "the", "above", "exception", "another", "exception", "occur", "Traceback", "most", "recent", "call", "last", "File", "content", "facenet", "src", "validate_on_lfw", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "main", "parse_arguments", "sys", "NUMBER", "argv", "NUMBER", "File", "content", "facenet", "src", "validate_on_lfw", "NUMBER", "py", "line", "NUMBER", "in", "main", "facenet", "NUMBER", "load_model", "args", "NUMBER", "model", "input_map", "input_map", "File", "content", "facenet", "src", "facenet", "NUMBER", "py", "line", "NUMBER", "in", "load_model", "saver", "tf", "NUMBER", "train", "NUMBER", "import_meta_graph", "os", "NUMBER", "path", "NUMBER", "join", "model_exp", "meta_file", "input_map", "input_map", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "training", "saver", "NUMBER", "py", "line", "NUMBER", "in", "import_meta_graph", "meta_graph_or_file", "clear_devices", "import_scope", "kwargs", "NUMBER", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "training", "saver", "NUMBER", "py", "line", "NUMBER", "in", "_import_meta_graph_with_return_elements", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "framework", "meta_graph", "NUMBER", "py", "line", "NUMBER", "in", "import_scoped_meta_graph_with_return_elements", "return_elements", "return_elements", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "util", "deprecation", "NUMBER", "py", "line", "NUMBER", "in", "new_func", "return", "func", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "framework", "importer", "NUMBER", "py", "line", "NUMBER", "in", "import_graph_def", "raise", "ValueError", "str", "e", "ValueError", "Input", "NUMBER", "of", "node", "Reshape", "was", "pass", "int", "NUMBER", "from", "batch_join", "NUMBER", "incompatible", "with", "expected", "int", "NUMBER", "I", "decided", "to", "just", "run", "cleverhans", "with", "the", "model", "only", "NUMBER", "Then", "get", "Use", "tf", "NUMBER", "gfile", "NUMBER", "GFile", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "line", "NUMBER", "in", "_create_c_op", "c_op", "c_api", "NUMBER", "TF_FinishOperation", "op_desc", "tensorflow", "NUMBER", "python", "NUMBER", "framework", "NUMBER", "errors_impl", "NUMBER", "InvalidArgumentError", "Dimensions", "must", "be", "equal", "but", "be", "NUMBER", "and", "NUMBER", "for", "sub", "op", "Sub", "with", "input", "shapes", "NUMBER", "NUMBER", "NUMBER", "During", "handle", "of", "the", "above", "exception", "another", "exception", "occur", "Traceback", "most", "recent", "call", "last", "File", "facenet_fgsm", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "model", "NUMBER", "convert_to_classifier", "File", "facenet_fgsm", "NUMBER", "py", "line", "NUMBER", "in", "convert_to_classifier", "tf", "NUMBER", "square", "self", "NUMBER", "embedding_output", "self", "NUMBER", "victim_embedding_input", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "math_ops", "NUMBER", "py", "line", "NUMBER", "in", "binary_op_wrapper", "return", "func", "x", "y", "name", "name", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "gen_math_ops", "NUMBER", "py", "line", "NUMBER", "in", "sub", "Sub", "x", "x", "y", "y", "name", "name", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "framework", "op_def_library", "NUMBER", "py", "line", "NUMBER", "in", "_apply_op_helper", "op_def", "op_def", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "util", "deprecation", "NUMBER", "py", "line", "NUMBER", "in", "new_func", "return", "func", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "line", "NUMBER", "in", "create_op", "op_def", "op_def", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "line", "NUMBER", "in", "__init__", "control_input_ops", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "line", "NUMBER", "in", "_create_c_op", "raise", "ValueError", "str", "e", "ValueError", "Dimensions", "must", "be", "equal", "but", "be", "NUMBER", "and", "NUMBER", "for", "sub", "op", "Sub", "with", "input", "shapes", "NUMBER", "NUMBER", "NUMBER", "So", "I", "change", "facenet_fgsm", "NUMBER", "py", "to", "NUMBER", "class", "InceptionResnetV", "NUMBER", "Model", "Model", "CHANGED", "HERE", "model_path", "models", "facenet", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "pb", "model_path", "models", "facenet", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "pb", "def", "__init__", "self", "super", "InceptionResnetV", "NUMBER", "Model", "self", "NUMBER", "__init__", "scope", "model", "Load", "Facenet", "CNN", "facenet", "NUMBER", "load_model", "self", "NUMBER", "model_path", "Save", "input", "and", "output", "tensors", "references", "graph", "tf", "NUMBER", "get_default_graph", "self", "NUMBER", "face_input", "graph", "NUMBER", "get_tensor_by_name", "input", "NUMBER", "self", "NUMBER", "embedding_output", "graph", "NUMBER", "get_tensor_by_name", "embeddings", "NUMBER", "def", "convert_to_classifier", "self", "Create", "victim_embedding", "placeholder", "self", "NUMBER", "victim_embedding_input", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "CHANGED", "HERE", "shape", "None", "NUMBER", "Then", "I", "get", "Model", "filename", "models", "facenet", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "pb", "WARNING", "tensorflow", "From", "content", "facenet", "src", "facenet", "NUMBER", "py", "NUMBER", "FastGFile", "NUMBER", "__init__", "from", "tensorflow", "NUMBER", "python", "NUMBER", "platform", "NUMBER", "gfile", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Use", "tf", "NUMBER", "gfile", "NUMBER", "GFile", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "facenet_fgsm", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "faces", "NUMBER", "faces", "NUMBER", "labels", "set_loader", "NUMBER", "load_testset", "NUMBER", "File", "content", "cleverhans", "examples", "facenet_adversarial_faces", "set_loader", "NUMBER", "py", "line", "NUMBER", "in", "load_testset", "paths", "labels", "lfw", "NUMBER", "get_paths", "testset_path", "pairs", "file_extension", "TypeError", "get_paths", "takes", "NUMBER", "positional", "argument", "but", "NUMBER", "were", "given", "So", "I", "change", "set_loader", "NUMBER", "py", "def", "load_testset", "size", "Load", "images", "paths", "and", "labels", "pairs", "lfw", "NUMBER", "read_pairs", "pairs_path", "CHANGE", "HERE", "paths", "labels", "lfw", "NUMBER", "get_paths", "testset_path", "pairs", "file_extension", "paths", "labels", "lfw", "NUMBER", "get_paths", "testset_path", "pairs", "Then", "I", "get", "Model", "filename", "models", "facenet", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "pb", "WARNING", "tensorflow", "From", "content", "facenet", "src", "facenet", "NUMBER", "py", "NUMBER", "FastGFile", "NUMBER", "__init__", "from", "tensorflow", "NUMBER", "python", "NUMBER", "platform", "NUMBER", "gfile", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Use", "tf", "NUMBER", "gfile", "NUMBER", "GFile", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "facenet_fgsm", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "faces", "NUMBER", "faces", "NUMBER", "labels", "set_loader", "NUMBER", "load_testset", "NUMBER", "File", "content", "cleverhans", "examples", "facenet_adversarial_faces", "set_loader", "NUMBER", "py", "line", "NUMBER", "in", "load_testset", "faces", "NUMBER", "facenet", "NUMBER", "load_data", "paths_batch_", "NUMBER", "False", "False", "image_size", "File", "content", "facenet", "src", "facenet", "NUMBER", "py", "line", "NUMBER", "in", "load_data", "img", "misc", "NUMBER", "imread", "image_paths", "i", "AttributeError", "module", "scipy", "NUMBER", "misc", "has", "no", "attribute", "imread", "So", "I", "change", "facenet", "src", "facenet", "NUMBER", "py", "CHANGE", "HERE", "import", "imageio", "NUMBER", "def", "load_data", "image_paths", "do_random_crop", "do_random_flip", "image_size", "do_prewhiten", "True", "nrof_samples", "len", "image_paths", "images", "np", "NUMBER", "zeros", "nrof_samples", "image_size", "image_size", "NUMBER", "for", "i", "in", "range", "nrof_samples", "CHANGE", "HERE", "img", "misc", "NUMBER", "imread", "image_paths", "i", "img", "imageio", "NUMBER", "imread", "image_paths", "i", "Which", "finally", "led", "to", "Colocations", "handle", "automatically", "by", "placer", "NUMBER", "content", "cleverhans", "cleverhans", "compat", "NUMBER", "py", "NUMBER", "UserWarning", "TAG", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "This", "function", "was", "originally", "needed", "as", "a", "compatibility", "layer", "for", "old", "version", "of", "tensorflow", "but", "support", "for", "those", "version", "has", "now", "be", "drop", "NUMBER", "warnings", "NUMBER", "warn", "str", "f", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "WARNING", "tensorflow", "From", "content", "cleverhans", "cleverhans", "attacks", "attack", "NUMBER", "py", "NUMBER", "to_float", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "math_ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Use", "tf", "NUMBER", "cast", "instead", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "facenet_fgsm", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "adv_x", "fgsm", "NUMBER", "generate", "model", "NUMBER", "face_input", "fgsm_params", "File", "content", "cleverhans", "cleverhans", "attacks", "fast_gradient_method", "NUMBER", "py", "line", "NUMBER", "in", "generate", "self", "NUMBER", "model", "NUMBER", "get_logits", "x", "File", "content", "cleverhans", "cleverhans", "model", "NUMBER", "py", "line", "NUMBER", "in", "get_logits", "output", "in", "fprop", "NotImplementedError", "TAG", "must", "implement", "get_logits", "or", "must", "define", "a", "logits", "output", "in", "fprop", "I", "think", "the", "example", "be", "still", "broken", "NUMBER", "I", "be", "a", "bit", "confused", "NUMBER", "I", "be", "run", "the", "example", "you", "referenced", "above", "facenet_fgsm", "NUMBER", "py", "and", "it", "has", "an", "implement", "fprop", "method", "NUMBER", "Do", "I", "need", "to", "change", "the", "fprop", "method", "It", "be", "currently", "def", "fprop", "self", "x", "set_ref", "False", "return", "dict", "zip", "self", "NUMBER", "layer_names", "self", "NUMBER", "layers", "The", "error", "that", "I", "was", "talking", "about", "relate", "to", "a", "miss", "fprop", "method", "happens", "when", "I", "run", "facenet_fgsm", "NUMBER", "py", "When", "I", "run", "validate_on_lfw", "NUMBER", "py", "I", "don", "t", "get", "error", "with", "the", "newer", "model", "NUMBER", "NUMBER", "however", "I", "still", "get", "the", "miss", "fprop", "method", "when", "run", "facenet_fgsm", "NUMBER", "py", "with", "the", "newer", "model", "NUMBER", "You", "be", "correct", "NUMBER", "With", "the", "older", "model", "NUMBER", "NUMBER", "I", "get", "the", "following", "error", "when", "run", "validate_on_lfw", "NUMBER", "py", "Instructions", "for", "update", "tf", "NUMBER", "py_func", "be", "deprecate", "in", "TF", "V", "NUMBER", "Instead", "use", "tf", "NUMBER", "py_function", "which", "takes", "a", "python", "function", "which", "manipulates", "tf", "eager", "tensors", "instead", "of", "numpy", "arrays", "NUMBER", "It", "s", "easy", "to", "convert", "a", "tf", "eager", "tensor", "to", "an", "ndarray", "just", "call", "tensor", "NUMBER", "numpy", "but", "having", "access", "to", "eager", "tensors", "means", "tf", "NUMBER", "py_function", "s", "can", "use", "accelerators", "such", "as", "GPUs", "as", "well", "as", "be", "differentiable", "use", "a", "gradient", "tape", "NUMBER", "WARNING", "tensorflow", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "image_ops_impl", "NUMBER", "py", "NUMBER", "div", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "math_ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Deprecated", "in", "favor", "of", "operator", "or", "tf", "NUMBER", "math", "NUMBER", "divide", "NUMBER", "WARNING", "tensorflow", "From", "content", "facenet", "src", "facenet", "NUMBER", "py", "NUMBER", "batch_join", "from", "tensorflow", "NUMBER", "python", "NUMBER", "training", "NUMBER", "input", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Queue", "based", "input", "pipelines", "have", "be", "replaced", "by", "tf", "NUMBER", "data", "NUMBER", "Use", "tf", "NUMBER", "data", "NUMBER", "Dataset", "NUMBER", "interleave", "NUMBER", "NUMBER", "batch", "batch_size", "or", "padded_batch", "NUMBER", "if", "dynamic_pad", "True", "NUMBER", "WARNING", "tensorflow", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "training", "input", "NUMBER", "py", "NUMBER", "QueueRunner", "NUMBER", "__init__", "from", "tensorflow", "NUMBER", "python", "NUMBER", "training", "NUMBER", "queue_runner_impl", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "To", "construct", "input", "pipelines", "use", "the", "tf", "NUMBER", "data", "module", "NUMBER", "WARNING", "tensorflow", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "training", "input", "NUMBER", "py", "NUMBER", "add_queue_runner", "from", "tensorflow", "NUMBER", "python", "NUMBER", "training", "NUMBER", "queue_runner_impl", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "To", "construct", "input", "pipelines", "use", "the", "tf", "NUMBER", "data", "module", "NUMBER", "WARNING", "tensorflow", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "training", "input", "NUMBER", "py", "NUMBER", "to_float", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "math_ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Use", "tf", "NUMBER", "cast", "instead", "NUMBER", "Model", "directory", "content", "models", "facenet", "NUMBER", "NUMBER", "Metagraph", "file", "model", "NUMBER", "NUMBER", "meta", "Checkpoint", "file", "model", "NUMBER", "NUMBER", "ckpt", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "W", "tensorflow", "core", "graph", "graph_constructor", "NUMBER", "cc", "NUMBER", "Importing", "a", "graph", "with", "a", "lower", "producer", "version", "NUMBER", "into", "an", "exist", "graph", "with", "producer", "version", "NUMBER", "Shape", "inference", "will", "have", "run", "different", "parts", "of", "the", "graph", "with", "different", "producer", "version", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "framework", "importer", "NUMBER", "py", "line", "NUMBER", "in", "import_graph_def", "graph", "NUMBER", "_c_graph", "serialized", "options", "pylint", "disable", "protected", "access", "tensorflow", "NUMBER", "python", "NUMBER", "framework", "NUMBER", "errors_impl", "NUMBER", "InvalidArgumentError", "Input", "NUMBER", "of", "node", "Reshape", "was", "pass", "int", "NUMBER", "from", "batch_join", "NUMBER", "incompatible", "with", "expected", "int", "NUMBER", "When", "I", "run", "the", "newer", "model", "NUMBER", "NUMBER", "src", "validate_on_lfw", "NUMBER", "py", "works", "correctly", "and", "I", "get", "the", "correct", "accuracy", "output", "NUMBER", "However", "with", "the", "newer", "model", "I", "still", "get", "the", "miss", "fprop", "method", "NUMBER", "So", "I", "think", "I", "know", "where", "the", "problem", "be", "NUMBER", "I", "did", "not", "generate", "the", "model", "NUMBER", "pb", "file", "NUMBER", "They", "were", "downloaded", "from", "the", "link", "above", "NUMBER", "The", "Validate", "on", "LFW", "tutorial", "do", "not", "generate", "serialize", "the", "model", "NUMBER", "pb", "file", "NUMBER", "The", "newer", "model", "file", "work", "with", "Validate", "on", "LFW", "because", "David", "Sandberg", "did", "not", "need", "to", "add", "the", "fprop", "method", "to", "his", "output", "serialized", "facenet", "models", "that", "I", "downloaded", "NUMBER", "The", "fprop", "method", "be", "a", "new", "method", "that", "needs", "to", "be", "add", "to", "facenet", "model", "NUMBER", "pb", "objects", "so", "they", "can", "work", "in", "Cleverhans", "NUMBER", "I", "looked", "in", "facenet", "src", "models", "inception_resnet_v", "NUMBER", "py", "of", "David", "Sandberger", "s", "facenet", "implementation", "but", "there", "be", "no", "definition", "of", "a", "class", "for", "me", "to", "add", "the", "fprop", "method", "to", "NUMBER", "The", "line", "that", "crashes", "starts", "from", "facenet_fgsm", "NUMBER", "py", "NUMBER", "This", "doesn", "t", "make", "any", "sense", "NUMBER", "I", "be", "run", "facenet_fgsm", "NUMBER", "py", "which", "instantiates", "the", "correct", "model", "type", "from", "cleverhans", "NUMBER", "model", "import", "Model", "NUMBER", "class", "InceptionResnetV", "NUMBER", "Model", "Model", "model", "InceptionResnetV", "NUMBER", "Model", "Ok", "looking", "at", "the", "stack", "again", "File", "facenet_fgsm", "NUMBER", "py", "line", "NUMBER", "in", "adv_x", "fgsm", "NUMBER", "generate", "model", "NUMBER", "face_input", "fgsm_params", "File", "content", "cleverhans", "cleverhans", "attacks", "fast_gradient_method", "NUMBER", "py", "line", "NUMBER", "in", "generate", "self", "NUMBER", "model", "NUMBER", "get_logits", "x", "File", "content", "cleverhans", "cleverhans", "model", "NUMBER", "py", "line", "NUMBER", "in", "get_logits", "output", "in", "fprop", "NotImplementedError", "TAG", "must", "implement", "get_logits", "or", "must", "define", "a", "logits", "output", "in", "fprop", "The", "problem", "be", "not", "the", "miss", "fprop", "but", "the", "miss", "get_logits", "method", "definition", "of", "InceptionResnetV", "NUMBER", "Model", "in", "facenet_fgsm", "NUMBER", "py", "Am", "I", "supposed", "to", "implement", "that", "and", "how", "should", "I", "do", "this", "if", "I", "wasn", "t", "the", "one", "who", "created", "the", "model", "because", "I", "downloaded", "it", "NUMBER", "Thank", "you", "again", "for", "your", "patience", "in", "all", "this", "NUMBER", "I", "think", "we", "be", "almost", "there", "NUMBER", "Clever", "Ok", "will", "try", "after", "I", "finish", "my", "workout", "NUMBER", "Thanks", "Abe", "On", "Mon", "Jun", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "PM", "Nicolas", "Papernot", "TAG", "write", "I", "think", "you", "be", "correct", "I", "haven", "t", "worked", "on", "this", "particular", "example", "it", "was", "add", "by", "BrunoLopezGarcia", "TAG", "but", "it", "looks", "like", "it", "was", "write", "before", "we", "made", "sure", "that", "the", "FGSM", "was", "call", "on", "logits", "see", "LINK", "_gradient_method", "NUMBER", "py", "L", "NUMBER", "Unfortunately", "I", "don", "t", "know", "much", "about", "FaceNet", "but", "yes", "you", "would", "have", "to", "find", "a", "way", "to", "create", "a", "method", "get_logits", "that", "take", "an", "input", "tensor", "and", "returns", "a", "tensor", "containing", "the", "corresponding", "logits", "NUMBER", "I", "looked", "a", "bit", "at", "the", "code", "in", "the", "example", "and", "it", "sounds", "like", "it", "be", "just", "computing", "a", "distance", "between", "embeddings", "and", "processing", "the", "distance", "to", "compute", "a", "score", "that", "be", "use", "in", "place", "of", "a", "classification", "score", "NUMBER", "Given", "that", "there", "be", "no", "real", "logits", "or", "probs", "if", "my", "understanding", "be", "correct", "I", "think", "it", "s", "ok", "to", "just", "change", "the", "following", "line", "LINK", "_adversarial_faces", "facenet_fgsm", "NUMBER", "py", "L", "NUMBER", "to", "say", "instead", "self", "NUMBER", "layer_names", "NUMBER", "append", "logits", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "I", "think", "you", "be", "correct", "NUMBER", "There", "shouldn", "t", "be", "a", "logits", "layer", "because", "Facenet", "be", "use", "image", "embeddings", "and", "triplet", "loss", "NUMBER", "Well", "I", "get", "farther", "but", "now", "I", "be", "run", "out", "of", "memory", "on", "Colab", "NUMBER", "Something", "seems", "a", "bit", "weird", "NUMBER", "I", "successfully", "get", "through", "the", "Validate", "on", "LFW", "tutorial", "NUMBER", "After", "get", "these", "work", "on", "Colab", "I", "be", "going", "to", "share", "out", "the", "notebooks", "NUMBER", "Also", "would", "like", "to", "update", "the", "docs", "NUMBER", "Have", "shared", "the", "notebooks", "with", "you", "if", "you", "want", "to", "take", "a", "look", "at", "what", "I", "have", "do", "NUMBER", "Not", "sure", "how", "to", "proceed", "forward", "from", "here", "NUMBER", "Thanks", "for", "the", "help", "Abe", "Begin", "log", "output", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "platform", "profile_utils", "cpu_utils", "NUMBER", "cc", "NUMBER", "CPU", "Frequency", "NUMBER", "Hz", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "XLA", "service", "NUMBER", "x", "NUMBER", "ca", "NUMBER", "e", "NUMBER", "executing", "computations", "on", "platform", "Host", "NUMBER", "Devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "StreamExecutor", "device", "NUMBER", "TAG", "TAG", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "cuda", "cuda_gpu_executor", "NUMBER", "cc", "NUMBER", "successful", "NUMA", "node", "read", "from", "SysFS", "had", "negative", "value", "NUMBER", "but", "there", "must", "be", "at", "least", "one", "NUMA", "node", "so", "returning", "NUMA", "node", "zero", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "XLA", "service", "NUMBER", "x", "NUMBER", "ca", "NUMBER", "e", "NUMBER", "executing", "computations", "on", "platform", "CUDA", "NUMBER", "Devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "compiler", "xla", "service", "service", "NUMBER", "cc", "NUMBER", "StreamExecutor", "device", "NUMBER", "Tesla", "T", "NUMBER", "Compute", "Capability", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Found", "device", "NUMBER", "with", "properties", "name", "Tesla", "T", "NUMBER", "major", "NUMBER", "minor", "NUMBER", "memoryClockRate", "GHz", "NUMBER", "pciBusID", "NUMBER", "NUMBER", "NUMBER", "totalMemory", "NUMBER", "GiB", "freeMemory", "NUMBER", "GiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Adding", "visible", "gpu", "devices", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Device", "interconnect", "StreamExecutor", "with", "strength", "NUMBER", "edge", "matrix", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "NUMBER", "N", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "W", "tensorflow", "core", "common_runtime", "gpu", "gpu_bfc_allocator", "NUMBER", "cc", "NUMBER", "Overriding", "allow_growth", "setting", "because", "the", "TF_FORCE_GPU_ALLOW_GROWTH", "environment", "variable", "be", "set", "NUMBER", "Original", "config", "value", "was", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "gpu", "gpu_device", "NUMBER", "cc", "NUMBER", "Created", "TensorFlow", "device", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "device", "GPU", "NUMBER", "with", "NUMBER", "MB", "memory", "physical", "GPU", "device", "NUMBER", "name", "Tesla", "T", "NUMBER", "pci", "bus", "id", "NUMBER", "NUMBER", "NUMBER", "compute", "capability", "NUMBER", "Model", "filename", "models", "facenet", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "pb", "WARNING", "tensorflow", "From", "content", "facenet", "src", "facenet", "NUMBER", "py", "NUMBER", "FastGFile", "NUMBER", "__init__", "from", "tensorflow", "NUMBER", "python", "NUMBER", "platform", "NUMBER", "gfile", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Use", "tf", "NUMBER", "gfile", "NUMBER", "GFile", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "stream_executor", "dso_loader", "NUMBER", "cc", "NUMBER", "successfully", "opened", "CUDA", "library", "libcublas", "NUMBER", "so", "NUMBER", "locally", "content", "cleverhans", "cleverhans", "attacks_tf", "NUMBER", "py", "NUMBER", "UserWarning", "attacks_tf", "be", "deprecate", "and", "will", "be", "remove", "on", "NUMBER", "NUMBER", "NUMBER", "or", "after", "NUMBER", "Code", "should", "import", "function", "from", "their", "new", "locations", "directly", "NUMBER", "warnings", "NUMBER", "warn", "attacks_tf", "be", "deprecate", "and", "will", "be", "remove", "on", "NUMBER", "NUMBER", "NUMBER", "content", "cleverhans", "cleverhans", "compat", "NUMBER", "py", "NUMBER", "UserWarning", "TAG", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "This", "function", "was", "originally", "needed", "as", "a", "compatibility", "layer", "for", "old", "version", "of", "tensorflow", "but", "support", "for", "those", "version", "has", "now", "be", "drop", "NUMBER", "warnings", "NUMBER", "warn", "str", "f", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "WARNING", "tensorflow", "From", "content", "cleverhans", "cleverhans", "attacks", "attack", "NUMBER", "py", "NUMBER", "to_float", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "math_ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Use", "tf", "NUMBER", "cast", "instead", "NUMBER", "WARNING", "tensorflow", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "control_flow_ops", "NUMBER", "py", "NUMBER", "colocate_with", "from", "tensorflow", "NUMBER", "python", "NUMBER", "framework", "NUMBER", "ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Colocations", "handle", "automatically", "by", "placer", "NUMBER", "content", "cleverhans", "cleverhans", "compat", "NUMBER", "py", "NUMBER", "UserWarning", "TAG", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "This", "function", "was", "originally", "needed", "as", "a", "compatibility", "layer", "for", "old", "version", "of", "tensorflow", "but", "support", "for", "those", "version", "has", "now", "be", "drop", "NUMBER", "warnings", "NUMBER", "warn", "str", "f", "be", "deprecate", "NUMBER", "Switch", "to", "calling", "the", "equivalent", "function", "in", "tensorflow", "NUMBER", "WARNING", "tensorflow", "From", "content", "cleverhans", "cleverhans", "compat", "NUMBER", "py", "NUMBER", "calling", "softmax_cross_entropy_with_logits_v", "NUMBER", "_helper", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "nn_ops", "with", "dim", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "dim", "be", "deprecate", "use", "axis", "instead", "WARNING", "tensorflow", "From", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "math_ops", "NUMBER", "py", "NUMBER", "to_int", "NUMBER", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "math_ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Use", "tf", "NUMBER", "cast", "instead", "NUMBER", "FGSM", "step", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "W", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Allocator", "GPU_", "NUMBER", "_bfc", "run", "out", "of", "memory", "trying", "to", "allocate", "NUMBER", "GiB", "NUMBER", "Current", "allocation", "summary", "follows", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Bin", "NUMBER", "Total", "Chunks", "NUMBER", "Chunks", "in", "use", "NUMBER", "NUMBER", "KiB", "allocated", "for", "chunks", "NUMBER", "NUMBER", "KiB", "in", "use", "in", "bin", "NUMBER", "NUMBER", "KiB", "client", "request", "in", "use", "in", "bin", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Bin", "NUMBER", "Total", "Chunks", "NUMBER", "Chunks", "in", "use", "NUMBER", "NUMBER", "KiB", "allocated", "for", "chunks", "NUMBER", "NUMBER", "KiB", "in", "use", "in", "bin", "NUMBER", "NUMBER", "KiB", "client", "request", "in", "use", "in", "bin", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Bin", "NUMBER", "Total", "Chunks", "NUMBER", "Chunks", "in", "use", "NUMBER", "NUMBER", "KiB", "allocated", "for", "chunks", "NUMBER", "NUMBER", "KiB", "in", "use", "in", "bin", "NUMBER", "NUMBER", "KiB", "client", "request", "in", "use", "in", "bin", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Bin", "NUMBER", "Total", "Chunks", "NUMBER", "Chunks", "in", "use", "NUMBER", "NUMBER", "KiB", "allocated", "for", "chunks", "NUMBER", "NUMBER", "KiB", "in", "use", "in", "bin", "NUMBER", "NUMBER", "KiB", "client", "request", "in", "use", "in", "bin", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Bin", "NUMBER", "Total", "Chunks", "NUMBER", "Chunks", "in", "use", "NUMBER", "NUMBER", "KiB", "allocated", "for", "chunks", "NUMBER", "NUMBER", "KiB", "in", "use", "in", "bin", "NUMBER", "NUMBER", "KiB", "client", "request", "in", "use", "in", "bin", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Bin", "NUMBER", "Total", "Chunks", "NUMBER", "Chunks", "in", "use", "NUMBER", "NUMBER", "B", "allocated", "for", "chunks", "NUMBER", "NUMBER", "B", "in", "use", "in", "bin", "NUMBER", "NUMBER", "B", "client", "request", "in", "use", "in", "bin", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Bin", "NUMBER", "Total", "Chunks", "NUMBER", "Chunks", "in", "use", "NUMBER", "NUMBER", "KiB", "allocated", "for", "chunks", "NUMBER", "NUMBER", "KiB", "in", "use", "in", "bin", "NUMBER", "NUMBER", "KiB", "client", "request", "in", "use", "in", "bin", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Bin", "NUMBER", "Total", "Chunks", "NUMBER", "Chunks", "in", "use", "NUMBER", "NUMBER", "MiB", "allocated", "for", "chunks", "NUMBER", "NUMBER", "MiB", "in", "use", "in", "bin", "NUMBER", "NUMBER", "MiB", "client", "request", "in", "use", "in", "bin", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Bin", "NUMBER", "Total", "Chunks", "NUMBER", "Chunks", "in", "use", "NUMBER", "NUMBER", "MiB", "allocated", "for", "chunks", "NUMBER", "NUMBER", "MiB", "in", "use", "in", "bin", "NUMBER", "NUMBER", "MiB", "client", "request", "in", "use", "in", "bin", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Bin", "NUMBER", "Total", "Chunks", "NUMBER", "Chunks", "in", "use", "NUMBER", "NUMBER", "KiB", "allocated", "for", "chunks", "NUMBER", "NUMBER", "KiB", "in", "use", "in", "bin", "NUMBER", "NUMBER", "KiB", "client", "request", "in", "use", "in", "bin", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Bin", "NUMBER", "Total", "Chunks", "NUMBER", "Chunks", "in", "use", "NUMBER", "NUMBER", "MiB", "allocated", "for", "chunks", "NUMBER", "NUMBER", "MiB", "in", "use", "in", "bin", "NUMBER", "NUMBER", "MiB", "client", "request", "in", "use", "in", "bin", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Bin", "NUMBER", "Total", "Chunks", "NUMBER", "Chunks", "in", "use", "NUMBER", "NUMBER", "MiB", "allocated", "for", "chunks", "NUMBER", "NUMBER", "MiB", "in", "use", "in", "bin", "NUMBER", "NUMBER", "MiB", "client", "request", "in", "use", "in", "bin", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Bin", "NUMBER", "Total", "Chunks", "NUMBER", "Chunks", "in", "use", "NUMBER", "NUMBER", "MiB", "allocated", "for", "chunks", "NUMBER", "NUMBER", "MiB", "in", "use", "in", "bin", "NUMBER", "NUMBER", "MiB", "client", "request", "in", "use", "in", "bin", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Bin", "NUMBER", "Total", "Chunks", "NUMBER", "Chunks", "in", "use", "NUMBER", "NUMBER", "MiB", "allocated", "for", "chunks", "NUMBER", "NUMBER", "MiB", "in", "use", "in", "bin", "NUMBER", "NUMBER", "MiB", "client", "request", "in", "use", "in", "bin", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Bin", "NUMBER", "Total", "Chunks", "NUMBER", "Chunks", "in", "use", "NUMBER", "NUMBER", "B", "allocated", "for", "chunks", "NUMBER", "NUMBER", "B", "in", "use", "in", "bin", "NUMBER", "NUMBER", "B", "client", "request", "in", "use", "in", "bin", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Bin", "NUMBER", "Total", "Chunks", "NUMBER", "Chunks", "in", "use", "NUMBER", "NUMBER", "B", "allocated", "for", "chunks", "NUMBER", "NUMBER", "B", "in", "use", "in", "bin", "NUMBER", "NUMBER", "B", "client", "request", "in", "use", "in", "bin", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Bin", "NUMBER", "Total", "Chunks", "NUMBER", "Chunks", "in", "use", "NUMBER", "NUMBER", "B", "allocated", "for", "chunks", "NUMBER", "NUMBER", "B", "in", "use", "in", "bin", "NUMBER", "NUMBER", "B", "client", "request", "in", "use", "in", "bin", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Bin", "NUMBER", "Total", "Chunks", "NUMBER", "Chunks", "in", "use", "NUMBER", "NUMBER", "B", "allocated", "for", "chunks", "NUMBER", "NUMBER", "B", "in", "use", "in", "bin", "NUMBER", "NUMBER", "B", "client", "request", "in", "use", "in", "bin", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Bin", "NUMBER", "Total", "Chunks", "NUMBER", "Chunks", "in", "use", "NUMBER", "NUMBER", "B", "allocated", "for", "chunks", "NUMBER", "NUMBER", "B", "in", "use", "in", "bin", "NUMBER", "NUMBER", "B", "client", "request", "in", "use", "in", "bin", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Bin", "NUMBER", "Total", "Chunks", "NUMBER", "Chunks", "in", "use", "NUMBER", "NUMBER", "MiB", "allocated", "for", "chunks", "NUMBER", "NUMBER", "B", "in", "use", "in", "bin", "NUMBER", "NUMBER", "B", "client", "request", "in", "use", "in", "bin", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Bin", "NUMBER", "Total", "Chunks", "NUMBER", "Chunks", "in", "use", "NUMBER", "NUMBER", "GiB", "allocated", "for", "chunks", "NUMBER", "NUMBER", "GiB", "in", "use", "in", "bin", "NUMBER", "NUMBER", "GiB", "client", "request", "in", "use", "in", "bin", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Bin", "for", "NUMBER", "GiB", "was", "NUMBER", "MiB", "Chunk", "State", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Size", "NUMBER", "MiB", "Requested", "Size", "NUMBER", "B", "in_use", "NUMBER", "prev", "Size", "NUMBER", "MiB", "Requested", "Size", "NUMBER", "MiB", "in_use", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Size", "NUMBER", "MiB", "Requested", "Size", "NUMBER", "B", "in_use", "NUMBER", "prev", "Size", "NUMBER", "MiB", "Requested", "Size", "NUMBER", "MiB", "in_use", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Size", "NUMBER", "MiB", "Requested", "Size", "NUMBER", "B", "in_use", "NUMBER", "prev", "Size", "NUMBER", "MiB", "Requested", "Size", "NUMBER", "MiB", "in_use", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Size", "NUMBER", "MiB", "Requested", "Size", "NUMBER", "KiB", "in_use", "NUMBER", "prev", "Size", "NUMBER", "GiB", "Requested", "Size", "NUMBER", "GiB", "in_use", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Size", "NUMBER", "GiB", "Requested", "Size", "NUMBER", "MiB", "in_use", "NUMBER", "prev", "Size", "NUMBER", "MiB", "Requested", "Size", "NUMBER", "MiB", "in_use", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "ab", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "b", "NUMBER", "cf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Free", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "bc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "c", "NUMBER", "db", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Free", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "cbaf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Free", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "d", "NUMBER", "ae", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Free", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "dc", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "dd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Free", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "aa", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ac", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bdac", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bdae", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bdb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bdb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cbb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cbba", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cbbc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cbbe", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "be", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "cc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "cc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ce", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "eed", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "eeda", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "eedc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "eede", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "de", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "fce", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "fcf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "af", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "af", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "af", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "af", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "fa", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "fc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "fe", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "fe", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ba", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ba", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ba", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ba", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "eb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "eb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "eb", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "eb", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "bff", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ce", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ce", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "cea", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ced", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ed", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "fc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ff", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "dbf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "dc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "dc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "dc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "aaea", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "aaea", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "aaeaa", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "aaead", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ac", "NUMBER", "ad", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ac", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ac", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ac", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ad", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ad", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ad", "NUMBER", "bc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ad", "NUMBER", "bf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "adf", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "adf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "adf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "adf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "a", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "a", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "dc", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "de", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "de", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "de", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "de", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Free", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "de", "NUMBER", "ea", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bdb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cba", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cbd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "df", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "df", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "df", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "df", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "db", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "fa", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "fd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "db", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "bc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "be", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "bf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ca", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ce", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "cf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "da", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "db", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "dc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "dd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "de", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "df", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ea", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "eb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ec", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ed", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ee", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ef", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "fa", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "fb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "fc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "fd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "fe", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ff", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "aa", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ab", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ac", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ad", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ae", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "af", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ba", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "bb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "bc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "be", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "bf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "cb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ce", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ce", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "fed", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "feda", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "fedd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "fee", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ea", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "eae", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "eaf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "eb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "eb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ba", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "aca", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "aca", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "aca", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "aca", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "acd", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "acd", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "acd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "acd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "ac", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "afcb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "afcb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "afcb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "afcbc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "abc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ac", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ac", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ace", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ce", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "da", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "eda", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ede", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ee", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ee", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ea", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ee", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "fa", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "fe", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ba", "NUMBER", "fe", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ba", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ba", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ba", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bca", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bca", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bca", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bca", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcaa", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcaa", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcaa", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcaa", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcbb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcbba", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcbbb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcbbc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcc", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcdd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcdd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcdd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcdd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bce", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bce", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bce", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bce", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bced", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bced", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bced", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bced", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcf", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcf", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcf", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcfec", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcfed", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcfee", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bcfef", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "dc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "df", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bda", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bda", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bda", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bda", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bda", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bdaa", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bdc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bdc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bdc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bdc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bdca", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bdca", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bdca", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bdca", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bdd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bdd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bdd", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bdd", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bddbb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bddbc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bddbd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bddbe", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bde", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bde", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bde", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bde", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bded", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bded", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bded", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bded", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bdf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bdf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "be", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "be", "NUMBER", "ea", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "be", "NUMBER", "ec", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "be", "NUMBER", "ee", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "be", "NUMBER", "ee", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "be", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "be", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "be", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "beef", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "beef", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "beef", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "beefa", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bf", "NUMBER", "fa", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bf", "NUMBER", "fc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bf", "NUMBER", "fe", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "bb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "bc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "be", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "da", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "db", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "aee", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "aef", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "af", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "af", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "ea", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "ea", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "fb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "fb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "fb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "fb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "da", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "de", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "fa", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "aa", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "be", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "bf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "bea", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "bec", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "bee", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "bf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "fa", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "fc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "fc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "fe", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ca", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ca", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ca", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ca", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cac", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cac", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cba", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cba", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cba", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cba", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cc", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cc", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cc", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ccf", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ccf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ccf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ccf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ce", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ce", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ce", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ce", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ceb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ceb", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ceb", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ceb", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cf", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cf", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ea", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "eaa", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "eac", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "eae", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ae", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "cb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "cb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "cb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "cba", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ba", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "bc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "be", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ac", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ace", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "ce", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "fd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "fd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "fd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "fda", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "da", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "dc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "de", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "de", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "de", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "de", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "de", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "fa", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "fa", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "fc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "fe", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "b", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "da", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "da", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "da", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "da", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "da", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "da", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "db", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "db", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "db", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "db", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "dbe", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "dbe", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "dbe", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "dbe", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "dc", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "dc", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "dc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "dc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "dcc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "dcc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "dcc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "dcc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "dd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "dd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "de", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "de", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "de", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "de", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "be", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "bf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "df", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "a", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "ba", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "dba", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "dbb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "dc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "dc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "dcd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "dd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "dd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "dd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "dc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "df", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "eb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "eb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "eb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "eb", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ed", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ed", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ed", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ed", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "edf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "edf", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "edf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "edf", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "aa", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ab", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ac", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ad", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ae", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "af", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ba", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "be", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "bf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "c", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ca", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ce", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "cf", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "da", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "db", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "dc", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "dd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "de", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "df", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "eb", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ec", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ed", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ee", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ef", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "f", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "ff", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "b", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "a", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "dd", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Chunk", "at", "NUMBER", "x", "NUMBER", "f", "NUMBER", "e", "NUMBER", "e", "NUMBER", "of", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Summary", "of", "in", "use", "Chunks", "by", "size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "KiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "KiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "KiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "KiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "KiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "KiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "KiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "KiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "KiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "KiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "KiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "MiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "KiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "KiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "KiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "MiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "MiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "KiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "MiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "KiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "MiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "MiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "MiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "MiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "MiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "MiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "MiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "MiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "MiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "MiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "MiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "MiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "MiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "MiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "MiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "GiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "GiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "NUMBER", "Chunks", "of", "size", "NUMBER", "totalling", "NUMBER", "GiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Sum", "Total", "of", "in", "use", "chunks", "NUMBER", "GiB", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "Stats", "Limit", "NUMBER", "InUse", "NUMBER", "MaxInUse", "NUMBER", "NumAllocs", "NUMBER", "MaxAllocSize", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "W", "tensorflow", "core", "common_runtime", "bfc_allocator", "NUMBER", "cc", "NUMBER", "______", "________", "__", "_", "_", "_", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "W", "tensorflow", "core", "framework", "op_kernel", "NUMBER", "cc", "NUMBER", "OP_REQUIRES", "fail", "at", "fused_batch_norm_op", "NUMBER", "cc", "NUMBER", "Resource", "exhausted", "OOM", "when", "allocating", "tensor", "with", "shape", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "and", "type", "float", "on", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "device", "GPU", "NUMBER", "by", "allocator", "GPU_", "NUMBER", "_bfc", "Traceback", "most", "recent", "call", "last", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_do_call", "return", "fn", "args", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_run_fn", "options", "feed_dict", "fetch_list", "target_list", "run_metadata", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_call_tf_sessionrun", "run_metadata", "tensorflow", "NUMBER", "python", "NUMBER", "framework", "NUMBER", "errors_impl", "NUMBER", "ResourceExhaustedError", "OOM", "when", "allocating", "tensor", "with", "shape", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "and", "type", "float", "on", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "device", "GPU", "NUMBER", "by", "allocator", "GPU_", "NUMBER", "_bfc", "node", "InceptionResnetV", "NUMBER", "Conv", "NUMBER", "d_", "NUMBER", "b_", "NUMBER", "x", "NUMBER", "BatchNorm", "cond", "FusedBatchNorm_", "NUMBER", "Hint", "If", "you", "want", "to", "see", "a", "list", "of", "allocated", "tensors", "when", "OOM", "happens", "add", "report_tensor_allocations_upon_oom", "to", "RunOptions", "for", "current", "allocation", "info", "NUMBER", "node", "Identity", "Hint", "If", "you", "want", "to", "see", "a", "list", "of", "allocated", "tensors", "when", "OOM", "happens", "add", "report_tensor_allocations_upon_oom", "to", "RunOptions", "for", "current", "allocation", "info", "NUMBER", "During", "handle", "of", "the", "above", "exception", "another", "exception", "occur", "Traceback", "most", "recent", "call", "last", "File", "facenet_fgsm", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "adv", "sess", "NUMBER", "run", "adv_x", "feed_dict", "feed_dict", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "run", "run_metadata_ptr", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_run", "feed_dict_tensor", "options", "run_metadata", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_do_run", "run_metadata", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_do_call", "raise", "type", "e", "node_def", "op", "message", "tensorflow", "NUMBER", "python", "NUMBER", "framework", "NUMBER", "errors_impl", "NUMBER", "ResourceExhaustedError", "OOM", "when", "allocating", "tensor", "with", "shape", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "and", "type", "float", "on", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "device", "GPU", "NUMBER", "by", "allocator", "GPU_", "NUMBER", "_bfc", "node", "InceptionResnetV", "NUMBER", "Conv", "NUMBER", "d_", "NUMBER", "b_", "NUMBER", "x", "NUMBER", "BatchNorm", "cond", "FusedBatchNorm_", "NUMBER", "defined", "at", "content", "facenet", "src", "facenet", "NUMBER", "py", "NUMBER", "Hint", "If", "you", "want", "to", "see", "a", "list", "of", "allocated", "tensors", "when", "OOM", "happens", "add", "report_tensor_allocations_upon_oom", "to", "RunOptions", "for", "current", "allocation", "info", "NUMBER", "node", "Identity", "defined", "at", "content", "cleverhans", "cleverhans", "attacks", "fast_gradient_method", "NUMBER", "py", "NUMBER", "Hint", "If", "you", "want", "to", "see", "a", "list", "of", "allocated", "tensors", "when", "OOM", "happens", "add", "report_tensor_allocations_upon_oom", "to", "RunOptions", "for", "current", "allocation", "info", "NUMBER", "Caused", "by", "op", "InceptionResnetV", "NUMBER", "Conv", "NUMBER", "d_", "NUMBER", "b_", "NUMBER", "x", "NUMBER", "BatchNorm", "cond", "FusedBatchNorm_", "NUMBER", "defined", "at", "File", "facenet_fgsm", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "model", "InceptionResnetV", "NUMBER", "Model", "File", "facenet_fgsm", "NUMBER", "py", "line", "NUMBER", "in", "__init__", "facenet", "NUMBER", "load_model", "self", "NUMBER", "model_path", "File", "content", "facenet", "src", "facenet", "NUMBER", "py", "line", "NUMBER", "in", "load_model", "tf", "NUMBER", "import_graph_def", "graph_def", "input_map", "input_map", "name", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "util", "deprecation", "NUMBER", "py", "line", "NUMBER", "in", "new_func", "return", "func", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "framework", "importer", "NUMBER", "py", "line", "NUMBER", "in", "import_graph_def", "_ProcessNewOps", "graph", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "framework", "importer", "NUMBER", "py", "line", "NUMBER", "in", "_ProcessNewOps", "for", "new_op", "in", "graph", "NUMBER", "_add_new_tf_operations", "compute_devices", "False", "pylint", "disable", "protected", "access", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "line", "NUMBER", "in", "_add_new_tf_operations", "for", "c_op", "in", "c_api_util", "NUMBER", "new_tf_operations", "self", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "for", "c_op", "in", "c_api_util", "NUMBER", "new_tf_operations", "self", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "line", "NUMBER", "in", "_create_op_from_tf_operation", "ret", "Operation", "c_op", "self", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "line", "NUMBER", "in", "__init__", "self", "NUMBER", "_traceback", "tf_stack", "NUMBER", "extract_stack", "ResourceExhaustedError", "see", "above", "for", "traceback", "OOM", "when", "allocating", "tensor", "with", "shape", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "and", "type", "float", "on", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "device", "GPU", "NUMBER", "by", "allocator", "GPU_", "NUMBER", "_bfc", "node", "InceptionResnetV", "NUMBER", "Conv", "NUMBER", "d_", "NUMBER", "b_", "NUMBER", "x", "NUMBER", "BatchNorm", "cond", "FusedBatchNorm_", "NUMBER", "defined", "at", "content", "facenet", "src", "facenet", "NUMBER", "py", "NUMBER", "Hint", "If", "you", "want", "to", "see", "a", "list", "of", "allocated", "tensors", "when", "OOM", "happens", "add", "report_tensor_allocations_upon_oom", "to", "RunOptions", "for", "current", "allocation", "info", "NUMBER", "node", "Identity", "defined", "at", "content", "cleverhans", "cleverhans", "attacks", "fast_gradient_method", "NUMBER", "py", "NUMBER", "Hint", "If", "you", "want", "to", "see", "a", "list", "of", "allocated", "tensors", "when", "OOM", "happens", "add", "report_tensor_allocations_upon_oom", "to", "RunOptions", "for", "current", "allocation", "info", "NUMBER", "End", "Log", "Output", "I", "have", "Ok", "get", "farther", "NUMBER", "Realized", "that", "I", "was", "get", "out", "of", "memory", "error", "because", "the", "input", "dimensions", "from", "the", "model", "had", "increase", "from", "NUMBER", "to", "NUMBER", "so", "I", "reduced", "the", "testset", "size", "NUMBER", "facenet_fgsm", "NUMBER", "py", "self", "NUMBER", "victim_embedding_input", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "CHANGED", "HERE", "some", "models", "have", "NUMBER", "others", "have", "NUMBER", "shape", "None", "NUMBER", "NUMBER", "with", "tf", "NUMBER", "Graph", "NUMBER", "as_default", "with", "tf", "NUMBER", "Session", "as", "sess", "Load", "model", "model", "InceptionResnetV", "NUMBER", "Model", "Convert", "to", "classifier", "model", "NUMBER", "convert_to_classifier", "Load", "pairs", "of", "faces", "and", "their", "labels", "in", "one", "hot", "encoding", "CHANGED", "HERE", "reduced", "size", "of", "testset", "because", "of", "OOM", "error", "NUMBER", "to", "NUMBER", "faces", "NUMBER", "faces", "NUMBER", "labels", "set_loader", "NUMBER", "load_testset", "NUMBER", "I", "tried", "change", "batch_size", "and", "emb_dim", "but", "those", "did", "not", "work", "NUMBER", "I", "have", "be", "looking", "at", "torch", "NUMBER", "cuda", "NUMBER", "empty_cache", "and", "its", "equivalents", "but", "I", "don", "t", "know", "where", "to", "add", "it", "NUMBER", "Finally", "what", "I", "was", "hoping", "to", "get", "was", "the", "perturbed", "images", "from", "the", "lfw", "dataset", "NUMBER", "I", "be", "assuming", "that", "the", "facenet_fgsm", "NUMBER", "py", "generate", "these", "file", "but", "I", "don", "t", "see", "them", "on", "the", "file", "system", "NUMBER", "Also", "the", "outputs", "from", "run", "different", "times", "with", "different", "settings", "don", "t", "seem", "to", "make", "sense", "Testset", "size", "NUMBER", "Batch", "size", "NUMBER", "FGSM", "step", "NUMBER", "Accuracy", "NUMBER", "Accuracy", "against", "adversarial", "examples", "for", "same", "person", "faces", "dodging", "NUMBER", "Accuracy", "against", "adversarial", "examples", "for", "different", "people", "faces", "impersonation", "NUMBER", "Batch", "size", "NUMBER", "first", "run", "FGSM", "step", "NUMBER", "Accuracy", "NUMBER", "Accuracy", "against", "adversarial", "examples", "for", "same", "person", "faces", "dodging", "NUMBER", "Accuracy", "against", "adversarial", "examples", "for", "different", "people", "faces", "impersonation", "NUMBER", "Batch", "size", "NUMBER", "second", "run", "FGSM", "step", "NUMBER", "Accuracy", "NUMBER", "Accuracy", "against", "adversarial", "examples", "for", "same", "person", "faces", "dodging", "NUMBER", "Accuracy", "against", "adversarial", "examples", "for", "different", "people", "faces", "impersonation", "NUMBER", "Testset", "size", "NUMBER", "batch", "size", "NUMBER", "Use", "tf", "NUMBER", "cast", "instead", "NUMBER", "FGSM", "step", "NUMBER", "Accuracy", "NUMBER", "Accuracy", "against", "adversarial", "examples", "for", "same", "person", "faces", "dodging", "NUMBER", "Accuracy", "against", "adversarial", "examples", "for", "different", "people", "faces", "impersonation", "NUMBER", "Testset", "size", "NUMBER", "batch", "size", "NUMBER", "second", "run", "FGSM", "step", "NUMBER", "Accuracy", "NUMBER", "Accuracy", "against", "adversarial", "examples", "for", "same", "person", "faces", "dodging", "NUMBER", "Accuracy", "against", "adversarial", "examples", "for", "different", "people", "faces", "impersonation", "NUMBER", "Got", "warning", "no", "error", "Batch", "size", "NUMBER", "first", "run", "FGSM", "step", "NUMBER", "Accuracy", "NUMBER", "Accuracy", "against", "adversarial", "examples", "for", "same", "person", "faces", "dodging", "NUMBER", "Accuracy", "against", "adversarial", "examples", "for", "different", "people", "faces", "impersonation", "NUMBER", "Batch", "size", "NUMBER", "second", "run", "FGSM", "step", "NUMBER", "Accuracy", "NUMBER", "Accuracy", "against", "adversarial", "examples", "for", "same", "person", "faces", "dodging", "NUMBER", "Accuracy", "against", "adversarial", "examples", "for", "different", "people", "faces", "impersonation", "NUMBER", "Got", "memory", "limit", "warning", "NUMBER", "FGSM", "step", "NUMBER", "Accuracy", "NUMBER", "Accuracy", "against", "adversarial", "examples", "for", "same", "person", "faces", "dodging", "NUMBER", "Accuracy", "against", "adversarial", "examples", "for", "different", "people", "faces", "impersonation", "NUMBER", "NUMBER", "Out", "of", "memory", "error", "but", "get", "result", "Accuracy", "NUMBER", "Accuracy", "against", "adversarial", "examples", "for", "same", "person", "faces", "dodging", "NUMBER", "Accuracy", "against", "adversarial", "examples", "for", "different", "people", "faces", "impersonation", "NUMBER", "I", "be", "totally", "off", "here", "Thanks", "Abe", "Hi", "Nicolas", "Thanks", "for", "checking", "in", "on", "this", "NUMBER", "Got", "things", "work", "NUMBER", "Not", "all", "the", "pictures", "were", "aligned", "but", "I", "don", "t", "know", "if", "that", "be", "expected", "NUMBER", "Here", "be", "the", "location", "of", "the", "two", "notebooks", "NUMBER", "LINK", "One", "be", "associated", "with", "setting", "up", "and", "run", "FaceNet", "and", "the", "other", "for", "setting", "up", "and", "run", "the", "CleverHans", "FGSM", "on", "FaceNet", "example", "NUMBER", "There", "were", "file", "in", "both", "Cleverhans", "and", "Facenet", "that", "needed", "to", "change", "to", "get", "the", "demos", "work", "NUMBER", "I", "include", "them", "in", "the", "notebooks", "as", "well", "and", "how", "to", "change", "them", "NUMBER", "Look", "for", "CHANGE", "HERE", "NUMBER", "Finally", "I", "was", "wondering", "what", "be", "the", "best", "way", "to", "update", "the", "Cleverhans", "documentation", "to", "account", "for", "the", "change", "NUMBER", "Regards", "Abe", "On", "Mon", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Nicolas", "Papernot", "TAG", "write", "Could", "you", "state", "what", "your", "problem", "be", "now", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Will", "do", "NUMBER", "Thanks", "Again", "Nicholas", "NUMBER", "Glad", "you", "be", "one", "of", "the", "outstanding", "people", "work", "on", "Cleverhans", "NUMBER", "Regards", "Abe", "On", "Tue", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Nicolas", "Papernot", "TAG", "write", "Great", "to", "hear", "that", "things", "be", "now", "work", "NUMBER", "If", "you", "find", "that", "the", "attacks", "be", "not", "evading", "the", "model", "as", "often", "as", "you", "would", "expect", "you", "might", "want", "to", "switch", "to", "an", "iterative", "attack", "e", "NUMBER", "g", "NUMBER", "PGD", "NUMBER", "Unfortunately", "I", "won", "t", "have", "time", "to", "look", "at", "your", "notebooks", "but", "you", "can", "definitely", "open", "PRs", "to", "make", "change", "to", "CleverHans", "documentation", "and", "code", "NUMBER", "Thanks", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "This", "one", "be", "on", "me", "to", "review", "it", "s", "code", "from", "the", "prior", "project", "NUMBER", "Yao", "can", "you", "rebase", "off", "master", "It", "should", "be", "good", "to", "merge", "after", "that", "NUMBER", "Closing", "this", "merge", "NUMBER", "instead", "NUMBER", "I", "want", "to", "generate", "adversarial", "examples", "with", "C", "WL", "NUMBER", "on", "the", "inceptionv", "NUMBER", "but", "it", "appeers", "the", "error", "as", "follows", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Constructing", "new", "graph", "for", "attack", "CarliniWagnerL", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "cw", "cw_inceptionv", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "tf", "NUMBER", "app", "NUMBER", "run", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "platform", "app", "NUMBER", "py", "line", "NUMBER", "in", "run", "_sys", "NUMBER", "exit", "main", "argv", "File", "cw", "cw_inceptionv", "NUMBER", "py", "line", "NUMBER", "in", "main", "x_adv", "cwl", "NUMBER", "generate_np", "x_input", "cw_params", "File", "home", "ra", "cleverhans", "cleverhans", "attacks", "attack", "NUMBER", "py", "line", "NUMBER", "in", "generate_np", "self", "NUMBER", "construct_graph", "fix", "feedable", "x_val", "hash_key", "File", "home", "ra", "cleverhans", "cleverhans", "attacks", "attack", "NUMBER", "py", "line", "NUMBER", "in", "construct_graph", "x_adv", "self", "NUMBER", "generate", "x", "new_kwargs", "File", "home", "ra", "cleverhans", "cleverhans", "attacks", "carlini_wagner_l", "NUMBER", "py", "line", "NUMBER", "in", "generate", "labels", "nb_classes", "self", "NUMBER", "get_or_guess_labels", "x", "kwargs", "File", "home", "ra", "cleverhans", "cleverhans", "attacks", "attack", "NUMBER", "py", "line", "NUMBER", "in", "get_or_guess_labels", "preds", "self", "NUMBER", "model", "NUMBER", "get_probs", "x", "File", "home", "ra", "cleverhans", "cleverhans", "model", "NUMBER", "py", "line", "NUMBER", "in", "get_probs", "d", "self", "NUMBER", "fprop", "x", "kwargs", "File", "home", "ra", "cleverhans", "cleverhans", "model", "NUMBER", "py", "line", "NUMBER", "in", "fprop", "raise", "NotImplementedError", "fprop", "not", "implement", "NUMBER", "NotImplementedError", "fprop", "not", "implement", "NUMBER", "and", "the", "the", "executable", "file", "be", "as", "follows", "My", "change", "full", "source", "code", "NUMBER", "from", "__future__", "import", "absolute_import", "from", "__future__", "import", "division", "from", "__future__", "import", "print_function", "import", "os", "import", "warnings", "warnings", "NUMBER", "filterwarnings", "ignore", "import", "sys", "sys", "NUMBER", "path", "NUMBER", "append", "home", "ra", "cleverhans", "from", "io", "import", "BytesIO", "import", "numpy", "as", "np", "import", "tensorflow", "as", "tf", "from", "tensorflow", "NUMBER", "contrib", "NUMBER", "slim", "NUMBER", "nets", "import", "inception", "from", "PIL", "import", "Image", "from", "scipy", "NUMBER", "misc", "import", "imsave", "imread", "from", "cleverhans", "NUMBER", "model", "import", "Model", "from", "cleverhans", "NUMBER", "attacks", "import", "CarliniWagnerL", "NUMBER", "slim", "tf", "NUMBER", "contrib", "NUMBER", "slim", "def", "load_images", "input_dir", "batch_shape", "Read", "png", "images", "from", "input", "directory", "in", "batches", "NUMBER", "Args", "input_dir", "input", "directory", "batch_shape", "shape", "of", "minibatch", "array", "i", "NUMBER", "e", "NUMBER", "batch_size", "height", "width", "NUMBER", "Yields", "filenames", "list", "file", "names", "without", "path", "of", "each", "image", "Lenght", "of", "this", "list", "could", "be", "less", "than", "batch_size", "in", "this", "case", "only", "first", "few", "images", "of", "the", "result", "be", "elements", "of", "the", "minibatch", "NUMBER", "images", "array", "with", "all", "images", "from", "this", "batch", "images", "np", "NUMBER", "zeros", "batch_shape", "filenames", "idx", "NUMBER", "batch_size", "batch_shape", "NUMBER", "for", "filepath", "in", "tf", "NUMBER", "gfile", "NUMBER", "Glob", "os", "NUMBER", "path", "NUMBER", "join", "input_dir", "NUMBER", "png", "print", "filepath", "change", "open", "method", "NUMBER", "This", "change", "has", "no", "impact", "for", "code", "with", "open", "filepath", "rb", "as", "f", "image", "np", "NUMBER", "array", "Image", "NUMBER", "open", "f", "NUMBER", "convert", "RGB", "NUMBER", "astype", "np", "NUMBER", "float", "NUMBER", "Images", "for", "inception", "classifier", "be", "normalized", "to", "be", "in", "NUMBER", "NUMBER", "interval", "NUMBER", "images", "idx", "image", "NUMBER", "NUMBER", "filenames", "NUMBER", "append", "os", "NUMBER", "path", "NUMBER", "basename", "filepath", "idx", "NUMBER", "if", "idx", "batch_size", "yield", "filenames", "images", "filenames", "images", "np", "NUMBER", "zeros", "batch_shape", "idx", "NUMBER", "if", "idx", "NUMBER", "yield", "filenames", "images", "def", "save_images", "images", "filenames", "output_dir", "Saves", "images", "to", "the", "output", "directory", "NUMBER", "Args", "images", "array", "with", "minibatch", "of", "images", "filenames", "list", "of", "filenames", "without", "path", "If", "number", "of", "file", "names", "in", "this", "list", "less", "than", "number", "of", "images", "in", "the", "minibatch", "then", "only", "first", "len", "filenames", "images", "will", "be", "saved", "NUMBER", "output_dir", "directory", "where", "to", "save", "images", "for", "i", "filename", "in", "enumerate", "filenames", "Images", "for", "inception", "classifier", "be", "normalized", "to", "be", "in", "NUMBER", "NUMBER", "interval", "so", "rescale", "them", "back", "to", "NUMBER", "NUMBER", "NUMBER", "with", "tf", "NUMBER", "gfile", "NUMBER", "Open", "os", "NUMBER", "path", "NUMBER", "join", "output_dir", "filename", "w", "as", "f", "img", "images", "i", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "astype", "np", "NUMBER", "uint", "NUMBER", "Image", "NUMBER", "fromarray", "img", "NUMBER", "save", "f", "format", "PNG", "change", "Model", "from", "object", "class", "InceptionModel", "Model", "Model", "class", "for", "CleverHans", "library", "NUMBER", "def", "__init__", "self", "nb_classes", "super", "InceptionModel", "self", "NUMBER", "__init__", "nb_classes", "nb_classes", "needs_dummy_fprop", "True", "self", "NUMBER", "build", "False", "def", "__call__", "self", "x_input", "return_logits", "False", "Constructs", "model", "and", "return", "probabilities", "for", "given", "input", "NUMBER", "reuse", "True", "if", "self", "NUMBER", "build", "else", "None", "with", "slim", "NUMBER", "arg_scope", "inception", "NUMBER", "inception_v", "NUMBER", "_arg_scope", "Inception", "preprocessing", "uses", "NUMBER", "NUMBER", "scaled", "input", "NUMBER", "x_input", "x_input", "NUMBER", "NUMBER", "_", "end_points", "inception", "NUMBER", "inception_v", "NUMBER", "x_input", "num_classes", "self", "NUMBER", "nb_classes", "is_training", "False", "reuse", "reuse", "self", "NUMBER", "build", "True", "self", "NUMBER", "logits", "end_points", "Logits", "Strip", "off", "the", "extra", "reshape", "op", "at", "the", "output", "self", "NUMBER", "probs", "end_points", "Predictions", "NUMBER", "op", "NUMBER", "inputs", "NUMBER", "if", "return_logits", "return", "self", "NUMBER", "logits", "else", "return", "self", "NUMBER", "probs", "def", "get_logits", "self", "x_input", "return", "self", "x_input", "return_logits", "True", "def", "get_probs", "self", "x_input", "return", "self", "x_input", "def", "main", "_", "Run", "the", "sample", "attack", "Images", "for", "inception", "classifier", "be", "normalized", "to", "be", "in", "NUMBER", "NUMBER", "interval", "eps", "be", "a", "difference", "between", "pixels", "so", "it", "should", "be", "in", "NUMBER", "NUMBER", "interval", "NUMBER", "Renormalizing", "epsilon", "from", "NUMBER", "NUMBER", "to", "NUMBER", "NUMBER", "NUMBER", "tensorflow_master", "checkpoint_path", "home", "ra", "cleverhans", "cw", "inception_v", "NUMBER", "ckpt", "input_dir", "home", "ra", "cleverhans", "cw", "tmp", "output_dir", "home", "ra", "cleverhans", "cw", "image_width", "NUMBER", "image_height", "NUMBER", "batch_size", "NUMBER", "nb_classes", "NUMBER", "cw_params", "batch_size", "NUMBER", "confidence", "NUMBER", "learning_rate", "NUMBER", "binary_search_steps", "NUMBER", "max_iterations", "NUMBER", "abort_early", "True", "initial_const", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "batch_shape", "batch_size", "image_height", "image_width", "NUMBER", "tf", "NUMBER", "logging", "NUMBER", "set_verbosity", "tf", "NUMBER", "logging", "NUMBER", "INFO", "with", "tf", "NUMBER", "Graph", "NUMBER", "as_default", "Prepare", "graph", "x_input", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "shape", "batch_shape", "model", "InceptionModel", "nb_classes", "ses", "tf", "NUMBER", "Session", "cwl", "NUMBER", "CarliniWagnerL", "NUMBER", "model", "ses", "x_adv", "cwl", "NUMBER", "generate_np", "x_input", "cw_params", "sess", "NUMBER", "run", "tf", "NUMBER", "global_variables_initializer", "save_images", "x_adv", "filenames", "output_dir", "Run", "computation", "saver", "tf", "NUMBER", "train", "NUMBER", "Saver", "slim", "NUMBER", "get_model_variables", "adv_images", "sess", "NUMBER", "run", "x_adv", "feed_dict", "x_input", "images", "save_images", "adv_images", "filenames", "output_dir", "session_creator", "tf", "NUMBER", "train", "NUMBER", "ChiefSessionCreator", "scaffold", "tf", "NUMBER", "train", "NUMBER", "Scaffold", "saver", "saver", "checkpoint_filename_with_path", "checkpoint_path", "master", "tensorflow_master", "with", "tf", "NUMBER", "train", "NUMBER", "MonitoredSession", "session_creator", "session_creator", "as", "sess", "for", "filenames", "images", "in", "load_images", "input_dir", "batch_shape", "adv_images", "sess", "NUMBER", "run", "x_adv", "feed_dict", "x_input", "images", "save_images", "adv_images", "filenames", "output_dir", "if", "__name__", "__main__", "tf", "NUMBER", "app", "NUMBER", "run", "The", "error", "specifies", "that", "your", "model", "object", "be", "miss", "an", "fprop", "method", "which", "probably", "explains", "why", "the", "code", "be", "fail", "NUMBER", "To", "see", "an", "example", "of", "an", "implementation", "of", "a", "model", "class", "see", "LINK", "_zoo", "all_convolutional", "NUMBER", "py", "L", "NUMBER", "Thank", "you", "very", "much", "I", "have", "solve", "it", "NUMBER", "What", "s", "going", "wrong", "with", "this", "code", "I", "have", "generate", "adversarial", "images", "use", "cleverhans", "API", "generate_np", "method", "NUMBER", "And", "use", "the", "default", "cleverhans", "CNN", "classifier", "to", "classify", "the", "images", "NUMBER", "The", "test", "accuracy", "be", "very", "low", "for", "adversarial", "images", "as", "expected", "when", "I", "use", "the", "model", "after", "generating", "the", "images", "NUMBER", "But", "if", "I", "save", "and", "reload", "the", "model", "the", "accuracy", "be", "too", "high", "NUMBER", "Please", "check", "the", "code", "here", "NUMBER", "Is", "it", "really", "work", "LINK", "_Defense", "blob", "master", "Cleverhans_generatenp", "NUMBER", "ipynb", "Python", "NUMBER", "Thanks", "Nicolas", "NUMBER", "Updated", "the", "code", "NUMBER", "Works", "fine", "now", "NUMBER", "Hi", "Csesivakumar", "I", "had", "the", "same", "issue", "as", "you", "NUMBER", "Can", "you", "tell", "me", "how", "did", "you", "fix", "the", "issue", "Thanks", "Check", "out", "my", "update", "code", "here", "NUMBER", "As", "Nicolas", "said", "should", "not", "initialize", "the", "model", "weight", "after", "having", "trained", "the", "classification", "model", "NUMBER", "it", "will", "assign", "random", "weights", "for", "the", "model", "and", "FGSM", "will", "not", "generate", "proper", "adversarial", "images", "based", "on", "that", "model", "NUMBER", "LINK", "_Defense", "blob", "master", "Cleverhans_generatenp", "NUMBER", "ipynb", "OK", "Thank", "you", "very", "much", "Describe", "the", "bug", "When", "run", "mnist_blackbox", "NUMBER", "py", "problem", "occur", "while", "training", "substitue", "model", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "cea", "NUMBER", "NUMBER", "af", "NUMBER", "e", "NUMBER", "NUMBER", "bc", "NUMBER", "e", "NUMBER", "f", "NUMBER", "ed", "NUMBER", "da", "NUMBER", "png", "I", "realized", "that", "after", "epoch", "NUMBER", "the", "training", "log", "INFO", "didn", "t", "show", "up", "NUMBER", "So", "I", "made", "a", "small", "change", "in", "cleverhans", "train", "NUMBER", "py", "below", "picture", "to", "catch", "exception", "and", "get", "above", "result", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "e", "NUMBER", "f", "NUMBER", "NUMBER", "af", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "b", "NUMBER", "bdc", "NUMBER", "png", "I", "can", "t", "even", "tell", "this", "be", "a", "normal", "behavior", "or", "not", "NUMBER", "please", "someone", "tell", "me", "how", "to", "handle", "this", "issue", "npapernot", "Please", "merge", "the", "change", "on", "the", "previous", "Boundary", "Attack", "resulting", "from", "change", "and", "improvement", "in", "the", "preprint", "NUMBER", "The", "change", "in", "the", "code", "be", "NUMBER", "Following", "suggestions", "from", "my", "collaborators", "we", "decided", "to", "change", "the", "name", "of", "Boundary", "Attack", "to", "HopSkipJumpAttack", "NUMBER", "NUMBER", "A", "new", "author", "Martin", "J", "NUMBER", "Wainwright", "be", "add", "to", "the", "paper", "NUMBER", "NUMBER", "Update", "the", "choice", "of", "stepsize", "based", "on", "a", "newly", "established", "theorem", "NUMBER", "NUMBER", "Change", "default", "stepsize", "search", "to", "geometric", "progression", "NUMBER", "I", "have", "add", "a", "new", "function", "named", "as", "BoundaryAttackPlusPlus", "calling", "the", "class", "HopSkipJumpAttack", "with", "an", "extra", "warning", "NUMBER", "Does", "it", "meet", "the", "requirements", "So", "there", "s", "good", "news", "and", "bad", "news", "NUMBER", "thumbsup", "The", "good", "news", "be", "that", "everyone", "that", "needs", "to", "sign", "a", "CLA", "the", "pull", "request", "submitter", "and", "all", "commit", "authors", "have", "do", "so", "NUMBER", "Everything", "be", "all", "good", "there", "NUMBER", "confused", "The", "bad", "news", "be", "that", "it", "appears", "that", "one", "or", "more", "commit", "were", "authored", "or", "co", "authored", "by", "someone", "other", "than", "the", "pull", "request", "submitter", "NUMBER", "We", "need", "to", "confirm", "that", "all", "authors", "be", "ok", "with", "their", "commit", "be", "contributed", "to", "this", "project", "NUMBER", "Please", "have", "them", "confirm", "that", "here", "in", "the", "pull", "request", "NUMBER", "Note", "to", "project", "maintainer", "This", "be", "a", "terminal", "state", "meaning", "the", "cla", "google", "commit", "status", "will", "not", "change", "from", "this", "state", "NUMBER", "It", "s", "up", "to", "you", "to", "confirm", "consent", "of", "all", "the", "commit", "author", "s", "set", "the", "cla", "label", "to", "yes", "if", "enable", "on", "your", "project", "and", "then", "merge", "this", "pull", "request", "when", "appropriate", "NUMBER", "\u2139", "Googlers", "Go", "here", "LINK", "NUMBER", "A", "NUMBER", "F", "NUMBER", "Fgithub", "NUMBER", "com", "NUMBER", "Ftensorflow", "NUMBER", "Fcleverhans", "NUMBER", "Fpull", "NUMBER", "F", "NUMBER", "for", "more", "info", "NUMBER", "TAG", "Describe", "the", "bug", "If", "I", "use", "larger", "networks", "like", "Inception", "with", "multiple", "GPU", "s", "cleverhans", "train", "NUMBER", "py", "s", "avg_grads", "function", "might", "get", "a", "grads", "None", "None", "None", "None", "NUMBER", "NUMBER", "This", "be", "probably", "due", "to", "some", "of", "the", "larger", "networks", "having", "extra", "variables", "that", "be", "not", "directly", "useful", "for", "training", "NUMBER", "A", "quick", "fix", "be", "probably", "just", "write", "in", "an", "if", "statement", "to", "check", "if", "it", "has", "None", "s", "or", "the", "right", "shapes", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Use", "an", "inception", "model", "for", "I", "use", "a", "internal", "model", "for", "google", "but", "I", "believe", "a", "similar", "model", "exists", "publicly", "in", "the", "tensorflow", "repo", "NUMBER", "NUMBER", "Use", "LINK", "_tutorials", "mnist_tutorial_tf", "NUMBER", "py", "and", "replace", "the", "network", "with", "Inception", "NUMBER", "Expected", "behavior", "The", "error", "from", "use", "tf", "NUMBER", "add_n", "on", "a", "list", "of", "None", "s", "will", "be", "ValueError", "inputs", "must", "be", "a", "list", "of", "at", "least", "one", "Tensor", "IndexedSlices", "with", "the", "same", "dtype", "and", "shape", "NUMBER", "System", "configuration", "OS", "Linux", "Python", "version", "NUMBER", "TensorFlow", "version", "NUMBER", "x", "latest", "We", "find", "a", "Contributor", "License", "Agreement", "for", "you", "the", "sender", "of", "this", "pull", "request", "but", "were", "unable", "to", "find", "agreements", "for", "all", "the", "commit", "author", "s", "or", "Co", "authors", "NUMBER", "If", "you", "authored", "these", "maybe", "you", "use", "a", "different", "email", "address", "in", "the", "git", "commit", "than", "was", "use", "to", "sign", "the", "CLA", "login", "here", "LINK", "to", "double", "check", "If", "these", "were", "authored", "by", "someone", "else", "then", "they", "will", "need", "to", "sign", "a", "CLA", "as", "well", "and", "confirm", "that", "they", "re", "okay", "with", "these", "be", "contributed", "to", "Google", "NUMBER", "In", "order", "to", "pass", "this", "check", "please", "resolve", "this", "problem", "and", "have", "the", "pull", "request", "author", "add", "another", "comment", "and", "the", "bot", "will", "run", "again", "NUMBER", "If", "the", "bot", "doesn", "t", "comment", "it", "means", "it", "doesn", "t", "think", "anything", "has", "change", "NUMBER", "\u2139", "Googlers", "Go", "here", "LINK", "NUMBER", "A", "NUMBER", "F", "NUMBER", "Fgithub", "NUMBER", "com", "NUMBER", "Ftensorflow", "NUMBER", "Fcleverhans", "NUMBER", "Fpull", "NUMBER", "F", "NUMBER", "for", "more", "info", "NUMBER", "TAG", "npapernot", "can", "you", "please", "check", "it", "once", "I", "have", "test", "it", "in", "my", "local", "and", "the", "attack", "works", "flawlessly", "NUMBER", "Although", "it", "doesn", "t", "yet", "work", "for", "batches", "of", "images", "NUMBER", "The", "authors", "point", "out", "to", "me", "in", "private", "correspondence", "that", "their", "own", "implementation", "be", "in", "PyTorch", "which", "I", "did", "not", "know", "NUMBER", "It", "makes", "sense", "to", "at", "least", "compare", "how", "the", "attacks", "perform", "on", "one", "or", "two", "datasets", "and", "perhaps", "to", "even", "follow", "their", "original", "implementation", "with", "the", "appropriate", "credit", "in", "the", "docstring", "Hi", "I", "be", "aware", "that", "the", "original", "implementation", "of", "DeepFool", "be", "in", "PyTorch", "and", "in", "Matlab", "NUMBER", "I", "have", "referred", "to", "their", "implementation", "have", "checked", "that", "everything", "be", "according", "NUMBER", "About", "run", "on", "NUMBER", "datasets", "NUMBER", "I", "have", "checked", "it", "on", "MNIST", "it", "gets", "an", "accuracy", "of", "NUMBER", "on", "the", "test", "set", "of", "MNIST", "NUMBER", "I", "will", "check", "it", "on", "ILSVRC", "NUMBER", "else", "CIFAR", "NUMBER", "if", "Colab", "takes", "too", "much", "time", "and", "let", "you", "know", "NUMBER", "Also", "the", "original", "implementation", "be", "not", "vectorized", "it", "can", "t", "take", "batches", "of", "images", "NUMBER", "For", "MNIST", "on", "Lenet", "it", "takes", "NUMBER", "hours", "on", "Colab", "NUMBER", "I", "have", "vectorized", "the", "entire", "implementation", "here", "LINK", "You", "may", "check", "it", "out", "NUMBER", "With", "the", "vectorized", "implementation", "it", "takes", "about", "NUMBER", "NUMBER", "mins", "NUMBER", "Also", "I", "will", "go", "through", "your", "entire", "review", "and", "make", "relevant", "update", "accordingly", "as", "soon", "as", "possible", "NUMBER", "P", "NUMBER", "S", "NUMBER", "I", "have", "contacted", "Seyed", "myself", "and", "let", "him", "know", "about", "my", "implementation", "but", "haven", "t", "received", "feedback", "yet", "NUMBER", "Oh", "my", "I", "be", "really", "sorry", "for", "the", "delay", "I", "be", "caught", "up", "with", "a", "few", "projects", "NUMBER", "I", "will", "try", "to", "get", "this", "to", "shape", "as", "soon", "as", "possible", "NUMBER", "Thanks", "for", "understanding", "NUMBER", "Describe", "the", "bug", "In", "PGD", "LINK", "_gradient_descent", "NUMBER", "py", "line", "NUMBER", "adv_x", "x", "eta", "which", "initialize", "adv_x", "with", "a", "random", "perturbation", "NUMBER", "I", "figured", "out", "the", "gradient", "of", "adv_x", "cannot", "be", "computed", "based", "on", "this", "line", "of", "code", "here", "be", "a", "check", "tf", "NUMBER", "gradients", "self", "NUMBER", "model", "NUMBER", "get_logits", "adv_x", "adv_x", "It", "will", "generate", "gradient", "NONE", "NUMBER", "What", "I", "trying", "to", "show", "here", "be", "to", "explain", "adv_x", "x", "eta", "will", "lead", "an", "error", "in", "the", "later", "function", "FGM", "NUMBER", "generate", "adv_x", "fgm_params", "where", "the", "author", "computes", "the", "gradient", "use", "this", "function", "tf", "NUMBER", "gradients", "loss", "adv_x", "NUMBER", "However", "because", "loss", "be", "a", "function", "of", "x", "not", "adv_x", "it", "will", "lead", "to", "NONE", "as", "the", "computed", "gradient", "and", "cause", "error", "later", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Set", "a", "break", "point", "after", "the", "line", "adv_x", "x", "eta", "NUMBER", "Run", "tf", "NUMBER", "gradients", "self", "NUMBER", "model", "NUMBER", "get_logits", "adv_x", "adv_x", "NUMBER", "Return", "None", "To", "Reproduce", "even", "simpler", "NUMBER", "Run", "tf", "NUMBER", "gradients", "x", "NUMBER", "x", "NUMBER", "NUMBER", "Return", "None", "Expected", "behavior", "The", "gradient", "should", "not", "be", "None", "otherwise", "FGM", "will", "fail", "later", "NUMBER", "System", "configuration", "OS", "Linux", "Redhat", "Python", "version", "NUMBER", "TensorFlow", "version", "NUMBER", "I", "don", "t", "think", "you", "can", "take", "gradients", "with", "respect", "to", "operations", "adv_x", "or", "x", "NUMBER", "in", "your", "simpler", "example", "represent", "operations", "on", "tensors", "NUMBER", "Taking", "the", "gradients", "with", "respect", "to", "the", "original", "variable", "x", "works", "though", "NUMBER", "Hi", "ftramer", "Thanks", "for", "the", "reply", "NUMBER", "It", "exactly", "what", "I", "thought", "it", "would", "be", "NUMBER", "tf", "NUMBER", "gradients", "self", "NUMBER", "model", "NUMBER", "get_logits", "adv_x", "adv_x", "not", "work", "tf", "NUMBER", "gradients", "self", "NUMBER", "model", "NUMBER", "get_logits", "adv_x", "x", "works", "but", "unfortunately", "the", "author", "sent", "adv_x", "to", "the", "function", "FGM", "NUMBER", "generate", "adv_x", "fgm_params", "which", "will", "later", "compute", "tf", "NUMBER", "gradients", "loss", "adv_x", "but", "loss", "be", "a", "function", "of", "x", "not", "adv_x", "NUMBER", "So", "the", "code", "do", "not", "go", "through", "NUMBER", "This", "works", "because", "of", "the", "semantics", "of", "tf", "NUMBER", "while_loop", "NUMBER", "In", "each", "loop", "iteration", "you", "re", "computing", "gradients", "with", "respect", "to", "the", "previous", "iteration", "of", "the", "variable", "x_adv", "NUMBER", "Do", "you", "actually", "get", "an", "error", "when", "you", "run", "the", "full", "PGD", "attack", "All", "the", "test", "pass", "on", "my", "side", "NUMBER", "Yes", "here", "be", "something", "I", "m", "run", "pgd", "ProjectedGradientDescent", "model", "pgd_params", "clip_min", "NUMBER", "clip_max", "NUMBER", "adv_x", "pgd", "NUMBER", "generate", "model", "NUMBER", "input", "pgd_params", "And", "it", "report", "an", "error", "NUMBER", "It", "seems", "just", "a", "standard", "way", "to", "initialize", "the", "attack", "NUMBER", "I", "be", "not", "fully", "convinced", "by", "tf", "NUMBER", "while_loop", "will", "make", "it", "works", "NUMBER", "In", "the", "first", "iteration", "gradient", "of", "loss", "need", "to", "computed", "w", "NUMBER", "r", "NUMBER", "t", "NUMBER", "the", "adv_x", "but", "the", "node", "name", "of", "adv_x", "in", "the", "graph", "be", "add", "NUMBER", "but", "the", "name", "of", "node", "x", "be", "input", "NUMBER", "NUMBER", "Because", "of", "adv_x", "be", "not", "include", "in", "the", "graph", "NUMBER", "It", "s", "gradient", "cannot", "be", "computed", "NUMBER", "BTW", "what", "test", "you", "be", "run", "What", "be", "model", "NUMBER", "input", "Your", "model", "should", "be", "an", "instance", "of", "the", "cleverhans", "NUMBER", "Model", "class", "NUMBER", "This", "works", "on", "my", "end", "model", "utils_keras", "NUMBER", "cnn_model", "model_wrapper", "utils_keras", "NUMBER", "KerasModelWrapper", "model", "pgd", "ProjectedGradientDescent", "model_wrapper", "adv_x", "pgd", "NUMBER", "generate", "model", "NUMBER", "input", "pgd_params", "Hi", "ftramer", "The", "model", "I", "m", "use", "be", "the", "faceNet", "model", "use", "here", "LINK", "_adversarial_faces", "facenet_fgsm", "NUMBER", "py", "The", "model", "be", "inherited", "from", "a", "Cleverhans", "NUMBER", "model", "NUMBER", "Fixes", "NUMBER", "What", "s", "the", "accuracy", "before", "and", "after", "run", "the", "attack", "The", "epsilon", "seems", "high", "at", "least", "the", "default", "value", "of", "NUMBER", "I", "will", "have", "to", "check", "but", "I", "believe", "accuracy", "before", "the", "attack", "was", "around", "NUMBER", "This", "seems", "quite", "low", "NUMBER", "david", "berthelot", "do", "you", "think", "we", "could", "use", "your", "all", "convolutional", "model", "to", "get", "a", "better", "baseline", "NUMBER", "AlexeyKurakin", "I", "ve", "get", "the", "basic", "test", "do", "NUMBER", "The", "coverage", "be", "higher", "than", "the", "corresponding", "test", "in", "the", "current", "tests_tf", "package", "NUMBER", "It", "would", "be", "great", "if", "you", "could", "give", "a", "review", "and", "let", "me", "know", "what", "should", "be", "improved", "NUMBER", "Thanks", "in", "advance", "So", "there", "s", "good", "news", "and", "bad", "news", "NUMBER", "thumbsup", "The", "good", "news", "be", "that", "everyone", "that", "needs", "to", "sign", "a", "CLA", "the", "pull", "request", "submitter", "and", "all", "commit", "authors", "have", "do", "so", "NUMBER", "Everything", "be", "all", "good", "there", "NUMBER", "confused", "The", "bad", "news", "be", "that", "it", "appears", "that", "one", "or", "more", "commit", "were", "authored", "or", "co", "authored", "by", "someone", "other", "than", "the", "pull", "request", "submitter", "NUMBER", "We", "need", "to", "confirm", "that", "all", "authors", "be", "ok", "with", "their", "commit", "be", "contributed", "to", "this", "project", "NUMBER", "Please", "have", "them", "confirm", "that", "here", "in", "the", "pull", "request", "NUMBER", "Note", "to", "project", "maintainer", "This", "be", "a", "terminal", "state", "meaning", "the", "cla", "google", "commit", "status", "will", "not", "change", "from", "this", "state", "NUMBER", "It", "s", "up", "to", "you", "to", "confirm", "consent", "of", "all", "the", "commit", "author", "s", "set", "the", "cla", "label", "to", "yes", "if", "enable", "on", "your", "project", "and", "then", "merge", "this", "pull", "request", "when", "appropriate", "NUMBER", "\u2139", "Googlers", "Go", "here", "LINK", "NUMBER", "A", "NUMBER", "F", "NUMBER", "Fgithub", "NUMBER", "com", "NUMBER", "Ftensorflow", "NUMBER", "Fcleverhans", "NUMBER", "Fpull", "NUMBER", "F", "NUMBER", "for", "more", "info", "NUMBER", "TAG", "CLAs", "look", "good", "thanks", "\u2139", "Googlers", "Go", "here", "LINK", "NUMBER", "A", "NUMBER", "F", "NUMBER", "Fgithub", "NUMBER", "com", "NUMBER", "Ftensorflow", "NUMBER", "Fcleverhans", "NUMBER", "Fpull", "NUMBER", "F", "NUMBER", "for", "more", "info", "NUMBER", "TAG", "Thanks", "a", "lot", "for", "doing", "this", "Overall", "it", "s", "a", "good", "set", "of", "test", "NUMBER", "I", "add", "some", "minor", "comments", "to", "improve", "code", "NUMBER", "Sorry", "for", "late", "review", "I", "was", "on", "leave", "OOO", "for", "some", "time", "NUMBER", "Welcome", "back", "and", "thanks", "for", "the", "review", "I", "will", "be", "work", "on", "this", "in", "the", "next", "few", "days", "NUMBER", "Thanks", "again", "NUMBER", "Hi", "AlexeyKurakin", "I", "ve", "revised", "the", "PR", "according", "to", "your", "comments", "NUMBER", "It", "would", "be", "great", "if", "you", "could", "take", "another", "look", "and", "let", "me", "know", "if", "I", "need", "to", "change", "anything", "else", "NUMBER", "Many", "thanks", "NUMBER", "Almost", "do", "NUMBER", "There", "two", "issue", "left", "NUMBER", "Could", "you", "please", "use", "Python", "s", "implied", "line", "continuation", "instead", "of", "to", "wrap", "lines", "in", "all", "places", "in", "test_attacks", "NUMBER", "py", "I", "saw", "that", "it", "s", "fix", "in", "one", "place", "in", "test_attacks", "NUMBER", "py", "but", "it", "s", "still", "use", "in", "many", "other", "placed", "in", "this", "file", "NUMBER", "NUMBER", "Because", "pytorch", "test", "were", "moved", "you", "need", "to", "update", "NUMBER", "travis", "NUMBER", "yml", "to", "point", "it", "to", "new", "location", "for", "pytorch", "test", "NUMBER", "For", "now", "just", "update", "location", "of", "tests_pytorch", "in", "this", "line", "LINK", "L", "NUMBER", "Later", "we", "will", "rewrite", "entire", "NUMBER", "travis", "NUMBER", "yml", "to", "better", "reflect", "location", "of", "test", "for", "cleverhans", "v", "NUMBER", "Almost", "do", "NUMBER", "There", "two", "issue", "left", "NUMBER", "Could", "you", "please", "use", "Python", "s", "implied", "line", "continuation", "instead", "of", "to", "wrap", "lines", "in", "all", "places", "in", "test_attacks", "NUMBER", "py", "I", "saw", "that", "it", "s", "fix", "in", "one", "place", "in", "test_attacks", "NUMBER", "py", "but", "it", "s", "still", "use", "in", "many", "other", "placed", "in", "this", "file", "NUMBER", "NUMBER", "Because", "pytorch", "test", "were", "moved", "you", "need", "to", "update", "NUMBER", "travis", "NUMBER", "yml", "to", "point", "it", "to", "new", "location", "for", "pytorch", "test", "NUMBER", "For", "now", "just", "update", "location", "of", "tests_pytorch", "in", "this", "line", "LINK", "L", "NUMBER", "Later", "we", "will", "rewrite", "entire", "NUMBER", "travis", "NUMBER", "yml", "to", "better", "reflect", "location", "of", "test", "for", "cleverhans", "v", "NUMBER", "Both", "fix", "NUMBER", "Thanks", "NUMBER", "Once", "conflict", "with", "the", "main", "branch", "be", "resolve", "LGTM", "for", "merge", "Once", "conflict", "with", "the", "main", "branch", "be", "resolve", "LGTM", "for", "merge", "Thanks", "npapernot", "will", "fix", "the", "conflict", "later", "today", "NUMBER", "Thanks", "for", "the", "review", "AlexeyKurakin", "I", "actually", "resolve", "most", "of", "the", "conflict", "already", "NUMBER", "One", "remaining", "thing", "be", "update", "cleverhans", "future", "torch", "utils", "NUMBER", "py", "which", "I", "could", "not", "do", "in", "web", "editor", "Thanks", "a", "lot", "for", "helping", "I", "will", "update", "cleverhans", "future", "torch", "utils", "NUMBER", "py", "later", "NUMBER", "Conflicts", "resolve", "NUMBER", "Many", "thanks", "for", "the", "help", "AlexeyKurakin", "and", "npapernot", "The", "issue", "tracker", "should", "only", "be", "use", "to", "report", "bug", "or", "feature", "request", "NUMBER", "If", "you", "be", "looking", "for", "support", "from", "other", "library", "users", "please", "ask", "a", "question", "on", "StackOverflow", "LINK", "NUMBER", "Describe", "the", "bug", "I", "be", "attempting", "to", "do", "a", "simple", "CarliniWagnerL", "NUMBER", "attack", "on", "some", "images", "NUMBER", "To", "Reproduce", "My", "code", "be", "as", "follow", "file_list", "glob", "NUMBER", "glob", "images", "NUMBER", "jpg", "for", "image_path", "in", "file_list", "img", "image", "NUMBER", "load_img", "image_path", "target_size", "NUMBER", "NUMBER", "x", "image", "NUMBER", "img_to_array", "img", "x", "x", "NUMBER", "astype", "float", "NUMBER", "x", "NUMBER", "X", "NUMBER", "append", "x", "target", "np", "NUMBER", "zeros", "NUMBER", "target", "NUMBER", "NUMBER", "NUMBER", "target", "np", "NUMBER", "repeat", "target", "len", "X", "axis", "NUMBER", "params", "max_iterations", "NUMBER", "binary_search_steps", "NUMBER", "initial_const", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "batch_size", "NUMBER", "y_target", "target", "X", "np", "NUMBER", "array", "X", "x_tensor", "K", "NUMBER", "variable", "X", "with", "tf", "NUMBER", "Session", "as", "sess", "sess", "NUMBER", "run", "tf", "NUMBER", "global_variables_initializer", "fgsm", "CarliniWagnerL", "NUMBER", "wrap", "sess", "sess", "adv", "fgsm", "NUMBER", "generate", "x_tensor", "params", "This", "takes", "some", "time", "but", "then", "gives", "an", "error", "Users", "shamoon", "NUMBER", "local", "share", "virtualenvs", "adversarial", "exploration", "dPMp", "NUMBER", "ya", "lib", "python", "NUMBER", "site", "package", "numpy", "core", "fromnumeric", "NUMBER", "py", "NUMBER", "RuntimeWarning", "Mean", "of", "empty", "slice", "NUMBER", "out", "out", "kwargs", "Users", "shamoon", "NUMBER", "local", "share", "virtualenvs", "adversarial", "exploration", "dPMp", "NUMBER", "ya", "lib", "python", "NUMBER", "site", "package", "numpy", "core", "_methods", "NUMBER", "py", "NUMBER", "RuntimeWarning", "invalid", "value", "encountered", "in", "double_scalars", "ret", "ret", "NUMBER", "dtype", "NUMBER", "type", "ret", "rcount", "Expected", "behavior", "Attack", "images", "to", "be", "created", "System", "configuration", "OS", "Mac", "OS", "Python", "version", "NUMBER", "TensorFlow", "version", "NUMBER", "I", "m", "not", "sure", "that", "I", "can", "debug", "this", "from", "the", "error", "you", "ve", "given", "NUMBER", "Do", "you", "have", "a", "longer", "stack", "trace", "Could", "you", "try", "it", "on", "exactly", "one", "image", "and", "report", "the", "intermediate", "results", "npapernot", "A", "quick", "question", "it", "would", "be", "nice", "if", "you", "can", "clarify", "what", "this", "line", "be", "doing", "as", "I", "understand", "its", "multiplying", "H", "x", "W", "x", "C", "the", "height", "width", "and", "channels", "ignoring", "the", "batch", "size", "NUMBER", "Am", "I", "right", "LINK", "_map_method", "NUMBER", "py", "L", "NUMBER", "That", "s", "correct", "sorry", "for", "the", "delay", "in", "the", "response", "I", "was", "on", "vacation", "Okay", "I", "this", "be", "still", "under", "implementation", "NUMBER", "I", "will", "update", "this", "PR", "as", "soon", "as", "possible", "NUMBER", "Really", "feels", "great", "hearing", "from", "you", "thanks", "NUMBER", "Travis", "be", "now", "recommending", "remove", "the", "__sudo__", "tag", "LINK", "ci", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "required", "linux", "infrastructure", "migration", "NUMBER", "_If", "you", "currently", "specify", "__sudo", "false__", "in", "your", "__", "NUMBER", "travis", "NUMBER", "yml__", "we", "recommend", "remove", "that", "configuration_", "The", "article", "makes", "it", "clear", "that", "the", "__sudo__", "tag", "be", "now", "fully", "deprecate", "because", "the", "__sudo__", "command", "be", "_always_", "available", "in", "Travis", "CI", "jobs", "and", "there", "be", "no", "way", "to", "turn", "it", "off", "NUMBER", "Add", "a", "decision", "based", "attack", "Boundary", "Attack", "from", "the", "preprint", "LINK", "So", "there", "s", "good", "news", "and", "bad", "news", "NUMBER", "thumbsup", "The", "good", "news", "be", "that", "everyone", "that", "needs", "to", "sign", "a", "CLA", "the", "pull", "request", "submitter", "and", "all", "commit", "authors", "have", "do", "so", "NUMBER", "Everything", "be", "all", "good", "there", "NUMBER", "confused", "The", "bad", "news", "be", "that", "it", "appears", "that", "one", "or", "more", "commit", "were", "authored", "or", "co", "authored", "by", "someone", "other", "than", "the", "pull", "request", "submitter", "NUMBER", "We", "need", "to", "confirm", "that", "all", "authors", "be", "ok", "with", "their", "commit", "be", "contributed", "to", "this", "project", "NUMBER", "Please", "have", "them", "confirm", "that", "here", "in", "the", "pull", "request", "NUMBER", "Note", "to", "project", "maintainer", "This", "be", "a", "terminal", "state", "meaning", "the", "cla", "google", "commit", "status", "will", "not", "change", "from", "this", "state", "NUMBER", "It", "s", "up", "to", "you", "to", "confirm", "consent", "of", "all", "the", "commit", "author", "s", "set", "the", "cla", "label", "to", "yes", "if", "enable", "on", "your", "project", "and", "then", "merge", "this", "pull", "request", "when", "appropriate", "NUMBER", "\u2139", "Googlers", "Go", "here", "LINK", "NUMBER", "A", "NUMBER", "F", "NUMBER", "Fgithub", "NUMBER", "com", "NUMBER", "Ftensorflow", "NUMBER", "Fcleverhans", "NUMBER", "Fpull", "NUMBER", "F", "NUMBER", "for", "more", "info", "NUMBER", "TAG", "Cool", "I", "ve", "created", "another", "PR", "for", "update", "README", "NUMBER", "md", "NUMBER", "npapernot", "I", "write", "something", "like", "this", "awhile", "back", "here", "LINK", "NUMBER", "The", "underlying", "codebase", "be", "quite", "a", "bit", "different", "from", "cleverhans", "but", "maybe", "some", "of", "that", "can", "be", "reused", "BTW", "the", "current", "mnist_tutorial", "in", "NUMBER", "be", "only", "a", "few", "edits", "away", "from", "a", "cifar", "NUMBER", "tutorial", "NUMBER", "Just", "change", "torchvision", "NUMBER", "datasets", "NUMBER", "MNIST", "to", "torchvision", "NUMBER", "datasets", "NUMBER", "CIFAR", "NUMBER", "and", "change", "the", "in_channel", "of", "the", "model", "from", "NUMBER", "to", "NUMBER", "Or", "do", "we", "want", "a", "bigger", "better", "network", "for", "this", "instead", "of", "the", "current", "LeNet", "NUMBER", "in", "the", "mnist_tutorial", "In", "any", "case", "I", "can", "add", "this", "tutorial", "after", "NUMBER", "has", "be", "merge", "NUMBER", "Thanks", "NUMBER", "That", "would", "probably", "make", "more", "sense", "although", "I", "m", "not", "sure", "what", "having", "multiple", "tutorials", "with", "only", "a", "few", "lines", "difference", "would", "accomplish", "for", "a", "new", "user", "NUMBER", "Perhaps", "there", "s", "functionality", "miss", "from", "the", "MNIST", "tutorial", "that", "would", "be", "useful", "to", "add", "Yes", "I", "agree", "that", "these", "two", "tutorials", "would", "look", "similar", "NUMBER", "And", "I", "can", "t", "see", "how", "a", "cifar", "NUMBER", "tutorial", "would", "be", "able", "to", "demonstrate", "any", "functionality", "miss", "from", "the", "exist", "mnist", "tutorial", "NUMBER", "I", "think", "the", "original", "idea", "was", "to", "add", "a", "cifar", "NUMBER", "tutorial", "but", "I", "add", "a", "mnist", "tutorial", "with", "my", "PR", "instead", "NUMBER", "npapernot", "I", "be", "interested", "in", "work", "on", "this", "npapernot", "I", "can", "take", "this", "one", "NUMBER", "I", "do", "have", "a", "question", "though", "NUMBER", "Since", "PyTorch", "be", "dynamic", "in", "the", "sense", "that", "it", "do", "not", "explicitly", "build", "a", "graph", "before", "each", "run", "be", "we", "ok", "with", "the", "potential", "inconsistencies", "in", "the", "API", "if", "we", "go", "for", "a", "fully", "PyTorch", "implementation", "Some", "inconsistencies", "I", "can", "think", "of", "include", "for", "example", "when", "the", "user", "uses", "a", "PyTorch", "implementation", "the", "x", "be", "fed", "into", "attack", "NUMBER", "generate", "would", "be", "the", "actual", "data", "in", "contrast", "to", "a", "placeholder", "when", "the", "user", "uses", "a", "TF", "implementation", "of", "the", "same", "attack", "NUMBER", "Or", "do", "we", "want", "to", "add", "a", "layer", "in", "the", "API", "to", "resolve", "these", "inconsistencies", "among", "the", "three", "backends", "Thanks", "NUMBER", "This", "be", "a", "possible", "implementation", "of", "the", "generate", "function", "NUMBER", "def", "generate", "self", "x", "kwargs", "Generate", "symbolic", "graph", "for", "adversarial", "examples", "and", "return", "NUMBER", "Args", "x", "The", "model", "s", "symbolic", "inputs", "NUMBER", "kwargs", "See", "parse_params", "assert", "self", "NUMBER", "parse_params", "kwargs", "asserts", "If", "a", "data", "range", "was", "specified", "check", "that", "the", "input", "was", "in", "that", "range", "if", "self", "NUMBER", "clip_min", "be", "not", "None", "asserts", "NUMBER", "append", "x", "NUMBER", "any", "self", "NUMBER", "clip_min", "if", "self", "NUMBER", "clip_max", "be", "not", "None", "asserts", "NUMBER", "append", "x", "NUMBER", "any", "TAG", "It", "may", "be", "cause", "by", "different", "version", "of", "Keras", "libraries", "from", "Keras", "base", "and", "keras", "in", "Tensorflow", "NUMBER", "I", "have", "tried", "to", "install", "keras", "NUMBER", "as", "Tensorflow", "has", "NUMBER", "But", "it", "doesn", "t", "work", "NUMBER", "I", "tried", "to", "import", "keras", "without", "Tensorflow", "as", "import", "keras", "NUMBER", "But", "it", "causes", "the", "second", "error", "NUMBER", "AttributeError", "Layer", "sequential_", "NUMBER", "has", "multiple", "inbound", "nodes", "hence", "the", "notion", "of", "layer", "input", "be", "ill", "defined", "NUMBER", "Use", "get_input_at", "node_index", "instead", "NUMBER", "This", "error", "occur", "at", "input", "method", "of", "Layer", "class", "in", "keras", "engine", "base_layer", "NUMBER", "py", "I", "have", "no", "idea", "what", "cause", "this", "error", "NUMBER", "Besides", "I", "tried", "to", "remove", "keras", "library", "NUMBER", "Then", "I", "find", "that", "the", "keras", "library", "be", "required", "by", "CleverHans", "NUMBER", "System", "configuration", "CentOS", "NUMBER", "Python", "NUMBER", "TensorFlow", "r", "NUMBER", "Keras", "NUMBER", "I", "think", "I", "have", "figure", "out", "the", "first", "error", "NUMBER", "First", "I", "import", "keras", "directly", "rather", "than", "from", "tensorflow", "at", "the", "NUMBER", "line", "NUMBER", "Then", "I", "comment", "the", "NUMBER", "line", "which", "be", "call", "to", "deal", "with", "some", "error", "when", "the", "model", "uses", "custom", "loss", "NUMBER", "These", "operations", "only", "make", "the", "traditional", "model", "training", "processes", "work", "NUMBER", "But", "the", "second", "error", "still", "occur", "in", "the", "adversarial", "training", "NUMBER", "I", "have", "tried", "to", "locate", "the", "error", "NUMBER", "I", "find", "that", "Cross", "entropy", "on", "the", "adversarial", "examples", "in", "function", "get_adversarial_loss", "line", "NUMBER", "may", "causes", "the", "error", "NUMBER", "But", "I", "still", "have", "no", "idea", "how", "to", "deal", "with", "it", "NUMBER", "Is", "your", "feature", "request", "relate", "to", "a", "problem", "Please", "describe", "NUMBER", "Hi", "all", "I", "m", "doing", "research", "on", "designing", "defensive", "methods", "NUMBER", "From", "the", "references", "I", "use", "and", "my", "own", "experience", "a", "standard", "of", "the", "evaluation", "process", "could", "largely", "benefit", "the", "whole", "community", "NUMBER", "Since", "different", "evaluation", "process", "be", "conducted", "it", "be", "hard", "for", "people", "to", "evaluate", "their", "propose", "defense", "with", "the", "state", "of", "the", "art", "NUMBER", "Moreover", "some", "weakly", "designed", "evaluation", "may", "result", "in", "the", "obfuscated", "gradient", "effect", "which", "be", "already", "identified", "by", "carlini", "NUMBER", "Describe", "the", "solution", "you", "d", "like", "As", "a", "reference", "or", "a", "suggestion", "CleverHans", "could", "offer", "an", "evaluation", "demo", "to", "the", "whole", "community", "NUMBER", "In", "this", "demo", "a", "detailed", "evaluation", "plan", "could", "be", "offered", "which", "include", "a", "selection", "of", "different", "adversarial", "examples", "different", "evaluation", "flows", "for", "white", "box", "black", "box", "defenses", "and", "even", "the", "computational", "cost", "of", "propose", "defenses", "NUMBER", "Replaced", "eigenvalue", "computation", "with", "Scipy", "eigs", "NUMBER", "Implements", "a", "Houdini", "LINK", "based", "loss", "NUMBER", "The", "interface", "be", "a", "wrapper", "around", "an", "exist", "model", "and", "loss", "NUMBER", "Related", "to", "issue", "NUMBER", "TODO", "x", "Make", "implementation", "more", "efficient", "Add", "test", "Add", "examples", "Is", "this", "still", "WIP", "or", "should", "I", "review", "merge", "it", "Hi", "goodfeli", "could", "you", "take", "a", "quick", "look", "when", "you", "have", "the", "time", "just", "to", "make", "sure", "I", "m", "on", "the", "right", "track", "so", "far", "I", "ve", "tried", "out", "this", "implementation", "with", "the", "MNIST", "CW", "attack", "tutorial", "and", "it", "seems", "to", "work", "NUMBER", "However", "it", "s", "far", "slower", "NUMBER", "seconds", "per", "epoch", "vs", "NUMBER", "for", "the", "original", "implementation", "on", "a", "GTX", "NUMBER", "Ti", "NUMBER", "The", "main", "bottleneck", "seems", "to", "be", "the", "normal", "distribution", "survival", "function", "NUMBER", "Also", "it", "causes", "a", "slight", "drop", "in", "effectiveness", "of", "the", "attack", "NUMBER", "out", "of", "NUMBER", "NUMBER", "This", "leads", "me", "to", "some", "question", "about", "the", "formulation", "of", "the", "Houdini", "loss", "itself", "NUMBER", "If", "we", "want", "it", "to", "reduce", "to", "the", "task", "loss", "eventually", "like", "the", "authors", "claim", "shouldn", "t", "there", "be", "a", "factor", "of", "NUMBER", "multiplied", "with", "the", "stochastic", "margin", "When", "the", "actual", "target", "be", "the", "same", "as", "the", "predicted", "target", "the", "difference", "in", "scores", "be", "zero", "and", "the", "margin", "be", "therefore", "NUMBER", "When", "I", "multiply", "by", "this", "factor", "of", "NUMBER", "in", "my", "implementation", "by", "add", "a", "NUMBER", "here", "LINK", "diff", "NUMBER", "c", "NUMBER", "d", "NUMBER", "aff", "NUMBER", "b", "NUMBER", "f", "NUMBER", "f", "NUMBER", "f", "NUMBER", "R", "NUMBER", "I", "get", "NUMBER", "on", "NUMBER", "effectiveness", "again", "NUMBER", "What", "be", "your", "views", "on", "this", "Moustapha", "NUMBER", "author", "of", "the", "Houdini", "paper", "works", "at", "Google", "now", "NUMBER", "I", "ll", "ask", "him", "if", "he", "can", "take", "a", "look", "NUMBER", "Hi", "Nicolas", "Sure", "I", "would", "be", "happy", "to", "help", "I", "ll", "take", "a", "look", "at", "it", "later", "this", "week", "NUMBER", "Y", "On", "NUMBER", "April", "NUMBER", "at", "NUMBER", "NUMBER", "NUMBER", "Nicolas", "Papernot", "notifications", "github", "NUMBER", "com", "write", "Hi", "adiyoss", "TAG", "could", "you", "take", "a", "look", "and", "provide", "some", "guidance", "Would", "be", "great", "to", "have", "this", "loss", "merge", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "adiyoss", "gentle", "ping", "npapernot", "Sure", "I", "ll", "do", "it", "soon", "sorry", "for", "be", "late", "NUMBER", "A", "little", "busy", "with", "finalizing", "my", "PhD", "dissertation", "Would", "it", "make", "sense", "to", "put", "this", "in", "cleverhans", "NUMBER", "model_zoo", "rather", "than", "examples", "As", "noted", "in", "LINK", "use", "CleverHans", "functionality", "together", "with", "Keras", "custom", "losses", "allows", "Keras", "users", "to", "keep", "use", "NUMBER", "fit", "and", "NUMBER", "evaluate", "with", "their", "models", "NUMBER", "Providing", "a", "tutorial", "showing", "how", "to", "do", "this", "would", "enable", "a", "quick", "start", "for", "Keras", "tf", "NUMBER", "keras", "users", "NUMBER", "For", "example", "the", "accuracy", "on", "adversarial", "examples", "can", "be", "implement", "use", "a", "custom", "metric", "python", "def", "adv_acc", "y_true", "y_pred", "Generate", "adversarial", "examples", "x_adv", "fgsm", "NUMBER", "generate", "model", "NUMBER", "input", "fgsm_params", "Consider", "the", "attack", "to", "be", "constant", "x_adv", "tf", "NUMBER", "op_gradient", "x_adv", "Accuracy", "on", "the", "adversarial", "examples", "y_adv", "model", "x_adv", "return", "keras", "NUMBER", "metrics", "NUMBER", "categorical_accuracy", "y_true", "y_adv", "Training", "and", "evaluating", "a", "model", "use", "this", "metric", "thus", "requires", "minimal", "change", "to", "the", "usual", "Keras", "workflow", "python", "model", "NUMBER", "compile", "optimizer", "adam", "loss", "categorical_crossentropy", "metrics", "accuracy", "adv_acc", "model", "NUMBER", "fit", "x_train", "y_train", "epochs", "nb_epochs", "validation_data", "x_test", "y_test", "Evaluate", "the", "accuracy", "on", "legitimate", "and", "adversarial", "test", "examples", "loss", "acc", "adv_acc", "model", "NUMBER", "evaluate", "x_test", "y_test", "Code", "In", "cleverhans_tutorials", "mnist_tutorial_keras", "NUMBER", "py", "I", "modify", "cleverhans_tutorials", "mnist_tutorial_keras_tf", "NUMBER", "py", "and", "replaced", "cleverhans", "NUMBER", "train", "NUMBER", "train", "with", "model", "NUMBER", "fit", "cleverhans", "NUMBER", "utils_tf", "NUMBER", "model_eval", "with", "model", "NUMBER", "evaluate", "Since", "a", "tutorial", "showcasing", "the", "use", "of", "the", "CleverHans", "function", "for", "training", "and", "evaluation", "be", "very", "helpful", "I", "decided", "to", "put", "the", "new", "implementation", "into", "its", "own", "module", "for", "now", "NUMBER", "If", "you", "find", "it", "more", "appropriate", "to", "replace", "the", "exist", "tutorial", "I", "be", "happy", "to", "do", "so", "NUMBER", "tests_tf", "test_mnist_tutorial_keras", "NUMBER", "py", "contains", "test", "for", "the", "tutorial", "just", "like", "tests_tf", "test_mnist_tutorial_keras_tf", "NUMBER", "py", "Metrics", "To", "make", "sure", "that", "the", "new", "implementation", "still", "achieves", "the", "same", "accuracies", "as", "the", "exist", "one", "I", "run", "both", "tutorials", "with", "NUMBER", "different", "random", "seeds", "on", "a", "GPU", "NUMBER", "Below", "be", "the", "means", "and", "standard", "deviations", "of", "the", "test", "accuracies", "in", "the", "cleverhans", "NUMBER", "utils", "NUMBER", "AccuracyReport", "Original", "Implementation", "clean_train_clean_eval", "NUMBER", "NUMBER", "clean_train_adv_eval", "NUMBER", "NUMBER", "adv_train_clean_eval", "NUMBER", "NUMBER", "adv_train_adv_eval", "NUMBER", "NUMBER", "New", "Implementation", "clean_train_clean_eval", "NUMBER", "NUMBER", "clean_train_adv_eval", "NUMBER", "NUMBER", "adv_train_clean_eval", "NUMBER", "NUMBER", "adv_train_adv_eval", "NUMBER", "NUMBER", "npapernot", "thanks", "for", "the", "quick", "feedback", "NUMBER", "I", "renamed", "y_", "variables", "to", "preds_", "NUMBER", "The", "TF", "NUMBER", "build", "LINK", "ci", "NUMBER", "com", "tensorflow", "cleverhans", "jobs", "NUMBER", "L", "NUMBER", "fail", "because", "Travis", "did", "not", "receive", "any", "output", "for", "NUMBER", "minutes", "and", "thought", "the", "build", "was", "stalled", "NUMBER", "After", "change", "nosetests", "nologcapture", "to", "nosetests", "nocapture", "the", "build", "pass", "since", "Travis", "now", "also", "sees", "print", "outputs", "from", "the", "tutorials", "NUMBER", "Another", "option", "would", "be", "to", "use", "travis_wait", "or", "to", "change", "all", "print", "statements", "in", "the", "tutorials", "to", "_logger", "NUMBER", "info", "NUMBER", "I", "m", "happy", "to", "do", "that", "if", "you", "prefer", "NUMBER", "The", "TF", "NUMBER", "build", "LINK", "ci", "NUMBER", "com", "tensorflow", "cleverhans", "jobs", "NUMBER", "L", "NUMBER", "fail", "because", "of", "the", "tolerance", "as", "you", "mention", "NUMBER", "Interestingly", "it", "only", "fail", "when", "the", "test", "be", "call", "as", "part", "of", "nosetests", "nocapture", "v", "stop", "tests_tf", "NUMBER", "To", "verify", "that", "I", "temporarily", "add", "nosetests", "nocapture", "v", "stop", "tests_tf", "test_mnist_tutorial_keras", "NUMBER", "py", "to", "the", "travis", "config", "which", "results", "in", "the", "exact", "same", "accs", "in", "report", "and", "report_", "NUMBER", "line", "NUMBER", "LINK", "ci", "NUMBER", "com", "tensorflow", "cleverhans", "jobs", "NUMBER", "L", "NUMBER", "and", "line", "NUMBER", "LINK", "ci", "NUMBER", "com", "tensorflow", "cleverhans", "jobs", "NUMBER", "L", "NUMBER", "NUMBER", "However", "the", "subsequent", "call", "of", "nosetests", "nocapture", "v", "stop", "tests_tf", "results", "in", "different", "accs", "in", "report", "and", "report_", "NUMBER", "line", "NUMBER", "LINK", "ci", "NUMBER", "com", "tensorflow", "cleverhans", "jobs", "NUMBER", "L", "NUMBER", "and", "line", "NUMBER", "LINK", "ci", "NUMBER", "com", "tensorflow", "cleverhans", "jobs", "NUMBER", "L", "NUMBER", "NUMBER", "This", "be", "irritating", "since", "both", "times", "the", "exact", "same", "code", "be", "executed", "and", "it", "only", "happens", "on", "TF", "NUMBER", "It", "might", "have", "to", "do", "with", "some", "code", "that", "be", "executed", "in", "a", "previous", "test", "in", "tests_tf", "NUMBER", "I", "hope", "I", "will", "be", "able", "to", "find", "the", "reason", "NUMBER", "I", "notice", "that", "even", "after", "moving", "the", "exist", "Keras", "tutorial", "to", "the", "examples", "folder", "the", "TF", "NUMBER", "build", "still", "fail", "NUMBER", "Like", "above", "test_mnist_tutorial_keras", "NUMBER", "py", "pass", "when", "run", "in", "isolation", "NUMBER", "However", "it", "fail", "because", "of", "different", "scores", "in", "report_", "NUMBER", "when", "run", "as", "a", "part", "of", "nosetests", "nocapture", "v", "stop", "tests_tf", "NUMBER", "I", "also", "find", "that", "even", "run", "only", "test_attacks", "NUMBER", "py", "before", "the", "tutorial", "s", "test", "be", "enough", "to", "make", "it", "non", "deterministic", "NUMBER", "I", "spent", "the", "last", "days", "debugging", "but", "could", "not", "find", "the", "reason", "for", "this", "inter", "test", "dependency", "which", "interestingly", "do", "not", "occur", "in", "TF", "NUMBER", "One", "solution", "would", "be", "to", "run", "each", "test", "separately", "to", "eliminate", "the", "inter", "test", "dependency", "i", "NUMBER", "e", "NUMBER", "replace", "bash", "nosetests", "nologcapture", "v", "stop", "tests_tf", "with", "bash", "for", "test_path", "in", "tests_tf", "NUMBER", "py", "do", "nosetests", "nocapture", "v", "stop", "test_path", "do", "in", "NUMBER", "travis", "NUMBER", "yml", "NUMBER", "This", "be", "the", "current", "solution", "and", "makes", "the", "build", "pass", "NUMBER", "An", "alternative", "would", "be", "to", "exclude", "the", "tutorial", "s", "test", "from", "the", "TF", "NUMBER", "build", "or", "to", "remove", "the", "comparison", "of", "the", "accuracies", "in", "report", "and", "report_", "NUMBER", "NUMBER", "Which", "solution", "would", "you", "prefer", "So", "there", "s", "good", "news", "and", "bad", "news", "NUMBER", "thumbsup", "The", "good", "news", "be", "that", "everyone", "that", "needs", "to", "sign", "a", "CLA", "the", "pull", "request", "submitter", "and", "all", "commit", "authors", "have", "do", "so", "NUMBER", "Everything", "be", "all", "good", "there", "NUMBER", "confused", "The", "bad", "news", "be", "that", "it", "appears", "that", "one", "or", "more", "commit", "were", "authored", "or", "co", "authored", "by", "someone", "other", "than", "the", "pull", "request", "submitter", "NUMBER", "We", "need", "to", "confirm", "that", "all", "authors", "be", "ok", "with", "their", "commit", "be", "contributed", "to", "this", "project", "NUMBER", "Please", "have", "them", "confirm", "that", "here", "in", "the", "pull", "request", "NUMBER", "Note", "to", "project", "maintainer", "This", "be", "a", "terminal", "state", "meaning", "the", "cla", "google", "commit", "status", "will", "not", "change", "from", "this", "state", "NUMBER", "It", "s", "up", "to", "you", "to", "confirm", "consent", "of", "all", "the", "commit", "author", "s", "set", "the", "cla", "label", "to", "yes", "if", "enable", "on", "your", "project", "and", "then", "merge", "this", "pull", "request", "when", "appropriate", "NUMBER", "Googlers", "can", "find", "more", "info", "about", "SignCLA", "and", "this", "PR", "by", "following", "this", "link", "go", "prinfo", "https", "NUMBER", "A", "NUMBER", "F", "NUMBER", "Fgithub", "NUMBER", "com", "NUMBER", "Ftensorflow", "NUMBER", "Fcleverhans", "NUMBER", "Fpull", "NUMBER", "F", "NUMBER", "NUMBER", "TAG", "Thanks", "I", "only", "made", "one", "change", "decrease", "the", "number", "of", "epochs", "for", "the", "test", "and", "will", "merge", "once", "test", "pass", "again", "The", "issue", "tracker", "should", "only", "be", "use", "to", "report", "bug", "or", "feature", "request", "NUMBER", "If", "you", "be", "looking", "for", "support", "from", "other", "library", "users", "please", "ask", "a", "question", "on", "StackOverflow", "LINK", "NUMBER", "Describe", "the", "bug", "from", "cleverhans", "NUMBER", "compat", "import", "flags", "When", "I", "run", "this", "in", "Python", "I", "get", "the", "following", "error", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "ImportError", "cannot", "import", "name", "flags", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "Go", "to", "NUMBER", "NUMBER", "Click", "on", "NUMBER", "NUMBER", "Scroll", "down", "to", "NUMBER", "NUMBER", "See", "error", "Expected", "behavior", "A", "clear", "and", "concise", "description", "of", "what", "you", "expected", "to", "happen", "NUMBER", "Screenshots", "System", "configuration", "OS", "Ubuntu", "NUMBER", "Python", "version", "NUMBER", "anaconda", "install", "TensorFlow", "version", "NUMBER", "The", "version", "be", "NUMBER", "Actually", "I", "install", "the", "library", "use", "pip", "today", "itself", "NUMBER", "I", "have", "attached", "the", "screenshot", "for", "your", "reference", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "e", "NUMBER", "b", "NUMBER", "e", "NUMBER", "NUMBER", "fc", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "NUMBER", "png", "I", "uninstalled", "the", "library", "and", "then", "upgrade", "the", "version", "of", "pip", "to", "NUMBER", "Then", "when", "I", "install", "cleverhans", "use", "pip", "install", "git", "LINK", "egg", "cleverhans", "it", "worked", "NUMBER", "Thanks", "for", "the", "help", "NUMBER", "I", "can", "t", "do", "pip", "install", "git", "LINK", "egg", "cleverhans", "for", "some", "reason", "I", "get", "no", "matches", "find", "git", "LINK", "egg", "cleverhans", "The", "version", "for", "pip", "be", "not", "the", "latest", "it", "doesn", "t", "keep", "track", "of", "each", "commit", "to", "the", "master", "branch", "but", "rather", "be", "the", "last", "version", "CleverHans", "could", "you", "try", "installing", "by", "cloning", "the", "github", "repository", "directly", "You", "can", "do", "it", "with", "pip", "install", "git", "LINK", "egg", "cleverhans", "It", "works", "Thanks", "for", "your", "kind", "help", "remove", "extraneous", "calls", "to", "function", "avoided", "reconstructing", "graph", "nodes", "several", "times", "TODO", "decompose", "the", "eigenvalue", "computation", "delete", "the", "test", "code", "random", "seeds", "logging", "time", "document", "further", "remove", "unnecessary", "file", "Thanks", "for", "your", "pull", "request", "NUMBER", "It", "looks", "like", "this", "may", "be", "your", "first", "contribution", "to", "a", "Google", "open", "source", "project", "if", "not", "look", "below", "for", "help", "NUMBER", "Before", "we", "can", "look", "at", "your", "pull", "request", "you", "ll", "need", "to", "sign", "a", "Contributor", "License", "Agreement", "CLA", "NUMBER", "memo", "Please", "visit", "TAG", "to", "sign", "NUMBER", "Once", "you", "ve", "sign", "or", "fix", "any", "issue", "please", "reply", "here", "e", "NUMBER", "g", "NUMBER", "I", "sign", "it", "and", "we", "ll", "verify", "it", "NUMBER", "What", "to", "do", "if", "you", "already", "sign", "the", "CLA", "Individual", "signers", "It", "s", "possible", "we", "don", "t", "have", "your", "GitHub", "username", "or", "you", "re", "use", "a", "different", "email", "address", "on", "your", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "Corporate", "signers", "Your", "company", "has", "a", "Point", "of", "Contact", "who", "decides", "which", "employees", "be", "authorized", "to", "participate", "NUMBER", "Ask", "your", "POC", "to", "be", "add", "to", "the", "group", "of", "authorized", "contributors", "NUMBER", "If", "you", "don", "t", "know", "who", "your", "Point", "of", "Contact", "be", "direct", "the", "Google", "project", "maintainer", "to", "go", "cla", "troubleshoot", "LINK", "troubleshoot", "Public", "version", "LINK", "troubleshoot", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "be", "the", "email", "use", "for", "the", "Git", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "also", "be", "attached", "to", "your", "GitHub", "account", "LINK", "NUMBER", "TAG", "I", "sign", "it", "We", "find", "a", "Contributor", "License", "Agreement", "for", "you", "the", "sender", "of", "this", "pull", "request", "but", "were", "unable", "to", "find", "agreements", "for", "all", "the", "commit", "author", "s", "or", "Co", "authors", "NUMBER", "If", "you", "authored", "these", "maybe", "you", "use", "a", "different", "email", "address", "in", "the", "git", "commit", "than", "was", "use", "to", "sign", "the", "CLA", "login", "here", "LINK", "to", "double", "check", "If", "these", "were", "authored", "by", "someone", "else", "then", "they", "will", "need", "to", "sign", "a", "CLA", "as", "well", "and", "confirm", "that", "they", "re", "okay", "with", "these", "be", "contributed", "to", "Google", "NUMBER", "In", "order", "to", "pass", "this", "check", "please", "resolve", "this", "problem", "and", "have", "the", "pull", "request", "author", "add", "another", "comment", "and", "the", "bot", "will", "run", "again", "NUMBER", "If", "the", "bot", "doesn", "t", "comment", "it", "means", "it", "doesn", "t", "think", "anything", "has", "change", "NUMBER", "TAG", "npapernot", "yes", "this", "will", "eventually", "supersede", "NUMBER", "however", "we", "would", "prefer", "NUMBER", "for", "now", "as", "a", "reference", "NUMBER", "Closing", "because", "of", "LINK", "I", "use", "VirtualAdversarialMethod", "to", "attack", "CIFAR", "NUMBER", "dataset", "but", "on", "the", "train", "dataset", "the", "successful", "rate", "be", "only", "NUMBER", "I", "use", "the", "default", "parameter", "setting", "by", "the", "way", "NUMBER", "Can", "you", "give", "an", "VAT", "method", "example", "How", "to", "set", "parameter", "and", "increase", "the", "successful", "rate", "above", "NUMBER", "npapernot", "I", "think", "the", "code", "of", "VirtualAdversarialMethod", "attack", "has", "a", "bug", "inside", "it", "NUMBER", "if", "this", "be", "actually", "a", "bug", "report", "can", "you", "post", "details", "be", "there", "anything", "that", "looks", "wrong", "in", "the", "code", "be", "there", "publish", "adversarial", "error", "rates", "for", "this", "algorithm", "that", "this", "code", "isn", "t", "achieving", "VAT", "be", "usually", "use", "for", "semi", "supervised", "learning", "not", "adversarial", "attacks", "so", "I", "m", "not", "actually", "sure", "what", "error", "rate", "it", "should", "get", "NUMBER", "It", "s", "likely", "that", "the", "numbers", "be", "lower", "than", "you", "re", "expecting", "because", "VAT", "isn", "t", "an", "aggressive", "attack", "algorithm", "or", "because", "you", "need", "to", "use", "different", "hyperparameters", "for", "this", "model", "dataset", "NUMBER", "goodfeli", "OK", "I", "will", "do", "more", "test", "on", "the", "algorithm", "on", "CIFAR", "NUMBER", "dataset", "And", "write", "a", "report", "pdf", "file", "to", "you", "Is", "that", "OK", "npapernot", "just", "wait", "for", "me", "to", "write", "it", "NUMBER", "goodfeli", "npapernot", "I", "find", "NUMBER", "attack", "method", "in", "Cifar", "NUMBER", "untargeted", "attack", "has", "low", "successful", "rate", "which", "be", "NUMBER", "VirtualAdversarialMethod", "NUMBER", "L", "NUMBER", "norm", "of", "MomentumIterativeMethod", "NUMBER", "L", "NUMBER", "norm", "of", "BasicIterativeMethod", "NUMBER", "L", "infinity", "version", "of", "deep_fool", "the", "original", "cleverhans", "deepfool", "be", "L", "NUMBER", "norm", "I", "extend", "it", "to", "L", "inf", "version", "according", "to", "original", "paper", "In", "addition", "I", "also", "test", "a", "L", "infinity", "version", "of", "DeepFool", "this", "code", "be", "just", "a", "little", "modifed", "code", "of", "original", "cleverhans", "DeepFool", "to", "add", "L", "inf", "functionality", "which", "be", "describe", "in", "original", "paper", "s", "page", "NUMBER", "paper", "can", "be", "downloaded", "from", "LINK", "But", "it", "also", "test", "FAILED", "SUCCESSFUL", "RATE", "be", "so", "LOW", "All", "of", "the", "code", "be", "wrtten", "in", "the", "uploaded", "script", "attacker_bug_report_script", "NUMBER", "zip", "LINK", "_bug_report_script", "NUMBER", "zip", "You", "can", "download", "it", "and", "just", "run", "it", "will", "first", "train", "a", "model", "on", "clean", "CIFAR", "NUMBER", "data", "NUMBER", "Then", "use", "this", "model", "to", "generate", "adversarial", "examples", "of", "VirtualAdversarialMethod", "L", "NUMBER", "norm", "of", "MomentumIterativeMethod", "L", "NUMBER", "norm", "of", "BasicIterativeMethod", "infinity", "version", "of", "deep_fool", "NUMBER", "one", "by", "one", "NUMBER", "The", "successful", "rate", "will", "be", "printed", "NUMBER", "Because", "I", "be", "in", "hurry", "for", "doing", "an", "adversarial", "example", "research", "if", "you", "find", "the", "bug", "or", "the", "problem", "be", "please", "feel", "free", "to", "contact", "with", "me", "as", "soon", "as", "possible", "NUMBER", "My", "email", "be", "sharpstill", "NUMBER", "com", "goodfeli", "npapernot", "Do", "you", "have", "any", "progress", "on", "this", "bug", "Or", "do", "you", "have", "some", "feedback", "or", "problem", "need", "to", "let", "me", "know", "Can", "you", "explain", "a", "specific", "success", "rate", "that", "you", "expect", "for", "a", "specific", "model", "and", "set", "of", "success", "hyperparameters", "why", "you", "expect", "that", "success", "rate", "e", "NUMBER", "g", "NUMBER", "it", "was", "publish", "before", "and", "what", "success", "rate", "you", "re", "actually", "get", "goodfeli", "My", "concept", "of", "success", "rate", "be", "How", "many", "proportions", "of", "generate", "adversarial", "images", "can", "be", "misclassified", "by", "the", "classifier", "For", "example", "the", "proportions", "of", "VAT", "generate", "examples", "which", "misclassified", "by", "the", "classifier", "which", "lead", "the", "classifier", "to", "predict", "label", "other", "than", "ground", "truth", "label", "be", "about", "NUMBER", "NUMBER", "My", "expectation", "be", "above", "NUMBER", "NUMBER", "and", "L", "NUMBER", "norm", "version", "of", "BasicIterativeMethod", "BIM", "be", "much", "lower", "less", "than", "NUMBER", "NUMBER", "But", "In", "contrast", "The", "success", "rate", "of", "L", "inf", "norm", "of", "BIM", "be", "NUMBER", "use", "exactly", "the", "same", "hyper", "parameters", "of", "BIM", "L", "NUMBER", "goodfeli", "all", "the", "code", "I", "have", "summarized", "to", "the", "NUMBER", "py", "file", "which", "be", "uploaded", "in", "my", "last", "comment", "NUMBER", "You", "can", "download", "and", "run", "it", "and", "it", "also", "supplies", "all", "the", "hyper", "parameters", "I", "use", "in", "my", "experiments", "NUMBER", "for", "example", "if", "you", "use", "the", "below", "configuration", "and", "attack", "methods", "you", "will", "achieve", "definitely", "low", "attack", "successful", "rate", "on", "CIFAR", "NUMBER", "ATTACKERS", "VAT", "VirtualAdversarialMethod", "MI_FGSM_L", "NUMBER", "MomentumIterativeMethod", "BIM_L", "NUMBER", "BasicIterativeMethod", "deep_fool_L_infinity", "DeepFool", "ATTACK_PARAM", "VAT", "nb_iter", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "eps", "NUMBER", "xi", "NUMBER", "e", "NUMBER", "BIM_L", "NUMBER", "ord", "NUMBER", "rand_init", "False", "rand_minmax", "NUMBER", "nb_iter", "NUMBER", "eps_iter", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "MI_FGSM_L", "NUMBER", "ord", "NUMBER", "eps", "NUMBER", "nb_iter", "NUMBER", "decay_factor", "NUMBER", "eps_iter", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "deep_fool_L_infinity", "overshoot", "NUMBER", "max_iter", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "batch_size", "NUMBER", "Lp_norm", "np", "NUMBER", "inf", "goodfeli", "do", "you", "have", "any", "progressive", "or", "issue", "let", "me", "know", "for", "use", "my", "script", "file", "to", "reproduce", "the", "bug", "I", "assume", "this", "be", "just", "VAT", "work", "as", "intended", "NUMBER", "The", "VAT", "papers", "don", "t", "really", "use", "it", "as", "an", "attack", "or", "measure", "its", "success", "rate", "AFAIK", "NUMBER", "VAT", "be", "more", "of", "a", "dataset", "augmentation", "technique", "for", "semi", "supervised", "learning", "NUMBER", "I", "ll", "close", "this", "issue", "but", "we", "can", "re", "open", "it", "if", "anyone", "provides", "evidence", "that", "correctly", "implement", "VAT", "should", "have", "a", "high", "attack", "success", "rate", "NUMBER", "goodfeli", "OK", "but", "the", "other", "NUMBER", "L", "NUMBER", "norm", "version", "of", "attack", "algorithm", "still", "have", "lower", "than", "NUMBER", "attack", "successful", "rate", "BIM_L", "NUMBER", "ord", "NUMBER", "rand_init", "False", "rand_minmax", "NUMBER", "nb_iter", "NUMBER", "eps_iter", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "MI_FGSM_L", "NUMBER", "ord", "NUMBER", "eps", "NUMBER", "nb_iter", "NUMBER", "decay_factor", "NUMBER", "eps_iter", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "deep_fool_L_infinity", "overshoot", "NUMBER", "max_iter", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "batch_size", "NUMBER", "Lp_norm", "np", "NUMBER", "inf", "Can", "you", "reopen", "this", "question", "because", "I", "think", "there", "still", "be", "bug", "inside", "BIM", "and", "momentum", "iterative", "GSM", "at", "least", "NUMBER", "npapernot", "in", "VAT", "attack", "I", "observe", "the", "attack", "successful", "rate", "be", "NUMBER", "NUMBER", "My", "expectation", "be", "above", "NUMBER", "NUMBER", "And", "in", "L", "NUMBER", "norm", "of", "BIM", "and", "L", "NUMBER", "norm", "of", "momentum", "iterative", "FGSM", "MI", "FGSM", "both", "attacks", "achieve", "successful", "rate", "less", "than", "NUMBER", "NUMBER", "But", "the", "successful", "rate", "of", "L", "inf", "norm", "of", "BIM", "and", "MI", "FGSM", "be", "NUMBER", "NUMBER", "npapernot", "BTW", "I", "use", "CIFAR_", "NUMBER", "to", "conduct", "my", "experiment", "please", "download", "my", "script", "file", "to", "run", "NUMBER", "attacker_bug_report_script", "NUMBER", "zip", "LINK", "_bug_report_script", "NUMBER", "zip", "Cleverhans", "docs", "attack", "list", "page", "here", "LINK", "be", "currently", "empty", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "aff", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "af", "NUMBER", "a", "NUMBER", "d", "NUMBER", "png", "I", "imagine", "this", "be", "because", "I", "recently", "moved", "each", "attack", "into", "its", "own", "submodules", "NUMBER", "nottombrown", "be", "there", "something", "I", "need", "to", "do", "to", "register", "the", "new", "submodules", "with", "the", "doc", "system", "Ah", "sorry", "for", "the", "slow", "response", "NUMBER", "It", "looks", "like", "my", "github", "update", "were", "be", "filtered", "NUMBER", "npapernot", "I", "ve", "add", "you", "as", "a", "maintainer", "of", "the", "readthedocs", "project", "here", "LINK", "Line", "NUMBER", "in", "utils_pytorch", "NUMBER", "py", "param", "model", "A", "pytorch", "nn", "NUMBER", "Model", "object", "Do", "you", "mean", "a", "pytorch", "nn", "NUMBER", "Module", "object", "NUMBER", "Not", "sure", "what", "a", "nn", "NUMBER", "Model", "be", "NUMBER", "Indeed", "it", "should", "say", "module", "NUMBER", "Submitting", "a", "fix", "in", "a", "minute", "or", "two", "NUMBER", "This", "drops", "support", "for", "Python", "NUMBER", "It", "also", "change", "all", "uses", "of", "keras", "to", "tensorflow", "NUMBER", "keras", "which", "exists", "in", "all", "the", "support", "version", "of", "tensorflow", "rather", "than", "standalone", "keras", "NUMBER", "it", "looks", "like", "from", "tensorflow", "import", "keras", "works", "and", "causes", "the", "JSON", "file", "to", "get", "regenerated", "so", "I", "ll", "switch", "to", "that", "goodfeli", "could", "you", "double", "check", "I", "think", "I", "recall", "you", "setting", "this", "to", "be", "float", "NUMBER", "It", "seems", "easiest", "to", "me", "to", "pull", "this", "in", "for", "now", "and", "then", "revisit", "later", "NUMBER", "I", "m", "going", "to", "eventually", "want", "to", "pass", "over", "all", "this", "code", "to", "check", "that", "it", "s", "performant", "and", "scrutinize", "which", "parts", "be", "run", "on", "CPU", "TPU", "and", "whether", "that", "s", "appropriate", "NUMBER", "but", "for", "now", "get", "it", "to", "run", "at", "all", "be", "a", "bigger", "priority", "NUMBER", "This", "looks", "good", "can", "you", "confirm", "there", "be", "no", "code", "additions", "in", "the", "attack", "classes", "This", "be", "just", "moving", "things", "around", "I", "have", "thought", "about", "re", "implement", "universal", "adversarial", "perturbation", "use", "a", "trained", "model", "and", "cleverhans", "NUMBER", "As", "the", "previous", "stage", "I", "search", "for", "a", "examples", "that", "uses", "trained", "model", "to", "output", "something", "Adversarial", "Examples", "NUMBER", "For", "that", "reason", "I", "ve", "tried", "use", "attack_fgsm", "NUMBER", "py", "from", "nips", "NUMBER", "_adversarial_competition", "NUMBER", "LINK", "_adversarial_competition", "dev_toolkit", "sample_attacks", "fgsm", "attack_fgsm", "NUMBER", "py", "foremost", "I", "made", "change", "to", "the", "directory", "as", "follows", "NUMBER", "fgsm", "nbsp", "nbsp", "nbsp", "input", "nbsp", "nbsp", "nbsp", "nbsp", "nbsp", "nbsp", "some", "images", "nbsp", "nbsp", "nbsp", "output", "nbsp", "nbsp", "nbsp", "nbsp", "nbsp", "nbsp", "empty", "directory", "nbsp", "nbsp", "nbsp", "inception_v", "NUMBER", "ckpt", "nbsp", "nbsp", "nbsp", "atack_fgsm", "NUMBER", "py", "nbsp", "nbsp", "nbsp", "metadata", "NUMBER", "json", "nbsp", "nbsp", "nbsp", "run_attack", "NUMBER", "sh", "Next", "I", "fix", "part", "of", "attack_fgsm", "NUMBER", "py", "as", "follows", "NUMBER", "tf", "NUMBER", "flags", "NUMBER", "DEFINE_string", "master", "The", "address", "of", "the", "TensorFlow", "master", "to", "use", "NUMBER", "tf", "NUMBER", "flags", "NUMBER", "DEFINE_string", "checkpoint_path", "inception_v", "NUMBER", "ckpt", "Path", "to", "checkpoint", "for", "inception", "network", "NUMBER", "tf", "NUMBER", "flags", "NUMBER", "DEFINE_string", "input_dir", "input", "Input", "directory", "with", "images", "NUMBER", "tf", "NUMBER", "flags", "NUMBER", "DEFINE_string", "output_dir", "output", "Output", "directory", "with", "images", "NUMBER", "I", "execution", "attack_fgsm", "NUMBER", "py", "in", "this", "state", "and", "the", "following", "error", "appeared", "NUMBER", "fprop", "not", "implement", "NUMBER", "stack", "trace", "File", "G", "downloads", "cleverhans", "master", "cleverhans", "master", "examples", "nips", "NUMBER", "_adversarial_competition", "dev_toolkit", "sample_attacks", "fgsm", "attack_fgsm", "NUMBER", "py", "line", "NUMBER", "in", "main", "save_images", "adv_images", "filenames", "FLAGS", "NUMBER", "output_dir", "File", "G", "downloads", "cleverhans", "master", "cleverhans", "master", "examples", "nips", "NUMBER", "_adversarial_competition", "dev_toolkit", "sample_attacks", "fgsm", "attack_fgsm", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "tf", "NUMBER", "app", "NUMBER", "run", "__main__", "\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3057\u305f", "tensorflow", "NUMBER", "python", "NUMBER", "platform", "NUMBER", "app", "\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3057\u305f", "Backend", "TkAgg", "be", "interactive", "backend", "NUMBER", "Turning", "interactive", "mode", "on", "NUMBER", "The", "program", "be", "stopped", "at", "the", "following", "location", "NUMBER", "LINK", "_adversarial_competition", "dev_toolkit", "sample_attacks", "fgsm", "attack_fgsm", "NUMBER", "py", "L", "NUMBER", "How", "can", "I", "resolve", "this", "error", "Sorry", "NUMBER", "This", "problem", "was", "cause", "by", "the", "change", "of", "InceptionModel", "inheritance", "from", "object", "class", "to", "Model", "class", "NUMBER", "But", "when", "I", "undo", "this", "change", "I", "get", "a", "new", "error", "NUMBER", "G", "fgsm", "py", "NUMBER", "exe", "attack_fgsm", "NUMBER", "py", "Traceback", "most", "recent", "call", "last", "File", "attack_fgsm", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "tf", "NUMBER", "app", "NUMBER", "run", "File", "C", "Program", "Files", "x", "NUMBER", "Microsoft", "Visual", "Studio", "Shared", "Python", "NUMBER", "_", "NUMBER", "lib", "site", "package", "tensorflow", "python", "platform", "app", "NUMBER", "py", "line", "NUMBER", "in", "run", "_sys", "NUMBER", "exit", "main", "argv", "File", "attack_fgsm", "NUMBER", "py", "line", "NUMBER", "in", "main", "fgsm", "FastGradientMethod", "model", "File", "C", "Program", "Files", "x", "NUMBER", "Microsoft", "Visual", "Studio", "Shared", "Python", "NUMBER", "_", "NUMBER", "lib", "site", "package", "cleverhans", "attacks", "__init__", "NUMBER", "py", "line", "NUMBER", "in", "__init__", "super", "FastGradientMethod", "self", "NUMBER", "__init__", "model", "sess", "dtypestr", "kwargs", "File", "C", "Program", "Files", "x", "NUMBER", "Microsoft", "Visual", "Studio", "Shared", "Python", "NUMBER", "_", "NUMBER", "lib", "site", "package", "cleverhans", "attacks", "__init__", "NUMBER", "py", "line", "NUMBER", "in", "__init__", "raise", "TypeError", "The", "model", "argument", "should", "be", "an", "instance", "of", "TypeError", "The", "model", "argument", "should", "be", "an", "instance", "of", "the", "cleverhans", "NUMBER", "model", "NUMBER", "Model", "class", "NUMBER", "I", "guess", "this", "be", "due", "to", "the", "inheritance", "class", "of", "the", "following", "line", "how", "can", "i", "fix", "NUMBER", "LINK", "_adversarial_competition", "dev_toolkit", "sample_attacks", "fgsm", "attack_fgsm", "NUMBER", "py", "L", "NUMBER", "I", "had", "forgotten", "about", "version", "of", "CleverHans", "NUMBER", "I", "want", "to", "make", "this", "source", "work", "even", "in", "the", "latest", "version", "library", "NUMBER", "I", "rewrote", "Inception", "Model", "class", "based", "on", "the", "following", "source", "and", "it", "worked", "well", "NUMBER", "LINK", "_imagenet_attacks", "NUMBER", "py", "L", "NUMBER", "Thank", "you", "NUMBER", "My", "change", "full", "source", "code", "NUMBER", "from", "__future__", "import", "absolute_import", "from", "__future__", "import", "division", "from", "__future__", "import", "print_function", "import", "os", "import", "warnings", "import", "numpy", "as", "np", "import", "tensorflow", "as", "tf", "from", "tensorflow", "NUMBER", "contrib", "NUMBER", "slim", "NUMBER", "nets", "import", "inception", "from", "PIL", "import", "Image", "from", "cleverhans", "NUMBER", "model", "import", "Model", "from", "cleverhans", "NUMBER", "attacks", "import", "FastGradientMethod", "DeepFool", "slim", "tf", "NUMBER", "contrib", "NUMBER", "slim", "tf", "NUMBER", "flags", "NUMBER", "DEFINE_string", "master", "The", "address", "of", "the", "TensorFlow", "master", "to", "use", "NUMBER", "tf", "NUMBER", "flags", "NUMBER", "DEFINE_string", "checkpoint_path", "inception_v", "NUMBER", "ckpt", "Path", "to", "checkpoint", "for", "inception", "network", "NUMBER", "tf", "NUMBER", "flags", "NUMBER", "DEFINE_string", "input_dir", "input", "Input", "directory", "with", "images", "NUMBER", "tf", "NUMBER", "flags", "NUMBER", "DEFINE_string", "output_dir", "output", "Output", "directory", "with", "images", "NUMBER", "tf", "NUMBER", "flags", "NUMBER", "DEFINE_float", "max_epsilon", "NUMBER", "Maximum", "size", "of", "adversarial", "perturbation", "NUMBER", "tf", "NUMBER", "flags", "NUMBER", "DEFINE_integer", "image_width", "NUMBER", "Width", "of", "each", "input", "images", "NUMBER", "tf", "NUMBER", "flags", "NUMBER", "DEFINE_integer", "image_height", "NUMBER", "Height", "of", "each", "input", "images", "NUMBER", "tf", "NUMBER", "flags", "NUMBER", "DEFINE_integer", "batch_size", "NUMBER", "How", "many", "images", "process", "at", "one", "time", "NUMBER", "FLAGS", "tf", "NUMBER", "flags", "NUMBER", "FLAGS", "def", "load_images", "input_dir", "batch_shape", "Read", "png", "images", "from", "input", "directory", "in", "batches", "NUMBER", "Args", "input_dir", "input", "directory", "batch_shape", "shape", "of", "minibatch", "array", "i", "NUMBER", "e", "NUMBER", "batch_size", "height", "width", "NUMBER", "Yields", "filenames", "list", "file", "names", "without", "path", "of", "each", "image", "Lenght", "of", "this", "list", "could", "be", "less", "than", "batch_size", "in", "this", "case", "only", "first", "few", "images", "of", "the", "result", "be", "elements", "of", "the", "minibatch", "NUMBER", "images", "array", "with", "all", "images", "from", "this", "batch", "images", "np", "NUMBER", "zeros", "batch_shape", "filenames", "idx", "NUMBER", "batch_size", "batch_shape", "NUMBER", "for", "filepath", "in", "tf", "NUMBER", "gfile", "NUMBER", "Glob", "os", "NUMBER", "path", "NUMBER", "join", "input_dir", "NUMBER", "png", "print", "filepath", "change", "open", "method", "NUMBER", "This", "change", "has", "no", "impact", "for", "code", "with", "open", "filepath", "rb", "as", "f", "image", "np", "NUMBER", "array", "Image", "NUMBER", "open", "f", "NUMBER", "convert", "RGB", "NUMBER", "astype", "np", "NUMBER", "float", "NUMBER", "Images", "for", "inception", "classifier", "be", "normalized", "to", "be", "in", "NUMBER", "NUMBER", "interval", "NUMBER", "images", "idx", "image", "NUMBER", "NUMBER", "filenames", "NUMBER", "append", "os", "NUMBER", "path", "NUMBER", "basename", "filepath", "idx", "NUMBER", "if", "idx", "batch_size", "yield", "filenames", "images", "filenames", "images", "np", "NUMBER", "zeros", "batch_shape", "idx", "NUMBER", "if", "idx", "NUMBER", "yield", "filenames", "images", "def", "save_images", "images", "filenames", "output_dir", "Saves", "images", "to", "the", "output", "directory", "NUMBER", "Args", "images", "array", "with", "minibatch", "of", "images", "filenames", "list", "of", "filenames", "without", "path", "If", "number", "of", "file", "names", "in", "this", "list", "less", "than", "number", "of", "images", "in", "the", "minibatch", "then", "only", "first", "len", "filenames", "images", "will", "be", "saved", "NUMBER", "output_dir", "directory", "where", "to", "save", "images", "for", "i", "filename", "in", "enumerate", "filenames", "Images", "for", "inception", "classifier", "be", "normalized", "to", "be", "in", "NUMBER", "NUMBER", "interval", "so", "rescale", "them", "back", "to", "NUMBER", "NUMBER", "NUMBER", "with", "tf", "NUMBER", "gfile", "NUMBER", "Open", "os", "NUMBER", "path", "NUMBER", "join", "output_dir", "filename", "w", "as", "f", "img", "images", "i", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "astype", "np", "NUMBER", "uint", "NUMBER", "Image", "NUMBER", "fromarray", "img", "NUMBER", "save", "f", "format", "PNG", "change", "Model", "from", "object", "class", "InceptionModel", "Model", "Model", "class", "for", "CleverHans", "library", "NUMBER", "def", "__init__", "self", "nb_classes", "super", "InceptionModel", "self", "NUMBER", "__init__", "nb_classes", "nb_classes", "needs_dummy_fprop", "True", "self", "NUMBER", "build", "False", "def", "__call__", "self", "x_input", "return_logits", "False", "Constructs", "model", "and", "return", "probabilities", "for", "given", "input", "NUMBER", "reuse", "True", "if", "self", "NUMBER", "build", "else", "None", "with", "slim", "NUMBER", "arg_scope", "inception", "NUMBER", "inception_v", "NUMBER", "_arg_scope", "Inception", "preprocessing", "uses", "NUMBER", "NUMBER", "scaled", "input", "NUMBER", "x_input", "x_input", "NUMBER", "NUMBER", "_", "end_points", "inception", "NUMBER", "inception_v", "NUMBER", "x_input", "num_classes", "self", "NUMBER", "nb_classes", "is_training", "False", "reuse", "reuse", "self", "NUMBER", "build", "True", "self", "NUMBER", "logits", "end_points", "Logits", "Strip", "off", "the", "extra", "reshape", "op", "at", "the", "output", "self", "NUMBER", "probs", "end_points", "Predictions", "NUMBER", "op", "NUMBER", "inputs", "NUMBER", "if", "return_logits", "return", "self", "NUMBER", "logits", "else", "return", "self", "NUMBER", "probs", "def", "get_logits", "self", "x_input", "return", "self", "x_input", "return_logits", "True", "def", "get_probs", "self", "x_input", "return", "self", "x_input", "def", "main", "_", "Run", "the", "sample", "attack", "Images", "for", "inception", "classifier", "be", "normalized", "to", "be", "in", "NUMBER", "NUMBER", "interval", "eps", "be", "a", "difference", "between", "pixels", "so", "it", "should", "be", "in", "NUMBER", "NUMBER", "interval", "NUMBER", "Renormalizing", "epsilon", "from", "NUMBER", "NUMBER", "to", "NUMBER", "NUMBER", "NUMBER", "eps", "NUMBER", "FLAGS", "NUMBER", "max_epsilon", "NUMBER", "batch_shape", "FLAGS", "NUMBER", "batch_size", "FLAGS", "NUMBER", "image_height", "FLAGS", "NUMBER", "image_width", "NUMBER", "nb_classes", "NUMBER", "tf", "NUMBER", "logging", "NUMBER", "set_verbosity", "tf", "NUMBER", "logging", "NUMBER", "INFO", "with", "tf", "NUMBER", "Graph", "NUMBER", "as_default", "Prepare", "graph", "x_input", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "shape", "batch_shape", "model", "InceptionModel", "nb_classes", "fgsm", "FastGradientMethod", "model", "x_adv", "fgsm", "NUMBER", "generate", "x_input", "eps", "eps", "clip_min", "NUMBER", "clip_max", "NUMBER", "Run", "computation", "saver", "tf", "NUMBER", "train", "NUMBER", "Saver", "slim", "NUMBER", "get_model_variables", "session_creator", "tf", "NUMBER", "train", "NUMBER", "ChiefSessionCreator", "scaffold", "tf", "NUMBER", "train", "NUMBER", "Scaffold", "saver", "saver", "checkpoint_filename_with_path", "FLAGS", "NUMBER", "checkpoint_path", "master", "FLAGS", "NUMBER", "master", "with", "tf", "NUMBER", "train", "NUMBER", "MonitoredSession", "session_creator", "session_creator", "as", "sess", "for", "filenames", "images", "in", "load_images", "FLAGS", "NUMBER", "input_dir", "batch_shape", "adv_images", "sess", "NUMBER", "run", "x_adv", "feed_dict", "x_input", "images", "save_images", "adv_images", "filenames", "FLAGS", "NUMBER", "output_dir", "if", "__name__", "__main__", "tf", "NUMBER", "app", "NUMBER", "run", "When", "I", "try", "to", "run", "the", "MomentumIterativeMethod", "I", "get", "an", "Internal", "Error", "claiming", "that", "it", "be", "an", "internal", "bug", "NUMBER", "Code", "method", "MomentumIterativeMethod", "wrap", "sess", "sess", "x", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "shape", "ph_shape", "x_adv", "method", "NUMBER", "generate", "x", "params", "Consider", "the", "attack", "to", "be", "constant", "x_adv", "tf", "NUMBER", "op_gradient", "x_adv", "x_adv_np", "sess", "NUMBER", "run", "x_adv", "feed_dict", "x", "x_np", "Error", "InternalError", "Invalid", "loop", "structure", "Mismatched", "parent", "frames", "for", "while", "while_context", "while", "while_context", "vs", "NUMBER", "The", "node", "giving", "this", "error", "node", "while", "gradients", "while", "model_", "NUMBER", "dropout_", "NUMBER", "cond", "mul_grad", "Shape", "Enter", "defined", "at", "NUMBER", "cleverhans", "cleverhans", "attacks", "__init__", "NUMBER", "py", "NUMBER", "This", "be", "an", "internal", "bug", "please", "file", "a", "bug", "report", "with", "instructions", "on", "how", "to", "reproduce", "the", "error", "NUMBER", "System", "configuration", "Python", "version", "NUMBER", "TensorFlow", "version", "NUMBER", "Looks", "like", "another", "instance", "of", "LINK", "as", "point", "out", "in", "NUMBER", "Unfortunately", "there", "be", "no", "know", "solutions", "yet", "kojino", "Were", "you", "able", "to", "find", "any", "workaround", "for", "now", "How", "to", "store", "the", "CIFAR", "NUMBER", "model", "from", "the", "tutorial", "LINK", "_tutorials", "cifar", "NUMBER", "_tutorial_tf", "NUMBER", "py", "I", "tried", "doing", "the", "same", "as", "in", "the", "MNIST", "tutorial", "by", "write", "the", "following", "after", "the", "model", "has", "be", "trained", "line", "NUMBER", "LINK", "_tutorials", "cifar", "NUMBER", "_tutorial_tf", "NUMBER", "py", "L", "NUMBER", "with", "sess", "NUMBER", "as_default", "save", "cleanCIFAR", "NUMBER", "Model", "NUMBER", "joblib", "model", "The", "model", "trains", "succesfully", "but", "while", "trying", "to", "store", "it", "with", "the", "above", "code", "the", "following", "exception", "occur", "TypeError", "can", "t", "pickle", "_thread", "NUMBER", "RLock", "objects", "NUMBER", "The", "model", "from", "the", "MNIST", "tutorial", "be", "stored", "in", "exactly", "the", "same", "way", "pasting", "the", "above", "code", "after", "the", "training", "code", "NUMBER", "The", "only", "notable", "difference", "between", "the", "MNIST", "and", "CIFAR", "tutorials", "be", "the", "preprocessing", "at", "lines", "NUMBER", "NUMBER", "LINK", "_tutorials", "cifar", "NUMBER", "_tutorial_tf", "NUMBER", "py", "L", "NUMBER", "NUMBER", "I", "suspect", "the", "exception", "be", "cause", "by", "the", "lambda", "LINK", "keras", "model", "typeerror", "cant", "pickle", "thread", "lock", "objects", "at", "lines", "NUMBER", "NUMBER", "since", "x", "and", "y", "be", "tf", "NUMBER", "float", "NUMBER", "s", "and", "Keras", "do", "not", "support", "serializing", "tf", "NUMBER", "Tensor", "Any", "suggestions", "for", "how", "to", "store", "the", "CIFAR", "model", "from", "this", "tutorial", "AttributeError", "float", "object", "has", "no", "attribute", "dtype", "NUMBER", "python", "NUMBER", "site", "package", "cleverhans", "attacks", "NUMBER", "py", "line", "NUMBER", "in", "generate", "dtype", "self", "NUMBER", "eps", "NUMBER", "dtype", "when", "I", "run", "BasicIterativeMethod", "to", "craft", "BIM", "adversarial", "example", "with", "params", "bim_paras", "clip_min", "NUMBER", "clip_max", "NUMBER", "y_target", "None", "i", "just", "comment", "out", "this", "line", "NUMBER", "and", "it", "run", "correctly", "NUMBER", "win", "NUMBER", "ubuntu", "python", "NUMBER", "I", "ve", "just", "realized", "that", "there", "be", "a", "bug", "in", "the", "implementation", "of", "the", "deepfool", "attack", "on", "cleverhans", "NUMBER", "I", "tried", "use", "the", "original", "source", "code", "implement", "in", "pytorch", "and", "the", "cleverhans", "code", "with", "the", "same", "parameters", "same", "environment", "and", "on", "the", "same", "image", "and", "the", "output", "was", "completely", "different", "I", "contacted", "the", "author", "of", "the", "paper", "and", "he", "told", "that", "he", "doesn", "t", "know", "about", "the", "cleverhans", "implementation", "and", "adviced", "me", "to", "use", "his", "own", "implementation", "Thanks", "for", "bring", "this", "issue", "NUMBER", "For", "the", "network", "use", "in", "pytorch", "code", "and", "the", "network", "use", "in", "tensorflow", "code", "do", "they", "have", "exactly", "the", "same", "parameter", "i", "NUMBER", "e", "NUMBER", "their", "network", "structures", "and", "weights", "be", "exactly", "the", "same", "If", "they", "be", "the", "same", "i", "think", "there", "should", "be", "a", "bug", "here", "NUMBER", "If", "they", "be", "not", "exactly", "the", "same", "the", "outputs", "should", "be", "completely", "different", "NUMBER", "Thanks", "for", "your", "reply", "when", "you", "say", "network", "be", "you", "talking", "about", "the", "classification", "s", "model", "use", "for", "instance", "inception", "v", "NUMBER", "or", "resnet", "etc", "NUMBER", "If", "so", "be", "quite", "sure", "that", "it", "s", "the", "same", "as", "be", "work", "on", "the", "inceptionv", "NUMBER", "for", "both", "On", "Tue", "Nov", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "PM", "Cihang", "Xie", "TAG", "write", "Thanks", "for", "bring", "this", "issue", "NUMBER", "For", "the", "network", "use", "in", "pytorch", "code", "and", "the", "network", "use", "in", "tensorflow", "code", "do", "they", "have", "exactly", "the", "same", "parameter", "i", "NUMBER", "e", "NUMBER", "their", "network", "structures", "and", "weights", "be", "exactly", "the", "same", "If", "they", "be", "the", "same", "i", "think", "there", "should", "be", "a", "bug", "here", "NUMBER", "If", "they", "be", "not", "exactly", "the", "same", "the", "outputs", "should", "be", "completely", "different", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Yes", "inceptionv", "NUMBER", "be", "the", "network", "structure", "NUMBER", "Do", "these", "two", "inceptionv", "NUMBER", "have", "the", "same", "weights", "For", "example", "by", "feeding", "the", "same", "image", "to", "these", "two", "inceptionv", "NUMBER", "do", "they", "output", "the", "same", "NUMBER", "NUMBER", "dimension", "logit", "Yep", "it", "s", "the", "same", "model", "on", "both", "could", "you", "please", "provide", "the", "checkpoints", "of", "your", "inceptionv", "NUMBER", "in", "tensorflow", "and", "in", "pytorch", "You", "can", "check", "the", "NUMBER", "implementations", "here", "LINK", "team", "keras", "applications", "blob", "master", "keras_applications", "inception_v", "NUMBER", "py", "and", "here", "LINK", "The", "architecture", "be", "the", "same", "taken", "from", "Rethinking", "the", "Inception", "Architecture", "for", "Computer", "Vision", "However", "the", "trainining", "process", "be", "not", "the", "same", "keras", "model", "be", "use", "inception_v", "NUMBER", "_weights_tf_dim_ordering_tf_kernels", "NUMBER", "h", "NUMBER", "and", "the", "Torchvision", "model_zoo", "NUMBER", "load_url", "model_urls", "inception_v", "NUMBER", "_google", "But", "i", "think", "it", "s", "not", "the", "case", "of", "the", "probleme", "because", "when", "use", "the", "keras", "model", "on", "the", "Cleverhans", "s", "deepfool", "implementation", "although", "i", "augment", "the", "perturbations", "it", "seems", "it", "s", "not", "perturbing", "the", "image", "and", "nothing", "happens", "NUMBER", "Here", "be", "my", "code", "import", "numpy", "as", "np", "import", "keras", "from", "keras", "import", "backend", "import", "tensorflow", "as", "tf", "from", "cleverhans", "NUMBER", "utils_keras", "import", "KerasModelWrapper", "from", "keras", "NUMBER", "applications", "import", "inception_v", "NUMBER", "import", "cleverhans", "NUMBER", "attacks", "import", "scipy", "NUMBER", "misc", "keras_model", "inception_v", "NUMBER", "InceptionV", "NUMBER", "weights", "imagenet", "Set", "the", "learning", "phase", "to", "false", "the", "model", "be", "pre", "trained", "NUMBER", "backend", "NUMBER", "set_learning_phase", "False", "Set", "TF", "random", "seed", "to", "improve", "reproducibility", "tf", "NUMBER", "set_random_seed", "NUMBER", "if", "keras", "NUMBER", "backend", "NUMBER", "image_dim_ordering", "tf", "keras", "NUMBER", "backend", "NUMBER", "set_image_dim_ordering", "tf", "print", "INFO", "NUMBER", "keras", "keras", "NUMBER", "json", "sets", "image_dim_ordering", "to", "th", "temporarily", "setting", "to", "tf", "Retrieve", "the", "tensorflow", "session", "sess", "backend", "NUMBER", "get_session", "image", "scipy", "NUMBER", "misc", "NUMBER", "imread", "input_image", "NUMBER", "png", "Resizing", "the", "image", "to", "be", "of", "size", "NUMBER", "NUMBER", "image", "np", "NUMBER", "array", "scipy", "NUMBER", "misc", "NUMBER", "imresize", "image", "NUMBER", "NUMBER", "dtype", "np", "NUMBER", "float", "NUMBER", "converting", "each", "pixel", "to", "the", "range", "NUMBER", "NUMBER", "Normalization", "image", "np", "NUMBER", "array", "image", "NUMBER", "wrap", "KerasModelWrapper", "keras_model", "deepfool", "cleverhans", "NUMBER", "attacks", "NUMBER", "DeepFool", "wrap", "sess", "sess", "deepfool_params", "nb_candidate", "NUMBER", "overshoot", "NUMBER", "max_iter", "NUMBER", "nb_classes", "None", "clip_min", "NUMBER", "clip_max", "NUMBER", "adv_deepfool", "deepfool", "NUMBER", "generate_np", "image", "deepfool_params", "scipy", "NUMBER", "misc", "NUMBER", "imsave", "adversarial_deepfool", "NUMBER", "png", "adv_deepfool", "NUMBER", "The", "code", "you", "put", "here", "be", "not", "relevant", "to", "the", "question", "NUMBER", "You", "need", "to", "confirm", "if", "these", "two", "networks", "have", "exactly", "the", "same", "architecture", "and", "exactly", "the", "same", "weights", "NUMBER", "It", "seems", "that", "you", "confirm", "the", "first", "point", "but", "not", "verify", "the", "second", "point", "yet", "NUMBER", "If", "these", "two", "networks", "be", "independently", "trained", "but", "not", "use", "some", "tool", "to", "convert", "torch", "models", "to", "tf", "models", "or", "vice", "versa", "the", "attack", "results", "should", "be", "different", "since", "gradient", "be", "a", "function", "of", "weights", "NUMBER", "Yes", "i", "know", "what", "you", "be", "talking", "about", "i", "know", "that", "the", "attack", "will", "not", "be", "the", "same", "on", "the", "two", "models", "since", "they", "have", "maybe", "different", "weights", "as", "they", "were", "trained", "independently", "the", "issue", "was", "that", "the", "deepfool", "attack", "be", "not", "work", "on", "cleverhans", "NUMBER", "that", "be", "why", "i", "posted", "the", "code", "because", "i", "tried", "a", "plethora", "of", "deepfool", "s", "parameters", "differenciations", "and", "i", "figured", "out", "that", "it", "be", "really", "not", "work", "on", "the", "keras", "pretrained", "inceptionv", "NUMBER", "That", "s", "my", "problem", "NUMBER", "Then", "i", "taught", "that", "the", "problem", "was", "in", "my", "code", "so", "i", "tried", "the", "C", "W", "attack", "use", "roughly", "the", "same", "implementation", "and", "it", "works", "normally", "Thanks", "for", "your", "time", "and", "your", "help", "Oh", "now", "I", "get", "your", "point", "NUMBER", "I", "will", "take", "a", "look", "NUMBER", "Thanks", "for", "clarifying", "NUMBER", "Dear", "all", "I", "just", "upgrade", "to", "cleverhans", "NUMBER", "version", "and", "it", "seems", "like", "the", "attacks", "be", "get", "a", "lot", "slower", "for", "instance", "a", "Pgd", "attack", "was", "taking", "only", "NUMBER", "mn", "to", "generate", "the", "adversarial", "image", "but", "now", "it", "be", "taking", "about", "an", "hour", "and", "a", "half", "to", "generate", "it", "and", "I", "could", "not", "downgrade", "to", "NUMBER", "as", "it", "doesn", "t", "exist", "anymore", "in", "pypi", "Is", "there", "an", "explanation", "for", "this", "problem", "be", "it", "a", "problem", "with", "the", "tensorflow", "s", "graph", "generation", "I", "be", "use", "tensorflow", "version", "NUMBER", "Cleverhans", "version", "NUMBER", "Python", "version", "NUMBER", "Yes", "the", "old", "version", "NUMBER", "be", "still", "in", "pypi", "and", "you", "can", "get", "it", "simply", "by", "run", "pip", "NUMBER", "install", "cleverhans", "NUMBER", "Thank", "you", "for", "your", "responds", "Best", "On", "Mon", "Nov", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "PM", "Nicolas", "Papernot", "TAG", "write", "I", "responded", "to", "B", "Yassine", "TAG", "s", "email", "and", "just", "saw", "this", "NUMBER", "For", "everyone", "else", "reading", "this", "the", "old", "version", "be", "still", "in", "pypi", "current", "version", "v", "NUMBER", "LINK", "older", "version", "v", "NUMBER", "LINK", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Yes", "of", "course", "because", "be", "very", "interested", "in", "this", "domain", "as", "I", "be", "preparing", "my", "Master", "thesis", "and", "be", "able", "to", "contribute", "will", "be", "a", "honor", "for", "me", "NUMBER", "I", "think", "there", "s", "another", "problem", "with", "the", "deepfool", "attack", "as", "I", "tried", "there", "source", "code", "implement", "in", "Pytorch", "and", "use", "the", "cleverhans", "implementation", "with", "the", "same", "parameters", "and", "the", "same", "model", "inception", "v", "NUMBER", "and", "the", "results", "where", "differents", "The", "author", "told", "me", "that", "he", "doesn", "t", "know", "about", "the", "cleverhans", "implementation", "and", "adviced", "me", "to", "use", "its", "own", "implementation", "Best", "Yassine", "On", "Mon", "Nov", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "PM", "Ian", "Goodfellow", "TAG", "write", "Do", "you", "still", "want", "us", "to", "help", "debug", "the", "slowness", "in", "v", "NUMBER", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "For", "the", "deepfool", "attack", "i", "think", "it", "has", "to", "be", "opened", "as", "another", "issue", "Thanks", "a", "lot", "so", "the", "problem", "has", "be", "resolve", "by", "downgrading", "to", "the", "previous", "version", "NUMBER", "and", "it", "can", "be", "do", "by", "run", "pip", "install", "cleverhans", "NUMBER", "and", "make", "sure", "it", "be", "run", "on", "gpu", "Train", "an", "MNIST", "model", "train_params", "nb_epochs", "nb_epochs", "batch_size", "batch_size", "learning_rate", "learning_rate", "train", "sess", "loss", "x_train", "y_train", "args", "train_params", "rng", "rng", "I", "understand", "this", "part", "but", "what", "I", "m", "trying", "to", "achieve", "be", "to", "train", "it", "with", "scikitlearn", "Random", "Forest", "like", "model", "RandomForestClassifier", "max_depth", "args", "NUMBER", "max_dep", "n_estimators", "args", "NUMBER", "n_est", "max_features", "None", "n_jobs", "NUMBER", "Any", "suggestion", "how", "can", "I", "do", "that", "Sorry", "if", "its", "a", "stupid", "question", "I", "be", "a", "newbie", "Hi", "everyone", "Currently", "I", "m", "trying", "to", "attack", "Inception_v", "NUMBER", "model", "with", "iterative", "methods", "such", "as", "ProjectedGradientDescent", "and", "MomentumIterativeMethod", "NUMBER", "With", "FGSM", "everything", "works", "fine", "but", "with", "iterative", "methods", "I", "get", "an", "error", "AttributeError", "NoneType", "object", "has", "no", "attribute", "get_shape", "The", "problem", "be", "that", "tf", "NUMBER", "gradients", "function", "in", "body", "of", "tf", "NUMBER", "while_loop", "returns", "None", "NUMBER", "Everything", "works", "fine", "with", "ModelBasicCNN", "model", "so", "I", "guess", "the", "there", "be", "something", "wrong", "with", "my", "InceptionModel", "class", "from", "tensorflow", "NUMBER", "contrib", "NUMBER", "slim", "NUMBER", "nets", "import", "inception", "class", "InceptionModel", "Model", "def", "__init__", "self", "scope", "nb_classes", "kwargs", "del", "kwargs", "Model", "NUMBER", "__init__", "self", "scope", "nb_classes", "locals", "self", "NUMBER", "fprop", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "batch_shape", "def", "fprop", "self", "x", "kwargs", "del", "kwargs", "with", "slim", "NUMBER", "arg_scope", "inception", "NUMBER", "inception_v", "NUMBER", "_arg_scope", "logits", "end_points", "inception", "NUMBER", "inception_v", "NUMBER", "x_input", "num_classes", "self", "NUMBER", "nb_classes", "is_training", "False", "reuse", "tf", "NUMBER", "AUTO_REUSE", "return", "self", "NUMBER", "O_LOGITS", "logits", "self", "NUMBER", "O_PROBS", "tf", "NUMBER", "nn", "NUMBER", "softmax", "logits", "logits", "Using", "VGG", "NUMBER", "architecture", "instead", "of", "Inception", "gives", "the", "same", "error", "NUMBER", "I", "m", "new", "to", "TensorFlow", "and", "I", "can", "t", "figure", "out", "how", "to", "solve", "this", "problem", "NUMBER", "Thank", "you", "in", "advance", "for", "your", "help", "So", "there", "s", "good", "news", "and", "bad", "news", "NUMBER", "thumbsup", "The", "good", "news", "be", "that", "everyone", "that", "needs", "to", "sign", "a", "CLA", "the", "pull", "request", "submitter", "and", "all", "commit", "authors", "have", "do", "so", "NUMBER", "Everything", "be", "all", "good", "there", "NUMBER", "confused", "The", "bad", "news", "be", "that", "it", "appears", "that", "one", "or", "more", "commit", "were", "authored", "or", "co", "authored", "by", "someone", "other", "than", "the", "pull", "request", "submitter", "NUMBER", "We", "need", "to", "confirm", "that", "all", "authors", "be", "ok", "with", "their", "commit", "be", "contributed", "to", "this", "project", "NUMBER", "Please", "have", "them", "confirm", "that", "here", "in", "the", "pull", "request", "NUMBER", "Note", "to", "project", "maintainer", "This", "be", "a", "terminal", "state", "meaning", "the", "cla", "google", "commit", "status", "will", "not", "change", "from", "this", "state", "NUMBER", "It", "s", "up", "to", "you", "to", "confirm", "consent", "of", "all", "the", "commit", "author", "s", "set", "the", "cla", "label", "to", "yes", "if", "enable", "on", "your", "project", "and", "then", "merge", "this", "pull", "request", "when", "appropriate", "NUMBER", "TAG", "Hello", "all", "I", "be", "trying", "to", "generate", "FGSM", "attack", "on", "Facenet", "NUMBER", "When", "I", "execute", "facenet_fgsm", "NUMBER", "py", "I", "be", "get", "the", "error", "implement", "get_logits", "or", "must", "define", "a", "logits", "output", "in", "fprop", "NUMBER", "please", "see", "below", "I", "be", "a", "newbie", "could", "someone", "please", "help", "me", "here", "Please", "let", "me", "know", "if", "you", "require", "any", "additional", "details", "Error", "Traceback", "most", "recent", "call", "last", "File", "facenet_fgsm", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "adv_x", "fgsm", "NUMBER", "generate", "model", "NUMBER", "face_input", "fgsm_params", "File", "home", "sysgen", "anaconda", "NUMBER", "envs", "facenet", "lib", "python", "NUMBER", "site", "package", "cleverhans", "attacks", "NUMBER", "py", "line", "NUMBER", "in", "generate", "self", "NUMBER", "model", "NUMBER", "get_logits", "x", "File", "home", "sysgen", "anaconda", "NUMBER", "envs", "facenet", "lib", "python", "NUMBER", "site", "package", "cleverhans", "model", "NUMBER", "py", "line", "NUMBER", "in", "get_logits", "output", "in", "fprop", "NotImplementedError", "TAG", "must", "implement", "get_logits", "or", "must", "define", "a", "logits", "output", "in", "fprop", "LGTM", "Hi", "Papernot", "Adding", "my", "Affiliation", "aashish", "kumar", "HARMAN", "X", "Adding", "my", "affiliation", "aspratyush", "ex", "HARMAN", "X", "I", "was", "reading", "the", "mnist_tutorial_keras_tf", "NUMBER", "py", "and", "wondered", "if", "it", "could", "be", "simplified", "by", "use", "Keras", "custom", "losses", "NUMBER", "For", "example", "the", "following", "code", "runs", "as", "fast", "as", "the", "tutorial", "in", "both", "CPU", "and", "GPU", "mode", "python", "model", "Sequential", "NUMBER", "def", "loss", "labels", "logits", "Compute", "the", "cross", "entropy", "on", "the", "legitimate", "examples", "cross_ent", "tf", "NUMBER", "losses", "NUMBER", "softmax_cross_entropy", "labels", "logits", "Compute", "the", "adversarial", "examples", "gradients", "tf", "NUMBER", "gradients", "cross_ent", "model", "NUMBER", "input", "inputs_adv", "tf", "NUMBER", "op_gradient", "model", "NUMBER", "input", "NUMBER", "tf", "NUMBER", "sign", "gradients", "Compute", "the", "cross", "entropy", "on", "the", "adversarial", "examples", "logits_adv", "model", "inputs_adv", "cross_ent_adv", "tf", "NUMBER", "losses", "NUMBER", "softmax_cross_entropy", "labels", "logits_adv", "return", "NUMBER", "cross_ent", "NUMBER", "cross_ent_adv", "model", "NUMBER", "compile", "optimizer", "adam", "loss", "loss", "model", "NUMBER", "fit", "x_train", "y_train", "NUMBER", "Is", "there", "any", "downside", "to", "use", "custom", "losses", "that", "I", "be", "miss", "I", "think", "it", "would", "make", "the", "tutorial", "a", "bit", "more", "accessible", "to", "Keras", "users", "as", "they", "could", "stick", "to", "the", "compile", "and", "fit", "function", "of", "Keras", "models", "NUMBER", "I", "d", "be", "happy", "to", "submit", "a", "pull", "request", "if", "you", "think", "it", "be", "appropriate", "NUMBER", "npapernot", "please", "excuse", "the", "slow", "reply", "I", "have", "opened", "a", "PR", "here", "LINK", "Hi", "everybody", "When", "I", "use", "cleverhans", "for", "SVM", "it", "shows", "me", "an", "error", "SVC", "object", "be", "not", "callable", "Does", "cleverhans", "just", "work", "with", "Neural", "network", "based", "network", "my", "code", "was", "fgsm", "FastGradientMethod", "my_svm_linear_model", "sess", "sess", "fgsm_params", "eps", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "adv_x", "fgsm", "NUMBER", "generate_np", "x_test_encoder", "fgsm_params", "Dear", "goodfeli", "I", "check", "again", "but", "the", "KerasModelWrapper", "shows", "another", "error", "AttributeError", "SVC", "object", "has", "no", "attribute", "layers", "Hi", "I", "be", "trying", "to", "craft", "adversarial", "examples", "use", "the", "CarliniWagnerL", "NUMBER", "method", "NUMBER", "My", "input", "images", "be", "in", "NUMBER", "NUMBER", "NUMBER", "When", "I", "check", "the", "outputs", "there", "be", "no", "distortion", "in", "fact", "Euclidean", "distance", "be", "NUMBER", "The", "selected", "attack", "parameters", "be", "cw_params", "binary_search_steps", "NUMBER", "abort_early", "True", "max_iterations", "NUMBER", "learning_rate", "NUMBER", "batch_size", "batch_size", "initial_const", "NUMBER", "nb_classes", "num_classes", "confidence", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "I", "read", "the", "parameters", "documentation", "but", "I", "couldn", "t", "figured", "out", "the", "problem", "NUMBER", "Hi", "I", "be", "use", "a", "pretrained", "Inception", "model", "class", "InceptionModel", "object", "def", "__init__", "self", "num_classes", "self", "NUMBER", "num_classes", "num_classes", "self", "NUMBER", "build", "False", "def", "__call__", "self", "x_input", "Constructs", "model", "and", "return", "probabilities", "for", "given", "input", "NUMBER", "reuse", "True", "if", "self", "NUMBER", "build", "else", "None", "with", "slim", "NUMBER", "arg_scope", "inception", "NUMBER", "inception_v", "NUMBER", "_arg_scope", "_", "end_points", "inception", "NUMBER", "inception_v", "NUMBER", "x_input", "num_classes", "self", "NUMBER", "num_classes", "is_training", "False", "reuse", "reuse", "self", "NUMBER", "build", "True", "output", "end_points", "Predictions", "probs", "output", "NUMBER", "op", "NUMBER", "inputs", "NUMBER", "return", "probs", "And", "this", "be", "the", "attack", "with", "tf", "NUMBER", "Session", "as", "sess", "filenames", "images", "labels", "next", "image_iterator", "print", "labels", "x_input", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "shape", "batch_shape", "cw_params", "binary_search_steps", "NUMBER", "abort_early", "True", "max_iterations", "NUMBER", "learning_rate", "NUMBER", "batch_size", "batch_size", "initial_const", "NUMBER", "nb_classes", "num_classes", "confidence", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "model", "InceptionModel", "num_classes", "clw", "NUMBER", "CarliniWagnerL", "NUMBER", "model", "x_adv", "clw", "NUMBER", "generate", "x_input", "sess", "NUMBER", "run", "tf", "NUMBER", "global_variables_initializer", "saver", "tf", "NUMBER", "train", "NUMBER", "Saver", "slim", "NUMBER", "get_model_variables", "nontargeted_images", "sess", "NUMBER", "run", "x_adv", "feed_dict", "x_input", "images", "cleverhans", "version", "be", "NUMBER", "python", "version", "be", "NUMBER", "tensorflow", "version", "be", "NUMBER", "Have", "you", "tried", "to", "classify", "the", "output", "image", "and", "you", "don", "t", "have", "a", "misclassification", "Or", "you", "just", "wanna", "visualize", "the", "perturbations", "and", "you", "get", "an", "imperceptible", "perturbed", "output", "B", "Yassine", "I", "tried", "to", "classifying", "the", "adversarial", "image", "NUMBER", "But", "The", "defender", "classified", "the", "adversarial", "to", "the", "correct", "label", "NUMBER", "Then", "I", "tried", "to", "visualize", "the", "perturbation", "but", "I", "realised", "that", "there", "were", "no", "perturbation", "NUMBER", "goodfeli", "You", "can", "find", "the", "executable", "string", "below", "import", "warnings", "warnings", "NUMBER", "filterwarnings", "ignore", "import", "os", "from", "cleverhans", "NUMBER", "attacks", "import", "CarliniWagnerL", "NUMBER", "from", "io", "import", "BytesIO", "import", "numpy", "as", "np", "import", "pandas", "as", "pd", "from", "PIL", "import", "Image", "from", "scipy", "NUMBER", "misc", "import", "imsave", "imread", "import", "tensorflow", "as", "tf", "from", "tensorflow", "NUMBER", "contrib", "NUMBER", "slim", "NUMBER", "nets", "import", "inception", "slim", "tf", "NUMBER", "contrib", "NUMBER", "slim", "tensorflow_master", "checkpoint_incv", "NUMBER", "Pretrained", "inception_v", "NUMBER", "ckpt", "input_dir", "dataset", "images", "categories", "pd", "NUMBER", "read_csv", "dataset", "categories", "NUMBER", "csv", "image_classes", "pd", "NUMBER", "read_csv", "dataset", "images", "NUMBER", "csv", "image_width", "NUMBER", "image_height", "NUMBER", "batch_size", "NUMBER", "batch_shape", "batch_size", "image_height", "image_width", "NUMBER", "num_classes", "NUMBER", "def", "load_images", "input_dir", "batch_shape", "images", "np", "NUMBER", "zeros", "batch_shape", "filenames", "labels", "idx", "NUMBER", "batch_size", "batch_shape", "NUMBER", "for", "filepath", "in", "sorted", "tf", "NUMBER", "gfile", "NUMBER", "Glob", "os", "NUMBER", "path", "NUMBER", "join", "input_dir", "NUMBER", "png", "with", "tf", "NUMBER", "gfile", "NUMBER", "Open", "filepath", "rb", "as", "f", "images", "idx", "imread", "f", "mode", "RGB", "NUMBER", "astype", "np", "NUMBER", "float", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "filenames", "NUMBER", "append", "os", "NUMBER", "path", "NUMBER", "basename", "filepath", "labels", "NUMBER", "append", "image_classes", "NUMBER", "merge", "pd", "NUMBER", "DataFrame", "ImageId", "os", "NUMBER", "path", "NUMBER", "basename", "filepath", "NUMBER", "on", "ImageId", "TrueLabel", "NUMBER", "idx", "NUMBER", "if", "idx", "batch_size", "yield", "filenames", "images", "labels", "filenames", "labels", "images", "np", "NUMBER", "zeros", "batch_shape", "idx", "NUMBER", "if", "idx", "NUMBER", "yield", "filenames", "images", "labels", "class", "InceptionModel", "object", "def", "__init__", "self", "num_classes", "self", "NUMBER", "num_classes", "num_classes", "self", "NUMBER", "build", "False", "def", "__call__", "self", "x_input", "Constructs", "model", "and", "return", "probabilities", "for", "given", "input", "NUMBER", "reuse", "True", "if", "self", "NUMBER", "build", "else", "None", "with", "slim", "NUMBER", "arg_scope", "inception", "NUMBER", "inception_v", "NUMBER", "_arg_scope", "_", "end_points", "inception", "NUMBER", "inception_v", "NUMBER", "x_input", "num_classes", "self", "NUMBER", "num_classes", "is_training", "False", "reuse", "reuse", "self", "NUMBER", "build", "True", "output", "end_points", "Predictions", "probs", "output", "NUMBER", "op", "NUMBER", "inputs", "NUMBER", "return", "probs", "image_iterator", "load_images", "input_dir", "batch_shape", "with", "tf", "NUMBER", "Session", "as", "sess", "filenames", "images", "labels", "next", "image_iterator", "x_input", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "shape", "batch_shape", "cw_params", "binary_search_steps", "NUMBER", "abort_early", "True", "max_iterations", "NUMBER", "learning_rate", "NUMBER", "batch_size", "batch_size", "initial_const", "NUMBER", "nb_classes", "num_classes", "confidence", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "model", "InceptionModel", "num_classes", "clw", "NUMBER", "CarliniWagnerL", "NUMBER", "model", "x_adv", "clw", "NUMBER", "generate", "x_input", "cw_params", "sess", "NUMBER", "run", "tf", "NUMBER", "global_variables_initializer", "saver", "tf", "NUMBER", "train", "NUMBER", "Saver", "slim", "NUMBER", "get_model_variables", "nontargeted_images", "sess", "NUMBER", "run", "x_adv", "feed_dict", "x_input", "images", "Try", "to", "set", "the", "confidence", "to", "for", "example", "NUMBER", "and", "the", "learning", "rate", "to", "NUMBER", "for", "example", "so", "normally", "you", "would", "have", "a", "very", "noisy", "image", "then", "try", "to", "visualize", "it", "just", "to", "be", "sure", "that", "the", "attack", "be", "work", "or", "not", "On", "Tue", "Dec", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "AM", "Bilgin", "Aksoy", "TAG", "goodfeli", "TAG", "You", "can", "find", "the", "executable", "string", "below", "import", "warnings", "warnings", "NUMBER", "filterwarnings", "ignore", "import", "os", "from", "cleverhans", "NUMBER", "attacks", "import", "CarliniWagnerL", "NUMBER", "from", "io", "import", "BytesIO", "import", "numpy", "as", "np", "import", "pandas", "as", "pd", "from", "PIL", "import", "Image", "from", "scipy", "NUMBER", "misc", "import", "imsave", "imread", "import", "tensorflow", "as", "tf", "from", "tensorflow", "NUMBER", "contrib", "NUMBER", "slim", "NUMBER", "nets", "import", "inception", "slim", "tf", "NUMBER", "contrib", "NUMBER", "slim", "tensorflow_master", "checkpoint_incv", "NUMBER", "Pretrained", "inception_v", "NUMBER", "ckpt", "input_dir", "dataset", "images", "categories", "pd", "NUMBER", "read_csv", "dataset", "categories", "NUMBER", "csv", "image_classes", "pd", "NUMBER", "read_csv", "dataset", "images", "NUMBER", "csv", "image_width", "NUMBER", "image_height", "NUMBER", "batch_size", "NUMBER", "batch_shape", "batch_size", "image_height", "image_width", "NUMBER", "num_classes", "NUMBER", "def", "load_images", "input_dir", "batch_shape", "images", "np", "NUMBER", "zeros", "batch_shape", "filenames", "labels", "idx", "NUMBER", "batch_size", "batch_shape", "NUMBER", "for", "filepath", "in", "sorted", "tf", "NUMBER", "gfile", "NUMBER", "Glob", "os", "NUMBER", "path", "NUMBER", "join", "input_dir", "NUMBER", "png", "with", "tf", "NUMBER", "gfile", "NUMBER", "Open", "filepath", "rb", "as", "f", "images", "idx", "imread", "f", "mode", "RGB", "NUMBER", "astype", "np", "NUMBER", "float", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "filenames", "NUMBER", "append", "os", "NUMBER", "path", "NUMBER", "basename", "filepath", "labels", "NUMBER", "append", "image_classes", "NUMBER", "merge", "pd", "NUMBER", "DataFrame", "ImageId", "os", "NUMBER", "path", "NUMBER", "basename", "filepath", "NUMBER", "on", "ImageId", "TrueLabel", "NUMBER", "idx", "NUMBER", "if", "idx", "batch_size", "yield", "filenames", "images", "labels", "filenames", "labels", "images", "np", "NUMBER", "zeros", "batch_shape", "idx", "NUMBER", "if", "idx", "NUMBER", "yield", "filenames", "images", "labels", "class", "InceptionModel", "object", "def", "__init__", "self", "num_classes", "self", "NUMBER", "num_classes", "num_classes", "self", "NUMBER", "build", "False", "def", "__call__", "self", "x_input", "Constructs", "model", "and", "return", "probabilities", "for", "given", "input", "NUMBER", "reuse", "True", "if", "self", "NUMBER", "build", "else", "None", "with", "slim", "NUMBER", "arg_scope", "inception", "NUMBER", "inception_v", "NUMBER", "_arg_scope", "_", "end_points", "inception", "NUMBER", "inception_v", "NUMBER", "x_input", "num_classes", "self", "NUMBER", "num_classes", "is_training", "False", "reuse", "reuse", "self", "NUMBER", "build", "True", "output", "end_points", "Predictions", "probs", "output", "NUMBER", "op", "NUMBER", "inputs", "NUMBER", "return", "probs", "image_iterator", "load_images", "input_dir", "batch_shape", "with", "tf", "NUMBER", "Session", "as", "sess", "filenames", "images", "labels", "next", "image_iterator", "x_input", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "shape", "batch_shape", "cw_params", "binary_search_steps", "NUMBER", "abort_early", "True", "max_iterations", "NUMBER", "learning_rate", "NUMBER", "batch_size", "batch_size", "initial_const", "NUMBER", "nb_classes", "num_classes", "confidence", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "model", "InceptionModel", "num_classes", "clw", "NUMBER", "CarliniWagnerL", "NUMBER", "model", "x_adv", "clw", "NUMBER", "generate", "x_input", "sess", "NUMBER", "run", "tf", "NUMBER", "global_variables_initializer", "saver", "tf", "NUMBER", "train", "NUMBER", "Saver", "slim", "NUMBER", "get_model_variables", "nontargeted_images", "sess", "NUMBER", "run", "x_adv", "feed_dict", "x_input", "images", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "goodfeli", "I", "printed", "the", "differences", "between", "attacked", "image", "and", "original", "image", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "This", "be", "the", "output", "and", "input", "plotted", "use", "matplotlib", "outputs", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "cd", "NUMBER", "fec", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "fa", "NUMBER", "c", "NUMBER", "db", "NUMBER", "png", "Then", "I", "change", "the", "parameters", "like", "B", "Yassine", "explained", "NUMBER", "But", "still", "outputs", "be", "same", "NUMBER", "it", "looks", "like", "the", "attack", "be", "not", "work", "i", "will", "check", "your", "code", "however", "if", "you", "need", "it", "now", "you", "can", "check", "my", "simple", "code", "of", "the", "C", "W", "attack", "use", "cleverhans", "on", "the", "Keras", "Inceptionv", "NUMBER", "pre", "trained", "model", "Here", "LINK", "Yassine", "Carlini", "and", "Wagner_InceptionV", "NUMBER", "_Imagenet", "Thank", "you", "B", "Yassine", "NUMBER", "I", "change", "the", "parameters", "in", "your", "code", "example", "NUMBER", "And", "now", "the", "attack", "be", "work", "as", "expected", "NUMBER", "But", "still", "have", "problem", "work", "with", "Tensorflow", "NUMBER", "It", "be", "also", "weird", "that", "Keras", "backend", "be", "Tensorflow", "and", "still", "works", "NUMBER", "Happy", "that", "it", "works", "try", "maybe", "to", "upgrade", "your", "tensorflow", "version", "pip", "install", "upgrade", "tensorflow", "gpu", "NUMBER", "just", "to", "avoid", "the", "last", "version", "NUMBER", "as", "i", "had", "a", "lot", "of", "error", "with", "it", "that", "be", "why", "i", "downgraded", "to", "the", "previous", "version", "NUMBER", "Best", "It", "s", "helpful", "to", "have", "a", "link", "to", "the", "docs", "from", "the", "github", "repo", "README", "NUMBER", "Thanks", "for", "your", "pull", "request", "NUMBER", "It", "looks", "like", "this", "may", "be", "your", "first", "contribution", "to", "a", "Google", "open", "source", "project", "if", "not", "look", "below", "for", "help", "NUMBER", "Before", "we", "can", "look", "at", "your", "pull", "request", "you", "ll", "need", "to", "sign", "a", "Contributor", "License", "Agreement", "CLA", "NUMBER", "memo", "Please", "visit", "TAG", "to", "sign", "NUMBER", "Once", "you", "ve", "sign", "or", "fix", "any", "issue", "please", "reply", "here", "e", "NUMBER", "g", "NUMBER", "I", "sign", "it", "and", "we", "ll", "verify", "it", "NUMBER", "What", "to", "do", "if", "you", "already", "sign", "the", "CLA", "Individual", "signers", "It", "s", "possible", "we", "don", "t", "have", "your", "GitHub", "username", "or", "you", "re", "use", "a", "different", "email", "address", "on", "your", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "Corporate", "signers", "Your", "company", "has", "a", "Point", "of", "Contact", "who", "decides", "which", "employees", "be", "authorized", "to", "participate", "NUMBER", "Ask", "your", "POC", "to", "be", "add", "to", "the", "group", "of", "authorized", "contributors", "NUMBER", "If", "you", "don", "t", "know", "who", "your", "Point", "of", "Contact", "be", "direct", "the", "Google", "project", "maintainer", "to", "go", "cla", "troubleshoot", "LINK", "troubleshoot", "Public", "version", "LINK", "troubleshoot", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "be", "the", "email", "use", "for", "the", "Git", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "also", "be", "attached", "to", "your", "GitHub", "account", "LINK", "NUMBER", "TAG", "Signed", "CLAs", "look", "good", "thanks", "TAG", "I", "notice", "that", "in", "examples", "nips", "NUMBER", "_adversarial_competition", "dev_tookit", "sample_attacks", "fgsm", "attack_fgsm", "NUMBER", "py", "when", "construct", "the", "fgsm", "model", "use", "fgsm", "FastGradientMethod", "model", "no", "sess", "object", "be", "pass", "NUMBER", "But", "when", "I", "replace", "FastGradientMethod", "with", "DeepFool", "or", "CarliniWagnerL", "NUMBER", "it", "goes", "wrong", "Will", "you", "able", "to", "construct", "the", "fgsm", "attack", "without", "passing", "a", "session", "I", "shall", "try", "it", "and", "return", "back", "to", "you", "vandeppce", "Some", "implementation", "of", "attacks", "such", "as", "FGSM", "PGD", "and", "few", "others", "works", "fine", "without", "sess", "as", "long", "as", "you", "don", "t", "use", "generate_np", "method", "NUMBER", "Other", "attacks", "such", "as", "DeepFool", "CW", "LBFGS", "and", "few", "others", "always", "need", "session", "object", "to", "be", "pass", "NUMBER", "In", "such", "case", "you", "have", "to", "modify", "the", "code", "and", "pass", "session", "object", "to", "the", "attack", "class", "Re", "opens", "the", "PR", "NUMBER", "with", "a", "rebase", "NUMBER", "A", "bunch", "of", "the", "test", "were", "write", "incorrectly", "and", "should", "never", "have", "be", "passing", "to", "begin", "with", "NUMBER", "I", "m", "going", "to", "fix", "them", "in", "this", "PR", "so", "at", "least", "they", "pass", "but", "someone", "later", "should", "go", "back", "through", "and", "figure", "out", "what", "was", "intended", "to", "happen", "NUMBER", "Except", "for", "this", "crash", "everything", "pass", "terminate", "call", "after", "throw", "an", "instance", "of", "std", "bad_alloc", "Rebase", "broke", "the", "history", "NUMBER", "The", "diff", "still", "looks", "somewhat", "unhappy", "because", "I", "had", "to", "merge", "the", "two", "methods", "together", "but", "it", "looks", "somewhat", "nicer", "now", "NUMBER", "Again", "this", "issue", "terminate", "call", "after", "throw", "an", "instance", "of", "std", "bad_alloc", "NUMBER", "Going", "to", "retry", "NUMBER", "The", "test", "be", "now", "get", "killed", "but", "everything", "be", "passing", "NUMBER", "I", "don", "t", "know", "that", "much", "about", "travis", "do", "debug", "this", "one", "NUMBER", "Any", "suggestions", "npapernot", "goodfeli", "It", "fail", "again", "NUMBER", "Interestingly", "it", "be", "consistently", "just", "NUMBER", "on", "TF", "NUMBER", "that", "be", "fail", "here", "NUMBER", "Okay", "so", "this", "be", "very", "confusing", "NUMBER", "By", "remove", "a", "test", "that", "I", "never", "call", "the", "test", "pass", "NUMBER", "Let", "me", "put", "those", "lines", "back", "in", "and", "see", "if", "it", "works", "again", "NUMBER", "I", "be", "NUMBER", "sure", "this", "be", "just", "a", "travis", "issue", "NUMBER", "I", "install", "TF", "NUMBER", "on", "Python", "NUMBER", "and", "I", "can", "run", "the", "test", "successfully", "NUMBER", "If", "it", "s", "okay", "with", "you", "npapernot", "goodfeli", "I", "m", "going", "to", "comment", "out", "this", "test", "again", "so", "we", "can", "merge", "this", "commit", "and", "then", "investigate", "further", "NUMBER", "I", "have", "remove", "some", "duplicate", "work", "that", "was", "going", "on", "in", "the", "test", "NUMBER", "This", "should", "allow", "the", "test", "to", "pass", "but", "in", "the", "future", "we", "will", "need", "to", "find", "a", "way", "to", "make", "the", "test", "faster", "or", "this", "will", "happen", "again", "NUMBER", "What", "do", "it", "break", "Hi", "there", "After", "install", "cleverhans", "by", "pip", "install", "cleverhans", "user", "on", "my", "machine", "I", "d", "like", "to", "run", "a", "tutorial", "to", "see", "if", "everything", "s", "ok", "NUMBER", "Unfortunately", "I", "received", "the", "following", "error", "mesage", "after", "run", "python", "mnist_tutorial_tf", "NUMBER", "py", "Traceback", "most", "recent", "call", "last", "File", "mnist_tutorial_tf", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "from", "cleverhans", "NUMBER", "loss", "import", "CrossEntropy", "ModuleNotFoundError", "No", "module", "named", "cleverhans", "NUMBER", "loss", "Then", "I", "checked", "the", "version", "by", "python", "c", "import", "cleverhans", "print", "cleverhans", "NUMBER", "__version__", "and", "the", "version", "number", "be", "NUMBER", "NUMBER", "d", "NUMBER", "c", "NUMBER", "f", "NUMBER", "a", "NUMBER", "a", "NUMBER", "a", "NUMBER", "a", "NUMBER", "cf", "NUMBER", "a", "NUMBER", "NUMBER", "When", "run", "the", "trouble", "line", "from", "cleverhans", "NUMBER", "loss", "import", "CrossEntropy", "in", "the", "console", "same", "error", "exists", "So", "anyone", "could", "help", "Thanks", "NUMBER", "When", "use", "python", "NUMBER", "I", "get", "Traceback", "most", "recent", "call", "last", "File", "mnist_tutorial_tf", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "from", "cleverhans", "NUMBER", "loss", "import", "CrossEntropy", "ImportError", "No", "module", "named", "loss", "If", "you", "just", "want", "to", "get", "cleverhans", "work", "the", "easiest", "way", "be", "to", "use", "git", "clone", "and", "set", "your", "PYTHONPATH", "manually", "NUMBER", "That", "s", "how", "I", "always", "install", "NUMBER", "We", "know", "that", "pip", "tends", "to", "install", "cleverhans", "in", "weird", "locations", "that", "be", "not", "on", "the", "PYTHONPATH", "NUMBER", "None", "of", "the", "main", "cleverhans", "developers", "including", "myself", "know", "enough", "about", "pip", "or", "setup", "NUMBER", "py", "to", "tell", "exactly", "what", "be", "going", "wrong", "NUMBER", "If", "you", "could", "tell", "us", "where", "pip", "do", "put", "cleverhans", "on", "your", "Mac", "that", "might", "help", "us", "NUMBER", "Alternately", "if", "anyone", "who", "do", "understand", "pip", "and", "setup", "NUMBER", "py", "happens", "to", "see", "this", "issue", "we", "could", "use", "your", "help", "NUMBER", "Sorry", "for", "the", "late", "reply", "NUMBER", "I", "adopted", "your", "suggestion", "and", "clouds", "gone", "both", "on", "Mac", "and", "linux", "NUMBER", "i", "the", "same", "python", "c", "import", "cleverhans", "print", "cleverhans", "NUMBER", "__version__", "NUMBER", "NUMBER", "d", "NUMBER", "c", "NUMBER", "f", "NUMBER", "a", "NUMBER", "a", "NUMBER", "a", "NUMBER", "a", "NUMBER", "cf", "NUMBER", "a", "NUMBER", "but", "python", "c", "from", "cleverhans", "NUMBER", "loss", "import", "CrossEntropy", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "ModuleNotFoundError", "No", "module", "named", "cleverhans", "NUMBER", "loss", "i", "install", "use", "pip", "install", "cleverhans", "and", "path", "be", "mnt", "opt", "anaconda", "NUMBER", "envs", "book", "NUMBER", "lib", "python", "NUMBER", "site", "package", "cleverhans", "i", "know", "why", "there", "be", "some", "wrong", "with", "setup", "NUMBER", "py", "git", "clone", "LINK", "cp", "fr", "cleverhans", "cleverhans_tutorials", "mnt", "opt", "anaconda", "NUMBER", "envs", "book", "NUMBER", "lib", "python", "NUMBER", "site", "package", "can", "solve", "it", "The", "issue", "tracker", "should", "only", "be", "use", "to", "report", "bug", "or", "feature", "request", "NUMBER", "If", "you", "be", "looking", "for", "support", "from", "other", "library", "users", "please", "ask", "a", "question", "on", "StackOverflow", "LINK", "NUMBER", "Describe", "the", "bug", "I", "get", "an", "internal", "issue", "when", "I", "use", "the", "eval", "function", "with", "BIM", "attack", "examples", "on", "CIFAR", "NUMBER", "dataset", "NUMBER", "To", "Reproduce", "Steps", "to", "reproduce", "the", "behavior", "NUMBER", "The", "simple", "version", "code", "be", "provide", "NUMBER", "reproduce", "code", "NUMBER", "zip", "LINK", "code", "NUMBER", "zip", "NUMBER", "Run", "the", "reproduction", "code", "NUMBER", "Expected", "behavior", "The", "code", "will", "show", "internal", "error", "on", "evaluating", "BIM", "accuracy", "NUMBER", "The", "error", "message", "points", "to", "while", "loop", "NUMBER", "Screenshots", "capture", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "ea", "NUMBER", "dd", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "b", "f", "NUMBER", "dcebfd", "NUMBER", "ddf", "NUMBER", "PNG", "System", "configuration", "OS", "Ubuntu", "NUMBER", "Python", "version", "NUMBER", "TensorFlow", "version", "NUMBER", "Yep", "NUMBER", "This", "be", "exactly", "why", "I", "raise", "that", "issue", "NUMBER", "I", "have", "a", "short", "reproduction", "over", "there", "NUMBER", "The", "same", "issue", "occur", "when", "use", "Basic", "Iterative", "attack", "on", "a", "neural", "network", "with", "dropout", "layers", "NUMBER", "Reading", "further", "I", "find", "that", "setting", "Keras", "backend", "learning", "phase", "to", "NUMBER", "i", "NUMBER", "e", "NUMBER", "test", "solve", "the", "problem", "NUMBER", "I", "don", "t", "know", "why", "setting", "the", "learning", "phase", "to", "NUMBER", "solve", "the", "problem", "but", "this", "may", "be", "a", "temporary", "fix", "for", "now", "NUMBER", "jsma_batch", "be", "use", "in", "attacks", "NUMBER", "py", "code", "in", "the", "following", "lines", "LINK", "L", "NUMBER", "L", "NUMBER", "However", "this", "method", "no", "longer", "exists", "in", "attacks_tf", "NUMBER", "py", "NUMBER", "I", "don", "t", "need", "it", "NUMBER", "I", "was", "just", "going", "over", "the", "code", "and", "realized", "that", "it", "might", "be", "a", "bug", "in", "the", "code", "NUMBER", "this", "issue", "wasn", "t", "caught", "by", "pylint", "due", "to", "E", "NUMBER", "be", "disabled", "if", "you", "re", "enable", "you", "will", "see", "cleverhans", "attacks", "__init__", "NUMBER", "py", "NUMBER", "E", "NUMBER", "no", "name", "in", "module", "SaliencyMapMethod", "NUMBER", "generate", "No", "name", "jsma_batch", "in", "module", "cleverhans", "NUMBER", "attacks_tf", "Hi", "I", "m", "new", "to", "tensorflow", "I", "m", "trying", "to", "attack", "with", "FGSM", "to", "my", "random", "forest", "classifier", "NUMBER", "I", "m", "use", "mnist", "dataset", "NUMBER", "So", "clf", "RandomForestClassifier", "max_features", "sqrt", "n_estimators", "NUMBER", "n_jobs", "NUMBER", "verbose", "NUMBER", "warm_start", "True", "clf", "NUMBER", "fit", "X_train", "y_train", "This", "be", "where", "I", "declare", "my", "classifier", "NUMBER", "Afterwards", "from", "keras", "import", "backend", "sess", "backend", "NUMBER", "get_session", "wrap", "KerasModelWrapper", "clf", "fgsm", "FastGradientMethod", "wrap", "sess", "sess", "fgsm_params", "eps", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "adv_x", "fgsm", "NUMBER", "generate_np", "X_test", "fgsm_params", "adv_x", "NUMBER", "shape", "When", "I", "try", "to", "execute", "this", "part", "I", "get", "the", "stacktrace", "below", "AttributeError", "Traceback", "most", "recent", "call", "last", "TAG", "in", "TAG", "NUMBER", "clip_max", "NUMBER", "NUMBER", "NUMBER", "adv_x", "fgsm", "NUMBER", "generate_np", "X_test", "fgsm_params", "NUMBER", "adv_x", "NUMBER", "shape", "appdata", "local", "program", "python", "python", "NUMBER", "lib", "site", "package", "cleverhans", "attacks", "NUMBER", "py", "in", "generate_np", "self", "x_val", "kwargs", "NUMBER", "NUMBER", "if", "hash_key", "not", "in", "self", "NUMBER", "graphs", "NUMBER", "self", "NUMBER", "construct_graph", "fix", "feedable", "x_val", "hash_key", "NUMBER", "NUMBER", "x", "new_kwargs", "x_adv", "self", "NUMBER", "graphs", "hash_key", "appdata", "local", "program", "python", "python", "NUMBER", "lib", "site", "package", "cleverhans", "attacks", "NUMBER", "py", "in", "construct_graph", "self", "fix", "feedable", "x_val", "hash_key", "NUMBER", "NUMBER", "now", "we", "generate", "the", "graph", "that", "we", "want", "NUMBER", "x_adv", "self", "NUMBER", "generate", "x", "new_kwargs", "NUMBER", "NUMBER", "self", "NUMBER", "graphs", "hash_key", "x", "new_kwargs", "x_adv", "appdata", "local", "program", "python", "python", "NUMBER", "lib", "site", "package", "cleverhans", "attacks", "NUMBER", "py", "in", "generate", "self", "x", "kwargs", "NUMBER", "from", "NUMBER", "attacks_tf", "import", "fgm", "NUMBER", "NUMBER", "labels", "nb_classes", "self", "NUMBER", "get_or_guess_labels", "x", "kwargs", "NUMBER", "NUMBER", "return", "fgm", "x", "self", "NUMBER", "model", "NUMBER", "get_probs", "x", "y", "labels", "eps", "self", "NUMBER", "eps", "appdata", "local", "program", "python", "python", "NUMBER", "lib", "site", "package", "cleverhans", "attacks", "NUMBER", "py", "in", "get_or_guess_labels", "self", "x", "kwargs", "NUMBER", "labels", "kwargs", "y_target", "NUMBER", "else", "NUMBER", "preds", "self", "NUMBER", "model", "NUMBER", "get_probs", "x", "NUMBER", "preds_max", "tf", "NUMBER", "reduce_max", "preds", "NUMBER", "keep_dims", "True", "NUMBER", "original_predictions", "tf", "NUMBER", "to_float", "tf", "NUMBER", "equal", "preds", "appdata", "local", "program", "python", "python", "NUMBER", "lib", "site", "package", "cleverhans", "utils_keras", "NUMBER", "py", "in", "get_probs", "self", "x", "NUMBER", "return", "A", "symbolic", "representation", "of", "the", "probs", "NUMBER", "NUMBER", "name", "self", "NUMBER", "_get_softmax_name", "NUMBER", "NUMBER", "return", "self", "NUMBER", "get_layer", "x", "name", "appdata", "local", "program", "python", "python", "NUMBER", "lib", "site", "package", "cleverhans", "utils_keras", "NUMBER", "py", "in", "_get_softmax_name", "self", "NUMBER", "return", "Softmax", "layer", "name", "NUMBER", "NUMBER", "for", "i", "layer", "in", "enumerate", "self", "NUMBER", "model", "NUMBER", "layers", "NUMBER", "cfg", "layer", "NUMBER", "get_config", "NUMBER", "if", "activation", "in", "cfg", "and", "cfg", "activation", "softmax", "AttributeError", "RandomForestClassifier", "object", "has", "no", "attribute", "layers", "I", "know", "this", "works", "great", "with", "sequential", "models", "NUMBER", "How", "can", "I", "use", "fgsm", "to", "attack", "Random", "Forest", "Its", "correct", "but", "do", "you", "know", "how", "can", "I", "turn", "sklearn", "examples", "into", "Tensorflow", "to", "have", "that", "access", "I", "tried", "use", "KerasClassifier", "but", "I", "get", "the", "same", "error", "AttributeError", "KerasClassifier", "object", "has", "no", "attribute", "layers", "NUMBER", "I", "m", "new", "to", "this", "topics", "so", "I", "believe", "there", "should", "be", "an", "easy", "way", "to", "do", "this", "instead", "of", "just", "write", "whole", "models", "via", "Tensorflow", "can", "you", "suggest", "a", "solution", "or", "do", "you", "have", "an", "example", "doing", "this", "goodfeli", "Well", "this", "maybe", "not", "ideal", "but", "my", "code", "be", "really", "short", "so", "import", "numpy", "as", "np", "from", "sklearn", "import", "tree", "from", "keras", "NUMBER", "wrappers", "NUMBER", "scikit_learn", "import", "KerasClassifier", "from", "keras", "NUMBER", "datasets", "import", "mnist", "from", "keras", "NUMBER", "utils", "import", "np_utils", "from", "sklearn", "NUMBER", "metrics", "import", "confusion_matrix", "from", "sklearn", "NUMBER", "ensemble", "import", "RandomForestClassifier", "from", "sklearn", "NUMBER", "metrics", "import", "accuracy_score", "import", "tensorflow", "as", "tf", "from", "cleverhans", "NUMBER", "attacks", "import", "FastGradientMethod", "from", "sklearn", "NUMBER", "metrics", "import", "confusion_matrix", "classification_report", "from", "cleverhans", "NUMBER", "utils_keras", "import", "KerasModelWrapper", "X_train", "y_train", "X_test", "y_test", "mnist", "NUMBER", "load_data", "X_train", "X_train", "NUMBER", "reshape", "NUMBER", "NUMBER", "X_test", "X_test", "NUMBER", "reshape", "NUMBER", "NUMBER", "X_train", "X_train", "NUMBER", "astype", "float", "NUMBER", "X_test", "X_test", "NUMBER", "astype", "float", "NUMBER", "Y_train", "np_utils", "NUMBER", "to_categorical", "y_train", "NUMBER", "Y_test", "np_utils", "NUMBER", "to_categorical", "y_test", "NUMBER", "clf", "RandomForestClassifier", "max_features", "sqrt", "n_estimators", "NUMBER", "n_jobs", "NUMBER", "verbose", "NUMBER", "warm_start", "True", "clf", "NUMBER", "fit", "X_train", "y_train", "y_test_pred", "clf", "NUMBER", "predict", "X_test", "acc_rf", "accuracy_score", "y_test", "y_test_pred", "cm", "confusion_matrix", "y_test_pred", "y_test", "cr", "classification_report", "y_test_pred", "y_test", "print", "cm", "print", "NUMBER", "print", "cr", "from", "keras", "import", "backend", "sess", "backend", "NUMBER", "get_session", "Define", "input", "TF", "placeholder", "x", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "shape", "None", "NUMBER", "NUMBER", "NUMBER", "y", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "shape", "None", "NUMBER", "wrap", "KerasModelWrapper", "clf", "fgsm", "FastGradientMethod", "wrap", "sess", "sess", "fgsm_params", "eps", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "adv_x", "fgsm", "NUMBER", "generate_np", "X_test", "fgsm_params", "Attribute", "error", "here", "adv_x", "NUMBER", "shape", "adv_pred", "model", "NUMBER", "predict_classes", "adv_x", "cm", "confusion_matrix", "adv_pred", "y_test", "cr", "classification_report", "adv_pred", "y_test", "print", "cm", "print", "NUMBER", "print", "cr", "This", "be", "historical", "baggage", "from", "when", "we", "had", "attacks_th", "NUMBER", "py", "JSMA", "be", "one", "of", "the", "last", "attacks", "that", "still", "uses", "probs", "in", "the", "interface", "due", "to", "the", "risk", "of", "gradient", "masking", "from", "loss", "of", "precision", "in", "the", "softmax", "NUMBER", "I", "m", "not", "very", "familiar", "with", "how", "this", "attack", "works", "so", "I", "m", "not", "sure", "whether", "we", "should", "rewrite", "it", "to", "use", "logits", "in", "the", "interface", "or", "whether", "we", "should", "update", "the", "doc", "to", "make", "it", "clear", "why", "probs", "be", "safe", "necessary", "NUMBER", "Grep", "for", "TODO", "this", "assert", "looks", "totally", "wrong", "NUMBER", "Is", "it", "the", "same", "assertion", "error", "that", "I", "meet", "from", "cleverhans", "NUMBER", "attacks", "import", "SPSA", "SPSA_params", "epsilon", "NUMBER", "num_steps", "NUMBER", "SPSA_adv", "SPSA", "adv", "sess", "sess", "SPSA_adv_gen", "SPSA_adv", "NUMBER", "generate", "x", "SPSA_params", "adv_SPSA", "adv", "NUMBER", "get_logits", "SPSA_adv_gen", "adv_SPSA_acc", "model_eval", "sess", "x", "y", "adv_SPSA", "X_test", "Y_test", "args", "eval_params", "print", "Adv", "training", "model", "accuracy", "on", "SPSA", "test", "examples", "NUMBER", "f", "adv_SPSA_acc", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks_tf", "NUMBER", "py", "in", "_compute_gradients", "self", "loss_fn", "x", "unused_optim_state", "NUMBER", "Compute", "gradient", "estimates", "use", "SPSA", "NUMBER", "NUMBER", "Assumes", "x", "be", "a", "list", "containing", "a", "NUMBER", "H", "W", "C", "image", "NUMBER", "assert", "len", "x", "NUMBER", "and", "x", "NUMBER", "NUMBER", "get_shape", "NUMBER", "as_list", "NUMBER", "NUMBER", "NUMBER", "x", "x", "NUMBER", "NUMBER", "x_shape", "x", "NUMBER", "get_shape", "NUMBER", "as_list", "AssertionError", "npapernot", "do", "you", "remember", "what", "the", "typo", "be", "I", "think", "the", "link", "goes", "to", "a", "line", "number", "in", "the", "current", "version", "of", "the", "file", "and", "the", "lines", "have", "change", "since", "you", "opened", "the", "issue", "NUMBER", "Fixes", "NUMBER", "Hi", "npapernot", "thanks", "for", "the", "review", "tempfile", "be", "imported", "in", "this", "diff", "in", "utils_mnist", "NUMBER", "py", "here", "LINK", "diff", "NUMBER", "b", "NUMBER", "a", "NUMBER", "a", "NUMBER", "f", "NUMBER", "eb", "NUMBER", "e", "NUMBER", "f", "NUMBER", "f", "NUMBER", "ef", "NUMBER", "e", "NUMBER", "R", "NUMBER", "and", "was", "already", "imported", "in", "dataset", "NUMBER", "py", "here", "LINK", "diff", "NUMBER", "ff", "NUMBER", "e", "NUMBER", "a", "NUMBER", "ae", "NUMBER", "cb", "NUMBER", "b", "NUMBER", "L", "NUMBER", "I", "be", "willing", "to", "help", "with", "the", "issue", "NUMBER", "How", "do", "I", "start", "LGTM", "ok", "to", "merge", "when", "test", "pass", "I", "was", "able", "to", "remove", "W", "NUMBER", "and", "have", "all", "the", "test", "pass", "on", "my", "laptop", "NUMBER", "I", "wonder", "if", "maybe", "one", "of", "the", "travis", "configs", "uncovers", "a", "different", "failure", "NUMBER", "Yes", "if", "I", "run", "it", "on", "Travis", "I", "do", "get", "a", "different", "check", "that", "fail", "NUMBER", "I", "ve", "update", "the", "comment", "in", "NUMBER", "pylintrc", "to", "specifically", "identify", "the", "other", "check", "as", "E", "NUMBER", "I", "have", "some", "problem", "make", "code", "for", "certified", "defense", "to", "be", "test", "by", "Travis", "NUMBER", "So", "I", "split", "the", "original", "change", "LINK", "into", "travis", "config", "and", "the", "code", "itself", "NUMBER", "This", "be", "the", "first", "part", "of", "the", "change", "which", "only", "include", "update", "in", "travis", "config", "Yeah", "let", "s", "drop", "support", "for", "older", "version", "NUMBER", "So", "do", "you", "want", "to", "drop", "support", "of", "both", "TF", "NUMBER", "and", "TF", "NUMBER", "and", "update", "everything", "to", "TF", "NUMBER", "Or", "you", "still", "want", "to", "keep", "support", "of", "one", "of", "the", "older", "version", "yeah", "let", "s", "do", "NUMBER", "and", "NUMBER", "for", "now", "So", "there", "s", "good", "news", "and", "bad", "news", "NUMBER", "thumbsup", "The", "good", "news", "be", "that", "everyone", "that", "needs", "to", "sign", "a", "CLA", "the", "pull", "request", "submitter", "and", "all", "commit", "authors", "have", "do", "so", "NUMBER", "Everything", "be", "all", "good", "there", "NUMBER", "confused", "The", "bad", "news", "be", "that", "it", "appears", "that", "one", "or", "more", "commit", "were", "authored", "or", "co", "authored", "by", "someone", "other", "than", "the", "pull", "request", "submitter", "NUMBER", "We", "need", "to", "confirm", "that", "all", "authors", "be", "ok", "with", "their", "commit", "be", "contributed", "to", "this", "project", "NUMBER", "Please", "have", "them", "confirm", "that", "here", "in", "the", "pull", "request", "NUMBER", "Note", "to", "project", "maintainer", "This", "be", "a", "terminal", "state", "meaning", "the", "cla", "google", "commit", "status", "will", "not", "change", "from", "this", "state", "NUMBER", "It", "s", "up", "to", "you", "to", "confirm", "consent", "of", "all", "the", "commit", "author", "s", "set", "the", "cla", "label", "to", "yes", "if", "enable", "on", "your", "project", "and", "then", "merge", "this", "pull", "request", "when", "appropriate", "NUMBER", "TAG", "Address", "NUMBER", "It", "s", "ready", "for", "Travis", "CI", "checking", "It", "seems", "that", "most", "of", "file", "in", "tests_tf", "do", "not", "conform", "to", "pep", "NUMBER", "indent", "size", "NUMBER", "and", "pylint", "NUMBER", "Should", "the", "test", "conform", "to", "them", "I", "ll", "close", "this", "and", "reopen", "a", "new", "one", "to", "avoid", "conflict", "NUMBER", "Originally", "code", "write", "by", "Aditi", "Raghunathan", "That", "was", "actually", "a", "completely", "new", "PR", "with", "completely", "new", "commit", "NUMBER", "Travis", "was", "actually", "run", "for", "the", "first", "commit", "in", "this", "PR", "but", "if", "fail", "expectedly", "LINK", "ci", "NUMBER", "com", "tensorflow", "cleverhans", "build", "NUMBER", "But", "Travis", "didn", "t", "run", "for", "the", "second", "commit", "where", "I", "update", "travis", "file", "NUMBER", "I", "m", "thinking", "I", "ll", "try", "to", "update", "Travis", "file", "first", "in", "separate", "PR", "and", "the", "make", "another", "PR", "with", "the", "code", "change", "NUMBER", "I", "ll", "keep", "this", "open", "for", "now", "just", "to", "keep", "track", "of", "things", "So", "there", "s", "good", "news", "and", "bad", "news", "NUMBER", "thumbsup", "The", "good", "news", "be", "that", "everyone", "that", "needs", "to", "sign", "a", "CLA", "the", "pull", "request", "submitter", "and", "all", "commit", "authors", "have", "do", "so", "NUMBER", "Everything", "be", "all", "good", "there", "NUMBER", "confused", "The", "bad", "news", "be", "that", "it", "appears", "that", "one", "or", "more", "commit", "were", "authored", "or", "co", "authored", "by", "someone", "other", "than", "the", "pull", "request", "submitter", "NUMBER", "We", "need", "to", "confirm", "that", "all", "authors", "be", "ok", "with", "their", "commit", "be", "contributed", "to", "this", "project", "NUMBER", "Please", "have", "them", "confirm", "that", "here", "in", "the", "pull", "request", "NUMBER", "Note", "to", "project", "maintainer", "This", "be", "a", "terminal", "state", "meaning", "the", "cla", "google", "commit", "status", "will", "not", "change", "from", "this", "state", "NUMBER", "It", "s", "up", "to", "you", "to", "confirm", "consent", "of", "all", "the", "commit", "author", "s", "set", "the", "cla", "label", "to", "yes", "if", "enable", "on", "your", "project", "and", "then", "merge", "this", "pull", "request", "when", "appropriate", "NUMBER", "TAG", "The", "travis", "test", "have", "pass", "on", "this", "one", "even", "though", "only", "one", "of", "the", "two", "copies", "of", "the", "travis", "badges", "turned", "green", "NUMBER", "Not", "sure", "why", "the", "other", "one", "be", "stuck", "yellow", "NUMBER", "This", "should", "be", "safe", "to", "merge", "NUMBER", "It", "won", "t", "cause", "merge", "conflict", "because", "it", "edits", "only", "a", "comment", "in", "NUMBER", "pylintrc", "NUMBER", "It", "doesn", "t", "edit", "any", "NUMBER", "py", "file", "or", "the", "conflict", "prone", "disable", "line", "of", "NUMBER", "pylintrc", "NUMBER", "Merge", "LINK", "first", "Merge", "LINK", "first", "Address", "NUMBER", "NUMBER", "The", "implementation", "be", "based", "on", "here", "LINK", "_ops_impl", "NUMBER", "py", "L", "NUMBER", "including", "adjusted", "stddev", "NUMBER", "On", "single", "P", "NUMBER", "GPU", "this", "be", "NUMBER", "x", "faster", "than", "map_fn", "for", "input", "shape", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Thanks", "The", "speed", "sounds", "great", "NUMBER", "Can", "you", "add", "a", "unit", "test", "that", "the", "NUMBER", "methods", "be", "equivalent", "It", "s", "do", "It", "s", "okay", "NUMBER", "I", "think", "it", "s", "better", "to", "create", "another", "PR", "for", "moving", "all", "of", "them", "because", "some", "of", "the", "file", "in", "cleverhans", "test", "have", "the", "same", "name", "with", "those", "in", "tests_tf", "like", "test_utils_tf", "NUMBER", "py", "and", "some", "of", "them", "have", "different", "test", "styles", "class", "wrapper", "or", "method", "NUMBER", "Therefore", "I", "just", "put", "my", "test", "in", "the", "right", "place", "in", "this", "PR", "and", "I", "will", "create", "another", "one", "to", "address", "NUMBER", "Fixed", "smiley", "I", "ll", "close", "this", "one", "and", "create", "another", "one", "by", "copying", "all", "file", "NUMBER", "That", "test", "can", "stay", "remove", "because", "we", "have", "new", "test", "in", "NUMBER", "Original", "code", "by", "Aditi", "Raghunathan", "LINK", "Google", "Cloud", "Build", "fail", "due", "to", "INVALID_ARGUMENT", "error", "I", "can", "not", "see", "any", "details", "in", "the", "cloud", "console", "because", "I", "don", "t", "have", "permissions", "I", "d", "recommend", "copying", "to", "a", "new", "branch", "git", "checkout", "b", "cert", "NUMBER", "cert", "and", "open", "a", "PR", "for", "the", "new", "branch", "NUMBER", "That", "should", "lose", "the", "fail", "Cloud", "Build", "NUMBER", "Fix", "NUMBER", "NUMBER", "The", "problem", "be", "cause", "by", "the", "reason", "that", "batch_eval", "in", "utils_tf", "NUMBER", "py", "do", "not", "return", "any", "value", "NUMBER", "So", "there", "s", "good", "news", "and", "bad", "news", "NUMBER", "thumbsup", "The", "good", "news", "be", "that", "everyone", "that", "needs", "to", "sign", "a", "CLA", "the", "pull", "request", "submitter", "and", "all", "commit", "authors", "have", "do", "so", "NUMBER", "Everything", "be", "all", "good", "there", "NUMBER", "confused", "The", "bad", "news", "be", "that", "it", "appears", "that", "one", "or", "more", "commit", "were", "authored", "or", "co", "authored", "by", "someone", "other", "than", "the", "pull", "request", "submitter", "NUMBER", "We", "need", "to", "confirm", "that", "all", "authors", "be", "ok", "with", "their", "commit", "be", "contributed", "to", "this", "project", "NUMBER", "Please", "have", "them", "confirm", "that", "here", "in", "the", "pull", "request", "NUMBER", "Note", "to", "project", "maintainer", "This", "be", "a", "terminal", "state", "meaning", "the", "cla", "google", "commit", "status", "will", "not", "change", "from", "this", "state", "NUMBER", "It", "s", "up", "to", "you", "to", "confirm", "consent", "of", "all", "the", "commit", "author", "s", "set", "the", "cla", "label", "to", "yes", "if", "enable", "on", "your", "project", "and", "then", "merge", "this", "pull", "request", "when", "appropriate", "NUMBER", "TAG", "npapernot", "Should", "I", "do", "anything", "for", "this", "Without", "map_fn", "the", "cropping", "happens", "at", "the", "same", "location", "within", "a", "batch", "NUMBER", "This", "in", "turn", "reduces", "stochasticity", "for", "gradient", "descent", "NUMBER", "This", "be", "still", "worth", "doing", "on", "Travis", "Closes", "NUMBER", "Done", "with", "first", "review", "two", "suggestions", "Oh", "good", "point", "NUMBER", "Sorry", "one", "more", "revision", "suggestion", "have", "check_installation", "take", "a", "cur_file", "argument", "NUMBER", "Then", "the", "tutorial", "calls", "check_installation", "__file__", "NUMBER", "The", "reasons", "for", "this", "be", "NUMBER", "Even", "less", "risk", "of", "something", "going", "wrong", "NUMBER", "The", "current", "version", "could", "still", "go", "run", "if", "someone", "add", "cleverhans_tutorials", "from", "Installation", "NUMBER", "to", "their", "PYTHONPATH", "and", "then", "runs", "the", "tutorials", "from", "Installation", "NUMBER", "You", "d", "have", "to", "be", "pretty", "confused", "to", "add", "cleverhans_tutorial", "to", "your", "PYTHONPATH", "but", "this", "feature", "be", "intended", "to", "support", "people", "who", "be", "confused", "about", "PYTHONPATH", "so", "it", "seems", "conceivable", "that", "someone", "would", "do", "it", "NUMBER", "NUMBER", "No", "need", "to", "make", "a", "new", "file", "LGTM", "when", "test", "pass", "NUMBER", "Unfortunately", "this", "needs", "a", "rebase", "already", "NUMBER", "Notes", "for", "what", "I", "need", "to", "do", "next", "for", "the", "long", "problem", "add", "from", "builtins", "import", "int", "This", "be", "a", "long", "in", "python", "NUMBER", "May", "need", "to", "pip", "install", "future", "to", "get", "access", "to", "this", "NUMBER", "Closes", "NUMBER", "lgtm", "I", "fix", "the", "test", "failures", "by", "just", "remove", "the", "broken", "example", "NUMBER", "I", "propose", "remove", "it", "because", "We", "shouldn", "t", "have", "duplicate", "code", "for", "the", "whole", "cartesian", "product", "of", "different", "ways", "of", "run", "everything", "NUMBER", "There", "s", "already", "an", "MNIST", "keras", "tutorial", "and", "and", "MNIST", "black", "box", "tutorial", "no", "need", "for", "an", "MNIST", "keras", "black", "box", "tutorial", "NUMBER", "This", "was", "broken", "it", "s", "a", "real", "error", "not", "just", "a", "style", "problem", "and", "no", "one", "has", "notice", "so", "it", "s", "not", "get", "use", "It", "s", "in", "the", "examples", "directory", "so", "there", "s", "no", "obligation", "to", "keep", "support", "it", "AlexeyKurakin", "do", "you", "know", "how", "I", "should", "fix", "this", "failure", "in", "examples", "nips", "NUMBER", "_adversarial_competition", "eval_infra", "validation_tool", "validate_and_copy_submissions", "NUMBER", "py", "On", "line", "NUMBER", "it", "has", "metadata", "self", "NUMBER", "base_validator", "NUMBER", "validate_submission", "local_path", "NUMBER", "The", "call", "needs", "to", "pass", "in", "a", "second", "argument", "submission_type", "NUMBER", "But", "we", "get", "submission_type", "out", "of", "metadata", "so", "it", "s", "not", "available", "to", "pass", "yet", "NUMBER", "Also", "there", "be", "two", "similarly", "named", "file", "examples", "nips", "NUMBER", "_adversarial_competition", "eval_infra", "validation_tool", "validate_submission_lib", "NUMBER", "py", "and", "examples", "nips", "NUMBER", "_adversarial_competition", "dev_toolkit", "validation_tool", "validate_submission_lib", "NUMBER", "py", "NUMBER", "The", "other", "one", "doesn", "t", "require", "a", "submission_type", "argument", "NUMBER", "I", "was", "able", "to", "fix", "it", "by", "renaming", "file", "LINK", "I", "pass", "it", "an", "incorrect", "argument", "and", "did", "not", "get", "a", "warning", "NUMBER", "Perhaps", "we", "should", "alert", "users", "when", "they", "have", "a", "typo", "in", "their", "kwargs", "Hmm", "I", "had", "thought", "that", "this", "would", "be", "easy", "because", "we", "already", "explicitly", "list", "the", "different", "types", "of", "kwargs", "for", "generate_np", "NUMBER", "When", "calling", "generate_np", "argument", "in", "the", "following", "set", "should", "be", "fed", "into", "the", "graph", "as", "they", "be", "not", "structural", "items", "that", "require", "generating", "a", "new", "graph", "NUMBER", "This", "dict", "should", "map", "names", "of", "argument", "to", "the", "types", "they", "should", "have", "NUMBER", "Usually", "the", "target", "class", "will", "be", "a", "feedable", "keyword", "argument", "NUMBER", "self", "NUMBER", "feedable_kwargs", "When", "calling", "generate_np", "argument", "in", "the", "following", "set", "should", "NOT", "be", "fed", "into", "the", "graph", "as", "they", "ARE", "structural", "items", "that", "require", "generating", "a", "new", "graph", "NUMBER", "This", "list", "should", "contain", "the", "names", "of", "the", "structural", "argument", "NUMBER", "self", "NUMBER", "ructural_kwargs", "However", "it", "looks", "like", "there", "be", "a", "few", "places", "where", "kwargs", "don", "t", "fall", "into", "either", "feedable_kwargs", "or", "structural_kwargs", "NUMBER", "For", "example", "the", "rand_minmax", "kwarg", "here", "LINK", "L", "NUMBER", "If", "we", "think", "that", "all", "generate_np", "kwargs", "should", "always", "be", "either", "feedable", "or", "structural", "then", "I", "think", "it", "would", "be", "fairly", "straightforward", "to", "do", "this", "NUMBER", "If", "not", "then", "I", "m", "not", "sure", "if", "this", "be", "worthwhile", "NUMBER", "Yes", "that", "seems", "worth", "doing", "NUMBER", "I", "misunderstood", "what", "you", "meant", "earlier", "NUMBER", "I", "believe", "it", "s", "possible", "to", "catch", "unuse", "keywords", "when", "they", "re", "pass", "to", "generate_np", "because", "those", "calls", "all", "pass", "through", "the", "base", "class", "s", "graph", "caching", "mechanism", "NUMBER", "Earlier", "I", "thought", "you", "meant", "a", "call", "to", "generate", "NUMBER", "That", "seems", "hard", "because", "each", "subclass", "implement", "its", "own", "generate", "and", "doesn", "t", "usually", "call", "through", "a", "centralized", "piece", "of", "code", "NUMBER", "Done", "in", "this", "PR", "LINK", "Closes", "NUMBER", "WIP", "OK", "to", "merge", "after", "add", "the", "check", "on", "type", "of", "sess", "Done", "with", "new", "round", "of", "review", "NUMBER", "Two", "things", "to", "discuss", "NUMBER", "Can", "we", "get", "rid", "of", "self", "NUMBER", "back", "NUMBER", "Why", "be", "a", "test", "commented", "out", "Thanks", "for", "remove", "self", "NUMBER", "back", "NUMBER", "Regarding", "the", "test", "two", "further", "thoughts", "NUMBER", "I", "d", "suggest", "just", "deleting", "it", "entirely", "rather", "than", "commenting", "it", "out", "NUMBER", "You", "could", "put", "a", "link", "to", "the", "commit", "that", "remove", "it", "in", "the", "issue", "so", "that", "when", "someone", "works", "on", "the", "issue", "they", "can", "find", "the", "broken", "implementation", "quickly", "NUMBER", "My", "concern", "be", "that", "if", "we", "have", "a", "test", "for", "attack", "strength", "and", "we", "comment", "it", "out", "it", "looks", "like", "the", "attack", "get", "weaker", "and", "we", "thought", "that", "was", "OK", "NUMBER", "I", "understand", "that", "that", "s", "not", "what", "happened", "but", "we", "don", "t", "want", "to", "even", "look", "like", "we", "re", "doing", "that", "NUMBER", "NUMBER", "If", "this", "test", "wasn", "t", "implement", "correctly", "why", "wasn", "t", "it", "fail", "before", "It", "sounds", "like", "it", "should", "have", "had", "some", "syntax", "error", "or", "raise", "an", "exception", "from", "passing", "the", "wrong", "type", "etc", "NUMBER", "LGTM", "NUMBER", "Feel", "free", "to", "merge", "once", "the", "test", "pass", "Yes", "exactly", "Closed", "by", "LINK", "This", "solves", "some", "bug", "with", "the", "new", "spatial", "attack", "NUMBER", "I", "m", "run", "the", "attacks", "overnight", "and", "hope", "to", "see", "how", "well", "they", "do", "NUMBER", "x", "Optimizes", "transformation", "against", "each", "individual", "image", "rather", "than", "against", "a", "batch", "of", "images", "x", "Adds", "black", "border", "capabilities", "as", "in", "the", "unrestricted_advex", "repo", "x", "Adds", "test", "that", "the", "attack", "can", "break", "a", "hardcoded", "model", "either", "by", "moving", "pixels", "off", "the", "image", "or", "choosing", "not", "to", "move", "pixels", "off", "the", "image", "x", "Solves", "memory", "issue", "by", "use", "tf", "NUMBER", "map_fn", "cc", "yenchenlin", "and", "carlini", "This", "will", "also", "need", "to", "be", "fix", "after", "the", "switch", "to", "NUMBER", "spaces", "NUMBER", "I", "d", "like", "to", "merge", "this", "in", "when", "possible", "NUMBER", "Could", "I", "please", "get", "a", "review", "yenchenlin", "or", "npapernot", "This", "be", "good", "to", "merge", "pending", "Travis", "npapernot", "I", "plan", "to", "merge", "this", "in", "after", "test", "pass", "NUMBER", "Any", "issue", "with", "that", "npapernot", "Why", "was", "the", "examples", "linear_extrapolation_plot_example", "NUMBER", "py", "file", "delete", "Regarding", "plotting", "I", "agree", "that", "a", "new", "module", "be", "worth", "it", "NUMBER", "We", "can", "also", "refactor", "exist", "plotting", "tool", "in", "utils", "NUMBER", "py", "LINK", "Decided", "not", "to", "enable", "it", "This", "error", "only", "triggers", "in", "two", "file", "utils_keras", "NUMBER", "py", "to", "access", "_inbound_nodes", "and", "_op", "as", "part", "of", "some", "graph", "surgery", "to", "find", "the", "logits", "nips", "NUMBER", "_adversarial_competition", "eval_infra", "code", "eval_lib", "test", "classification_results_test", "NUMBER", "py", "while", "manipulating", "a", "CompetitionSubmissions", "object", "as", "a", "test", "object", "These", "both", "seem", "basically", "OK", "to", "me", "NUMBER", "Is", "it", "alright", "to", "enable", "this", "check", "by", "manually", "skipping", "the", "pylint", "checks", "on", "those", "lines", "Decided", "to", "leave", "this", "one", "disabled", "NUMBER", "See", "NUMBER", "pylintrc", "for", "an", "explanation", "Done", "here", "LINK", "Decided", "not", "to", "enable", "this", "one", "NUMBER", "See", "comment", "in", "NUMBER", "pylintrc", "Decided", "not", "to", "enable", "this", "one", "NUMBER", "See", "comment", "in", "NUMBER", "pylintrc", "Is", "pylint", "slow", "locally", "or", "on", "Travis", "only", "Ok", "one", "thing", "be", "that", "it", "might", "make", "sense", "for", "us", "to", "move", "to", "something", "with", "a", "bit", "more", "ressources", "like", "LINK", "cloud", "build", "if", "Travis", "starts", "to", "be", "limited", "This", "be", "do", "but", "didn", "t", "get", "close", "Decided", "not", "to", "enable", "it", "see", "comment", "in", "NUMBER", "pylintrc", "Visualizing", "how", "my", "deep", "learning", "model", "performed", "I", "need", "to", "plot", "my", "model", "s", "training", "history", "in", "cleverhans", "NUMBER", "i", "NUMBER", "e", "NUMBER", "epochs", "vs", "accuracy", "Earlier", "with", "keras", "code", "like", "this", "would", "do", "the", "job", "NUMBER", "NUMBER", "NUMBER", "import", "matplotlib", "NUMBER", "pyplot", "as", "plt", "NUMBER", "NUMBER", "code", "for", "build", "your", "model", "NUMBER", "NUMBER", "train", "your", "model", "history", "model", "NUMBER", "fit", "train_data", "train_labels", "nb_epoch", "nb_epoch", "batch_size", "NUMBER", "print", "history", "NUMBER", "history", "NUMBER", "keys", "plt", "NUMBER", "figure", "NUMBER", "summarize", "history", "for", "accuracy", "plt", "NUMBER", "subplot", "NUMBER", "plt", "NUMBER", "plot", "history", "NUMBER", "history", "acc", "plt", "NUMBER", "plot", "history", "NUMBER", "history", "val_acc", "plt", "NUMBER", "title", "model", "accuracy", "plt", "NUMBER", "ylabel", "accuracy", "plt", "NUMBER", "xlabel", "epoch", "plt", "NUMBER", "legend", "train", "test", "loc", "upper", "left", "Now", "use", "cleverhans", "I", "be", "finding", "accuracy", "differently", "I", "be", "wondering", "how", "the", "graph", "I", "would", "like", "to", "plot", "would", "be", "possible", "as", "code", "like", "history", "model", "NUMBER", "fit", "train_data", "train_labels", "nb_epoch", "nb_epoch", "batch_size", "NUMBER", "has", "be", "replaced", "with", "code", "like", "NUMBER", "code", "for", "build", "model", "NUMBER", "Create", "TF", "session", "and", "set", "as", "Keras", "backend", "session", "sess", "tf", "NUMBER", "Session", "keras", "NUMBER", "backend", "NUMBER", "set_session", "sess", "tensorflow", "placeholder", "variables", "x", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "shape", "None", "X_train_scaled", "NUMBER", "shape", "NUMBER", "y", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "shape", "None", "NUMBER", "model", "mlp_model", "predictions", "model", "x", "init", "tf", "NUMBER", "global_variables_initializer", "sess", "NUMBER", "run", "init", "Train", "the", "model", "train_params", "nb_epochs", "NUMBER", "batch_size", "NUMBER", "learning_rate", "NUMBER", "verbose", "NUMBER", "rng", "np", "NUMBER", "random", "NUMBER", "RandomState", "NUMBER", "NUMBER", "NUMBER", "train", "the", "model", "not", "test", "model_train", "sess", "x", "y", "predictions", "X_train_scaled", "Y_train", "evaluate", "evaluate", "args", "train_params", "Thanks", "for", "the", "info", "NUMBER", "Also", "how", "can", "I", "calculate", "evaluation", "metrics", "other", "than", "accuracy", "like", "precision", "recall", "etc", "Because", "NUMBER", "model_train", "sess", "x", "y", "predictions", "X_train_scaled", "Y_train", "evaluate", "evaluate", "args", "train_params", "returns", "boolean", "whereas", "model_eval", "sess", "x", "y", "predictions", "X_test_scaled", "Y_test", "args", "eval_params", "returns", "a", "float", "with", "accuracy", "value", "NUMBER", "Quick", "comment", "it", "might", "be", "nice", "to", "set", "the", "log", "level", "to", "INFO", "at", "the", "beginning", "of", "train", "and", "then", "set", "it", "back", "to", "what", "it", "was", "before", "when", "train", "returns", "so", "that", "this", "doesn", "t", "affect", "people", "beyond", "their", "use", "of", "train", "My", "bad", "your", "response", "actually", "made", "me", "realize", "that", "my", "comment", "doesn", "t", "make", "sense", "because", "the", "way", "you", "have", "it", "set", "up", "right", "now", "gives", "more", "control", "to", "the", "user", "and", "be", "what", "I", "was", "also", "looking", "for", "NUMBER", "I", "also", "just", "checked", "the", "tutorials", "and", "they", "set", "the", "logger", "to", "debug", "but", "it", "s", "better", "to", "set", "it", "to", "info", "by", "default", "in", "this", "file", "indeed", "because", "we", "change", "all", "of", "the", "trainer", "s", "prints", "to", "logging", "NUMBER", "OK", "to", "merge", "once", "pep", "NUMBER", "pass", "FAIL", "Test", "if", "pep", "NUMBER", "be", "respected", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "home", "travis", "miniconda", "envs", "test", "environment", "lib", "python", "NUMBER", "site", "package", "nose", "case", "NUMBER", "py", "line", "NUMBER", "in", "runTest", "self", "NUMBER", "test", "self", "NUMBER", "arg", "File", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "devtools", "test", "test_format", "NUMBER", "py", "line", "NUMBER", "in", "test_format_pep", "NUMBER", "raise", "AssertionError", "PEP", "NUMBER", "Format", "not", "respected", "AssertionError", "PEP", "NUMBER", "Format", "not", "respected", "begin", "captured", "stdout", "TAG", "line", "NUMBER", "in", "TAG", "adv_x", "jsma", "NUMBER", "generate_np", "sample", "jsma_params", "File", "F", "deeplearning", "RNN", "cleverhans", "master", "cleverhans", "attacks", "NUMBER", "py", "line", "NUMBER", "in", "generate_np", "return", "self", "NUMBER", "sess", "NUMBER", "run", "x_adv", "feed_dict", "File", "C", "Users", "Jon", "Snow", "Anaconda", "NUMBER", "lib", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "run", "run_metadata_ptr", "File", "C", "Users", "Jon", "Snow", "Anaconda", "NUMBER", "lib", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_run", "feed_dict_tensor", "options", "run_metadata", "File", "C", "Users", "Jon", "Snow", "Anaconda", "NUMBER", "lib", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_do_run", "run_metadata", "File", "C", "Users", "Jon", "Snow", "Anaconda", "NUMBER", "lib", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_do_call", "raise", "type", "e", "node_def", "op", "message", "InvalidArgumentError", "Retval", "NUMBER", "do", "not", "have", "value", "Based", "on", "the", "syntax", "I", "guess", "that", "you", "be", "use", "Keras", "to", "define", "the", "model", "Have", "you", "wrapped", "the", "Keras", "model", "into", "a", "CleverHans", "model", "use", "LINK", "_keras", "NUMBER", "py", "L", "NUMBER", "I", "add", "this", "line", "in", "the", "previous", "source", "code", "NUMBER", "wrap", "KerasModelWrapper", "model", "Some", "change", "were", "made", "to", "replace", "model", "with", "wrap", "NUMBER", "Still", "the", "ERROR", "remains", "the", "same", "NUMBER", "source_samples", "X_test_scaled", "NUMBER", "shape", "NUMBER", "results", "np", "NUMBER", "zeros", "NUMBER", "source_samples", "dtype", "i", "perturbations", "np", "NUMBER", "zeros", "NUMBER", "source_samples", "dtype", "f", "X_adv", "np", "NUMBER", "zeros", "source_samples", "X_test_scaled", "NUMBER", "shape", "NUMBER", "jsma", "SaliencyMapMethod", "wrap", "back", "tf", "sess", "sess", "jsma_params", "theta", "NUMBER", "gamma", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "y_target", "None", "nb_classes", "NUMBER", "print", "Crafting", "adversarial", "test", "set", "examples", "for", "sample_ind", "in", "range", "NUMBER", "NUMBER", "print", "print", "Attacking", "input", "i", "i", "sample_ind", "NUMBER", "source_samples", "current", "observation", "we", "want", "to", "perturbate", "sample", "X_test_scaled", "sample_ind", "sample_ind", "NUMBER", "We", "want", "to", "find", "an", "adversarial", "example", "for", "each", "possible", "targeet", "class", "i", "NUMBER", "e", "NUMBER", "all", "classes", "that", "differ", "from", "the", "label", "given", "in", "the", "dataset", "return", "the", "index", "of", "first", "matched", "maximum", "value", "current_class", "int", "np", "NUMBER", "argmax", "Y_test", "sample_ind", "target_classes", "other_classes", "NUMBER", "current_class", "Loop", "over", "all", "target", "classes", "for", "target", "in", "target_classes", "print", "Creating", "adv", "NUMBER", "example", "for", "target", "class", "str", "target", "if", "current_class", "NUMBER", "for", "normal", "attack", "break", "one_hot_target", "np", "NUMBER", "zeros", "NUMBER", "NUMBER", "dtype", "np", "NUMBER", "float", "NUMBER", "one_hot_target", "NUMBER", "target", "NUMBER", "jsma_params", "y_target", "one_hot_target", "adv_x", "jsma", "NUMBER", "generate_np", "sample", "jsma_params", "Are", "you", "training", "the", "model", "with", "keras", "or", "tensorflow", "Did", "you", "disable", "the", "keras", "learning", "phase", "before", "run", "the", "attack", "It", "might", "be", "easier", "to", "modify", "the", "ModelBasicCNN", "example", "to", "remove", "the", "convolutions", "and", "add", "more", "fully", "connected", "layers", "NUMBER", "Attached", "file", "containing", "JSMA", "error", "NUMBER", "jsma", "NUMBER", "txt", "LINK", "dataset", "NUMBER", "zip", "LINK", "I", "was", "able", "to", "have", "the", "script", "run", "without", "error", "by", "add", "the", "following", "line", "keras", "NUMBER", "layers", "NUMBER", "core", "NUMBER", "K", "NUMBER", "set_learning_phase", "NUMBER", "You", "can", "find", "an", "example", "use", "here", "LINK", "_tutorials", "mnist_tutorial_keras_tf", "NUMBER", "py", "I", "m", "get", "the", "following", "error", "run", "mnist_tutorial_keras_tf", "NUMBER", "py", "with", "SPSA", "attack", "File", "mnist_tutorial_keras_tf", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "tf", "NUMBER", "app", "NUMBER", "run", "File", "Linux", "Ubuntu", "NUMBER", "amd", "NUMBER", "TOOLS", "TENSORFLOW", "NUMBER", "GPU", "PY", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "platform", "app", "NUMBER", "py", "line", "NUMBER", "in", "run", "_sys", "NUMBER", "exit", "main", "argv", "File", "mnist_tutorial_keras_tf", "NUMBER", "py", "line", "NUMBER", "in", "main", "load_model", "FLAGS", "NUMBER", "load_model", "File", "mnist_tutorial_keras_tf", "NUMBER", "py", "line", "NUMBER", "in", "mnist_tutorial", "adv_x", "spsa", "NUMBER", "generate", "x", "File", "home", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "line", "NUMBER", "in", "generate", "is_debug", "is_debug", "File", "home", "cleverhans", "cleverhans", "attacks_tf", "NUMBER", "py", "line", "NUMBER", "in", "pgd_attack", "tf", "NUMBER", "shape", "input_image", "minval", "epsilon", "maxval", "epsilon", "dtype", "tf_dtype", "TypeError", "bad", "operand", "type", "for", "unary", "NoneType", "goodfeli", "I", "attached", "the", "edit", "mnist_tutorial_keras_tf", "NUMBER", "py", "mnist_tutorial_keras_tf", "NUMBER", "py", "NUMBER", "tar", "NUMBER", "gz", "LINK", "_tutorial_keras_tf", "NUMBER", "py", "NUMBER", "tar", "NUMBER", "gz", "In", "the", "code", "you", "shared", "the", "call", "to", "spsa", "NUMBER", "generate", "x", "be", "miss", "some", "argument", "NUMBER", "Just", "like", "other", "attacks", "e", "NUMBER", "g", "NUMBER", "the", "ones", "in", "the", "tutorial", "you", "need", "to", "pass", "some", "named", "argument", "NUMBER", "For", "instance", "I", "managed", "to", "get", "that", "line", "to", "execute", "by", "add", "spsa_params", "epsilon", "NUMBER", "y", "tf", "NUMBER", "argmax", "y", "axis", "NUMBER", "num_steps", "NUMBER", "adv_x", "spsa", "NUMBER", "generate", "x", "spsa_params", "You", "will", "also", "need", "to", "have", "x", "have", "a", "batch", "size", "of", "NUMBER", "for", "the", "SPSA", "attack", "only", "I", "will", "make", "a", "PR", "now", "to", "add", "a", "more", "friendly", "error", "when", "x", "do", "not", "have", "the", "right", "dimension", "NUMBER", "npapernot", "could", "you", "please", "elaborate", "where", "do", "you", "set", "x", "to", "has", "batch", "size", "of", "NUMBER", "specifically", "in", "the", "context", "of", "the", "mnist_tutorial_keras_tf", "NUMBER", "py", "file", "I", "managed", "to", "do", "it", "by", "commenting", "out", "the", "the", "following", "line", "in", "attacks_tf", "NUMBER", "py", "assert", "num_samples", "NUMBER", "NUMBER", "number", "of", "samples", "must", "be", "even", "and", "modifying", "self", "NUMBER", "_num_samples", "num_samples", "NUMBER", "to", "self", "NUMBER", "_num_samples", "num_samples", "I", "just", "set", "batch_size", "to", "NUMBER", "in", "the", "tutorial", "script", "there", "be", "a", "batch_size", "flag", "if", "you", "look", "at", "the", "bottom", "of", "the", "script", "NUMBER", "Hope", "that", "solves", "the", "problem", "for", "you", "as", "well", "NUMBER", "In", "practice", "you", "probably", "want", "to", "use", "a", "different", "batch_size", "for", "training", "and", "evaluation", "attack", "for", "performance", "reasons", "NUMBER", "problem", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "a", "NUMBER", "bd", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "d", "NUMBER", "NUMBER", "f", "NUMBER", "png", "How", "should", "i", "do", "I", "be", "get", "this", "_sys", "NUMBER", "exit", "main", "argv", "File", "mnist_blackbox", "NUMBER", "py", "line", "NUMBER", "in", "main", "lmbda", "FLAGS", "NUMBER", "lmbda", "aug_batch_size", "FLAGS", "NUMBER", "data_aug_batch_size", "File", "mnist_blackbox", "NUMBER", "py", "line", "NUMBER", "in", "mnist_blackbox", "rng", "img_rows", "img_cols", "nchannels", "File", "mnist_blackbox", "NUMBER", "py", "line", "NUMBER", "in", "train_sub", "args", "eval_params", "NUMBER", "TypeError", "NoneType", "object", "has", "no", "attribute", "__getitem__", "do", "you", "find", "any", "solution", "Both", "of", "these", "change", "lgtm", "Mnist", "tutorial", "was", "broken", "with", "Python", "NUMBER", "it", "invokes", "array", "NUMBER", "array", "method", "provide", "a", "unicode", "string", "param", "where", "an", "ascii", "string", "be", "expected", "NUMBER", "This", "be", "a", "work", "fix", "NUMBER", "It", "seems", "that", "continuous", "integration", "test", "fail", "cause", "job", "error", "not", "relate", "to", "code", "NUMBER", "it", "seems", "NUMBER", "e", "NUMBER", "g", "NUMBER", "two", "jobs", "have", "fail", "with", "Unable", "to", "download", "NUMBER", "archive", "NUMBER", "The", "archive", "may", "not", "exist", "NUMBER", "Please", "consider", "a", "different", "version", "NUMBER", "That", "be", "a", "initialization", "problem", "imho", "this", "travis", "CI", "stuff", "sucks", "a", "lot", "Please", "check", "Interested", "contributors", "can", "look", "at", "this", "function", "to", "get", "start", "LINK", "L", "NUMBER", "What", "I", "notice", "be", "that", "cleverhans", "NUMBER", "utils_tf", "NUMBER", "model_eval", "function", "gives", "unexpect", "result", "i", "NUMBER", "e", "NUMBER", "result", "be", "not", "consistent", "with", "result", "of", "keras", "NUMBER", "models", "NUMBER", "Model", "NUMBER", "evaluate", "NUMBER", "Here", "be", "my", "code", "so", "that", "result", "can", "be", "reproduced", "import", "tensorflow", "as", "tf", "from", "keras", "NUMBER", "models", "import", "load_model", "from", "cleverhans", "NUMBER", "utils_keras", "import", "KerasModelWrapper", "from", "cleverhans", "NUMBER", "utils_tf", "import", "model_eval", "from", "cleverhans", "NUMBER", "utils_mnist", "import", "data_mnist", "from", "keras", "NUMBER", "optimizers", "import", "SGD", "from", "keras", "NUMBER", "layers", "import", "Dense", "Flatten", "from", "keras", "NUMBER", "layers", "import", "Conv", "NUMBER", "D", "MaxPooling", "NUMBER", "D", "from", "keras", "NUMBER", "models", "import", "Sequential", "num_classes", "NUMBER", "batch_size", "NUMBER", "nb_epochs", "NUMBER", "to", "reproduce", "results", "faster", "img_size", "NUMBER", "nb_channels", "NUMBER", "def", "main", "Create", "TF", "session", "sess", "tf", "NUMBER", "Session", "load", "data", "x_train", "y_train", "x_test", "y_test", "data_mnist", "load", "model", "model_path", "same", "result", "if", "we", "load", "a", "model", "instead", "of", "training", "it", "model", "load_model", "model_path", "print", "Model", "loaded", "NUMBER", "train", "a", "model", "model", "get_keras_model", "num_classes", "img_size", "img_size", "nb_channels", "sgd", "SGD", "lr", "NUMBER", "momentum", "NUMBER", "decay", "NUMBER", "model", "NUMBER", "compile", "loss", "categorical_crossentropy", "optimizer", "sgd", "metrics", "accuracy", "model", "NUMBER", "fit", "x_train", "y_train", "batch_size", "batch_size", "epochs", "nb_epochs", "validation_data", "x_test", "y_test", "shuffle", "True", "Score", "trained", "model", "via", "keras", "impl", "of", "evaluate", "method", "scores", "model", "NUMBER", "evaluate", "x_test", "y_test", "verbose", "NUMBER", "print", "Test", "accuracy", "scores", "acc", "initialize", "placeholders", "x", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "shape", "None", "img_size", "img_size", "nb_channels", "y", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "shape", "None", "num_classes", "wrap", "it", "model", "KerasModelWrapper", "model", "initialize", "session", "init_op", "tf", "NUMBER", "global_variables_initializer", "sess", "NUMBER", "run", "init_op", "Score", "trained", "model", "again", "vie", "keras", "implementation", "of", "evaluate", "scores", "model", "NUMBER", "model", "NUMBER", "evaluate", "x_test", "y_test", "verbose", "NUMBER", "print", "Test", "accuracy", "again", "scores", "NUMBER", "evaluate", "wrapper", "via", "model_eval", "predictions", "model", "NUMBER", "get_logits", "x", "accuracy", "model_eval", "sess", "x", "y", "predictions", "x_test", "y_test", "args", "batch_size", "batch_size", "print", "Test", "accuracy", "cleverhans", "impl", "str", "accuracy", "def", "get_keras_model", "num_classes", "input_shape", "model", "Sequential", "model", "NUMBER", "add", "Conv", "NUMBER", "D", "NUMBER", "kernel_size", "NUMBER", "NUMBER", "strides", "NUMBER", "NUMBER", "activation", "relu", "input_shape", "input_shape", "model", "NUMBER", "add", "Conv", "NUMBER", "D", "NUMBER", "kernel_size", "NUMBER", "NUMBER", "strides", "NUMBER", "NUMBER", "activation", "relu", "input_shape", "input_shape", "model", "NUMBER", "add", "MaxPooling", "NUMBER", "D", "pool_size", "NUMBER", "NUMBER", "strides", "NUMBER", "NUMBER", "model", "NUMBER", "add", "Conv", "NUMBER", "D", "NUMBER", "NUMBER", "NUMBER", "activation", "relu", "model", "NUMBER", "add", "Conv", "NUMBER", "D", "NUMBER", "NUMBER", "NUMBER", "activation", "relu", "model", "NUMBER", "add", "MaxPooling", "NUMBER", "D", "pool_size", "NUMBER", "NUMBER", "model", "NUMBER", "add", "Flatten", "model", "NUMBER", "add", "Dense", "NUMBER", "activation", "relu", "model", "NUMBER", "add", "Dense", "NUMBER", "activation", "relu", "model", "NUMBER", "add", "Dense", "num_classes", "activation", "softmax", "return", "model", "if", "__name__", "__main__", "main", "and", "output", "unimportant", "message", "be", "omitted", "it", "produces", "be", "the", "following", "Test", "accuracy", "NUMBER", "Test", "accuracy", "again", "NUMBER", "Test", "accuracy", "cleverhans", "impl", "NUMBER", "How", "be", "it", "the", "case", "that", "those", "accuracies", "be", "not", "the", "same", "Looks", "good", "now", "NUMBER", "Nice", "trick", "As", "far", "as", "I", "can", "tell", "there", "s", "not", "actually", "anything", "to", "cache", "in", "batch_eval", "NUMBER", "model_eval", "build", "the", "accuracy", "graph", "but", "batch_eval", "uses", "a", "predefined", "graph", "NUMBER", "batch_eval_multi_worker", "build", "the", "graph", "on", "several", "GPUs", "but", "batch_eval", "doesn", "t", "build", "anything", "it", "just", "uses", "a", "graph", "the", "user", "already", "build", "with", "their", "own", "GPU", "assignments", "NUMBER", "I", "confirmed", "that", "this", "causes", "the", "tutorial", "slowdown", "NUMBER", "The", "fix", "drops", "the", "time", "per", "epoch", "of", "the", "tutorial", "on", "one", "GTX", "from", "NUMBER", "sec", "on", "epoch", "NUMBER", "to", "NUMBER", "sec", "and", "there", "s", "no", "upward", "trend", "in", "time", "per", "epoch", "anymore", "NUMBER", "Address", "NUMBER", "Sorry", "for", "miss", "lots", "of", "values", "NUMBER", "There", "be", "too", "many", "of", "them", "NUMBER", "Please", "check", "it", "out", "NUMBER", "Thx", "I", "restarted", "the", "Travis", "build", "in", "hope", "that", "it", "will", "successfully", "show", "up", "as", "passing", "here", "this", "time", "so", "we", "can", "merge", "the", "PR", "LGTM", "Changing", "overshoot", "parameter", "do", "not", "have", "any", "effect", "in", "DeepFool", "attack", "NUMBER", "I", "think", "the", "problem", "be", "with", "structural_kwargs", "in", "attack", "NUMBER", "py", "file", "NUMBER", "over_shoot", "should", "be", "change", "to", "overshoot", "NUMBER", "cihangxie", "could", "you", "take", "a", "look", "goodfeli", "I", "m", "use", "generate_np", "yes", "we", "should", "change", "the", "variable", "from", "over_shoot", "to", "overshoot", "NUMBER", "Sorry", "for", "this", "mistake", "cihangxie", "be", "you", "interested", "in", "be", "the", "owner", "of", "this", "issue", "That", "s", "a", "good", "idea", "NUMBER", "We", "could", "warn", "the", "user", "that", "the", "tutorial", "be", "importing", "the", "CleverHans", "library", "from", "a", "directory", "that", "be", "different", "from", "the", "parent", "of", "the", "tutorial", "be", "executed", "NUMBER", "I", "be", "trying", "to", "run", "mnist_tutorial_tf", "NUMBER", "py", "on", "Ubuntu", "NUMBER", "with", "Python", "NUMBER", "and", "TensorFlow", "NUMBER", "but", "I", "be", "get", "Traceback", "most", "recent", "call", "last", "File", "home", "adv_attack_code", "mnist_tutorial_tf", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "from", "cleverhans", "NUMBER", "loss", "import", "LossCrossEntropy", "ImportError", "No", "module", "named", "cleverhans", "NUMBER", "loss", "could", "you", "help", "me", "with", "it", "NUMBER", "Thanks", "NUMBER", "Thanks", "It", "be", "strange", "yes", "I", "would", "also", "have", "expected", "that", "the", "training", "learning", "rate", "would", "be", "impacted", "NUMBER", "It", "may", "be", "the", "case", "that", "the", "previous", "attack", "learning", "rate", "had", "not", "be", "tuned", "for", "this", "particular", "model", "given", "that", "the", "tutorial", "model", "was", "change", "recently", "This", "PR", "add", "basic", "iterative", "method", "in", "Tensorflow", "eager", "mode", "and", "mainly", "modifies", "the", "following", "two", "parts", "NUMBER", "Gradient", "tape", "in", "this", "line", "LINK", "diff", "NUMBER", "e", "NUMBER", "cea", "NUMBER", "defb", "NUMBER", "accf", "NUMBER", "de", "NUMBER", "R", "NUMBER", "should", "watch", "at", "x", "so", "that", "the", "tape", "NUMBER", "gradient", "loss", "x", "can", "be", "calculated", "NUMBER", "Original", "FastGradientMethodTFE", "works", "without", "any", "error", "because", "the", "input", "x", "be", "created", "by", "tfe", "NUMBER", "Variable", "here", "LINK", "_tfe", "NUMBER", "py", "L", "NUMBER", "which", "be", "automatically", "watched", "by", "gradient", "tape", "ref", "LINK", "_docs", "python", "tf", "GradientTape", "NUMBER", "NUMBER", "Add", "BasicIterativeMethodTFE", "and", "add", "it", "into", "available", "attacks", "in", "cleverhans_tutorial", "mnist_tutorial_tfe", "NUMBER", "py", "NUMBER", "It", "seems", "that", "we", "can", "use", "tfe", "NUMBER", "py_func", "to", "selectively", "enable", "eager", "execution", "but", "in", "this", "way", "the", "computational", "graph", "will", "also", "exist", "NUMBER", "See", "Eager", "LINK", "for", "more", "details", "NUMBER", "We", "find", "a", "Contributor", "License", "Agreement", "for", "you", "the", "sender", "of", "this", "pull", "request", "but", "were", "unable", "to", "find", "agreements", "for", "all", "the", "commit", "author", "s", "or", "Co", "authors", "NUMBER", "If", "you", "authored", "these", "maybe", "you", "use", "a", "different", "email", "address", "in", "the", "git", "commit", "than", "was", "use", "to", "sign", "the", "CLA", "login", "here", "LINK", "to", "double", "check", "If", "these", "were", "authored", "by", "someone", "else", "then", "they", "will", "need", "to", "sign", "a", "CLA", "as", "well", "and", "confirm", "that", "they", "re", "okay", "with", "these", "be", "contributed", "to", "Google", "NUMBER", "In", "order", "to", "pass", "this", "check", "please", "resolve", "this", "problem", "and", "have", "the", "pull", "request", "author", "add", "another", "comment", "and", "the", "bot", "will", "run", "again", "NUMBER", "If", "the", "bot", "doesn", "t", "comment", "it", "means", "it", "doesn", "t", "think", "anything", "has", "change", "NUMBER", "TAG", "CLAs", "look", "good", "thanks", "TAG", "LINK", "I", "change", "datadir", "tmp", "to", "datadir", "tmp", "in", "cleverhans", "utils_mnist", "NUMBER", "py", "def", "data_mnist", "datadir", "tmp", "train_start", "NUMBER", "train_end", "NUMBER", "test_start", "NUMBER", "datadir", "tmp", "test_end", "NUMBER", "and", "create", "tmp", "directory", "to", "solve", "this", "error", "I", "agree", "and", "support", "such", "change", "NUMBER", "The", "tempfile", "module", "handles", "temporary", "file", "and", "directories", "in", "a", "portable", "way", "that", "abstracts", "away", "the", "file", "system", "operate", "system", "details", "NUMBER", "I", "still", "have", "to", "find", "a", "case", "when", "it", "doesn", "t", "do", "the", "right", "thing", "NUMBER", "As", "a", "general", "rule", "I", "replace", "any", "hardwired", "temporary", "directory", "with", "the", "appropriate", "call", "into", "tempfile", "NUMBER", "A", "caveat", "though", "temporary", "file", "created", "in", "a", "temporary", "directory", "by", "tempfile", "or", "otherwise", "might", "not", "survive", "a", "reboot", "NUMBER", "In", "fact", "they", "don", "t", "in", "modern", "Linux", "environments", "where", "tmp", "be", "actually", "a", "directory", "in", "the", "volatile", "tmpfs", "in", "core", "filesystem", "NUMBER", "But", "that", "happens", "regardless", "of", "the", "tempdir", "path", "be", "hardwired", "or", "determined", "by", "the", "tempfile", "module", "NUMBER", "On", "Mon", "Aug", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Ian", "Goodfellow", "TAG", "write", "Can", "you", "tell", "us", "more", "about", "your", "setup", "Operating", "system", "etc", "NUMBER", "Do", "you", "have", "no", "tmp", "directory", "Maybe", "we", "should", "use", "this", "instead", "LINK", "tempfile", "NUMBER", "TemporaryDirectory", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Leo", "Mauro", "Asesor", "Direcci\u00f3n", "de", "Servicios", "Telem\u00e1ticos", "Universidad", "Sim\u00f3n", "Bol\u00edvar", "I", "think", "tempfile", "NUMBER", "gettempdir", "be", "what", "you", "want", "here", "it", "returns", "the", "path", "where", "tempfiles", "be", "stored", "on", "the", "current", "system", "as", "oppose", "to", "tempfile", "NUMBER", "TemporaryDirectory", "which", "creates", "a", "unique", "temporary", "directory", "each", "time", "it", "be", "call", "NUMBER", "see", "PR", "NUMBER", "This", "pull", "request", "implement", "the", "spatial", "transformation", "based", "attack", "propose", "in", "NUMBER", "addressing", "NUMBER", "NUMBER", "Here", "be", "the", "procedure", "of", "the", "attack", "NUMBER", "randomly", "sample", "n_samples", "set", "of", "different", "translation", "rotation", "parameters", "NUMBER", "apply", "the", "transformations", "to", "the", "test", "set", "and", "choose", "the", "worst", "of", "n_samples", "transformation", "as", "the", "attack", "A", "notebook", "demo", "of", "the", "attack", "can", "be", "find", "here", "LINK", "attack", "cleverhans_tutorials", "mnist_tutorial_tran", "NUMBER", "ipynb", "where", "the", "test", "accuracy", "of", "the", "classifier", "drops", "from", "NUMBER", "to", "NUMBER", "Results", "in", "NUMBER", "NUMBER", "to", "NUMBER", "NUMBER", "A", "Rotation", "and", "a", "Translation", "Suffice", "Fooling", "CNNs", "with", "Simple", "Transformations", "Engstorm", "et", "al", "NUMBER", "You", "ve", "get", "a", "few", "PEP", "NUMBER", "error", "due", "to", "lines", "be", "too", "long", "let", "me", "see", "if", "I", "can", "clean", "those", "up", "for", "you", "NUMBER", "nottombrown", "Would", "you", "mind", "reviewing", "this", "to", "compare", "it", "with", "your", "implementation", "catherio", "Thanks", "a", "lot", "Sorry", "for", "the", "slow", "response", "NUMBER", "I", "ll", "take", "a", "look", "at", "this", "over", "the", "weekend", "NUMBER", "nottombrown", "Thanks", "Sorry", "for", "the", "delay", "NUMBER", "Scheduled", "some", "time", "on", "Friday", "to", "look", "at", "this", "NUMBER", "nottombrown", "No", "worry", "take", "your", "time", "Let", "me", "know", "if", "you", "would", "like", "any", "clarification", "yenchenlin", "Hello", "nottombrown", "thanks", "for", "your", "helpful", "review", "I", "ve", "simplified", "the", "code", "a", "lot", "based", "on", "your", "suggestions", "NUMBER", "I", "have", "two", "question", "now", "NUMBER", "Is", "the", "padding", "part", "of", "your", "example", "tranformation", "function", "essential", "I", "tried", "it", "but", "tf", "NUMBER", "image", "NUMBER", "resize_image_with_crop_or_pad", "x", "image_height", "image_width", "keep", "outputting", "an", "error", "saying", "that", "Dimension", "be", "NUMBER", "but", "it", "should", "NUMBER", "I", "guess", "NUMBER", "comes", "from", "NUMBER", "original", "size", "NUMBER", "padded", "size", "NUMBER", "NUMBER", "Can", "you", "suggest", "me", "what", "kind", "of", "test", "cases", "should", "I", "add", "Seems", "like", "different", "attacks", "have", "different", "unit", "test", "NUMBER", "Awesome", "NUMBER", "I", "believe", "that", "the", "padding", "be", "important", "because", "otherwise", "the", "corners", "can", "get", "cut", "off", "of", "the", "image", "Try", "saving", "a", "couple", "samples", "as", "images", "and", "looking", "at", "them", "NUMBER", "I", "would", "recommend", "a", "couple", "test", "a", "If", "you", "set", "the", "rotation", "and", "translation", "to", "zero", "and", "pass", "MNIST", "through", "do", "you", "get", "the", "exact", "same", "image", "out", "b", "If", "you", "use", "the", "real", "attack", "do", "it", "reduce", "the", "performance", "of", "the", "toy", "classifier", "in", "test_attacks", "There", "be", "probably", "other", "useful", "test", "but", "I", "can", "t", "think", "of", "them", "off", "the", "top", "of", "my", "head", "NUMBER", "goodfeli", "yes", "work", "on", "it", "NUMBER", "Will", "update", "the", "code", "later", "today", "NUMBER", "Hello", "nottombrown", "and", "goodfeli", "just", "add", "the", "test", "and", "the", "padding", "before", "transformation", "to", "prevent", "corner", "cutoffs", "NUMBER", "Hello", "nottombrown", "just", "push", "another", "commit", "which", "makes", "the", "padding", "size", "be", "propotional", "to", "image", "size", "nice", "catch", "Also", "I", "just", "sampled", "NUMBER", "adversarial", "images", "from", "MNIST", "use", "transformation", "that", "rotate", "the", "images", "by", "NUMBER", "or", "NUMBER", "degree", "download", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "c", "NUMBER", "c", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "c", "NUMBER", "c", "c", "NUMBER", "f", "NUMBER", "png", "I", "just", "rebased", "the", "branch", "to", "master", "but", "not", "sure", "whether", "this", "be", "what", "you", "mean", "NUMBER", "sorry", "if", "I", "mess", "the", "git", "commit", "logs", "NUMBER", "Ok", "travis", "seems", "to", "be", "fail", "now", "but", "lgtm", "pending", "travis", "passing", "LINK", "ci", "NUMBER", "org", "tensorflow", "cleverhans", "jobs", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "bef", "NUMBER", "c", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "c", "NUMBER", "e", "NUMBER", "png", "yenchenlin", "I", "have", "a", "commit", "that", "seems", "to", "solve", "the", "issue", "here", "LINK", "I", "m", "going", "to", "make", "it", "into", "a", "PR", "and", "will", "merge", "it", "in", "if", "it", "pass", "Travis", "NUMBER", "nottombrown", "Oh", "yeah", "thanks", "for", "the", "catch", "Would", "be", "happy", "to", "do", "so", "NUMBER", "This", "replaces", "NUMBER", "by", "remove", "the", "MadryEtAl", "class", "that", "duplicate", "the", "BasicIterativeMethod", "NUMBER", "Instead", "both", "classes", "now", "inherit", "from", "a", "ProjectedGradientDescent", "class", "with", "a", "rand_minmax", "use", "to", "control", "the", "noise", "add", "before", "the", "gradient", "descent", "and", "switch", "from", "one", "attack", "to", "the", "other", "NUMBER", "This", "also", "allows", "use", "L", "NUMBER", "and", "L", "NUMBER", "distances", "w", "MadryEtAl", "which", "was", "previously", "only", "possible", "w", "BasicIterativeMethod", "NUMBER", "Been", "sidetracked", "by", "ICLR", "deadline", "will", "work", "on", "it", "this", "Friday", "afternoon", "LGTM", "OK", "to", "merge", "when", "test", "pass", "We", "have", "two", "lines", "where", "we", "pass", "an", "explicit", "DeprecationWarning", "category", "to", "warnings", "NUMBER", "warn", "NUMBER", "It", "appears", "that", "passing", "that", "category", "causes", "the", "warning", "to", "not", "show", "up", "LINK", "_tf", "NUMBER", "py", "L", "NUMBER", "LINK", "_tf", "NUMBER", "py", "L", "NUMBER", "I", "m", "not", "familiar", "with", "the", "code", "in", "question", "or", "how", "the", "warning", "system", "works", "but", "I", "would", "suggest", "remove", "the", "category", "argument", "in", "order", "to", "get", "the", "warning", "to", "display", "to", "the", "user", "NUMBER", "cc", "david", "berthelot", "who", "was", "the", "original", "author", "Ok", "I", "will", "fix", "it", "On", "Fri", "Aug", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "David", "Berthelot", "TAG", "write", "I", "don", "t", "know", "anything", "about", "it", "I", "just", "copied", "it", "from", "elsewhere", "after", "be", "asked", "during", "review", "to", "add", "deprecation", "warnings", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Our", "PGD", "implementation", "requires", "that", "inputs", "be", "bounded", "to", "NUMBER", "NUMBER", "We", "had", "a", "bug", "in", "data", "preprocessing", "that", "resulted", "in", "an", "input", "that", "was", "slightly", "out", "of", "bounds", "this", "was", "hard", "to", "debug", "initially", "NUMBER", "These", "assertions", "should", "help", "people", "track", "down", "the", "error", "faster", "NUMBER", "Why", "do", "the", "implementation", "need", "the", "input", "to", "be", "bounded", "between", "NUMBER", "and", "NUMBER", "It", "currently", "crops", "the", "output", "to", "be", "between", "NUMBER", "and", "NUMBER", "and", "then", "it", "checks", "that", "the", "perturbation", "be", "less", "than", "epsilon", "NUMBER", "If", "the", "initial", "input", "be", "less", "than", "NUMBER", "or", "more", "than", "NUMBER", "then", "it", "will", "always", "error", "out", "with", "a", "confusing", "assertion", "error", "NUMBER", "Tom", "and", "I", "discussed", "this", "offline", "and", "agreed", "to", "move", "the", "check", "within", "the", "project_perturbation", "helper", "before", "another", "PR", "address", "consolidation", "of", "the", "BIM", "Madry", "and", "pgd_attack", "code", "snippets", "Also", "add", "a", "test", "that", "address", "NUMBER", "goodfeli", "we", "weren", "t", "aware", "of", "this", "when", "I", "opened", "the", "PR", "but", "the", "system", "only", "requires", "the", "NUMBER", "NUMBER", "range", "when", "the", "default", "project_perturbation", "function", "be", "use", "NUMBER", "If", "you", "want", "to", "have", "a", "different", "range", "you", "pass", "in", "a", "different", "project_perturbation", "function", "NUMBER", "I", "think", "that", "this", "seems", "like", "a", "sane", "default", "but", "I", "don", "t", "have", "a", "strong", "opinion", "NUMBER", "Yes", "that", "be", "what", "we", "notice", "on", "Friday", "as", "well", "NUMBER", "This", "be", "specific", "to", "the", "SPSA", "attack", "code", "and", "the", "helper", "function", "that", "it", "calls", "in", "attacks_tf", "NUMBER", "py", "but", "do", "not", "apply", "to", "the", "PGD", "attack", "in", "attacks", "NUMBER", "py", "NUMBER", "Once", "we", "take", "care", "of", "NUMBER", "we", "should", "be", "able", "to", "consolidate", "this", "PGD", "code", "as", "well", "to", "only", "have", "a", "single", "implementation", "that", "uses", "clip_min", "and", "clip_max", "NUMBER", "SPSA", "has", "some", "nice", "test", "LINK", "_imagenet_attacks", "NUMBER", "py", "However", "since", "they", "live", "in", "the", "examples", "directory", "rather", "than", "in", "cleverhans", "or", "tests_tf", "they", "don", "t", "get", "executed", "by", "the", "travis", "NUMBER", "yml", "manifest", "LINK", "L", "NUMBER", "Is", "this", "intentional", "juesato", "Looking", "a", "bit", "more", "deeply", "it", "seems", "like", "it", "s", "not", "there", "because", "it", "be", "too", "expensive", "to", "run", "on", "Inception", "on", "a", "travis", "CPU", "NUMBER", "Could", "we", "perhaps", "test", "it", "on", "MNIST", "or", "a", "toy", "dataset", "Yeah", "the", "small", "test", "ended", "up", "be", "quite", "easy", "to", "add", "NUMBER", "NUMBER", "add", "test", "use", "the", "same", "task", "as", "the", "other", "attacks", "in", "attacks", "NUMBER", "py", "NUMBER", "Closing", "this", "because", "this", "seems", "to", "now", "be", "covered", "sufficiently", "NUMBER", "Within", "the", "Model", "class", "it", "keep", "attempted", "to", "call", "self", "NUMBER", "fprop", "which", "looks", "to", "be", "intentionally", "broken", "instead", "of", "the", "CallableModelWrapper", "NUMBER", "fprop", "NUMBER", "Is", "there", "a", "fix", "come", "for", "this", "Or", "can", "I", "roll", "back", "to", "a", "previous", "version", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "I", "tensorflow", "core", "platform", "cpu_feature_guard", "NUMBER", "cc", "NUMBER", "Your", "CPU", "support", "instructions", "that", "this", "TensorFlow", "binary", "was", "not", "compiled", "to", "use", "AVX", "NUMBER", "FMA", "Traceback", "most", "recent", "call", "last", "File", "blackbox", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "main", "File", "blackbox", "NUMBER", "py", "line", "NUMBER", "in", "main", "pwn", "image", "label", "File", "blackbox", "NUMBER", "py", "line", "NUMBER", "in", "pwn", "batch_size", "NUMBER", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "NUMBER", "py", "line", "NUMBER", "in", "generate_np", "self", "NUMBER", "construct_graph", "fix", "feedable", "x_val", "hash_key", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "NUMBER", "py", "line", "NUMBER", "in", "construct_graph", "x_adv", "self", "NUMBER", "generate", "x", "new_kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "NUMBER", "py", "line", "NUMBER", "in", "generate", "labels", "nb_classes", "self", "NUMBER", "get_or_guess_labels", "x", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "NUMBER", "py", "line", "NUMBER", "in", "get_or_guess_labels", "preds", "self", "NUMBER", "model", "NUMBER", "get_probs", "x", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "model", "NUMBER", "py", "line", "NUMBER", "in", "get_probs", "d", "self", "NUMBER", "fprop", "x", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "model", "NUMBER", "py", "line", "NUMBER", "in", "fprop", "return", "self", "NUMBER", "output_layer", "self", "NUMBER", "callable_fn", "x", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "model", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "return", "self", "NUMBER", "get_probs", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "model", "NUMBER", "py", "line", "NUMBER", "in", "get_probs", "d", "self", "NUMBER", "fprop", "x", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "model", "NUMBER", "py", "line", "NUMBER", "in", "fprop", "raise", "NotImplementedError", "fprop", "not", "implement", "NUMBER", "NotImplementedError", "fprop", "not", "implement", "NUMBER", "Are", "you", "run", "the", "latest", "version", "of", "CleverHans", "Latest", "as", "of", "NUMBER", "weeks", "ago", "NUMBER", "Could", "you", "share", "a", "bit", "more", "context", "with", "a", "code", "snippet", "for", "instance", "As", "shown", "by", "some", "recent", "papers", "NUMBER", "NUMBER", "simple", "transformations", "be", "sufficient", "to", "fool", "neural", "network", "based", "vision", "models", "NUMBER", "Notably", "worst", "of", "NUMBER", "attack", "describe", "in", "NUMBER", "can", "serve", "as", "a", "good", "baseline", "for", "black", "box", "attack", "NUMBER", "Do", "you", "think", "it", "s", "appropriate", "for", "cleverhans", "to", "include", "these", "transformation", "based", "attacks", "Here", "LINK", "attack", "cleverhans_tutorials", "mnist_tutorial_tran", "NUMBER", "ipynb", "be", "an", "ipython", "notebook", "demonstrating", "the", "effectiveness", "of", "these", "attack", "NUMBER", "I", "ve", "test", "the", "model", "in", "mnist_tutorial_tf", "NUMBER", "py", "and", "find", "that", "accuracy", "on", "legitimate", "examples", "NUMBER", "accuracy", "on", "transformed", "examples", "NUMBER", "where", "the", "transformation", "consists", "of", "i", "NUMBER", "degree", "rotation", "and", "ii", "NUMBER", "translation", "along", "each", "direction", "NUMBER", "TAG", "NUMBER", "A", "Rotation", "and", "a", "Translation", "Suffice", "Fooling", "CNNs", "with", "Simple", "Transformations", "Engstrom", "et", "al", "NUMBER", "NUMBER", "Spatially", "Transformed", "Adversarial", "Examples", "Xiao", "et", "al", "NUMBER", "yenchenlin", "would", "you", "be", "able", "to", "put", "together", "a", "PR", "to", "add", "these", "attacks", "npapernot", "Yes", "work", "on", "it", "I", "have", "a", "work", "implementation", "of", "this", "that", "matches", "the", "performance", "from", "the", "paper", "on", "ImageNet", "NUMBER", "Happy", "to", "contribute", "it", "if", "yenchenlin", "s", "implementation", "isn", "t", "ready", "yet", "Hello", "nottombrown", "Thanks", "But", "I", "m", "almost", "there", "would", "be", "awesome", "if", "you", "can", "give", "me", "a", "hand", "in", "the", "PR", "NUMBER", "nottombrown", "We", "can", "close", "this", "now", "Closed", "via", "NUMBER", "As", "shown", "in", "NUMBER", "APIs", "like", "model_train", "and", "model_loss", "in", "utils_tf", "NUMBER", "py", "be", "deprecate", "NUMBER", "Change", "them", "to", "train", "and", "attack_softmax_cross_entropy", "instead", "NUMBER", "I", "rewrote", "the", "program", "to", "verify", "deepfool", "attack", "according", "to", "fgsm", "demo", "but", "there", "seems", "to", "be", "some", "problem", "during", "the", "process", "NUMBER", "It", "seems", "to", "be", "a", "problem", "with", "the", "session", "delivery", "process", "NUMBER", "self", "NUMBER", "Sess", "be", "use", "before", "the", "session", "created", "NUMBER", "So", "the", "sess", "be", "always", "none", "NUMBER", "Can", "you", "help", "me", "with", "it", "or", "provide", "a", "tutorial", "for", "deepfool", "You", "can", "take", "a", "look", "at", "LINK", "diff", "c", "NUMBER", "cecf", "NUMBER", "d", "NUMBER", "fa", "NUMBER", "e", "NUMBER", "b", "NUMBER", "b", "NUMBER", "be", "NUMBER", "Basically", "this", "tutorial", "be", "very", "similar", "to", "C", "W", "tutorial", "so", "be", "not", "merge", "in", "the", "official", "cleverhans", "Erpim", "feel", "free", "to", "reopen", "this", "issue", "if", "the", "tutorial", "provide", "by", "cihangxie", "do", "not", "solve", "your", "problem", "NUMBER", "Handle", "deprecate", "warning", "from", "tf", "NUMBER", "reduce_", "in", "BasicIterativeMethod", "and", "MomentumIterativeMethod", "NUMBER", "By", "the", "way", "this", "should", "have", "already", "be", "handle", "in", "c", "NUMBER", "b", "NUMBER", "d", "NUMBER", "but", "appears", "again", "after", "NUMBER", "a", "NUMBER", "y_train", "in", "both", "cleverhans_tutorials", "mnist_tutorial_tf", "NUMBER", "py", "and", "cleverhans_tutorials", "mnist_tutorial_keras_tf", "NUMBER", "py", "has", "be", "label", "smoothed", "twice", "NUMBER", "One", "be", "here", "LINK", "_tutorials", "mnist_tutorial_keras_tf", "NUMBER", "py", "L", "NUMBER", "and", "another", "occur", "when", "y_train", "pass", "into", "LossCrossEntropy", "which", "be", "invoked", "in", "train", "see", "this", "part", "LINK", "_tutorials", "mnist_tutorial_keras_tf", "NUMBER", "py", "L", "NUMBER", "for", "more", "details", "NUMBER", "Punctuation", "mistake", "Thanks", "for", "your", "pull", "request", "NUMBER", "It", "looks", "like", "this", "may", "be", "your", "first", "contribution", "to", "a", "Google", "open", "source", "project", "if", "not", "look", "below", "for", "help", "NUMBER", "Before", "we", "can", "look", "at", "your", "pull", "request", "you", "ll", "need", "to", "sign", "a", "Contributor", "License", "Agreement", "CLA", "NUMBER", "memo", "Please", "visit", "TAG", "to", "sign", "NUMBER", "Once", "you", "ve", "sign", "or", "fix", "any", "issue", "please", "reply", "here", "e", "NUMBER", "g", "NUMBER", "I", "sign", "it", "and", "we", "ll", "verify", "it", "NUMBER", "What", "to", "do", "if", "you", "already", "sign", "the", "CLA", "Individual", "signers", "It", "s", "possible", "we", "don", "t", "have", "your", "GitHub", "username", "or", "you", "re", "use", "a", "different", "email", "address", "on", "your", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "Corporate", "signers", "Your", "company", "has", "a", "Point", "of", "Contact", "who", "decides", "which", "employees", "be", "authorized", "to", "participate", "NUMBER", "Ask", "your", "POC", "to", "be", "add", "to", "the", "group", "of", "authorized", "contributors", "NUMBER", "If", "you", "don", "t", "know", "who", "your", "Point", "of", "Contact", "be", "direct", "the", "Google", "project", "maintainer", "to", "go", "cla", "troubleshoot", "LINK", "troubleshoot", "Public", "version", "LINK", "troubleshoot", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "be", "the", "email", "use", "for", "the", "Git", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "also", "be", "attached", "to", "your", "GitHub", "account", "LINK", "NUMBER", "TAG", "I", "sign", "it", "CLAs", "look", "good", "thanks", "TAG", "Is", "there", "anything", "I", "need", "to", "do", "for", "you", "to", "approve", "this", "PR", "Hi", "I", "saw", "you", "correct", "the", "Punctuation", "mistake", "at", "the", "README", "NUMBER", "md", "at", "NUMBER", "Is", "there", "possible", "to", "add", "me", "become", "a", "contributor", "for", "this", "project", "NUMBER", "I", "be", "doing", "a", "school", "project", "here", "NUMBER", "Okay", "thanks", "and", "have", "a", "nice", "day", "NUMBER", "Okay", "enjoy", "yourself", "As", "part", "of", "creating", "graph", "None", "argument", "be", "remove", "NUMBER", "This", "works", "as", "expected", "but", "when", "generate_np", "be", "call", "in", "a", "loop", "graph", "will", "be", "constructed", "only", "during", "first", "iteration", "NUMBER", "So", "further", "calls", "to", "generate_np", "can", "contain", "None", "argument", "as", "they", "were", "remove", "in", "function", "construct_graph", "which", "result", "in", "following", "code", "to", "throw", "error", "for", "name", "in", "feedable", "feed_dict", "new_kwargs", "name", "feedable", "name", "None", "argument", "should", "be", "remove", "for", "every", "call", "to", "generate_np", "so", "that", "a", "single", "class", "instantiation", "could", "be", "use", "NUMBER", "goodfeli", "I", "think", "there", "be", "some", "problem", "with", "the", "build", "setup", "NUMBER", "Can", "you", "please", "check", "There", "be", "paths", "that", "go", "to", "construct_graph", "that", "don", "t", "go", "through", "generate_np", "correct", "Does", "remove", "the", "deletion", "of", "unuse", "argument", "cause", "error", "when", "you", "call", "construct_graph", "through", "a", "different", "path", "carlini", "The", "problem", "be", "with", "calling", "generate_np", "multiple", "times", "in", "a", "loop", "NUMBER", "For", "the", "first", "iteration", "the", "construct_graph", "will", "be", "call", "it", "will", "not", "be", "call", "after", "that", "because", "of", "hask_key", "NUMBER", "All", "the", "other", "generate_np", "calls", "will", "have", "kwargs", "with", "some", "unuse", "argument", "too", "which", "will", "not", "be", "delete", "deletion", "be", "part", "of", "construct_graph", "NUMBER", "These", "argument", "throw", "error", "while", "creating", "the", "feed_dict", "NUMBER", "I", "had", "propose", "a", "remedy", "for", "that", "but", "I", "think", "remove", "it", "from", "construct_graph", "be", "not", "safe", "NUMBER", "I", "agree", "with", "you", "that", "remove", "unuse", "argument", "will", "cause", "error", "when", "we", "call", "construct_graph", "from", "different", "paths", "where", "the", "deletion", "be", "not", "do", "NUMBER", "An", "alternative", "could", "be", "to", "check", "for", "unuse", "argument", "while", "creating", "feed_dict", "in", "this", "line", "NUMBER", "for", "name", "in", "feedable", "feed_dict", "new_kwargs", "name", "feedable", "name", "Also", "some", "paths", "could", "be", "use", "the", "unuse", "argument", "as", "control", "variable", "so", "deletion", "in", "construct_variables", "be", "not", "safe", "NUMBER", "Yeah", "I", "understand", "the", "error", "case", "NUMBER", "It", "seems", "like", "putting", "the", "deletion", "in", "construct_graph", "be", "where", "we", "want", "it", "though", "because", "not", "everyone", "uses", "generate_np", "NUMBER", "For", "example", "if", "you", "use", "generate", "it", "still", "needs", "to", "delete", "the", "extra", "argument", "NUMBER", "carlini", "I", "add", "a", "snippet", "in", "generate_np", "to", "fix", "the", "error", "without", "any", "modification", "to", "construct_graph", "NUMBER", "This", "will", "have", "minimum", "implications", "and", "still", "fix", "the", "error", "NUMBER", "Sounds", "good", "NUMBER", "Fixes", "NUMBER", "Ah", "sorry", "for", "the", "slow", "response", "NUMBER", "I", "believe", "that", "setting", "the", "shape", "of", "a", "py_func", "output", "be", "the", "correct", "solution", "here", "so", "LGTM", "On", "Fri", "Jul", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "David", "Berthelot", "TAG", "write", "david", "berthelot", "TAG", "request", "your", "review", "on", "tensorflow", "cleverhans", "NUMBER", "TAG", "Fix", "miss", "shape", "problem", "in", "generate", "for", "models", "that", "use", "py_func", "NUMBER", "You", "be", "receiving", "this", "because", "your", "review", "was", "request", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "I", "ve", "update", "the", "current", "copyright", "to", "NUMBER", "which", "that", "hasn", "t", "change", "around", "NUMBER", "months", "NUMBER", "Thanks", "for", "your", "pull", "request", "NUMBER", "It", "looks", "like", "this", "may", "be", "your", "first", "contribution", "to", "a", "Google", "open", "source", "project", "if", "not", "look", "below", "for", "help", "NUMBER", "Before", "we", "can", "look", "at", "your", "pull", "request", "you", "ll", "need", "to", "sign", "a", "Contributor", "License", "Agreement", "CLA", "NUMBER", "memo", "Please", "visit", "TAG", "to", "sign", "NUMBER", "Once", "you", "ve", "sign", "or", "fix", "any", "issue", "please", "reply", "here", "e", "NUMBER", "g", "NUMBER", "I", "sign", "it", "and", "we", "ll", "verify", "it", "NUMBER", "What", "to", "do", "if", "you", "already", "sign", "the", "CLA", "Individual", "signers", "It", "s", "possible", "we", "don", "t", "have", "your", "GitHub", "username", "or", "you", "re", "use", "a", "different", "email", "address", "on", "your", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "Corporate", "signers", "Your", "company", "has", "a", "Point", "of", "Contact", "who", "decides", "which", "employees", "be", "authorized", "to", "participate", "NUMBER", "Ask", "your", "POC", "to", "be", "add", "to", "the", "group", "of", "authorized", "contributors", "NUMBER", "If", "you", "don", "t", "know", "who", "your", "Point", "of", "Contact", "be", "direct", "the", "Google", "project", "maintainer", "to", "go", "cla", "troubleshoot", "LINK", "troubleshoot", "Public", "version", "LINK", "troubleshoot", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "be", "the", "email", "use", "for", "the", "Git", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "also", "be", "attached", "to", "your", "GitHub", "account", "LINK", "NUMBER", "TAG", "I", "ve", "sign", "the", "Contributor", "License", "Agreement", "CLA", "NUMBER", "CLAs", "look", "good", "thanks", "TAG", "Thanks", "for", "merge", "Much", "appreciate", "Replaced", "the", "deprecate", "function", "calls", "to", "tf", "NUMBER", "nn", "NUMBER", "softmax_cross_entropy_with_logits", "with", "tf", "NUMBER", "losses", "NUMBER", "softmax_cross_entropy", "NUMBER", "already", "did", "a", "good", "job", "of", "tackling", "this", "issue", "NUMBER", "I", "be", "closing", "this", "PR", "NUMBER", "relatively", "recent", "push", "cause", "an", "issue", "with", "EAD", "this", "fix", "it", "NUMBER", "Rebase", "do", "NUMBER", "Can", "this", "fix", "be", "push", "soon", "Lgtm", "NUMBER", "Squashed", "and", "merge", "NUMBER", "Use", "tf", "NUMBER", "nn", "NUMBER", "softmax_cross_entropy_with_logits_v", "NUMBER", "instead", "of", "tf", "NUMBER", "nn", "NUMBER", "softmax_cross_entropy_with_logits", "which", "causes", "deprecate", "warnings", "e", "NUMBER", "g", "NUMBER", "when", "run", "cleverhans_tutorials", "mnist_tutorial_tf", "NUMBER", "py", "for", "Tensorflow", "NUMBER", "Already", "add", "the", "date", "into", "warnings", "NUMBER", "Please", "check", "it", "The", "ModelBasicCNN", "defined", "in", "cleverhans_tutorials", "NUMBER", "tutorial_models", "do", "not", "work", "with", "the", "following", "attacks", "CarliniWagner", "DeepFool", "ElasticNetMethod", "and", "LBFGS", "NUMBER", "I", "don", "t", "know", "exactly", "what", "the", "reason", "be", "but", "it", "seems", "that", "the", "output", "tensor", "of", "generate", "function", "cannot", "infer", "the", "shape", "of", "the", "input", "NUMBER", "summermjj", "can", "you", "share", "a", "snippet", "of", "your", "code", "and", "the", "error", "log", "NUMBER", "summermjj", "Yes", "that", "would", "help", "me", "too", "to", "have", "a", "code", "snippet", "NUMBER", "import", "tensorflow", "as", "tf", "import", "numpy", "as", "np", "tf", "NUMBER", "reset_default_graph", "x_train", "y_train", "x_test", "y_test", "tf", "NUMBER", "keras", "NUMBER", "datasets", "NUMBER", "mnist", "NUMBER", "load_data", "x_train", "np", "NUMBER", "expand_dims", "x_train", "axis", "NUMBER", "NUMBER", "astype", "float", "NUMBER", "NUMBER", "x_test", "np", "NUMBER", "expand_dims", "x_test", "axis", "NUMBER", "NUMBER", "astype", "float", "NUMBER", "NUMBER", "input_shape", "NUMBER", "NUMBER", "NUMBER", "x_train", "x_train", "NUMBER", "NUMBER", "y_train", "y_train", "NUMBER", "NUMBER", "x_test", "x_test", "NUMBER", "NUMBER", "y_test", "y_test", "NUMBER", "NUMBER", "nb_classes", "NUMBER", "y_train", "tf", "NUMBER", "keras", "NUMBER", "utils", "NUMBER", "to_categorical", "y_train", "nb_classes", "y_test", "tf", "NUMBER", "keras", "NUMBER", "utils", "NUMBER", "to_categorical", "y_test", "nb_classes", "print", "x_train", "shape", "x_train", "NUMBER", "shape", "print", "y_train", "shape", "y_train", "NUMBER", "shape", "print", "x_test", "shape", "x_test", "NUMBER", "shape", "from", "cleverhans", "NUMBER", "attacks", "import", "CarliniWagnerL", "NUMBER", "cw", "CarliniWagnerL", "NUMBER", "tf_model", "sess", "sess", "cw_params", "binary_search_steps", "NUMBER", "max_iterations", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "learning_rate", "NUMBER", "initial_const", "NUMBER", "batch_size", "NUMBER", "confidence", "NUMBER", "abort_early", "True", "adv_x", "cw", "NUMBER", "generate", "x", "cw_params", "adv_preds", "tf_model", "NUMBER", "get_logits", "adv_x", "adv_acc", "model_eval", "sess", "x", "y", "adv_preds", "x_test", "y_test", "args", "eval_params", "print", "adv_acc", "And", "here", "be", "the", "error", "that", "I", "get", "ValueError", "Traceback", "most", "recent", "call", "last", "TAG", "in", "TAG", "NUMBER", "abort_early", "True", "NUMBER", "adv_x", "cw", "NUMBER", "generate", "x", "cw_params", "NUMBER", "adv_preds", "tf_model", "NUMBER", "get_logits", "adv_x", "NUMBER", "adv_acc", "model_eval", "sess", "x", "y", "adv_preds", "x_test", "y_test", "args", "eval_params", "NUMBER", "print", "adv_acc", "c", "users", "src", "cleverhans", "cleverhans", "model", "NUMBER", "py", "in", "get_logits", "self", "x", "kwargs", "NUMBER", "i", "NUMBER", "e", "NUMBER", "the", "values", "fed", "as", "inputs", "to", "the", "softmax", "layer", "NUMBER", "NUMBER", "NUMBER", "return", "self", "NUMBER", "fprop", "x", "kwargs", "self", "NUMBER", "O_LOGITS", "NUMBER", "NUMBER", "def", "get_probs", "self", "x", "kwargs", "c", "users", "src", "cleverhans", "cleverhans_tutorials", "tutorial_models", "NUMBER", "py", "in", "fprop", "fail", "resolving", "argument", "NUMBER", "kernel_initializer", "HeReLuNormalInitializer", "NUMBER", "with", "tf", "NUMBER", "variable_scope", "self", "NUMBER", "scope", "reuse", "tf", "NUMBER", "AUTO_REUSE", "NUMBER", "y", "my_conv", "x", "self", "NUMBER", "nb_filters", "NUMBER", "strides", "NUMBER", "padding", "same", "NUMBER", "y", "my_conv", "y", "NUMBER", "self", "NUMBER", "nb_filters", "NUMBER", "strides", "NUMBER", "padding", "valid", "NUMBER", "y", "my_conv", "y", "NUMBER", "self", "NUMBER", "nb_filters", "NUMBER", "strides", "NUMBER", "padding", "valid", "AppData", "Local", "Continuum", "anaconda", "NUMBER", "lib", "site", "package", "tensorflow", "python", "layers", "convolutional", "NUMBER", "py", "in", "conv", "NUMBER", "d", "inputs", "filters", "kernel_size", "strides", "padding", "data_format", "dilation_rate", "activation", "use_bias", "kernel_initializer", "bias_initializer", "kernel_regularizer", "bias_regularizer", "activity_regularizer", "kernel_constraint", "bias_constraint", "trainable", "name", "reuse", "NUMBER", "_reuse", "reuse", "NUMBER", "_scope", "name", "NUMBER", "return", "layer", "NUMBER", "apply", "inputs", "NUMBER", "NUMBER", "AppData", "Local", "Continuum", "anaconda", "NUMBER", "lib", "site", "package", "tensorflow", "python", "keras", "engine", "base_layer", "NUMBER", "py", "in", "apply", "self", "inputs", "args", "kwargs", "NUMBER", "Output", "tensor", "s", "NUMBER", "NUMBER", "NUMBER", "return", "self", "NUMBER", "__call__", "inputs", "args", "kwargs", "NUMBER", "NUMBER", "def", "_set_learning_phase_metadata", "self", "inputs", "outputs", "AppData", "Local", "Continuum", "anaconda", "NUMBER", "lib", "site", "package", "tensorflow", "python", "layers", "base", "NUMBER", "py", "in", "__call__", "self", "inputs", "args", "kwargs", "NUMBER", "NUMBER", "Actually", "call", "layer", "NUMBER", "outputs", "super", "Layer", "self", "NUMBER", "__call__", "inputs", "args", "kwargs", "NUMBER", "NUMBER", "if", "not", "context", "NUMBER", "executing_eagerly", "AppData", "Local", "Continuum", "anaconda", "NUMBER", "lib", "site", "package", "tensorflow", "python", "keras", "engine", "base_layer", "NUMBER", "py", "in", "__call__", "self", "inputs", "args", "kwargs", "NUMBER", "NUMBER", "Check", "input", "assumptions", "set", "before", "layer", "build", "e", "NUMBER", "g", "NUMBER", "input", "rank", "NUMBER", "NUMBER", "self", "NUMBER", "_assert_input_compatibility", "inputs", "NUMBER", "if", "input_list", "and", "self", "NUMBER", "_dtype", "be", "None", "NUMBER", "try", "AppData", "Local", "Continuum", "anaconda", "NUMBER", "lib", "site", "package", "tensorflow", "python", "keras", "engine", "base_layer", "NUMBER", "py", "in", "_assert_input_compatibility", "self", "inputs", "NUMBER", "if", "x", "NUMBER", "get_shape", "NUMBER", "ims", "be", "None", "NUMBER", "raise", "ValueError", "Input", "str", "input_index", "of", "layer", "NUMBER", "self", "NUMBER", "name", "be", "incompatible", "with", "the", "layer", "NUMBER", "its", "rank", "be", "undefined", "but", "the", "layer", "requires", "a", "NUMBER", "defined", "rank", "NUMBER", "ValueError", "Input", "NUMBER", "of", "layer", "conv", "NUMBER", "d_", "NUMBER", "be", "incompatible", "with", "the", "layer", "its", "rank", "be", "undefined", "but", "the", "layer", "requires", "a", "defined", "rank", "NUMBER", "Note", "I", "can", "successfully", "use", "cw", "attack", "use", "generate_np", "function", "but", "I", "was", "just", "curious", "why", "generate", "function", "gives", "me", "this", "error", "NUMBER", "Adapt", "train", "api", "to", "be", "compatible", "with", "the", "latest", "utils_tf", "version", "so", "that", "the", "script", "be", "runnable", "again", "NUMBER", "PEP", "NUMBER", "checker", "error", "fix", "for", "ex_cifar", "NUMBER", "_tf", "NUMBER", "py", "Some", "of", "the", "attack", "methods", "returns", "tensor", "not", "in", "the", "same", "graph", "error", "when", "the", "generate", "function", "be", "call", "NUMBER", "My", "tensorflow", "version", "be", "NUMBER", "SaliencyMapMethod", "notebooks", "Denoising", "the", "Adversarial", "Examples", "utilities", "NUMBER", "py", "in", "attack_classifier", "sess", "x", "y", "model", "x_test", "y_test", "attack_method", "target", "batch_size", "NUMBER", "NUMBER", "NUMBER", "adv_x", "method", "NUMBER", "generate", "x", "params", "NUMBER", "num_batch", "x_test", "NUMBER", "shape", "NUMBER", "batch_size", "NUMBER", "adv_imgs", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "cleverhans", "attacks", "NUMBER", "py", "in", "generate", "self", "x", "kwargs", "NUMBER", "theta", "self", "NUMBER", "eta", "gamma", "self", "NUMBER", "gamma", "NUMBER", "clip_min", "self", "NUMBER", "clip_min", "NUMBER", "clip_max", "self", "NUMBER", "clip_max", "NUMBER", "else", "NUMBER", "from", "NUMBER", "attacks_tf", "import", "jacobian_graph", "jsma_batch", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "cleverhans", "attacks_tf", "NUMBER", "py", "in", "jsma_symbolic", "x", "y_target", "model", "theta", "gamma", "clip_min", "clip_max", "NUMBER", "x_adv", "_", "_", "_", "_", "tf", "NUMBER", "while_loop", "condition", "body", "NUMBER", "x", "y_target", "search_domain", "NUMBER", "True", "NUMBER", "parallel_iterations", "NUMBER", "NUMBER", "NUMBER", "return", "x_adv", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "ops", "control_flow_ops", "NUMBER", "py", "in", "while_loop", "cond", "body", "loop_vars", "shape_invariants", "parallel_iterations", "back_prop", "swap_memory", "name", "maximum_iterations", "NUMBER", "if", "loop_context", "NUMBER", "outer_context", "be", "None", "NUMBER", "ops", "NUMBER", "add_to_collection", "ops", "NUMBER", "GraphKeys", "NUMBER", "WHILE_CONTEXT", "loop_context", "NUMBER", "result", "loop_context", "NUMBER", "BuildLoop", "cond", "body", "loop_vars", "shape_invariants", "NUMBER", "if", "maximum_iterations", "be", "not", "None", "NUMBER", "return", "result", "NUMBER", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "ops", "control_flow_ops", "NUMBER", "py", "in", "BuildLoop", "self", "pred", "body", "loop_vars", "shape_invariants", "NUMBER", "with", "ops", "NUMBER", "get_default_graph", "NUMBER", "_lock", "pylint", "disable", "protected", "access", "NUMBER", "original_body_result", "exit_vars", "self", "NUMBER", "_BuildLoop", "NUMBER", "pred", "body", "original_loop_vars", "loop_vars", "shape_invariants", "NUMBER", "finally", "NUMBER", "self", "NUMBER", "Exit", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "ops", "control_flow_ops", "NUMBER", "py", "in", "_BuildLoop", "self", "pred", "body", "original_loop_vars", "loop_vars", "shape_invariants", "NUMBER", "flat_sequence", "vars_for_body_with_tensor_arrays", "NUMBER", "pre_summaries", "ops", "NUMBER", "get_collection", "ops", "NUMBER", "GraphKeys", "NUMBER", "_SUMMARY_COLLECTION", "pylint", "disable", "protected", "access", "NUMBER", "body_result", "body", "packed_vars_for_body", "NUMBER", "post_summaries", "ops", "NUMBER", "get_collection", "ops", "NUMBER", "GraphKeys", "NUMBER", "_SUMMARY_COLLECTION", "pylint", "disable", "protected", "access", "NUMBER", "if", "not", "nest", "NUMBER", "is_sequence", "body_result", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "cleverhans", "attacks_tf", "NUMBER", "py", "in", "body", "x_in", "y_in", "domain_in", "i_in", "cond_in", "NUMBER", "Create", "a", "NUMBER", "D", "numpy", "array", "of", "scores", "for", "each", "pair", "of", "candidate", "features", "NUMBER", "scores", "tf", "NUMBER", "cast", "scores_mask", "tf_dtype", "NUMBER", "target_sum", "other_sum", "zero_diagonal", "NUMBER", "NUMBER", "Extract", "the", "best", "two", "pixels", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "ops", "math_ops", "NUMBER", "py", "in", "binary_op_wrapper", "x", "y", "NUMBER", "NUMBER", "def", "binary_op_wrapper", "x", "y", "NUMBER", "with", "ops", "NUMBER", "name_scope", "None", "op_name", "x", "y", "as", "name", "NUMBER", "if", "isinstance", "x", "ops", "NUMBER", "Tensor", "and", "isinstance", "y", "ops", "NUMBER", "Tensor", "NUMBER", "return", "func", "x", "y", "name", "name", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "in", "__enter__", "self", "NUMBER", "if", "self", "NUMBER", "_values", "be", "None", "NUMBER", "self", "NUMBER", "_values", "NUMBER", "g", "_get_graph_from_inputs", "self", "NUMBER", "_values", "NUMBER", "self", "NUMBER", "_g_manager", "g", "NUMBER", "as_default", "NUMBER", "self", "NUMBER", "_g_manager", "NUMBER", "__enter__", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "in", "_get_graph_from_inputs", "op_input_list", "graph", "NUMBER", "graph", "graph_element", "NUMBER", "graph", "NUMBER", "elif", "original_graph_element", "be", "not", "None", "NUMBER", "_assert_same_graph", "original_graph_element", "graph_element", "NUMBER", "elif", "graph_element", "NUMBER", "graph", "be", "not", "graph", "NUMBER", "raise", "ValueError", "s", "be", "not", "from", "the", "pass", "in", "graph", "NUMBER", "graph_element", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "in", "_assert_same_graph", "original_item", "item", "NUMBER", "if", "original_item", "NUMBER", "graph", "be", "not", "item", "NUMBER", "graph", "NUMBER", "raise", "ValueError", "s", "must", "be", "from", "the", "same", "graph", "as", "s", "NUMBER", "item", "NUMBER", "original_item", "NUMBER", "NUMBER", "ValueError", "Tensor", "Const", "NUMBER", "shape", "NUMBER", "NUMBER", "dtype", "float", "NUMBER", "must", "be", "from", "the", "same", "graph", "as", "Tensor", "while", "mul_", "NUMBER", "NUMBER", "shape", "NUMBER", "NUMBER", "dtype", "float", "NUMBER", "NUMBER", "CarliniWagnerL", "NUMBER", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "cleverhans", "attacks", "NUMBER", "py", "in", "generate", "self", "x", "kwargs", "NUMBER", "self", "NUMBER", "max_iterations", "self", "NUMBER", "abort_early", "NUMBER", "self", "NUMBER", "initial_const", "self", "NUMBER", "clip_min", "self", "NUMBER", "clip_max", "NUMBER", "nb_classes", "x", "NUMBER", "get_shape", "NUMBER", "as_list", "NUMBER", "NUMBER", "NUMBER", "def", "cw_wrap", "x_val", "y_val", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "cleverhans", "attacks_tf", "NUMBER", "py", "in", "__init__", "self", "sess", "model", "batch_size", "confidence", "targeted", "learning_rate", "binary_search_steps", "max_iterations", "abort_early", "initial_const", "clip_min", "clip_max", "num_labels", "shape", "NUMBER", "NUMBER", "prediction", "BEFORE", "SOFTMAX", "of", "the", "model", "NUMBER", "self", "NUMBER", "output", "model", "NUMBER", "get_logits", "self", "NUMBER", "newimg", "NUMBER", "NUMBER", "distance", "to", "the", "input", "data", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "cleverhans", "model", "NUMBER", "py", "in", "get_logits", "self", "x", "NUMBER", "i", "NUMBER", "e", "NUMBER", "the", "values", "fed", "as", "inputs", "to", "the", "softmax", "layer", "NUMBER", "NUMBER", "NUMBER", "return", "self", "NUMBER", "get_layer", "x", "logits", "NUMBER", "NUMBER", "def", "get_probs", "self", "x", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "cleverhans", "model", "NUMBER", "py", "in", "get_layer", "self", "x", "layer", "NUMBER", "NUMBER", "Return", "the", "symbolic", "representation", "Tensor", "for", "this", "layer", "NUMBER", "NUMBER", "output", "self", "NUMBER", "fprop", "x", "NUMBER", "try", "NUMBER", "request", "output", "layer", "notebooks", "Denoising", "the", "Adversarial", "Examples", "model", "NUMBER", "py", "in", "fprop", "self", "x", "set_ref", "NUMBER", "if", "set_ref", "NUMBER", "layer", "NUMBER", "ref", "x", "NUMBER", "x", "layer", "NUMBER", "fprop", "x", "NUMBER", "assert", "x", "be", "not", "None", "NUMBER", "state", "NUMBER", "append", "x", "notebooks", "Denoising", "the", "Adversarial", "Examples", "model", "NUMBER", "py", "in", "fprop", "self", "x", "NUMBER", "def", "fprop", "self", "x", "NUMBER", "return", "tf", "NUMBER", "nn", "NUMBER", "conv", "NUMBER", "d", "x", "self", "NUMBER", "kernels", "NUMBER", "tuple", "self", "NUMBER", "rides", "NUMBER", "NUMBER", "self", "NUMBER", "padding", "self", "NUMBER", "b", "NUMBER", "NUMBER", "def", "get_params", "self", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "ops", "gen_nn_ops", "NUMBER", "py", "in", "conv", "NUMBER", "d", "input", "filter", "strides", "padding", "use_cudnn_on_gpu", "data_format", "dilations", "name", "NUMBER", "Conv", "NUMBER", "D", "input", "input", "filter", "filter", "strides", "strides", "NUMBER", "padding", "padding", "use_cudnn_on_gpu", "use_cudnn_on_gpu", "NUMBER", "data_format", "data_format", "dilations", "dilations", "name", "name", "NUMBER", "_result", "_op", "NUMBER", "outputs", "NUMBER", "_inputs_flat", "_op", "NUMBER", "inputs", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "op_def_library", "NUMBER", "py", "in", "_apply_op_helper", "self", "op_type_name", "name", "keywords", "NUMBER", "Need", "to", "flatten", "all", "the", "argument", "into", "a", "list", "NUMBER", "NUMBER", "pylint", "disable", "protected", "access", "NUMBER", "g", "ops", "NUMBER", "_get_graph_from_inputs", "_Flatten", "keywords", "NUMBER", "values", "NUMBER", "pylint", "enable", "protected", "access", "NUMBER", "except", "AssertionError", "as", "e", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "in", "_get_graph_from_inputs", "op_input_list", "graph", "NUMBER", "graph", "graph_element", "NUMBER", "graph", "NUMBER", "elif", "original_graph_element", "be", "not", "None", "NUMBER", "_assert_same_graph", "original_graph_element", "graph_element", "NUMBER", "elif", "graph_element", "NUMBER", "graph", "be", "not", "graph", "NUMBER", "raise", "ValueError", "s", "be", "not", "from", "the", "pass", "in", "graph", "NUMBER", "graph_element", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "in", "_assert_same_graph", "original_item", "item", "NUMBER", "if", "original_item", "NUMBER", "graph", "be", "not", "item", "NUMBER", "graph", "NUMBER", "raise", "ValueError", "s", "must", "be", "from", "the", "same", "graph", "as", "s", "NUMBER", "item", "NUMBER", "original_item", "NUMBER", "NUMBER", "ValueError", "Tensor", "add_", "NUMBER", "NUMBER", "shape", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "dtype", "float", "NUMBER", "must", "be", "from", "the", "same", "graph", "as", "Tensor", "conv", "NUMBER", "d", "kernel", "NUMBER", "shape", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "dtype", "float", "NUMBER", "_ref", "NUMBER", "Momentum", "Iterative", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "cleverhans", "attacks", "NUMBER", "py", "in", "generate", "self", "x", "kwargs", "NUMBER", "tf", "NUMBER", "reduce_mean", "tf", "NUMBER", "abs", "grad", "NUMBER", "red_ind", "NUMBER", "keep_dims", "True", "NUMBER", "momentum", "self", "NUMBER", "decay_factor", "momentum", "grad", "NUMBER", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "ops", "gen_math_ops", "NUMBER", "py", "in", "maximum", "x", "y", "name", "NUMBER", "if", "_ctx", "be", "None", "or", "not", "_ctx", "NUMBER", "_eager_context", "NUMBER", "is_eager", "NUMBER", "_", "_", "_op", "_op_def_lib", "NUMBER", "_apply_op_helper", "NUMBER", "Maximum", "x", "x", "y", "y", "name", "name", "NUMBER", "_result", "_op", "NUMBER", "outputs", "NUMBER", "_inputs_flat", "_op", "NUMBER", "inputs", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "op_def_library", "NUMBER", "py", "in", "_apply_op_helper", "self", "op_type_name", "name", "keywords", "NUMBER", "Need", "to", "flatten", "all", "the", "argument", "into", "a", "list", "NUMBER", "NUMBER", "pylint", "disable", "protected", "access", "NUMBER", "g", "ops", "NUMBER", "_get_graph_from_inputs", "_Flatten", "keywords", "NUMBER", "values", "NUMBER", "pylint", "enable", "protected", "access", "NUMBER", "except", "AssertionError", "as", "e", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "in", "_get_graph_from_inputs", "op_input_list", "graph", "NUMBER", "graph", "graph_element", "NUMBER", "graph", "NUMBER", "elif", "original_graph_element", "be", "not", "None", "NUMBER", "_assert_same_graph", "original_graph_element", "graph_element", "NUMBER", "elif", "graph_element", "NUMBER", "graph", "be", "not", "graph", "NUMBER", "raise", "ValueError", "s", "be", "not", "from", "the", "pass", "in", "graph", "NUMBER", "graph_element", "anaconda", "envs", "py", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "in", "_assert_same_graph", "original_item", "item", "NUMBER", "if", "original_item", "NUMBER", "graph", "be", "not", "item", "NUMBER", "graph", "NUMBER", "raise", "ValueError", "s", "must", "be", "from", "the", "same", "graph", "as", "s", "NUMBER", "item", "NUMBER", "original_item", "NUMBER", "NUMBER", "ValueError", "Tensor", "Mean", "NUMBER", "shape", "NUMBER", "NUMBER", "NUMBER", "dtype", "float", "NUMBER", "must", "be", "from", "the", "same", "graph", "as", "Tensor", "Cast", "x", "NUMBER", "shape", "dtype", "float", "NUMBER", "NUMBER", "Yes", "I", "uploaded", "the", "code", "under", "this", "repository", "LINK", "of", "Adversarial", "Attacks", "NUMBER", "The", "code", "for", "the", "model", "architecture", "be", "located", "in", "the", "model", "NUMBER", "py", "NUMBER", "There", "be", "an", "example", "in", "the", "experiments", "NUMBER", "ipynb", "showing", "how", "to", "replicate", "one", "of", "the", "above", "error", "NUMBER", "Thanks", "for", "your", "help", "in", "advance", "NUMBER", "Problem", "resolve", "Bug", "fix", "in", "SPSA", "attack", "Replaced", "self", "NUMBER", "model", "NUMBER", "num_classes", "with", "self", "NUMBER", "model", "NUMBER", "nb_classes", "to", "cater", "for", "the", "change", "in", "model", "NUMBER", "py", "Thanks", "for", "your", "pull", "request", "NUMBER", "It", "looks", "like", "this", "may", "be", "your", "first", "contribution", "to", "a", "Google", "open", "source", "project", "if", "not", "look", "below", "for", "help", "NUMBER", "Before", "we", "can", "look", "at", "your", "pull", "request", "you", "ll", "need", "to", "sign", "a", "Contributor", "License", "Agreement", "CLA", "NUMBER", "memo", "Please", "visit", "TAG", "to", "sign", "NUMBER", "Once", "you", "ve", "sign", "or", "fix", "any", "issue", "please", "reply", "here", "e", "NUMBER", "g", "NUMBER", "I", "sign", "it", "and", "we", "ll", "verify", "it", "NUMBER", "What", "to", "do", "if", "you", "already", "sign", "the", "CLA", "Individual", "signers", "It", "s", "possible", "we", "don", "t", "have", "your", "GitHub", "username", "or", "you", "re", "use", "a", "different", "email", "address", "on", "your", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "Corporate", "signers", "Your", "company", "has", "a", "Point", "of", "Contact", "who", "decides", "which", "employees", "be", "authorized", "to", "participate", "NUMBER", "Ask", "your", "POC", "to", "be", "add", "to", "the", "group", "of", "authorized", "contributors", "NUMBER", "If", "you", "don", "t", "know", "who", "your", "Point", "of", "Contact", "be", "direct", "the", "Google", "project", "maintainer", "to", "go", "cla", "troubleshoot", "LINK", "troubleshoot", "Public", "version", "LINK", "troubleshoot", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "be", "the", "email", "use", "for", "the", "Git", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "also", "be", "attached", "to", "your", "GitHub", "account", "LINK", "NUMBER", "TAG", "I", "sign", "it", "On", "Thu", "Jul", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "googlebot", "TAG", "write", "Thanks", "for", "your", "pull", "request", "NUMBER", "It", "looks", "like", "this", "may", "be", "your", "first", "contribution", "to", "a", "Google", "open", "source", "project", "if", "not", "look", "below", "for", "help", "NUMBER", "Before", "we", "can", "look", "at", "your", "pull", "request", "you", "ll", "need", "to", "sign", "a", "Contributor", "License", "Agreement", "CLA", "NUMBER", "Please", "visit", "LINK", "TAG", "to", "sign", "NUMBER", "Once", "you", "ve", "sign", "or", "fix", "any", "issue", "please", "reply", "here", "e", "NUMBER", "g", "NUMBER", "I", "sign", "it", "and", "we", "ll", "verify", "it", "NUMBER", "What", "to", "do", "if", "you", "already", "sign", "the", "CLA", "Individual", "signers", "It", "s", "possible", "we", "don", "t", "have", "your", "GitHub", "username", "or", "you", "re", "use", "a", "different", "email", "address", "on", "your", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "TAG", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "TAG", "NUMBER", "Corporate", "signers", "Your", "company", "has", "a", "Point", "of", "Contact", "who", "decides", "which", "employees", "be", "authorized", "to", "participate", "NUMBER", "Ask", "your", "POC", "to", "be", "add", "to", "the", "group", "of", "authorized", "contributors", "NUMBER", "If", "you", "don", "t", "know", "who", "your", "Point", "of", "Contact", "be", "direct", "the", "Google", "project", "maintainer", "to", "go", "cla", "troubleshoot", "Public", "version", "TAG", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "be", "the", "email", "use", "for", "the", "Git", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "TAG", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "TAG", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "also", "be", "attached", "to", "your", "GitHub", "account", "TAG", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "CLAs", "look", "good", "thanks", "TAG", "Thanks", "for", "the", "PR", "NUMBER", "If", "we", "be", "going", "to", "add", "this", "logic", "to", "the", "PGD", "attacks", "wouldn", "t", "it", "be", "easier", "to", "call", "fgm", "directly", "from", "attacks", "NUMBER", "py", "in", "the", "attack_single_step", "method", "of", "class", "MadryEtAl", "Unless", "I", "miss", "something", "the", "logic", "implement", "be", "the", "same", "NUMBER", "This", "way", "we", "reduce", "duplicate", "code", "NUMBER", "Agreed", "I", "was", "simply", "add", "to", "the", "already", "write", "code", "for", "PGD", "NUMBER", "Will", "make", "this", "push", "NUMBER", "On", "Thu", "Jul", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Nicolas", "Papernot", "TAG", "write", "Thanks", "for", "the", "PR", "NUMBER", "If", "we", "be", "going", "to", "add", "this", "logic", "to", "the", "PGD", "attacks", "wouldn", "t", "it", "be", "easier", "to", "call", "fgm", "directly", "from", "attacks", "NUMBER", "py", "in", "the", "attack_single_step", "method", "of", "class", "MadryEtAl", "Unless", "I", "miss", "something", "the", "logic", "implement", "be", "the", "same", "NUMBER", "This", "way", "we", "reduce", "duplicate", "code", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Made", "the", "update", "NUMBER", "PEP", "NUMBER", "be", "fail", "on", "the", "latest", "commit", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "expected", "NUMBER", "blank", "lines", "find", "NUMBER", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "expected", "NUMBER", "blank", "line", "find", "NUMBER", "Thanks", "for", "change", "the", "code", "to", "reuse", "the", "FastGradientMethod", "NUMBER", "This", "helps", "reduce", "code", "duplication", "NUMBER", "However", "I", "just", "realized", "that", "now", "BasicIterativeMethod", "and", "MadryEtAl", "be", "identical", "to", "the", "exception", "that", "MadryEtAl", "has", "a", "rand_init", "argument", "which", "makes", "sense", "NUMBER", "I", "m", "sorry", "I", "had", "not", "thought", "about", "that", "but", "I", "think", "it", "would", "make", "sense", "in", "that", "case", "to", "also", "consolidate", "these", "two", "classes", "into", "one", "NUMBER", "To", "make", "the", "change", "backward", "compatible", "would", "you", "be", "able", "to", "create", "a", "new", "class", "call", "ProjectedGradientDescent", "that", "implement", "what", "be", "call", "MadryEtAl", "at", "the", "moment", "and", "then", "have", "BasicIterativeMethod", "and", "MadryEtAl", "return", "an", "object", "instantiated", "from", "the", "ProjectedGradientDescent", "class", "Ideally", "the", "ProjectedGradientDescent", "would", "have", "as", "the", "rand_init", "argument", "not", "a", "boolean", "but", "a", "floating", "point", "value", "which", "be", "use", "as", "the", "abs", "value", "of", "minval", "and", "maxval", "in", "the", "call", "to", "tf", "NUMBER", "random_uniform", "NUMBER", "This", "way", "we", "can", "also", "support", "the", "attack", "presented", "in", "Florian", "s", "work", "on", "transferability", "at", "the", "same", "time", "NUMBER", "At", "the", "moment", "I", "be", "pretty", "busy", "but", "I", "welcome", "any", "other", "contributors", "to", "make", "the", "change", "On", "Tue", "Aug", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "PM", "Nicolas", "Papernot", "TAG", "write", "Thanks", "for", "change", "the", "code", "to", "reuse", "the", "FastGradientMethod", "NUMBER", "This", "helps", "reduce", "code", "duplication", "NUMBER", "However", "I", "just", "realized", "that", "now", "BasicIterativeMethod", "and", "MadryEtAl", "be", "identical", "to", "the", "exception", "that", "MadryEtAl", "has", "a", "rand_init", "argument", "which", "makes", "sense", "NUMBER", "I", "m", "sorry", "I", "had", "not", "thought", "about", "that", "but", "I", "think", "it", "would", "make", "sense", "in", "that", "case", "to", "also", "consolidate", "these", "two", "classes", "into", "one", "NUMBER", "To", "make", "the", "change", "backward", "compatible", "would", "you", "be", "able", "to", "create", "a", "new", "class", "call", "ProjectedGradientDescent", "that", "implement", "what", "be", "call", "MadryEtAl", "at", "the", "moment", "and", "then", "have", "BasicIterativeMethod", "and", "MadryEtAl", "return", "an", "object", "instantiated", "from", "the", "ProjectedGradientDescent", "class", "Ideally", "the", "ProjectedGradientDescent", "would", "have", "as", "the", "rand_init", "argument", "not", "a", "boolean", "but", "a", "floating", "point", "value", "which", "be", "use", "as", "the", "abs", "value", "of", "minval", "and", "maxval", "in", "the", "call", "to", "tf", "NUMBER", "random_uniform", "NUMBER", "This", "way", "we", "can", "also", "support", "the", "attack", "presented", "in", "Florian", "s", "work", "on", "transferability", "at", "the", "same", "time", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Closing", "because", "of", "NUMBER", "Use", "flake", "NUMBER", "LINK", "to", "look", "for", "Python", "syntax", "error", "or", "undefined", "names", "on", "both", "Python", "NUMBER", "and", "Python", "NUMBER", "Python", "NUMBER", "test", "should", "pass", "when", "NUMBER", "be", "fix", "NUMBER", "__E", "NUMBER", "E", "NUMBER", "F", "NUMBER", "F", "NUMBER", "F", "NUMBER", "__", "be", "the", "showstopper", "flake", "NUMBER", "issue", "that", "can", "halt", "the", "runtime", "with", "a", "SyntaxError", "NameError", "etc", "NUMBER", "Most", "other", "flake", "NUMBER", "issue", "be", "merely", "style", "violations", "useful", "for", "readability", "but", "they", "do", "not", "effect", "runtime", "safety", "NUMBER", "This", "PR", "therefore", "recommends", "a", "flake", "NUMBER", "run", "of", "these", "test", "on", "the", "entire", "codebase", "NUMBER", "F", "NUMBER", "undefined", "name", "name", "F", "NUMBER", "undefined", "name", "name", "in", "__all__", "F", "NUMBER", "local", "variable", "name", "referenced", "before", "assignment", "E", "NUMBER", "SyntaxError", "or", "IndentationError", "E", "NUMBER", "SyntaxError", "fail", "to", "compile", "a", "file", "into", "an", "Abstract", "Syntax", "Tree", "I", "know", "that", "the", "other", "test", "did", "not", "find", "what", "flake", "NUMBER", "find", "NUMBER", "I", "see", "no", "problem", "with", "run", "multiple", "test", "if", "they", "run", "efficiently", "and", "they", "discover", "different", "issue", "NUMBER", "The", "__devtools", "test", "test_format__", "approach", "be", "leveraging", "the", "pycodestyle", "module", "NUMBER", "Flake", "NUMBER", "be", "a", "superset", "of", "pycodestyle", "PyFlakes", "McCabe", "complexity", "analysis", "plus", "a", "few", "extra", "test", "of", "its", "own", "NUMBER", "The", "__", "select", "E", "NUMBER", "E", "NUMBER", "F", "NUMBER", "F", "NUMBER", "F", "NUMBER", "__", "turns", "off", "the", "pycodestyle", "stuff", "as", "I", "describe", "in", "the", "commit", "message", "NUMBER", "If", "you", "want", "to", "turn", "the", "screws", "down", "tight", "Django", "do", "this", "NUMBER", "just", "remove", "the", "__", "select__", "option", "and", "then", "flake", "NUMBER", "will", "be", "a", "full", "replacement", "for", "the", "devtools", "test", "test_format", "approach", "but", "will", "be", "even", "more", "comprehensive", "NUMBER", "I", "agree", "NUMBER", "NUMBER", "The", "commit", "message", "starts", "with", "a", "link", "to", "the", "full", "docs", "of", "flake", "NUMBER", "and", "the", "five", "specific", "error", "that", "this", "PR", "be", "meant", "to", "address", "be", "each", "describe", "thereafter", "NUMBER", "Perhaps", "this", "LINK", "ci", "NUMBER", "org", "cclauss", "flake", "NUMBER", "_for_tensorflow", "and", "this", "LINK", "be", "NUMBER", "Apr", "author", "NUMBER", "Acclauss", "be", "NUMBER", "Aclosed", "will", "help", "to", "explain", "NUMBER", "If", "this", "project", "had", "test", "in", "place", "to", "detect", "undefined", "names", "then", "they", "would", "already", "be", "fix", "NUMBER", "If", "they", "were", "already", "fix", "then", "this", "repo", "would", "be", "green", "on", "the", "former", "and", "this", "PR", "would", "not", "exist", "NUMBER", "Were", "you", "able", "to", "find", "exist", "test", "that", "were", "looking", "for", "_undefined", "names_", "I", "was", "not", "NUMBER", "Thanks", "for", "your", "pull", "request", "NUMBER", "It", "looks", "like", "this", "may", "be", "your", "first", "contribution", "to", "a", "Google", "open", "source", "project", "if", "not", "look", "below", "for", "help", "NUMBER", "Before", "we", "can", "look", "at", "your", "pull", "request", "you", "ll", "need", "to", "sign", "a", "Contributor", "License", "Agreement", "CLA", "NUMBER", "memo", "Please", "visit", "TAG", "to", "sign", "NUMBER", "Once", "you", "ve", "sign", "or", "fix", "any", "issue", "please", "reply", "here", "e", "NUMBER", "g", "NUMBER", "I", "sign", "it", "and", "we", "ll", "verify", "it", "NUMBER", "What", "to", "do", "if", "you", "already", "sign", "the", "CLA", "Individual", "signers", "It", "s", "possible", "we", "don", "t", "have", "your", "GitHub", "username", "or", "you", "re", "use", "a", "different", "email", "address", "on", "your", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "Corporate", "signers", "Your", "company", "has", "a", "Point", "of", "Contact", "who", "decides", "which", "employees", "be", "authorized", "to", "participate", "NUMBER", "Ask", "your", "POC", "to", "be", "add", "to", "the", "group", "of", "authorized", "contributors", "NUMBER", "If", "you", "don", "t", "know", "who", "your", "Point", "of", "Contact", "be", "direct", "the", "Google", "project", "maintainer", "to", "go", "cla", "troubleshoot", "LINK", "troubleshoot", "Public", "version", "LINK", "troubleshoot", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "be", "the", "email", "use", "for", "the", "Git", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "also", "be", "attached", "to", "your", "GitHub", "account", "LINK", "NUMBER", "TAG", "I", "sign", "it", "CLAs", "look", "good", "thanks", "TAG", "Thanks", "for", "the", "PR", "NUMBER", "Could", "you", "be", "a", "bit", "more", "specific", "on", "what", "the", "bug", "be", "and", "when", "it", "occur", "Also", "juesato", "could", "you", "take", "a", "look", "since", "you", "write", "most", "of", "the", "code", "that", "this", "PR", "would", "impact", "I", "think", "the", "problem", "be", "that", "in", "the", "method", "_compute_gradients", "of", "class", "UnrolledOptimizer", "argument", "x", "be", "assumed", "to", "be", "a", "list", "while", "the", "same", "argument", "x", "of", "function", "loss_fn", "be", "assumed", "to", "be", "a", "Tensor", "NUMBER", "This", "doesn", "t", "type", "check", "and", "will", "definitely", "cause", "problem", "when", "use", "some", "subclasses", "of", "UnrolledOptimizer", "such", "as", "UnrolledAdam", "NUMBER", "For", "example", "consider", "line", "NUMBER", "NUMBER", "In", "the", "class", "SPSAAdam", "there", "be", "already", "a", "similar", "fix", "for", "this", "problem", "Python", "Assumes", "x", "be", "a", "list", "containing", "a", "NUMBER", "H", "W", "C", "image", "assert", "len", "x", "NUMBER", "and", "x", "NUMBER", "NUMBER", "get_shape", "NUMBER", "as_list", "NUMBER", "NUMBER", "x", "x", "NUMBER", "Therefore", "we", "should", "do", "something", "for", "UnrolledOptimizer", "even", "though", "I", "be", "not", "sure", "my", "fix", "be", "optimal", "NUMBER", "goodfeli", "I", "have", "just", "add", "an", "assert", "to", "check", "input", "format", "NUMBER", "Without", "this", "fix", "there", "will", "be", "an", "exception", "raise", "around", "line", "NUMBER", "I", "will", "do", "it", "asap", "NUMBER", "It", "seems", "there", "be", "no", "test", "for", "pgd_attack", "and", "that", "s", "partly", "the", "reason", "why", "this", "bug", "exists", "NUMBER", "We", "find", "a", "Contributor", "License", "Agreement", "for", "you", "the", "sender", "of", "this", "pull", "request", "but", "were", "unable", "to", "find", "agreements", "for", "all", "the", "commit", "author", "s", "or", "Co", "authors", "NUMBER", "If", "you", "authored", "these", "maybe", "you", "use", "a", "different", "email", "address", "in", "the", "git", "commit", "than", "was", "use", "to", "sign", "the", "CLA", "login", "here", "LINK", "to", "double", "check", "If", "these", "were", "authored", "by", "someone", "else", "then", "they", "will", "need", "to", "sign", "a", "CLA", "as", "well", "and", "confirm", "that", "they", "re", "okay", "with", "these", "be", "contributed", "to", "Google", "NUMBER", "In", "order", "to", "pass", "this", "check", "please", "resolve", "this", "problem", "and", "have", "the", "pull", "request", "author", "add", "another", "comment", "and", "the", "bot", "will", "run", "again", "NUMBER", "If", "the", "bot", "doesn", "t", "comment", "it", "means", "it", "doesn", "t", "think", "anything", "has", "change", "NUMBER", "TAG", "CLAs", "look", "good", "thanks", "TAG", "goodfeli", "npapernot", "I", "have", "fix", "another", "bug", "in", "UnrolledGradientDecent", "and", "add", "test", "for", "pgd_attack", "NUMBER", "List", "of", "major", "change", "in", "the", "code", "NUMBER", "In", "attacks_tf", "NUMBER", "py", "I", "implement", "method", "init_state", "for", "class", "UnrolledGradientDescent", "which", "be", "required", "for", "use", "the", "UnrolledGradientDescent", "optimizer", "in", "pgd_attack", "NUMBER", "As", "discussed", "previously", "I", "fix", "the", "bug", "in", "_compute_gradients", "of", "class", "UnrolledOptimizer", "NUMBER", "In", "test_attacks_tf", "NUMBER", "py", "I", "add", "test", "for", "pgd_attack", "NUMBER", "I", "considered", "cases", "of", "targeted", "untargeted", "attacks", "as", "well", "as", "use", "UnrolledAdam", "or", "UnrolledGradientDescent", "as", "the", "optimizer", "NUMBER", "Hi", "When", "I", "use", "the", "BasicIterativeMethod", "I", "encounter", "a", "problem", "bim", "BasicIterativeMethod", "wrap", "sess", "sess", "bim_params", "eps", "NUMBER", "eps_iter", "NUMBER", "nb_iter", "NUMBER", "ord", "NUMBER", "y_target", "None", "adv_x", "bim", "NUMBER", "generate", "x", "bim_params", "until", "here", "the", "code", "worked", "well", "Then", "I", "tried", "to", "use", "the", "following", "code", "to", "get", "adversarial", "example", "in", "numpy", "array", "and", "some", "error", "occur", "feed_dict", "x", "X_test", "adv_sample", "sess", "NUMBER", "run", "adv_x", "feed_dict", "Traceback", "most", "recent", "call", "last", "File", "TAG", "line", "NUMBER", "in", "TAG", "adv_sample", "sess", "NUMBER", "run", "adv_x", "feed_dict", "File", "Users", "chenhx", "NUMBER", "anaconda", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "run", "run_metadata_ptr", "File", "Users", "chenhx", "NUMBER", "anaconda", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_run", "feed_dict_tensor", "options", "run_metadata", "File", "Users", "chenhx", "NUMBER", "anaconda", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_do_run", "run_metadata", "File", "Users", "chenhx", "NUMBER", "anaconda", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_do_call", "raise", "type", "e", "node_def", "op", "message", "InvalidArgumentError", "Retval", "NUMBER", "do", "not", "have", "value", "This", "problem", "don", "t", "occur", "when", "I", "use", "FastGradientMethod", "NUMBER", "Is", "there", "anything", "I", "do", "wrong", "Hope", "get", "your", "valuable", "suggestion", "NUMBER", "Thanks", "in", "advance", "I", "tried", "this", "NUMBER", "It", "be", "work", "fine", "NUMBER", "We", "might", "need", "slightly", "more", "information", "to", "help", "NUMBER", "You", "can", "modify", "cleverhans_tutorial", "mnist_tutorial_tf", "NUMBER", "py", "to", "figure", "out", "what", "you", "might", "be", "doing", "wrong", "NUMBER", "flake", "NUMBER", "test", "of", "LINK", "on", "Python", "NUMBER", "__flake", "NUMBER", "NUMBER", "count", "select", "E", "NUMBER", "E", "NUMBER", "F", "NUMBER", "F", "NUMBER", "F", "NUMBER", "show", "source", "statistics__", "NUMBER", "examples", "madry_lab_challenges", "cifar", "NUMBER", "madry_cifar", "NUMBER", "_model", "NUMBER", "py", "NUMBER", "NUMBER", "F", "NUMBER", "undefined", "name", "self", "return", "tf", "NUMBER", "nn", "NUMBER", "xw_plus_b", "x", "self", "NUMBER", "w", "self", "NUMBER", "b", "NUMBER", "examples", "madry_lab_challenges", "cifar", "NUMBER", "madry_cifar", "NUMBER", "_model", "NUMBER", "py", "NUMBER", "NUMBER", "F", "NUMBER", "undefined", "name", "self", "return", "tf", "NUMBER", "nn", "NUMBER", "xw_plus_b", "x", "self", "NUMBER", "w", "self", "NUMBER", "b", "NUMBER", "F", "NUMBER", "undefined", "name", "self", "NUMBER", "Yes", "I", "think", "so", "looks", "like", "set_input_shape", "be", "not", "call", "NUMBER", "I", "can", "look", "into", "it", "NUMBER", "Looked", "at", "it", "it", "s", "work", "from", "the", "latest", "master", "as", "far", "as", "can", "tell", "python", "cifar", "NUMBER", "attack_model", "NUMBER", "py", "So", "the", "code", "be", "work", "NUMBER", "I", "don", "t", "what", "flake", "NUMBER", "be", "doing", "if", "it", "s", "a", "config", "problem", "NUMBER", "Are", "you", "sure", "that", "line", "NUMBER", "of", "madry_cifar", "NUMBER", "_model", "NUMBER", "py", "be", "get", "executed", "I", "be", "not", "familiar", "with", "that", "example", "I", "checked", "if", "some", "recent", "refactoring", "broke", "it", "but", "run", "it", "I", "see", "no", "problem", "it", "runs", "properly", "use", "the", "latest", "master", "branch", "NUMBER", "Did", "you", "try", "run", "python", "cifar", "NUMBER", "attack_model", "NUMBER", "py", "I", "be", "trying", "to", "run", "the", "example", "LINK", "_tutorials", "mnist_tutorial_keras_tf", "NUMBER", "py", "I", "be", "get", "the", "following", "error", "bug", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "a", "NUMBER", "a", "NUMBER", "d", "NUMBER", "bb", "NUMBER", "PNG", "I", "get", "the", "following", "error", "run", "the", "command", "err", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "a", "NUMBER", "b", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "dbb", "NUMBER", "e", "NUMBER", "ea", "NUMBER", "PNG", "goodfeli", "If", "the", "follwoing", "image", "helps", "TAG", "I", "tried", "on", "two", "different", "machines", "NUMBER", "Windows", "NUMBER", "MAC", "And", "be", "get", "the", "same", "problem", "NUMBER", "In", "the", "message", "the", "correct", "class", "member", "was", "rendered", "as", "file", "note", "the", "bold", "font", "but", "the", "correct", "member", "be", "__file__", "note", "the", "two", "underscore", "characters", "before", "and", "after", "file", "NUMBER", "It", "seems", "that", "the", "response", "was", "processed", "by", "some", "markup", "processor", "that", "uses", "double", "underscore", "to", "signify", "bold", "font", "NUMBER", "Let", "s", "see", "if", "this", "response", "also", "shows", "the", "__file__", "as", "a", "bold", "file", "NUMBER", "On", "Thu", "Jul", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Md", "Johirul", "Islam", "TAG", "write", "I", "tried", "on", "two", "different", "machines", "NUMBER", "Windows", "NUMBER", "MAC", "And", "be", "get", "the", "same", "problem", "NUMBER", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Leo", "Mauro", "Asesor", "Direcci\u00f3n", "de", "Servicios", "Telem\u00e1ticos", "Universidad", "Sim\u00f3n", "Bol\u00edvar", "goodfeli", "I", "be", "get", "the", "following", "output", "TAG", "TAG", "goodfeli", "This", "be", "what", "i", "get", "TAG", "I", "be", "facing", "the", "same", "issue", "as", "above", "to", "cross", "check", "I", "downloaded", "the", "tar", "NUMBER", "gz", "file", "from", "PyPI", "for", "cleverhans", "LINK", "NUMBER", "tar", "NUMBER", "gz", "NUMBER", "It", "doesn", "t", "contain", "loss", "NUMBER", "py", "The", "PyPi", "package", "contains", "a", "version", "of", "CleverHans", "that", "I", "uploaded", "based", "on", "tag", "v", "NUMBER", "on", "GitHub", "so", "it", "do", "not", "contain", "any", "update", "made", "to", "the", "repo", "since", "then", "NUMBER", "This", "be", "why", "it", "do", "not", "contain", "loss", "NUMBER", "py", "which", "was", "add", "in", "a", "more", "recent", "PR", "by", "David", "NUMBER", "In", "other", "words", "if", "you", "d", "like", "to", "get", "the", "bleeding", "edge", "version", "it", "be", "best", "to", "clone", "the", "GitHub", "repo", "since", "the", "PyPi", "package", "only", "contains", "the", "version", "snapshot", "NUMBER", "You", "can", "see", "the", "README", "for", "the", "corresponding", "instructions", "NUMBER", "npapernot", "Now", "it", "makes", "sense", "to", "me", "NUMBER", "I", "was", "also", "installing", "the", "application", "use", "pip", "NUMBER", "And", "there", "was", "actually", "no", "module", "named", "cleverhans", "NUMBER", "loss", "NUMBER", "I", "checked", "manually", "in", "the", "package", "path", "NUMBER", "Thanks", "Still", "having", "some", "issue", "with", "this", "NUMBER", "The", "following", "code", "snippet", "fail", "on", "a", "fresh", "public", "Google", "colab", "notebook", "on", "both", "Python", "NUMBER", "and", "Python", "NUMBER", "with", "or", "without", "accelerators", "pip", "install", "e", "git", "LINK", "egg", "cleverhans", "from", "__future__", "import", "absolute_import", "from", "cleverhans", "NUMBER", "loss", "import", "CrossEntropy", "Results", "in", "the", "following", "error", "ImportErrorTraceback", "most", "recent", "call", "last", "TAG", "in", "TAG", "NUMBER", "get_ipython", "NUMBER", "system", "u", "pip", "install", "e", "git", "LINK", "egg", "cleverhans", "NUMBER", "from", "__future__", "import", "absolute_import", "NUMBER", "from", "cleverhans", "NUMBER", "loss", "import", "CrossEntropy", "ImportError", "No", "module", "named", "cleverhans", "NUMBER", "loss", "As", "suggested", "in", "this", "StackOverflow", "answer", "LINK", "cleverhans", "on", "collaboratory", "the", "following", "code", "snippet", "fix", "the", "issue", "and", "runs", "without", "error", "pip", "install", "e", "git", "LINK", "egg", "cleverhans", "import", "sys", "sys", "NUMBER", "path", "NUMBER", "append", "content", "src", "cleverhans", "from", "__future__", "import", "absolute_import", "from", "cleverhans", "NUMBER", "loss", "import", "CrossEntropy", "I", "think", "setup", "NUMBER", "py", "might", "have", "a", "bug", "preventing", "the", "paths", "from", "link", "as", "intended", "NUMBER", "chrisdonahue", "It", "s", "not", "cleverhans", "relate", "issue", "NUMBER", "It", "be", "intended", "behavior", "with", "pip", "e", "NUMBER", "You", "can", "simply", "try", "other", "package", "and", "get", "the", "same", "error", "NUMBER", "Or", "remove", "e", "and", "success", "pip", "install", "git", "LINK", "egg", "cleverhans", "from", "cleverhans", "NUMBER", "loss", "import", "CrossEntropy", "pip", "e", "editable", "mode", "installs", "package", "inside", "TAG", "src", "NUMBER", "Individual", "package", "directory", "has", "to", "be", "add", "to", "sys", "NUMBER", "path", "to", "make", "it", "importable", "NUMBER", "Python", "will", "automatically", "fill", "sys", "NUMBER", "path", "at", "startup", "but", "not", "at", "runtime", "NUMBER", "Of", "course", "pip", "has", "no", "capability", "to", "force", "run", "Python", "process", "to", "update", "its", "sys", "NUMBER", "path", "NUMBER", "So", "with", "pip", "e", "you", "need", "either", "append", "package", "directory", "to", "sys", "NUMBER", "path", "or", "restart", "python", "interpreter", "NUMBER", "Ah", "Of", "course", "NUMBER", "Maybe", "an", "update", "to", "the", "README", "would", "help", "NUMBER", "Currently", "the", "word", "be", "If", "you", "d", "instead", "like", "to", "install", "the", "bleeding", "edge", "version", "use", "pip", "install", "e", "git", "LINK", "egg", "cleverhans", "Maybe", "it", "should", "be", "note", "the", "removal", "of", "e", "If", "you", "d", "instead", "like", "to", "install", "the", "bleeding", "edge", "version", "use", "pip", "install", "git", "LINK", "egg", "cleverhans", "If", "you", "d", "like", "to", "develop", "cleverhans", "first", "fork", "the", "repository", "then", "clone", "your", "fork", "git", "clone", "git", "github", "NUMBER", "com", "TAG", "cleverhans", "NUMBER", "git", "cd", "cleverhans", "pip", "install", "e", "NUMBER", "I", "think", "the", "torch", "tutorial", "requires", "pytorch", "but", "it", "be", "not", "part", "of", "setup", "NUMBER", "py", "NUMBER", "I", "would", "prefer", "not", "make", "pytorch", "a", "mandatory", "dependency", "which", "would", "add", "some", "overhead", "for", "those", "use", "tensorflow", "only", "NUMBER", "I", "m", "not", "familiar", "with", "the", "explicit", "dependence", "issue", "either", "but", "nottombrown", "should", "be", "able", "to", "comment", "NUMBER", "One", "suggestion", "I", "had", "would", "be", "to", "NUMBER", "add", "pytorch", "as", "an", "extra", "dependency", "and", "NUMBER", "change", "the", "Travis", "matrix", "to", "include", "a", "pytorch", "config", "and", "NUMBER", "remove", "pytorch", "from", "other", "configs", "of", "the", "matrix", "to", "have", "tensorflow", "only", "configs", "I", "m", "on", "the", "road", "and", "can", "t", "see", "the", "offending", "code", "currently", "but", "papernot", "s", "suggestion", "seems", "reasonable", "to", "me", "NUMBER", "Pytorch", "should", "be", "an", "extras", "dependency", "On", "Wed", "Jul", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Nicolas", "Papernot", "TAG", "write", "I", "would", "prefer", "not", "make", "pytorch", "a", "mandatory", "dependency", "which", "would", "add", "some", "overhead", "for", "those", "use", "tensorflow", "only", "NUMBER", "I", "m", "not", "familiar", "with", "the", "explicit", "dependence", "issue", "either", "but", "nottombrown", "TAG", "should", "be", "able", "to", "comment", "NUMBER", "One", "suggestion", "I", "had", "would", "be", "to", "NUMBER", "add", "pytorch", "as", "an", "extra", "dependency", "and", "NUMBER", "change", "the", "Travis", "matrix", "to", "include", "a", "pytorch", "config", "and", "NUMBER", "remove", "pytorch", "from", "other", "configs", "of", "the", "matrix", "to", "have", "tensorflow", "only", "configs", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "HI", "Ian", "First", "of", "all", "sorry", "for", "not", "first", "going", "to", "the", "Google", "Group", "I", "ll", "make", "sure", "to", "do", "so", "next", "time", "NUMBER", "The", "reason", "why", "I", "add", "the", "EAD", "tutorial", "be", "that", "recently", "we", "ve", "find", "that", "at", "the", "cost", "of", "a", "minimal", "increase", "in", "distortion", "EAD", "can", "be", "configured", "to", "as", "computationally", "efficient", "as", "attacks", "such", "as", "BIM", "and", "PGD", "NUMBER", "Due", "to", "the", "minimal", "increase", "we", "would", "rather", "keep", "the", "default", "params", "to", "reflect", "the", "optimized", "config", "that", "was", "presented", "in", "the", "introductory", "paper", "but", "in", "the", "tutorial", "we", "can", "show", "that", "EAD", "be", "not", "destined", "to", "be", "much", "slower", "than", "BIM", "or", "PGD", "given", "the", "right", "configuration", "it", "can", "be", "made", "as", "fast", "with", "only", "a", "minimal", "increase", "in", "distortion", "NUMBER", "As", "tutorials", "have", "already", "be", "uploaded", "for", "FGSM", "JSMA", "and", "CW", "attacks", "which", "be", "all", "call", "similarly", "due", "to", "the", "consistent", "Cleverhans", "API", "I", "thought", "this", "was", "reason", "enough", "to", "include", "a", "tutorial", "for", "EAD", "NUMBER", "I", "hope", "that", "s", "ok", "NUMBER", "Let", "me", "know", "NUMBER", "On", "Mon", "Jul", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Ian", "Goodfellow", "TAG", "write", "Looks", "mostly", "good", "NUMBER", "There", "be", "one", "typo", "to", "fix", "and", "we", "probably", "want", "the", "new", "tutorial", "to", "go", "in", "the", "examples", "directory", "NUMBER", "Otherwise", "fine", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "I", "can", "remember", "two", "reasons", "for", "add", "a", "tutorial", "for", "the", "JSMA", "but", "not", "sure", "if", "it", "s", "exhaustive", "NUMBER", "demonstrate", "how", "to", "run", "the", "source", "target", "misclassification", "attack", "i", "NUMBER", "e", "NUMBER", "run", "for", "all", "possible", "target", "based", "on", "each", "sample", "source", "class", "and", "NUMBER", "demonstrate", "how", "to", "use", "the", "adversarial", "example", "visualization", "utilities", "NUMBER", "Again", "from", "what", "I", "can", "recall", "that", "s", "why", "the", "JSMA", "tutorial", "do", "not", "include", "adversarial", "training", "unlike", "the", "FGSM", "tutorial", "it", "was", "focusing", "on", "demonstrating", "other", "aspects", "of", "the", "library", "NUMBER", "I", "don", "t", "remember", "why", "we", "add", "the", "tutorial", "for", "the", "CW", "but", "my", "guess", "would", "be", "that", "at", "that", "time", "we", "had", "a", "different", "API", "that", "was", "not", "as", "homogeneous", "across", "the", "different", "attacks", "I", "would", "also", "vote", "against", "a", "proliferation", "of", "attack", "tutorials", "if", "they", "be", "use", "a", "consistent", "API", "Understood", "NUMBER", "Just", "to", "clarify", "the", "CW", "tutorial", "do", "both", "NUMBER", "and", "NUMBER", "cited", "here", "make", "it", "at", "least", "with", "the", "current", "API", "identical", "to", "the", "JSMA", "tutorial", "NUMBER", "Given", "that", "the", "CW", "tutorial", "be", "in", "effect", "identical", "to", "the", "JSMA", "tutorial", "EAD", "be", "quite", "similar", "can", "be", "reduced", "to", "CW", "with", "beta", "NUMBER", "and", "has", "be", "empirically", "shown", "to", "improve", "attack", "strength", "with", "non", "zero", "beta", "and", "at", "least", "I", "feel", "this", "EAD", "hyperparameter", "setting", "be", "important", "for", "users", "to", "know", "as", "it", "allows", "EAD", "CW", "to", "retain", "its", "attack", "strength", "while", "be", "as", "computationally", "efficient", "as", "iterative", "FGSM", "I", "would", "like", "to", "instead", "just", "add", "EAD", "as", "a", "option", "in", "the", "CW", "tutorial", "NUMBER", "This", "will", "require", "no", "additional", "support", "maintenance", "burden", "as", "there", "will", "be", "no", "additional", "tutorial", "NUMBER", "Hope", "this", "at", "least", "be", "ok", "On", "Fri", "Jul", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Nicolas", "Papernot", "TAG", "write", "I", "would", "also", "vote", "against", "a", "proliferation", "of", "attack", "tutorials", "if", "they", "be", "use", "a", "consistent", "API", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "In", "regards", "to", "the", "attack", "only", "the", "fact", "that", "FGSM", "uses", "the", "generate", "function", "while", "CW", "uses", "the", "generate_np", "function", "which", "be", "a", "pretty", "big", "difference", "NUMBER", "EAD", "shares", "this", "difference", "with", "FGSM", "and", "essentially", "all", "of", "the", "other", "attacks", "and", "this", "difference", "isn", "t", "reflected", "in", "the", "docs", "nor", "in", "the", "Arxiv", "paper", "NUMBER", "For", "CW", "this", "be", "only", "reflected", "in", "the", "tutorial", "NUMBER", "Another", "reason", "why", "I", "would", "like", "to", "include", "EAD", "in", "the", "CW", "tutorial", "NUMBER", "Also", "the", "differences", "outlined", "by", "Nicolas", "for", "JSMA", "which", "be", "independent", "of", "actually", "calling", "the", "attack", "NUMBER", "On", "Fri", "Jul", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Ian", "Goodfellow", "TAG", "write", "What", "be", "the", "big", "differences", "between", "the", "tensorflow", "tutorial", "with", "FGSM", "and", "the", "CW", "tutorial", "Are", "the", "APIs", "still", "different", "for", "those", "attacks", "On", "Fri", "Jul", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "ysharma", "NUMBER", "TAG", "write", "Understood", "NUMBER", "Just", "to", "clarify", "the", "CW", "tutorial", "do", "both", "NUMBER", "and", "NUMBER", "cited", "here", "make", "it", "at", "least", "with", "the", "current", "API", "identical", "to", "the", "JSMA", "tutorial", "NUMBER", "Given", "that", "the", "CW", "tutorial", "be", "in", "effect", "identical", "to", "the", "JSMA", "tutorial", "EAD", "be", "quite", "similar", "can", "be", "reduced", "to", "CW", "with", "beta", "NUMBER", "and", "has", "be", "empirically", "shown", "to", "improve", "attack", "strength", "with", "non", "zero", "beta", "and", "at", "least", "I", "feel", "this", "EAD", "hyperparameter", "setting", "be", "important", "for", "users", "to", "know", "as", "it", "allows", "EAD", "CW", "to", "retain", "its", "attack", "strength", "while", "be", "as", "computationally", "efficient", "as", "iterative", "FGSM", "I", "would", "like", "to", "instead", "just", "add", "EAD", "as", "a", "option", "in", "the", "CW", "tutorial", "NUMBER", "This", "will", "require", "no", "additional", "support", "maintenance", "burden", "as", "there", "will", "be", "no", "additional", "tutorial", "NUMBER", "Hope", "this", "at", "least", "be", "ok", "On", "Fri", "Jul", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Nicolas", "Papernot", "TAG", "notifications", "github", "NUMBER", "com", "write", "I", "would", "also", "vote", "against", "a", "proliferation", "of", "attack", "tutorials", "if", "they", "be", "use", "a", "consistent", "API", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "NUMBER", "issuecomment", "NUMBER", "or", "mute", "the", "thread", "TAG", "NUMBER", "NCC", "NUMBER", "MRTkli", "NUMBER", "XTbKpqmBei", "NUMBER", "EqYxks", "NUMBER", "uGHcSgaJpZM", "NUMBER", "VGQqi", "NUMBER", "You", "be", "receiving", "this", "because", "you", "commented", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "NUMBER", "issuecomment", "NUMBER", "or", "mute", "the", "thread", "TAG", "auth", "AAXrGh", "NUMBER", "jU", "NUMBER", "aqdPEjzroECtb", "Jr_mqJSzks", "NUMBER", "uGHrFgaJpZM", "NUMBER", "VGQqi", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Any", "thoughts", "CW", "be", "call", "differently", "than", "FGSM", "BIM", "PGD", "and", "EAD", "shares", "that", "property", "NUMBER", "Users", "realize", "that", "that", "s", "the", "case", "when", "they", "check", "out", "the", "tutorial", "for", "CW", "but", "there", "s", "no", "indication", "in", "the", "repo", "that", "this", "property", "be", "shared", "by", "EAD", "NUMBER", "Plus", "again", "I", "d", "like", "to", "share", "that", "hyperparameter", "config", "which", "gives", "good", "results", "while", "staying", "as", "computationally", "efficient", "as", "PGD", "BIM", "NUMBER", "So", "by", "add", "EAD", "to", "the", "CW", "tutorial", "those", "issue", "would", "be", "resolve", "with", "no", "additional", "support", "maintenance", "required", "NUMBER", "On", "Fri", "Jul", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Yash", "Sharma", "TAG", "write", "In", "regards", "to", "the", "attack", "only", "the", "fact", "that", "FGSM", "uses", "the", "generate", "function", "while", "CW", "uses", "the", "generate_np", "function", "which", "be", "a", "pretty", "big", "difference", "NUMBER", "EAD", "shares", "this", "difference", "with", "FGSM", "and", "essentially", "all", "of", "the", "other", "attacks", "and", "this", "difference", "isn", "t", "reflected", "in", "the", "docs", "nor", "in", "the", "Arxiv", "paper", "NUMBER", "For", "CW", "this", "be", "only", "reflected", "in", "the", "tutorial", "NUMBER", "Another", "reason", "why", "I", "would", "like", "to", "include", "EAD", "in", "the", "CW", "tutorial", "NUMBER", "Also", "the", "differences", "outlined", "by", "Nicolas", "for", "JSMA", "which", "be", "independent", "of", "actually", "calling", "the", "attack", "NUMBER", "On", "Fri", "Jul", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Ian", "Goodfellow", "TAG", "write", "What", "be", "the", "big", "differences", "between", "the", "tensorflow", "tutorial", "with", "FGSM", "and", "the", "CW", "tutorial", "Are", "the", "APIs", "still", "different", "for", "those", "attacks", "On", "Fri", "Jul", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "ysharma", "NUMBER", "TAG", "write", "Understood", "NUMBER", "Just", "to", "clarify", "the", "CW", "tutorial", "do", "both", "NUMBER", "and", "NUMBER", "cited", "here", "make", "it", "at", "least", "with", "the", "current", "API", "identical", "to", "the", "JSMA", "tutorial", "NUMBER", "Given", "that", "the", "CW", "tutorial", "be", "in", "effect", "identical", "to", "the", "JSMA", "tutorial", "EAD", "be", "quite", "similar", "can", "be", "reduced", "to", "CW", "with", "beta", "NUMBER", "and", "has", "be", "empirically", "shown", "to", "improve", "attack", "strength", "with", "non", "zero", "beta", "and", "at", "least", "I", "feel", "this", "EAD", "hyperparameter", "setting", "be", "important", "for", "users", "to", "know", "as", "it", "allows", "EAD", "CW", "to", "retain", "its", "attack", "strength", "while", "be", "as", "computationally", "efficient", "as", "iterative", "FGSM", "I", "would", "like", "to", "instead", "just", "add", "EAD", "as", "a", "option", "in", "the", "CW", "tutorial", "NUMBER", "This", "will", "require", "no", "additional", "support", "maintenance", "burden", "as", "there", "will", "be", "no", "additional", "tutorial", "NUMBER", "Hope", "this", "at", "least", "be", "ok", "On", "Fri", "Jul", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Nicolas", "Papernot", "TAG", "notifications", "github", "NUMBER", "com", "write", "I", "would", "also", "vote", "against", "a", "proliferation", "of", "attack", "tutorials", "if", "they", "be", "use", "a", "consistent", "API", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "NUMBER", "issuecomment", "NUMBER", "or", "mute", "the", "thread", "TAG", "NUMBER", "NCC", "NUMBER", "MRTkli", "NUMBER", "XTbKpqmBei", "NUMBER", "EqYxks", "NUMBER", "uGHcSgaJpZM", "NUMBER", "VGQqi", "NUMBER", "You", "be", "receiving", "this", "because", "you", "commented", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "issuecomment", "NUMBER", "or", "mute", "the", "thread", "TAG", "AAXrGh", "NUMBER", "jU", "NUMBER", "aqdPEjzroECtb", "Jr_mqJSzks", "NUMBER", "uGHrFgaJpZM", "NUMBER", "VGQqi", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Relatively", "busy", "currently", "so", "for", "now", "I", "ll", "pass", "NUMBER", "On", "Tue", "Jul", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Ian", "Goodfellow", "TAG", "write", "Do", "you", "mind", "starting", "a", "discussion", "on", "cleverhans", "dev", "so", "more", "people", "will", "weigh", "in", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Implemented", "batch", "processing", "of", "Jacobian", "Augmentation", "step", "improving", "the", "substitute", "training", "time", "quite", "significantly", "NUMBER", "No", "problem", "I", "ll", "take", "a", "look", "npapernot", "Modified", "code", "based", "on", "the", "comments", "NUMBER", "Please", "review", "NUMBER", "Tensorflow", "NUMBER", "depreciation", "message", "handle", "NUMBER", "npapernot", "Please", "have", "a", "look", "at", "this", "handles", "the", "left", "over", "warnings", "from", "NUMBER", "NUMBER", "My", "bad", "feedforward", "I", "suggested", "earlier", "to", "replace", "the", "deprecate", "call", "inline", "for", "a", "tutorial", "script", "but", "had", "not", "realized", "that", "there", "were", "that", "many", "change", "needed", "throughout", "the", "CleverHans", "module", "as", "well", "NUMBER", "If", "that", "many", "lines", "need", "to", "be", "change", "it", "would", "be", "better", "to", "create", "a", "compat", "module", "indeed", "npapernot", "that", "be", "not", "an", "issue", "i", "can", "roll", "back", "the", "change", "to", "my", "previous", "PR", "NUMBER", "so", "as", "per", "goodfeli", "s", "suggestion", "will", "create", "compact", "NUMBER", "py", "goodfeli", "Yes", "please", "review", "this", "NUMBER", "goodfeli", "Thank", "you", "NUMBER", "The", "cleverhans_tutorial", "has", "be", "write", "only", "for", "MNIST", "with", "extensive", "hard", "code", "of", "data", "set", "parameters", "like", "image", "width", "height", "channels", "NUMBER", "I", "have", "modify", "the", "code", "to", "handle", "other", "data", "sets", "NUMBER", "The", "user", "need", "to", "only", "modify", "utils_mnist", "NUMBER", "py", "for", "his", "dataset", "and", "rest", "of", "the", "code", "will", "work", "out", "of", "box", "NUMBER", "Also", "I", "made", "sure", "the", "tutorials", "work", "for", "all", "image", "size", "channels", "NUMBER", "Image", "parameter", "be", "obtained", "from", "the", "X_train", "variable", "loaded", "by", "utils_mnist", "NUMBER", "py", "Conformed", "to", "PEP", "NUMBER", "Changelog", "NUMBER", "Removed", "Hard", "code", "values", "and", "use", "the", "info", "from", "dataset", "to", "populate", "them", "Images", "NUMBER", "NUMBER", "NUMBER", "to", "img_rows", "img_cols", "nchannels", "NUMBER", "Number", "of", "classes", "NUMBER", "to", "nb_classes", "some", "tutorials", "had", "it", "hard", "code", "it", "while", "others", "were", "not", "use", "it", "for", "model", "generation", "NUMBER", "Commented", "assert", "X_test", "NUMBER", "shape", "NUMBER", "test_end", "test_start", "X_test", "NUMBER", "shape", "The", "assertion", "be", "too", "specific", "to", "MNIST", "NUMBER", "Made", "Label", "Smoothing", "optional", "add", "an", "argument", "as", "some", "tutorials", "be", "use", "it", "while", "others", "do", "not", "NUMBER", "NUMBER", "In", "Keras", "Tutorial", "Changed", "the", "model", "dump", "from", "tmp", "to", "local", "folder", "NUMBER", "This", "can", "be", "problem", "when", "multiple", "users", "on", "the", "same", "machine", "This", "one", "be", "debatable", "NUMBER", "NUMBER", "Removed", "the", "flag", "flags", "NUMBER", "DEFINE_integer", "nb_classes", "NUMBER", "Number", "of", "output", "classes", "as", "change", "this", "parameter", "doesn", "t", "actually", "change", "the", "model", "parameters", "NUMBER", "Comments", "npapernot", "Resolved", "conflict", "with", "latest", "commit", "NUMBER", "There", "be", "an", "interesting", "update", "NUMBER", "X_train", "Y_train", "have", "be", "change", "to", "x_train", "y_train", "NUMBER", "Is", "this", "change", "planned", "I", "have", "seen", "that", "these", "variables", "names", "be", "not", "consistent", "for", "all", "the", "test", "NUMBER", "I", "have", "fix", "most", "of", "them", "as", "of", "now", "NUMBER", "Yes", "that", "was", "a", "recent", "change", "variable", "names", "were", "change", "from", "X_train", "to", "x_train", "in", "NUMBER", "The", "patch", "in", "NUMBER", "also", "discussed", "in", "NUMBER", "add", "model", "NUMBER", "get_params", "to", "model_train", "NUMBER", "However", "since", "get_params", "be", "a", "tensorflow", "specific", "API", "it", "causes", "a", "regression", "when", "use", "Keras", "based", "model", "NUMBER", "This", "PR", "checks", "the", "model", "type", "uses", "a", "conditional", "model_train", "implementation", "and", "also", "sets", "model", "NUMBER", "trainable", "False", "when", "use", "Keras", "based", "models", "NUMBER", "Thanks", "for", "the", "PR", "NUMBER", "Unfortunately", "we", "decided", "a", "few", "months", "ago", "to", "remove", "all", "Keras", "dependencies", "from", "the", "CleverHans", "module", "and", "tutorials", "to", "the", "exception", "of", "two", "file", "cleverhans", "utils_keras", "NUMBER", "py", "and", "cleverhans_tutorials", "mnist_tutorial_keras_tf", "NUMBER", "py", "NUMBER", "This", "be", "primarily", "because", "support", "Keras", "created", "a", "lot", "of", "overhead", "so", "I", "would", "rather", "move", "a", "blackbox", "tutorial", "use", "Keras", "to", "the", "examples", "folder", "where", "we", "have", "looser", "constraints", "for", "merge", "code", "NUMBER", "goodfeli", "any", "opinion", "aspratyush", "Do", "you", "want", "to", "move", "this", "file", "to", "examples", "or", "should", "I", "close", "this", "PR", "Thanks", "npapernot", "Have", "moved", "the", "keras", "based", "black", "box", "model", "file", "to", "examples", "While", "with", "the", "recent", "update", "to", "cleverhans", "NUMBER", "utils_tf", "NUMBER", "train", "that", "makes", "var_list", "an", "optional", "parameter", "resolve", "regression", "with", "respect", "to", "get_params", "usage", "of", "cleverhans", "NUMBER", "loss", "NUMBER", "LossCrossEntropy", "requires", "that", "the", "defined", "model", "be", "an", "instance", "of", "cleverhans", "NUMBER", "model", "NUMBER", "Model", "NUMBER", "Hence", "a", "Keras", "based", "black", "box", "model", "would", "need", "to", "be", "wrapped", "in", "a", "cleverhans", "NUMBER", "utils_keras", "NUMBER", "KerasModelWrapper", "to", "successfully", "run", "this", "example", "NUMBER", "Since", "this", "PR", "was", "about", "re", "enabling", "support", "for", "Keras", "based", "models", "in", "mnist_blackbox", "have", "update", "the", "same", "PR", "to", "address", "handle", "such", "an", "implementation", "NUMBER", "Thanks", "npapernot", "This", "pass", "checks", "now", "We", "find", "a", "Contributor", "License", "Agreement", "for", "you", "the", "sender", "of", "this", "pull", "request", "but", "were", "unable", "to", "find", "agreements", "for", "all", "the", "commit", "author", "s", "or", "Co", "authors", "NUMBER", "If", "you", "authored", "these", "maybe", "you", "use", "a", "different", "email", "address", "in", "the", "git", "commit", "than", "was", "use", "to", "sign", "the", "CLA", "login", "here", "LINK", "to", "double", "check", "If", "these", "were", "authored", "by", "someone", "else", "then", "they", "will", "need", "to", "sign", "a", "CLA", "as", "well", "and", "confirm", "that", "they", "re", "okay", "with", "these", "be", "contributed", "to", "Google", "NUMBER", "In", "order", "to", "pass", "this", "check", "please", "resolve", "this", "problem", "and", "have", "the", "pull", "request", "author", "add", "another", "comment", "and", "the", "bot", "will", "run", "again", "NUMBER", "If", "the", "bot", "doesn", "t", "comment", "it", "means", "it", "doesn", "t", "think", "anything", "has", "change", "NUMBER", "TAG", "CLAs", "look", "good", "thanks", "TAG", "goodfeli", "Alrighty", "this", "should", "be", "g", "NUMBER", "g", "WIP", "I", "think", "it", "would", "make", "sense", "to", "discuss", "this", "change", "on", "the", "cleverhans", "dev", "mailing", "list", "first", "because", "it", "would", "be", "a", "major", "API", "change", "just", "to", "be", "clear", "I", "think", "come", "up", "with", "an", "unified", "terminology", "for", "the", "different", "attack", "parameters", "be", "a", "good", "idea", "and", "would", "be", "beneficial", "to", "the", "community", "if", "do", "based", "on", "a", "consensus", "Yes", "there", "were", "no", "objections", "on", "the", "mailing", "list", "so", "we", "be", "good", "to", "proceed", "with", "the", "change", "aidangomez", "any", "update", "npapernot", "sorry", "super", "preoccupied", "with", "work", "at", "the", "moment", "NUMBER", "Will", "return", "to", "this", "shortly", "NUMBER", "Ping", "aidangomez", "npapernot", "Ah", "yes", "forgot", "about", "this", "NUMBER", "Thanks", "for", "the", "ping", "will", "reset", "to", "master", "and", "try", "my", "best", "to", "knock", "off", "attacks", "NUMBER", "py", "and", "models", "NUMBER", "py", "NUMBER", "The", "change", "I", "ll", "make", "be", "NUMBER", "spaces", "instead", "of", "NUMBER", "and", "consistent", "naming", "schemes", "NUMBER", "Okay", "so", "since", "the", "diffs", "be", "unreadable", "here", "be", "what", "has", "be", "change", "nb_iters", "step_count", "eps_iter", "step_size", "epsilon", "eps", "or", "eps_iter", "depending", "on", "the", "intended", "use", "NUMBER", "space", "indent", "following", "the", "Tensorflow", "style", "guide", "Thanks", "for", "make", "the", "change", "aidangomez", "I", "talked", "about", "this", "offline", "w", "goodfeli", "NUMBER", "We", "d", "rather", "avoid", "merge", "such", "a", "large", "PR", "right", "before", "ICLR", "so", "we", "ll", "hold", "on", "this", "for", "another", "NUMBER", "weeks", "NUMBER", "It", "would", "also", "be", "cleaner", "for", "the", "history", "to", "make", "two", "different", "PRs", "one", "that", "change", "to", "NUMBER", "space", "indents", "and", "one", "that", "change", "the", "names", "NUMBER", "Would", "you", "be", "able", "to", "work", "on", "that", "after", "ICLR", "or", "should", "I", "take", "care", "of", "it", "npapernot", "Hmm", "so", "I", "was", "thinking", "about", "this", "and", "maybe", "we", "should", "create", "a", "decorator", "that", "warns", "when", "someone", "be", "use", "an", "deprecate", "name", "Then", "we", "could", "also", "support", "use", "that", "argument", "for", "some", "time", "period", "NUMBER", "Re", "waiting", "separating", "into", "two", "different", "PRs", "that", "sounds", "fine", "to", "me", "NUMBER", "I", "ll", "repurpose", "this", "one", "into", "the", "renaming", "PR", "and", "open", "a", "new", "two", "spaces", "PR", "NUMBER", "Since", "it", "s", "a", "real", "pain", "in", "the", "arse", "to", "resolve", "conflict", "and", "waiting", "means", "that", "conflict", "will", "proliferate", "just", "ping", "me", "here", "when", "you", "re", "comfortable", "with", "doing", "a", "merge", "and", "I", "ll", "work", "on", "this", "again", "NUMBER", "Once", "you", "give", "me", "the", "go", "ahead", "we", "ll", "need", "to", "put", "a", "hold", "on", "other", "PRs", "so", "that", "this", "one", "can", "go", "through", "unpolluted", "by", "others", "change", "NUMBER", "SGTM", "will", "check", "in", "after", "ICLR", "Move", "away", "from", "adopting", "the", "naming", "scheme", "arbitrarily", "chosen", "by", "authors", "and", "establish", "names", "with", "consistent", "semantics", "across", "attacks", "NUMBER", "Proposed", "naming", "scheme", "eps", "the", "maximum", "perturbation", "applied", "to", "a", "clean", "data", "sample", "step_count", "the", "number", "of", "steps", "to", "take", "in", "an", "iterative", "attack", "step_size", "the", "size", "of", "step", "to", "take", "at", "each", "iteration", "true_label", "disjoint", "w", "target_label", "the", "true", "one_hot", "label", "to", "move", "away", "from", "target_label", "disjoint", "w", "true_label", "the", "target", "one_hot", "label", "to", "move", "towards", "clip_max", "clip", "final", "adversarial", "example", "to", "this", "maximum", "value", "clip_min", "clip", "final", "adversarial", "example", "to", "this", "minimum", "value", "I", "agree", "with", "the", "propose", "argument", "names", "but", "would", "recommend", "run", "this", "by", "the", "cleverhans", "dev", "mailing", "list", "in", "case", "someone", "else", "has", "an", "objection", "goodfeli", "Yeah", "I", "thought", "about", "make", "an", "object", "that", "has", "all", "the", "validation", "logic", "deprecation", "warnings", "build", "in", "but", "I", "wanted", "to", "ask", "you", "two", "how", "separate", "you", "want", "to", "stay", "from", "TF", "NUMBER", "Would", "you", "be", "comfortable", "with", "use", "tf", "NUMBER", "contrib", "NUMBER", "training", "NUMBER", "HParams", "It", "an", "extremely", "familiar", "object", "to", "anyone", "who", "uses", "the", "tensorflow", "Estimator", "API", "or", "Tensor", "NUMBER", "Tensor", "and", "can", "be", "customized", "as", "we", "see", "fit", "NUMBER", "I", "could", "also", "write", "my", "own", "analogous", "object", "NUMBER", "npapernot", "Okay", "I", "ve", "applied", "to", "join", "the", "group", "and", "will", "send", "a", "message", "I", "m", "use", "tf", "NUMBER", "py_func", "to", "wrap", "a", "Python", "function", "and", "build", "a", "new", "operation", "NUMBER", "That", "be", "wrapped", "by", "a", "Keras", "layer", "that", "s", "the", "first", "one", "of", "a", "Keras", "Sequential", "model", "it", "should", "perform", "a", "filtering", "task", "NUMBER", "I", "ve", "reproduced", "the", "problem", "on", "a", "script", "that", "should", "be", "easier", "to", "follow", "NUMBER", "python", "NUMBER", "import", "tensorflow", "as", "tf", "NUMBER", "from", "keras", "NUMBER", "models", "import", "Sequential", "NUMBER", "from", "keras", "NUMBER", "layers", "import", "Dense", "Activation", "NUMBER", "from", "keras", "NUMBER", "engine", "NUMBER", "topology", "import", "Layer", "NUMBER", "from", "cleverhans", "NUMBER", "utils_keras", "import", "KerasModelWrapper", "NUMBER", "from", "cleverhans", "NUMBER", "attacks", "import", "FastGradientMethod", "NUMBER", "NUMBER", "class", "MyLayer", "Layer", "NUMBER", "def", "__init__", "self", "kwargs", "NUMBER", "super", "MyLayer", "self", "NUMBER", "__init__", "kwargs", "NUMBER", "NUMBER", "def", "build", "self", "input_shape", "NUMBER", "super", "MyLayer", "self", "NUMBER", "build", "input_shape", "NUMBER", "NUMBER", "def", "call", "self", "X", "NUMBER", "def", "__function", "X", "return", "np", "NUMBER", "sinh", "X", "NUMBER", "return", "tf", "NUMBER", "reshape", "tf", "NUMBER", "py_func", "__function", "X", "tf", "NUMBER", "float", "NUMBER", "shape", "NUMBER", "X", "NUMBER", "shape", "NUMBER", "NUMBER", "tf", "NUMBER", "reshape", "be", "needed", "to", "enforce", "shape", "of", "output", "NUMBER", "NUMBER", "kerasmodel", "Sequential", "NUMBER", "Dense", "NUMBER", "batch_input_shape", "None", "NUMBER", "NUMBER", "Activation", "softmax", "NUMBER", "MyLayer", "batch_input_shape", "None", "NUMBER", "NUMBER", "Activation", "softmax", "NUMBER", "NUMBER", "kerasmodel", "NUMBER", "compile", "optimizer", "adagrad", "loss", "mse", "metrics", "accuracy", "randomly", "chosen", "params", "NUMBER", "NUMBER", "cleverhansmodel", "KerasModelWrapper", "kerasmodel", "NUMBER", "attack", "FastGradientMethod", "cleverhansmodel", "NUMBER", "NUMBER", "Xsym", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "shape", "None", "NUMBER", "NUMBER", "attack", "NUMBER", "generate", "Xsym", "If", "I", "run", "the", "above", "script", "python", "example", "NUMBER", "py", "Using", "TensorFlow", "backend", "NUMBER", "WARNING", "tensorflow", "From", "home", "g", "NUMBER", "local", "share", "virtualenvs", "cleverhansexample", "iTqMYa", "NUMBER", "src", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "calling", "reduce_max", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "math_ops", "with", "keep_dims", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "keep_dims", "be", "deprecate", "use", "keepdims", "instead", "WARNING", "tensorflow", "From", "home", "g", "NUMBER", "local", "share", "virtualenvs", "cleverhansexample", "iTqMYa", "NUMBER", "src", "cleverhans", "cleverhans", "attacks_tf", "NUMBER", "py", "NUMBER", "calling", "reduce_sum", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "math_ops", "with", "keep_dims", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "keep_dims", "be", "deprecate", "use", "keepdims", "instead", "WARNING", "tensorflow", "From", "home", "g", "NUMBER", "local", "share", "virtualenvs", "cleverhansexample", "iTqMYa", "NUMBER", "src", "cleverhans", "cleverhans", "utils_tf", "NUMBER", "py", "NUMBER", "softmax_cross_entropy_with_logits", "from", "tensorflow", "NUMBER", "python", "NUMBER", "ops", "NUMBER", "nn_ops", "be", "deprecate", "and", "will", "be", "remove", "in", "a", "future", "version", "NUMBER", "Instructions", "for", "update", "Future", "major", "version", "of", "TensorFlow", "will", "allow", "gradients", "to", "flow", "into", "the", "labels", "input", "on", "backprop", "by", "default", "NUMBER", "See", "tf", "NUMBER", "nn", "NUMBER", "softmax_cross_entropy_with_logits_v", "NUMBER", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "home", "g", "NUMBER", "local", "share", "virtualenvs", "cleverhansexample", "iTqMYa", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "op_def_library", "NUMBER", "py", "line", "NUMBER", "in", "_apply_op_helper", "preferred_dtype", "default_dtype", "File", "home", "g", "NUMBER", "local", "share", "virtualenvs", "cleverhansexample", "iTqMYa", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "line", "NUMBER", "in", "internal_convert_to_tensor", "ret", "conversion_func", "value", "dtype", "dtype", "name", "name", "as_ref", "as_ref", "File", "home", "g", "NUMBER", "local", "share", "virtualenvs", "cleverhansexample", "iTqMYa", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "constant_op", "NUMBER", "py", "line", "NUMBER", "in", "_constant_tensor_conversion_function", "return", "constant", "v", "dtype", "dtype", "name", "name", "File", "home", "g", "NUMBER", "local", "share", "virtualenvs", "cleverhansexample", "iTqMYa", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "constant_op", "NUMBER", "py", "line", "NUMBER", "in", "constant", "value", "dtype", "dtype", "shape", "shape", "verify_shape", "verify_shape", "File", "home", "g", "NUMBER", "local", "share", "virtualenvs", "cleverhansexample", "iTqMYa", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "tensor_util", "NUMBER", "py", "line", "NUMBER", "in", "make_tensor_proto", "raise", "ValueError", "None", "values", "not", "support", "NUMBER", "ValueError", "None", "values", "not", "support", "NUMBER", "During", "handle", "of", "the", "above", "exception", "another", "exception", "occur", "Traceback", "most", "recent", "call", "last", "File", "home", "g", "NUMBER", "local", "share", "virtualenvs", "cleverhansexample", "iTqMYa", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "op_def_library", "NUMBER", "py", "line", "NUMBER", "in", "_apply_op_helper", "values", "as_ref", "input_arg", "NUMBER", "is_ref", "NUMBER", "dtype", "NUMBER", "name", "File", "home", "g", "NUMBER", "local", "share", "virtualenvs", "cleverhansexample", "iTqMYa", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "line", "NUMBER", "in", "internal_convert_to_tensor", "ret", "conversion_func", "value", "dtype", "dtype", "name", "name", "as_ref", "as_ref", "File", "home", "g", "NUMBER", "local", "share", "virtualenvs", "cleverhansexample", "iTqMYa", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "constant_op", "NUMBER", "py", "line", "NUMBER", "in", "_constant_tensor_conversion_function", "return", "constant", "v", "dtype", "dtype", "name", "name", "File", "home", "g", "NUMBER", "local", "share", "virtualenvs", "cleverhansexample", "iTqMYa", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "constant_op", "NUMBER", "py", "line", "NUMBER", "in", "constant", "value", "dtype", "dtype", "shape", "shape", "verify_shape", "verify_shape", "File", "home", "g", "NUMBER", "local", "share", "virtualenvs", "cleverhansexample", "iTqMYa", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "tensor_util", "NUMBER", "py", "line", "NUMBER", "in", "make_tensor_proto", "raise", "ValueError", "None", "values", "not", "support", "NUMBER", "ValueError", "None", "values", "not", "support", "NUMBER", "During", "handle", "of", "the", "above", "exception", "another", "exception", "occur", "Traceback", "most", "recent", "call", "last", "File", "example", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "attack", "NUMBER", "generate", "Xsym", "File", "home", "g", "NUMBER", "local", "share", "virtualenvs", "cleverhansexample", "iTqMYa", "NUMBER", "src", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "line", "NUMBER", "in", "generate", "targeted", "self", "NUMBER", "y_target", "be", "not", "None", "File", "home", "g", "NUMBER", "local", "share", "virtualenvs", "cleverhansexample", "iTqMYa", "NUMBER", "src", "cleverhans", "cleverhans", "attacks_tf", "NUMBER", "py", "line", "NUMBER", "in", "fgm", "normalized_grad", "tf", "NUMBER", "sign", "grad", "File", "home", "g", "NUMBER", "local", "share", "virtualenvs", "cleverhansexample", "iTqMYa", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "ops", "math_ops", "NUMBER", "py", "line", "NUMBER", "in", "sign", "return", "gen_math_ops", "NUMBER", "sign", "x", "name", "name", "File", "home", "g", "NUMBER", "local", "share", "virtualenvs", "cleverhansexample", "iTqMYa", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "ops", "gen_math_ops", "NUMBER", "py", "line", "NUMBER", "in", "sign", "Sign", "x", "x", "name", "name", "File", "home", "g", "NUMBER", "local", "share", "virtualenvs", "cleverhansexample", "iTqMYa", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "op_def_library", "NUMBER", "py", "line", "NUMBER", "in", "_apply_op_helper", "input_name", "err", "ValueError", "Tried", "to", "convert", "x", "to", "a", "tensor", "and", "fail", "NUMBER", "Error", "None", "values", "not", "support", "What", "s", "triggering", "the", "error", "be", "LINK", "_tf", "NUMBER", "py", "L", "NUMBER", "L", "NUMBER", "It", "seems", "like", "CleverHans", "requires", "me", "to", "compute", "the", "gradient", "for", "the", "newly", "defined", "operation", "NUMBER", "But", "in", "the", "original", "case", "I", "don", "t", "know", "how", "to", "compute", "the", "gradient", "NUMBER", "The", "original", "function", "wrapped", "by", "_tf", "NUMBER", "py_func_", "be", "rather", "complex", "NUMBER", "Also", "I", "m", "planning", "to", "wrap", "a", "variety", "of", "function", "and", "understanding", "what", "the", "gradient", "be", "for", "all", "of", "them", "be", "a", "pain", "NUMBER", "Note", "that", "decommenting", "lines", "NUMBER", "NUMBER", "of", "the", "above", "script", "makes", "CleverHans", "quite", "again", "NUMBER", "In", "__function", "why", "not", "use", "tf", "NUMBER", "sinh", "instead", "of", "np", "NUMBER", "sinh", "that", "s", "unrelated", "to", "the", "issue", "NUMBER", "By", "the", "way", "the", "point", "of", "use", "tf", "NUMBER", "py_func", "be", "build", "new", "operators", "without", "use", "TensorFlow", "operators", "but", "a", "Python", "function", "NUMBER", "On", "NUMBER", "Jun", "NUMBER", "at", "NUMBER", "NUMBER", "Gokula", "Krishnan", "TAG", "write", "In", "__function", "why", "not", "use", "tf", "NUMBER", "sinh", "instead", "of", "np", "NUMBER", "sinh", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "or", "mute", "the", "thread", "NUMBER", "For", "eager", "execution", "NUMBER", "NUMBER", "A", "subclass", "of", "cleverhans", "NUMBER", "model", "NUMBER", "Model", "for", "tf", "NUMBER", "eager", "models", "be", "add", "NUMBER", "cleverhans", "NUMBER", "model", "NUMBER", "Model_Eager", "this", "uses", "only", "tf_eager", "without", "any", "keras", "dependencies", "NUMBER", "NUMBER", "New", "file", "attacks_eager", "be", "add", "exist", "attacks", "run", "through", "session", "use", "feed_dict", "make", "it", "too", "hard", "to", "adapt", "NUMBER", "but", "structure", "of", "attacks", "NUMBER", "py", "be", "adapted", "to", "attacks_eager", "NUMBER", "py", "so", "objects", "of", "both", "attack", "classes", "can", "be", "replaced", "with", "out", "any", "difference", "NUMBER", "NUMBER", "tutorial", "to", "show", "the", "use", "tutorial_mnist_eager", "NUMBER", "py", "NUMBER", "unit", "test", "for", "all", "the", "above", "NUMBER", "nottombrown", "david", "berthelot", "would", "you", "be", "able", "to", "review", "this", "PR", "since", "you", "use", "this", "logic", "more", "often", "than", "I", "do", "Hmmm", "I", "haven", "t", "actually", "use", "tf", "NUMBER", "eager", "for", "a", "project", "yet", "NUMBER", "david", "berthelot", "have", "you", "david", "berthelot", "request", "change", "be", "applied", "with", "replies", "to", "the", "your", "comments", "let", "me", "know", "what", "your", "thoughts", "be", "particularly", "on", "handle", "AttackTFE", "class", "david", "berthelot", "update", "PR", "contains", "the", "request", "change", "NUMBER", "A", "few", "more", "change", "and", "it", "ll", "be", "do", "the", "refactor", "of", "attack", "to", "reuse", "tf", "as", "much", "as", "possible", "since", "it", "s", "meant", "to", "be", "the", "same", "NUMBER", "Also", "need", "NUMBER", "opinion", "on", "committing", "obsolete", "deprecate", "code", "NUMBER", "Refactored", "to", "NUMBER", "Inhereted", "from", "Attack", "class", "NUMBER", "NUMBER", "Uses", "recently", "merge", "loss", "class", "NUMBER", "Uses", "network", "similar", "to", "recently", "merge", "MakeBasicCNN", "Refactored", "eager", "code", "NUMBER", "The", "final", "change", "be", "do", "NUMBER", "goodfeli", "Please", "have", "a", "look", "at", "this", "NUMBER", "npapernot", "Hi", "review", "process", "be", "do", "david", "berthelot", "approved", "the", "final", "version", "please", "merge", "this", "PR", "NUMBER", "Quick", "question", "though", "perhaps", "this", "be", "the", "wrong", "place", "NUMBER", "When", "I", "just", "step", "back", "and", "think", "about", "the", "infinity", "norm", "of", "a", "gradient", "I", "think", "of", "it", "as", "max", "of", "the", "absolute", "value", "of", "the", "gradient", "NUMBER", "But", "in", "cleverhans", "infinity", "normalization", "on", "the", "gradient", "be", "treated", "as", "it", "as", "the", "sign", "operator", "on", "the", "gradient", "LINK", "_tf", "NUMBER", "py", "L", "NUMBER", "I", "was", "wondering", "if", "anyone", "could", "give", "me", "a", "quick", "hint", "on", "what", "to", "read", "to", "understand", "the", "justification", "LINK", "What", "happened", "Please", "restore", "NUMBER", "Any", "response", "Odd", "NUMBER", "I", "ll", "take", "a", "look", "and", "see", "if", "I", "can", "track", "down", "the", "issue", "Thanks", "for", "the", "PR", "nottombrown", "Do", "we", "have", "to", "trigger", "something", "to", "rebuild", "the", "docs", "They", "don", "t", "seem", "to", "have", "refreshed", "yet", "despite", "the", "PR", "be", "merge", "There", "was", "a", "second", "configuration", "issue", "with", "the", "hosted", "docs", "NUMBER", "Resolved", "now", "and", "the", "docs", "will", "auto", "rebuild", "whenever", "there", "be", "a", "push", "to", "master", "NUMBER", "LINK", "The", "Loss", "be", "the", "base", "for", "defining", "defense", "it", "allows", "to", "manipulate", "inputs", "and", "labels", "NUMBER", "Changes", "New", "Loss", "class", "to", "create", "defenses", "NUMBER", "Implemented", "cross", "entropy", "with", "smoothing", "mixup", "and", "feature", "pairing", "NUMBER", "The", "Model", "class", "has", "a", "few", "change", "remove", "the", "get_layer_names", "API", "since", "it", "wasn", "t", "use", "and", "taking", "explicitly", "the", "number", "of", "classes", "None", "if", "non", "applicable", "NUMBER", "Fixed", "some", "broken", "examples", "to", "be", "compatible", "with", "latest", "TF", "NUMBER", "Thanks", "for", "the", "PR", "David", "I", "will", "take", "a", "look", "asap", "Note", "that", "the", "Model", "class", "be", "not", "backward", "compatible", "so", "may", "be", "we", "should", "do", "a", "Version", "change", "NUMBER", "Let", "me", "know", "what", "you", "think", "NUMBER", "AlexeyKurakin", "could", "you", "take", "a", "look", "as", "well", "I", "remember", "we", "had", "long", "discussions", "about", "this", "last", "summer", "with", "you", "Same", "for", "me", "LGTM", "once", "comments", "be", "address", "and", "the", "conflict", "w", "the", "master", "branch", "be", "resolve", "Successfully", "downloaded", "the", "entire", "cleverhans", "directory", "use", "pip", "on", "Mac", "NUMBER", "Now", "in", "mnist_tutorial_keras_tf", "NUMBER", "py", "all", "the", "from", "cleverhans", "NUMBER", "import", "statements", "be", "erring", "with", "This", "inspection", "detects", "names", "that", "should", "resolve", "but", "don", "t", "NUMBER", "Any", "advice", "to", "fix", "this", "would", "be", "awesome", "thank", "you", "NUMBER", "Hi", "folks", "I", "m", "a", "student", "works", "on", "adversarial", "examples", "and", "new", "to", "cleverhans", "NUMBER", "I", "spend", "some", "time", "on", "the", "entry", "level", "tensorflow", "tutorial", "of", "MNIST", "with", "FGSM", "NUMBER", "I", "notice", "that", "the", "MLP", "model", "be", "use", "lower", "level", "APIs", "NUMBER", "I", "have", "my", "local", "copy", "which", "rewrites", "the", "MLP", "with", "high", "level", "tensorflow", "API", "like", "tf", "NUMBER", "layers", "which", "be", "more", "like", "a", "Keras", "syntax", "NUMBER", "I", "m", "not", "sure", "if", "this", "be", "something", "useful", "or", "there", "be", "existed", "examples", "NUMBER", "Anyway", "if", "it", "could", "benefit", "others", "I", "m", "more", "than", "happy", "to", "contribute", "my", "code", "NUMBER", "Thanks", "for", "the", "reply", "goodfeli", "NUMBER", "BTW", "I", "saw", "that", "model_train", "and", "model_loss", "be", "provide", "as", "utils", "NUMBER", "However", "it", "didn", "t", "support", "complex", "model", "structure", "such", "as", "stack", "model", "or", "ensemble", "model", "and", "only", "cross", "entropy", "loss", "NUMBER", "Is", "it", "a", "feature", "to", "be", "support", "in", "the", "future", "Howdy", "Thanks", "so", "much", "for", "sharing", "your", "work", "When", "trying", "to", "reproduce", "an", "error", "in", "the", "Adversarial", "Patch", "notebook", "relate", "to", "fail", "to", "load", "the", "cross_model_patch", "object", "I", "find", "that", "when", "following", "the", "instructions", "for", "run", "the", "notebook", "in", "Colaboratory", "Python", "NUMBER", "with", "GPU", "the", "notebook", "throw", "a", "ResourceExhaustedError", "at", "the", "Transfer", "Attack", "AKA", "Blackbox", "section", "NUMBER", "Here", "s", "a", "link", "to", "the", "cell", "LINK", "_AatTq", "scrollTo", "iibw", "NUMBER", "L", "NUMBER", "NxVK", "NUMBER", "line", "NUMBER", "uniqifier", "NUMBER", "in", "a", "copy", "of", "the", "notebook", "that", "I", "run", "NUMBER", "It", "seems", "that", "in", "the", "notebook", "in", "the", "repo", "this", "cell", "might", "not", "have", "be", "run", "there", "s", "no", "output", "for", "that", "cell", "saved", "NUMBER", "Any", "insights", "on", "how", "to", "get", "the", "notebook", "run", "would", "be", "much", "appreciated", "Not", "sure", "what", "s", "up", "with", "this", "NUMBER", "I", "just", "spun", "up", "a", "new", "colab", "with", "Python", "NUMBER", "and", "a", "GPU", "and", "it", "worked", "correctly", "for", "me", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "e", "NUMBER", "c", "NUMBER", "ac", "NUMBER", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "fb", "NUMBER", "ecafe", "NUMBER", "b", "NUMBER", "png", "I", "would", "try", "to", "fix", "it", "by", "doing", "the", "following", "in", "order", "of", "increasing", "annoyingness", "NUMBER", "Restart", "your", "colab", "kernel", "NUMBER", "Change", "your", "runtime", "type", "and", "then", "change", "it", "back", "NUMBER", "Reduce", "the", "BATCH_SIZE", "from", "NUMBER", "to", "NUMBER", "I", "had", "already", "tried", "the", "first", "two", "suggestions", "but", "dropping", "the", "BATCH_SIZE", "down", "to", "NUMBER", "worked", "like", "a", "charm", "thanks", "Beginning", "blackbox", "experiment", "with", "ensemble", "resnet", "NUMBER", "xception", "inceptionv", "NUMBER", "vgg", "NUMBER", "and", "target", "vgg", "NUMBER", "NUMBER", "loss", "NUMBER", "NUMBER", "NUMBER", "loss", "NUMBER", "I", "build", "cleverhans", "environment", "NUMBER", "And", "executed", "mnist_tutorial_tf", "NUMBER", "py", "NUMBER", "The", "mnist_tutorial_tf", "NUMBER", "py", "worked", "fine", "NUMBER", "And", "I", "do", "some", "easy", "change", "like", "save", "models", "NUMBER", "I", "want", "to", "save", "the", "fooling", "image", "file", "generate", "by", "FGSM", "Such", "as", "The", "panda", "image", "in", "the", "Explaining", "and", "Harnessing", "Adversarial", "Examples", "NUMBER", "But", "It", "be", "not", "work", "well", "NUMBER", "What", "source", "code", "should", "I", "add", "to", "The", "tutorial", "I", "would", "like", "to", "export", "the", "adversarial", "examples", "in", "the", "MNIST", "Blackbox", "Example", "to", "my", "file", "system", "LINK", "_tutorials", "mnist_blackbox", "NUMBER", "py", "L", "NUMBER", "I", "experimented", "with", "the", "following", "code", "def", "convert_and_save_image", "image", "encoded_image", "tf", "NUMBER", "image", "NUMBER", "encode_jpeg", "image", "format", "grayscale", "writeOp", "tf", "NUMBER", "write_file", "NUMBER", "example_images", "adversarials", "datetime", "NUMBER", "datetime", "NUMBER", "now", "NUMBER", "rftime", "Y", "m", "d", "H", "M", "S", "str", "round", "random", "NUMBER", "random", "NUMBER", "NUMBER", "jpg", "encoded_image", "return", "writeOp", "casted_image_tf", "tf", "NUMBER", "cast", "x_adv_sub", "tf", "NUMBER", "uint", "NUMBER", "encoded_images_tf", "tf", "NUMBER", "map_fn", "convert_and_save_image", "casted_image_tf", "session", "NUMBER", "run", "encoded_images_tf", "But", "as", "writeOp", "be", "an", "operation", "it", "can", "not", "be", "run", "by", "session", "NUMBER", "run", "and", "also", "needs", "some", "values", "for", "the", "placeholders", "NUMBER", "It", "would", "be", "awesome", "if", "someone", "could", "help", "me", "with", "this", "NUMBER", "I", "just", "appended", "this", "code", "in", "Line", "NUMBER", "in", "the", "MNIST", "Blackbox", "Example", "to", "get", "PIL", "images", "from", "the", "Tensors", "and", "store", "them", "in", "the", "file", "system", "encoded_images", "sess", "NUMBER", "run", "x_adv_sub", "feed_dict", "x", "X_test", "import", "os", "from", "PIL", "import", "Image", "import", "datetime", "directory", "tmp", "adv_learn", "example_images", "adversarials", "datetime", "NUMBER", "datetime", "NUMBER", "now", "NUMBER", "rftime", "Y", "m", "d", "H", "M", "if", "not", "os", "NUMBER", "path", "NUMBER", "exists", "directory", "os", "NUMBER", "makedirs", "directory", "images", "for", "idx", "img_arr", "in", "enumerate", "encoded_images", "img", "Image", "NUMBER", "fromarray", "np", "NUMBER", "squeeze", "img_arr", "NUMBER", "NUMBER", "convert", "RGB", "Pixels", "be", "in", "range", "NUMBER", "to", "NUMBER", "and", "need", "to", "be", "in", "NUMBER", "NUMBER", "for", "PIL", "img", "NUMBER", "show", "path", "directory", "str", "idx", "NUMBER", "jpeg", "img", "NUMBER", "save", "path", "JPEG", "images", "NUMBER", "append", "Path", "path", "img", "img", "Progress", "towards", "NUMBER", "Thanks", "for", "the", "PR", "It", "might", "make", "sense", "to", "deprecate", "TF", "NUMBER", "at", "the", "same", "time", "since", "it", "was", "release", "over", "a", "year", "ago", "NUMBER", "That", "could", "also", "help", "to", "prevent", "increasing", "the", "burden", "on", "Travis", "when", "processing", "pull", "request", "NUMBER", "Any", "thoughts", "goodfeli", "So", "there", "s", "good", "news", "and", "bad", "news", "NUMBER", "thumbsup", "The", "good", "news", "be", "that", "everyone", "that", "needs", "to", "sign", "a", "CLA", "the", "pull", "request", "submitter", "and", "all", "commit", "authors", "have", "do", "so", "NUMBER", "Everything", "be", "all", "good", "there", "NUMBER", "confused", "The", "bad", "news", "be", "that", "it", "appears", "that", "one", "or", "more", "commit", "were", "authored", "or", "co", "authored", "by", "someone", "other", "than", "the", "pull", "request", "submitter", "NUMBER", "We", "need", "to", "confirm", "that", "all", "authors", "be", "ok", "with", "their", "commit", "be", "contributed", "to", "this", "project", "NUMBER", "Please", "have", "them", "confirm", "that", "here", "in", "the", "pull", "request", "NUMBER", "Note", "to", "project", "maintainer", "This", "be", "a", "terminal", "state", "meaning", "the", "cla", "google", "commit", "status", "will", "not", "change", "from", "this", "state", "NUMBER", "It", "s", "up", "to", "you", "to", "confirm", "consent", "of", "the", "commit", "author", "s", "and", "merge", "this", "pull", "request", "when", "appropriate", "NUMBER", "TAG", "Added", "the", "miss", "scikit", "learn", "dependency", "NUMBER", "I", "give", "permission", "to", "include", "my", "commit", "in", "this", "PR", "I", "give", "permission", "to", "include", "my", "commit", "in", "this", "PR", "Found", "an", "issue", "here", "NUMBER", "The", "sklearn", "data", "be", "sorted", "by", "categories", "so", "our", "train", "and", "test", "set", "be", "not", "IID", "NUMBER", "Two", "options", "NUMBER", "Shuffle", "the", "mnist", "data", "ourselves", "NUMBER", "Use", "MNIST", "dataset", "from", "torchvision", "NUMBER", "datasets", "LINK", "mnist", "I", "would", "gravitate", "towards", "NUMBER", "because", "torchvision", "seems", "lighter", "weight", "than", "sklearn", "and", "we", "don", "t", "have", "shuffle", "things", "ourselves", "NUMBER", "Heavyweight", "pytorch", "dependency", "be", "cause", "issue", "so", "I", "switched", "to", "a", "new", "mnist", "source", "NUMBER", "Does", "the", "new", "loader", "return", "images", "in", "a", "different", "random", "order", "every", "run", "Removed", "print", "statements", "NUMBER", "The", "order", "of", "the", "loader", "be", "deterministic", "NUMBER", "It", "uses", "the", "ordering", "from", "LINK", "You", "can", "see", "the", "code", "here", "LINK", "__init__", "NUMBER", "py", "Thanks", "LGTM", "feel", "free", "to", "merge", "when", "test", "pass", "Per", "discussion", "in", "LINK", "topic", "cleverhans", "dev", "V", "NUMBER", "rBSEyljQ", "We", "find", "a", "Contributor", "License", "Agreement", "for", "you", "the", "sender", "of", "this", "pull", "request", "but", "were", "unable", "to", "find", "agreements", "for", "all", "the", "commit", "author", "s", "or", "Co", "authors", "NUMBER", "If", "you", "authored", "these", "maybe", "you", "use", "a", "different", "email", "address", "in", "the", "git", "commit", "than", "was", "use", "to", "sign", "the", "CLA", "login", "here", "LINK", "to", "double", "check", "If", "these", "were", "authored", "by", "someone", "else", "then", "they", "will", "need", "to", "sign", "a", "CLA", "as", "well", "and", "confirm", "that", "they", "re", "okay", "with", "these", "be", "contributed", "to", "Google", "NUMBER", "In", "order", "to", "pass", "this", "check", "please", "resolve", "this", "problem", "and", "have", "the", "pull", "request", "author", "add", "another", "comment", "and", "the", "bot", "will", "run", "again", "NUMBER", "If", "the", "bot", "doesn", "t", "comment", "it", "means", "it", "doesn", "t", "think", "anything", "has", "change", "NUMBER", "TAG", "Ran", "git", "commit", "amend", "reset", "author", "no", "edit", "to", "resolve", "CLA", "issue", "NUMBER", "When", "referencing", "cleverhans", "use", "your", "recommended", "bibtex", "latex", "warns", "that", "there", "be", "too", "many", "commas", "NUMBER", "This", "be", "because", "commas", "be", "supposed", "to", "be", "use", "to", "differentiate", "ordering", "of", "names", "rather", "than", "separate", "authors", "LINK", "NUMBER", "This", "pull", "request", "update", "it", "to", "separate", "authors", "use", "and", "NUMBER", "To", "my", "understanding", "when", "you", "call", "FastGradientMethod", "NUMBER", "generate", "you", "can", "t", "pass", "y_target", "None", "as", "an", "argument", "and", "expect", "cleverhans", "to", "behave", "like", "you", "didn", "t", "pass", "it", "NUMBER", "LINK", "L", "NUMBER", "L", "NUMBER", "Changing", "check", "into", "y_target", "in", "kwargs", "and", "kwargs", "y_target", "be", "not", "None", "would", "make", "the", "function", "behave", "as", "one", "would", "expect", "NUMBER", "Sure", "I", "ll", "do", "it", "npapernot", "Kashyap", "Murali", "I", "have", "created", "a", "pull", "request", "npapernot", "fix", "pair_visual", "to", "handle", "images", "with", "single", "dimensional", "entry", "in", "the", "shape", "keras", "NUMBER", "tf", "NUMBER", "cleverhans", "NUMBER", "aa", "NUMBER", "e", "NUMBER", "d", "NUMBER", "f", "NUMBER", "be", "NUMBER", "ba", "NUMBER", "f", "NUMBER", "e", "NUMBER", "d", "Ubuntu", "NUMBER", "jsma", "SaliencyMapMethod", "wrap", "sess", "sess", "jsma_params", "gamma", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "adv_x", "NUMBER", "jsma", "NUMBER", "generate_np", "x_val", "jsma_params", "adv_pred", "NUMBER", "np", "NUMBER", "argmax", "model", "NUMBER", "predict", "adv_x", "NUMBER", "axis", "NUMBER", "adv_acc", "NUMBER", "np", "NUMBER", "mean", "np", "NUMBER", "equal", "adv_pred", "NUMBER", "y_val", "FGSM", "and", "BasicIterativeMethod", "went", "okay", "NUMBER", "Error", "text", "MemoryError", "Traceback", "most", "recent", "call", "last", "TAG", "in", "TAG", "NUMBER", "jsma_params", "gamma", "NUMBER", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "NUMBER", "adv_x", "NUMBER", "jsma", "NUMBER", "generate_np", "x_val", "jsma_params", "NUMBER", "NUMBER", "adv_pred", "NUMBER", "np", "NUMBER", "argmax", "model", "NUMBER", "predict", "adv_x", "NUMBER", "axis", "NUMBER", "src", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "in", "generate_np", "self", "x_val", "kwargs", "NUMBER", "NUMBER", "if", "hash_key", "not", "in", "self", "NUMBER", "graphs", "NUMBER", "self", "NUMBER", "construct_graph", "fix", "feedable", "x_val", "hash_key", "NUMBER", "NUMBER", "x", "new_kwargs", "x_adv", "self", "NUMBER", "graphs", "hash_key", "src", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "in", "construct_graph", "self", "fix", "feedable", "x_val", "hash_key", "NUMBER", "NUMBER", "now", "we", "generate", "the", "graph", "that", "we", "want", "NUMBER", "x_adv", "self", "NUMBER", "generate", "x", "new_kwargs", "NUMBER", "NUMBER", "self", "NUMBER", "graphs", "hash_key", "x", "new_kwargs", "x_adv", "src", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "in", "generate", "self", "x", "kwargs", "NUMBER", "theta", "self", "NUMBER", "eta", "gamma", "self", "NUMBER", "gamma", "NUMBER", "clip_min", "self", "NUMBER", "clip_min", "NUMBER", "clip_max", "self", "NUMBER", "clip_max", "NUMBER", "else", "NUMBER", "from", "NUMBER", "attacks_tf", "import", "jacobian_graph", "jsma_batch", "src", "cleverhans", "cleverhans", "attacks_tf", "NUMBER", "py", "in", "jsma_symbolic", "x", "y_target", "model", "theta", "gamma", "clip_min", "clip_max", "NUMBER", "increase", "bool", "theta", "NUMBER", "NUMBER", "NUMBER", "tmp", "np", "NUMBER", "ones", "nb_features", "nb_features", "int", "NUMBER", "np", "NUMBER", "fill_diagonal", "tmp", "NUMBER", "NUMBER", "zero_diagonal", "tf", "NUMBER", "constant", "tmp", "tf", "NUMBER", "float", "NUMBER", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "numpy", "core", "numeric", "NUMBER", "py", "in", "ones", "shape", "dtype", "order", "NUMBER", "NUMBER", "NUMBER", "a", "empty", "shape", "dtype", "order", "NUMBER", "multiarray", "NUMBER", "copyto", "a", "NUMBER", "casting", "unsafe", "NUMBER", "return", "a", "MemoryError", "What", "be", "the", "shape", "of", "x_val", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "I", "thought", "NUMBER", "GB", "RAM", "would", "be", "enough", "NUMBER", "Don", "t", "yo", "know", "be", "there", "any", "free", "cloud", "resources", "to", "try", "JSMA", "there", "Kaggle", "doesn", "t", "allow", "to", "upload", "keras", "pretrained", "models", "for", "example", "I", "met", "the", "same", "question", "when", "try", "JSMA", "NUMBER", "I", "run", "it", "on", "a", "server", "use", "Titan", "Xp", "GPU", "NUMBER", "Can", "you", "help", "me", "deal", "with", "it", "jsma", "SaliencyMapMethod", "model", "sess", "sess", "sess", "NUMBER", "run", "tf", "NUMBER", "global_variables_initializer", "x_adv", "jsma", "NUMBER", "generate", "x_input", "clip_min", "NUMBER", "clip_max", "NUMBER", "When", "I", "run", "I", "get", "the", "following", "error", "text", "MemoryErrorTraceback", "most", "recent", "call", "last", "notebooks", "AdversarialExamples", "test", "NUMBER", "py", "in", "TAG", "NUMBER", "sess", "NUMBER", "close", "NUMBER", "NUMBER", "main", "notebooks", "AdversarialExamples", "test", "NUMBER", "py", "in", "main", "NUMBER", "jsma", "SaliencyMapMethod", "model", "sess", "sess", "NUMBER", "sess", "NUMBER", "run", "tf", "NUMBER", "global_variables_initializer", "NUMBER", "x_adv", "jsma", "NUMBER", "generate", "x_input", "clip_min", "NUMBER", "clip_max", "NUMBER", "NUMBER", "saver", "tf", "NUMBER", "train", "NUMBER", "Saver", "slim", "NUMBER", "get_model_variables", "NUMBER", "saver", "NUMBER", "restore", "sess", "checkpoint_path", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks", "NUMBER", "py", "in", "generate", "self", "x", "kwargs", "NUMBER", "theta", "self", "NUMBER", "eta", "gamma", "self", "NUMBER", "gamma", "NUMBER", "clip_min", "self", "NUMBER", "clip_min", "NUMBER", "clip_max", "self", "NUMBER", "clip_max", "NUMBER", "else", "NUMBER", "from", "NUMBER", "attacks_tf", "import", "jacobian_graph", "jsma_batch", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "attacks_tf", "NUMBER", "py", "in", "jsma_symbolic", "x", "y_target", "model", "theta", "gamma", "clip_min", "clip_max", "NUMBER", "increase", "bool", "theta", "NUMBER", "NUMBER", "NUMBER", "tmp", "np", "NUMBER", "ones", "nb_features", "nb_features", "int", "NUMBER", "np", "NUMBER", "fill_diagonal", "tmp", "NUMBER", "NUMBER", "zero_diagonal", "tf", "NUMBER", "constant", "tmp", "tf_dtype", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "numpy", "core", "numeric", "NUMBER", "py", "in", "ones", "shape", "dtype", "order", "NUMBER", "NUMBER", "NUMBER", "a", "empty", "shape", "dtype", "order", "NUMBER", "multiarray", "NUMBER", "copyto", "a", "NUMBER", "casting", "unsafe", "NUMBER", "return", "a", "MemoryError", "I", "be", "not", "sure", "whether", "there", "be", "anyone", "else", "encounter", "the", "same", "error", "I", "think", "maybe", "Numpy", "do", "not", "support", "a", "very", "big", "matrix", "so", "maybe", "use", "Scipy", "generate", "sparse", "matrix", "can", "work", "I", "understand", "thank", "you", "I", "run", "it", "on", "a", "Titan", "Xp", "GPU", "with", "about", "NUMBER", "GB", "Memory", "so", "maybe", "I", "can", "run", "the", "code", "on", "a", "server", "with", "NUMBER", "GB", "RAMs", "instead", "of", "use", "GPU", "NUMBER", "I", "have", "same", "problem", "too", "when", "i", "use", "the", "JSMA", "My", "RAM", "be", "NUMBER", "GB", "and", "GPU", "memory", "be", "NUMBER", "GB", "NUMBER", "I", "don", "t", "think", "the", "problem", "be", "out", "of", "my", "memory", "How", "did", "you", "deal", "with", "it", "My", "real", "name", "be", "Rujun", "Long", "NUMBER", "Thank", "you", "npapernot", "What", "be", "each", "of", "your", "affiliations", "Shuolongbj", "paulhendricks", "zHiOoO", "NUMBER", "AI", "Thanks", "I", "be", "from", "the", "University", "of", "Toronto", "NUMBER", "Thanks", "NUMBER", "Hi", "Thanks", "for", "the", "great", "repository", "NUMBER", "In", "the", "tutorial", "code", "mnist_blackbox", "NUMBER", "py", "The", "blackbox", "be", "first", "prepared", "and", "then", "a", "substitute", "be", "trained", "use", "a", "subset", "of", "the", "test", "samples", "NUMBER", "When", "the", "subsitute", "be", "trained", "with", "the", "function", "model_train", "LINK", "_tutorials", "mnist_blackbox", "NUMBER", "py", "L", "NUMBER", "I", "notice", "that", "at", "this", "line", "LINK", "_tf", "NUMBER", "py", "L", "NUMBER", "the", "optimizer", "minimizes", "the", "loss", "NUMBER", "Since", "there", "be", "no", "var_list", "defined", "it", "considers", "the", "variables", "of", "both", "the", "Blackbox", "and", "Substitute", "models", "NUMBER", "I", "would", "suggest", "add", "another", "parameter", "to", "train_params", "tvars", "which", "contains", "the", "variables", "list", "to", "optimize", "for", "NUMBER", "Best", "Thanks", "for", "the", "quick", "response", "NUMBER", "I", "will", "be", "happy", "to", "place", "a", "PR", "but", "unfortunately", "I", "be", "on", "time", "crunch", "so", "perhaps", "I", "can", "do", "it", "next", "month", "NUMBER", "Looks", "good", "NUMBER", "We", "find", "a", "Contributor", "License", "Agreement", "for", "you", "the", "sender", "of", "this", "pull", "request", "but", "were", "unable", "to", "find", "agreements", "for", "all", "the", "commit", "author", "s", "or", "Co", "authors", "NUMBER", "If", "you", "authored", "these", "maybe", "you", "use", "a", "different", "email", "address", "in", "the", "git", "commit", "than", "was", "use", "to", "sign", "the", "CLA", "login", "here", "LINK", "to", "double", "check", "If", "these", "were", "authored", "by", "someone", "else", "then", "they", "will", "need", "to", "sign", "a", "CLA", "as", "well", "and", "confirm", "that", "they", "re", "okay", "with", "these", "be", "contributed", "to", "Google", "NUMBER", "In", "order", "to", "pass", "this", "check", "please", "resolve", "this", "problem", "and", "have", "the", "pull", "request", "author", "add", "another", "comment", "and", "the", "bot", "will", "run", "again", "NUMBER", "If", "the", "bot", "doesn", "t", "comment", "it", "means", "it", "doesn", "t", "think", "anything", "has", "change", "NUMBER", "TAG", "CLAs", "look", "good", "thanks", "TAG", "Closing", "this", "given", "that", "mnist_tutorial_tf", "NUMBER", "py", "do", "not", "raise", "any", "deprecation", "warnings", "anymore", "NUMBER", "If", "anyone", "notices", "another", "warning", "feel", "free", "to", "open", "an", "issue", "NUMBER", "I", "m", "wondering", "how", "I", "can", "parallelise", "attacking", "and", "generating", "adversarial", "examples", "since", "it", "seems", "cleverhans", "do", "not", "support", "this", "yet", "NUMBER", "Any", "suggestions", "would", "be", "appreciated", "attack", "NUMBER", "py", "contains", "the", "classes", "for", "all", "the", "support", "adversarial", "attacks", "NUMBER", "In", "the", "init", "of", "the", "attack", "classes", "has", "be", "add", "a", "variable", "dtypestr", "the", "strting", "of", "the", "dtype", "wanted", "NUMBER", "This", "will", "be", "converted", "in", "np_dtype", "and", "tf_dtype", "and", "stored", "in", "the", "attack", "class", "so", "that", "can", "be", "use", "in", "the", "following", "methods", "generate", "and", "generate_np", "NUMBER", "also", "attack_tf", "NUMBER", "py", "was", "modify", "for", "this", "purpose", "NUMBER", "This", "python", "file", "be", "less", "organized", "so", "instead", "of", "passing", "a", "dtype", "around", "following", "the", "flow", "of", "the", "function", "calls", "I", "add", "global", "variables", "tf_dtype", "and", "np_dtype", "of", "the", "module", "NUMBER", "The", "code", "has", "be", "test", "and", "as", "far", "as", "I", "could", "see", "all", "attacks", "be", "work", "properly", "in", "both", "float", "NUMBER", "and", "float", "NUMBER", "Thanks", "for", "your", "pull", "request", "NUMBER", "It", "looks", "like", "this", "may", "be", "your", "first", "contribution", "to", "a", "Google", "open", "source", "project", "if", "not", "look", "below", "for", "help", "NUMBER", "Before", "we", "can", "look", "at", "your", "pull", "request", "you", "ll", "need", "to", "sign", "a", "Contributor", "License", "Agreement", "CLA", "NUMBER", "memo", "Please", "visit", "TAG", "to", "sign", "NUMBER", "Once", "you", "ve", "sign", "or", "fix", "any", "issue", "please", "reply", "here", "e", "NUMBER", "g", "NUMBER", "I", "sign", "it", "and", "we", "ll", "verify", "it", "NUMBER", "What", "to", "do", "if", "you", "already", "sign", "the", "CLA", "Individual", "signers", "It", "s", "possible", "we", "don", "t", "have", "your", "GitHub", "username", "or", "you", "re", "use", "a", "different", "email", "address", "on", "your", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "Corporate", "signers", "Your", "company", "has", "a", "Point", "of", "Contact", "who", "decides", "which", "employees", "be", "authorized", "to", "participate", "NUMBER", "Ask", "your", "POC", "to", "be", "add", "to", "the", "group", "of", "authorized", "contributors", "NUMBER", "If", "you", "don", "t", "know", "who", "your", "Point", "of", "Contact", "be", "direct", "the", "Google", "project", "maintainer", "to", "go", "cla", "troubleshoot", "go", "cla", "troubleshoot", "Public", "version", "LINK", "troubleshoot", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "be", "the", "email", "use", "for", "the", "Git", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "also", "be", "attached", "to", "your", "GitHub", "account", "LINK", "NUMBER", "TAG", "I", "sign", "it", "CLAs", "look", "good", "thanks", "TAG", "Hello", "Sorry", "had", "be", "quite", "a", "busy", "period", "I", "think", "now", "PEP", "NUMBER", "issue", "be", "fix", "NUMBER", "nosetests", "nologcapture", "cleverhans", "devtools", "test", "test_format", "NUMBER", "py", "NUMBER", "Ran", "NUMBER", "test", "in", "NUMBER", "s", "OK", "Bug", "Currently", "the", "ex_cifar", "NUMBER", "_tf", "NUMBER", "py", "example", "be", "broken", "due", "to", "a", "change", "in", "the", "fgsm", "API", "NUMBER", "To", "reproduce", "install", "the", "current", "version", "of", "cleverhans", "with", "python", "setup", "NUMBER", "py", "install", "and", "run", "the", "example", "NUMBER", "Expected", "python", "ex_cifar", "NUMBER", "_tf", "NUMBER", "py", "Test", "accuracy", "on", "legitimate", "test", "examples", "NUMBER", "Test", "accuracy", "on", "legitimate", "test", "examples", "NUMBER", "NUMBER", "Actual", "python", "ex_cifar", "NUMBER", "_tf", "NUMBER", "py", "Using", "TensorFlow", "backend", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "ex_cifar", "NUMBER", "_tf", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "from", "cleverhans", "NUMBER", "attacks", "import", "fgsm", "ImportError", "cannot", "import", "name", "fgsm", "This", "PR", "update", "ex_cifar", "NUMBER", "_tf", "NUMBER", "py", "to", "use", "the", "new", "FastGradientMethod", "class", "NUMBER", "Thanks", "Nicolas", "I", "ve", "made", "that", "change", "NUMBER", "if", "viz_enabled", "figure", "pair_visual", "np", "NUMBER", "reshape", "sample", "img_rows", "img_cols", "np", "NUMBER", "reshape", "adv_x", "img_rows", "img_cols", "figure", "to", "if", "viz_enabled", "figure", "pair_visual", "np", "NUMBER", "reshape", "sample", "img_rows", "img_cols", "channels", "np", "NUMBER", "reshape", "adv_x", "img_rows", "img_cols", "channels", "figure", "Unfortunately", "change", "throw", "error", "on", "MNIST", "TypeError", "Invalid", "dimensions", "for", "image", "data", "Had", "to", "revert", "to", "if", "viz_enabled", "figure", "pair_visual", "np", "NUMBER", "reshape", "sample", "img_rows", "img_cols", "np", "NUMBER", "reshape", "adv_x", "img_rows", "img_cols", "figure", "Should", "I", "fix", "pair_visual", "or", "tomstelk", "will", "Please", "go", "ahead", "with", "fix", "thanks", "NUMBER", "I", "m", "not", "sure", "of", "the", "cited", "error", "in", "the", "build", "all", "I", "did", "was", "update", "the", "Readme", "NUMBER", "It", "might", "make", "sense", "to", "make", "this", "the", "last", "thing", "we", "do", "after", "get", "the", "release", "ready", "since", "the", "PRs", "we", "re", "merge", "while", "get", "the", "release", "ready", "be", "change", "the", "author", "order", "list", "I", "ll", "send", "a", "PR", "to", "fix", "the", "build", "I", "don", "t", "know", "anything", "more", "about", "the", "contributor", "no", "contact", "information", "on", "the", "Github", "NUMBER", "I", "ll", "send", "my", "final", "contributor", "list", "in", "a", "pull", "request", "once", "the", "bug", "have", "be", "fix", "then", "NUMBER", "On", "Thu", "Apr", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Ian", "Goodfellow", "TAG", "write", "I", "ll", "send", "a", "PR", "to", "fix", "the", "build", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Final", "Contributor", "List", "update", "please", "pull", "NUMBER", "Build", "fail", "again", "apparently", "due", "to", "a", "problem", "with", "test_mnist_tutorial_keras_tf", "NUMBER", "The", "Keras", "tutorial", "still", "fail", "NUMBER", "Can", "you", "please", "tell", "Travis", "to", "do", "another", "build", "The", "new", "parameters", "have", "default", "values", "that", "correspond", "exactly", "to", "the", "previous", "behavior", "NUMBER", "On", "Mon", "Apr", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Nicolas", "Papernot", "TAG", "write", "Thanks", "for", "the", "PR", "would", "you", "be", "able", "to", "add", "deprecation", "warning", "given", "that", "you", "be", "change", "the", "API", "Unless", "the", "new", "parameters", "have", "default", "values", "that", "correspond", "exactly", "to", "the", "previous", "behavior", "NUMBER", "You", "be", "receiving", "this", "because", "you", "modify", "the", "open", "close", "state", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Having", "read", "about", "Houdini", "LINK", "houdini", "fooling", "deep", "structured", "visual", "and", "speech", "recognition", "models", "with", "adversarial", "examples", "NUMBER", "pdf", "and", "its", "success", "in", "various", "domains", "to", "construct", "adversarial", "samples", "it", "would", "be", "great", "to", "have", "it", "in", "cleverhans", "NUMBER", "This", "would", "be", "nice", "to", "address", "once", "NUMBER", "be", "merge", "npapernot", "I", "work", "on", "this", "will", "be", "able", "to", "submit", "PR", "in", "a", "week", "NUMBER", "Thanks", "feedforward", "NUMBER", "It", "might", "make", "sense", "to", "hold", "on", "before", "NUMBER", "be", "merge", "so", "that", "we", "can", "use", "the", "new", "loss", "class", "directly", "NUMBER", "feedforward", "now", "that", "NUMBER", "be", "merge", "this", "would", "be", "a", "good", "time", "to", "make", "the", "PR", "NUMBER", "Thanks", "npapernot", "I", "be", "work", "on", "it", "will", "submit", "the", "PR", "in", "couple", "of", "days", "thanks", "for", "the", "info", "NUMBER", "npapernot", "feedforward", "I", "d", "like", "to", "work", "on", "this", "if", "there", "s", "no", "PR", "already", "in", "the", "works", "NUMBER", "Any", "details", "I", "should", "know", "before", "starting", "off", "Hi", "npapernot", "I", "ve", "start", "a", "WIP", "PR", "NUMBER", "NUMBER", "Thanks", "for", "the", "reminder", "and", "apologies", "for", "the", "delay", "NUMBER", "I", "ve", "be", "busy", "with", "a", "lot", "of", "other", "stuff", "in", "the", "last", "two", "months", "hence", "couldn", "t", "look", "into", "this", "earlier", "NUMBER", "Three", "subdirectories", "created", "in", "competition", "directory", "dataset", "subdirectory", "for", "dataset", "dev_toolkit", "development", "toolkit", "moved", "to", "this", "subdirectory", "eval_infra", "placeholder", "directory", "for", "evaluation", "infrastructure", "I", "think", "build", "be", "broken", "for", "some", "reason", "NUMBER", "This", "code", "do", "not", "touch", "anything", "in", "core", "cleverhans", "so", "it", "should", "not", "affect", "core", "cleverhans", "test", "NUMBER", "I", "also", "notice", "that", "test", "be", "passing", "for", "TF", "version", "NUMBER", "but", "fail", "for", "TF", "version", "NUMBER", "Yes", "that", "s", "right", "TF", "NUMBER", "build", "be", "fail", "see", "here", "LINK", "goodfeli", "build", "be", "fix", "and", "all", "test", "be", "passing", "now", "please", "take", "a", "look", "at", "this", "PR", "To", "make", "sure", "issue", "like", "LINK", "don", "t", "repeat", "we", "could", "add", "a", "docstring", "linter", "to", "the", "travis", "test", "NUMBER", "There", "s", "one", "set", "up", "for", "Sphinx", "already", "in", "pylearn", "NUMBER", "devtools", "NUMBER", "We", "already", "copied", "the", "PEP", "NUMBER", "checker", "from", "that", "module", "so", "it", "shouldn", "t", "be", "too", "much", "work", "to", "also", "copy", "the", "docstring", "linter", "NUMBER", "Hello", "goodfeli", "I", "m", "happy", "to", "help", "on", "this", "NUMBER", "Just", "want", "to", "confirm", "it", "seems", "like", "you", "also", "copied", "the", "docstring", "linter", "here", "LINK", "L", "NUMBER", "L", "NUMBER", "NUMBER", "Maybe", "we", "just", "need", "to", "remove", "the", "temporarily", "disabled", "docstring", "test", "LINK", "_format", "NUMBER", "py", "L", "NUMBER", "L", "NUMBER", "and", "fix", "the", "file", "who", "violate", "the", "docstring", "rule", "Let", "me", "know", "if", "I", "get", "it", "wrong", "NUMBER", "That", "would", "be", "great", "thanks", "I", "m", "not", "NUMBER", "sure", "I", "ve", "copied", "everything", "needed", "by", "the", "disabled", "test", "so", "there", "might", "be", "something", "more", "than", "just", "remove", "the", "line", "that", "disables", "it", "NUMBER", "Got", "it", "NUMBER", "By", "simply", "enabling", "the", "docstring", "test", "I", "get", "the", "following", "output", "Users", "YenChen", "Desktop", "Python", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "LBFGS", "class", "has", "no", "Parameters", "section", "LBFGS", "construct_graph", "No", "Parameters", "section", "LBFGS", "generate_np", "No", "Parameters", "section", "LBFGS", "get_or_guess_labels", "Brief", "function", "summary", "be", "longer", "than", "NUMBER", "lines", "LBFGS", "get_or_guess_labels", "No", "Parameters", "section", "LBFGS", "construct_variables", "No", "Parameters", "section", "LBFGS", "generate", "No", "Parameters", "section", "LBFGS", "parse_params", "miss", "method", "level", "docstring", "NUMBER", "Users", "YenChen", "Desktop", "Python", "cleverhans", "examples", "multigpu_advtrain", "utils_cifar", "NUMBER", "py", "NUMBER", "__doc__", "Line", "NUMBER", "exceeds", "NUMBER", "chars", "LINK", "NUMBER", "__doc__", "Line", "NUMBER", "exceeds", "NUMBER", "chars", "Permission", "be", "hereby", "granted", "NUMBER", "__doc__", "Line", "NUMBER", "exceeds", "NUMBER", "chars", "of", "this", "software", "and", "associate", "NUMBER", "__doc__", "Line", "NUMBER", "exceeds", "NUMBER", "chars", "in", "the", "Software", "without", "restri", "NUMBER", "__doc__", "Line", "NUMBER", "exceeds", "NUMBER", "chars", "The", "above", "copyright", "notice", "and", "NUMBER", "__doc__", "Line", "NUMBER", "exceeds", "NUMBER", "chars", "LIABILITY", "WHETHER", "IN", "AN", "ACTIO", "NUMBER", "__doc__", "Line", "NUMBER", "exceeds", "NUMBER", "chars", "OUT", "OF", "OR", "IN", "CONNECTION", "WITH", "T", "NUMBER", "NUMBER", "Since", "there", "be", "NUMBER", "violations", "in", "total", "I", "think", "we", "can", "NUMBER", "Fix", "some", "more", "important", "file", "e", "NUMBER", "g", "NUMBER", "attack", "API", "NUMBER", "Add", "the", "remaining", "of", "file", "e", "NUMBER", "g", "NUMBER", "NIPS", "competition", "NUMBER", "to", "whitelists", "and", "fix", "them", "later", "May", "I", "know", "your", "opinion", "Thanks", "for", "the", "reply", "NUMBER", "I", "ve", "use", "the", "test", "to", "fix", "some", "file", "docstring", "NUMBER", "However", "I", "need", "your", "inputs", "on", "docstring", "format", "design", "NUMBER", "Here", "s", "part", "of", "the", "outputs", "but", "representative", "after", "run", "docstring", "test", "Users", "YenChen", "Desktop", "Python", "cleverhans", "cleverhans_tutorials", "mnist_tutorial_jsma", "NUMBER", "py", "__doc__", "miss", "module", "level", "docstring", "mnist_tutorial_jsma", "No", "Parameters", "section", "main", "miss", "function", "level", "docstring", "It", "basically", "points", "out", "NUMBER", "problem", "NUMBER", "We", "need", "module", "level", "docstring", "for", "each", "file", "tutorials", "part", "fix", "in", "NUMBER", "NUMBER", "Current", "test", "use", "keywords", "such", "as", "Parameters", "and", "Returns", "to", "detect", "docstring", "error", "see", "example", "here", "LINK", "learn", "scikit", "learn", "blob", "NUMBER", "aad", "NUMBER", "dc", "NUMBER", "c", "NUMBER", "e", "NUMBER", "ff", "NUMBER", "edf", "NUMBER", "e", "NUMBER", "dbfc", "NUMBER", "b", "NUMBER", "sklearn", "linear_model", "least_angle", "NUMBER", "py", "L", "NUMBER", "L", "NUMBER", "NUMBER", "This", "format", "be", "adopted", "by", "both", "scikit", "learn", "and", "pylearn", "NUMBER", "Do", "we", "want", "to", "add", "these", "keywords", "to", "docstring", "or", "modify", "the", "test", "to", "detect", "current", "format", "param", "xxx", "NUMBER", "main", "function", "like", "this", "LINK", "_tutorials", "mnist_blackbox", "NUMBER", "py", "L", "NUMBER", "doesn", "t", "have", "docstring", "do", "we", "need", "to", "add", "one", "to", "pass", "the", "test", "Linting", "bug", "was", "masking", "a", "real", "failure", "NUMBER", "A", "test", "needs", "to", "be", "update", "to", "not", "exercise", "the", "deprecate", "API", "ERROR", "test_mnist_blackbox", "test_mnist_blackbox", "NUMBER", "TestMNISTBlackboxF", "Traceback", "most", "recent", "call", "last", "File", "home", "travis", "build", "tensorflow", "cleverhans", "tests_tf", "test_mnist_blackbox", "NUMBER", "py", "line", "NUMBER", "in", "test_mnist_blackbox", "report", "mnist_blackbox", "NUMBER", "mnist_blackbox", "mnist_blackbox_args", "File", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans_tutorials", "mnist_blackbox", "NUMBER", "py", "line", "NUMBER", "in", "mnist_blackbox", "rng", "rng", "File", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans_tutorials", "mnist_blackbox", "NUMBER", "py", "line", "NUMBER", "in", "prep_bbox", "args", "train_params", "rng", "rng", "TypeError", "model_train", "get", "an", "unexpect", "keyword", "argument", "verbose", "my", "latest", "change", "be", "big", "enough", "it", "should", "probably", "be", "review", "again", "thanks", "On", "line", "NUMBER", "of", "tutorial_models", "NUMBER", "py", "LINK", "_tutorials", "tutorial_models", "NUMBER", "py", "I", "think", "it", "should", "be", "output_shape", "NUMBER", "batch_size", "No", "problem", "This", "pull", "request", "LINK", "will", "make", "it", "possible", "but", "you", "should", "be", "aware", "that", "we", "now", "know", "that", "attack", "isn", "t", "strong", "enough", "LINK", "gradients", "NUMBER", "We", "will", "hopefully", "have", "the", "stronger", "attack", "add", "to", "CleverHans", "soon", "once", "the", "code", "for", "it", "be", "release", "NUMBER", "The", "dtypes", "of", "most", "tensors", "in", "the", "generate_np", "caching", "system", "be", "hard", "code", "to", "float", "NUMBER", "If", "you", "pass", "in", "a", "float", "NUMBER", "tensor", "nothing", "sensible", "happens", "NUMBER", "This", "be", "a", "restriction", "compared", "to", "the", "generate", "interface", "NUMBER", "I", "have", "never", "be", "a", "fan", "of", "generate_np", "and", "would", "be", "in", "favor", "of", "just", "remove", "it", "since", "it", "s", "one", "of", "the", "more", "difficult", "features", "to", "maintain", "and", "doesn", "t", "add", "any", "actual", "adversarial", "example", "functionality", "NUMBER", "We", "may", "also", "want", "to", "investigate", "whether", "eager", "mode", "generate", "provide", "the", "functionality", "that", "generate_np", "be", "meant", "to", "provide", "NUMBER", "Finally", "if", "we", "want", "to", "keep", "generate_np", "the", "interface", "should", "probably", "be", "change", "so", "that", "there", "be", "multiple", "allow", "dtypes", "for", "each", "argument", "and", "the", "choice", "of", "specific", "dtype", "be", "treated", "as", "a", "structural", "argument", "NUMBER", "cc", "npapernot", "carlini", "This", "seems", "low", "priority", "and", "self", "contained", "would", "it", "be", "a", "good", "candidate", "to", "mark", "as", "help", "wanted", "SGTM", "It", "seems", "that", "the", "perturbations", "computed", "by", "the", "FastGradientMethod", "FGM", "and", "BasicIterativeMethod", "attacks", "be", "sometimes", "equal", "to", "zero", "NUMBER", "In", "a", "first", "preliminary", "test", "not", "in", "cleverhans", "this", "problem", "was", "due", "to", "the", "overconfidence", "of", "the", "network", "NUMBER", "The", "cross", "entropy", "be", "thus", "very", "flat", "and", "the", "gradient", "very", "small", "this", "created", "an", "underflow", "problem", "NUMBER", "We", "solve", "this", "passing", "to", "float", "NUMBER", "precision", "in", "tensorflow", "NUMBER", "I", "notice", "Cleverhans", "be", "use", "float", "NUMBER", "specified", "in", "several", "places", "in", "the", "code", "NUMBER", "I", "wonder", "if", "it", "be", "possible", "to", "specify", "easily", "to", "use", "float", "NUMBER", "precision", "instead", "and", "or", "if", "you", "think", "there", "be", "another", "workaround", "to", "that", "We", "be", "trying", "to", "produce", "FGSM", "adversarial", "examples", "for", "MNIST", "for", "example", "use", "a", "simple", "fully", "connected", "architecture", "of", "NUMBER", "NUMBER", "NUMBER", "The", "accuracy", "on", "the", "trained", "network", "be", "initially", "around", "NUMBER", "on", "test", "set", "NUMBER", "It", "drops", "to", "NUMBER", "on", "the", "adversarials", "generate", "with", "FGM", "params", "eps", "NUMBER", "ord", "np", "NUMBER", "inf", "clip_min", "NUMBER", "clip_max", "NUMBER", "NUMBER", "However", "we", "noted", "that", "NUMBER", "of", "the", "MNIST", "test", "set", "examples", "be", "not", "change", "by", "the", "FGSM", "attack", "NUMBER", "Do", "you", "know", "if", "anyone", "else", "had", "the", "same", "issue", "Thanks", "goodfeli", "for", "the", "quick", "answer", "NUMBER", "I", "tried", "to", "pass", "logits", "instead", "of", "probs", "as", "you", "suggested", "specify", "the", "keyword", "logits", "to", "the", "CallableModelWrapper", "NUMBER", "Unfortunately", "this", "did", "not", "solve", "the", "issue", "NUMBER", "We", "trained", "a", "network", "of", "NUMBER", "NUMBER", "NUMBER", "with", "NUMBER", "epochs", "on", "MNIST", "training", "set", "NUMBER", "I", "also", "attach", "the", "weights", "if", "you", "want", "to", "give", "it", "a", "try", "NUMBER", "W", "NUMBER", "npy", "b", "NUMBER", "npy", "W", "NUMBER", "npy", "b", "NUMBER", "npy", "NUMBER", "X_test", "be", "the", "test", "set", "of", "MNIST", "NUMBER", "CODE", "W", "NUMBER", "_np", "np", "NUMBER", "load", "experiments", "W", "NUMBER", "npy", "b", "NUMBER", "_np", "np", "NUMBER", "load", "experiments", "b", "NUMBER", "npy", "W", "NUMBER", "_np", "np", "NUMBER", "load", "experiments", "W", "NUMBER", "npy", "b", "NUMBER", "_np", "np", "NUMBER", "load", "experiments", "b", "NUMBER", "npy", "W", "NUMBER", "tf", "NUMBER", "Variable", "W", "NUMBER", "_np", "dtype", "tf", "NUMBER", "floatXX", "b", "NUMBER", "tf", "NUMBER", "Variable", "b", "NUMBER", "_np", "dtype", "tf", "NUMBER", "floatXX", "W", "NUMBER", "tf", "NUMBER", "Variable", "W", "NUMBER", "_np", "dtype", "tf", "NUMBER", "floatXX", "b", "NUMBER", "tf", "NUMBER", "Variable", "b", "NUMBER", "_np", "dtype", "tf", "NUMBER", "floatXX", "sess", "tf", "NUMBER", "Session", "sess", "NUMBER", "run", "tf", "NUMBER", "global_variables_initializer", "def", "nn", "x", "x", "tf", "NUMBER", "cast", "x", "tf", "NUMBER", "floatXX", "h", "tf", "NUMBER", "matmul", "x", "W", "NUMBER", "b", "NUMBER", "h", "tf", "NUMBER", "nn", "NUMBER", "relu", "h", "logits", "tf", "NUMBER", "matmul", "h", "W", "NUMBER", "b", "NUMBER", "probs", "tf", "NUMBER", "nn", "NUMBER", "softmax", "logits", "return", "logits", "nn_model", "CallableModelWrapper", "nn", "logits", "fgsm", "FastGradientMethod", "nn_model", "tf", "sess", "fgsm_params", "eps", "NUMBER", "ord", "np", "NUMBER", "inf", "clip_min", "NUMBER", "clip_max", "NUMBER", "fgsm_adv_test", "fgsm", "NUMBER", "generate_np", "X_test", "fgsm_params", "CODE", "We", "generate", "NUMBER", "sets", "of", "adversarial", "examples", "fgsm_ch_float", "NUMBER", "npy", "fgsm_ch_float", "NUMBER", "npy", "fgsm_tf_float", "NUMBER", "npy", "NUMBER", "These", "be", "respectively", "the", "adversarial", "examples", "generate", "with", "cleverhans", "use", "float", "NUMBER", "and", "float", "NUMBER", "in", "the", "code", "above", "and", "the", "last", "ones", "be", "adversarial", "examples", "generate", "use", "a", "code", "write", "in", "tensorflow", "with", "float", "NUMBER", "everywhere", "NUMBER", "We", "find", "performances", "to", "be", "quite", "different", "both", "the", "examples", "generate", "with", "cleverhans", "show", "around", "NUMBER", "accuracy", "and", "the", "number", "of", "images", "that", "be", "not", "modify", "at", "all", "be", "around", "NUMBER", "NUMBER", "In", "the", "case", "of", "the", "examples", "generate", "directly", "in", "tf", "with", "float", "NUMBER", "the", "accuracy", "drops", "to", "around", "NUMBER", "and", "all", "images", "be", "modify", "by", "fgsm", "NUMBER", "I", "suspect", "that", "this", "be", "due", "to", "the", "fact", "that", "the", "cleverhans", "attacks", "use", "all", "float", "NUMBER", "be", "there", "any", "workaround", "possible", "We", "also", "tried", "to", "change", "to", "float", "NUMBER", "in", "the", "attacks", "NUMBER", "py", "and", "attacks_tf", "NUMBER", "py", "but", "not", "much", "change", "I", "be", "sure", "we", "miss", "something", "somewhere", "NUMBER", "Also", "in", "doing", "so", "we", "broke", "other", "attacks", "methods", "like", "for", "example", "CW", "NUMBER", "Thanks", "for", "any", "insights", "on", "this", "Cheers", "Riccardo", "weights", "NUMBER", "zip", "LINK", "If", "switching", "to", "flaot", "NUMBER", "didn", "t", "change", "anything", "then", "isn", "t", "it", "most", "likely", "some", "other", "problem", "Dear", "iamgroot", "NUMBER", "thanks", "for", "the", "answer", "NUMBER", "Focusing", "on", "the", "fgsm", "algorithm", "the", "percentage", "of", "not", "change", "images", "with", "cleverhans", "NUMBER", "and", "the", "accuracy", "NUMBER", "be", "very", "similar", "to", "the", "code", "implement", "directly", "in", "tf", "with", "float", "NUMBER", "When", "switching", "to", "float", "NUMBER", "in", "tf", "the", "problem", "be", "solve", "NUMBER", "That", "be", "why", "I", "believe", "the", "float", "NUMBER", "be", "the", "issue", "NUMBER", "Now", "I", "managed", "to", "solve", "the", "problem", "change", "float", "NUMBER", "to", "float", "NUMBER", "in", "attacks", "NUMBER", "py", "and", "attacks_tf", "NUMBER", "py", "also", "I", "change", "the", "tf", "NUMBER", "to_float", "line", "NUMBER", "in", "attacks_tf", "NUMBER", "py", "to", "y", "tf", "NUMBER", "cast", "tf", "NUMBER", "equal", "preds", "preds_max", "dtype", "tf", "NUMBER", "float", "NUMBER", "NUMBER", "In", "this", "way", "I", "generate", "adversarial", "examples", "that", "leads", "to", "an", "accuracy", "of", "NUMBER", "NUMBER", "That", "seems", "better", "now", "NUMBER", "I", "wonder", "if", "there", "be", "an", "easy", "way", "to", "specify", "the", "desired", "accuracy", "in", "cleverhans", "NUMBER", "If", "not", "this", "be", "something", "very", "easy", "to", "implement", "and", "would", "be", "very", "useful", "for", "the", "users", "NUMBER", "Now", "I", "need", "to", "change", "manually", "the", "library", "everytime", "I", "change", "accuracy", "that", "be", "not", "ideal", "NUMBER", "I", "think", "the", "best", "way", "of", "doing", "this", "would", "be", "having", "the", "user", "specify", "the", "type", "of", "x", "and", "y", "placeholders", "agree", "Agreed", "NUMBER", "Letting", "the", "user", "specify", "a", "placeholder", "would", "be", "the", "best", "workaround", "for", "this", "NUMBER", "The", "line", "you", "change", "NUMBER", "of", "attacks_tf", "NUMBER", "py", "isn", "t", "actually", "involved", "in", "this", "code", "snippet", "NUMBER", "y", "be", "provide", "by", "get_or_guess_labels", "in", "attacks", "NUMBER", "py", "I", "reproduce", "this", "problem", "but", "for", "both", "float", "NUMBER", "and", "float", "NUMBER", "BTW", "if", "you", "want", "to", "make", "your", "placeholder", "or", "any", "other", "kind", "of", "input", "tensor", "just", "use", "the", "generate", "method", "rather", "than", "generate_np", "NUMBER", "OK", "I", "had", "to", "edit", "the", "code", "in", "a", "few", "more", "places", "to", "make", "everything", "float", "NUMBER", "With", "everything", "successfully", "float", "NUMBER", "I", "be", "able", "to", "reproduce", "the", "problem", "at", "float", "NUMBER", "and", "then", "make", "it", "go", "away", "by", "switching", "to", "float", "NUMBER", "NUMBER", "M", "entries", "of", "the", "gradient", "on", "the", "input", "get", "rounded", "to", "NUMBER", "for", "float", "NUMBER", "none", "for", "float", "NUMBER", "Yes", "that", "seems", "to", "be", "exactly", "the", "problem", "I", "mention", "So", "I", "understand", "from", "your", "answer", "you", "suggest", "me", "to", "use", "generate", "NUMBER", "I", "see", "that", "in", "this", "way", "I", "can", "provide", "my", "own", "placeholder", "for", "x", "and", "actually", "I", "could", "also", "modify", "construct_graph", "to", "get", "an", "extra", "argument", "the", "type", "of", "the", "x", "placeholder", "in", "this", "way", "I", "do", "not", "need", "to", "specify", "in", "my", "external", "code", "the", "construction", "of", "the", "feedable", "and", "fix", "graph", "NUMBER", "But", "I", "still", "see", "some", "problem", "NUMBER", "the", "feedable", "kwargs", "types", "be", "specified", "as", "float", "NUMBER", "in", "the", "init", "of", "the", "Attack", "NUMBER", "I", "be", "quite", "sure", "the", "tf", "NUMBER", "to_float", "standard", "behaviour", "be", "return", "float", "NUMBER", "and", "there", "be", "some", "instances", "of", "this", "method", "in", "the", "code", "NUMBER", "in", "some", "generate", "methods", "there", "be", "explicit", "reference", "to", "float", "NUMBER", "e", "NUMBER", "g", "NUMBER", "DeepFool", "ElasticNetMethod", "CarliniWagnerL", "NUMBER", "SaliencyMapMethod", "NUMBER", "NUMBER", "Not", "sure", "how", "critical", "be", "to", "use", "float", "NUMBER", "for", "these", "attacks", "but", "use", "generate", "with", "a", "float", "NUMBER", "placeholder", "might", "generate", "conflict", "NUMBER", "I", "think", "maybe", "the", "best", "solution", "would", "be", "to", "pass", "a", "tf", "NUMBER", "type", "maybe", "with", "a", "check", "for", "support", "types", "in", "the", "beginning", "only", "float", "NUMBER", "and", "float", "NUMBER", "I", "guess", "to", "the", "Attack", "NUMBER", "__init__", "at", "that", "point", "can", "be", "stored", "in", "self", "NUMBER", "type", "and", "reused", "when", "needed", "in", "all", "the", "mention", "places", "NUMBER", "NUMBER", "NUMBER", "Or", "how", "would", "you", "advice", "me", "to", "proceed", "I", "looked", "into", "this", "a", "bit", "more", "yesterday", "NUMBER", "I", "didn", "t", "realize", "that", "the", "machinery", "for", "generate_np", "interfered", "with", "the", "machinery", "for", "generate", "so", "much", "NUMBER", "I", "m", "pretty", "annoyed", "about", "that", "and", "I", "think", "the", "solution", "might", "just", "be", "to", "remove", "generate_np", "NUMBER", "Another", "potential", "solution", "would", "be", "to", "try", "to", "get", "TensorFlow", "to", "support", "a", "floatX", "feature", "similar", "to", "what", "Theano", "has", "NUMBER", "In", "the", "meantime", "we", "could", "make", "a", "cleverhans", "NUMBER", "floatX", "and", "then", "phase", "it", "out", "after", "TensorFlow", "add", "it", "NUMBER", "I", "m", "going", "to", "start", "a", "conversation", "on", "cleverhans", "dev", "Update", "it", "looks", "like", "generate_np", "doesn", "t", "actually", "interfere", "with", "generate", "though", "generate_np", "itself", "doesn", "t", "support", "float", "NUMBER", "I", "suggest", "just", "sending", "small", "PRs", "like", "this", "one", "whenever", "you", "encounter", "something", "that", "doesn", "t", "support", "float", "NUMBER", "LINK", "Ok", "sure", "Thanks", "for", "the", "feedback", "I", "will", "try", "to", "send", "some", "small", "PRs", "like", "the", "one", "you", "showed", "in", "the", "next", "days", "I", "can", "contribute", "on", "this", "I", "will", "work", "on", "it", "and", "submit", "a", "pull", "request", "NUMBER", "I", "have", "two", "question", "before", "I", "modify", "stuffs", "I", "want", "to", "be", "sure", "I", "fully", "understand", "the", "architecture", "so", "I", "will", "be", "able", "to", "properly", "test", "it", "NUMBER", "could", "you", "point", "me", "to", "a", "minimal", "work", "example", "with", "generate", "of", "the", "code", "I", "pasted", "above", "where", "i", "was", "use", "generate_np", "instead", "the", "very", "simple", "one", "layer", "network", "just", "for", "understanding", "NUMBER", "Let", "s", "say", "I", "already", "have", "a", "tf", "NUMBER", "graph", "that", "goes", "from", "node", "x", "to", "node", "logits", "stored", "in", "a", "tf", "NUMBER", "session", "inside", "an", "my", "favourite", "object", "class", "of", "my", "own", "python", "module", "NUMBER", "Can", "I", "pass", "somehow", "this", "graph", "to", "cleverhans", "generate", "to", "generate", "adversarial", "examples", "for", "such", "a", "network", "Or", "should", "I", "pass", "the", "whole", "function", "generating", "the", "tensorflow", "graph", "nodes", "from", "x", "to", "logits", "E", "NUMBER", "g", "NUMBER", "In", "my", "understanding", "for", "carlini", "wagner", "the", "graph", "be", "use", "to", "generate", "the", "output", "starting", "from", "a", "image", "treated", "as", "a", "variable", "self", "NUMBER", "output", "model", "NUMBER", "get_logits", "self", "NUMBER", "newimg", "with", "fgsm", "seems", "to", "work", "instead", "NUMBER", "So", "in", "general", "it", "be", "not", "possible", "to", "just", "reference", "to", "the", "nodes", "I", "already", "possess", "and", "one", "should", "pass", "the", "whole", "graph", "generation", "function", "instead", "NUMBER", "Would", "there", "be", "possible", "to", "avoid", "this", "and", "simply", "augment", "the", "graph", "I", "already", "possess", "in", "my", "python", "object", "session", "with", "the", "necessary", "nodes", "for", "the", "adversarial", "generation", "Ok", "I", "think", "for", "point", "NUMBER", "it", "was", "quite", "easy", "correct", "me", "if", "there", "be", "a", "better", "way", "def", "nn", "x", "return", "create_logits", "x", "sess", "tf", "NUMBER", "Session", "x", "tf", "NUMBER", "placeholder", "tf_dtype", "shape", "None", "input_shape", "nn_model", "CallableModelWrapper", "nn", "logits", "with", "sess", "NUMBER", "graph", "NUMBER", "as_default", "attack", "AttackClass", "nn_model", "tf", "sess", "dtypestr", "dtypestr", "x_adv", "attack", "NUMBER", "generate", "x", "params", "x_adv_test", "sess", "NUMBER", "run", "x_adv", "x", "x_test", "The", "question", "of", "point", "NUMBER", "still", "remains", "though", "NUMBER", "Hi", "When", "I", "call", "the", "FastGradientMethod", "an", "error", "rises", "that", "The", "model", "argument", "should", "be", "an", "instance", "of", "the", "cleverhans", "NUMBER", "model", "NUMBER", "Model", "class", "NUMBER", "TAG", "in", "TAG", "NUMBER", "model", "InceptionModel", "num_classes", "NUMBER", "NUMBER", "fgsm", "FastGradientMethod", "model", "What", "can", "I", "do", "Best", "B", "NUMBER", "A", "NUMBER", "I", "wrap", "my", "InceptionModel", "with", "the", "Model", "class", "NUMBER", "But", "Another", "error", "rises", "that", "AttributeError", "module", "object", "has", "no", "attribute", "model", "I", "read", "the", "tutorials", "NUMBER", "I", "use", "the", "same", "manner", "but", "unable", "to", "solve", "it", "NUMBER", "This", "seems", "to", "be", "a", "problem", "with", "the", "InceptionModel", "class", "since", "cleverhans", "NUMBER", "model", "NUMBER", "Model", "do", "not", "have", "a", "model", "attribute", "This", "be", "my", "model", "class", "class", "InceptionModel", "object", "def", "__init__", "self", "num_classes", "self", "NUMBER", "num_classes", "num_classes", "self", "NUMBER", "build", "False", "def", "__call__", "self", "x_input", "Constructs", "model", "and", "return", "probabilities", "for", "given", "input", "NUMBER", "reuse", "True", "if", "self", "NUMBER", "build", "else", "None", "with", "slim", "NUMBER", "arg_scope", "inception", "NUMBER", "inception_v", "NUMBER", "_arg_scope", "_", "end_points", "inception", "NUMBER", "inception_v", "NUMBER", "x_input", "num_classes", "self", "NUMBER", "num_classes", "is_training", "False", "reuse", "reuse", "self", "NUMBER", "build", "True", "output", "end_points", "Predictions", "probs", "output", "NUMBER", "op", "NUMBER", "inputs", "NUMBER", "return", "probs", "And", "the", "code", "par", "t", "to", "attack", "the", "network", "tf", "NUMBER", "logging", "NUMBER", "set_verbosity", "tf", "NUMBER", "logging", "NUMBER", "INFO", "with", "tf", "NUMBER", "Graph", "NUMBER", "as_default", "x_input", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "shape", "batch_shape", "model", "cleverhans", "NUMBER", "model", "NUMBER", "Model", "InceptionModel", "num_classes", "fgsm", "FastGradientMethod", "x_adv", "fgsm", "NUMBER", "generate", "x_input", "eps", "eps", "clip_min", "NUMBER", "clip_max", "NUMBER", "saver", "tf", "NUMBER", "train", "NUMBER", "Saver", "slim", "NUMBER", "get_model_variables", "session_creator", "tf", "NUMBER", "train", "NUMBER", "ChiefSessionCreator", "scaffold", "tf", "NUMBER", "train", "NUMBER", "Scaffold", "saver", "saver", "checkpoint_filename_with_path", "checkpoint_path", "master", "tensorflow_master", "with", "tf", "NUMBER", "train", "NUMBER", "MonitoredSession", "session_creator", "session_creator", "as", "sess", "nontargeted_images", "sess", "NUMBER", "run", "model", "feed_dict", "x_input", "images", "AttributeError", "Traceback", "most", "recent", "call", "last", "TAG", "in", "TAG", "NUMBER", "x_input", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "shape", "batch_shape", "NUMBER", "NUMBER", "model", "cleverhans", "NUMBER", "model", "NUMBER", "Model", "InceptionModel", "num_classes", "NUMBER", "NUMBER", "fgsm", "FastGradientMethod", "model", "AttributeError", "module", "object", "has", "no", "attribute", "model", "Unfortunately", "I", "don", "t", "know", "NUMBER", "I", "couldn", "t", "find", "it", "NUMBER", "Hi", "How", "should", "I", "import", "the", "module", "and", "use", "the", "Model", "and", "Attacks", "classes", "I", "imported", "the", "module", "the", "way", "in", "tutorials", "but", "unable", "to", "use", "the", "model", "and", "attack", "class", "NUMBER", "Am", "I", "miss", "something", "I", "can", "use", "attack", "class", "but", "unable", "to", "use", "model", "class", "if", "I", "import", "like", "this", "from", "cleverhans", "NUMBER", "attacks", "import", "FastGradientMethod", "If", "I", "use", "these", "imports", "import", "cleverhans", "NUMBER", "model", "import", "cleverhans", "NUMBER", "attacks", "models", "cleverhans", "NUMBER", "model", "NUMBER", "Model", "InceptionModel", "num_classes", "fgsm", "cleverhans", "NUMBER", "attacks", "NUMBER", "FastGradientMethod", "models", "x_adv", "fgsm", "NUMBER", "generate", "x_input", "eps", "eps", "clip_min", "NUMBER", "clip_max", "NUMBER", "Error", "TypeError", "Traceback", "most", "recent", "call", "last", "TAG", "in", "TAG", "NUMBER", "x_input", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "shape", "batch_shape", "NUMBER", "NUMBER", "models", "cleverhans", "NUMBER", "model", "NUMBER", "Model", "InceptionModel", "num_classes", "NUMBER", "fgsm", "cleverhans", "NUMBER", "attacks", "NUMBER", "FastGradientMethod", "models", "NUMBER", "x_adv", "fgsm", "NUMBER", "generate", "x_input", "eps", "eps", "clip_min", "NUMBER", "clip_max", "NUMBER", "TypeError", "__init__", "takes", "NUMBER", "positional", "argument", "but", "NUMBER", "were", "given", "One", "easier", "and", "cleaner", "way", "might", "be", "to", "rewrite", "your", "inception", "model", "class", "to", "inherit", "directly", "from", "the", "CleverHans", "model", "class", "since", "it", "s", "already", "only", "a", "wrapper", "for", "the", "slim", "model", "NUMBER", "You", "can", "look", "at", "the", "wrapper", "we", "include", "for", "keras", "in", "the", "utils_keras", "NUMBER", "py", "file", "for", "some", "guidance", "NUMBER", "hello", "have", "you", "solve", "the", "problem", "I", "have", "same", "problem", "NUMBER", "from", "cleverhans", "NUMBER", "model", "import", "Model", "Including", "this", "should", "solve", "the", "issue", "NUMBER", "I", "rewrote", "class", "InceptionModel", "code", "from", "cleverhans", "NUMBER", "model", "import", "Model", "class", "InceptionModel", "Model", "Model", "class", "for", "CleverHans", "library", "NUMBER", "def", "__init__", "self", "nb_classes", "super", "InceptionModel", "self", "NUMBER", "__init__", "nb_classes", "nb_classes", "needs_dummy_fprop", "True", "self", "NUMBER", "build", "False", "def", "__call__", "self", "x_input", "return_logits", "False", "Constructs", "model", "and", "return", "probabilities", "for", "given", "input", "NUMBER", "reuse", "True", "if", "self", "NUMBER", "build", "else", "None", "with", "slim", "NUMBER", "arg_scope", "inception", "NUMBER", "inception_v", "NUMBER", "_arg_scope", "Inception", "preprocessing", "uses", "NUMBER", "NUMBER", "scaled", "input", "NUMBER", "x_input", "x_input", "NUMBER", "NUMBER", "_", "end_points", "inception", "NUMBER", "inception_v", "NUMBER", "x_input", "num_classes", "self", "NUMBER", "nb_classes", "is_training", "False", "reuse", "reuse", "self", "NUMBER", "build", "True", "self", "NUMBER", "logits", "end_points", "Logits", "Strip", "off", "the", "extra", "reshape", "op", "at", "the", "output", "self", "NUMBER", "probs", "end_points", "Predictions", "NUMBER", "op", "NUMBER", "inputs", "NUMBER", "if", "return_logits", "return", "self", "NUMBER", "logits", "else", "return", "self", "NUMBER", "probs", "def", "get_logits", "self", "x_input", "return", "self", "x_input", "return_logits", "True", "def", "get_probs", "self", "x_input", "return", "self", "x_input", "def", "_top_", "NUMBER", "_accuracy", "logits", "labels", "return", "tf", "NUMBER", "reduce_mean", "tf", "NUMBER", "cast", "tf", "NUMBER", "nn", "NUMBER", "in_top_k", "logits", "labels", "NUMBER", "tf", "NUMBER", "float", "NUMBER", "Would", "there", "be", "any", "interest", "in", "having", "the", "cleverhans", "NUMBER", "py", "file", "converted", "into", "Jupyter", "notebooks", "It", "would", "assist", "with", "readability", "HTML", "export", "and", "friendly", "format", "on", "GitHub", "and", "also", "give", "an", "opportunity", "to", "add", "annotations", "and", "illustrations", "rather", "than", "in", "line", "comments", "NUMBER", "I", "would", "prefer", "to", "keep", "the", "file", "as", "NUMBER", "py", "so", "new", "users", "have", "less", "overhead", "to", "run", "the", "tutorials", "but", "I", "m", "open", "to", "having", "new", "tutorials", "in", "notebooks", "On", "Sun", "Jan", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "AM", "Paige", "Bailey", "TAG", "write", "Would", "there", "be", "any", "interest", "in", "having", "the", "cleverhans", "NUMBER", "py", "file", "converted", "into", "Jupyter", "notebooks", "It", "would", "assist", "with", "readability", "HTML", "export", "and", "friendly", "format", "on", "GitHub", "and", "also", "give", "an", "opportunity", "to", "add", "annotations", "and", "illustrations", "rather", "than", "in", "line", "comments", "NUMBER", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Following", "the", "discussion", "with", "goodfeli", "npapernot", "and", "catherio", "on", "my", "previous", "PR", "this", "PR", "contains", "only", "example", "scripts", "that", "import", "RLAttack", "LINK", "attack", "as", "a", "package", "NUMBER", "goodfeli", "sorry", "for", "the", "late", "response", "NUMBER", "Did", "you", "run", "it", "in", "Python", "NUMBER", "I", "m", "looking", "into", "this", "and", "will", "let", "you", "know", "in", "a", "few", "mins", "thanks", "NUMBER", "goodfeli", "seems", "like", "this", "issue", "comes", "up", "in", "certain", "Linux", "distros", "like", "CentOS", "and", "older", "RedHats", "I", "find", "one", "mention", "of", "this", "happening", "in", "MacOS", "as", "well", "NUMBER", "A", "potential", "fix", "be", "to", "install", "libffi", "beforehand", "NUMBER", "Can", "you", "try", "the", "following", "or", "its", "yum", "equivalent", "if", "necessary", "before", "installing", "RLAttack", "sudo", "apt", "get", "install", "libffi", "NUMBER", "libffi", "dev", "Also", "what", "OS", "distro", "be", "you", "run", "this", "on", "Thanks", "catherio", "for", "link", "to", "the", "medium", "article", "very", "useful", "read", "NUMBER", "Submodules", "don", "t", "seem", "to", "be", "like", "a", "good", "idea", "for", "us", "and", "an", "example", "importing", "the", "target", "repository", "would", "be", "a", "better", "option", "NUMBER", "LGTM", "The", "latest", "build", "with", "tf", "NUMBER", "be", "fail", "with", "the", "following", "error", "ERROR", "test_get_logits_over_interval", "test_utils", "NUMBER", "TestUtils", "Traceback", "most", "recent", "call", "last", "File", "home", "travis", "build", "tensorflow", "cleverhans", "tests_tf", "test_utils", "NUMBER", "py", "line", "NUMBER", "in", "test_get_logits_over_interval", "num_points", "num_points", "File", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "utils", "NUMBER", "py", "line", "NUMBER", "in", "get_logits_over_interval", "logits", "model", "NUMBER", "get_logits", "lin_batch", "File", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "utils_keras", "NUMBER", "py", "line", "NUMBER", "in", "get_logits", "logits_name", "self", "NUMBER", "_get_logits_name", "File", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "utils_keras", "NUMBER", "py", "line", "NUMBER", "in", "_get_logits_name", "node", "softmax_layer", "NUMBER", "inbound_nodes", "NUMBER", "AttributeError", "Activation", "object", "has", "no", "attribute", "inbound_nodes", "See", "LINK", "ci", "NUMBER", "org", "tensorflow", "cleverhans", "jobs", "NUMBER", "build", "for", "LINK", "inbound_nodes", "get", "renamed", "to", "_inbound_nodes", "as", "of", "LINK", "team", "keras", "commit", "NUMBER", "c", "NUMBER", "a", "NUMBER", "be", "NUMBER", "c", "NUMBER", "f", "NUMBER", "b", "NUMBER", "be", "NUMBER", "f", "NUMBER", "diff", "fe", "NUMBER", "ca", "NUMBER", "e", "NUMBER", "a", "NUMBER", "d", "NUMBER", "b", "NUMBER", "ea", "NUMBER", "c", "NUMBER", "ba", "NUMBER", "What", "s", "the", "right", "way", "to", "proceed", "Proposal", "replace", "that", "line", "which", "be", "the", "only", "use", "of", "_inbound_nodes", "with", "a", "hasattr", "check", "and", "a", "deprecation", "warning", "to", "avoid", "breaking", "folks", "who", "be", "still", "use", "older", "Keras", "close", "as", "of", "NUMBER", "RLAttack", "add", "to", "examples", "NUMBER", "RLAttack", "be", "an", "interface", "between", "Cleverhans", "and", "OpenAI", "Baselines", "for", "experimenting", "with", "adversarial", "example", "attacks", "on", "deep", "Reinforcement", "Learning", "NUMBER", "Current", "version", "support", "FGSM", "Iterative", "and", "CWL", "NUMBER", "attacks", "on", "DQNs", "NUMBER", "Thanks", "to", "Nicolas", "Papernot", "for", "suggesting", "this", "PR", "on", "cleverhans", "dev", "NUMBER", "Thanks", "for", "your", "pull", "request", "NUMBER", "It", "looks", "like", "this", "may", "be", "your", "first", "contribution", "to", "a", "Google", "open", "source", "project", "NUMBER", "Before", "we", "can", "look", "at", "your", "pull", "request", "you", "ll", "need", "to", "sign", "a", "Contributor", "License", "Agreement", "CLA", "NUMBER", "memo", "Please", "visit", "TAG", "to", "sign", "NUMBER", "Once", "you", "ve", "sign", "please", "reply", "here", "e", "NUMBER", "g", "NUMBER", "I", "sign", "it", "and", "we", "ll", "verify", "NUMBER", "Thanks", "NUMBER", "If", "you", "ve", "already", "sign", "a", "CLA", "it", "s", "possible", "we", "don", "t", "have", "your", "GitHub", "username", "or", "you", "re", "use", "a", "different", "email", "address", "on", "your", "commit", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "If", "your", "company", "sign", "a", "CLA", "they", "designated", "a", "Point", "of", "Contact", "who", "decides", "which", "employees", "be", "authorized", "to", "participate", "NUMBER", "You", "may", "need", "to", "contact", "the", "Point", "of", "Contact", "for", "your", "company", "and", "ask", "to", "be", "add", "to", "the", "group", "of", "authorized", "contributors", "NUMBER", "If", "you", "don", "t", "know", "who", "your", "Point", "of", "Contact", "be", "direct", "the", "project", "maintainer", "to", "go", "cla", "troubleshoot", "NUMBER", "The", "email", "use", "to", "register", "you", "as", "an", "authorized", "contributor", "must", "be", "the", "email", "use", "for", "the", "Git", "commit", "NUMBER", "In", "order", "to", "pass", "this", "check", "please", "resolve", "this", "problem", "and", "have", "the", "pull", "request", "author", "add", "another", "comment", "and", "the", "bot", "will", "run", "again", "NUMBER", "If", "the", "bot", "doesn", "t", "comment", "it", "means", "it", "doesn", "t", "think", "anything", "has", "change", "NUMBER", "TAG", "Signed", "CLA", "CLAs", "look", "good", "thanks", "TAG", "npapernot", "goodfeli", "I", "would", "appreciate", "your", "review", "on", "this", "In", "the", "PR", "I", "see", "that", "you", "be", "not", "merge", "any", "source", "code", "but", "rather", "including", "one", "of", "your", "repository", "as", "a", "submodule", "of", "the", "CleverHans", "repository", "NUMBER", "Is", "that", "correct", "If", "yes", "be", "the", "repo", "you", "be", "trying", "to", "link", "to", "this", "one", "LINK", "attack", "If", "the", "purpose", "be", "just", "to", "demonstrate", "the", "attack", "on", "RL", "agents", "I", "think", "there", "be", "easier", "ways", "than", "add", "baseline", "as", "a", "submodule", "For", "example", "Adding", "a", "single", "DQN", "script", "and", "attack", "it", "during", "inference", "I", "would", "quite", "strongly", "advise", "against", "add", "a", "submodule", "to", "cleverhans", "without", "a", "major", "reason", "to", "which", "I", "haven", "t", "yet", "seen", "NUMBER", "The", "section", "The", "dangers", "we", "face", "in", "this", "medium", "post", "explains", "my", "thinking", "LINK", "porteneuve", "mastering", "git", "submodules", "NUMBER", "c", "NUMBER", "e", "NUMBER", "Other", "options", "include", "importing", "rlattack", "as", "a", "package", "and", "including", "an", "example", "script", "showing", "how", "it", "s", "use", "or", "merge", "the", "code", "into", "this", "repository", "NUMBER", "goodfeli", "npapernot", "catherio", "yenchenlin", "Thank", "you", "for", "your", "comments", "and", "apologies", "for", "my", "late", "response", "NUMBER", "Following", "your", "suggestions", "I", "be", "preparing", "an", "example", "script", "with", "a", "detailed", "README", "file", "and", "will", "submit", "another", "PR", "soon", "NUMBER", "This", "build", "failure", "looks", "spurious", "NUMBER", "Going", "to", "try", "closing", "and", "re", "open", "the", "pull", "request", "to", "re", "run", "the", "build", "NUMBER", "The", "build", "with", "tensorflow", "NUMBER", "be", "now", "fine", "but", "the", "NUMBER", "build", "be", "fail", "for", "reasons", "that", "look", "real", "NUMBER", "I", "ll", "see", "what", "I", "can", "do", "about", "that", "LINK", "NUMBER", "Er", "to", "clarify", "I", "was", "wrong", "when", "I", "said", "tf", "NUMBER", "works", "fine", "actually", "the", "build", "with", "NUMBER", "fail", "for", "a", "different", "reason", "just", "much", "later", "in", "the", "process", "NUMBER", "None", "of", "this", "has", "anything", "to", "do", "with", "your", "typofix", "obviously", "NUMBER", "Just", "happens", "to", "be", "revealing", "other", "issue", "that", "be", "preventing", "an", "auto", "merge", "NUMBER", "I", "ll", "manually", "merge", "your", "change", "in", "a", "sec", "and", "I", "ve", "documented", "these", "build", "issue", "elsewhere", "NUMBER", "Included", "in", "pr", "NUMBER", "Trying", "to", "run", "the", "target", "class", "example", "use", "the", "inception_v", "NUMBER", "ckpt", "checkpoint", "cleverhans", "examples", "nips", "NUMBER", "_adversarial_competition", "sample_targeted_attacks", "iter_target_class", "but", "get", "this", "error", "NotFoundError", "see", "above", "for", "traceback", "Tensor", "name", "InceptionV", "NUMBER", "AuxLogits", "Conv", "NUMBER", "d_", "NUMBER", "a_", "NUMBER", "x", "NUMBER", "BatchNorm", "beta", "not", "find", "in", "checkpoint", "file", "inception_v", "NUMBER", "ckpt", "Node", "save", "RestoreV", "NUMBER", "_", "NUMBER", "RestoreV", "NUMBER", "dtypes", "DT_FLOAT", "_device", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "device", "CPU", "NUMBER", "_arg_save", "Const_", "NUMBER", "_", "NUMBER", "save", "RestoreV", "NUMBER", "_", "NUMBER", "tensor_names", "save", "RestoreV", "NUMBER", "_", "NUMBER", "shape_and_slices", "Am", "also", "receiving", "this", "same", "error", "when", "trying", "other", "attacks", "as", "well", "npapernot", "This", "has", "be", "sitting", "for", "a", "little", "while", "be", "you", "up", "to", "take", "a", "look", "or", "triage", "delegate", "AlexeyKurakin", "would", "be", "the", "best", "to", "deal", "with", "this", "issue", "he", "merge", "most", "of", "the", "code", "and", "checkpoints", "for", "the", "adversarial", "competition", "NUMBER", "From", "the", "error", "it", "looks", "like", "the", "checkpoint", "and", "model", "definition", "don", "t", "match", "NUMBER", "huntergregal", "I", "guess", "the", "error", "be", "that", "you", "be", "use", "the", "images", "with", "smaller", "size", "for", "the", "attack", "i", "NUMBER", "e", "NUMBER", "your", "image", "size", "be", "smaller", "than", "NUMBER", "x", "NUMBER", "NUMBER", "Your", "variable", "name", "be", "InceptionV", "NUMBER", "AuxLogits", "Conv", "NUMBER", "d_", "NUMBER", "a_", "NUMBER", "x", "NUMBER", "while", "the", "default", "name", "stored", "at", "checkpoint", "be", "InceptionV", "NUMBER", "AuxLogits", "Conv", "NUMBER", "d_", "NUMBER", "a_", "NUMBER", "x", "NUMBER", "You", "can", "take", "a", "look", "at", "LINK", "_v", "NUMBER", "py", "L", "NUMBER", "where", "the", "kernel", "size", "be", "generate", "by", "kernel_size", "_reduced_kernel_size_for_small_input", "aux_logits", "NUMBER", "NUMBER", "which", "be", "determined", "by", "the", "input", "size", "NUMBER", "If", "this", "be", "the", "problem", "i", "think", "there", "be", "two", "ways", "to", "solve", "it", "a", "resize", "your", "image", "to", "NUMBER", "x", "NUMBER", "or", "NUMBER", "comments", "all", "line", "relate", "to", "auxlogits", "in", "your", "model", "definition", "NUMBER", "So", "there", "s", "good", "news", "and", "bad", "news", "NUMBER", "thumbsup", "The", "good", "news", "be", "that", "everyone", "that", "needs", "to", "sign", "a", "CLA", "the", "pull", "request", "submitter", "and", "all", "commit", "authors", "have", "do", "so", "NUMBER", "Everything", "be", "all", "good", "there", "NUMBER", "confused", "The", "bad", "news", "be", "that", "it", "appears", "that", "one", "or", "more", "commit", "were", "authored", "by", "someone", "other", "than", "the", "pull", "request", "submitter", "NUMBER", "We", "need", "to", "confirm", "that", "all", "authors", "be", "ok", "with", "their", "commit", "be", "contributed", "to", "this", "project", "NUMBER", "Please", "have", "them", "confirm", "that", "here", "in", "the", "pull", "request", "NUMBER", "Note", "to", "project", "maintainer", "This", "be", "a", "terminal", "state", "meaning", "the", "cla", "google", "commit", "status", "will", "not", "change", "from", "this", "State", "NUMBER", "It", "s", "up", "to", "you", "to", "confirm", "consent", "of", "the", "commit", "author", "s", "and", "merge", "this", "pull", "request", "when", "appropriate", "NUMBER", "TAG", "Re", "the", "bot", "fail", "I", "think", "it", "s", "because", "I", "push", "the", "edit", "from", "github", "s", "website", "NUMBER", "It", "keep", "make", "the", "bot", "fail", "every", "time", "I", "do", "that", "and", "there", "seem", "to", "be", "no", "solutions", "to", "that", "last", "time", "I", "checked", "ok", "to", "merge", "This", "branch", "implement", "the", "momentum", "iterative", "attack", "method", "which", "was", "propose", "to", "improve", "the", "transferability", "of", "adversarial", "examples", "and", "won", "the", "first", "places", "in", "NIPS", "NUMBER", "adversarial", "competitions", "NUMBER", "The", "current", "implementation", "include", "L", "NUMBER", "L", "NUMBER", "and", "L", "infinity", "attacks", "NUMBER", "I", "have", "add", "the", "test", "NUMBER", "I", "ve", "fix", "the", "numerical", "instability", "issue", "in", "the", "recent", "commit", "NUMBER", "This", "address", "the", "issue", "for", "better", "seeding", "NUMBER", "NUMBER", "The", "trick", "was", "two", "create", "two", "graphs", "since", "in", "a", "single", "graph", "two", "random", "variable", "nodes", "must", "generate", "different", "values", "NUMBER", "There", "be", "still", "some", "repeatability", "issue", "but", "only", "GPU", "and", "of", "a", "lesser", "magnitude", "NUMBER", "CPU", "appears", "totally", "deterministic", "now", "NUMBER", "Yes", "I", "did", "also", "test", "keras", "On", "Mon", "Dec", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Nicolas", "Papernot", "TAG", "write", "Did", "you", "get", "a", "chance", "to", "test", "the", "atol", "values", "on", "both", "GPU", "and", "CPU", "thoroughly", "after", "we", "spoke", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Thank", "you", "Added", "the", "utility", "function", "for", "discretizing", "image", "inputs", "use", "one", "hot", "and", "thermometer", "encoding", "and", "add", "the", "Logit", "Space", "Projected", "Gradient", "Ascent", "LS", "PGA", "from", "the", "paper", "LINK", "S", "NUMBER", "Su", "CW", "NUMBER", "Also", "add", "an", "example", "tutorial", "for", "thermometer", "encoding", "and", "LSPGA", "NUMBER", "Thanks", "Should", "I", "review", "now", "or", "after", "you", "ve", "made", "some", "update", "to", "get", "it", "out", "of", "WIP", "status", "You", "could", "review", "for", "content", "technical", "correctness", "but", "at", "the", "moment", "this", "doesn", "t", "fit", "into", "the", "Cleverhans", "spec", "hence", "I", "tag", "it", "WIP", "NUMBER", "Can", "you", "add", "some", "documentation", "on", "how", "to", "call", "into", "these", "function", "For", "example", "in", "ls", "pga", "the", "model", "argument", "appears", "different", "than", "the", "cleverhans", "standard", "model", "this", "one", "takes", "a", "projection", "function", "as", "an", "argument", "and", "also", "a", "reuse", "NUMBER", "Similarly", "the", "discretize_fn", "argument", "seems", "like", "you", "should", "be", "passing", "discretize_uniform", "as", "an", "argument", "but", "ls", "pga", "doesn", "t", "supply", "a", "levels", "argument", "NUMBER", "A", "small", "example", "of", "training", "a", "standard", "model", "just", "plain", "without", "adversarial", "training", "with", "thermometer", "encoding", "and", "then", "showing", "LS", "PGA", "on", "it", "would", "be", "a", "simple", "way", "to", "make", "this", "much", "easier", "to", "understand", "NUMBER", "I", "add", "an", "ipython", "example", "notebook", "LINK", "NUMBER", "Example", "NUMBER", "ipynb", "of", "how", "to", "use", "the", "discretization", "function", "and", "the", "LS", "PGA", "attack", "on", "discretized", "inputs", "NUMBER", "Hope", "that", "helps", "Thanks", "but", "it", "appears", "the", "code", "has", "a", "bug", "NUMBER", "On", "line", "NUMBER", "you", "call", "discretize_fn", "with", "NUMBER", "argument", "NUMBER", "This", "be", "received", "from", "line", "NUMBER", "where", "discretize_fn", "be", "an", "argument", "to", "lspga", "NUMBER", "In", "the", "example", "code", "you", "call", "it", "with", "discretize_uniform", "which", "expects", "at", "least", "two", "argument", "one", "of", "which", "must", "be", "levels", "and", "also", "has", "a", "thermometer", "argument", "NUMBER", "If", "I", "change", "L", "NUMBER", "to", "q", "discretize_fn", "alpha", "low", "NUMBER", "alpha", "high", "levels", "then", "when", "I", "train", "I", "end", "up", "with", "the", "shape", "of", "features_disc_adv", "be", "NUMBER", "instead", "of", "NUMBER", "This", "appears", "to", "be", "because", "the", "shape", "starts", "out", "as", "batch_size", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "presumably", "incorrectly", "NUMBER", "Also", "I", "assume", "on", "the", "ipython", "notebook", "that", "the", "line", "logits_adv", "model", "features_adv", "is_training", "phase", "should", "be", "logits_adv", "model", "features_disc_adv", "is_training", "phase", "Edit", "I", "mistyped", "my", "change", "to", "L", "NUMBER", "it", "s", "correct", "above", "to", "the", "new", "line", "NUMBER", "I", "have", "be", "able", "to", "make", "the", "code", "into", "something", "that", "runs", "without", "crash", "NUMBER", "It", "required", "change", "L", "NUMBER", "to", "q", "discretize_fn", "alpha", "low", "NUMBER", "alpha", "high", "levels", "thermometer", "as", "well", "as", "change", "the", "example", "script", "from", "features_disc_adv", "adv_lspga", "features_disc", "model", "discretize_uniform", "to", "features_disc_adv", "adv_lspga", "features", "model", "discretize_uniform", "and", "now", "it", "be", "run", "NUMBER", "The", "problem", "now", "be", "that", "on", "an", "unsecured", "CIFAR", "model", "I", "ve", "trained", "with", "thermometer", "encoding", "use", "the", "eps", "NUMBER", "attack_step", "NUMBER", "steps", "NUMBER", "it", "only", "reduces", "the", "accuracy", "to", "NUMBER", "from", "NUMBER", "NUMBER", "Can", "you", "confirm", "these", "be", "the", "right", "argument", "to", "be", "use", "You", "need", "to", "set", "noisy_grads", "False", "while", "test", "since", "otherwise", "you", "re", "attacking", "image", "noise", "and", "not", "the", "image", "itself", "NUMBER", "HTH", "NUMBER", "I", "adapted", "the", "code", "to", "fit", "the", "cleverhans", "spec", "I", "will", "add", "some", "test", "shortly", "NUMBER", "goodfeli", "be", "you", "still", "up", "to", "review", "this", "it", "looks", "like", "it", "s", "waiting", "for", "another", "review", "pass", "NUMBER", "Following", "up", "with", "catherio", "and", "goodfeli", "NUMBER", "Looks", "like", "it", "still", "needs", "to", "be", "review", "royaurko", "Can", "you", "make", "the", "change", "I", "ll", "merge", "afterwards", "The", "original", "cleverhans", "assumes", "the", "clip_min", "and", "clip_max", "to", "be", "the", "same", "for", "all", "pixels", "NUMBER", "However", "in", "some", "case", "for", "example", "preprocessing", "a", "image", "by", "subtracting", "the", "corresponding", "mean", "value", "on", "each", "pixel", "the", "clip_min", "and", "clip_max", "be", "actually", "different", "for", "each", "pixel", "NUMBER", "The", "modify", "code", "support", "the", "mention", "new", "clip", "for", "four", "attack", "classes", "FastGradientMethod", "BasicIterativeMethod", "VirtualAdversarialMethod", "MadryEtAl", "while", "SaliencyMapMethod", "CarliniWagnerL", "NUMBER", "DeepFool", "ElasticNetMethod", "be", "not", "modify", "yet", "NUMBER", "Hi", "I", "always", "fail", "at", "test_mnist_tutorial_tf", "which", "also", "happened", "in", "Build", "NUMBER", "Theoretically", "I", "do", "not", "change", "anything", "relate", "to", "this", "test", "but", "it", "still", "fail", "NUMBER", "I", "was", "test", "with", "the", "original", "code", "to", "see", "if", "there", "be", "any", "chance", "that", "it", "be", "the", "problem", "of", "the", "original", "code", "NUMBER", "I", "notice", "that", "the", "solution", "to", "Buid", "NUMBER", "fail", "was", "to", "tolerate", "a", "larger", "gap", "NUMBER", "Do", "you", "think", "it", "be", "okay", "to", "do", "that", "in", "my", "case", "I", "test", "with", "NUMBER", "e", "NUMBER", "instead", "of", "NUMBER", "e", "NUMBER", "and", "it", "succeeded", "NUMBER", "Thanks", "NUMBER", "Were", "you", "seeing", "the", "failures", "on", "Travis", "your", "own", "machine", "or", "both", "It", "be", "good", "on", "my", "own", "machine", "NUMBER", "It", "fail", "only", "on", "Travis", "NUMBER", "OK", "and", "now", "I", "see", "the", "tolerance", "you", "had", "to", "raise", "was", "for", "the", "determinism", "test", "not", "the", "correctness", "test", "so", "that", "s", "less", "likely", "to", "be", "important", "Great", "Thanks", "I", "m", "sorry", "but", "I", "think", "we", "actually", "should", "not", "merge", "this", "feature", "NUMBER", "In", "order", "to", "keep", "the", "code", "cleanly", "decomposed", "implementations", "of", "universally", "applicable", "Attacks", "shouldn", "t", "need", "to", "contain", "logic", "relate", "to", "specific", "preprocessing", "steps", "NUMBER", "This", "approach", "wouldn", "t", "scale", "to", "support", "all", "kinds", "of", "preprocessing", "like", "ZCA", "GCN", "etc", "NUMBER", "We", "re", "also", "likely", "to", "introduce", "bug", "while", "trying", "to", "maintain", "attacks", "that", "have", "to", "take", "more", "complicated", "logic", "relate", "to", "the", "mean", "preprocessing", "into", "account", "NUMBER", "I", "think", "the", "right", "way", "to", "use", "this", "be", "just", "to", "pass", "a", "tensor", "valued", "argument", "to", "clip_min", "and", "clip_max", "NUMBER", "In", "general", "before", "starting", "a", "PR", "with", "work", "on", "a", "new", "feature", "it", "s", "best", "to", "write", "to", "cleverhans", "dev", "googlegroups", "NUMBER", "com", "to", "make", "sure", "we", "agree", "on", "the", "new", "feature", "NUMBER", "I", "know", "there", "be", "currently", "another", "open", "pull", "request", "for", "the", "JSMA", "but", "I", "just", "want", "to", "share", "the", "work", "I", "have", "do", "and", "hopefully", "it", "can", "help", "too", "NUMBER", "My", "motivation", "for", "the", "change", "be", "to", "improve", "the", "efficiency", "to", "generate", "adversarial", "examples", "for", "JSMA", "NUMBER", "With", "the", "change", "the", "time", "needed", "for", "generation", "should", "be", "greatly", "reduced", "NUMBER", "I", "haven", "t", "do", "a", "precise", "measurement", "but", "it", "roughly", "takes", "about", "NUMBER", "sec", "to", "generate", "NUMBER", "adversarial", "samples", "with", "GPU", "NUMBER", "The", "change", "try", "to", "keep", "the", "same", "interface", "of", "the", "original", "implementation", "so", "that", "no", "modification", "be", "needed", "for", "tutorial", "NUMBER", "I", "have", "run", "the", "test", "in", "the", "test_tf", "and", "the", "tutorial", "NUMBER", "I", "think", "there", "be", "something", "wrong", "with", "the", "test_generate_np_targeted_gives_adversarial_example", "test", "NUMBER", "I", "tried", "to", "fix", "it", "but", "I", "can", "t", "find", "a", "good", "way", "to", "do", "so", "NUMBER", "Maybe", "someone", "can", "comment", "on", "what", "the", "test", "be", "trying", "to", "do", "NUMBER", "Any", "comments", "and", "suggestions", "be", "appreciated", "NUMBER", "npapernot", "I", "m", "OK", "either", "way", "NUMBER", "I", "quickly", "went", "through", "the", "implementation", "NUMBER", "As", "far", "as", "I", "could", "see", "for", "smaller", "image", "size", "this", "solution", "should", "be", "faster", "than", "mine", "since", "the", "graph", "be", "simpler", "and", "more", "vectorized", "NUMBER", "zHiOoO", "Have", "you", "test", "NUMBER", "x", "NUMBER", "images", "from", "ImageNet", "gongzhitaao", "No", "I", "haven", "t", "tried", "use", "images", "with", "NUMBER", "x", "NUMBER", "You", "have", "a", "very", "good", "point", "NUMBER", "What", "I", "have", "do", "be", "a", "direct", "port", "from", "the", "original", "implementation", "NUMBER", "It", "works", "well", "for", "simple", "dataset", "like", "MNIST", "but", "it", "do", "has", "memory", "issue", "for", "datasets", "with", "larger", "image", "size", "NUMBER", "npapernot", "I", "think", "we", "could", "close", "my", "PR", "NUMBER", "and", "work", "toward", "this", "submission", "NUMBER", "zHiOoO", "Your", "code", "has", "some", "good", "idea", "that", "I", "want", "to", "integrate", "into", "my", "own", "implementation", "NUMBER", "Thank", "you", "for", "the", "PR", "smiley", "npapernot", "I", "think", "it", "s", "ready", "for", "you", "to", "re", "review", "npapernot", "The", "conflict", "be", "resolve", "NUMBER", "I", "have", "also", "add", "a", "new", "parameter", "for", "JSMA", "to", "allow", "switching", "between", "two", "implementations", "NUMBER", "image", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "cb", "NUMBER", "ab", "NUMBER", "d", "NUMBER", "f", "NUMBER", "e", "NUMBER", "NUMBER", "NUMBER", "d", "NUMBER", "b", "NUMBER", "f", "NUMBER", "png", "Whenever", "I", "try", "to", "run", "the", "run_attacks_and_defenses", "NUMBER", "py", "or", "the", "run_attacks_and_defenses", "NUMBER", "sh", "I", "end", "up", "get", "stuck", "at", "Restoring", "parameters", "from", "inception_v", "NUMBER", "ckpt", "would", "anyone", "know", "how", "I", "can", "get", "past", "this", "point", "Thanks", "AlexeyKurakin", "Could", "you", "provide", "some", "additional", "information", "about", "the", "issue", "NUMBER", "NUMBER", "Did", "you", "modify", "the", "code", "of", "the", "attack", "I", "yes", "do", "it", "work", "fine", "with", "unmodified", "version", "NUMBER", "How", "long", "did", "you", "wait", "It", "looks", "like", "you", "run", "it", "on", "CPU", "and", "it", "s", "quite", "slow", "to", "run", "inception", "model", "on", "CPU", "NUMBER", "So", "it", "might", "be", "the", "case", "that", "your", "model", "be", "just", "run", "and", "you", "need", "to", "wait", "longer", "NUMBER", "Restoring", "parameters", "from", "the", "checkpoint", "may", "take", "up", "to", "a", "few", "minutes", "depeding", "on", "you", "CPU", "and", "disk", "speed", "NUMBER", "After", "parameters", "be", "restored", "model", "starts", "generating", "adversarial", "examples", "which", "may", "take", "some", "time", "on", "CPU", "To", "see", "if", "your", "model", "actually", "doing", "anything", "you", "can", "check", "output", "folder", "to", "see", "if", "there", "be", "any", "file", "saved", "there", "NUMBER", "Also", "you", "can", "add", "additional", "printing", "logging", "before", "and", "after", "session", "run", "NUMBER", "More", "of", "a", "nit", "pick", "here", "model", "NUMBER", "Model", "has", "__metaclass__", "ABCMeta", "so", "I", "m", "assuming", "that", "it", "s", "to", "be", "extend", "before", "use", "NUMBER", "However", "I", "install", "cleverhans", "via", "pip", "and", "I", "be", "able", "to", "initiate", "an", "instance", "of", "Model", "NUMBER", "This", "shows", "that", "the", "property", "be", "not", "implement", "properly", "NUMBER", "I", "m", "not", "sure", "what", "s", "the", "best", "way", "to", "do", "this", "but", "decorating", "the", "method", "we", "want", "to", "overload", "with", "abstractmethod", "cf", "NUMBER", "LINK", "base", "classes", "in", "python", "I", "d", "be", "happy", "to", "send", "a", "PR", "with", "the", "change", "if", "that", "s", "the", "desired", "behaviour", "NUMBER", "Additionally", "it", "would", "be", "good", "to", "mention", "which", "methods", "we", "want", "users", "to", "implement", "when", "extending", "in", "the", "docs", "NUMBER", "Great", "I", "ll", "write", "it", "up", "NUMBER", "I", "m", "new", "to", "cleverhans", "so", "could", "you", "let", "me", "know", "which", "methods", "must", "be", "overloaded", "Looks", "like", "get_layer_names", "and", "fprop", "be", "the", "only", "candidates", "NUMBER", "Closing", "after", "discussions", "on", "cleverhans", "dev", "Has", "targeted", "FGSM", "be", "shown", "to", "reliably", "work", "Do", "you", "have", "a", "minimal", "example", "of", "it", "fail", "For", "people", "work", "on", "CH", "maybe", "regard", "this", "issue", "as", "Verify", "that", "targeted", "FGSM", "has", "adequate", "test", "and", "if", "not", "add", "them", "There", "s", "already", "a", "unit", "test", "example", "for", "targeted", "FGSM", "LINK", "_tf", "test_attacks", "NUMBER", "py", "L", "NUMBER", "Feel", "free", "to", "reopen", "if", "you", "can", "provide", "a", "reusable", "test", "case", "NUMBER", "Thank", "you", "for", "the", "test", "I", "will", "look", "at", "that", "NUMBER", "Attached", "be", "a", "simple", "case", "demonstrating", "targeted", "FGSM", "failure", "NUMBER", "An", "MNIST", "model", "be", "trained", "similarly", "to", "Cleverhans", "tutorials", "and", "then", "targeted", "FGSM", "be", "performed", "on", "examples", "NUMBER", "The", "script", "prints", "the", "target", "that", "FGSM", "be", "trying", "to", "achieve", "and", "the", "class", "of", "the", "corresponding", "example", "NUMBER", "These", "two", "things", "rarely", "match", "NUMBER", "The", "attached", "script", "runs", "from", "the", "cleverhans", "directory", "NUMBER", "FGSMTargetFailureExample", "NUMBER", "zip", "LINK", "Can", "I", "ask", "you", "two", "debugging", "question", "before", "we", "look", "into", "it", "ourselves", "NUMBER", "Does", "untargeted", "FGSM", "work", "If", "not", "then", "maybe", "there", "s", "a", "problem", "with", "the", "way", "your", "model", "be", "integrated", "into", "CleverHans", "NUMBER", "NUMBER", "Does", "targeted", "BasicIterativeMethod", "with", "several", "iterations", "work", "If", "so", "then", "maybe", "your", "model", "be", "robust", "enough", "to", "resist", "FGSM", "NUMBER", "Without", "more", "concrete", "evidence", "that", "this", "be", "a", "bug", "I", "m", "going", "to", "assume", "this", "just", "means", "targeted", "FGSM", "be", "not", "a", "very", "strong", "targeted", "algorithm", "against", "this", "model", "NUMBER", "Feel", "free", "to", "reopen", "if", "you", "find", "more", "concrete", "evidence", "that", "this", "be", "a", "software", "bug", "NUMBER", "Given", "the", "atol_fac", "the", "test", "had", "become", "too", "loose", "NUMBER", "the", "new", "values", "allow", "NUMBER", "change", "in", "the", "train", "test", "clean", "adv", "accuracies", "except", "for", "adversarial", "training", "accuracy", "that", "be", "allow", "to", "change", "NUMBER", "NUMBER", "npapernot", "thanks", "for", "the", "merge", "NUMBER", "Is", "there", "a", "reason", "for", "having", "different", "atol_fac", "for", "different", "TF", "version", "Is", "there", "a", "difference", "in", "the", "underlying", "seeding", "mechanism", "The", "change", "was", "introduce", "in", "NUMBER", "ab", "NUMBER", "a", "NUMBER", "fa", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "a", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ba", "NUMBER", "c", "NUMBER", "cb", "NUMBER", "ed", "NUMBER", "I", "have", "a", "commit", "that", "fail", "the", "test", "for", "TF", "TAG", "write", "The", "reason", "be", "that", "some", "test", "were", "previously", "fail", "for", "one", "of", "the", "two", "TF", "version", "we", "re", "test", "NUMBER", "These", "test", "be", "not", "ideal", "to", "begin", "with", "but", "before", "we", "solve", "the", "reproducibility", "issue", "NUMBER", "it", "s", "going", "to", "remain", "a", "problem", "NUMBER", "On", "Fri", "Nov", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "PM", "Fartash", "Faghri", "TAG", "write", "npapernot", "TAG", "thanks", "for", "the", "merge", "NUMBER", "Is", "there", "a", "reason", "for", "having", "different", "atol_fac", "for", "different", "TF", "version", "Is", "there", "a", "difference", "in", "the", "underlying", "seeding", "mechanism", "The", "change", "was", "introduce", "in", "NUMBER", "ab", "NUMBER", "a", "NUMBER", "f", "TAG", "NUMBER", "ab", "NUMBER", "a", "NUMBER", "fa", "NUMBER", "a", "NUMBER", "f", "NUMBER", "a", "NUMBER", "a", "NUMBER", "e", "NUMBER", "b", "NUMBER", "ba", "NUMBER", "c", "NUMBER", "cb", "NUMBER", "ed", "NUMBER", "I", "have", "a", "commit", "that", "fail", "the", "test", "for", "TF", "TAG", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "NUMBER", "issuecomment", "NUMBER", "or", "mute", "the", "thread", "TAG", "AIbS", "NUMBER", "uUUWfcQcmAA", "NUMBER", "ZHF", "NUMBER", "JOFa", "NUMBER", "wFwDWcks", "NUMBER", "sy", "NUMBER", "wgaJpZM", "NUMBER", "QRs", "NUMBER", "O", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "This", "causes", "the", "test", "to", "fail", "on", "CPU", "on", "tf", "NUMBER", "on", "my", "MacBook", "Pro", "now", "NUMBER", "File", "Users", "goodfellow", "cleverhans", "tests_tf", "test_mnist_tutorial_tf", "NUMBER", "py", "line", "NUMBER", "in", "test_mnist_tutorial_tf", "atol", "atol_fac", "NUMBER", "e", "NUMBER", "File", "Users", "goodfellow", "cleverhans", "cleverhans", "devtools", "checks", "NUMBER", "py", "line", "NUMBER", "in", "assertClose", "assert", "np", "NUMBER", "allclose", "x", "y", "args", "kwargs", "x", "y", "AssertionError", "NUMBER", "NUMBER", "begin", "captured", "stdout", "TAG", "in", "TAG", "NUMBER", "targeted", "else", "source_samples", "NUMBER", "initial_const", "NUMBER", "NUMBER", "adv", "cw", "NUMBER", "generate_np", "adv_inputs", "cw_params", "notebooks", "Deep_grebox_attacks", "src", "cleverhans", "cleverhans", "attacks", "NUMBER", "pyc", "in", "generate_np", "self", "x_val", "kwargs", "NUMBER", "feed_dict", "new_kwargs", "name", "feedable", "name", "NUMBER", "NUMBER", "return", "self", "NUMBER", "sess", "NUMBER", "run", "x_adv", "feed_dict", "NUMBER", "NUMBER", "def", "get_or_guess_labels", "self", "x", "kwargs", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "pyc", "in", "run", "self", "fetches", "feed_dict", "options", "run_metadata", "NUMBER", "try", "NUMBER", "result", "self", "NUMBER", "_run", "None", "fetches", "feed_dict", "options_ptr", "NUMBER", "run_metadata_ptr", "NUMBER", "if", "run_metadata", "NUMBER", "proto_data", "tf_session", "NUMBER", "TF_GetBuffer", "run_metadata_ptr", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "pyc", "in", "_run", "self", "handle", "fetches", "feed_dict", "options", "run_metadata", "NUMBER", "if", "final_fetches", "or", "final_targets", "or", "handle", "and", "feed_dict_tensor", "NUMBER", "results", "self", "NUMBER", "_do_run", "handle", "final_targets", "final_fetches", "NUMBER", "feed_dict_tensor", "options", "run_metadata", "NUMBER", "else", "NUMBER", "results", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "pyc", "in", "_do_run", "self", "handle", "target_list", "fetch_list", "feed_dict", "options", "run_metadata", "NUMBER", "if", "handle", "be", "None", "NUMBER", "return", "self", "NUMBER", "_do_call", "_run_fn", "self", "NUMBER", "_session", "feeds", "fetches", "target", "NUMBER", "options", "run_metadata", "NUMBER", "else", "NUMBER", "return", "self", "NUMBER", "_do_call", "_prun_fn", "self", "NUMBER", "_session", "handle", "feeds", "fetches", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "pyc", "in", "_do_call", "self", "fn", "args", "NUMBER", "except", "KeyError", "NUMBER", "pass", "NUMBER", "raise", "type", "e", "node_def", "op", "message", "NUMBER", "NUMBER", "def", "_extend_graph", "self", "UnknownError", "InvalidArgumentError", "Incompatible", "shapes", "NUMBER", "NUMBER", "vs", "NUMBER", "NUMBER", "NUMBER", "Node", "mul_", "NUMBER", "Mul", "T", "DT_FLOAT", "_device", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "device", "GPU", "NUMBER", "sub_", "NUMBER", "model_", "NUMBER", "flatten_", "NUMBER", "Reshape", "npapernot", "Is", "there", "any", "suggested", "reading", "code", "samples", "you", "suggest", "to", "look", "into", "Hello", "npapernot", "I", "write", "an", "easy", "demo", "of", "use", "FGSM", "to", "attack", "MNIST", "model", "here", "LINK", "example", "tf", "eager", "blob", "master", "mnist_tutorial_tf_eager", "NUMBER", "ipynb", "NUMBER", "Let", "me", "know", "if", "this", "be", "what", "you", "be", "referring", "to", "NUMBER", "If", "so", "I", "will", "make", "the", "code", "become", "compatible", "with", "cleverhans", "and", "submit", "a", "PR", "NUMBER", "Hello", "npapernot", "I", "ll", "start", "to", "adapt", "my", "code", "and", "open", "threads", "on", "the", "mailing", "list", "if", "needed", "thanks", "Hi", "yenchenlin", "be", "you", "work", "on", "this", "It", "would", "still", "be", "helpful", "for", "us", "if", "you", "re", "still", "up", "for", "it", "Hi", "yenchenlin", "since", "we", "haven", "t", "heard", "from", "you", "I", "m", "going", "to", "re", "mark", "this", "as", "help", "wanted", "but", "we", "would", "definitely", "still", "appreciate", "a", "contribution", "from", "you", "if", "you", "be", "interested", "NUMBER", "Hello", "catherio", "sorry", "for", "the", "late", "reply", "NUMBER", "Now", "I", "have", "time", "to", "work", "on", "it", "I", "was", "busy", "in", "the", "last", "few", "months", "for", "grad", "school", "application", "NUMBER", "Hey", "yenchenlin", "Let", "us", "know", "if", "you", "re", "work", "on", "this", "and", "we", "can", "mark", "you", "as", "the", "owner", "NUMBER", "Any", "progress", "here", "Hi", "alexbw", "goodfeli", "i", "want", "to", "work", "on", "it", "i", "will", "adapt", "the", "NUMBER", "tutorials", "in", "cleverhans_tutorials", "folder", "to", "work", "in", "eager", "mode", "let", "me", "know", "if", "any", "thing", "else", "needs", "to", "be", "do", "NUMBER", "Hello", "goodfeli", "npapernot", "and", "krishnacodes", "sorry", "for", "the", "late", "reply", "in", "mandatory", "military", "so", "no", "internet", "NUMBER", "In", "my", "tf", "eager", "ipython", "notebook", "example", "here", "LINK", "example", "tf", "eager", "blob", "master", "mnist_tutorial_tf_eager", "NUMBER", "ipynb", "there", "be", "two", "main", "parts", "which", "can", "potentially", "reuse", "the", "exist", "code", "in", "cleverhans", "NUMBER", "Model", "block", "NUMBER", "in", "notebook", "class", "MNISTModel", "tfe", "NUMBER", "Network", "NUMBER", "NUMBER", "FGSM", "block", "NUMBER", "in", "notebook", "def", "craft_adv", "model", "dataset", "NUMBER", "For", "NUMBER", "it", "seems", "that", "we", "can", "only", "build", "model", "in", "eager", "mode", "either", "use", "NUMBER", "a", "subclass", "of", "tfe", "NUMBER", "Network", "or", "layers", "defined", "in", "tf", "NUMBER", "keras", "NUMBER", "In", "cleverhans", "we", "now", "only", "have", "model", "build", "code", "for", "normal", "tf", "and", "native", "keras", "NUMBER", "Should", "we", "add", "new", "code", "specific", "for", "eager", "mode", "an", "example", "use", "tf", "NUMBER", "keras", "which", "be", "compatible", "with", "eager", "mode", "can", "be", "find", "here", "LINK", "L", "NUMBER", "L", "NUMBER", "And", "for", "NUMBER", "it", "s", "unclear", "how", "we", "can", "resue", "the", "exist", "code", "in", "attacks_tf", "NUMBER", "py", "since", "it", "be", "based", "on", "placeholder", "NUMBER", "However", "eager", "mode", "be", "not", "compatible", "with", "placeholder", "NUMBER", "Should", "we", "just", "add", "new", "methods", "specific", "for", "eager", "mode", "in", "attacks_tf", "NUMBER", "py", "Hi", "npapernot", "i", "submitted", "a", "PR", "for", "this", "Regarding", "NUMBER", "A", "subclass", "of", "cleverhans", "NUMBER", "model", "NUMBER", "Model", "be", "created", "for", "eager", "models", "NUMBER", "Regarding", "NUMBER", "A", "new", "attacks_eager", "be", "add", "exist", "attacks", "run", "through", "session", "use", "feed_dict", "make", "it", "too", "hard", "to", "adapt", "NUMBER", "The", "new", "eager", "code", "be", "passing", "all", "the", "previous", "unit", "test", "NUMBER", "PR", "But", "test", "cases", "i", "write", "for", "eager", "execution", "be", "throw", "an", "error", "in", "the", "travis", "virtual", "env", "NUMBER", "Details", "ValueError", "tf", "NUMBER", "enable_eager_execution", "must", "be", "call", "at", "program", "startup", "NUMBER", "Travis", "logs", "travis", "logs", "LINK", "ci", "NUMBER", "org", "tensorflow", "cleverhans", "jobs", "NUMBER", "i", "couldn", "t", "reproduce", "the", "error", "in", "my", "local", "machine", "NUMBER", "and", "test", "be", "run", "without", "any", "error", "NUMBER", "if", "anyone", "can", "please", "run", "the", "these", "test", "unit", "test", "for", "eager", "exec", "LINK", "nsr", "NUMBER", "J", "NUMBER", "Gz", "NUMBER", "MIvI", "usp", "sharing", "and", "reproduce", "the", "error", "on", "travis", "it", "will", "be", "very", "helpful", "NUMBER", "If", "the", "error", "be", "not", "reproducible", "be", "it", "likely", "that", "travis", "env", "has", "a", "issue", "with", "eager", "exec", "someone", "faced", "the", "same", "issue", "with", "jupyter", "notebook", "similar", "issue", "LINK", "NUMBER", "Thanks", "Nicolas", "for", "the", "comments", "NUMBER", "I", "address", "them", "above", "NUMBER", "Tests", "be", "fail", "on", "the", "mnist_tutorial_tf", "which", "be", "untouched", "by", "this", "PR", "NUMBER", "Looks", "like", "the", "atol_fac", "for", "Tensorflow", "NUMBER", "be", "too", "tight", "NUMBER", "Or", "maybe", "the", "tutorial", "needs", "better", "seeding", "NUMBER", "Thanks", "npapernot", "NUMBER", "Tests", "have", "pass", "NUMBER", "Quick", "fix", "for", "executing", "Madry", "PGD", "in", "the", "targeted", "case", "NUMBER", "Quick", "question", "As", "propose", "in", "the", "Delving", "into", "Transferable", "Adversarial", "Examples", "paper", "executing", "attacks", "on", "an", "ensemble", "models", "normally", "generates", "more", "readily", "transferable", "adversarial", "examples", "NUMBER", "For", "some", "test", "I", "m", "doing", "I", "ve", "modify", "the", "Cleverhans", "attacks", "I", "ve", "be", "use", "to", "rather", "than", "attack", "a", "single", "model", "attack", "a", "list", "of", "models", "NUMBER", "Therefore", "if", "you", "wanted", "to", "execute", "a", "simple", "attack", "on", "a", "single", "model", "you", "would", "pass", "that", "model", "in", "as", "a", "one", "element", "list", "NUMBER", "Would", "this", "code", "be", "of", "interest", "to", "be", "integrated", "into", "Cleverhans", "More", "generally", "I", "do", "think", "code", "which", "makes", "it", "easier", "to", "perform", "attacks", "on", "an", "ensemble", "of", "models", "should", "be", "integrated", "NUMBER", "This", "LINK", "_tf", "NUMBER", "py", "L", "NUMBER", "line", "selects", "batch_size", "number", "of", "examples", "NUMBER", "However", "the", "batch", "size", "be", "defined", "for", "the", "class", "object", "and", "because", "of", "tensor", "value", "substitution", "an", "error", "gets", "throw", "if", "the", "variables", "gets", "a", "smaller", "batch", "NUMBER", "For", "example", "if", "the", "batch", "size", "be", "NUMBER", "and", "the", "function", "be", "call", "with", "NUMBER", "samples", "the", "second", "iteration", "of", "the", "loop", "throw", "an", "error", "NUMBER", "One", "possible", "workaround", "could", "be", "to", "copy", "the", "remainder", "data", "to", "fill", "the", "batch", "size", "and", "then", "extract", "the", "relevant", "data", "while", "returning", "NUMBER", "Fixed", "in", "LINK", "iamgroot", "NUMBER", "It", "looks", "like", "you", "close", "NUMBER", "Do", "you", "want", "to", "close", "this", "issue", "also", "nottombrown", "no", "the", "issue", "very", "much", "exists", "NUMBER", "My", "PR", "had", "some", "conflict", "and", "I", "don", "t", "have", "the", "bandwidth", "to", "look", "into", "it", "right", "now", "NUMBER", "I", "ll", "be", "submit", "another", "PR", "with", "the", "fix", "soon", "NUMBER", "This", "be", "an", "issue", "shared", "by", "the", "C", "W", "attack", "so", "I", "m", "add", "carlini", "to", "this", "thread", "NUMBER", "Personally", "I", "don", "t", "feel", "this", "issue", "to", "be", "very", "significant", "as", "I", "don", "t", "believe", "be", "constrained", "to", "set", "the", "batch_size", "to", "a", "number", "perfectly", "divisble", "by", "num_samples", "for", "Non", "Targeted", "Attack", "or", "num_samples", "num_classes", "for", "Targeted", "Attack", "makes", "it", "difficult", "to", "find", "a", "batch_size", "which", "works", "for", "the", "user", "s", "desires", "NUMBER", "Additionally", "if", "batch_size", "NUMBER", "isn", "t", "ideal", "as", "speed", "be", "an", "issue", "setting", "batch_size", "to", "num_samples", "for", "Non", "Targeted", "Attack", "or", "num_samples", "num_classes", "for", "Targeted", "Attack", "still", "yields", "good", "attack", "performance", "NUMBER", "If", "the", "users", "still", "feel", "this", "issue", "be", "significant", "I", "ll", "attempt", "to", "implement", "a", "fix", "as", "soon", "as", "I", "can", "NUMBER", "ysharma", "NUMBER", "it", "s", "not", "about", "finding", "a", "batch_size", "per", "se", "NUMBER", "The", "current", "code", "expects", "the", "number", "of", "input", "samples", "to", "be", "always", "divisible", "by", "the", "provide", "batch", "size", "which", "be", "a", "very", "bad", "way", "to", "go", "about", "it", "what", "if", "I", "have", "NUMBER", "examples", "NUMBER", "Setting", "the", "batch", "size", "to", "NUMBER", "in", "this", "case", "would", "be", "very", "slow", "and", "the", "only", "other", "batch", "size", "you", "could", "set", "be", "NUMBER", "itself", "which", "I", "doubt", "would", "fit", "on", "a", "GPU", "for", "any", "decently", "big", "model", "NUMBER", "I", "ll", "be", "implement", "a", "fix", "soon", "hopefully", "this", "week", "to", "fix", "this", "issue", "NUMBER", "Thanks", "I", "merge", "the", "temporary", "fix", "setting", "the", "batch_size", "to", "NUMBER", "in", "the", "meanwhile", "Something", "I", "ve", "do", "as", "a", "workaround", "set", "the", "batch", "size", "to", "something", "reasonable", "NUMBER", "and", "pad", "the", "input", "by", "duplicating", "the", "last", "item", "so", "that", "it", "s", "a", "multiple", "of", "the", "batch", "size", "NUMBER", "I", "can", "submit", "a", "fix", "for", "this", "I", "think", "by", "get", "the", "dynamic", "size", "of", "the", "batch", "at", "runtime", "NUMBER", "iamgroot", "NUMBER", "good", "points", "yes", "for", "ease", "of", "use", "a", "fix", "should", "be", "made", "NUMBER", "Thanks", "for", "your", "efforts", "Implemented", "a", "fix", "in", "LINK", "Issue", "fix", "NUMBER", "Thanks", "for", "your", "pull", "request", "NUMBER", "It", "looks", "like", "this", "may", "be", "your", "first", "contribution", "to", "a", "Google", "open", "source", "project", "NUMBER", "Before", "we", "can", "look", "at", "your", "pull", "request", "you", "ll", "need", "to", "sign", "a", "Contributor", "License", "Agreement", "CLA", "NUMBER", "memo", "Please", "visit", "TAG", "to", "sign", "NUMBER", "Once", "you", "ve", "sign", "please", "reply", "here", "e", "NUMBER", "g", "NUMBER", "I", "sign", "it", "and", "we", "ll", "verify", "NUMBER", "Thanks", "NUMBER", "If", "you", "ve", "already", "sign", "a", "CLA", "it", "s", "possible", "we", "don", "t", "have", "your", "GitHub", "username", "or", "you", "re", "use", "a", "different", "email", "address", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "If", "your", "company", "sign", "a", "CLA", "they", "designated", "a", "Point", "of", "Contact", "who", "decides", "which", "employees", "be", "authorized", "to", "participate", "NUMBER", "You", "may", "need", "to", "contact", "the", "Point", "of", "Contact", "for", "your", "company", "and", "ask", "to", "be", "add", "to", "the", "group", "of", "authorized", "contributors", "NUMBER", "If", "you", "don", "t", "know", "who", "your", "Point", "of", "Contact", "be", "direct", "the", "project", "maintainer", "to", "go", "cla", "troubleshoot", "NUMBER", "In", "order", "to", "pass", "this", "check", "please", "resolve", "this", "problem", "and", "have", "the", "pull", "request", "author", "add", "another", "comment", "and", "the", "bot", "will", "run", "again", "NUMBER", "TAG", "I", "sign", "it", "CLAs", "look", "good", "thanks", "TAG", "This", "branch", "implement", "the", "CW", "L", "NUMBER", "attack", "NUMBER", "It", "be", "implement", "on", "top", "of", "the", "L", "NUMBER", "attack", "so", "some", "generalizations", "be", "required", "there", "NUMBER", "mnist_tutorial_tf", "be", "fail", "erroneously", "it", "seems", "I", "didn", "t", "touch", "that", "file", "NUMBER", "I", "m", "not", "sure", "why", "but", "the", "python", "NUMBER", "build", "be", "timing", "out", "NUMBER", "I", "will", "address", "these", "comments", "next", "week", "or", "so", "have", "a", "few", "things", "I", "need", "finish", "over", "the", "next", "couple", "of", "days", "NUMBER", "carlini", "Any", "update", "No", "worries", "if", "not", "I", "m", "just", "doing", "a", "routine", "pass", "through", "all", "our", "pull", "request", "to", "check", "their", "status", "NUMBER", "Huh", "I", "thought", "I", "push", "a", "few", "days", "ago", "but", "I", "guess", "it", "didn", "t", "go", "NUMBER", "Let", "me", "see", "NUMBER", "It", "looks", "like", "the", "build", "be", "broken", "for", "different", "reasons", "than", "this", "PR", "NUMBER", "I", "m", "starting", "to", "take", "a", "look", "now", "NUMBER", "and", "NUMBER", "carlini", "build", "be", "fix", "on", "master", "now", "as", "of", "PR", "NUMBER", "you", "should", "be", "able", "to", "rebase", "carlini", "wanted", "to", "make", "sure", "you", "saw", "my", "earlier", "message", "NUMBER", "the", "build", "be", "passing", "now", "so", "if", "you", "want", "to", "rebase", "and", "resolve", "the", "conflict", "this", "should", "be", "ready", "to", "merge", "NUMBER", "I", "m", "going", "to", "close", "this", "until", "I", "have", "time", "to", "fix", "everything", "NUMBER", "I", "ll", "submit", "a", "new", "PR", "once", "it", "s", "ready", "NUMBER", "The", "linked", "readthedocs", "url", "be", "not", "currently", "build", "however", "it", "build", "correctly", "locally", "and", "on", "my", "personal", "fork", "of", "this", "repo", "NUMBER", "If", "webhooks", "be", "properly", "configured", "merge", "this", "PR", "should", "also", "trigger", "a", "sphynx", "build", "at", "LINK", "After", "checks", "pass", "I", "plan", "to", "merge", "this", "in", "NUMBER", "LGTM", "feel", "free", "to", "merge", "if", "it", "makes", "the", "test", "pass", "Just", "commenting", "to", "explain", "some", "of", "the", "things", "Nicolas", "and", "I", "have", "be", "discussing", "on", "hangouts", "to", "others", "NUMBER", "Travis", "CI", "be", "fail", "to", "run", "the", "Theano", "test", "CleverHans", "has", "deprecate", "support", "for", "Theano", "and", "will", "remove", "it", "entirely", "Nov", "NUMBER", "the", "Theano", "team", "announced", "they", "will", "quit", "developing", "Theano", "so", "it", "seems", "OK", "to", "remove", "rather", "than", "debug", "problematic", "Theano", "test", "NUMBER", "Similar", "to", "mnist_tutorial_tf", "NUMBER", "py", "only", "use", "MadryEtAl", "attack", "Hi", "Angus", "Please", "write", "to", "cleverhans", "dev", "before", "starting", "work", "on", "new", "features", "to", "make", "sure", "you", "spend", "time", "only", "on", "features", "we", "plan", "to", "merge", "NUMBER", "We", "do", "not", "want", "to", "create", "more", "tutorials", "for", "each", "attack", "because", "it", "be", "a", "large", "amount", "of", "duplicate", "code", "to", "maintain", "and", "test", "NUMBER", "Ian", "If", "you", "d", "like", "to", "work", "on", "something", "like", "a", "generic", "trainer", "script", "or", "a", "generic", "attack", "script", "that", "can", "run", "attacks", "on", "a", "saved", "model", "that", "could", "be", "configured", "to", "give", "results", "for", "the", "Madry", "attack", "NUMBER", "Please", "free", "free", "to", "discuss", "further", "on", "cleverhans", "dev", "NUMBER", "Hi", "Ian", "that", "sounds", "like", "a", "good", "idea", "NUMBER", "I", "already", "have", "something", "like", "a", "generic", "attack", "script", "I", "could", "share", "NUMBER", "I", "will", "note", "to", "communicate", "on", "cleverhans", "dev", "for", "next", "time", "NUMBER", "This", "attack", "build", "on", "the", "C", "W", "L", "NUMBER", "attack", "by", "generalizing", "it", "to", "the", "elastic", "net", "case", "where", "L", "NUMBER", "oriented", "adversarial", "examples", "can", "be", "generate", "NUMBER", "These", "examples", "were", "shown", "to", "be", "both", "state", "of", "the", "art", "and", "distinct", "in", "various", "attack", "scenarios", "and", "more", "importantly", "were", "shown", "to", "have", "improved", "transferability", "NUMBER", "Paper", "link", "LINK", "The", "build", "fail", "on", "the", "Theano", "version", "no", "clue", "why", "but", "isn", "t", "that", "fine", "as", "Theano", "support", "will", "be", "deprecate", "This", "looks", "good", "NUMBER", "Since", "you", "re", "a", "co", "author", "of", "the", "paper", "we", "ll", "rely", "on", "you", "to", "make", "sure", "it", "s", "a", "correct", "implementation", "of", "the", "method", "you", "developed", "and", "we", "ll", "mostly", "just", "review", "for", "style", "and", "maintainability", "NUMBER", "Can", "you", "please", "add", "some", "test", "They", "don", "t", "need", "to", "be", "extremely", "exhaustive", "test", "but", "there", "should", "be", "at", "least", "one", "test", "per", "new", "class", "NUMBER", "Hi", "Ian", "Thanks", "NUMBER", "I", "test", "my", "attack", "by", "replacing", "a", "few", "lines", "of", "code", "in", "mnist_tutorial_cw", "NUMBER", "py", "NUMBER", "How", "should", "I", "add", "those", "results", "as", "test", "Make", "a", "new", "tutorial", "for", "this", "attack", "and", "show", "the", "output", "Let", "me", "know", "how", "best", "this", "should", "be", "do", "NUMBER", "Thanks", "Yash", "Sharma", "On", "Mon", "Oct", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Ian", "Goodfellow", "TAG", "write", "This", "looks", "good", "NUMBER", "Since", "you", "re", "a", "co", "author", "of", "the", "paper", "we", "ll", "rely", "on", "you", "to", "make", "sure", "it", "s", "a", "correct", "implementation", "of", "the", "method", "you", "developed", "and", "we", "ll", "mostly", "just", "review", "for", "style", "and", "maintainability", "NUMBER", "Can", "you", "please", "add", "some", "test", "They", "don", "t", "need", "to", "be", "extremely", "exhaustive", "test", "but", "there", "should", "be", "at", "least", "one", "test", "per", "new", "class", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Thanks", "Nicolas", "NUMBER", "Added", "a", "test", "locally", "test", "and", "the", "attack", "pass", "the", "test", "NUMBER", "Waiting", "on", "the", "build", "NUMBER", "Another", "error", "that", "doesn", "t", "appear", "to", "have", "anything", "to", "do", "with", "my", "method", "can", "you", "please", "check", "Yes", "it", "seems", "like", "that", "be", "just", "the", "test", "be", "flaky", "NUMBER", "Can", "you", "send", "a", "commit", "dropping", "the", "threshold", "for", "that", "test", "to", "NUMBER", "Sure", "On", "Tue", "Oct", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Ian", "Goodfellow", "TAG", "write", "Yes", "it", "seems", "like", "that", "be", "just", "the", "test", "be", "flaky", "NUMBER", "Can", "you", "send", "a", "commit", "dropping", "the", "threshold", "for", "that", "test", "to", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "So", "there", "s", "good", "news", "and", "bad", "news", "NUMBER", "thumbsup", "The", "good", "news", "be", "that", "everyone", "that", "needs", "to", "sign", "a", "CLA", "the", "pull", "request", "submitter", "and", "all", "commit", "authors", "have", "do", "so", "NUMBER", "Everything", "be", "all", "good", "there", "NUMBER", "confused", "The", "bad", "news", "be", "that", "it", "appears", "that", "one", "or", "more", "commit", "were", "authored", "by", "someone", "other", "than", "the", "pull", "request", "submitter", "NUMBER", "We", "need", "to", "confirm", "that", "they", "re", "okay", "with", "their", "commit", "be", "contributed", "to", "this", "project", "NUMBER", "Please", "have", "them", "confirm", "that", "here", "in", "the", "pull", "request", "NUMBER", "Note", "to", "project", "maintainer", "This", "be", "a", "terminal", "state", "meaning", "the", "cla", "google", "commit", "status", "will", "not", "change", "from", "this", "State", "NUMBER", "It", "s", "up", "to", "you", "to", "confirm", "consent", "of", "the", "commit", "author", "s", "and", "merge", "this", "pull", "request", "when", "appropriate", "NUMBER", "TAG", "This", "attack", "build", "on", "the", "C", "W", "L", "NUMBER", "attack", "by", "generalizing", "it", "to", "the", "elastic", "net", "case", "where", "L", "NUMBER", "oriented", "adversarial", "examples", "can", "be", "generate", "NUMBER", "These", "examples", "were", "shown", "to", "be", "both", "state", "of", "the", "art", "and", "distinct", "in", "various", "attack", "scenarios", "and", "more", "importantly", "were", "shown", "to", "have", "improved", "transferability", "NUMBER", "Paper", "link", "LINK", "We", "find", "a", "Contributor", "License", "Agreement", "for", "you", "the", "sender", "of", "this", "pull", "request", "but", "were", "unable", "to", "find", "agreements", "for", "the", "commit", "author", "s", "NUMBER", "If", "you", "authored", "these", "maybe", "you", "use", "a", "different", "email", "address", "in", "the", "git", "commit", "than", "was", "use", "to", "sign", "the", "CLA", "login", "here", "LINK", "to", "double", "check", "If", "these", "were", "authored", "by", "someone", "else", "then", "they", "will", "need", "to", "sign", "a", "CLA", "as", "well", "and", "confirm", "that", "they", "re", "okay", "with", "these", "be", "contributed", "to", "Google", "NUMBER", "In", "order", "to", "pass", "this", "check", "please", "resolve", "this", "problem", "and", "have", "the", "pull", "request", "author", "add", "another", "comment", "and", "the", "bot", "will", "run", "again", "NUMBER", "TAG", "According", "to", "NUMBER", "it", "s", "better", "to", "notify", "users", "when", "ord", "value", "be", "not", "valid", "NUMBER", "This", "looks", "good", "and", "any", "of", "the", "CleverHans", "team", "should", "feel", "free", "to", "merge", "it", "as", "soon", "as", "the", "test", "pass", "NUMBER", "Two", "of", "the", "test", "jobs", "fail", "because", "the", "Theano", "installer", "fail", "to", "download", "MKL", "NUMBER", "I", "doubt", "that", "they", "will", "have", "any", "problem", "when", "rerun", "NUMBER", "Thanks", "npapernot", "for", "solving", "the", "CI", "issue", "I", "think", "this", "can", "be", "merge", "This", "attack", "build", "on", "the", "C", "W", "L", "NUMBER", "attack", "by", "generalizing", "it", "to", "the", "elastic", "net", "case", "where", "L", "NUMBER", "oriented", "adversarial", "examples", "can", "be", "generate", "NUMBER", "These", "examples", "were", "shown", "to", "be", "both", "state", "of", "the", "art", "and", "distinct", "in", "various", "attack", "scenarios", "and", "more", "importantly", "were", "shown", "to", "have", "improved", "transferability", "NUMBER", "Paper", "link", "LINK", "We", "find", "a", "Contributor", "License", "Agreement", "for", "you", "the", "sender", "of", "this", "pull", "request", "but", "were", "unable", "to", "find", "agreements", "for", "the", "commit", "author", "s", "NUMBER", "If", "you", "authored", "these", "maybe", "you", "use", "a", "different", "email", "address", "in", "the", "git", "commit", "than", "was", "use", "to", "sign", "the", "CLA", "login", "here", "LINK", "to", "double", "check", "If", "these", "were", "authored", "by", "someone", "else", "then", "they", "will", "need", "to", "sign", "a", "CLA", "as", "well", "and", "confirm", "that", "they", "re", "okay", "with", "these", "be", "contributed", "to", "Google", "NUMBER", "In", "order", "to", "pass", "this", "check", "please", "resolve", "this", "problem", "and", "have", "the", "pull", "request", "author", "add", "another", "comment", "and", "the", "bot", "will", "run", "again", "NUMBER", "TAG", "I", "sign", "it", "On", "Wed", "Sep", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "googlebot", "TAG", "write", "We", "find", "a", "Contributor", "License", "Agreement", "for", "you", "the", "sender", "of", "this", "pull", "request", "but", "were", "unable", "to", "find", "agreements", "for", "the", "commit", "author", "s", "NUMBER", "If", "you", "authored", "these", "maybe", "you", "use", "a", "different", "email", "address", "in", "the", "git", "commit", "than", "was", "use", "to", "sign", "the", "CLA", "login", "here", "TAG", "to", "double", "check", "If", "these", "were", "authored", "by", "someone", "else", "then", "they", "will", "need", "to", "sign", "a", "CLA", "as", "well", "and", "confirm", "that", "they", "re", "okay", "with", "these", "be", "contributed", "to", "Google", "NUMBER", "In", "order", "to", "pass", "this", "check", "please", "resolve", "this", "problem", "and", "have", "the", "pull", "request", "author", "add", "another", "comment", "and", "the", "bot", "will", "run", "again", "NUMBER", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "It", "looks", "like", "there", "aren", "t", "any", "test", "can", "you", "add", "at", "least", "one", "test", "per", "new", "function", "class", "Yeah", "NUMBER", "Thanks", "NUMBER", "This", "PR", "be", "unfinished", "NUMBER", "I", "m", "resolving", "the", "issue", "NUMBER", "On", "Thu", "Oct", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Yen", "TAG", "write", "yenchenlin", "commented", "on", "this", "pull", "request", "NUMBER", "In", "cleverhans", "feat_advs", "NUMBER", "py", "TAG", "If", "clipping", "be", "needed", "reset", "all", "values", "outside", "of", "clip_min", "clip_max", "if", "clip_min", "be", "not", "None", "and", "clip_max", "be", "not", "None", "adv_x", "tf", "NUMBER", "clip_by_value", "adv_x", "clip_min", "clip_max", "return", "adv_x", "class", "FastFeatureGradient", "Attack", "This", "be", "similar", "to", "FGSM", "but", "do", "for", "the", "internal", "representations", "NUMBER", "def", "__init__", "self", "model", "back", "tf", "sess", "None", "Create", "a", "FastGradientMethod", "instance", "NUMBER", "This", "should", "be", "Create", "a", "FastFeatureGradient", "instance", "right", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Thanks", "for", "the", "comments", "NUMBER", "I", "have", "address", "the", "comments", "except", "for", "the", "one", "regard", "write", "test", "NUMBER", "The", "example", "in", "imagenet_featadvs", "be", "supposed", "to", "be", "a", "very", "basic", "test", "which", "be", "not", "converging", "to", "NUMBER", "right", "now", "NUMBER", "Let", "me", "know", "if", "you", "have", "any", "ideas", "for", "unit", "test", "and", "if", "you", "find", "any", "bug", "through", "reviewing", "NUMBER", "The", "test", "be", "fail", "with", "from", "utils_tf", "import", "clip_eta", "get", "an", "ImportError", "npapernot", "thanks", "for", "the", "reminder", "NUMBER", "I", "fix", "the", "issue", "and", "add", "a", "test", "NUMBER", "The", "test", "fail", "for", "test_mnist_tutorial_tf", "NUMBER", "TestMNISTTutorialTF", "NUMBER", "I", "guess", "it", "s", "again", "due", "to", "a", "tight", "threshold", "NUMBER", "Quoting", "the", "failure", "here", "Traceback", "most", "recent", "call", "last", "File", "home", "travis", "build", "tensorflow", "cleverhans", "tests_tf", "test_mnist_tutorial_tf", "NUMBER", "py", "line", "NUMBER", "in", "test_mnist_tutorial_tf", "self", "NUMBER", "assertLess", "report", "NUMBER", "train_clean_train_adv_eval", "NUMBER", "AssertionError", "NUMBER", "not", "less", "than", "NUMBER", "Since", "this", "change", "FastGradientMethod", "it", "do", "seem", "possible", "the", "failure", "be", "real", "NUMBER", "Notes", "for", "my", "future", "self", "other", "people", "following", "the", "thread", "this", "PR", "change", "FastGradientMethod", "to", "call", "clip_eta", "rather", "than", "having", "its", "own", "version", "of", "the", "clip_eta", "code", "internally", "NUMBER", "This", "be", "a", "great", "refactor", "thanks", "Fartash", "but", "I", "m", "concerned", "that", "there", "s", "something", "subtly", "different", "between", "the", "two", "version", "that", "we", "don", "t", "know", "about", "NUMBER", "Fartash", "be", "the", "test", "fail", "on", "your", "machine", "too", "or", "just", "on", "Travis", "It", "looks", "like", "they", "fail", "only", "for", "newer", "version", "of", "TensorFlow", "NUMBER", "Do", "they", "fail", "consistently", "or", "flakily", "From", "one", "run", "of", "Travis", "it", "looks", "like", "we", "have", "NUMBER", "trials", "that", "all", "support", "the", "hypothesis", "that", "the", "test", "fail", "consistently", "for", "TensorFlow", "NUMBER", "Since", "they", "consistently", "pass", "before", "this", "looks", "like", "something", "did", "meaningfully", "change", "in", "clip_eta", "NUMBER", "My", "bad", "for", "mixing", "multiple", "PRs", "NUMBER", "This", "PR", "be", "actually", "not", "change", "the", "FastGradientMethod", "NUMBER", "It", "only", "refactors", "BasicIterativeMethod", "to", "use", "clip_eta", "NUMBER", "This", "should", "not", "affect", "the", "tutorial", "NUMBER", "clip_eta", "was", "introduce", "in", "NUMBER", "d", "NUMBER", "a", "NUMBER", "d", "NUMBER", "d", "NUMBER", "f", "NUMBER", "be", "NUMBER", "bf", "NUMBER", "bae", "NUMBER", "b", "NUMBER", "c", "NUMBER", "b", "and", "later", "was", "moved", "to", "utils_tf", "NUMBER", "py", "in", "NUMBER", "add", "NUMBER", "bef", "NUMBER", "fc", "NUMBER", "b", "NUMBER", "f", "NUMBER", "ace", "NUMBER", "e", "NUMBER", "f", "NUMBER", "Tests", "don", "t", "fail", "on", "my", "machine", "NUMBER", "I", "test", "with", "Tensorflow", "NUMBER", "use", "python", "NUMBER", "and", "NUMBER", "Are", "you", "sure", "the", "test", "only", "takes", "NUMBER", "seconds", "The", "test", "for", "this", "PR", "took", "up", "to", "NUMBER", "minutes", "to", "run", "but", "if", "I", "look", "at", "another", "currently", "open", "PR", "they", "re", "consistently", "under", "NUMBER", "LINK", "ci", "NUMBER", "org", "tensorflow", "cleverhans", "build", "NUMBER", "utm_source", "github_status", "utm_medium", "notification", "This", "one", "be", "also", "just", "barely", "over", "NUMBER", "for", "only", "one", "of", "NUMBER", "runs", "LINK", "ci", "NUMBER", "org", "tensorflow", "cleverhans", "build", "NUMBER", "utm_source", "github_status", "utm_medium", "notification", "Thanks", "it", "do", "look", "a", "lot", "faster", "now", "NUMBER", "Unfortunately", "we", "now", "have", "two", "more", "examples", "of", "the", "tensorflow", "NUMBER", "test", "fail", "and", "by", "exactly", "the", "same", "amount", "of", "error", "as", "before", "Traceback", "most", "recent", "call", "last", "File", "home", "travis", "build", "tensorflow", "cleverhans", "tests_tf", "test_mnist_tutorial_tf", "NUMBER", "py", "line", "NUMBER", "in", "test_mnist_tutorial_tf", "self", "NUMBER", "assertLess", "report", "NUMBER", "train_clean_train_adv_eval", "NUMBER", "AssertionError", "NUMBER", "not", "less", "than", "NUMBER", "Since", "this", "isn", "t", "happening", "to", "pull", "request", "in", "other", "branch", "I", "do", "think", "there", "s", "something", "unusual", "about", "this", "branch", "NUMBER", "One", "thing", "you", "might", "try", "be", "to", "rebase", "your", "branch", "on", "top", "of", "master", "and", "run", "the", "test", "locally", "NUMBER", "If", "the", "rebase", "gets", "the", "test", "to", "fail", "locally", "that", "would", "give", "you", "some", "more", "convenient", "signal", "for", "debugging", "NUMBER", "You", "ll", "need", "to", "push", "f", "back", "to", "the", "pull", "request", "after", "the", "merge", "NUMBER", "I", "rebased", "and", "the", "test", "still", "pass", "on", "my", "machine", "NUMBER", "To", "make", "the", "PR", "simpler", "I", "separated", "the", "part", "regard", "clip_eta", "into", "a", "new", "PR", "NUMBER", "We", "will", "get", "a", "clue", "after", "that", "one", "be", "test", "NUMBER", "Thanks", "Feel", "free", "to", "push", "f", "the", "remainder", "of", "the", "code", "to", "this", "branch", "NUMBER", "If", "we", "re", "lucky", "it", "will", "just", "pass", "NUMBER", "The", "checks", "have", "pass", "NUMBER", "I", "think", "it", "be", "only", "because", "of", "randomness", "in", "the", "test", "NUMBER", "The", "only", "change", "I", "made", "was", "moving", "part", "of", "the", "code", "to", "PR", "NUMBER", "Thanks", "Hello", "npapernot", "It", "seems", "that", "now", "the", "only", "FLAGS", "in", "utils_tf", "NUMBER", "py", "exists", "in", "function", "tf_model_load", "and", "this", "function", "be", "only", "call", "in", "mnist_tutorial_cw", "NUMBER", "py", "NUMBER", "I", "delete", "the", "FLAGS", "in", "function", "tf_model_load", "and", "confirmed", "that", "mnist_tutorial_cw", "NUMBER", "py", "still", "works", "fine", "NUMBER", "Does", "it", "mean", "we", "can", "simply", "add", "a", "deprecation", "message", "in", "function", "tf_model_load", "for", "FLAGS", "and", "completely", "delete", "FLAGS", "from", "utils_tf", "NUMBER", "py", "in", "the", "near", "future", "royaurko", "Any", "update", "error", "in", "this", "function", "def", "cw_wrap", "x_val", "y_val", "return", "np", "NUMBER", "array", "attack", "NUMBER", "attack", "x_val", "y_val", "dtype", "np", "NUMBER", "float", "NUMBER", "wrap", "tf", "NUMBER", "py_func", "cw_wrap", "x", "labels", "tf", "NUMBER", "float", "NUMBER", "py_func", "not", "returning", "tensor", "tensorflow", "NUMBER", "python", "NUMBER", "framework", "NUMBER", "errors_impl", "NUMBER", "UnknownError", "AttributeError", "NoneType", "object", "has", "no", "attribute", "run", "Node", "PyFunc", "PyFunc", "Tin", "DT_FLOAT", "DT_FLOAT", "Tout", "DT_FLOAT", "token", "pyfunc_", "NUMBER", "_device", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "cpu", "NUMBER", "_arg_Placeholder_", "NUMBER", "_", "NUMBER", "one_hot", "yes", "that", "was", "the", "issue", "NUMBER", "a", "valid", "session", "resolve", "it", "NUMBER", "thank", "you", "NUMBER", "Thanks", "NUMBER", "This", "PR", "be", "unfinished", "NUMBER", "I", "m", "resolving", "the", "issue", "NUMBER", "On", "Sun", "Oct", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Nicolas", "Papernot", "TAG", "write", "FAIL", "Test", "if", "pep", "NUMBER", "be", "respected", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "home", "travis", "miniconda", "envs", "test", "environment", "lib", "python", "NUMBER", "site", "package", "nose", "NUMBER", "py", "NUMBER", "egg", "nose", "case", "NUMBER", "py", "line", "NUMBER", "in", "runTest", "self", "NUMBER", "test", "self", "NUMBER", "arg", "File", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "devtools", "test", "test_format", "NUMBER", "py", "line", "NUMBER", "in", "test_format_pep", "NUMBER", "raise", "AssertionError", "PEP", "NUMBER", "Format", "not", "respected", "AssertionError", "PEP", "NUMBER", "Format", "not", "respected", "begin", "captured", "stdout", "TAG", "home", "travis", "build", "tensorflow", "cleverhans", "examples", "multigpu_advtrain", "trainer", "NUMBER", "py", "NUMBER", "NUMBER", "W", "NUMBER", "blank", "line", "at", "end", "of", "file", "home", "travis", "build", "tensorflow", "cleverhans", "examples", "multigpu_advtrain", "trainer_sgpu", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "continuation", "line", "under", "indented", "for", "visual", "indent", "home", "travis", "build", "tensorflow", "cleverhans", "examples", "multigpu_advtrain", "trainer_sgpu", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "continuation", "line", "under", "indented", "for", "visual", "indent", "home", "travis", "build", "tensorflow", "cleverhans", "examples", "multigpu_advtrain", "manager", "NUMBER", "py", "NUMBER", "NUMBER", "E", "NUMBER", "expected", "NUMBER", "blank", "line", "find", "NUMBER", "home", "travis", "build", "tensorflow", "cleverhans", "examples", "multigpu_advtrain", "manager", "NUMBER", "py", "NUMBER", "NUMBER", "W", "NUMBER", "blank", "line", "at", "end", "of", "file", "end", "captured", "stdout", "TAG", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Let", "me", "know", "when", "I", "should", "re", "review", "I", "see", "you", "push", "a", "few", "commit", "should", "I", "re", "review", "I", "think", "I", "have", "address", "all", "the", "comments", "NUMBER", "However", "the", "numbers", "I", "get", "don", "t", "match", "what", "I", "expect", "NUMBER", "I", "m", "debugging", "it", "NUMBER", "It", "would", "greatly", "help", "if", "you", "could", "review", "NUMBER", "It", "might", "help", "in", "figuring", "out", "what", "causes", "the", "mismatch", "of", "numbers", "NUMBER", "On", "Fri", "Oct", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Ian", "Goodfellow", "TAG", "write", "I", "see", "you", "push", "a", "few", "commit", "should", "I", "re", "review", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "I", "just", "remove", "run", "NUMBER", "py", "NUMBER", "There", "be", "now", "a", "single", "script", "run_multigpu", "NUMBER", "py", "that", "do", "both", "single", "GPU", "run", "and", "multi", "GPU", "and", "uses", "the", "new", "abstraction", "NUMBER", "I", "hope", "you", "did", "not", "spend", "time", "on", "run", "NUMBER", "py", "NUMBER", "goodfeli", "This", "PR", "be", "ready", "for", "re", "review", "NUMBER", "Thanks", "NUMBER", "Thanks", "for", "the", "re", "review", "NUMBER", "Requested", "change", "be", "now", "address", "NUMBER", "New", "Docstrings", "be", "add", "and", "svhn", "cifar", "utils", "moved", "NUMBER", "Thanks", "for", "the", "merge", "NUMBER", "I", "think", "we", "should", "keep", "the", "Attack", "class", "as", "close", "to", "abstract", "as", "possible", "but", "we", "could", "maybe", "put", "a", "clip_eta", "function", "in", "utils_tf", "NUMBER", "py", "NUMBER", "Completed", "in", "NUMBER", "NUMBER", "This", "be", "for", "issue", "NUMBER", "NUMBER", "Test", "cases", "pass", "have", "not", "test", "the", "tutorial", "code", "yet", "NUMBER", "Please", "let", "me", "know", "if", "you", "have", "suggestions", "and", "comments", "NUMBER", "Thanks", "for", "your", "pull", "request", "NUMBER", "It", "looks", "like", "this", "may", "be", "your", "first", "contribution", "to", "a", "Google", "open", "source", "project", "NUMBER", "Before", "we", "can", "look", "at", "your", "pull", "request", "you", "ll", "need", "to", "sign", "a", "Contributor", "License", "Agreement", "CLA", "NUMBER", "memo", "Please", "visit", "TAG", "to", "sign", "NUMBER", "Once", "you", "ve", "sign", "please", "reply", "here", "e", "NUMBER", "g", "NUMBER", "I", "sign", "it", "and", "we", "ll", "verify", "NUMBER", "Thanks", "NUMBER", "If", "you", "ve", "already", "sign", "a", "CLA", "it", "s", "possible", "we", "don", "t", "have", "your", "GitHub", "username", "or", "you", "re", "use", "a", "different", "email", "address", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "If", "your", "company", "sign", "a", "CLA", "they", "designated", "a", "Point", "of", "Contact", "who", "decides", "which", "employees", "be", "authorized", "to", "participate", "NUMBER", "You", "may", "need", "to", "contact", "the", "Point", "of", "Contact", "for", "your", "company", "and", "ask", "to", "be", "add", "to", "the", "group", "of", "authorized", "contributors", "NUMBER", "If", "you", "don", "t", "know", "who", "your", "Point", "of", "Contact", "be", "direct", "the", "project", "maintainer", "to", "go", "cla", "troubleshoot", "NUMBER", "In", "order", "to", "pass", "this", "check", "please", "resolve", "this", "problem", "and", "have", "the", "pull", "request", "author", "add", "another", "comment", "and", "the", "bot", "will", "run", "again", "NUMBER", "TAG", "I", "sign", "it", "CLAs", "look", "good", "thanks", "TAG", "I", "think", "I", "need", "to", "rewrite", "large", "part", "of", "mnist_tutorial_jsma", "NUMBER", "py", "use", "the", "new", "interface", "NUMBER", "Yes", "I", "saw", "the", "PEP", "NUMBER", "log", "weird", "be", "that", "it", "be", "NUMBER", "instead", "of", "NUMBER", "rofl", "NUMBER", "I", "will", "update", "it", "as", "well", "as", "the", "mnist_tutorial_jsma", "NUMBER", "py", "NUMBER", "Why", "do", "the", "tutorial", "need", "to", "be", "rewritten", "Changing", "the", "underlying", "implementation", "shouldn", "t", "impact", "the", "interface", "NUMBER", "Also", "it", "would", "be", "good", "to", "benchmark", "the", "speed", "of", "the", "two", "implementations", "to", "make", "sure", "they", "re", "comparable", "NUMBER", "One", "of", "the", "good", "qualities", "of", "JSMA", "be", "it", "s", "fast", "NUMBER", "carlini", "Since", "I", "change", "the", "JSMA", "API", "a", "bit", "NUMBER", "NUMBER", "gamma", "epochs", "you", "could", "either", "specify", "max", "epochs", "to", "run", "or", "if", "epochs", "be", "a", "floating", "number", "it", "be", "treat", "as", "gamma", "and", "max", "epochs", "be", "automatically", "determined", "NUMBER", "NUMBER", "y_target", "takes", "the", "class", "label", "s", "not", "one", "hot", "encoded", "NUMBER", "Rationale", "be", "that", "during", "JSMA", "the", "one", "hot", "encoded", "labels", "be", "converted", "back", "to", "class", "labels", "and", "the", "one", "hot", "labels", "be", "never", "use", "NUMBER", "NUMBER", "Add", "pair", "If", "True", "perturb", "two", "pixels", "at", "a", "time", "otherwise", "one", "pixel", "at", "a", "time", "NUMBER", "NUMBER", "Add", "min_proba", "denoting", "the", "minimum", "desired", "confidence", "for", "the", "labels", "to", "be", "wrongly", "classified", "NUMBER", "Besides", "JSMA", "now", "takes", "a", "batch", "of", "images", "the", "NUMBER", "level", "nested", "for", "loops", "in", "tutorials", "could", "be", "reduced", "to", "a", "single", "for", "loop", "NUMBER", "npapernot", "Here", "be", "some", "of", "my", "thoughts", "NUMBER", "My", "rationale", "be", "that", "if", "you", "have", "N", "pixels", "with", "gamma", "the", "algorithm", "runs", "maximum", "N", "epochs", "NUMBER", "What", "if", "you", "want", "to", "run", "more", "than", "N", "epochs", "And", "besides", "epochs", "be", "more", "straightforward", "to", "me", "NUMBER", "But", "yes", "I", "agree", "it", "be", "subjective", "and", "debatable", "if", "you", "still", "think", "gamma", "makes", "more", "sense", "than", "epochs", "I", "would", "change", "it", "back", "in", "the", "next", "PR", "NUMBER", "NUMBER", "Yes", "a", "deprecating", "warning", "be", "definitely", "more", "friendly", "NUMBER", "NUMBER", "For", "this", "it", "would", "be", "much", "more", "difficult", "NUMBER", "As", "point", "out", "in", "your", "paper", "the", "complexity", "be", "O", "n", "k", "where", "k", "be", "the", "number", "of", "pixels", "to", "perturb", "at", "a", "time", "NUMBER", "Naively", "you", "could", "just", "use", "loops", "but", "that", "will", "be", "inefficient", "NUMBER", "Currently", "the", "_jsma_impl", "and", "_jsma", "NUMBER", "_impl", "be", "optimized", "for", "k", "NUMBER", "and", "k", "NUMBER", "cases", "by", "vectoring", "the", "operations", "as", "much", "as", "possible", "in", "mini", "batches", "NUMBER", "I", "could", "write", "a", "version", "for", "general", "k", "values", "but", "IMHO", "it", "be", "unnecessary", "NUMBER", "We", "could", "discuss", "this", "if", "you", "want", "NUMBER", "NUMBER", "Yes", "I", "would", "include", "a", "benchmark", "in", "the", "next", "PR", "NUMBER", "npapernot", "Yes", "NUMBER", "I", "m", "actually", "test", "a", "new", "implementation", "of", "JSMA", "NUMBER", "The", "current", "implementation", "uses", "a", "map_fn", "function", "to", "simulate", "the", "batch", "JSMA", "which", "be", "actually", "slow", "NUMBER", "I", "m", "reimplementing", "the", "_jsma_impl", "in", "a", "batched", "way", "NUMBER", "Besides", "I", "m", "work", "on", "some", "benchmarks", "showing", "that", "it", "really", "works", "as", "expected", "NUMBER", "I", "think", "I", "will", "update", "the", "PR", "in", "early", "November", "NUMBER", "catherio", "Yes", "NUMBER", "LOL", "A", "bit", "slow", "but", "yes", "still", "work", "on", "the", "features", "mnist_tutorial_madryetal", "NUMBER", "py", "be", "supposed", "to", "reproduce", "the", "results", "of", "the", "paper", "LINK", "It", "gets", "better", "results", "NUMBER", "Here", "be", "the", "first", "NUMBER", "and", "last", "NUMBER", "iterations", "of", "this", "command", "python", "mnist_tutorial_madryetal", "NUMBER", "py", "clean_train", "False", "nb_epochs", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Epoch", "NUMBER", "took", "NUMBER", "seconds", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Epoch", "NUMBER", "took", "NUMBER", "seconds", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Epoch", "NUMBER", "took", "NUMBER", "seconds", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Epoch", "NUMBER", "took", "NUMBER", "seconds", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Epoch", "NUMBER", "took", "NUMBER", "seconds", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Epoch", "NUMBER", "took", "NUMBER", "seconds", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Epoch", "NUMBER", "took", "NUMBER", "seconds", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Epoch", "NUMBER", "took", "NUMBER", "seconds", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Epoch", "NUMBER", "took", "NUMBER", "seconds", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Epoch", "NUMBER", "took", "NUMBER", "seconds", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Epoch", "NUMBER", "took", "NUMBER", "seconds", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Epoch", "NUMBER", "took", "NUMBER", "seconds", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Epoch", "NUMBER", "took", "NUMBER", "seconds", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Epoch", "NUMBER", "took", "NUMBER", "seconds", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Epoch", "NUMBER", "took", "NUMBER", "seconds", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Epoch", "NUMBER", "took", "NUMBER", "seconds", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Epoch", "NUMBER", "took", "NUMBER", "seconds", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Epoch", "NUMBER", "took", "NUMBER", "seconds", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Epoch", "NUMBER", "took", "NUMBER", "seconds", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Epoch", "NUMBER", "took", "NUMBER", "seconds", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Epoch", "NUMBER", "took", "NUMBER", "seconds", "Test", "accuracy", "on", "legitimate", "examples", "NUMBER", "Test", "accuracy", "on", "adversarial", "examples", "NUMBER", "INFO", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "cleverhans", "Completed", "model", "training", "NUMBER", "Great", "NUMBER", "Thank", "you", "NUMBER", "I", "add", "two", "function", "in", "cleverhans", "utils", "NUMBER", "py", "NUMBER", "get_logits_over_interval", "to", "get", "the", "logits", "over", "a", "bounded", "interval", "NUMBER", "linear_extrapolation_plot", "to", "plot", "these", "logits", "Also", "add", "the", "file", "linear_extrapolation_plot_example", "NUMBER", "py", "in", "the", "example", "directory", "NUMBER", "I", "address", "your", "comments", "and", "add", "a", "test", "for", "the", "get", "logits", "function", "NUMBER", "Thanks", "for", "your", "pull", "request", "NUMBER", "It", "looks", "like", "this", "may", "be", "your", "first", "contribution", "to", "a", "Google", "open", "source", "project", "NUMBER", "Before", "we", "can", "look", "at", "your", "pull", "request", "you", "ll", "need", "to", "sign", "a", "Contributor", "License", "Agreement", "CLA", "NUMBER", "memo", "Please", "visit", "TAG", "to", "sign", "NUMBER", "Once", "you", "ve", "sign", "please", "reply", "here", "e", "NUMBER", "g", "NUMBER", "I", "sign", "it", "and", "we", "ll", "verify", "NUMBER", "Thanks", "NUMBER", "If", "you", "ve", "already", "sign", "a", "CLA", "it", "s", "possible", "we", "don", "t", "have", "your", "GitHub", "username", "or", "you", "re", "use", "a", "different", "email", "address", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "If", "your", "company", "sign", "a", "CLA", "they", "designated", "a", "Point", "of", "Contact", "who", "decides", "which", "employees", "be", "authorized", "to", "participate", "NUMBER", "You", "may", "need", "to", "contact", "the", "Point", "of", "Contact", "for", "your", "company", "and", "ask", "to", "be", "add", "to", "the", "group", "of", "authorized", "contributors", "NUMBER", "If", "you", "don", "t", "know", "who", "your", "Point", "of", "Contact", "be", "direct", "the", "project", "maintainer", "to", "go", "cla", "troubleshoot", "NUMBER", "In", "order", "to", "pass", "this", "check", "please", "resolve", "this", "problem", "and", "have", "the", "pull", "request", "author", "add", "another", "comment", "and", "the", "bot", "will", "run", "again", "NUMBER", "TAG", "I", "think", "it", "s", "OK", "to", "ignore", "Googlebot", "since", "we", "know", "who", "you", "be", "and", "know", "Googlebot", "be", "mistaken", "but", "you", "should", "fix", "the", "Travis", "test", "NUMBER", "They", "re", "currently", "fail", "due", "to", "a", "float", "NUMBER", "vs", "float", "NUMBER", "error", "NUMBER", "I", "can", "review", "further", "once", "the", "test", "pass", "NUMBER", "CLAs", "look", "good", "thanks", "TAG", "Yeah", "it", "looks", "like", "we", "be", "putting", "the", "stop_gradient", "in", "the", "eval", "rather", "than", "the", "adversarial", "training", "algorithm", "NUMBER", "The", "source_samples", "flag", "wasn", "t", "be", "use", "in", "the", "CarliniWagner", "tutorial", "this", "PR", "attempts", "to", "make", "the", "tutorial", "more", "reasonable", "for", "various", "settings", "of", "the", "viz_enabled", "targeted", "and", "source_samples", "FLAGS", "NUMBER", "Magic", "numbers", "have", "also", "be", "replaced", "with", "the", "relevant", "variables", "where", "appropriate", "NUMBER", "The", "fail", "test", "for", "Python", "NUMBER", "TensorFlow", "NUMBER", "appears", "to", "be", "relate", "to", "NUMBER", "and", "LINK", "Thanks", "for", "the", "feedback", "NUMBER", "I", "actually", "think", "that", "the", "grid", "visualisation", "be", "reasonable", "for", "the", "untargeted", "case", "as", "shown", "in", "the", "following", "screenshot", "one", "adversarial", "per", "corresponding", "clean", "image", "NUMBER", "I", "was", "thinking", "we", "could", "do", "something", "similar", "to", "the", "mnist_tutorial_jsma", "NUMBER", "py", "where", "pair_visual", "be", "use", "as", "an", "animation", "but", "the", "adversarials", "be", "computed", "in", "a", "batch", "for", "the", "cw", "tutorial", "as", "oppose", "to", "one", "at", "a", "time", "so", "I", "wasn", "t", "sure", "it", "made", "sense", "here", "NUMBER", "cleverhans", "_grid_visualization", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "b", "NUMBER", "f", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "ea", "NUMBER", "a", "NUMBER", "d", "NUMBER", "ae", "NUMBER", "png", "Here", "s", "a", "screenshot", "cleverhans", "_grid_visualization_screenshot_untargeted", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "ac", "NUMBER", "e", "NUMBER", "c", "NUMBER", "eb", "NUMBER", "NUMBER", "e", "NUMBER", "NUMBER", "f", "NUMBER", "d", "c", "NUMBER", "b", "NUMBER", "feebe", "NUMBER", "png", "LINK", "NUMBER", "non", "targeted", "adversarial", "attack", "discussion", "NUMBER", "NUMBER", "The", "test", "fail", "Shouldn", "t", "it", "just", "use", "the", "tf", "default", "session", "when", "no", "explicit", "session", "be", "provide", "Won", "t", "this", "break", "some", "exist", "usages", "of", "attack", "classes", "that", "don", "t", "require", "session", "Ie", "FastGradientMethod", "in", "nips", "NUMBER", "examples", "it", "s", "currently", "call", "without", "session", "for", "TF", "NUMBER", "I", "think", "rwightman", "be", "right", "and", "I", "assume", "that", "s", "why", "the", "test", "be", "fail", "but", "I", "haven", "t", "looked", "at", "their", "output", "NUMBER", "I", "don", "t", "think", "there", "should", "be", "a", "warning", "NUMBER", "TensorFlow", "doesn", "t", "issue", "warnings", "when", "you", "use", "the", "default", "session", "NUMBER", "There", "s", "nothing", "wrong", "with", "use", "a", "default", "session", "NUMBER", "Thanks", "for", "your", "pull", "request", "NUMBER", "It", "looks", "like", "this", "may", "be", "your", "first", "contribution", "to", "a", "Google", "open", "source", "project", "NUMBER", "Before", "we", "can", "look", "at", "your", "pull", "request", "you", "ll", "need", "to", "sign", "a", "Contributor", "License", "Agreement", "CLA", "NUMBER", "memo", "Please", "visit", "TAG", "to", "sign", "NUMBER", "Once", "you", "ve", "sign", "please", "reply", "here", "e", "NUMBER", "g", "NUMBER", "I", "sign", "it", "and", "we", "ll", "verify", "NUMBER", "Thanks", "NUMBER", "If", "you", "ve", "already", "sign", "a", "CLA", "it", "s", "possible", "we", "don", "t", "have", "your", "GitHub", "username", "or", "you", "re", "use", "a", "different", "email", "address", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "If", "your", "company", "sign", "a", "CLA", "they", "designated", "a", "Point", "of", "Contact", "who", "decides", "which", "employees", "be", "authorized", "to", "participate", "NUMBER", "You", "may", "need", "to", "contact", "the", "Point", "of", "Contact", "for", "your", "company", "and", "ask", "to", "be", "add", "to", "the", "group", "of", "authorized", "contributors", "NUMBER", "If", "you", "don", "t", "know", "who", "your", "Point", "of", "Contact", "be", "direct", "the", "project", "maintainer", "to", "go", "cla", "troubleshoot", "NUMBER", "In", "order", "to", "pass", "this", "check", "please", "resolve", "this", "problem", "and", "have", "the", "pull", "request", "author", "add", "another", "comment", "and", "the", "bot", "will", "run", "again", "NUMBER", "TAG", "I", "sign", "it", "After", "rebasing", "and", "amending", "the", "commit", "the", "email", "address", "now", "has", "be", "fix", "NUMBER", "But", "there", "be", "still", "an", "error", "message", "says", "Failure", "CLAs", "be", "sign", "but", "unable", "to", "verify", "author", "consent", "NUMBER", "Is", "there", "anything", "I", "be", "miss", "Thanks", "Thanks", "implementation", "of", "deepfool", "algorithm", "LINK", "Thanks", "for", "your", "pull", "request", "NUMBER", "It", "looks", "like", "this", "may", "be", "your", "first", "contribution", "to", "a", "Google", "open", "source", "project", "NUMBER", "Before", "we", "can", "look", "at", "your", "pull", "request", "you", "ll", "need", "to", "sign", "a", "Contributor", "License", "Agreement", "CLA", "NUMBER", "memo", "Please", "visit", "TAG", "to", "sign", "NUMBER", "Once", "you", "ve", "sign", "please", "reply", "here", "e", "NUMBER", "g", "NUMBER", "I", "sign", "it", "and", "we", "ll", "verify", "NUMBER", "Thanks", "NUMBER", "If", "you", "ve", "already", "sign", "a", "CLA", "it", "s", "possible", "we", "don", "t", "have", "your", "GitHub", "username", "or", "you", "re", "use", "a", "different", "email", "address", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "If", "your", "company", "sign", "a", "CLA", "they", "designated", "a", "Point", "of", "Contact", "who", "decides", "which", "employees", "be", "authorized", "to", "participate", "NUMBER", "You", "may", "need", "to", "contact", "the", "Point", "of", "Contact", "for", "your", "company", "and", "ask", "to", "be", "add", "to", "the", "group", "of", "authorized", "contributors", "NUMBER", "If", "you", "don", "t", "know", "who", "your", "Point", "of", "Contact", "be", "direct", "the", "project", "maintainer", "to", "go", "cla", "troubleshoot", "NUMBER", "In", "order", "to", "pass", "this", "check", "please", "resolve", "this", "problem", "and", "have", "the", "pull", "request", "author", "add", "another", "comment", "and", "the", "bot", "will", "run", "again", "NUMBER", "TAG", "we", "have", "sign", "it", "NUMBER", "Sorry", "for", "the", "inconvenience", "NUMBER", "You", "need", "to", "say", "exactly", "I", "sign", "it", "to", "or", "googlebot", "won", "t", "understand", "I", "sign", "it", "I", "would", "vote", "no", "more", "tutorials", "no", "new", "flags", "run", "different", "attacks", "in", "the", "exist", "tutorials", "NUMBER", "A", "whole", "tutorial", "demonstrating", "an", "attack", "be", "more", "work", "to", "maintain", "than", "the", "underlying", "library", "functionality", "of", "the", "attack", "itself", "NUMBER", "If", "we", "add", "more", "flags", "to", "the", "exist", "tutorials", "to", "make", "them", "implement", "more", "features", "they", "become", "too", "complicated", "for", "the", "purpose", "of", "be", "an", "easy", "to", "read", "document", "for", "people", "to", "learn", "from", "NUMBER", "If", "we", "really", "want", "an", "all", "purpose", "script", "that", "can", "train", "any", "model", "or", "run", "any", "attack", "that", "s", "not", "really", "a", "tutorial", "anymore", "and", "we", "should", "make", "an", "official", "trainer", "script", "or", "attack", "generation", "script", "NUMBER", "I", "sign", "it", "I", "ve", "sign", "the", "CLA", "but", "it", "says", "Failure", "CLAs", "be", "sign", "but", "unable", "to", "verify", "author", "consent", "could", "you", "please", "tell", "me", "what", "be", "I", "miss", "And", "there", "be", "few", "commit", "I", "push", "with", "email", "address", "bairdzhang", "users", "NUMBER", "noreply", "NUMBER", "github", "NUMBER", "com", "and", "how", "can", "I", "sign", "CLA", "for", "those", "commit", "Thanks", "I", "think", "the", "easiest", "thing", "might", "be", "NUMBER", "Close", "this", "PR", "NUMBER", "Do", "a", "rebase", "and", "amend", "the", "commit", "use", "bairdzhang", "users", "NUMBER", "noreply", "NUMBER", "github", "NUMBER", "com", "to", "use", "the", "right", "e", "mail", "address", "NUMBER", "Open", "a", "new", "PR", "Sorry", "for", "the", "trouble", "with", "Googlebot", "Hi", "the", "pytorch", "docker", "requires", "the", "ipc", "host", "flag", "in", "the", "cmd", "LINK", "docker", "image", "An", "example", "be", "nvidia", "docker", "run", "rm", "ti", "ipc", "host", "pytorch", "pytorch", "latest", "could", "you", "add", "this", "in", "the", "framework", "yes", "shouldn", "t", "I", "post", "this", "issue", "here", "Yes", "npapernot", "be", "just", "clarifying", "which", "part", "of", "the", "codebase", "this", "issue", "be", "about", "NUMBER", "AlexeyKurakin", "can", "you", "take", "on", "this", "issue", "We", "think", "this", "doesn", "t", "matter", "now", "that", "the", "competition", "be", "over", "NUMBER", "Also", "we", "think", "competitors", "were", "able", "to", "use", "pytorch", "use", "their", "own", "custom", "container", "NUMBER", "npapernot", "and", "I", "discussed", "this", "today", "during", "the", "hackathon", "NUMBER", "Our", "current", "state", "of", "knowledge", "be", "TensorFlow", "isn", "t", "deterministic", "so", "we", "won", "t", "be", "able", "to", "make", "CleverHans", "completely", "deterministic", "NUMBER", "There", "be", "still", "some", "things", "we", "could", "do", "to", "make", "CleverHans", "more", "deterministic", "like", "set", "eigen", "to", "be", "single", "threaded", "NUMBER", "Which", "David", "I", "think", "the", "main", "thing", "to", "do", "be", "to", "run", "the", "determinism", "test", "with", "Eigen", "configured", "to", "be", "single", "threaded", "NUMBER", "I", "m", "not", "sure", "whether", "there", "be", "more", "sources", "of", "non", "determinism", "in", "TensorFlow", "besides", "that", "NUMBER", "CleverHans", "will", "probably", "always", "be", "non", "deterministic", "during", "real", "use", "because", "the", "underlying", "linear", "algebra", "primitives", "be", "non", "deterministic", "but", "we", "can", "write", "unit", "test", "that", "check", "that", "CleverHans", "isn", "t", "add", "new", "non", "determinism", "by", "fail", "to", "seed", "RNGs", "NUMBER", "I", "have", "narrowed", "the", "problem", "down", "to", "a", "trivially", "small", "test", "case", "NUMBER", "The", "problem", "was", "consecutive", "calls", "to", "tf", "NUMBER", "Session", "seem", "to", "have", "their", "internal", "seed", "it", "s", "be", "NUMBER", "weeks", "I", "looked", "at", "it", "didn", "t", "have", "time", "since", "then", "so", "I", "m", "not", "entirely", "clear", "NUMBER", "Manually", "test", "on", "various", "valid", "and", "invalid", "submissions", "with", "python", "NUMBER", "and", "python", "NUMBER", "This", "be", "more", "of", "a", "stack", "exchange", "style", "seeking", "expert", "help", "question", "rather", "than", "a", "report", "of", "a", "technical", "issue", "NUMBER", "But", "I", "thought", "I", "d", "try", "my", "luck", "here", "as", "you", "guys", "be", "the", "experts", "My", "issue", "be", "that", "a", "model", "be", "trained", "on", "FGSM", "examples", "do", "not", "learn", "anything", "NUMBER", "I", "m", "fairly", "certain", "the", "cause", "of", "this", "issue", "lies", "in", "the", "details", "of", "my", "implementation", "as", "it", "differs", "slightly", "from", "the", "implementation", "use", "in", "the", "Cleverhans", "tutorials", "see", "end", "of", "post", "but", "be", "having", "trouble", "seeing", "why", "or", "how", "any", "of", "the", "details", "of", "my", "implementation", "would", "make", "any", "difference", "to", "the", "training", "process", "NUMBER", "The", "problem", "be", "best", "demonstrated", "by", "comparing", "the", "output", "of", "the", "training", "function", "when", "a", "model", "be", "be", "trained", "on", "the", "MNIST", "training", "set", "and", "the", "output", "of", "the", "training", "function", "when", "a", "model", "be", "be", "trained", "on", "FGSM", "examples", "derived", "from", "the", "MNIST", "training", "set", "I", "m", "use", "keras", "fit", "function", "rather", "than", "the", "function", "shipped", "with", "the", "cleverhans", "package", "Training", "model", "on", "MNIST", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "acc", "on", "MNIST", "test", "set", "NUMBER", "Training", "model", "on", "NUMBER", "FGSM", "examples", "derived", "from", "MNIST", "training", "set", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "Epoch", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "s", "loss", "NUMBER", "acc", "NUMBER", "I", "do", "not", "understand", "why", "this", "would", "happen", "as", "the", "FGSM", "examples", "be", "clearly", "recognizable", "as", "digits", "just", "with", "add", "adversarial", "noise", "NUMBER", "Any", "ideas", "why", "training", "would", "not", "be", "successful", "on", "the", "FGSM", "examples", "Some", "details", "of", "my", "implementation", "that", "may", "be", "important", "to", "problem", "solution", "I", "be", "use", "the", "Keras", "fit", "function", "instead", "of", "the", "model_train", "and", "model_eval", "function", "use", "in", "the", "Cleverhans", "tutorials", "To", "allow", "the", "use", "of", "the", "keras", "fit", "function", "I", "compile", "the", "cnn_model", "after", "initialization", "with", "model", "NUMBER", "compile", "loss", "categorical_crossentropy", "optimizer", "sgd", "metrics", "accuracy", "Instead", "of", "passing", "the", "FGSM", "example", "generator", "to", "a", "trainer", "function", "symbolically", "as", "do", "in", "Cleverhans", "tutorials", "I", "save", "the", "FGSM", "examples", "as", "numpy", "file", "and", "then", "train", "the", "model", "on", "a", "dataset", "comprised", "of", "these", "saved", "examples", "NUMBER", "Thank", "you", "Malcolm", "Thank", "you", "response", "NUMBER", "I", "figured", "it", "out", "shortly", "after", "I", "posted", "I", "was", "storing", "the", "target", "of", "the", "FGSM", "examples", "as", "integers", "when", "in", "fact", "they", "were", "one", "hot", "vectors", "NUMBER", "Probably", "should", "have", "be", "the", "first", "place", "I", "looked", "NUMBER", "Thank", "you", "The", "bias", "was", "initialized", "but", "not", "use", "NUMBER", "The", "test", "might", "need", "to", "be", "fix", "because", "of", "this", "change", "NUMBER", "The", "model", "becomes", "stronger", "NUMBER", "Here", "be", "the", "numbers", "from", "mnist_tutorial_tf", "NUMBER", "py", "with", "nb_epochs", "NUMBER", "before", "and", "after", "the", "change", "NUMBER", "There", "be", "a", "noticeable", "difference", "in", "the", "accuracy", "when", "the", "model", "be", "naively", "trained", "and", "test", "against", "adversarial", "examples", "NUMBER", "With", "Adversarial", "training", "Legitimate", "examples", "Before", "NUMBER", "NUMBER", "After", "NUMBER", "NUMBER", "Adversarial", "examples", "Before", "NUMBER", "NUMBER", "After", "NUMBER", "NUMBER", "Without", "adversarial", "training", "Legitimate", "examples", "Before", "NUMBER", "NUMBER", "After", "NUMBER", "NUMBER", "Adversarial", "examples", "Before", "NUMBER", "NUMBER", "After", "NUMBER", "NUMBER", "Add", "description", "of", "new", "baselines", "NUMBER", "Here", "I", "want", "to", "get", "the", "attack", "examples", "with", "SaliencyMapMethod", "on", "the", "ImageNet", "datasets", "based", "on", "the", "examples", "nips", "NUMBER", "_adversarial_competition", "sample_attacks", "fgsm", "attack_fgsm", "NUMBER", "py", "file", "NUMBER", "And", "I", "just", "change", "the", "following", "code", "fgsm", "FastGradientMethod", "model", "x_adv", "fgsm", "NUMBER", "generate", "x_input", "eps", "eps", "clip_min", "NUMBER", "clip_max", "NUMBER", "with", "jsma", "SaliencyMapMethod", "model", "target", "np", "NUMBER", "zeros", "NUMBER", "NUMBER", "dtype", "np", "NUMBER", "float", "NUMBER", "target", "NUMBER", "NUMBER", "NUMBER", "here", "we", "suppose", "that", "the", "target", "label", "be", "NUMBER", "jsma_params", "theta", "NUMBER", "gamma", "NUMBER", "clip_min", "NUMBER", "clip_max", "NUMBER", "y_target", "target", "x_adv", "jsma", "NUMBER", "generate", "x_input", "jsma_params", "But", "it", "doesn", "t", "work", "NUMBER", "npapernot", "The", "error", "UnknownError", "see", "above", "for", "traceback", "exception", "NUMBER", "AttributeError", "NoneType", "object", "has", "no", "attribute", "run", "be", "report", "NUMBER", "I", "experienced", "some", "similar", "error", "Traceback", "most", "recent", "call", "last", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "script_ops", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "ret", "func", "args", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "NUMBER", "py", "NUMBER", "egg", "cleverhans", "attacks", "NUMBER", "py", "line", "NUMBER", "in", "jsma_wrap", "target", "None", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "NUMBER", "py", "NUMBER", "egg", "cleverhans", "attacks_tf", "NUMBER", "py", "line", "NUMBER", "in", "jsma_batch", "gt", "model_argmax", "sess", "x", "pred", "val", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "NUMBER", "py", "NUMBER", "egg", "cleverhans", "utils_tf", "NUMBER", "py", "line", "NUMBER", "in", "model_argmax", "probabilities", "sess", "NUMBER", "run", "predictions", "feed_dict", "AttributeError", "NoneType", "object", "has", "no", "attribute", "run", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "W", "tensorflow", "core", "framework", "op_kernel", "NUMBER", "cc", "NUMBER", "Internal", "Failed", "to", "run", "py", "callback", "pyfunc_", "NUMBER", "see", "error", "log", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "attack_salmap", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "tf", "NUMBER", "app", "NUMBER", "run", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "platform", "app", "NUMBER", "py", "line", "NUMBER", "in", "run", "_sys", "NUMBER", "exit", "main", "_sys", "NUMBER", "argv", "NUMBER", "flags_passthrough", "File", "attack_salmap", "NUMBER", "py", "line", "NUMBER", "in", "main", "adv_images", "sess", "NUMBER", "run", "x_adv", "feed_dict", "x_input", "images", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "training", "monitored_session", "NUMBER", "py", "line", "NUMBER", "in", "run", "run_metadata", "run_metadata", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "training", "monitored_session", "NUMBER", "py", "line", "NUMBER", "in", "run", "run_metadata", "run_metadata", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "training", "monitored_session", "NUMBER", "py", "line", "NUMBER", "in", "run", "return", "self", "NUMBER", "_sess", "NUMBER", "run", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "training", "monitored_session", "NUMBER", "py", "line", "NUMBER", "in", "run", "run_metadata", "run_metadata", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "training", "monitored_session", "NUMBER", "py", "line", "NUMBER", "in", "run", "return", "self", "NUMBER", "_sess", "NUMBER", "run", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "run", "run_metadata_ptr", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_run", "feed_dict_string", "options", "run_metadata", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_do_run", "target_list", "options", "run_metadata", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_do_call", "raise", "type", "e", "node_def", "op", "message", "tensorflow", "NUMBER", "python", "NUMBER", "framework", "NUMBER", "errors_impl", "NUMBER", "InternalError", "Failed", "to", "run", "py", "callback", "pyfunc_", "NUMBER", "see", "error", "log", "NUMBER", "Node", "PyFunc", "PyFunc", "Tin", "DT_FLOAT", "Tout", "DT_FLOAT", "token", "pyfunc_", "NUMBER", "_device", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "cpu", "NUMBER", "_recv_Placeholder_", "NUMBER", "Caused", "by", "op", "u", "PyFunc", "defined", "at", "File", "attack_salmap", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "tf", "NUMBER", "app", "NUMBER", "run", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "platform", "app", "NUMBER", "py", "line", "NUMBER", "in", "run", "_sys", "NUMBER", "exit", "main", "_sys", "NUMBER", "argv", "NUMBER", "flags_passthrough", "File", "attack_salmap", "NUMBER", "py", "line", "NUMBER", "in", "main", "x_adv", "fgsm", "NUMBER", "generate", "x_input", "clip_min", "NUMBER", "clip_max", "NUMBER", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "cleverhans", "NUMBER", "py", "NUMBER", "egg", "cleverhans", "attacks", "NUMBER", "py", "line", "NUMBER", "in", "generate", "wrap", "tf", "NUMBER", "py_func", "jsma_wrap", "x", "tf", "NUMBER", "float", "NUMBER", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "script_ops", "NUMBER", "py", "line", "NUMBER", "in", "py_func", "input", "inp", "token", "token", "Tout", "Tout", "name", "name", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "gen_script_ops", "NUMBER", "py", "line", "NUMBER", "in", "_py_func", "name", "name", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "framework", "op_def_library", "NUMBER", "py", "line", "NUMBER", "in", "apply_op", "op_def", "op_def", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "line", "NUMBER", "in", "create_op", "original_op", "self", "NUMBER", "_default_original_op", "op_def", "op_def", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "line", "NUMBER", "in", "__init__", "self", "NUMBER", "_traceback", "_extract_stack", "InternalError", "see", "above", "for", "traceback", "Failed", "to", "run", "py", "callback", "pyfunc_", "NUMBER", "see", "error", "log", "NUMBER", "Node", "PyFunc", "PyFunc", "Tin", "DT_FLOAT", "Tout", "DT_FLOAT", "token", "pyfunc_", "NUMBER", "_device", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "cpu", "NUMBER", "_recv_Placeholder_", "NUMBER", "The", "code", "be", "like", "this", "eps", "NUMBER", "FLAGS", "NUMBER", "max_epsilon", "NUMBER", "batch_shape", "FLAGS", "NUMBER", "batch_size", "FLAGS", "NUMBER", "image_height", "FLAGS", "NUMBER", "image_width", "NUMBER", "num_classes", "NUMBER", "tf", "NUMBER", "logging", "NUMBER", "set_verbosity", "tf", "NUMBER", "logging", "NUMBER", "INFO", "with", "tf", "NUMBER", "Graph", "NUMBER", "as_default", "Prepare", "graph", "x_input", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "shape", "batch_shape", "model", "InceptionModel", "num_classes", "salmap", "SaliencyMapMethod", "model", "x_adv", "salmap", "NUMBER", "generate", "x_input", "clip_min", "NUMBER", "clip_max", "NUMBER", "Run", "computation", "saver", "tf", "NUMBER", "train", "NUMBER", "Saver", "slim", "NUMBER", "get_model_variables", "session_creator", "tf", "NUMBER", "train", "NUMBER", "ChiefSessionCreator", "scaffold", "tf", "NUMBER", "train", "NUMBER", "Scaffold", "saver", "saver", "checkpoint_filename_with_path", "FLAGS", "NUMBER", "checkpoint_path", "master", "FLAGS", "NUMBER", "master", "with", "tf", "NUMBER", "train", "NUMBER", "MonitoredSession", "session_creator", "session_creator", "as", "sess", "for", "filenames", "images", "in", "load_images", "FLAGS", "NUMBER", "input_dir", "batch_shape", "adv_images", "sess", "NUMBER", "run", "x_adv", "feed_dict", "x_input", "images", "save_images", "adv_images", "filenames", "FLAGS", "NUMBER", "output_dir", "Thanks", "for", "the", "quick", "response", "and", "suggestion", "After", "update", "cleverhans", "to", "NUMBER", "The", "error", "be", "like", "this", "Traceback", "most", "recent", "call", "last", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "script_ops", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "ret", "func", "args", "File", "root", "src", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "line", "NUMBER", "in", "jsma_wrap", "y_target", "None", "File", "root", "src", "cleverhans", "cleverhans", "attacks_tf", "NUMBER", "py", "line", "NUMBER", "in", "jsma_batch", "gt", "model_argmax", "sess", "x", "pred", "val", "feed", "feed", "File", "root", "src", "cleverhans", "cleverhans", "utils_tf", "NUMBER", "py", "line", "NUMBER", "in", "model_argmax", "probabilities", "sess", "NUMBER", "run", "predictions", "feed_dict", "AttributeError", "NoneType", "object", "has", "no", "attribute", "run", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "W", "tensorflow", "core", "framework", "op_kernel", "NUMBER", "cc", "NUMBER", "Internal", "Failed", "to", "run", "py", "callback", "pyfunc_", "NUMBER", "see", "error", "log", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "attack_salmap", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "tf", "NUMBER", "app", "NUMBER", "run", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "platform", "app", "NUMBER", "py", "line", "NUMBER", "in", "run", "_sys", "NUMBER", "exit", "main", "_sys", "NUMBER", "argv", "NUMBER", "flags_passthrough", "File", "attack_salmap", "NUMBER", "py", "line", "NUMBER", "in", "main", "adv_images", "sess", "NUMBER", "run", "x_adv", "feed_dict", "x_input", "images", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "training", "monitored_session", "NUMBER", "py", "line", "NUMBER", "in", "run", "run_metadata", "run_metadata", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "training", "monitored_session", "NUMBER", "py", "line", "NUMBER", "in", "run", "run_metadata", "run_metadata", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "training", "monitored_session", "NUMBER", "py", "line", "NUMBER", "in", "run", "return", "self", "NUMBER", "_sess", "NUMBER", "run", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "training", "monitored_session", "NUMBER", "py", "line", "NUMBER", "in", "run", "run_metadata", "run_metadata", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "training", "monitored_session", "NUMBER", "py", "line", "NUMBER", "in", "run", "return", "self", "NUMBER", "_sess", "NUMBER", "run", "args", "kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "run", "run_metadata_ptr", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_run", "feed_dict_string", "options", "run_metadata", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_do_run", "target_list", "options", "run_metadata", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_do_call", "raise", "type", "e", "node_def", "op", "message", "tensorflow", "NUMBER", "python", "NUMBER", "framework", "NUMBER", "errors_impl", "NUMBER", "InternalError", "Failed", "to", "run", "py", "callback", "pyfunc_", "NUMBER", "see", "error", "log", "NUMBER", "Node", "PyFunc", "PyFunc", "Tin", "DT_FLOAT", "Tout", "DT_FLOAT", "token", "pyfunc_", "NUMBER", "_device", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "cpu", "NUMBER", "_recv_Placeholder_", "NUMBER", "Caused", "by", "op", "u", "PyFunc", "defined", "at", "File", "attack_salmap", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "tf", "NUMBER", "app", "NUMBER", "run", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "platform", "app", "NUMBER", "py", "line", "NUMBER", "in", "run", "_sys", "NUMBER", "exit", "main", "_sys", "NUMBER", "argv", "NUMBER", "flags_passthrough", "File", "attack_salmap", "NUMBER", "py", "line", "NUMBER", "in", "main", "x_adv", "fgsm", "NUMBER", "generate", "x_input", "clip_min", "NUMBER", "clip_max", "NUMBER", "File", "root", "src", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "line", "NUMBER", "in", "generate", "wrap", "tf", "NUMBER", "py_func", "jsma_wrap", "x", "tf", "NUMBER", "float", "NUMBER", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "script_ops", "NUMBER", "py", "line", "NUMBER", "in", "py_func", "input", "inp", "token", "token", "Tout", "Tout", "name", "name", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "ops", "gen_script_ops", "NUMBER", "py", "line", "NUMBER", "in", "_py_func", "name", "name", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "framework", "op_def_library", "NUMBER", "py", "line", "NUMBER", "in", "apply_op", "op_def", "op_def", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "line", "NUMBER", "in", "create_op", "original_op", "self", "NUMBER", "_default_original_op", "op_def", "op_def", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "line", "NUMBER", "in", "__init__", "self", "NUMBER", "_traceback", "_extract_stack", "InternalError", "see", "above", "for", "traceback", "Failed", "to", "run", "py", "callback", "pyfunc_", "NUMBER", "see", "error", "log", "NUMBER", "Node", "PyFunc", "PyFunc", "Tin", "DT_FLOAT", "Tout", "DT_FLOAT", "token", "pyfunc_", "NUMBER", "_device", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "cpu", "NUMBER", "_recv_Placeholder_", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "home", "ubuntu", "anaconda", "NUMBER", "lib", "python", "NUMBER", "subprocess", "NUMBER", "py", "line", "NUMBER", "in", "call", "return", "p", "NUMBER", "wait", "timeout", "timeout", "File", "home", "ubuntu", "anaconda", "NUMBER", "lib", "python", "NUMBER", "subprocess", "NUMBER", "py", "line", "NUMBER", "in", "wait", "pid", "sts", "self", "NUMBER", "_try_wait", "NUMBER", "File", "home", "ubuntu", "anaconda", "NUMBER", "lib", "python", "NUMBER", "subprocess", "NUMBER", "py", "line", "NUMBER", "in", "_try_wait", "pid", "sts", "os", "NUMBER", "waitpid", "self", "NUMBER", "pid", "wait_flags", "KeyboardInterrupt", "During", "handle", "of", "the", "above", "exception", "another", "exception", "occur", "Traceback", "most", "recent", "call", "last", "File", "home", "ubuntu", "cleverhans", "examples", "nips", "NUMBER", "_adversarial_competition", "run_attacks_and_defenses", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "main", "File", "home", "ubuntu", "cleverhans", "examples", "nips", "NUMBER", "_adversarial_competition", "run_attacks_and_defenses", "NUMBER", "py", "line", "NUMBER", "in", "main", "args", "NUMBER", "epsilon", "File", "home", "ubuntu", "cleverhans", "examples", "nips", "NUMBER", "_adversarial_competition", "run_attacks_and_defenses", "NUMBER", "py", "line", "NUMBER", "in", "run", "subprocess", "NUMBER", "call", "cmd", "File", "home", "ubuntu", "anaconda", "NUMBER", "lib", "python", "NUMBER", "subprocess", "NUMBER", "py", "line", "NUMBER", "in", "call", "p", "NUMBER", "kill", "File", "home", "ubuntu", "anaconda", "NUMBER", "lib", "python", "NUMBER", "subprocess", "NUMBER", "py", "line", "NUMBER", "in", "kill", "self", "NUMBER", "send_signal", "signal", "NUMBER", "SIGKILL", "File", "home", "ubuntu", "anaconda", "NUMBER", "lib", "python", "NUMBER", "subprocess", "NUMBER", "py", "line", "NUMBER", "in", "send_signal", "os", "NUMBER", "kill", "self", "NUMBER", "pid", "sig", "PermissionError", "Errno", "NUMBER", "Operation", "not", "permitted", "I", "think", "the", "reason", "may", "be", "when", "I", "create", "the", "SaliencyMapMethod", "object", "I", "also", "need", "to", "pass", "the", "session", "object", "NUMBER", "But", "I", "be", "not", "sure", "how", "to", "modify", "a", "graph", "after", "creating", "a", "session", "NUMBER", "Here", "be", "what", "I", "be", "trying", "NUMBER", "The", "following", "code", "has", "dimension", "mismatch", "error", "in", "jsma_batch", "NUMBER", "The", "jacobian_graph", "step", "takes", "more", "than", "a", "hour", "NUMBER", "python", "def", "main", "_", "Images", "for", "inception", "classifier", "be", "normalized", "to", "be", "in", "NUMBER", "NUMBER", "interval", "eps", "be", "a", "difference", "between", "pixels", "so", "it", "should", "be", "in", "NUMBER", "NUMBER", "interval", "NUMBER", "Renormalizing", "epsilon", "from", "NUMBER", "NUMBER", "to", "NUMBER", "NUMBER", "NUMBER", "eps", "NUMBER", "FLAGS", "NUMBER", "max_epsilon", "NUMBER", "batch_shape", "FLAGS", "NUMBER", "batch_size", "FLAGS", "NUMBER", "image_height", "FLAGS", "NUMBER", "image_width", "NUMBER", "num_classes", "NUMBER", "from", "cleverhans", "NUMBER", "attacks_tf", "import", "jacobian_graph", "jsma_batch", "tf", "NUMBER", "logging", "NUMBER", "set_verbosity", "tf", "NUMBER", "logging", "NUMBER", "INFO", "with", "tf", "NUMBER", "Graph", "NUMBER", "as_default", "as", "d_graph", "Prepare", "graph", "x_input", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "shape", "batch_shape", "model", "InceptionModel", "num_classes", "preds", "model", "x_input", "grads", "jacobian_graph", "preds", "x_input", "num_classes", "Run", "computation", "saver", "tf", "NUMBER", "train", "NUMBER", "Saver", "slim", "NUMBER", "get_model_variables", "session_creator", "tf", "NUMBER", "train", "NUMBER", "ChiefSessionCreator", "scaffold", "tf", "NUMBER", "train", "NUMBER", "Scaffold", "saver", "saver", "checkpoint_filename_with_path", "FLAGS", "NUMBER", "checkpoint_path", "master", "FLAGS", "NUMBER", "master", "with", "tf", "NUMBER", "train", "NUMBER", "MonitoredSession", "session_creator", "session_creator", "as", "sess", "print", "Session", "be", "close", "sess", "NUMBER", "_is_closed", "for", "filenames", "images", "in", "load_images", "FLAGS", "NUMBER", "input_dir", "batch_shape", "adv_images", "jsma_batch", "sess", "x_input", "preds", "grads", "images", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "num_classes", "y_target", "None", "save_images", "adv_images", "filenames", "FLAGS", "NUMBER", "output_dir", "def", "load_images", "input_dir", "batch_shape", "Read", "png", "images", "from", "input", "directory", "in", "batches", "NUMBER", "Args", "input_dir", "input", "directory", "batch_shape", "shape", "of", "minibatch", "array", "i", "NUMBER", "e", "NUMBER", "batch_size", "height", "width", "NUMBER", "Yields", "filenames", "list", "file", "names", "without", "path", "of", "each", "image", "Lenght", "of", "this", "list", "could", "be", "less", "than", "batch_size", "in", "this", "case", "only", "first", "few", "images", "of", "the", "result", "be", "elements", "of", "the", "minibatch", "NUMBER", "images", "array", "with", "all", "images", "from", "this", "batch", "images", "np", "NUMBER", "zeros", "batch_shape", "filenames", "idx", "NUMBER", "batch_size", "batch_shape", "NUMBER", "for", "filepath", "in", "tf", "NUMBER", "gfile", "NUMBER", "Glob", "os", "NUMBER", "path", "NUMBER", "join", "input_dir", "NUMBER", "png", "with", "tf", "NUMBER", "gfile", "NUMBER", "Open", "filepath", "as", "f", "image", "np", "NUMBER", "array", "Image", "NUMBER", "open", "f", "NUMBER", "convert", "RGB", "NUMBER", "astype", "np", "NUMBER", "float", "NUMBER", "Images", "for", "inception", "classifier", "be", "normalized", "to", "be", "in", "NUMBER", "NUMBER", "interval", "NUMBER", "images", "idx", "image", "NUMBER", "NUMBER", "filenames", "NUMBER", "append", "os", "NUMBER", "path", "NUMBER", "basename", "filepath", "idx", "NUMBER", "if", "idx", "batch_size", "yield", "filenames", "images", "filenames", "images", "np", "NUMBER", "zeros", "batch_shape", "idx", "NUMBER", "if", "idx", "NUMBER", "yield", "filenames", "images", "I", "experience", "the", "similar", "problem", "here", "NUMBER", "I", "was", "trying", "to", "merge", "CarliniWagnerL", "NUMBER", "attack", "in", "attacks", "NUMBER", "py", "into", "examples", "nips", "NUMBER", "_adversarial_competition", "sample_attacks", "NUMBER", "I", "get", "the", "error", "when", "I", "keep", "the", "SessionMonitor", "the", "same", "as", "attack_fgsm", "NUMBER", "py", "NUMBER", "However", "I", "was", "get", "error", "like", "uninitialized", "variables", "NUMBER", "Like", "Below", "INFO", "tensorflow", "Restoring", "parameters", "from", "inception_v", "NUMBER", "ckpt", "INFO", "tensorflow", "Restoring", "parameters", "from", "inception_v", "NUMBER", "ckpt", "Traceback", "most", "recent", "call", "last", "File", "attack_cwL", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "tf", "NUMBER", "app", "NUMBER", "run", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "platform", "app", "NUMBER", "py", "line", "NUMBER", "in", "run", "_sys", "NUMBER", "exit", "main", "_sys", "NUMBER", "argv", "NUMBER", "flags_passthrough", "File", "attack_cwL", "NUMBER", "py", "line", "NUMBER", "in", "main", "with", "tf", "NUMBER", "train", "NUMBER", "MonitoredSession", "session_creator", "session_creator", "as", "sess", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "training", "monitored_session", "NUMBER", "py", "line", "NUMBER", "in", "__init__", "stop_grace_period_secs", "stop_grace_period_secs", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "training", "monitored_session", "NUMBER", "py", "line", "NUMBER", "in", "__init__", "self", "NUMBER", "_sess", "_RecoverableSession", "self", "NUMBER", "_coordinated_creator", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "training", "monitored_session", "NUMBER", "py", "line", "NUMBER", "in", "__init__", "_WrappedSession", "NUMBER", "__init__", "self", "self", "NUMBER", "_create_session", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "training", "monitored_session", "NUMBER", "py", "line", "NUMBER", "in", "_create_session", "return", "self", "NUMBER", "_sess_creator", "NUMBER", "create_session", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "training", "monitored_session", "NUMBER", "py", "line", "NUMBER", "in", "create_session", "self", "NUMBER", "tf_sess", "self", "NUMBER", "_session_creator", "NUMBER", "create_session", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "training", "monitored_session", "NUMBER", "py", "line", "NUMBER", "in", "create_session", "init_fn", "self", "NUMBER", "_scaffold", "NUMBER", "init_fn", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "training", "session_manager", "NUMBER", "py", "line", "NUMBER", "in", "prepare_session", "msg", "RuntimeError", "Init", "operations", "did", "not", "make", "model", "ready", "for", "local_init", "NUMBER", "Init", "op", "group_deps", "init", "fn", "None", "error", "Variables", "not", "initialized", "Variable", "timg", "tlab", "const", "beta", "NUMBER", "_power", "beta", "NUMBER", "_power", "Variable", "Adam", "Variable", "Adam_", "NUMBER", "After", "some", "searchings", "in", "the", "web", "one", "possible", "answer", "be", "that", "the", "program", "tried", "to", "run", "two", "tensorflow", "at", "the", "same", "time", "NUMBER", "Then", "I", "thought", "maybe", "tensorflow", "do", "not", "connect", "the", "graph", "defined", "for", "inception", "model", "and", "the", "graph", "of", "attacks", "inside", "CarliniWagnerL", "NUMBER", "attacks", "NUMBER", "Then", "I", "change", "the", "code", "to", "better", "resemble", "the", "mnist_tutorial_cw", "NUMBER", "py", "which", "runs", "CarliniWagnerL", "NUMBER", "attacks", "in", "mnist", "dataset", "instead", "NUMBER", "The", "code", "be", "below", "eps", "NUMBER", "FLAGS", "NUMBER", "max_epsilon", "NUMBER", "batch_shape", "FLAGS", "NUMBER", "batch_size", "FLAGS", "NUMBER", "image_height", "FLAGS", "NUMBER", "image_width", "NUMBER", "num_classes", "NUMBER", "tf", "NUMBER", "logging", "NUMBER", "set_verbosity", "tf", "NUMBER", "logging", "NUMBER", "INFO", "with", "tf", "NUMBER", "Graph", "NUMBER", "as_default", "Prepare", "graph", "x_input", "tf", "NUMBER", "placeholder", "tf", "NUMBER", "float", "NUMBER", "shape", "batch_shape", "model", "InceptionModel", "num_classes", "cw", "CarliniWagnerL", "NUMBER", "model", "untargetted", "attacks", "cw_params", "batch_size", "FLAGS", "NUMBER", "batch_size", "clip_min", "NUMBER", "clip_max", "NUMBER", "binary_search_steps", "NUMBER", "x_adv", "cw", "NUMBER", "generate", "x_input", "cw_params", "sess", "tf", "NUMBER", "Session", "Run", "computation", "saver", "tf", "NUMBER", "train", "NUMBER", "Saver", "slim", "NUMBER", "get_model_variables", "ckpt", "tf", "NUMBER", "train", "NUMBER", "get_checkpoint_state", "FLAGS", "NUMBER", "checkpoint_path", "if", "ckpt", "and", "ckpt", "NUMBER", "model_checkpoint_path", "saver", "NUMBER", "restore", "sess", "ckpt", "NUMBER", "model_checkpoint_path", "sess", "NUMBER", "run", "tf", "NUMBER", "global_variables_initializer", "for", "filenames", "images", "in", "load_images", "FLAGS", "NUMBER", "input_dir", "batch_shape", "adv_images", "sess", "NUMBER", "run", "x_adv", "feed_dict", "x_input", "images", "save_images", "adv_images", "filenames", "FLAGS", "NUMBER", "output_dir", "So", "I", "restore", "the", "model", "explicitly", "myself", "and", "try", "to", "run", "the", "entire", "thing", "with", "sess", "NUMBER", "But", "I", "get", "another", "error", "below", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "W", "tensorflow", "core", "framework", "op_kernel", "NUMBER", "cc", "NUMBER", "Unknown", "AttributeError", "NoneType", "object", "has", "no", "attribute", "run", "Traceback", "most", "recent", "call", "last", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_do_call", "return", "fn", "args", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_run_fn", "status", "run_metadata", "File", "usr", "local", "Cellar", "python", "NUMBER", "NUMBER", "Frameworks", "Python", "NUMBER", "framework", "Versions", "NUMBER", "lib", "python", "NUMBER", "contextlib", "NUMBER", "py", "line", "NUMBER", "in", "__exit__", "next", "self", "NUMBER", "gen", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "errors_impl", "NUMBER", "py", "line", "NUMBER", "in", "raise_exception_on_not_ok_status", "pywrap_tensorflow", "NUMBER", "TF_GetCode", "status", "tensorflow", "NUMBER", "python", "NUMBER", "framework", "NUMBER", "errors_impl", "NUMBER", "UnknownError", "AttributeError", "NoneType", "object", "has", "no", "attribute", "run", "Node", "PyFunc", "PyFunc", "Tin", "DT_FLOAT", "DT_FLOAT", "Tout", "DT_FLOAT", "token", "pyfunc_", "NUMBER", "_device", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "cpu", "NUMBER", "_arg_Placeholder_", "NUMBER", "_", "NUMBER", "_arg_Placeholder_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "During", "handle", "of", "the", "above", "exception", "another", "exception", "occur", "Traceback", "most", "recent", "call", "last", "File", "attack_cwL", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "tf", "NUMBER", "app", "NUMBER", "run", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "platform", "app", "NUMBER", "py", "line", "NUMBER", "in", "run", "_sys", "NUMBER", "exit", "main", "_sys", "NUMBER", "argv", "NUMBER", "flags_passthrough", "File", "attack_cwL", "NUMBER", "py", "line", "NUMBER", "in", "main", "adv_images", "sess", "NUMBER", "run", "x_adv", "feed_dict", "x_input", "images", "y_input", "reals", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "run", "run_metadata_ptr", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_run", "feed_dict_tensor", "options", "run_metadata", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_do_run", "options", "run_metadata", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_do_call", "raise", "type", "e", "node_def", "op", "message", "tensorflow", "NUMBER", "python", "NUMBER", "framework", "NUMBER", "errors_impl", "NUMBER", "UnknownError", "AttributeError", "NoneType", "object", "has", "no", "attribute", "run", "Node", "PyFunc", "PyFunc", "Tin", "DT_FLOAT", "DT_FLOAT", "Tout", "DT_FLOAT", "token", "pyfunc_", "NUMBER", "_device", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "cpu", "NUMBER", "_arg_Placeholder_", "NUMBER", "_", "NUMBER", "_arg_Placeholder_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "Caused", "by", "op", "PyFunc", "defined", "at", "File", "attack_cwL", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "tf", "NUMBER", "app", "NUMBER", "run", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "platform", "app", "NUMBER", "py", "line", "NUMBER", "in", "run", "_sys", "NUMBER", "exit", "main", "_sys", "NUMBER", "argv", "NUMBER", "flags_passthrough", "File", "attack_cwL", "NUMBER", "py", "line", "NUMBER", "in", "main", "x_adv", "cw", "NUMBER", "generate", "x_input", "cw_params", "File", "Users", "ximinlin", "Documents", "Python", "malwares", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "line", "NUMBER", "in", "generate", "wrap", "tf", "NUMBER", "py_func", "cw_wrap", "x", "labels", "tf", "NUMBER", "float", "NUMBER", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "ops", "script_ops", "NUMBER", "py", "line", "NUMBER", "in", "py_func", "input", "inp", "token", "token", "Tout", "Tout", "name", "name", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "ops", "gen_script_ops", "NUMBER", "py", "line", "NUMBER", "in", "_py_func", "name", "name", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "op_def_library", "NUMBER", "py", "line", "NUMBER", "in", "apply_op", "op_def", "op_def", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "line", "NUMBER", "in", "create_op", "original_op", "self", "NUMBER", "_default_original_op", "op_def", "op_def", "File", "usr", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "line", "NUMBER", "in", "__init__", "self", "NUMBER", "_traceback", "self", "NUMBER", "_graph", "NUMBER", "_extract_stack", "pylint", "disable", "protected", "access", "UnknownError", "see", "above", "for", "traceback", "AttributeError", "NoneType", "object", "has", "no", "attribute", "run", "Node", "PyFunc", "PyFunc", "Tin", "DT_FLOAT", "DT_FLOAT", "Tout", "DT_FLOAT", "token", "pyfunc_", "NUMBER", "_device", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "cpu", "NUMBER", "_arg_Placeholder_", "NUMBER", "_", "NUMBER", "_arg_Placeholder_", "NUMBER", "_", "NUMBER", "_", "NUMBER", "I", "think", "the", "Nonetype", "be", "referring", "to", "sess", "since", "I", "be", "not", "calling", "any", "run", "in", "my", "code", "NUMBER", "So", "I", "later", "print", "out", "the", "sess", "NUMBER", "TAG", "which", "be", "definitely", "not", "None", "NUMBER", "XiminLin", "The", "NUMBER", "sess", "member", "of", "the", "Attack", "class", "be", "None", "not", "your", "own", "NUMBER", "You", "need", "to", "create", "the", "session", "and", "pass", "it", "to", "the", "attack", "class", "as", "in", "the", "test_attack", "TestCarliniWagnerL", "NUMBER", "or", "the", "MINST", "examples", "NUMBER", "It", "be", "definitely", "a", "bit", "confusing", "as", "the", "sess", "argument", "in", "the", "init", "method", "defaults", "to", "None", "since", "not", "all", "TF", "attacks", "require", "it", "and", "none", "of", "the", "Theano", "ones", "do", "NUMBER", "All", "attacks", "that", "require", "it", "should", "probably", "be", "checking", "the", "precondition", "with", "an", "assert", "and", "or", "error", "log", "NUMBER", "I", "think", "one", "but", "not", "all", "of", "them", "do", "when", "I", "was", "browsing", "the", "code", "looking", "at", "the", "CW", "implementation", "NUMBER", "npapernot", "XiminLin", "I", "think", "I", "solve", "this", "problem", "by", "NUMBER", "use", "tf", "NUMBER", "Session", "instead", "of", "tf", "NUMBER", "train", "NUMBER", "MonitoredSession", "so", "you", "can", "modify", "the", "graph", "after", "session", "created", "NUMBER", "pass", "session", "variable", "when", "initializing", "the", "attack", "But", "the", "gradient", "graph", "calculation", "seems", "to", "take", "quite", "some", "time", "NUMBER", "I", "be", "considering", "saving", "it", "as", "a", "graph", "and", "load", "the", "graph", "from", "the", "file", "NUMBER", "Thanks", "for", "helping", "Seems", "that", "it", "solves", "my", "problem", "as", "well", "NUMBER", "But", "it", "takes", "too", "long", "to", "run", "NUMBER", "Thanks", "for", "helping", "I", "still", "get", "the", "same", "error", "as", "XiminLin", "Can", "you", "show", "your", "work", "code", "Adversarially", "trained", "imagenet", "models", "be", "uploaded", "to", "downloads", "NUMBER", "tensorflow", "NUMBER", "org", "so", "update", "checkpoint", "locations", "accordingly", "So", "there", "s", "good", "news", "and", "bad", "news", "NUMBER", "thumbsup", "The", "good", "news", "be", "that", "everyone", "that", "needs", "to", "sign", "a", "CLA", "the", "pull", "request", "submitter", "and", "all", "commit", "authors", "have", "do", "so", "NUMBER", "Everything", "be", "all", "good", "there", "NUMBER", "confused", "The", "bad", "news", "be", "that", "it", "appears", "that", "one", "or", "more", "commit", "were", "authored", "by", "someone", "other", "than", "the", "pull", "request", "submitter", "NUMBER", "We", "need", "to", "confirm", "that", "they", "re", "okay", "with", "their", "commit", "be", "contributed", "to", "this", "project", "NUMBER", "Please", "have", "them", "confirm", "that", "here", "in", "the", "pull", "request", "NUMBER", "Note", "to", "project", "maintainer", "This", "be", "a", "terminal", "state", "meaning", "the", "cla", "google", "commit", "status", "will", "not", "change", "from", "this", "State", "NUMBER", "It", "s", "up", "to", "you", "to", "confirm", "consent", "of", "the", "commit", "author", "s", "and", "merge", "this", "pull", "request", "when", "appropriate", "NUMBER", "TAG", "Just", "to", "clarify", "why", "adv", "tf", "NUMBER", "op_gradient", "x", "eps", "tf", "NUMBER", "sign", "g", "be", "wrong", "I", "always", "had", "an", "impression", "that", "we", "want", "to", "treat", "adversarial", "examples", "as", "a", "constant", "i", "NUMBER", "e", "NUMBER", "don", "t", "backprop", "through", "it", "for", "adversarial", "training", "and", "that", "s", "the", "purpose", "of", "tf", "NUMBER", "op_gradient", "When", "the", "model", "s", "prediction", "be", "use", "instead", "of", "true", "labels", "it", "makes", "more", "sense", "to", "do", "stop_gradient", "pred", "NUMBER", "This", "can", "be", "fix", "by", "doing", "stop_gradient", "after", "these", "lines", "LINK", "L", "NUMBER", "LINK", "L", "NUMBER", "LINK", "_tf", "NUMBER", "py", "L", "NUMBER", "Addressing", "NUMBER", "Running", "mnist_blackbox", "NUMBER", "py", "and", "mnist_tutorial_tf", "NUMBER", "py", "the", "numbers", "were", "in", "the", "range", "of", "NUMBER", "NUMBER", "To", "be", "specific", "about", "the", "change", "in", "accuracy", "I", "run", "the", "scripts", "mnist_blackbox", "NUMBER", "py", "and", "mnist_tutorial_tf", "NUMBER", "py", "NUMBER", "times", "before", "and", "after", "the", "change", "NUMBER", "The", "change", "to", "the", "mean", "of", "accuracy", "be", "within", "one", "standard", "deviation", "NUMBER", "mnist_blackbox", "NUMBER", "py", "Legitimate", "examples", "Before", "NUMBER", "NUMBER", "After", "NUMBER", "NUMBER", "Adversarial", "examples", "Before", "NUMBER", "NUMBER", "After", "NUMBER", "NUMBER", "mnist_tutorial_tf", "NUMBER", "py", "Legitimate", "examples", "Before", "NUMBER", "NUMBER", "After", "NUMBER", "NUMBER", "Adversarial", "examples", "Before", "NUMBER", "NUMBER", "After", "NUMBER", "NUMBER", "The", "scripts", "were", "call", "with", "nb_epochs", "NUMBER", "NUMBER", "Yes", "NUMBER", "The", "previous", "numbers", "were", "with", "adversarial", "training", "NUMBER", "Also", "without", "adversarial", "training", "the", "numbers", "be", "within", "one", "standard", "deviation", "NUMBER", "Legitimate", "examples", "Before", "NUMBER", "NUMBER", "After", "NUMBER", "NUMBER", "Adversarial", "examples", "Before", "NUMBER", "NUMBER", "After", "NUMBER", "NUMBER", "On", "Fri", "Aug", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "Ian", "Goodfellow", "TAG", "write", "For", "mnist_tutorial_tf", "NUMBER", "py", "be", "all", "of", "these", "numbers", "with", "adversarial", "training", "What", "happens", "without", "adversarial", "training", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Similar", "to", "the", "seeding", "of", "TenosorFlow", "I", "set", "a", "fix", "seed", "in", "the", "tutorials", "for", "the", "random", "module", "NUMBER", "This", "be", "instead", "of", "passing", "the", "seed", "as", "an", "argument", "to", "model_train", "NUMBER", "A", "few", "minor", "fix", "for", "the", "logger", "change", "message", "in", "a", "few", "places", "to", "be", "slightly", "better", "NUMBER", "Also", "enable", "the", "logger", "for", "the", "tf", "example", "NUMBER", "Eh", "NUMBER", "It", "s", "probably", "not", "the", "cleanest", "part", "of", "the", "code", "but", "that", "s", "how", "I", "report", "success", "failure", "NUMBER", "It", "initializes", "to", "NUMBER", "e", "NUMBER", "and", "success", "will", "mean", "less", "than", "that", "NUMBER", "Probably", "that", "should", "be", "fix", "because", "it", "s", "a", "fine", "assumption", "for", "image", "tasks", "a", "distortion", "of", "NUMBER", "max", "be", "possible", "on", "imagenet", "but", "may", "not", "hold", "in", "general", "NUMBER", "I", "can", "deal", "with", "that", "in", "another", "PR", "NUMBER", "Done", "Remove", "use", "of", "keras", "from", "the", "JSMA", "CW", "tutorials", "NUMBER", "Replace", "the", "model", "with", "the", "pure", "TF", "model", "in", "mnist_tutorial_tf", "NUMBER", "Move", "the", "model", "in", "that", "tutorial", "to", "models", "NUMBER", "py", "NUMBER", "I", "don", "t", "really", "want", "this", "to", "be", "a", "replacement", "for", "Keras", "NUMBER", "I", "moved", "the", "MLP", "to", "the", "core", "models", "file", "because", "utils_keras", "has", "its", "own", "cnn_model", "and", "this", "was", "mainly", "meant", "as", "a", "drop", "in", "replacement", "for", "that", "NUMBER", "That", "said", "I", "can", "see", "how", "people", "might", "now", "build", "off", "of", "or", "be", "be", "confused", "by", "a", "MLP", "implementation", "in", "the", "core", "of", "cleverhans", "NUMBER", "I", "d", "be", "perfectly", "happy", "moving", "it", "to", "the", "tutorials", "folder", "NUMBER", "Makes", "sense", "NUMBER", "I", "wonder", "if", "there", "s", "a", "need", "for", "use", "Sonnet", "of", "if", "it", "would", "be", "possible", "to", "just", "nix", "all", "model", "build", "dependencies", "and", "write", "it", "with", "pure", "tf", "NUMBER", "But", "yeah", "that", "s", "a", "discussion", "for", "later", "NUMBER", "Yeah", "doing", "that", "now", "NUMBER", "No", "not", "our", "own", "MLP", "Layer", "just", "remove", "all", "specifics", "of", "libraries", "that", "help", "build", "models", "NUMBER", "CleverHans", "has", "its", "own", "Model", "interface", "now", "so", "I", "don", "t", "see", "any", "need", "to", "use", "Keras", "to", "build", "a", "model", "or", "Sonnet", "internally", "NUMBER", "Basically", "I", "would", "argue", "the", "extent", "of", "Keras", "in", "CleverHans", "be", "a", "KerasModelWrapper", "to", "allow", "the", "Keras", "TAG", "CleverHans", "interaction", "NUMBER", "Makes", "sense", "NUMBER", "Whoops", "I", "forgot", "I", "never", "finished", "rewriting", "the", "black", "box", "tutorial", "NUMBER", "Will", "do", "that", "tomorrow", "NUMBER", "The", "blackbox", "test", "fail", "rate", "was", "NUMBER", "instead", "of", "NUMBER", "I", "ve", "adjusted", "the", "test", "NUMBER", "I", "would", "vote", "to", "remove", "all", "thresholds", "from", "these", "test", "and", "just", "use", "them", "as", "do", "it", "crash", "test", "but", "that", "s", "another", "conversation", "for", "later", "NUMBER", "Looks", "like", "I", "may", "have", "decreased", "the", "accuracy", "with", "the", "switch", "away", "from", "keras", "now", "the", "other", "accuracy", "piece", "be", "fail", "NUMBER", "I", "ll", "look", "in", "to", "how", "that", "happened", "NUMBER", "Yeah", "NUMBER", "I", "would", "just", "like", "a", "reproducible", "way", "to", "know", "that", "though", "NUMBER", "Because", "more", "often", "than", "not", "the", "tutorials", "fail", "have", "just", "be", "because", "it", "s", "a", "few", "percent", "below", "the", "threshold", "randomly", "NUMBER", "The", "issue", "be", "that", "dropout", "be", "enable", "during", "evaluation", "time", "without", "keras", "handle", "this", "NUMBER", "I", "don", "t", "especially", "want", "to", "have", "to", "re", "implement", "training", "test", "dropout", "enable", "disable", "for", "our", "own", "MLP", "layer", "but", "I", "will", "if", "I", "have", "to", "NUMBER", "Ian", "any", "thoughts", "on", "how", "to", "do", "this", "easily", "Otherwise", "I", "ll", "just", "add", "a", "cleverhans_learning_phase", "to", "mirror", "keras_learning_phase", "NUMBER", "Okay", "I", "ve", "remove", "dropout", "now", "NUMBER", "I", "don", "t", "want", "to", "decide", "some", "fairly", "deep", "architectural", "change", "to", "how", "models", "exist", "in", "this", "PR", "NUMBER", "Alright", "it", "s", "passing", "now", "NUMBER", "I", "didn", "t", "notice", "a", "difference", "but", "I", "can", "get", "the", "stats", "from", "before", "and", "after", "to", "verify", "NUMBER", "They", "re", "identical", "master", "CW", "model", "accuracy", "NUMBER", "distortion", "NUMBER", "JSMA", "model", "accuracy", "NUMBER", "distortion", "NUMBER", "blackbox", "NUMBER", "secondary", "accuracy", "NUMBER", "remove_keras", "CW", "model", "accuracy", "NUMBER", "distortion", "NUMBER", "JSMA", "model", "accuracy", "NUMBER", "distortion", "NUMBER", "blackbox", "NUMBER", "secondary", "accuracy", "NUMBER", "Remove", "nb_classes", "argument", "from", "CW", "and", "JSMA", "attacks", "NUMBER", "Infer", "it", "from", "the", "shape", "of", "the", "result", "of", "the", "model", "NUMBER", "For", "github", "This", "fix", "NUMBER", "The", "JSMA", "untargeted", "attack", "selects", "the", "target", "class", "at", "random", "a", "better", "result", "can", "be", "obtained", "by", "modifying", "the", "minimization", "objective", "to", "make", "the", "original", "class", "more", "wrong", "instead", "of", "a", "random", "class", "less", "wrong", "NUMBER", "The", "FGM", "BIM", "and", "CW", "attacks", "have", "untargeted", "behave", "in", "this", "way", "and", "it", "would", "be", "more", "clear", "if", "JSMA", "behaved", "this", "way", "too", "NUMBER", "I", "would", "vote", "for", "calling", "this", "something", "different", "then", "NUMBER", "Or", "putting", "a", "docstring", "warning", "maybe", "NUMBER", "I", "have", "code", "that", "do", "this", "sitting", "somewhere", "yeah", "NUMBER", "I", "agree", "that", "some", "kind", "of", "warning", "would", "be", "helpful", "here", "I", "was", "expecting", "the", "untargeted", "JSMA", "attack", "to", "make", "the", "original", "class", "more", "wrong", "NUMBER", "I", "d", "be", "willing", "to", "submit", "a", "PR", "for", "this", "once", "symbolic", "JSMA", "be", "merge", "NUMBER", "So", "the", "attack", "I", "have", "be", "targeted", "by", "design", "and", "the", "untargeted", "attack", "be", "just", "a", "corresponding", "flip", "the", "objective", "type", "of", "thing", "NUMBER", "I", "think", "we", "can", "apply", "that", "to", "JSMA", "too", "NUMBER", "This", "be", "what", "I", "did", "some", "time", "earlier", "last", "year", "when", "I", "wanted", "JSMA", "to", "be", "untargeted", "NUMBER", "It", "would", "definitely", "be", "best", "to", "try", "out", "a", "few", "things", "and", "make", "sure", "that", "we", "pick", "the", "right", "choice", "though", "NUMBER", "Let", "me", "simplify", "notation", "for", "github", "since", "it", "can", "t", "stylize", "math", "and", "assume", "JSMA", "to", "just", "operate", "over", "one", "pixel", "p", "instead", "of", "paris", "pq", "NUMBER", "In", "JSMA", "for", "image", "x", "and", "target", "t", "let", "s", "define", "a_p", "d", "dx_p", "Z", "x", "_t", "b_p", "sum_", "j", "t", "d", "dx_p", "Z", "x", "_j", "So", "that", "to", "perform", "JSMA", "we", "optimize", "for", "argmax_p", "a_p", "b_p", "a_p", "NUMBER", "b_p", "TAG", "NUMBER", "make", "the", "target", "class", "more", "likely", "b_p", "TAG", "NUMBER", "So", "that", "now", "we", "have", "a_p", "NUMBER", "make", "the", "target", "original", "class", "LESS", "likely", "b_p", "TAG", "NUMBER", "be", "consistent", "with", "the", "spirit", "of", "the", "original", "targeted", "JSMA", "attack", "NUMBER", "One", "potential", "limitation", "be", "that", "without", "a", "specific", "target", "class", "the", "attack", "might", "oscillate", "between", "different", "classes", "that", "differ", "from", "the", "original", "class", "before", "one", "of", "them", "be", "assigned", "a", "larger", "logit", "than", "the", "correct", "class", "NUMBER", "For", "this", "reason", "I", "d", "be", "interested", "in", "comparing", "the", "success", "rate", "and", "mean", "perturbation", "of", "strategies", "NUMBER", "and", "NUMBER", "on", "the", "full", "MNIST", "CIFAR", "NUMBER", "test", "sets", "before", "we", "set", "strategy", "to", "be", "the", "default", "untargeted", "strategy", "i", "NUMBER", "e", "NUMBER", "the", "strategy", "followed", "when", "y_target", "None", "in", "SaliencyMapMethod", "NUMBER", "This", "will", "help", "clarify", "whether", "that", "s", "an", "issue", "we", "should", "be", "concerned", "about", "or", "not", "at", "all", "NUMBER", "That", "a", "good", "suggestion", "yes", "we", "could", "make", "three", "function", "runner_up", "least_likely", "and", "random_class", "that", "take", "in", "either", "a", "single", "input", "or", "a", "batch", "of", "inputs", "as", "well", "as", "a", "model", "and", "return", "the", "target", "classes", "encoded", "as", "a", "hot", "one", "vector", "or", "labels", "NUMBER", "npapernot", "I", "agree", "with", "the", "suggestion", "NUMBER", "Continuing", "on", "the", "discussion", "NUMBER", "I", "collected", "Data", "for", "JSMA", "attack", "on", "MNIST", "test", "set", "NUMBER", "Here", "be", "the", "results", "from", "the", "experiment", "NUMBER", "On", "this", "graph", "I", "have", "sorted", "the", "prediction", "probabilities", "perturbations", "from", "the", "targeted", "attacks", "and", "identified", "which", "class", "the", "minimum", "perturbation", "belongs", "to", "NUMBER", "I", "have", "ignored", "the", "true", "class", "NUMBER", "model", "prediction", "accuracy", "was", "NUMBER", "NUMBER", "chart", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "eafb", "NUMBER", "NUMBER", "c", "NUMBER", "b", "NUMBER", "e", "NUMBER", "NUMBER", "d", "d", "NUMBER", "efde", "NUMBER", "jpg", "It", "was", "no", "surprise", "that", "the", "NUMBER", "runner_up", "class", "scored", "the", "highest", "but", "beyond", "that", "there", "was", "good", "spread", "in", "other", "classes", "NUMBER", "This", "means", "choosing", "NUMBER", "runner_up", "class", "as", "the", "target", "class", "will", "result", "us", "in", "the", "least", "perturbed", "adversarial", "images", "around", "NUMBER", "of", "time", "NUMBER", "Also", "as", "part", "of", "the", "experiment", "I", "evaluate", "the", "average", "perturbation", "for", "runner_up", "classes", "and", "compared", "them", "to", "the", "un", "targeted", "JSMA", "perturbations", "NUMBER", "Here", "be", "the", "result", "NUMBER", "chart", "NUMBER", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "f", "NUMBER", "b", "NUMBER", "NUMBER", "c", "NUMBER", "c", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "a", "NUMBER", "c", "NUMBER", "b", "NUMBER", "faca", "NUMBER", "jpg", "As", "we", "can", "see", "un", "targetted", "JSMA", "performs", "quite", "good", "on", "an", "average", "NUMBER", "I", "agree", "that", "there", "be", "possibility", "of", "oscillation", "in", "un", "targetted", "attacks", "but", "the", "correlation", "between", "runner_up", "predicted", "class", "and", "perturbations", "be", "not", "high", "enough", "resulting", "in", "inferior", "attacks", "on", "an", "average", "NUMBER", "These", "results", "be", "for", "JSMA", "attacks", "only", "NUMBER", "Since", "it", "s", "an", "iterative", "attack", "with", "quite", "small", "update", "makes", "it", "good", "candidate", "to", "analyze", "perturbations", "NUMBER", "Thanks", "for", "the", "detailed", "analysis", "NUMBER", "This", "be", "sufficient", "evidence", "to", "start", "implement", "strategy", "NUMBER", "as", "describe", "above", "as", "the", "untargeted", "JSMA", "strategy", "NUMBER", "Could", "you", "put", "a", "PR", "together", "while", "addressing", "the", "comments", "left", "above", "Also", "if", "you", "have", "enough", "time", "it", "would", "be", "nice", "to", "implement", "in", "a", "separate", "PR", "the", "NUMBER", "function", "for", "strategies", "NUMBER", "NUMBER", "as", "Ian", "suggested", "in", "his", "comment", "NUMBER", "If", "you", "don", "t", "have", "time", "I", "ll", "flag", "it", "as", "a", "feature", "improvement", "waiting", "for", "a", "contributor", "in", "the", "issue", "tracker", "NUMBER", "I", "will", "be", "offline", "until", "August", "NUMBER", "at", "which", "point", "I", "will", "take", "a", "look", "at", "the", "PR", "s", "unless", "someone", "else", "already", "approved", "the", "change", "before", "I", "get", "back", "to", "it", "NUMBER", "npapernot", "If", "no", "one", "be", "currently", "work", "on", "this", "can", "I", "take", "it", "up", "I", "need", "to", "decrease", "the", "probability", "of", "assigning", "the", "correct", "class", "and", "then", "implement", "the", "three", "alternative", "strategies", "NUMBER", "NUMBER", "right", "vikramnitin", "NUMBER", "npapernot", "I", "was", "busy", "with", "some", "release", "NUMBER", "I", "will", "be", "submit", "the", "pull", "request", "for", "the", "feature", "in", "a", "week", "s", "time", "NUMBER", "Okay", "at", "the", "end", "of", "the", "attack", "but", "it", "should", "be", "do", "at", "each", "step", "NUMBER", "Thanks", "for", "suggesting", "the", "test", "NUMBER", "I", "made", "sure", "the", "new", "test", "would", "fail", "if", "the", "clipping", "be", "not", "do", "right", "NUMBER", "It", "be", "explained", "in", "a", "comment", "inside", "the", "test", "NUMBER", "As", "discussed", "earlier", "a", "new", "logging", "framework", "for", "enabling", "debug", "message", "during", "attack", "generation", "NUMBER", "While", "I", "implement", "jsma", "method", "with", "my", "data", "I", "saw", "the", "perturbation", "features", "be", "all", "the", "same", "shown", "bleow", "NUMBER", "print", "chosen", "feature", "every", "iteration", "NUMBER", "I", "thought", "it", "cause", "by", "all", "elements", "in", "scores_mask", "be", "NUMBER", "s", "NUMBER", "scores_mask", "NUMBER", "shape", "NUMBER", "NUMBER", "Best", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "nf", "NUMBER", "scores_mask", "NUMBER", "shape", "NUMBER", "NUMBER", "Best", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "nf", "NUMBER", "scores_mask", "NUMBER", "shape", "NUMBER", "NUMBER", "Best", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "nf", "NUMBER", "scores_mask", "NUMBER", "shape", "NUMBER", "NUMBER", "Best", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "nf", "NUMBER", "scores_mask", "NUMBER", "shape", "NUMBER", "NUMBER", "Best", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "nf", "NUMBER", "scores_mask", "NUMBER", "shape", "NUMBER", "NUMBER", "Best", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "nf", "NUMBER", "scores_mask", "NUMBER", "shape", "NUMBER", "NUMBER", "Best", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "nf", "NUMBER", "scores_mask", "NUMBER", "shape", "NUMBER", "NUMBER", "Best", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "nf", "NUMBER", "scores_mask", "NUMBER", "shape", "NUMBER", "NUMBER", "Best", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "nf", "NUMBER", "scores_mask", "NUMBER", "shape", "NUMBER", "NUMBER", "Best", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "nf", "NUMBER", "scores_mask", "NUMBER", "shape", "NUMBER", "NUMBER", "Best", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "nf", "NUMBER", "scores_mask", "NUMBER", "shape", "NUMBER", "NUMBER", "Best", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "nf", "NUMBER", "scores_mask", "NUMBER", "shape", "NUMBER", "NUMBER", "Best", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "nf", "NUMBER", "scores_mask", "NUMBER", "shape", "NUMBER", "NUMBER", "Best", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "nf", "NUMBER", "scores_mask", "NUMBER", "shape", "NUMBER", "NUMBER", "Best", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "nf", "NUMBER", "scores_mask", "NUMBER", "shape", "NUMBER", "NUMBER", "Best", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "nf", "NUMBER", "scores_mask", "NUMBER", "shape", "NUMBER", "NUMBER", "Best", "NUMBER", "p", "NUMBER", "NUMBER", "p", "NUMBER", "NUMBER", "Sorry", "for", "the", "unclear", "description", "NUMBER", "What", "I", "encountered", "be", "I", "find", "some", "samples", "weren", "t", "perturbated", "well", "when", "I", "use", "JSMA", "method", "NUMBER", "I", "set", "the", "distortion", "rate", "as", "NUMBER", "NUMBER", "As", "I", "have", "NUMBER", "input", "features", "it", "should", "iterate", "NUMBER", "times", "assigned", "NUMBER", "features", "in", "JSMA", "def", "jsma", "as", "it", "didn", "t", "cheat", "the", "classifier", "FCNN", "NUMBER", "I", "thought", "my", "average", "distortion", "rate", "would", "reach", "some", "point", "more", "than", "NUMBER", "which", "be", "the", "average", "distortion", "rate", "I", "get", "NUMBER", "I", "dived", "into", "the", "code", "and", "printed", "each", "input", "features", "Saliency", "Map", "def", "saliency_map", "chose", "NUMBER", "Somehow", "in", "some", "samples", "NOT", "all", "samples", "Saliency", "Map", "def", "saliency_map", "chose", "the", "same", "point", "the", "first", "point", "feature", "of", "index", "NUMBER", "all", "the", "time", "NUMBER", "While", "I", "printed", "the", "score", "mask", "NUMBER", "NUMBER", "all", "the", "elements", "in", "score", "mask", "were", "NUMBER", "s", "which", "means", "no", "derivate", "met", "the", "condition", "target_sum", "NUMBER", "other_sum", "TAG", "to", "sign", "NUMBER", "Once", "you", "ve", "sign", "please", "reply", "here", "e", "NUMBER", "g", "NUMBER", "I", "sign", "it", "and", "we", "ll", "verify", "NUMBER", "Thanks", "NUMBER", "If", "you", "ve", "already", "sign", "a", "CLA", "it", "s", "possible", "we", "don", "t", "have", "your", "GitHub", "username", "or", "you", "re", "use", "a", "different", "email", "address", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "If", "your", "company", "sign", "a", "CLA", "they", "designated", "a", "Point", "of", "Contact", "who", "decides", "which", "employees", "be", "authorized", "to", "participate", "NUMBER", "You", "may", "need", "to", "contact", "the", "Point", "of", "Contact", "for", "your", "company", "and", "ask", "to", "be", "add", "to", "the", "group", "of", "authorized", "contributors", "NUMBER", "If", "you", "don", "t", "know", "who", "your", "Point", "of", "Contact", "be", "direct", "the", "project", "maintainer", "to", "go", "cla", "troubleshoot", "NUMBER", "In", "order", "to", "pass", "this", "check", "please", "resolve", "this", "problem", "and", "have", "the", "pull", "request", "author", "add", "another", "comment", "and", "the", "bot", "will", "run", "again", "NUMBER", "TAG", "I", "ve", "sign", "the", "CLA", "NUMBER", "CLAs", "look", "good", "thanks", "TAG", "When", "I", "run", "ex_cifar", "NUMBER", "_tf", "NUMBER", "py", "example", "the", "model", "appears", "not", "to", "train", "NUMBER", "That", "be", "the", "printed", "test", "accuracy", "be", "NUMBER", "after", "every", "epoch", "of", "non", "adversarial", "training", "NUMBER", "Perhaps", "I", "be", "misunderstanding", "what", "this", "script", "be", "intended", "to", "do", "I", "have", "a", "branch", "for", "this", "and", "will", "push", "it", "some", "time", "soon", "NUMBER", "This", "should", "let", "users", "run", "JSMA", "attacks", "and", "all", "others", "use", "generate_np", "on", "models", "that", "require", "more", "feed_dict", "parameters", "than", "just", "inputs", "NUMBER", "Note", "I", "m", "use", "the", "attacks_tf", "helpers", "rather", "than", "the", "abstract", "attacks", "interface", "since", "it", "doesn", "t", "seem", "to", "be", "compatible", "with", "the", "rest", "of", "my", "code", "so", "I", "only", "add", "a", "test", "for", "that", "case", "but", "it", "might", "be", "good", "to", "add", "more", "test", "to", "verify", "it", "works", "with", "the", "main", "interface", "NUMBER", "Sure", "sounds", "good", "I", "ll", "slim", "down", "the", "PR", "so", "it", "just", "affects", "attacks_tf", "which", "solves", "my", "problem", "NUMBER", "OK", "to", "merge", "once", "the", "slim", "dependency", "has", "be", "remove", "in", "the", "test", "Done", "As", "discussed", "on", "the", "mailing", "list", "use", "better", "keyword", "argument", "for", "targeted", "attacks", "NUMBER", "This", "also", "implement", "targeted", "attacks", "for", "FGM", "and", "BIM", "NUMBER", "Pending", "test", "results", "this", "be", "ready", "to", "merge", "NUMBER", "This", "should", "give", "a", "boost", "when", "downloading", "the", "images", "NUMBER", "My", "PEP", "NUMBER", "linter", "cried", "until", "I", "change", "the", "indentation", "level", "to", "NUMBER", "spaces", "I", "hope", "that", "s", "fine", "Thanks", "for", "your", "pull", "request", "NUMBER", "It", "looks", "like", "this", "may", "be", "your", "first", "contribution", "to", "a", "Google", "open", "source", "project", "NUMBER", "Before", "we", "can", "look", "at", "your", "pull", "request", "you", "ll", "need", "to", "sign", "a", "Contributor", "License", "Agreement", "CLA", "NUMBER", "memo", "Please", "visit", "TAG", "to", "sign", "NUMBER", "Once", "you", "ve", "sign", "please", "reply", "here", "e", "NUMBER", "g", "NUMBER", "I", "sign", "it", "and", "we", "ll", "verify", "NUMBER", "Thanks", "NUMBER", "If", "you", "ve", "already", "sign", "a", "CLA", "it", "s", "possible", "we", "don", "t", "have", "your", "GitHub", "username", "or", "you", "re", "use", "a", "different", "email", "address", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "If", "your", "company", "sign", "a", "CLA", "they", "designated", "a", "Point", "of", "Contact", "who", "decides", "which", "employees", "be", "authorized", "to", "participate", "NUMBER", "You", "may", "need", "to", "contact", "the", "Point", "of", "Contact", "for", "your", "company", "and", "ask", "to", "be", "add", "to", "the", "group", "of", "authorized", "contributors", "NUMBER", "If", "you", "don", "t", "know", "who", "your", "Point", "of", "Contact", "be", "direct", "the", "project", "maintainer", "to", "go", "cla", "troubleshoot", "NUMBER", "In", "order", "to", "pass", "this", "check", "please", "resolve", "this", "problem", "and", "have", "the", "pull", "request", "author", "add", "another", "comment", "and", "the", "bot", "will", "run", "again", "NUMBER", "TAG", "I", "sign", "it", "CLAs", "look", "good", "thanks", "TAG", "Dear", "AlexeyKurakin", "Thanks", "a", "lot", "for", "your", "extensive", "feedback", "NUMBER", "I", "remove", "the", "additional", "dependencies", "and", "copied", "the", "code", "to", "download_images_multiprocessed", "NUMBER", "py", "just", "as", "you", "said", "NUMBER", "A", "minor", "change", "I", "applied", "to", "both", "version", "was", "to", "check", "first", "whether", "the", "output", "directory", "already", "exists", "before", "downloading", "the", "images", "into", "it", "NUMBER", "Best", "Regards", "Willi", "Thanks", "again", "for", "your", "feedback", "Now", "I", "m", "checking", "whether", "output_dir", "be", "a", "relative", "or", "absolute", "path", "and", "handle", "that", "accordingly", "NUMBER", "The", "multi", "threading", "version", "was", "merge", "into", "the", "original", "download_images", "file", "and", "a", "flag", "was", "add", "NUMBER", "The", "README", "was", "adapted", "correspondingly", "NUMBER", "Sorry", "for", "the", "delay", "NUMBER", "I", "was", "too", "busy", "with", "evaluation", "of", "the", "first", "round", "of", "the", "competition", "that", "s", "why", "didn", "t", "update", "this", "PR", "NUMBER", "I", "have", "few", "more", "minor", "comments", "which", "I", "will", "post", "soon", "NUMBER", "npapernot", "I", "m", "sorry", "about", "not", "implement", "the", "feedback", "on", "time", "and", "not", "answering", "your", "question", "NUMBER", "That", "was", "a", "busy", "month", "NUMBER", "I", "d", "be", "very", "happy", "if", "you", "could", "reopen", "this", "PR", "again", "and", "have", "a", "look", "at", "the", "change", "once", "again", "I", "just", "push", "On", "downloading", "the", "images", "I", "get", "this", "warning", "for", "image", "NUMBER", "Downloaded", "NUMBER", "images", "home", "shpeley", "miniconda", "NUMBER", "lib", "python", "NUMBER", "site", "package", "PIL", "Image", "NUMBER", "py", "NUMBER", "DecompressionBombWarning", "Image", "size", "NUMBER", "pixels", "exceeds", "limit", "of", "NUMBER", "pixels", "could", "be", "decompression", "bomb", "DOS", "attack", "NUMBER", "DecompressionBombWarning", "and", "also", "this", "warning", "Downloaded", "NUMBER", "images", "home", "shpeley", "miniconda", "NUMBER", "lib", "python", "NUMBER", "site", "package", "PIL", "TiffImagePlugin", "NUMBER", "py", "NUMBER", "UserWarning", "Corrupt", "EXIF", "data", "NUMBER", "Expecting", "to", "read", "NUMBER", "bytes", "but", "only", "get", "NUMBER", "warnings", "NUMBER", "warn", "str", "msg", "Yet", "when", "I", "check", "the", "file", "with", "ls", "dataset", "images", "l", "there", "s", "no", "apparent", "file", "size", "issue", "NUMBER", "Using", "ls", "dataset", "images", "wc", "l", "shows", "a", "count", "of", "NUMBER", "file", "so", "no", "file", "be", "miss", "NUMBER", "Removing", "the", "images", "directory", "and", "reinstalling", "gave", "the", "same", "error", "NUMBER", "I", "m", "use", "python", "NUMBER", "and", "pillow", "NUMBER", "I", "suppose", "this", "be", "relate", "to", "the", "adversarial", "examples", "competition", "for", "NIPS", "If", "yes", "AlexeyKurakin", "might", "have", "the", "answer", "to", "your", "problem", "Yes", "NUMBER", "These", "be", "the", "images", "install", "through", "the", "download_data", "NUMBER", "sh", "script", "in", "the", "examples", "nips", "NUMBER", "_adversarial_competition", "folder", "NUMBER", "Looking", "at", "dev_dataset", "NUMBER", "csv", "image", "NUMBER", "has", "this", "data", "NUMBER", "ImageId", "URL", "x", "NUMBER", "y", "NUMBER", "x", "NUMBER", "y", "NUMBER", "TrueLabel", "TargetClass", "OriginalLandingURL", "ad", "NUMBER", "e", "NUMBER", "c", "NUMBER", "db", "NUMBER", "d", "LINK", "_d", "NUMBER", "d", "NUMBER", "b_o", "NUMBER", "jpg", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "LINK", "N", "NUMBER", "NUMBER", "This", "be", "the", "photo", "cropped", "and", "scaled", "from", "the", "images", "folder", "NUMBER", "ad", "NUMBER", "e", "NUMBER", "c", "NUMBER", "db", "NUMBER", "d", "LINK", "images", "NUMBER", "githubusercontent", "NUMBER", "com", "NUMBER", "NUMBER", "NUMBER", "c", "NUMBER", "b", "NUMBER", "ee", "NUMBER", "NUMBER", "ead", "NUMBER", "e", "NUMBER", "NUMBER", "b", "NUMBER", "ebc", "NUMBER", "aba", "NUMBER", "png", "If", "that", "s", "how", "the", "cropping", "and", "rotation", "were", "intended", "the", "image", "came", "out", "fine", "NUMBER", "There", "was", "definitely", "nothing", "which", "would", "blow", "up", "the", "number", "of", "pixels", "for", "a", "DOS", "attack", "NUMBER", "Perhaps", "this", "error", "be", "new", "in", "pillow", "NUMBER", "As", "a", "separate", "issue", "if", "that", "s", "not", "the", "cropping", "and", "rotation", "you", "re", "looking", "for", "then", "the", "download_image", "function", "in", "download_images", "NUMBER", "py", "needs", "to", "read", "the", "exif", "rotational", "data", "and", "rotate", "the", "image", "if", "needed", "before", "applying", "crop", "and", "resize", "NUMBER", "New", "L", "NUMBER", "attack", "implementation", "from", "Towards", "Evaluating", "the", "Robustness", "of", "Neural", "Networks", "NUMBER", "Commits", "be", "cherry", "pick", "from", "NUMBER", "Thanks", "a", "lot", "for", "the", "PR", "Nicholas", "I", "left", "a", "few", "comments", "for", "the", "first", "part", "of", "the", "code", "and", "will", "take", "a", "look", "again", "when", "you", "get", "a", "chance", "to", "make", "the", "edits", "but", "I", "suspect", "the", "other", "file", "be", "more", "straightforward", "from", "the", "quick", "glance", "I", "took", "NUMBER", "The", "test", "be", "fail", "because", "of", "the", "two", "following", "pep", "NUMBER", "error", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "W", "NUMBER", "trail", "whitespace", "home", "travis", "build", "tensorflow", "cleverhans", "cleverhans", "attacks", "NUMBER", "py", "NUMBER", "NUMBER", "W", "NUMBER", "trail", "whitespace", "I", "have", "a", "fix", "for", "those", "pep", "NUMBER", "error", "along", "with", "remove", "the", "attacks_tf", "NUMBER", "py", "extra", "class", "to", "make", "the", "code", "cleaner", "NUMBER", "If", "not", "do", "tonight", "will", "be", "do", "tomorrow", "NUMBER", "Re", "standardizing", "on", "targeted", "y", "etc", "NUMBER", "do", "we", "maybe", "want", "to", "make", "targeted", "and", "non", "targeted", "attacks", "official", "part", "of", "the", "Attack", "interface", "So", "there", "s", "good", "news", "and", "bad", "news", "NUMBER", "thumbsup", "The", "good", "news", "be", "that", "everyone", "that", "needs", "to", "sign", "a", "CLA", "the", "pull", "request", "submitter", "and", "all", "commit", "authors", "have", "do", "so", "NUMBER", "Everything", "be", "all", "good", "there", "NUMBER", "confused", "The", "bad", "news", "be", "that", "it", "appears", "that", "one", "or", "more", "commit", "were", "authored", "by", "someone", "other", "than", "the", "pull", "request", "submitter", "NUMBER", "We", "need", "to", "confirm", "that", "they", "re", "okay", "with", "their", "commit", "be", "contributed", "to", "this", "project", "NUMBER", "Please", "have", "them", "confirm", "that", "here", "in", "the", "pull", "request", "NUMBER", "Note", "to", "project", "maintainer", "This", "be", "a", "terminal", "state", "meaning", "the", "cla", "google", "commit", "status", "will", "not", "change", "from", "this", "state", "NUMBER", "It", "s", "up", "to", "you", "to", "confirm", "consent", "of", "the", "commit", "author", "s", "and", "merge", "this", "pull", "request", "when", "appropriate", "NUMBER", "TAG", "CLAs", "look", "good", "thanks", "TAG", "Rebase", "seems", "to", "have", "slightly", "confused", "googlebot", "NUMBER", "Unless", "there", "s", "anything", "else", "I", "m", "happy", "with", "the", "current", "state", "of", "the", "commit", "NUMBER", "The", "final", "possible", "change", "I", "have", "in", "mind", "would", "be", "to", "remove", "nb_classes", "and", "just", "figure", "it", "out", "based", "on", "the", "model", "but", "I", "think", "I", "will", "do", "that", "in", "a", "separate", "PR", "so", "I", "can", "fix", "JSMA", "too", "NUMBER", "This", "be", "outside", "of", "the", "cleverhans", "or", "tutorials", "folders", "LGTM", "I", "run", "the", "tutorial", "code", "call", "mnist_blackbox", "NUMBER", "py", "however", "the", "result", "be", "not", "the", "expected", "for", "the", "test", "accuracy", "of", "oracle", "on", "adversarial", "generate", "use", "the", "substitute", "be", "NUMBER", "It", "seems", "the", "adversarial", "examples", "have", "little", "effect", "on", "the", "test", "accuracy", "NUMBER", "Has", "anyone", "else", "meet", "this", "problem", "By", "the", "way", "the", "version", "of", "tensorflow", "I", "use", "be", "NUMBER", "I", "think", "it", "s", "not", "the", "problem", "of", "tensorflow", "NUMBER", "Successfully", "downloaded", "train", "images", "idx", "NUMBER", "ubyte", "NUMBER", "gz", "NUMBER", "bytes", "NUMBER", "Extracting", "tmp", "train", "images", "idx", "NUMBER", "ubyte", "NUMBER", "gz", "Successfully", "downloaded", "train", "labels", "idx", "NUMBER", "ubyte", "NUMBER", "gz", "NUMBER", "bytes", "NUMBER", "Extracting", "tmp", "train", "labels", "idx", "NUMBER", "ubyte", "NUMBER", "gz", "Successfully", "downloaded", "t", "NUMBER", "k", "images", "idx", "NUMBER", "ubyte", "NUMBER", "gz", "NUMBER", "bytes", "NUMBER", "Extracting", "tmp", "t", "NUMBER", "k", "images", "idx", "NUMBER", "ubyte", "NUMBER", "gz", "Successfully", "downloaded", "t", "NUMBER", "k", "labels", "idx", "NUMBER", "ubyte", "NUMBER", "gz", "NUMBER", "bytes", "NUMBER", "Extracting", "tmp", "t", "NUMBER", "k", "labels", "idx", "NUMBER", "ubyte", "NUMBER", "gz", "X_train", "shape", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "X_test", "shape", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "Preparing", "the", "black", "box", "model", "NUMBER", "Defined", "TensorFlow", "model", "graph", "NUMBER", "Completed", "model", "training", "NUMBER", "Test", "accuracy", "of", "black", "box", "on", "legitimate", "test", "examples", "NUMBER", "Training", "the", "substitute", "model", "NUMBER", "Defined", "TensorFlow", "model", "graph", "for", "the", "substitute", "NUMBER", "Substitute", "training", "epoch", "NUMBER", "Completed", "model", "training", "NUMBER", "Augmenting", "substitute", "training", "data", "NUMBER", "Labeling", "substitute", "training", "data", "NUMBER", "Substitute", "training", "epoch", "NUMBER", "Completed", "model", "training", "NUMBER", "Augmenting", "substitute", "training", "data", "NUMBER", "Labeling", "substitute", "training", "data", "NUMBER", "Substitute", "training", "epoch", "NUMBER", "Completed", "model", "training", "NUMBER", "Augmenting", "substitute", "training", "data", "NUMBER", "Labeling", "substitute", "training", "data", "NUMBER", "Substitute", "training", "epoch", "NUMBER", "Completed", "model", "training", "NUMBER", "Augmenting", "substitute", "training", "data", "NUMBER", "Labeling", "substitute", "training", "data", "NUMBER", "Substitute", "training", "epoch", "NUMBER", "Completed", "model", "training", "NUMBER", "Augmenting", "substitute", "training", "data", "NUMBER", "Labeling", "substitute", "training", "data", "NUMBER", "Substitute", "training", "epoch", "NUMBER", "Completed", "model", "training", "NUMBER", "Test", "accuracy", "of", "oracle", "on", "adversarial", "examples", "generate", "use", "the", "substitute", "NUMBER", "Yes", "there", "be", "a", "relate", "issue", "raise", "NUMBER", "NUMBER", "Switched", "to", "the", "Adam", "optimizer", "has", "resulted", "this", "drop", "in", "accuracy", "NUMBER", "Using", "Adadelta", "will", "get", "you", "better", "results", "a", "test", "accuracy", "of", "NUMBER", "on", "the", "adversarial", "samples", "NUMBER", "Something", "will", "be", "do", "about", "this", "soon", "NUMBER", "Yes", "I", "might", "rewrite", "the", "tutorial", "later", "to", "show", "how", "transferability", "be", "affected", "by", "the", "different", "architecture", "choices", "e", "NUMBER", "g", "NUMBER", "including", "convolutions", "vs", "NUMBER", "not", "including", "any", "NUMBER", "But", "I", "have", "a", "note", "in", "my", "todo", "list", "to", "do", "this", "it", "s", "not", "necessary", "to", "keep", "the", "issue", "open", "NUMBER", "all", "other", "code", "has", "NUMBER", "spaces", "I", "don", "t", "have", "a", "strong", "opinion", "but", "PEP", "NUMBER", "says", "python", "should", "have", "NUMBER", "spaces", "and", "all", "non", "google", "python", "code", "I", "m", "aware", "of", "uses", "NUMBER", "NUMBER", "Do", "you", "see", "any", "benefits", "of", "going", "to", "NUMBER", "spaces", "My", "bad", "NUMBER", "This", "was", "a", "mistake", "I", "meant", "to", "say", "that", "most", "of", "the", "code", "base", "has", "NUMBER", "spaces", "but", "the", "tutorial", "has", "NUMBER", "spaces", "NUMBER", "I", "don", "t", "have", "a", "preference", "towards", "NUMBER", "or", "NUMBER", "spaces", "and", "be", "happy", "to", "use", "either", "NUMBER", "see", "NUMBER", "I", "be", "currently", "work", "on", "it", "NUMBER", "For", "the", "MNIST", "tutorials", "we", "can", "increase", "the", "adversarial", "examples", "after", "adversarial", "training", "from", "NUMBER", "to", "NUMBER", "However", "I", "just", "realized", "that", "switching", "to", "Adam", "messed", "up", "the", "blackbox", "tutorial", "NUMBER", "Originally", "test", "accuracy", "of", "oracle", "on", "samples", "generate", "by", "substitute", "was", "roughly", "NUMBER", "but", "switching", "to", "Adam", "has", "actually", "made", "that", "worse", "it", "be", "now", "a", "little", "over", "NUMBER", "abhibhav", "NUMBER", "Did", "you", "make", "any", "progress", "on", "this", "If", "not", "I", "ll", "probably", "make", "a", "PR", "soon", "to", "address", "this", "issue", "because", "some", "of", "the", "test", "be", "more", "frequently", "flaky", "because", "of", "the", "new", "optimizers", "For", "each", "of", "the", "test", "I", "have", "reassessed", "the", "accuracies", "and", "made", "a", "pull", "request", "at", "NUMBER", "NUMBER", "For", "the", "blackbox", "attack", "the", "accuracy", "of", "the", "blackbox", "on", "the", "adversarial", "examples", "in", "the", "test", "be", "quite", "low", "since", "the", "blackbox", "network", "be", "trained", "on", "a", "limited", "set", "on", "a", "few", "epochs", "NUMBER", "However", "I", "still", "have", "not", "be", "able", "to", "fix", "the", "tutorial", "NUMBER", "I", "tried", "doubling", "the", "holdout", "but", "this", "barely", "decreases", "the", "accuracy", "by", "about", "NUMBER", "while", "taking", "up", "double", "the", "time", "as", "before", "NUMBER", "Running", "the", "test", "on", "the", "black", "box", "tutorial", "be", "hard", "because", "it", "be", "expensive", "to", "do", "the", "data", "augmentation", "NUMBER", "One", "way", "to", "make", "the", "test", "more", "representative", "might", "be", "to", "make", "the", "black", "box", "and", "substitute", "models", "more", "similar", "in", "the", "tutorial", "itself", "NUMBER", "I", "m", "not", "sure", "this", "be", "the", "way", "we", "want", "to", "go", "though", "so", "the", "tutorial", "doesn", "t", "loose", "generality", "NUMBER", "The", "model", "we", "get", "be", "quite", "a", "bit", "more", "accurate", "with", "Adam", "reaching", "NUMBER", "compared", "to", "the", "NUMBER", "of", "the", "current", "model", "but", "at", "the", "cost", "of", "accuracy", "on", "the", "adversarial", "samples", "which", "goes", "up", "from", "NUMBER", "to", "NUMBER", "all", "on", "MNIST", "NUMBER", "The", "loss", "function", "itself", "probably", "becomes", "zero", "for", "some", "inputs", "which", "causes", "the", "gradient", "sign", "method", "to", "fail", "more", "NUMBER", "The", "above", "was", "after", "NUMBER", "epochs", "NUMBER", "I", "be", "get", "variation", "over", "run", "NUMBER", "In", "the", "end", "after", "the", "adversarial", "training", "I", "get", "NUMBER", "accuracy", "on", "the", "adversarial", "samples", "NUMBER", "And", "yeah", "the", "model", "be", "not", "hitting", "machine", "zero", "in", "this", "case", "NUMBER", "use", "the", "original", "Adadelta", "before", "training", "NUMBER", "and", "after", "training", "NUMBER", "use", "adam", "before", "training", "NUMBER", "and", "after", "training", "NUMBER", "Adam", "seems", "overall", "better", "NUMBER", "I", "will", "run", "everything", "a", "couple", "of", "more", "times", "to", "make", "sure", "the", "trend", "continues", "then", "send", "one", "in", "NUMBER", "goodfeli", "Everything", "checks", "out", "fine", "I", "have", "made", "a", "PR", "NUMBER", "where", "I", "made", "the", "change", "to", "the", "utils_tf", "and", "also", "all", "the", "relevant", "tutorials", "NUMBER", "NUMBER", "was", "merge", "so", "it", "looks", "like", "we", "can", "close", "this", "Should", "we", "increase", "the", "values", "in", "the", "test", "to", "match", "For", "example", "right", "now", "the", "test_mnist_tutorial_tf", "just", "expects", "adv_train_adv_eval", "to", "be", "greater", "than", "NUMBER", "but", "we", "can", "now", "increase", "this", "by", "a", "bit", "NUMBER", "Good", "catch", "I", "opened", "NUMBER", "to", "not", "forget", "about", "this", "The", "pull", "request", "be", "to", "address", "the", "problem", "of", "How", "to", "save", "and", "load", "model", "NUMBER", "LINK", "Ok", "now", "the", "CLA", "check", "pass", "but", "the", "test", "be", "broken", "because", "the", "tutorial", "should", "receive", "the", "flag", "values", "as", "optional", "argument", "of", "the", "mnist_tutorial", "function", "and", "not", "through", "FLAGS", "directly", "NUMBER", "Why", "did", "you", "close", "this", "shenqixiaojiang", "Sorry", "I", "m", "new", "to", "the", "Pull", "Request", "of", "github", "NUMBER", "If", "the", "close", "operation", "had", "bad", "effect", "I", "will", "be", "very", "sorry", "for", "this", "NUMBER", "npapernot", "These", "test", "be", "really", "slow", "to", "run", "flakey", "and", "should", "be", "replaced", "by", "unit", "test", "of", "each", "individual", "method", "NUMBER", "Given", "that", "NUMBER", "cut", "test", "time", "to", "about", "NUMBER", "mn", "I", "m", "going", "to", "close", "this", "for", "now", "NUMBER", "Once", "unit", "test", "have", "a", "better", "coverage", "of", "the", "code", "base", "we", "can", "decrease", "the", "test", "time", "even", "more", "by", "further", "reducing", "the", "problem", "size", "of", "tutorial", "test", "NUMBER", "So", "there", "s", "good", "news", "and", "bad", "news", "NUMBER", "thumbsup", "The", "good", "news", "be", "that", "everyone", "that", "needs", "to", "sign", "a", "CLA", "the", "pull", "request", "submitter", "and", "all", "commit", "authors", "have", "do", "so", "NUMBER", "Everything", "be", "all", "good", "there", "NUMBER", "confused", "The", "bad", "news", "be", "that", "it", "appears", "that", "one", "or", "more", "commit", "were", "authored", "by", "someone", "other", "than", "the", "pull", "request", "submitter", "NUMBER", "We", "need", "to", "confirm", "that", "they", "re", "okay", "with", "their", "commit", "be", "contributed", "to", "this", "project", "NUMBER", "Please", "have", "them", "confirm", "that", "here", "in", "the", "pull", "request", "NUMBER", "Note", "to", "project", "maintainer", "This", "be", "a", "terminal", "state", "meaning", "the", "cla", "google", "commit", "status", "will", "not", "change", "from", "this", "state", "NUMBER", "It", "s", "up", "to", "you", "to", "confirm", "consent", "of", "the", "commit", "author", "s", "and", "merge", "this", "pull", "request", "when", "appropriate", "NUMBER", "TAG", "The", "CLA", "bot", "appears", "confused", "by", "the", "fact", "I", "resolve", "conflict", "on", "the", "web", "interface", "NUMBER", "Found", "some", "PEP", "NUMBER", "error", "will", "fix", "them", "in", "a", "few", "min", "The", "example", "uses", "the", "classes", "from", "the", "pure", "tf", "implementation", "NUMBER", "NUMBER", "Thanks", "for", "your", "pull", "request", "NUMBER", "It", "looks", "like", "this", "may", "be", "your", "first", "contribution", "to", "a", "Google", "open", "source", "project", "NUMBER", "Before", "we", "can", "look", "at", "your", "pull", "request", "you", "ll", "need", "to", "sign", "a", "Contributor", "License", "Agreement", "CLA", "NUMBER", "memo", "Please", "visit", "TAG", "to", "sign", "NUMBER", "Once", "you", "ve", "sign", "please", "reply", "here", "e", "NUMBER", "g", "NUMBER", "I", "sign", "it", "and", "we", "ll", "verify", "NUMBER", "Thanks", "NUMBER", "If", "you", "ve", "already", "sign", "a", "CLA", "it", "s", "possible", "we", "don", "t", "have", "your", "GitHub", "username", "or", "you", "re", "use", "a", "different", "email", "address", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "If", "your", "company", "sign", "a", "CLA", "they", "designated", "a", "Point", "of", "Contact", "who", "decides", "which", "employees", "be", "authorized", "to", "participate", "NUMBER", "You", "may", "need", "to", "contact", "the", "Point", "of", "Contact", "for", "your", "company", "and", "ask", "to", "be", "add", "to", "the", "group", "of", "authorized", "contributors", "NUMBER", "If", "you", "don", "t", "know", "who", "your", "Point", "of", "Contact", "be", "direct", "the", "project", "maintainer", "to", "go", "cla", "troubleshoot", "NUMBER", "In", "order", "to", "pass", "this", "check", "please", "resolve", "this", "problem", "and", "have", "the", "pull", "request", "author", "add", "another", "comment", "and", "the", "bot", "will", "run", "again", "NUMBER", "TAG", "I", "sign", "it", "CLAs", "look", "good", "thanks", "TAG", "Thank", "you", "for", "the", "pull", "request", "I", "left", "a", "few", "comments", "in", "my", "review", "above", "NUMBER", "Feel", "free", "to", "ping", "me", "if", "you", "have", "any", "question", "Agreed", "Now", "that", "the", "model", "abstraction", "be", "merge", "it", "s", "OK", "to", "revisit", "this", "NUMBER", "I", "see", "there", "be", "change", "request", "by", "npapernot", "NUMBER", "I", "will", "make", "those", "change", "and", "also", "change", "the", "tutorial", "to", "use", "the", "new", "model", "abstraction", "NUMBER", "Just", "so", "you", "know", "there", "will", "also", "be", "change", "push", "to", "the", "generate_np", "method", "per", "what", "was", "discussed", "on", "the", "mailing", "list", "NUMBER", "The", "new", "generate_np", "method", "will", "be", "merge", "first", "because", "NUMBER", "has", "be", "rebased", "multiple", "times", "already", "NUMBER", "npapernot", "Given", "the", "extent", "of", "change", "to", "the", "library", "I", "think", "it", "would", "be", "best", "to", "close", "this", "PR", "and", "create", "a", "new", "one", "NUMBER", "Some", "attacks", "operate", "with", "the", "model", "s", "logits", "and", "others", "with", "the", "softmax", "probs", "NUMBER", "We", "should", "improve", "the", "documentation", "to", "make", "sure", "it", "be", "clear", "when", "the", "model", "argument", "of", "an", "attack", "class", "needs", "to", "be", "logits", "and", "when", "it", "needs", "to", "be", "softmax", "probs", "see", "NUMBER", "NUMBER", "In", "addition", "we", "could", "use", "NUMBER", "to", "have", "some", "more", "automate", "checks", "in", "the", "__init__", "method", "of", "attacks", "that", "test", "whether", "the", "model", "argument", "be", "appropriate", "NUMBER", "There", "could", "also", "be", "some", "more", "generic", "checks", "looking", "for", "the", "TensorFlow", "softmax", "op", "NUMBER", "Now", "that", "the", "model", "abstraction", "be", "merge", "we", "should", "allow", "a", "model", "object", "to", "be", "pass", "to", "the", "attacks", "to", "make", "these", "things", "more", "clear", "NUMBER", "Besides", "that", "a", "pass", "to", "the", "docstrings", "to", "check", "for", "consistency", "in", "the", "description", "of", "what", "layer", "be", "expected", "to", "be", "fed", "should", "be", "sufficient", "to", "close", "this", "issue", "NUMBER", "NUMBER", "takes", "care", "of", "the", "first", "point", "Is", "this", "do", "JSMA", "be", "implement", "at", "the", "logit", "layer", "pre", "softmax", "NUMBER", "However", "the", "tutorial", "implement", "it", "after", "the", "softmax", "NUMBER", "Add", "some", "keras", "specific", "code", "to", "remove", "the", "last", "softmax", "layer", "NUMBER", "Hmm", "NUMBER", "it", "looks", "like", "the", "accuracy", "test", "has", "fail", "NUMBER", "Nicolas", "should", "JSMA", "operate", "post", "softmax", "on", "these", "networks", "If", "so", "the", "documentation", "should", "probably", "change", "NUMBER", "It", "looks", "like", "it", "s", "not", "doing", "this", "even", "if", "it", "was", "then", "remove", "the", "softmax", "should", "be", "a", "no", "op", "NUMBER", "The", "JSMA", "should", "be", "able", "to", "run", "with", "both", "the", "logits", "and", "softmax", "outputs", "NUMBER", "Did", "you", "make", "this", "PR", "because", "the", "implementation", "fail", "on", "some", "network", "I", "talked", "to", "Nicholas", "in", "real", "life", "There", "be", "no", "specific", "need", "to", "remove", "the", "softmax", "layer", "at", "the", "moment", "NUMBER", "However", "we", "should", "update", "the", "documentation", "to", "say", "that", "the", "model", "can", "be", "pre", "or", "post", "softmax", "NUMBER", "I", "will", "also", "open", "a", "new", "issue", "because", "we", "could", "build", "on", "NUMBER", "and", "additional", "code", "to", "clarify", "which", "attacks", "need", "the", "logits", "and", "which", "ones", "need", "the", "softmax", "outputs", "NUMBER", "In", "addition", "to", "improving", "the", "documentation", "this", "may", "require", "add", "some", "sanity", "checks", "on", "the", "model", "argument", "when", "initializing", "the", "different", "attacks", "NUMBER", "Would", "it", "make", "sense", "to", "require", "that", "the", "model", "argument", "be", "an", "instance", "of", "the", "new", "model", "abstraction", "class", "This", "would", "allow", "the", "attack", "to", "have", "more", "guarantees", "about", "the", "structure", "of", "the", "model", "NUMBER", "It", "would", "also", "make", "it", "easier", "for", "attacks", "to", "have", "a", "robust", "access", "to", "the", "logits", "layer", "or", "softmax", "layer", "NUMBER", "I", "talked", "to", "Nicholas", "about", "the", "performance", "drop", "he", "observed", "when", "change", "the", "tutorial", "NUMBER", "Basically", "users", "should", "first", "try", "to", "run", "the", "JSMA", "attack", "use", "probabilities", "which", "be", "likely", "to", "work", "better", "in", "most", "cases", "NUMBER", "If", "they", "encounter", "numerical", "issue", "when", "computing", "the", "Jacobian", "they", "can", "try", "feeding", "in", "the", "logits", "directly", "which", "can", "work", "better", "if", "the", "numerical", "instabilities", "be", "due", "to", "the", "softmax", "NUMBER", "This", "be", "why", "we", "use", "the", "logits", "in", "the", "original", "paper", "and", "then", "the", "probabilities", "in", "subsequent", "papers", "NUMBER", "I", "ve", "implement", "the", "attack", "algorithm", "I", "describe", "in", "Towards", "Evaluating", "the", "Robustness", "of", "Neural", "Networks", "NUMBER", "This", "should", "not", "be", "merge", "until", "Bug", "NUMBER", "be", "decided", "for", "a", "proper", "implementation", "of", "how", "we", "want", "to", "do", "handle", "multiple", "calls", "to", "generate_np", "NUMBER", "Right", "now", "it", "be", "correct", "but", "not", "efficient", "NUMBER", "Thanks", "for", "the", "PR", "I", "took", "a", "first", "pass", "and", "left", "a", "few", "comments", "NUMBER", "I", "ll", "have", "to", "take", "a", "closer", "look", "again", "later", "NUMBER", "on", "doing", "things", "in", "that", "order", "so", "we", "don", "t", "have", "to", "rebase", "the", "PR", "My", "rebase", "messed", "up", "the", "comments", "NUMBER", "I", "think", "I", "m", "going", "to", "avoid", "rewriting", "JSMA", "and", "VAT", "generate_np", "in", "this", "PR", "and", "make", "another", "one", "for", "those", "after", "this", "one", "gets", "merge", "in", "NUMBER", "Given", "the", "recent", "discussion", "regard", "PR", "NUMBER", "I", "think", "this", "code", "can", "be", "merge", "mostly", "independently", "that", "be", "attacks", "will", "still", "work", "the", "same", "way", "by", "use", "__call__", "they", "will", "just", "be", "call", "differently", "NUMBER", "The", "only", "conflict", "will", "be", "in", "the", "tutorials", "NUMBER", "So", "there", "s", "good", "news", "and", "bad", "news", "NUMBER", "thumbsup", "The", "good", "news", "be", "that", "everyone", "that", "needs", "to", "sign", "a", "CLA", "the", "pull", "request", "submitter", "and", "all", "commit", "authors", "have", "do", "so", "NUMBER", "Everything", "be", "all", "good", "there", "NUMBER", "confused", "The", "bad", "news", "be", "that", "it", "appears", "that", "one", "or", "more", "commit", "were", "authored", "by", "someone", "other", "than", "the", "pull", "request", "submitter", "NUMBER", "We", "need", "to", "confirm", "that", "they", "re", "okay", "with", "their", "commit", "be", "contributed", "to", "this", "project", "NUMBER", "Please", "have", "them", "confirm", "that", "here", "in", "the", "pull", "request", "NUMBER", "Note", "to", "project", "maintainer", "This", "be", "a", "terminal", "state", "meaning", "the", "cla", "google", "commit", "status", "will", "not", "change", "from", "this", "state", "NUMBER", "It", "s", "up", "to", "you", "to", "confirm", "consent", "of", "the", "commit", "author", "s", "and", "merge", "this", "pull", "request", "when", "appropriate", "NUMBER", "TAG", "I", "rebased", "again", "and", "it", "seems", "this", "has", "confused", "googlebot", "NUMBER", "OK", "model", "abstraction", "merge", "ready", "to", "rebase", "this", "Working", "on", "that", "now", "NUMBER", "This", "be", "an", "ugly", "rebase", "NUMBER", "Will", "pick", "up", "tomorrow", "NUMBER", "OK", "let", "us", "know", "if", "you", "need", "some", "help", "with", "the", "rebase", "I", "just", "realized", "this", "PR", "already", "has", "NUMBER", "NUMBER", "lines", "of", "delta", "so", "it", "may", "be", "hard", "to", "review", "the", "change", "effectively", "NUMBER", "Should", "we", "try", "to", "create", "a", "new", "one", "or", "even", "two", "new", "ones", "one", "for", "generate_np", "and", "one", "for", "the", "new", "attack", "I", "m", "basically", "work", "on", "doing", "that", "NUMBER", "I", "m", "replaying", "my", "commit", "off", "the", "current", "master", "and", "remove", "everything", "from", "NUMBER", "a", "NUMBER", "b", "NUMBER", "to", "NUMBER", "a", "NUMBER", "f", "NUMBER", "and", "from", "d", "NUMBER", "to", "d", "NUMBER", "eb", "that", "get", "smashed", "in", "here", "and", "make", "a", "new", "branch", "with", "just", "the", "change", "I", "ve", "made", "NUMBER", "Regarding", "make", "two", "PRs", "one", "for", "the", "attack", "and", "one", "for", "generate_np", "I", "can", "do", "that", "sure", "NUMBER", "The", "best", "thing", "to", "do", "for", "that", "would", "be", "to", "merge", "generate_np", "first", "then", "the", "L", "NUMBER", "attack", "and", "make", "it", "use", "the", "new", "generate_np", "functionality", "NUMBER", "This", "shouldn", "t", "take", "more", "than", "few", "hours", "to", "split", "everything", "apart", "and", "replay", "the", "commit", "I", "should", "have", "it", "do", "by", "tonight", "NUMBER", "Per", "discussion", "closing", "this", "PR", "and", "will", "open", "two", "new", "ones", "NUMBER", "Should", "this", "wait", "until", "bug", "NUMBER", "be", "decided", "and", "resolve", "We", "should", "also", "close", "NUMBER", "at", "the", "same", "time", "Thanks", "for", "your", "pull", "request", "NUMBER", "It", "looks", "like", "this", "may", "be", "your", "first", "contribution", "to", "a", "Google", "open", "source", "project", "NUMBER", "Before", "we", "can", "look", "at", "your", "pull", "request", "you", "ll", "need", "to", "sign", "a", "Contributor", "License", "Agreement", "CLA", "NUMBER", "memo", "Please", "visit", "TAG", "to", "sign", "NUMBER", "Once", "you", "ve", "sign", "please", "reply", "here", "e", "NUMBER", "g", "NUMBER", "I", "sign", "it", "and", "we", "ll", "verify", "NUMBER", "Thanks", "NUMBER", "If", "you", "ve", "already", "sign", "a", "CLA", "it", "s", "possible", "we", "don", "t", "have", "your", "GitHub", "username", "or", "you", "re", "use", "a", "different", "email", "address", "NUMBER", "Check", "your", "exist", "CLA", "data", "LINK", "and", "verify", "that", "your", "email", "be", "set", "on", "your", "git", "commit", "LINK", "your", "email", "in", "git", "NUMBER", "If", "your", "company", "sign", "a", "CLA", "they", "designated", "a", "Point", "of", "Contact", "who", "decides", "which", "employees", "be", "authorized", "to", "participate", "NUMBER", "You", "may", "need", "to", "contact", "the", "Point", "of", "Contact", "for", "your", "company", "and", "ask", "to", "be", "add", "to", "the", "group", "of", "authorized", "contributors", "NUMBER", "If", "you", "don", "t", "know", "who", "your", "Point", "of", "Contact", "be", "direct", "the", "project", "maintainer", "to", "go", "cla", "troubleshoot", "NUMBER", "In", "order", "to", "pass", "this", "check", "please", "resolve", "this", "problem", "and", "have", "the", "pull", "request", "author", "add", "another", "comment", "and", "the", "bot", "will", "run", "again", "NUMBER", "TAG", "I", "sign", "it", "CLAs", "look", "good", "thanks", "TAG", "Could", "you", "add", "some", "test", "to", "test_tf", "to", "make", "sure", "that", "the", "right", "exception", "be", "throw", "in", "the", "ModelAbstraction", "class", "and", "that", "a", "dummy", "Keras", "model", "correctly", "instantiates", "when", "use", "KerasModelWrapper", "There", "be", "an", "error", "in", "the", "KerasModelWrappper", "fprop", "function", "in", "the", "bit", "that", "checks", "if", "the", "model", "be", "request", "be", "already", "cached", "NUMBER", "The", "current", "code", "attempts", "to", "call", "a", "dictionary", "NUMBER", "It", "should", "be", "return", "self", "NUMBER", "model_dict", "layer", "x", "and", "not", "return", "self", "NUMBER", "model_dict", "x", "Thanks", "Nicolas", "for", "the", "comments", "and", "approving", "NUMBER", "I", "made", "the", "new", "change", "you", "suggested", "NUMBER", "Let", "s", "agree", "in", "the", "group", "if", "the", "current", "implementation", "be", "what", "we", "really", "want", "NUMBER", "I", "agree", "with", "converting", "the", "rest", "of", "the", "code", "to", "use", "the", "model", "abstraction", "NUMBER", "We", "might", "need", "to", "change", "the", "model", "abstraction", "based", "on", "specific", "use", "cases", "NUMBER", "Let", "me", "make", "the", "change", "to", "fprop", "and", "get_layer", "NUMBER", "Then", "I", "can", "proceed", "with", "converting", "attacks", "and", "others", "can", "help", "with", "the", "rest", "of", "your", "suggested", "list", "NUMBER", "On", "Thu", "Jun", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Ian", "Goodfellow", "TAG", "write", "This", "be", "worth", "taking", "some", "time", "to", "get", "right", "so", "I", "suggest", "we", "write", "some", "code", "with", "it", "to", "make", "sure", "it", "really", "do", "what", "we", "want", "NUMBER", "This", "doesn", "t", "need", "to", "all", "be", "do", "by", "fartashf", "TAG", "some", "of", "the", "rest", "of", "us", "can", "also", "push", "to", "this", "branch", "NUMBER", "I", "d", "suggest", "Convert", "the", "tutorials", "to", "use", "the", "new", "interface", "and", "make", "sure", "everything", "all", "works", "Convert", "all", "the", "attacks", "to", "assume", "that", "the", "model", "include", "a", "definition", "of", "the", "probabilities", "and", "make", "sure", "the", "attacks", "all", "fetch", "either", "logits", "or", "probabilities", "as", "needed", "Maybe", "make", "an", "example", "that", "uses", "L", "NUMBER", "regularization", "of", "the", "activities", "or", "something", "like", "that", "that", "exercises", "the", "model", "interface", "more", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "I", "can", "work", "on", "converting", "the", "tutorials", "that", "depend", "on", "Keras", "to", "use", "new", "new", "wrapper", "NUMBER", "I", "have", "update", "the", "attacks", "and", "made", "a", "PR", "to", "fartashfs", "branch", "over", "here", "LINK", "Let", "us", "resolve", "the", "discussion", "on", "the", "cleverhans", "dev", "mailing", "list", "before", "continuing", "to", "work", "on", "this", "PR", "LINK", "topic", "cleverhans", "dev", "NUMBER", "F", "NUMBER", "XDlDB", "NUMBER", "S", "NUMBER", "This", "will", "likely", "break", "the", "Travis", "build", "but", "it", "s", "probably", "best", "if", "we", "make", "sure", "we", "all", "agree", "before", "continuing", "to", "edit", "So", "there", "s", "good", "news", "and", "bad", "news", "NUMBER", "thumbsup", "The", "good", "news", "be", "that", "everyone", "that", "needs", "to", "sign", "a", "CLA", "the", "pull", "request", "submitter", "and", "all", "commit", "authors", "have", "do", "so", "NUMBER", "Everything", "be", "all", "good", "there", "NUMBER", "confused", "The", "bad", "news", "be", "that", "it", "appears", "that", "one", "or", "more", "commit", "were", "authored", "by", "someone", "other", "than", "the", "pull", "request", "submitter", "NUMBER", "We", "need", "to", "confirm", "that", "they", "re", "okay", "with", "their", "commit", "be", "contributed", "to", "this", "project", "NUMBER", "Please", "have", "them", "confirm", "that", "here", "in", "the", "pull", "request", "NUMBER", "Note", "to", "project", "maintainer", "This", "be", "a", "terminal", "state", "meaning", "the", "cla", "google", "commit", "status", "will", "not", "change", "from", "this", "state", "NUMBER", "It", "s", "up", "to", "you", "to", "confirm", "consent", "of", "the", "commit", "author", "s", "and", "merge", "this", "pull", "request", "when", "appropriate", "NUMBER", "TAG", "I", "confirm", "the", "commit", "NUMBER", "We", "haven", "t", "converted", "the", "tutorials", "yet", "it", "s", "probably", "a", "good", "idea", "to", "do", "so", "before", "merge", "Ian", "Nicolas", "be", "there", "any", "other", "change", "that", "be", "needed", "to", "merge", "this", "Looks", "good", "on", "my", "end", "Ian", "be", "traveling", "so", "he", "might", "need", "more", "time", "to", "review", "the", "PR", "We", "find", "a", "Contributor", "License", "Agreement", "for", "you", "the", "sender", "of", "this", "pull", "request", "but", "were", "unable", "to", "find", "agreements", "for", "the", "commit", "author", "s", "NUMBER", "If", "you", "authored", "these", "maybe", "you", "use", "a", "different", "email", "address", "in", "the", "git", "commit", "than", "was", "use", "to", "sign", "the", "CLA", "login", "here", "LINK", "to", "double", "check", "If", "these", "were", "authored", "by", "someone", "else", "then", "they", "will", "need", "to", "sign", "a", "CLA", "as", "well", "and", "confirm", "that", "they", "re", "okay", "with", "these", "be", "contributed", "to", "Google", "NUMBER", "TAG", "CLAs", "look", "good", "thanks", "TAG", "This", "would", "have", "fairly", "large", "consequences", "for", "attacks", "that", "be", "not", "easy", "to", "or", "perhaps", "even", "impossible", "to", "implement", "fully", "symbolically", "NUMBER", "For", "example", "if", "you", "wanted", "to", "generate", "adversarial", "examples", "on", "a", "few", "thousand", "iterations", "use", "the", "attack", "algorithm", "I", "have", "or", "JSMA", "as", "currently", "implement", "you", "would", "have", "to", "construct", "thousands", "of", "tf", "NUMBER", "gradient", "operations", "instead", "of", "caching", "it", "and", "just", "doing", "one", "NUMBER", "Oh", "I", "think", "I", "was", "unclear", "what", "I", "meant", "by", "iterations", "I", "didn", "t", "mean", "iterations", "of", "the", "attack", "algorithm", "I", "meant", "iterations", "of", "calling", "attack", "NUMBER", "generate", "NUMBER", "If", "we", "have", "to", "construct", "a", "new", "graph", "each", "time", "that", "would", "be", "expensive", "NUMBER", "This", "requires", "re", "generating", "the", "entire", "graph", "each", "time", "though", "right", "You", "have", "to", "pay", "the", "cost", "of", "doing", "that", "every", "time", "you", "call", "generate", "when", "ideally", "you", "d", "only", "construct", "the", "graph", "once", "and", "use", "it", "every", "time", "after", "that", "NUMBER", "Yeah", "but", "that", "only", "works", "because", "the", "FGS", "attack", "be", "a", "fully", "TF", "graph", "NUMBER", "Could", "you", "do", "this", "same", "thing", "with", "the", "JSMA", "code", "without", "having", "to", "call", "tf", "NUMBER", "gradients", "each", "time", "you", "want", "a", "new", "adversarial", "example", "Oh", "I", "didn", "t", "realize", "that", "would", "do", "that", "okay", "now", "I", "understand", "what", "you", "re", "saying", "NUMBER", "Then", "yes", "I", "agree", "just", "remove", "generate_np", "would", "be", "the", "easiest", "solution", "NUMBER", "The", "JSMA", "code", "be", "already", "be", "wrapped", "with", "py_func", "in", "the", "generate", "method", "of", "SaliencyMapMethod", "LINK", "L", "NUMBER", "To", "put", "this", "issue", "into", "context", "with", "the", "previous", "design", "choices", "made", "NUMBER", "In", "the", "Attacks", "interface", "PR", "NUMBER", "we", "discussed", "how", "multiple", "calls", "to", "generate_np", "should", "be", "handle", "here", "LINK", "diff", "b", "NUMBER", "d", "NUMBER", "b", "NUMBER", "c", "NUMBER", "a", "NUMBER", "f", "NUMBER", "aa", "NUMBER", "cd", "and", "here", "LINK", "issuecomment", "NUMBER", "So", "the", "current", "implementations", "of", "generate_np", "should", "generate", "a", "graph", "stored", "as", "self", "NUMBER", "_x_adv", "taking", "input", "self", "NUMBER", "x", "for", "instance", "LINK", "L", "NUMBER", "NUMBER", "If", "the", "graph", "needs", "additional", "variables", "like", "the", "target", "label", "placeholder", "that", "be", "given", "a", "different", "value", "at", "each", "call", "like", "the", "target", "label", "value", "the", "placeholder", "be", "stored", "as", "an", "attribute", "when", "calling", "parse_params", "NUMBER", "This", "may", "not", "be", "ideal", "so", "suggestions", "to", "improve", "the", "behavior", "of", "generate_np", "be", "welcome", "So", "I", "see", "three", "paths", "forward", "NUMBER", "NUMBER", "Ian", "s", "recommendation", "just", "delete", "the", "generate_np", "functionality", "NUMBER", "Make", "generate", "the", "only", "method", "and", "wrap", "everything", "with", "a", "py_func", "if", "you", "can", "t", "do", "it", "symbolically", "NUMBER", "Since", "this", "doesn", "t", "have", "the", "performance", "implications", "I", "thought", "it", "would", "this", "be", "a", "reasonable", "option", "NUMBER", "The", "only", "potential", "problem", "with", "it", "be", "that", "now", "the", "interface", "be", "slightly", "less", "clean", "for", "a", "new", "user", "who", "just", "wants", "to", "generate", "an", "attack", "since", "they", "ll", "have", "to", "create", "a", "tf", "placeholder", "NUMBER", "NUMBER", "Make", "generate_np", "call", "generate", "every", "time", "it", "receives", "argument", "NUMBER", "Don", "t", "save", "the", "graph", "NUMBER", "This", "be", "potentially", "very", "slow", "to", "do", "but", "we", "could", "document", "it", "with", "a", "big", "warning", "saying", "something", "to", "that", "effect", "NUMBER", "This", "method", "would", "be", "use", "only", "for", "one", "off", "adversarial", "example", "generation", "and", "not", "if", "you", "want", "to", "have", "it", "in", "a", "tight", "loop", "which", "be", "probably", "already", "the", "case", "NUMBER", "NUMBER", "Make", "generate_np", "call", "generate", "every", "time", "it", "receives", "a", "new", "set", "of", "argument", "NUMBER", "Cache", "the", "graph", "objects", "we", "ve", "use", "so", "far", "NUMBER", "If", "the", "argument", "be", "the", "same", "as", "a", "previous", "computation", "then", "re", "use", "that", "older", "graph", "NUMBER", "If", "not", "make", "a", "new", "graph", "NUMBER", "This", "makes", "it", "as", "efficient", "as", "generate", "while", "keep", "the", "nice", "easy", "to", "use", "functionality", "NUMBER", "The", "only", "difficulty", "be", "that", "now", "everyone", "who", "wants", "to", "implement", "an", "attack", "has", "to", "handle", "this", "NUMBER", "There", "might", "be", "some", "nice", "way", "to", "abstract", "this", "into", "the", "Attack", "super", "class", "though", "that", "makes", "it", "easier", "to", "handle", "NUMBER", "Personally", "I", "like", "option", "NUMBER", "followed", "by", "NUMBER", "and", "then", "NUMBER", "NUMBER", "I", "like", "the", "generate_np", "method", "as", "a", "nice", "simple", "interface", "for", "someone", "who", "just", "wants", "an", "adversarial", "example", "and", "if", "this", "comes", "at", "the", "cost", "of", "some", "more", "implementation", "work", "so", "be", "it", "NUMBER", "But", "whatever", "we", "do", "I", "do", "think", "that", "the", "current", "behavior", "of", "use", "old", "argument", "be", "counterintuitive", "at", "best", "and", "should", "be", "change", "NUMBER", "It", "sounds", "like", "the", "best", "option", "be", "to", "deprecate", "generate_np", "and", "remove", "it", "in", "NUMBER", "months", "NUMBER", "Should", "we", "issue", "a", "warning", "when", "the", "user", "calls", "generate_np", "multiple", "times", "to", "warn", "that", "it", "will", "reuse", "the", "first", "graph", "If", "the", "interface", "be", "going", "to", "exist", "then", "I", "would", "argue", "it", "should", "exist", "for", "all", "attacks", "NUMBER", "I", "think", "the", "API", "would", "be", "more", "confusing", "if", "some", "attacks", "implement", "generate_np", "and", "some", "don", "t", "NUMBER", "Another", "possible", "option", "would", "be", "to", "require", "the", "method", "exists", "but", "leave", "it", "up", "to", "the", "attack", "implementor", "as", "to", "whether", "they", "just", "call", "generate", "fresh", "every", "time", "and", "pay", "the", "performance", "hit", "or", "if", "they", "do", "some", "graph", "caching", "NUMBER", "It", "might", "make", "sense", "to", "have", "two", "abstract", "classes", "inherit", "from", "Attack", "SymbolicAttack", "and", "NonSymbolicAttack", "NUMBER", "Non", "abstract", "attack", "classes", "who", "inherit", "from", "one", "of", "these", "two", "rather", "than", "Attack", "NUMBER", "The", "two", "abstract", "classes", "would", "make", "it", "easier", "for", "developers", "users", "to", "understand", "the", "different", "implementations", "required", "by", "each", "type", "of", "attack", "and", "the", "implications", "in", "terms", "of", "expected", "behavior", "NUMBER", "The", "NonSymbolicAttack", "child", "classes", "would", "implement", "generate_np", "only", "use", "Numpy", "and", "generate", "would", "be", "constructed", "by", "wrapping", "generate_np", "in", "the", "NonSymbolicAttack", "class", "definition", "NUMBER", "The", "SymbolicAttack", "child", "classes", "would", "implement", "generate", "only", "NUMBER", "If", "NonSymbolicAttack", "has", "a", "generate", "method", "that", "wraps", "generate_np", "why", "not", "have", "SymbolicAttack", "have", "a", "generate_np", "method", "that", "wraps", "generate", "I", "was", "proposing", "this", "scheme", "with", "the", "solution", "of", "having", "only", "some", "classes", "implement", "generate_np", "in", "mind", "NUMBER", "If", "we", "decide", "to", "go", "the", "other", "route", "and", "have", "all", "classes", "implement", "generate_np", "then", "it", "do", "not", "necessarily", "apply", "anymore", "NUMBER", "That", "makes", "sense", "NUMBER", "I", "have", "start", "implement", "this", "in", "my", "PR", "NUMBER", "The", "Attack", "class", "be", "now", "up", "to", "date", "and", "FGSM", "works", "with", "it", "NUMBER", "I", "will", "now", "continue", "with", "update", "the", "other", "attacks", "NUMBER", "PR", "NUMBER", "now", "implement", "this", "fix", "NUMBER", "Use", "build", "in", "function", "tf", "NUMBER", "report_uninitialized_variables", "to", "get", "uninitialized", "variables", "NUMBER", "Besides", "would", "it", "be", "better", "if", "we", "set", "init_all", "False", "of", "model_train", "as", "default", "The", "test", "were", "fail", "because", "of", "the", "pep", "NUMBER", "checker", "No", "I", "find", "that", "it", "s", "not", "a", "good", "idea", "to", "use", "tf", "NUMBER", "report_uninitialized_variables", "since", "it", "requires", "a", "VariableScope", "with", "reuse", "set", "to", "True", "NUMBER", "Closed", "by", "NUMBER", "Hello", "I", "have", "be", "playing", "around", "with", "the", "Jacobian", "Salience", "Map", "method", "of", "creating", "adversarial", "examples", "NUMBER", "If", "I", "understand", "it", "correctly", "this", "hyperparameter", "indicates", "what", "percentage", "be", "allow", "to", "change", "maximally", "NUMBER", "However", "if", "I", "train", "a", "network", "and", "set", "gamma", "too", "high", "it", "causes", "some", "sort", "of", "cryptic", "crash", "NUMBER", "I", "ll", "keep", "looking", "at", "it", "but", "as", "of", "yet", "I", "haven", "t", "figured", "it", "out", "NUMBER", "Here", "be", "the", "error", "log", "KeyError", "Traceback", "most", "recent", "call", "last", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "ops", "script_ops", "NUMBER", "pyc", "in", "__call__", "self", "token", "args", "NUMBER", "if", "func", "be", "None", "NUMBER", "raise", "ValueError", "callback", "s", "be", "not", "find", "token", "NUMBER", "ret", "func", "args", "NUMBER", "Ensures", "that", "we", "return", "either", "a", "single", "numpy", "array", "or", "a", "list", "of", "numpy", "NUMBER", "arrays", "NUMBER", "TAG", "in", "jsma_wrap", "x_val", "target", "NUMBER", "self", "NUMBER", "eta", "self", "NUMBER", "gamma", "self", "NUMBER", "clip_min", "NUMBER", "self", "NUMBER", "clip_max", "self", "NUMBER", "nb_classes", "NUMBER", "target", "target", "NUMBER", "NUMBER", "Attack", "be", "targeted", "target", "placeholder", "will", "need", "to", "be", "fed", "home", "riaan", "src", "cleverhans", "cleverhans", "attacks_tf", "NUMBER", "pyc", "in", "jsma_batch", "sess", "x", "pred", "grads", "X", "theta", "gamma", "clip_min", "clip_max", "nb_classes", "target", "NUMBER", "NUMBER", "X_adv", "ind", "_", "_", "jsma", "sess", "x", "pred", "grads", "val", "np", "NUMBER", "argmax", "target", "NUMBER", "theta", "gamma", "clip_min", "clip_max", "NUMBER", "NUMBER", "return", "np", "NUMBER", "asarray", "X_adv", "dtype", "np", "NUMBER", "float", "NUMBER", "home", "riaan", "src", "cleverhans", "cleverhans", "attacks_tf", "NUMBER", "pyc", "in", "jsma", "sess", "x", "predictions", "grads", "sample", "target", "theta", "gamma", "clip_min", "clip_max", "NUMBER", "and", "return", "the", "two", "best", "candidate", "features", "for", "perturbation", "NUMBER", "i", "j", "search_domain", "saliency_map", "NUMBER", "grads_target", "grads_others", "search_domain", "increase", "NUMBER", "NUMBER", "Apply", "the", "perturbation", "to", "the", "two", "input", "features", "selected", "previously", "home", "riaan", "src", "cleverhans", "cleverhans", "attacks_tf", "NUMBER", "pyc", "in", "saliency_map", "grads_target", "grads_other", "search_domain", "increase", "NUMBER", "Remove", "use", "pixels", "from", "our", "search", "domain", "NUMBER", "search_domain", "NUMBER", "remove", "p", "NUMBER", "NUMBER", "search_domain", "NUMBER", "remove", "p", "NUMBER", "NUMBER", "NUMBER", "return", "p", "NUMBER", "p", "NUMBER", "search_domain", "KeyError", "NUMBER", "InternalError", "Traceback", "most", "recent", "call", "last", "TAG", "in", "TAG", "NUMBER", "z_list", "z_test", "module", "NUMBER", "JSMA_generate", "TAG", "in", "JSMA_generate", "self", "NUMBER", "adv_z", "jsma", "NUMBER", "generate_np", "z_test", "sample_ind", "sample_ind", "NUMBER", "NUMBER", "self", "NUMBER", "decoder", "self", "NUMBER", "use_rec", "NUMBER", "jsma_params", "NUMBER", "NUMBER", "if", "zs", "None", "TAG", "in", "generate_np", "self", "z_val", "decoder", "use_rec", "kwargs", "NUMBER", "feed_dict", "self", "NUMBER", "_z", "z_val", "self", "NUMBER", "target", "kwargs", "y_val", "use_rec", "True", "NUMBER", "self", "NUMBER", "jsma", "True", "NUMBER", "return", "self", "NUMBER", "sess", "NUMBER", "run", "self", "NUMBER", "_z_adv", "feed_dict", "feed_dict", "NUMBER", "NUMBER", "def", "parse_params", "self", "theta", "NUMBER", "gamma", "np", "NUMBER", "inf", "nb_classes", "NUMBER", "clip_min", "NUMBER", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "pyc", "in", "run", "self", "fetches", "feed_dict", "options", "run_metadata", "NUMBER", "try", "NUMBER", "result", "self", "NUMBER", "_run", "None", "fetches", "feed_dict", "options_ptr", "NUMBER", "run_metadata_ptr", "NUMBER", "if", "run_metadata", "NUMBER", "proto_data", "tf_session", "NUMBER", "TF_GetBuffer", "run_metadata_ptr", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "pyc", "in", "_run", "self", "handle", "fetches", "feed_dict", "options", "run_metadata", "NUMBER", "if", "final_fetches", "or", "final_targets", "NUMBER", "results", "self", "NUMBER", "_do_run", "handle", "final_targets", "final_fetches", "NUMBER", "feed_dict_string", "options", "run_metadata", "NUMBER", "else", "NUMBER", "results", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "pyc", "in", "_do_run", "self", "handle", "target_list", "fetch_list", "feed_dict", "options", "run_metadata", "NUMBER", "if", "handle", "be", "None", "NUMBER", "return", "self", "NUMBER", "_do_call", "_run_fn", "self", "NUMBER", "_session", "feed_dict", "fetch_list", "NUMBER", "target_list", "options", "run_metadata", "NUMBER", "else", "NUMBER", "return", "self", "NUMBER", "_do_call", "_prun_fn", "self", "NUMBER", "_session", "handle", "feed_dict", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "pyc", "in", "_do_call", "self", "fn", "args", "NUMBER", "except", "KeyError", "NUMBER", "pass", "NUMBER", "raise", "type", "e", "node_def", "op", "message", "NUMBER", "NUMBER", "def", "_extend_graph", "self", "InternalError", "Failed", "to", "run", "py", "callback", "pyfunc_", "NUMBER", "see", "error", "log", "NUMBER", "Node", "PyFunc_", "NUMBER", "PyFunc", "Tin", "DT_FLOAT", "DT_FLOAT", "Tout", "DT_FLOAT", "token", "pyfunc_", "NUMBER", "_device", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "cpu", "NUMBER", "_recv_Placeholder_", "NUMBER", "_", "NUMBER", "_recv_labels_", "NUMBER", "Caused", "by", "op", "u", "PyFunc_", "NUMBER", "defined", "at", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "runpy", "NUMBER", "py", "line", "NUMBER", "in", "_run_module_as_main", "__main__", "fname", "loader", "pkg_name", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "runpy", "NUMBER", "py", "line", "NUMBER", "in", "_run_code", "exec", "code", "in", "run_globals", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "ipykernel_launcher", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "app", "NUMBER", "launch_new_instance", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "traitlets", "config", "application", "NUMBER", "py", "line", "NUMBER", "in", "launch_instance", "app", "NUMBER", "art", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "ipykernel", "kernelapp", "NUMBER", "py", "line", "NUMBER", "in", "start", "ioloop", "NUMBER", "IOLoop", "NUMBER", "instance", "NUMBER", "art", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "zmq", "eventloop", "ioloop", "NUMBER", "py", "line", "NUMBER", "in", "start", "super", "ZMQIOLoop", "self", "NUMBER", "art", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tornado", "ioloop", "NUMBER", "py", "line", "NUMBER", "in", "start", "handler_func", "fd_obj", "events", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tornado", "stack_context", "NUMBER", "py", "line", "NUMBER", "in", "null_wrapper", "return", "fn", "args", "kwargs", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "zmq", "eventloop", "zmqstream", "NUMBER", "py", "line", "NUMBER", "in", "_handle_events", "self", "NUMBER", "_handle_recv", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "zmq", "eventloop", "zmqstream", "NUMBER", "py", "line", "NUMBER", "in", "_handle_recv", "self", "NUMBER", "_run_callback", "callback", "msg", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "zmq", "eventloop", "zmqstream", "NUMBER", "py", "line", "NUMBER", "in", "_run_callback", "callback", "args", "kwargs", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tornado", "stack_context", "NUMBER", "py", "line", "NUMBER", "in", "null_wrapper", "return", "fn", "args", "kwargs", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "ipykernel", "kernelbase", "NUMBER", "py", "line", "NUMBER", "in", "dispatcher", "return", "self", "NUMBER", "dispatch_shell", "stream", "msg", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "ipykernel", "kernelbase", "NUMBER", "py", "line", "NUMBER", "in", "dispatch_shell", "handler", "stream", "idents", "msg", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "ipykernel", "kernelbase", "NUMBER", "py", "line", "NUMBER", "in", "execute_request", "user_expressions", "allow_stdin", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "ipykernel", "ipkernel", "NUMBER", "py", "line", "NUMBER", "in", "do_execute", "res", "shell", "NUMBER", "run_cell", "code", "store_history", "store_history", "silent", "silent", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "ipykernel", "zmqshell", "NUMBER", "py", "line", "NUMBER", "in", "run_cell", "return", "super", "ZMQInteractiveShell", "self", "NUMBER", "run_cell", "args", "kwargs", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "IPython", "core", "interactiveshell", "NUMBER", "py", "line", "NUMBER", "in", "run_cell", "interactivity", "interactivity", "compiler", "compiler", "result", "result", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "IPython", "core", "interactiveshell", "NUMBER", "py", "line", "NUMBER", "in", "run_ast_nodes", "if", "self", "NUMBER", "run_code", "code", "result", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "IPython", "core", "interactiveshell", "NUMBER", "py", "line", "NUMBER", "in", "run_code", "exec", "code_obj", "self", "NUMBER", "user_global_ns", "self", "NUMBER", "user_ns", "File", "TAG", "line", "NUMBER", "in", "TAG", "z_list", "z_test", "module", "NUMBER", "JSMA_generate", "File", "TAG", "line", "NUMBER", "in", "JSMA_generate", "jsma_params", "File", "TAG", "line", "NUMBER", "in", "generate_np", "self", "NUMBER", "_z_adv", "self", "NUMBER", "generate", "self", "NUMBER", "_z", "kwargs", "File", "TAG", "line", "NUMBER", "in", "generate", "wrap", "tf", "NUMBER", "py_func", "jsma_wrap", "x", "self", "NUMBER", "target", "tf", "NUMBER", "float", "NUMBER", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "ops", "script_ops", "NUMBER", "py", "line", "NUMBER", "in", "py_func", "input", "inp", "token", "token", "Tout", "Tout", "name", "name", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "ops", "gen_script_ops", "NUMBER", "py", "line", "NUMBER", "in", "_py_func", "name", "name", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "op_def_library", "NUMBER", "py", "line", "NUMBER", "in", "apply_op", "op_def", "op_def", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "line", "NUMBER", "in", "create_op", "original_op", "self", "NUMBER", "_default_original_op", "op_def", "op_def", "File", "home", "riaan", "anaconda", "NUMBER", "envs", "tensorflow", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "framework", "ops", "NUMBER", "py", "line", "NUMBER", "in", "__init__", "self", "NUMBER", "_traceback", "_extract_stack", "InternalError", "see", "above", "for", "traceback", "Failed", "to", "run", "py", "callback", "pyfunc_", "NUMBER", "see", "error", "log", "NUMBER", "Node", "PyFunc_", "NUMBER", "PyFunc", "Tin", "DT_FLOAT", "DT_FLOAT", "Tout", "DT_FLOAT", "token", "pyfunc_", "NUMBER", "_device", "job", "localhost", "replica", "NUMBER", "task", "NUMBER", "cpu", "NUMBER", "_recv_Placeholder_", "NUMBER", "_", "NUMBER", "_recv_labels_", "NUMBER", "I", "be", "run", "this", "on", "tensorflow", "NUMBER", "in", "anaconda", "NUMBER", "kind", "regards", "Riaan", "Zoetmulder", "npapernot", "This", "may", "have", "already", "be", "solve", "by", "LINK", "actually", "NUMBER", "Can", "be", "close", "NUMBER", "Hi", "I", "was", "wondering", "if", "it", "be", "possible", "to", "remove", "dependency", "of", "K", "NUMBER", "set_learning_phase", "NUMBER", "in", "the", "tutorials", "If", "I", "try", "to", "remove", "it", "I", "get", "all", "sorts", "of", "error", "NUMBER", "If", "it", "be", "remove", "none", "of", "the", "attacks", "works", "NUMBER", "Mainly", "in", "the", "tutorials", "if", "we", "replace", "model_train", "with", "model", "NUMBER", "fit", "and", "model_eval", "with", "model", "NUMBER", "evaluate", "everything", "works", "fine", "without", "the", "need", "of", "K", "NUMBER", "set_learning_phase", "except", "from", "the", "actual", "attacks", "NUMBER", "Any", "idea", "why", "be", "this", "happening", "npapernot", "thanks", "a", "lot", "for", "the", "prompt", "respond", "NUMBER", "Yeah", "actually", "I", "ve", "had", "dropout", "and", "batch", "norm", "layers", "and", "couldn", "t", "figure", "out", "what", "was", "going", "on", "NUMBER", "If", "you", "use", "K", "NUMBER", "fit", "you", "may", "not", "be", "able", "to", "use", "some", "of", "the", "cleverhans", "function", "such", "as", "adversarial", "training", "IMHO", "I", "think", "it", "might", "be", "doable", "unless", "I", "m", "miss", "sth", "else", "fundamental", "here", "NUMBER", "So", "if", "I", "do", "K", "NUMBER", "fit", "for", "training", "I", "can", "say", "sth", "like", "this", "along", "the", "lines", "when", "I", "compile", "the", "model", "before", "training", "Define", "loss", "loss", "model_loss", "y", "predictions", "loss", "loss", "model_loss", "y", "predictions_adv", "NUMBER", "K", "NUMBER", "compile", "optimizer", "adam", "loss", "loss", "metrics", "accuracy", "npapernot", "Sorry", "for", "the", "confusion", "yes", "I", "meant", "it", "will", "be", "hard", "to", "use", "cleverhans", "function", "as", "be", "because", "the", "learning", "phase", "will", "raise", "a", "value", "not", "fed", "error", "NUMBER", "Yes", "indeed", "I", "had", "this", "error", "the", "other", "day", "and", "was", "trying", "to", "figure", "out", "what", "was", "going", "on", "NUMBER", "If", "someone", "remove", "K", "NUMBER", "set_learning_phase", "will", "definitely", "need", "to", "substitute", "that", "in", "the", "session", "feed", "dictionary", "as", "K", "NUMBER", "set_learning_phase", "NUMBER", "or", "equivalently", "keras_learning_phase", "NUMBER", "NUMBER", "Actually", "I", "had", "a", "relate", "thought", "the", "other", "day", "we", "may", "want", "to", "have", "an", "optional", "argument", "to", "cleverhans", "function", "that", "run", "a", "TF", "graph", "where", "users", "can", "specify", "a", "feeding", "dictionary", "of", "additional", "variables", "along", "with", "their", "values", "that", "will", "be", "appended", "to", "the", "feeding", "dictionary", "hard", "code", "in", "cleverhans", "when", "run", "sess", "NUMBER", "run", "This", "be", "much", "better", "and", "makes", "the", "functionality", "of", "the", "library", "more", "flexible", "this", "way", "NUMBER", "For", "instance", "one", "might", "just", "need", "to", "use", "some", "function", "and", "not", "change", "the", "whole", "code", "base", "from", "K", "NUMBER", "fit", "to", "model_train", "when", "appropriate", "NUMBER", "I", "m", "hoping", "to", "write", "a", "tutorial", "that", "uses", "only", "TensorFlow", "with", "no", "framework", "on", "top", "NUMBER", "That", "would", "remove", "all", "dependence", "on", "Keras", "NUMBER", "But", "it", "might", "take", "a", "while", "before", "I", "get", "to", "this", "so", "someone", "else", "be", "welcome", "encourage", "to", "do", "it", "too", "NUMBER", "On", "Tue", "May", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "AM", "kirk", "NUMBER", "TAG", "write", "npapernot", "TAG", "Sorry", "for", "the", "confusion", "yes", "I", "meant", "it", "will", "be", "hard", "to", "use", "cleverhans", "function", "as", "be", "because", "the", "learning", "phase", "will", "raise", "a", "value", "not", "fed", "error", "NUMBER", "Yes", "indeed", "I", "had", "this", "error", "the", "other", "day", "and", "was", "trying", "to", "figure", "out", "what", "was", "going", "NUMBER", "If", "someone", "remove", "K", "NUMBER", "set_learning_phase", "will", "definitely", "need", "to", "substitute", "that", "in", "the", "session", "feed", "dictionary", "as", "K", "NUMBER", "set_learning_phase", "NUMBER", "or", "equivalently", "keras_learning_phase", "NUMBER", "NUMBER", "Actually", "I", "had", "a", "relate", "thought", "the", "other", "day", "we", "may", "want", "to", "have", "an", "optional", "argument", "to", "cleverhans", "function", "that", "run", "a", "TF", "graph", "where", "users", "can", "specify", "a", "feeding", "dictionary", "of", "additional", "variables", "along", "with", "their", "values", "that", "will", "be", "appended", "to", "the", "feeding", "dictionary", "hard", "code", "in", "cleverhans", "when", "run", "sess", "NUMBER", "run", "This", "be", "much", "better", "and", "makes", "the", "functionality", "of", "the", "library", "more", "flexible", "this", "way", "NUMBER", "For", "instance", "one", "might", "just", "need", "to", "use", "some", "function", "and", "not", "change", "the", "whole", "code", "base", "from", "K", "NUMBER", "fit", "to", "model_train", "when", "appropriate", "NUMBER", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Hey", "guys", "just", "a", "quick", "question", "extension", "on", "what", "npapernot", "suggested", "about", "feed_dict", "NUMBER", "I", "ve", "notice", "that", "all", "function", "take", "params", "such", "train_params", "or", "eval_params", "so", "I", "tried", "to", "remove", "K", "NUMBER", "set_learning_phase", "NUMBER", "and", "hard", "code", "it", "in", "the", "params", "as", "keras_learnig_phase", "NUMBER", "but", "after", "doing", "some", "digging", "up", "I", "find", "out", "that", "batch_eval", "be", "not", "use", "passing", "all", "argument", "to", "feed_dict", "so", "there", "be", "no", "current", "way", "to", "pass", "that", "argument", "to", "the", "tensorflow", "feed_dict", "NUMBER", "Maybe", "this", "should", "be", "sth", "to", "be", "considered", "regard", "what", "npapernot", "suggested", "about", "allowing", "users", "to", "pass", "argument", "NUMBER", "So", "at", "the", "moment", "we", "can", "pass", "argument", "to", "the", "different", "function", "but", "the", "_FlagsWrapper", "object", "that", "do", "the", "argument", "processing", "return", "only", "a", "number", "of", "those", "which", "be", "later", "fed", "to", "feed_dict", "NUMBER", "Was", "that", "intentional", "or", "by", "desing", "Howdy", "Can", "anyone", "please", "help", "me", "out", "in", "resolving", "this", "error", "NUMBER", "Have", "be", "trying", "resolving", "it", "for", "such", "a", "long", "time", "NUMBER", "Seems", "Keras", "be", "literally", "made", "for", "a", "good", "reason", "since", "tensor", "flow", "kills", "time", "NUMBER", "Any", "help", "would", "be", "highly", "appreaciated", "NUMBER", "Here", "I", "be", "trying", "to", "convert", "x", "NUMBER", "tf", "NUMBER", "tensor", "object", "intermediate", "layer", "from", "Keras", "model", "into", "numpy", "array", "so", "I", "can", "perform", "some", "operation", "on", "it", "as", "highlight", "in", "the", "section", "A", "below", "NUMBER", "I", "tried", "almost", "everything", "that", "be", "mention", "on", "the", "internet", "but", "to", "avail", "NUMBER", "The", "code", "snippet", "be", "as", "below", "print", "x", "NUMBER", "x", "NUMBER", "TAG", "NUMBER", "raise", "TypeError", "input", "must", "be", "a", "dictionary", "NUMBER", "flat_dictionary", "NUMBER", "for", "i", "v", "in", "_six", "NUMBER", "iteritems", "dictionary", "TypeError", "input", "must", "be", "a", "dictionary", "When", "I", "feed", "a", "dictionary", "into", "it", "then", "it", "says", "placeholder", "shoudl", "be", "fed", "when", "I", "do", "that", "then", "it", "gives", "me", "some", "another", "error", "NUMBER", "really", "fed", "up", "with", "this", "issue", "Regards", "Priya", "Arora", "Running", "pip", "install", "e", "git", "git", "github", "NUMBER", "com", "openai", "cleverhans", "NUMBER", "git", "egg", "cleverhans", "gives", "the", "error", "Permission", "denied", "publickey", "NUMBER", "fatal", "Could", "not", "read", "from", "remote", "repository", "NUMBER", "Please", "make", "sure", "you", "have", "the", "correct", "access", "rights", "and", "the", "repository", "exists", "NUMBER", "Command", "git", "clone", "q", "git", "github", "NUMBER", "com", "openai", "cleverhans", "NUMBER", "git", "home", "optml", "holdenl", "mwu", "NUMBER", "mwu", "src", "cleverhans", "fail", "with", "error", "code", "NUMBER", "in", "None", "This", "can", "be", "fix", "by", "run", "pip", "install", "e", "git", "LINK", "egg", "cleverhans", "instead", "NUMBER", "See", "LINK", "install", "a", "specific", "git", "branch", "on", "github", "with", "pip", "permission", "denied", "pub", "NUMBER", "Hello", "I", "have", "trouble", "in", "loading", "model", "when", "I", "saved", "the", "model", "with", "TF", "format", "NUMBER", "The", "model", "can", "t", "load", "use", "saver", "NUMBER", "restore", "NUMBER", "So", "could", "you", "give", "me", "some", "suggestion", "on", "saving", "and", "loading", "the", "trained", "model", "Thanks", "NUMBER", "Quick", "comment", "I", "think", "the", "bug", "where", "reloading", "the", "model", "in", "Keras", "doesn", "t", "work", "might", "be", "due", "to", "an", "initialize_all_variables", "call", "NUMBER", "That", "s", "worth", "checking", "at", "some", "point", "NUMBER", "npapernot", "goodfeli", "I", "had", "tried", "some", "methods", "to", "address", "it", "NUMBER", "Unfortunately", "it", "didn", "t", "work", "NUMBER", "Finally", "FGSM", "was", "implement", "by", "Keras", "with", "TF", "backend", "NUMBER", "During", "this", "I", "find", "a", "funny", "thing", "that", "same", "architectures", "in", "different", "platform", "had", "different", "performance", "and", "the", "difference", "was", "huge", "which", "was", "explored", "in", "the", "MNIST", "datasets", "NUMBER", "The", "phenomenon", "seems", "to", "be", "inconsistent", "with", "The", "Space", "of", "Transferable", "Adversarial", "Examples", "NUMBER", "shenqixiaojiang", "did", "you", "get", "a", "chance", "to", "look", "at", "what", "goodfeli", "suggested", "npapernot", "Sorry", "I", "made", "a", "mistake", "of", "the", "suggestion", "of", "goodfeli", "NUMBER", "Now", "it", "works", "NUMBER", "Thank", "you", "very", "much", "NUMBER", "Would", "you", "be", "willing", "to", "open", "a", "PR", "to", "include", "the", "code", "that", "be", "able", "to", "load", "save", "models", "npapernot", "yeah", "my", "pleasure", "NUMBER", "A", "PR", "was", "opened", "for", "this", "problem", "NUMBER", "In", "addition", "could", "you", "give", "me", "some", "suggests", "with", "the", "following", "problem", "Same", "architectures", "in", "different", "platform", "such", "as", "Keras", "pyTorch", "and", "Caffe", "had", "different", "performance", "and", "the", "difference", "was", "huge", "which", "was", "explored", "in", "the", "MNIST", "datasets", "NUMBER", "The", "phenomenon", "seems", "to", "be", "inconsistent", "with", "the", "theory", "of", "The", "Space", "of", "Transferable", "Adversarial", "Examples", "NUMBER", "tf", "NUMBER", "argmax", "can", "t", "assign", "axis", "with", "NUMBER", "here", "be", "the", "official", "tutorial", "axis", "A", "Tensor", "NUMBER", "Must", "be", "one", "of", "the", "following", "types", "int", "NUMBER", "int", "NUMBER", "int", "NUMBER", "NUMBER", "TAG", "write", "Tests", "fail", "for", "tensorflow", "on", "Failure", "ImportError", "No", "module", "named", "PyQt", "NUMBER", "NUMBER", "You", "be", "receiving", "this", "because", "you", "be", "subscribed", "to", "this", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "npapernot", "I", "resolve", "conflict", "and", "test", "be", "passing", "NUMBER", "LGTM", "npapernot", "Thanks", "I", "review", "your", "comments", "but", "didn", "t", "have", "time", "to", "make", "change", "NUMBER", "I", "be", "traveling", "right", "now", "and", "I", "will", "address", "your", "comments", "as", "soon", "as", "possible", "NUMBER", "npapernot", "Thank", "you", "for", "your", "review", "I", "address", "your", "comments", "NUMBER", "npapernot", "Thanks", "for", "the", "update", "One", "last", "thing", "before", "we", "merge", "aam", "at", "we", "be", "striving", "to", "add", "more", "test", "to", "the", "core", "module", "components", "NUMBER", "Since", "this", "will", "be", "inside", "cleverhans", "could", "you", "write", "test", "in", "tests_tf", "that", "we", "can", "rely", "on", "to", "make", "sure", "that", "future", "PRs", "don", "t", "break", "your", "code", "Writing", "Theano", "test", "be", "not", "necessary", "as", "we", "have", "drop", "support", "for", "it", "and", "all", "Theano", "code", "be", "deprecate", "NUMBER", "npapernot", "I", "add", "basic", "test", "for", "utils", "and", "vatm", "method", "NUMBER", "Do", "you", "have", "a", "roadmap", "for", "this", "project", "Can", "you", "point", "me", "out", "to", "the", "discussion", "why", "you", "be", "dropping", "theano", "support", "Thanks", "NUMBER", "npapernot", "Thanks", "for", "the", "merge", "goodfeli", "Thanks", "for", "point", "out", "to", "the", "discussion", "Thanks", "for", "the", "contribution", "aam", "at", "very", "much", "appreciated", "Can", "you", "let", "us", "know", "what", "your", "affiliation", "be", "so", "we", "can", "add", "you", "to", "the", "technical", "report", "when", "we", "increment", "the", "version", "number", "of", "the", "library", "npapernot", "I", "contacted", "you", "via", "email", "NUMBER", "How", "can", "I", "save", "only", "the", "images", "generate", "from", "either", "FGSM", "or", "JSMA", "attacks", "It", "looks", "like", "the", "tensor", "of", "images", "returned", "out", "of", "batch_eval", "sess", "x", "adv_x", "X_train", "args", "eval_params", "only", "give", "the", "noise", "that", "will", "be", "add", "to", "the", "original", "images", "NUMBER", "I", "m", "training", "a", "detector", "and", "this", "library", "looks", "much", "better", "than", "the", "way", "I", "was", "generating", "fooling", "images", "before", "NUMBER", "I", "just", "can", "t", "figure", "out", "how", "to", "get", "the", "actual", "perturbed", "images", "NUMBER", "Thanks", "NUMBER", "Changes", "relate", "to", "the", "new", "Convolution", "Layers", "in", "Keras", "Fixed", "a", "bug", "cause", "by", "this", "change", "on", "Keras", "LINK", "where", "the", "outcome", "of", "the", "metrics", "function", "be", "no", "longer", "a", "scalar", "therefore", "the", "mean", "should", "be", "calculated", "manually", "NUMBER", "Thanks", "npapernot", "NUMBER", "As", "you", "have", "notice", "be", "not", "backward", "compatible", "with", "previous", "version", "NUMBER", "I", "think", "it", "looks", "good", "now", "NUMBER", "Sure", "thing", "NUMBER", "npapernot", "goodfeli", "Changes", "have", "be", "push", "test", "the", "code", "on", "both", "NUMBER", "and", "NUMBER", "version", "of", "Keras", "and", "it", "works", "fine", "NUMBER", "Thanks", "for", "the", "feedback", "guys", "NUMBER", "The", "latest", "commit", "broke", "the", "build", "because", "it", "still", "uses", "the", "old", "kernel", "parameter", "name", "in", "the", "function", "body", "NUMBER", "After", "that", "be", "fix", "and", "the", "test", "pass", "I", "think", "this", "be", "good", "to", "merge", "NUMBER", "Also", "should", "we", "change", "setup", "NUMBER", "py", "to", "run", "keras", "NUMBER", "on", "travis", "yeah", "it", "s", "because", "tf", "was", "too", "old", "in", "the", "travis", "config", "I", "update", "it", "now", "we", "also", "have", "to", "fix", "the", "keras", "scalar", "output", "issue", "for", "theano", "as", "well", "do", "you", "mean", "multithreading", "etc", "Sorry", "the", "title", "of", "this", "be", "somewhat", "unrelated", "to", "the", "description", "now", "that", "I", "change", "it", "NUMBER", "The", "goal", "was", "to", "implement", "the", "JSMA", "completely", "symbolically", "in", "TF", "no", "Python", "Numpy", "involved", "NUMBER", "This", "requires", "among", "other", "things", "to", "change", "the", "current", "Python", "while", "loop", "into", "a", "TF", "while", "loop", "NUMBER", "Sorry", "for", "my", "limited", "knowledge", "about", "Tensorflow", "NUMBER", "For", "the", "part", "like", "search_domain", "set", "i", "for", "i", "in", "xrange", "nb_features", "if", "adv_x", "NUMBER", "i", "TAG", "line", "NUMBER", "in", "TAG", "runfile", "Users", "adhockuang", "myworkspace", "cleverhans", "master", "tests_tf", "test_mnist_accuracy", "NUMBER", "py", "wdir", "Users", "adhockuang", "myworkspace", "cleverhans", "master", "tests_tf", "File", "anaconda", "lib", "python", "NUMBER", "site", "package", "spyder", "utils", "site", "sitecustomize", "NUMBER", "py", "line", "NUMBER", "in", "runfile", "execfile", "filename", "namespace", "File", "anaconda", "lib", "python", "NUMBER", "site", "package", "spyder", "utils", "site", "sitecustomize", "NUMBER", "py", "line", "NUMBER", "in", "execfile", "builtins", "NUMBER", "execfile", "filename", "where", "File", "Users", "adhockuang", "myworkspace", "cleverhans", "master", "tests_tf", "test_mnist_accuracy", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "app", "NUMBER", "run", "File", "anaconda", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "platform", "app", "NUMBER", "py", "line", "NUMBER", "in", "run", "_sys", "NUMBER", "exit", "main", "_sys", "NUMBER", "argv", "NUMBER", "flags_passthrough", "File", "Users", "adhockuang", "myworkspace", "cleverhans", "master", "tests_tf", "test_mnist_accuracy", "NUMBER", "py", "line", "NUMBER", "in", "main", "args", "eval_params", "File", "anaconda", "lib", "python", "NUMBER", "site", "package", "cleverhans", "NUMBER", "py", "NUMBER", "egg", "cleverhans", "utils_tf", "NUMBER", "py", "line", "NUMBER", "in", "model_eval", "keras", "NUMBER", "backend", "NUMBER", "learning_phase", "NUMBER", "ValueError", "operands", "could", "not", "be", "broadcast", "together", "with", "shapes", "NUMBER", "NUMBER", "NUMBER", "Code", "ATM", "requires", "keras", "TAG", "app", "NUMBER", "run", "File", "home", "grads", "rva", "NUMBER", "tensorflow", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "platform", "app", "NUMBER", "py", "line", "NUMBER", "in", "run", "_sys", "NUMBER", "exit", "main", "_sys", "NUMBER", "argv", "NUMBER", "flags_passthrough", "File", "mnist_tutorial_tf", "NUMBER", "py", "line", "NUMBER", "in", "main", "evaluate", "evaluate", "args", "train_params", "File", "home", "grads", "rva", "NUMBER", "tensorflow", "cleverhans", "cleverhans", "utils_tf", "NUMBER", "py", "line", "NUMBER", "in", "model_train", "evaluate", "File", "mnist_tutorial_tf", "NUMBER", "py", "line", "NUMBER", "in", "evaluate", "args", "eval_params", "File", "home", "grads", "rva", "NUMBER", "tensorflow", "cleverhans", "cleverhans", "utils_tf", "NUMBER", "py", "line", "NUMBER", "in", "model_eval", "keras", "NUMBER", "backend", "NUMBER", "learning_phase", "NUMBER", "ValueError", "operands", "could", "not", "be", "broadcast", "together", "with", "shapes", "NUMBER", "NUMBER", "NUMBER", "A", "general", "comment", "Code", "assumes", "now", "keras", "TAG", "filters", "float", "kernel", "dimension", "argument", "become", "a", "single", "tuple", "argument", "kernel", "size", "NUMBER", "E", "NUMBER", "g", "NUMBER", "a", "legacy", "call", "Conv", "NUMBER", "D", "NUMBER", "NUMBER", "NUMBER", "becomes", "Conv", "NUMBER", "D", "NUMBER", "NUMBER", "NUMBER", "kernel_size", "can", "be", "set", "to", "an", "integer", "instead", "of", "a", "tuple", "e", "NUMBER", "g", "NUMBER", "Conv", "NUMBER", "D", "NUMBER", "NUMBER", "be", "equivalent", "to", "Conv", "NUMBER", "D", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "subsample", "strides", "NUMBER", "Can", "also", "be", "set", "to", "an", "integer", "NUMBER", "border_mode", "padding", "NUMBER", "Inside", "model_eval", "in", "utils_tf", "NUMBER", "py", "at", "the", "end", "of", "the", "for", "loop", "we", "have", "the", "following", "accuracy", "cur_batch_size", "acc_value", "NUMBER", "eval", "feed_dict", "x", "X_test", "start", "end", "y", "Y_test", "start", "end", "keras", "NUMBER", "backend", "NUMBER", "learning_phase", "NUMBER", "Just", "add", "a", "if", "to", "ignore", "the", "remaining", "points", "in", "case", "the", "batch", "has", "a", "size", "that", "be", "lower", "than", "the", "current", "batch", "size", "Not", "sure", "if", "this", "would", "be", "the", "right", "approach", "but", "at", "least", "it", "worked", "for", "now", "if", "cur_batch_size", "args", "NUMBER", "batch_size", "accuracy", "cur_batch_size", "acc_value", "NUMBER", "eval", "feed_dict", "x", "X_test", "start", "end", "y", "Y_test", "start", "end", "keras", "NUMBER", "backend", "NUMBER", "learning_phase", "NUMBER", "Despite", "only", "training", "the", "nnet", "for", "NUMBER", "epochs", "the", "results", "be", "promising", "NUMBER", "The", "adversarialy", "trained", "CIFAR", "NUMBER", "model", "performs", "as", "well", "as", "the", "non", "adversarialy", "trained", "CIFAR", "NUMBER", "model", "about", "NUMBER", "accuracy", "after", "NUMBER", "epochs", "however", "test", "accuracy", "on", "adversarial", "examples", "be", "about", "NUMBER", "for", "the", "adversarialy", "trained", "CIFAR", "NUMBER", "model", "as", "oppose", "to", "a", "test", "accuracy", "of", "NUMBER", "for", "the", "non", "adversarialy", "trained", "CIFAR", "NUMBER", "model", "NUMBER", "If", "this", "be", "useful", "definitely", "let", "me", "know", "I", "d", "love", "to", "implement", "the", "other", "attacks", "for", "cifar", "NUMBER", "and", "perhaps", "refactor", "NUMBER", "I", "d", "also", "love", "to", "train", "the", "model", "for", "longer", "than", "NUMBER", "epochs", "NUMBER", "I", "ll", "run", "some", "additional", "test", "and", "report", "the", "results", "NUMBER", "For", "future", "reference", "you", "should", "write", "to", "cleverhans", "dev", "googlegroups", "NUMBER", "com", "before", "starting", "a", "new", "feature", "to", "make", "sure", "no", "one", "else", "be", "doing", "the", "same", "thing", "etc", "NUMBER", "Thanks", "for", "your", "help", "fix", "this", "npapernot", "And", "I", "will", "going", "forward", "goodfeli", "thanks", "When", "run", "JSMA", "fix", "a", "bug", "where", "if", "the", "set", "of", "changable", "features", "be", "odd", "then", "it", "will", "crash", "if", "no", "solution", "be", "find", "instead", "of", "returning", "failure", "NUMBER", "This", "be", "triggered", "because", "JSMA", "assumes", "there", "be", "at", "least", "two", "pixels", "that", "can", "be", "change", "at", "any", "point", "in", "time", "NUMBER", "If", "there", "be", "only", "one", "things", "go", "bad", "NUMBER", "I", "think", "this", "might", "not", "get", "review", "until", "next", "week", "NUMBER", "I", "don", "t", "use", "this", "particular", "part", "of", "the", "codebase", "NUMBER", "npapernot", "would", "be", "a", "good", "reviewer", "but", "he", "be", "on", "vacation", "until", "Monday", "NUMBER", "Instead", "of", "computing", "saliency", "map", "in", "python", "with", "Pool", "NUMBER", "map", "use", "efficient", "numpy", "operations", "NUMBER", "This", "gives", "a", "speedup", "of", "NUMBER", "x", "on", "MNIST", "CIFAR", "test", "use", "only", "a", "single", "thread", "NUMBER", "Not", "sure", "why", "that", "test", "fail", "NUMBER", "Also", "you", "may", "want", "to", "hold", "off", "on", "merge", "this", "in", "NUMBER", "This", "commit", "and", "the", "exist", "code", "before", "it", "both", "assume", "that", "the", "NUMBER", "dimensional", "matrix", "can", "fit", "in", "memory", "which", "be", "not", "the", "case", "on", "ImageNet", "NUMBER", "x", "NUMBER", "x", "NUMBER", "Inception", "would", "require", "NUMBER", "GB", "of", "RAM", "NUMBER", "I", "have", "code", "to", "take", "care", "of", "this", "that", "I", "can", "make", "compatible", "with", "cleverhans", "NUMBER", "I", "ll", "make", "the", "change", "early", "next", "week", "Oakland", "camera", "ready", "be", "Monday", "hence", "the", "PRs", "NUMBER", "Duplicate", "of", "NUMBER", "write", "two", "conditions", "to", "actually", "check", "the", "viz_enabled", "flag", "as", "well", "as", "adjusted", "the", "first", "print", "statement", "that", "shows", "how", "many", "adversarial", "examples", "will", "be", "crafted", "to", "the", "correct", "value", "we", "don", "t", "create", "an", "adversarial", "example", "for", "the", "source", "class", "so", "just", "had", "to", "subtract", "NUMBER", "I", "ll", "leave", "this", "for", "someone", "who", "uses", "JSMA", "to", "review", "Adds", "two", "visualizations", "side", "by", "side", "which", "shows", "the", "original", "image", "the", "peterbations", "then", "the", "adversarial", "example", "and", "grid", "which", "gives", "a", "NUMBER", "x", "NUMBER", "grid", "showing", "originals", "down", "the", "diagonal", "same", "viz", "NUMBER", "use", "in", "Papernot", "s", "DL", "limitations", "paper", "NUMBER", "Also", "add", "proper", "useage", "of", "both", "visualizations", "in", "mnist", "jsma", "tutorial", "NUMBER", "To", "make", "it", "easier", "for", "new", "users", "I", "also", "add", "a", "couple", "flags", "in", "the", "tutorial", "to", "control", "if", "visualizations", "be", "rendered", "or", "not", "also", "for", "the", "best", "visualization", "I", "made", "the", "default", "number", "of", "test", "set", "examples", "to", "NUMBER", "so", "that", "the", "grid", "be", "nearly", "complete", "NUMBER", "I", "only", "say", "nearly", "because", "the", "first", "NUMBER", "samples", "be", "not", "unique", "NUMBER", "Committer", "Ryan", "Sheatsley", "TAG", "close", "NUMBER", "I", "think", "it", "would", "be", "good", "to", "add", "a", "test", "of", "each", "value", "of", "ord", "NUMBER", "A", "simple", "enough", "test", "might", "pass", "on", "travis", "since", "we", "don", "t", "know", "what", "it", "be", "make", "the", "mnist", "accuracy", "test", "get", "low", "accuracy", "NUMBER", "I", "won", "t", "insist", "on", "change", "the", "name", "interface", "but", "have", "you", "given", "some", "thought", "as", "to", "whether", "it", "makes", "sense", "to", "still", "call", "this", "fgsm", "when", "ord", "be", "anything", "other", "than", "np", "NUMBER", "inf", "The", "s", "in", "fgsm", "be", "for", "sign", "and", "we", "take", "the", "sign", "only", "if", "we", "be", "use", "the", "max", "norm", "NUMBER", "Fixes", "NUMBER", "Tested", "Ran", "test", "and", "tutorials", "to", "check", "backwards", "compatibility", "test", "test_mnist_accuracy", "NUMBER", "sh", "test", "test_mnist_accuracy_th", "NUMBER", "sh", "python", "tutorials", "mnist_tutorial_tf", "NUMBER", "py", "python", "tutorials", "mnist_tutorial_th", "NUMBER", "py", "Modified", "tutorials", "mnist_tutorial_tf", "NUMBER", "py", "Remove", "batch_size", "nb_epochs", "learning_rate", "flags", "Modify", "model_train", "model_eval", "calls", "args", "batch_size", "NUMBER", "nb_epochs", "NUMBER", "learning_rate", "NUMBER", "model_train", "NUMBER", "args", "args", "NUMBER", "model_eval", "NUMBER", "args", "args", "Changes", "Added", "backwards", "compatible", "argument", "wrappers", "Added", "args", "parameter", "to", "TF", "utils", "function", "Fixed", "a", "bug", "with", "mutable", "default", "parameter", "value", "Standardized", "args", "in", "TF", "and", "theano", "utils", "Note", "that", "this", "produces", "warnings", "like", "this", "one", "UserWarning", "Setting", "parameters", "batch_size", "from", "TensorFlow", "FLAGS", "be", "deprecate", "NUMBER", "I", "be", "not", "sure", "if", "the", "following", "should", "go", "in", "this", "PR", "Add", "unit", "test", "NUMBER", "Requires", "setting", "up", "unit", "test", "NUMBER", "NUMBER", "Rewrite", "TF", "tutorials", "and", "test", "to", "set", "the", "args", "explicitly", "NUMBER", "This", "may", "be", "a", "good", "place", "to", "change", "the", "args", "name", "both", "in", "TF", "and", "Theano", "utils", "to", "something", "like", "training_params", "Hi", "npapernot", "The", "tutorial", "seems", "to", "be", "fine", "NUMBER", "This", "be", "what", "I", "get", "X_train", "shape", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "train", "samples", "NUMBER", "test", "samples", "Preparing", "the", "black", "box", "model", "NUMBER", "Defined", "TensorFlow", "model", "graph", "NUMBER", "home", "bogdan", "Workspace", "cleverhans", "cleverhans", "utils_tf", "NUMBER", "py", "NUMBER", "UserWarning", "Setting", "parameters", "learning_rate", "from", "TensorFlow", "FLAGS", "be", "deprecate", "NUMBER", "deprecate", "NUMBER", "NUMBER", "format", "name", "home", "bogdan", "Workspace", "cleverhans", "cleverhans", "utils_tf", "NUMBER", "py", "NUMBER", "UserWarning", "Setting", "parameters", "nb_epochs", "from", "TensorFlow", "FLAGS", "be", "deprecate", "NUMBER", "deprecate", "NUMBER", "NUMBER", "format", "name", "home", "bogdan", "Workspace", "cleverhans", "cleverhans", "utils_tf", "NUMBER", "py", "NUMBER", "UserWarning", "Setting", "parameters", "batch_size", "from", "TensorFlow", "FLAGS", "be", "deprecate", "NUMBER", "deprecate", "NUMBER", "NUMBER", "format", "name", "Completed", "model", "training", "NUMBER", "Test", "accuracy", "of", "black", "box", "on", "legitimate", "test", "examples", "NUMBER", "Training", "the", "substitute", "model", "NUMBER", "Defined", "TensorFlow", "model", "graph", "for", "the", "substitute", "NUMBER", "Substitute", "training", "epoch", "NUMBER", "Completed", "model", "training", "NUMBER", "Augmenting", "substitute", "training", "data", "NUMBER", "Labeling", "substitute", "training", "data", "NUMBER", "Substitute", "training", "epoch", "NUMBER", "Completed", "model", "training", "NUMBER", "Augmenting", "substitute", "training", "data", "NUMBER", "Labeling", "substitute", "training", "data", "NUMBER", "Substitute", "training", "epoch", "NUMBER", "Completed", "model", "training", "NUMBER", "Augmenting", "substitute", "training", "data", "NUMBER", "Labeling", "substitute", "training", "data", "NUMBER", "Substitute", "training", "epoch", "NUMBER", "Completed", "model", "training", "NUMBER", "Augmenting", "substitute", "training", "data", "NUMBER", "Labeling", "substitute", "training", "data", "NUMBER", "Substitute", "training", "epoch", "NUMBER", "Completed", "model", "training", "NUMBER", "Augmenting", "substitute", "training", "data", "NUMBER", "Labeling", "substitute", "training", "data", "NUMBER", "Substitute", "training", "epoch", "NUMBER", "Completed", "model", "training", "NUMBER", "Test", "accuracy", "of", "oracle", "on", "adversarial", "examples", "generate", "use", "the", "substitute", "NUMBER", "The", "warnings", "be", "expected", "NUMBER", "As", "I", "mention", "I", "be", "not", "sure", "if", "rewriting", "TF", "tutorials", "and", "test", "to", "set", "the", "args", "explicitly", "should", "go", "in", "this", "PR", "NUMBER", "I", "can", "do", "it", "here", "though", "NUMBER", "Looks", "good", "to", "me", "thanks", "Looks", "good", "to", "merge", "once", "the", "pep", "NUMBER", "test", "runs", "Implemented", "the", "basic", "iterative", "method", "iterative", "version", "of", "FGSM", "as", "per", "Kurakin", "et", "al", "NUMBER", "NUMBER", "NUMBER", "This", "required", "that", "I", "add", "an", "option", "in", "FGSM", "for", "y", "the", "placeholder", "for", "the", "actual", "labels", "NUMBER", "Using", "the", "model", "predictions", "as", "the", "labels", "do", "not", "work", "for", "the", "iterative", "method", "NUMBER", "Should", "have", "test", "maybe", "test", "that", "it", "achieves", "some", "error", "rate", "for", "a", "basic", "reference", "model", "Re", "the", "name", "of", "the", "pull", "request", "should", "this", "be", "change", "to", "new", "Attack", "interface", "or", "something", "The", "actual", "diff", "of", "the", "code", "doesn", "t", "include", "the", "word", "iterative", "anywhere", "generate_numpy", "could", "cache", "the", "graph", "from", "the", "first", "call", "rather", "than", "become", "disabled", "On", "Mon", "Mar", "NUMBER", "NUMBER", "at", "NUMBER", "NUMBER", "PM", "Nicolas", "Papernot", "TAG", "write", "npapernot", "commented", "on", "this", "pull", "request", "NUMBER", "In", "cleverhans", "attacks", "NUMBER", "py", "TAG", "from", "NUMBER", "utils", "import", "random_targets", "class", "Attack", "Abstract", "base", "class", "for", "all", "attack", "classes", "NUMBER", "All", "attacks", "must", "override", "the", "craft", "method", "that", "returns", "adversarial", "examples", "corresponding", "to", "the", "input", "data", "NUMBER", "However", "the", "generate_symbolic", "method", "be", "optional", "NUMBER", "__metaclass__", "ABCMeta", "def", "__init__", "self", "x", "pred", "back", "tf", "sess", "None", "clip_min", "None", "clip_max", "None", "params", "param", "x", "The", "model", "s", "symbolic", "inputs", "NUMBER", "We", "can", "have", "the", "generate_numpy", "call", "generate", "once", "and", "keep", "track", "of", "the", "fact", "that", "it", "has", "call", "generate", "We", "d", "have", "to", "disable", "generate_numpy", "if", "the", "user", "call", "generate", "more", "than", "once", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "Sent", "from", "Gmail", "Mobile", "Are", "there", "any", "outlying", "tasks", "Can", "I", "help", "Yes", "we", "need", "to", "make", "small", "change", "to", "the", "iterative", "FGM", "to", "address", "the", "remaining", "comments", "I", "just", "looked", "through", "the", "code", "a", "lot", "has", "change", "since", "I", "last", "contributed", "to", "the", "fork", "NUMBER", "I", "be", "confused", "about", "this", "new", "model", "parameter", "that", "be", "handed", "to", "the", "__init__", "function", "NUMBER", "Is", "this", "going", "to", "require", "use", "Keras", "Yes", "users", "can", "write", "their", "own", "TF", "model", "constructor", "function", "and", "pass", "those", "as", "callables", "but", "that", "seems", "like", "a", "lot", "of", "complexity", "add", "to", "the", "user", "side", "of", "things", "NUMBER", "The", "only", "time", "that", "I", "see", "this", "parameter", "be", "necessary", "be", "to", "compute", "a", "symbolic", "version", "of", "the", "BasicIterativeMethod", "attack", "NUMBER", "But", "recall", "that", "for", "the", "numeric", "version", "model", "callable", "was", "not", "required", "we", "could", "simply", "revert", "to", "the", "numeric", "version", "that", "we", "had", "before", "and", "use", "tf", "NUMBER", "py_func", "to", "get", "a", "symbolic", "version", "NUMBER", "Also", "we", "should", "address", "the", "fact", "that", "in", "the", "parent", "class", "generate", "and", "generate_np", "would", "get", "stuck", "in", "an", "infinite", "loop", "of", "calling", "each", "other", "back", "and", "forth", "NUMBER", "Remaining", "potential", "infinite", "loop", "between", "generate", "and", "generate_np", "fix", "Travis", "test", "fail", "because", "of", "matplotlib", "Qt", "Addressing", "issue", "NUMBER", "by", "make", "jsma_tf", "attack", "generalized", "to", "accept", "data", "of", "any", "shape", "NUMBER", "We", "should", "eventually", "write", "a", "new", "tutorial", "for", "data", "of", "some", "other", "shape", "maybe", "CIFAR", "NUMBER", "I", "have", "test", "this", "on", "data", "of", "different", "shapes", "NUMBER", "Apologies", "I", "will", "follow", "this", "new", "req", "in", "the", "future", "NUMBER", "The", "while", "statement", "in", "NUMBER", "NUMBER", "should", "also", "be", "adjusted", "so", "that", "the", "and", "comes", "before", "the", "line", "break", "NUMBER", "Theano", "implementation", "of", "L", "NUMBER", "attack", "from", "Carlini", "et", "al", "NUMBER", "NUMBER", "This", "attack", "be", "slower", "than", "FGSM", "but", "produces", "good", "looking", "examples", "with", "high", "success", "rate", "NUMBER", "Adam", "optimizer", "be", "also", "add", "for", "the", "algorithm", "NUMBER", "See", "LINK", "for", "other", "details", "NUMBER", "Needs", "test", "NUMBER", "good", "idea", "This", "pull", "request", "should", "be", "merge", "after", "LINK", "Closes", "NUMBER", "Closes", "NUMBER", "The", "exist", "test", "use", "code", "duplication", "rather", "than", "calling", "the", "main", "function", "of", "the", "tutorial", "so", "they", "need", "to", "be", "independently", "maintained", "No", "this", "isn", "t", "close", "NUMBER", "A", "way", "of", "rephrasing", "this", "issue", "be", "if", "I", "put", "assert", "False", "in", "the", "first", "line", "of", "mnist_tutorial_tf", "NUMBER", "py", "the", "Travis", "build", "should", "fail", "Dear", "goodfeli", "I", "find", "the", "line", "NUMBER", "of", "utils_tf", "NUMBER", "py", "acc_value", "tf", "NUMBER", "reduce_mean", "keras", "NUMBER", "metrics", "NUMBER", "categorical_accuracy", "y", "model", "should", "be", "change", "to", "acc_value", "tf", "NUMBER", "reduce_mean", "tf", "NUMBER", "cast", "keras", "NUMBER", "metrics", "NUMBER", "categorical_accuracy", "y", "model", "float", "NUMBER", "Thanks", "for", "your", "team", "and", "projects", "NUMBER", "Closed", "by", "NUMBER", "NUMBER", "NUMBER", "ian", "NUMBER", "cleverhans", "tutorials", "KERAS_BACKEND", "theano", "python", "mnist_tutorial_th", "NUMBER", "py", "Using", "Theano", "backend", "NUMBER", "INFO", "NUMBER", "keras", "keras", "NUMBER", "json", "sets", "image_dim_ordering", "to", "tf", "temporarily", "setting", "to", "th", "X_train", "shape", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "train", "samples", "NUMBER", "test", "samples", "Loaded", "MNIST", "test", "data", "NUMBER", "Defined", "Theano", "model", "graph", "NUMBER", "Starting", "model", "training", "use", "Theano", "NUMBER", "Defined", "optimizer", "NUMBER", "Epoch", "NUMBER", "Epoch", "took", "NUMBER", "seconds", "mahnerak", "do", "you", "know", "what", "could", "be", "going", "on", "For", "me", "it", "takes", "about", "NUMBER", "seconds", "per", "epoch", "NUMBER", "GTX", "NUMBER", "with", "cuDNN", "enable", "It", "seems", "like", "your", "GPU", "device", "be", "not", "enable", "for", "theano", "NUMBER", "By", "default", "you", "can", "see", "Using", "gpu", "device", "NUMBER", "GeForce", "GTX", "NUMBER", "CNMeM", "be", "disabled", "cuDNN", "NUMBER", "if", "you", "re", "run", "it", "on", "a", "GPU", "NUMBER", "In", "order", "to", "enable", "GPU", "support", "add", "these", "lines", "to", "NUMBER", "eanorc", "file", "in", "your", "home", "directory", "NUMBER", "global", "device", "gpu", "NUMBER", "Completed", "model", "training", "NUMBER", "Traceback", "most", "recent", "call", "last", "File", "test_mnist_accuracy", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "app", "NUMBER", "run", "File", "home", "mahnerak", "NUMBER", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "platform", "app", "NUMBER", "py", "line", "NUMBER", "in", "run", "_sys", "NUMBER", "exit", "main", "_sys", "NUMBER", "argv", "NUMBER", "flags_passthrough", "File", "test_mnist_accuracy", "NUMBER", "py", "line", "NUMBER", "in", "main", "assert", "float", "accuracy", "NUMBER", "accuracy", "AssertionError", "NUMBER", "It", "just", "pass", "three", "times", "in", "a", "row", "for", "me", "NUMBER", "Could", "it", "be", "flaky", "If", "you", "re", "run", "it", "do", "it", "still", "fail", "Are", "you", "run", "from", "a", "clean", "copy", "of", "the", "master", "branch", "What", "version", "of", "keras", "and", "tensorflow", "be", "you", "use", "Tried", "just", "now", "NUMBER", "Failed", "NUMBER", "times", "in", "a", "row", "NUMBER", "For", "each", "run", "get", "NUMBER", "accuracy", "NUMBER", "Running", "from", "clean", "copy", "current", "version", "of", "the", "master", "branch", "TensorFlow", "v", "NUMBER", "Keras", "v", "NUMBER", "One", "more", "thing", "NUMBER", "I", "notice", "that", "Adadelta", "from", "TensorFlow", "behaves", "different", "than", "implementations", "find", "in", "Keras", "and", "Lasagne", "Theano", "version", "when", "I", "was", "implement", "theano", "version", "of", "FGSM", "NUMBER", "Then", "I", "run", "Keras", "version", "of", "Adadelta", "on", "TensorFlow", "and", "its", "results", "were", "also", "different", "than", "the", "ones", "from", "TensorFlow", "s", "default", "Adadelta", "NUMBER", "It", "was", "a", "bit", "confusing", "NUMBER", "Today", "I", "update", "TensorFlow", "and", "its", "Adadelta", "behaves", "like", "the", "other", "implementations", "NUMBER", "mahnerak", "be", "there", "a", "NUMBER", "digit", "to", "your", "tensorflow", "version", "I", "be", "also", "run", "keras", "NUMBER", "My", "tensorflow", "be", "NUMBER", "Have", "you", "checked", "cleverhans", "NUMBER", "__file__", "to", "make", "sure", "your", "PYTHONPATH", "be", "set", "correctly", "and", "that", "you", "be", "in", "fact", "importing", "the", "clean", "unmodified", "master", "branch", "npapernot", "what", "be", "your", "version", "TensorFlow", "version", "be", "NUMBER", "head", "compiled", "from", "sources", "today", "NUMBER", "Checked", "PYTHONPATH", "again", "it", "s", "set", "correct", "NUMBER", "I", "ll", "try", "to", "do", "clean", "install", "tensorflow", "with", "prebuild", "binaries", "and", "keras", "on", "another", "machine", "and", "run", "the", "test", "NUMBER", "It", "s", "possible", "tensorflow", "NUMBER", "head", "be", "broken", "NUMBER", "I", "suggest", "checking", "cleverhans", "NUMBER", "__file__", "rather", "than", "checking", "PYTHONPATH", "NUMBER", "Installed", "NUMBER", "from", "prebuilt", "binaries", "NUMBER", "Tests", "be", "passing", "now", "NUMBER", "mahnerak", "I", "would", "suggest", "report", "this", "on", "the", "tensorflow", "repository", "issue", "tracker", "if", "you", "haven", "t", "already", "Yes", "I", "d", "like", "to", "keep", "that", "open", "until", "we", "have", "more", "unit", "test", "for", "the", "JSMA", "and", "other", "attacks", "and", "rely", "less", "on", "the", "somewhat", "flaky", "tutorial", "test", "NUMBER", "Does", "that", "sound", "right", "Yes", "correct", "I", "ll", "edit", "NUMBER", "batch_eval", "in", "utils_th", "LINK", "_th", "NUMBER", "py", "L", "NUMBER", "throw", "an", "error", "if", "computation", "graph", "doesn", "t", "use", "learning_phase", "NUMBER", "Way", "to", "fix", "that", "would", "be", "to", "add", "on_unused_input", "ignore", "to", "argument", "of", "theano", "NUMBER", "function", "call", "NUMBER", "Will", "do", "But", "after", "ICLR", "workshop", "deadline", "Sorry", "Will", "look", "into", "it", "this", "weekend", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "NUMBER", "GMT", "NUMBER", "NUMBER", "Nicolas", "Papernot", "TAG", "kudkudak", "TAG", "anything", "new", "regard", "this", "issue", "You", "be", "receiving", "this", "because", "you", "were", "mention", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "TAG", "or", "mute", "the", "thread", "TAG", "NUMBER", "In", "newer", "Keras", "default", "dim", "ordering", "was", "switched", "from", "th", "to", "tf", "IMHO", "there", "might", "be", "a", "couple", "of", "improvement", "over", "the", "JSMA", "API", "NUMBER", "NUMBER", "increase", "and", "theta", "be", "duplicates", "NUMBER", "increase", "True", "TAG", "theta", "x", "increase", "False", "TAG", "theta", "x", "NUMBER", "jacobian_graph", "be", "like", "a", "loose", "ends", "to", "me", "NUMBER", "I", "think", "the", "gradients", "should", "be", "calculated", "internally", "in", "the", "JSMA", "function", "it", "be", "at", "least", "to", "me", "counter", "intuitive", "to", "call", "some", "random", "function", "before", "calling", "the", "jsma", "NUMBER", "Actually", "TF", "provides", "a", "tf", "NUMBER", "while_loop", "LINK", "_docs", "python", "control_flow_ops", "control_flow_operations", "while_loop", "to", "achieve", "this", "NUMBER", "I", "have", "an", "example", "implementation", "of", "JSMA", "with", "tf", "NUMBER", "while_loop", "please", "see", "here", "LINK", "adversarial", "blob", "master", "attacks", "jsma", "NUMBER", "py", "L", "NUMBER", "NUMBER", "NUMBER", "Separate", "attacks", "modules", "for", "Tensor", "and", "Theano", "NUMBER", "Theano", "implementation", "of", "FGSM", "NUMBER", "New", "tutorial", "for", "FGSM", "in", "Theano", "Next", "steps", "would", "be", "Remove", "Keras", "dependency", "in", "JSMA", "implementation", "Move", "present", "JSMA", "implementation", "to", "attacks_tf", "Implement", "JSMA", "in", "Theano", "Implement", "more", "attacks", "Could", "you", "make", "a", "test_mnist_accuracy_th", "or", "similar", "This", "looks", "like", "a", "lot", "of", "new", "code", "without", "new", "test", "to", "accompany", "it", "NUMBER", "Otherwise", "looks", "like", "basically", "the", "right", "direction", "thanks", "I", "m", "work", "on", "this", "right", "now", "theano", "and", "TF", "results", "be", "different", "now", "probably", "because", "of", "different", "initializations", "test", "test_mnist_accuracy_th", "NUMBER", "py", "be", "provide", "NUMBER", "It", "test", "not", "only", "the", "accuracy", "of", "trained", "MNIST", "model", "but", "also", "accuracy", "of", "the", "same", "model", "on", "the", "crafted", "adversarial", "examples", "NUMBER", "There", "be", "NUMBER", "important", "change", "here", "NUMBER", "Updated", "code", "style", "so", "that", "FGSM", "be", "consistent", "with", "JSMA", "NUMBER", "Both", "attacks", "should", "return", "a", "numpy", "array", "with", "the", "adversarial", "sample", "s", "NUMBER", "Previously", "FGSM", "returned", "a", "symbolic", "tensor", "that", "needed", "to", "be", "evaluated", "NUMBER", "NUMBER", "Improved", "general", "code", "style", "user", "should", "not", "have", "to", "define", "TF", "placeholders", "when", "unnecessary", "NUMBER", "NUMBER", "Fixed", "FGSM", "algorithm", "the", "adversary", "knows", "the", "_correct_", "label", "for", "each", "sample", "they", "be", "trying", "to", "perturb", "thus", "GT", "labels", "should", "be", "use", "to", "compute", "model", "loss", "not", "model", "predictions", "NUMBER", "In", "the", "MNIST", "case", "this", "was", "a", "minor", "discrepancy", "model", "achieves", "NUMBER", "accuracy", "so", "predictions", "and", "GT", "labels", "be", "roughly", "equivalent", "but", "for", "other", "models", "this", "be", "more", "important", "NUMBER", "importing", "attacks", "inside", "utils_tf", "do", "not", "seem", "to", "be", "a", "good", "idea", "NUMBER", "These", "be", "just", "my", "suggestions", "and", "they", "don", "t", "need", "to", "be", "merge", "if", "they", "don", "t", "seem", "right", "NUMBER", "I", "think", "the", "first", "point", "be", "pretty", "good", "attacks", "should", "have", "similar", "interfaces", "NUMBER", "in", "case", "one", "wants", "to", "use", "multiple", "attacks", "in", "the", "same", "code", "I", "just", "read", "through", "the", "paper", "about", "label", "leaking", "and", "I", "understand", "the", "phenomenon", "now", "thanks", "NUMBER", "I", "think", "it", "s", "important", "to", "have", "both", "options", "implement", "because", "some", "people", "might", "not", "be", "doing", "adversarial", "training", "but", "solely", "use", "FGSM", "to", "craft", "adversarial", "samples", "NUMBER", "Yes", "attacks", "probably", "should", "have", "similar", "interfaces", "NUMBER", "We", "re", "about", "to", "make", "a", "change", "soon", "to", "accommodate", "iterative", "attacks", "NUMBER", "I", "don", "t", "want", "to", "do", "numeric", "and", "symbolic", "version", "of", "every", "attack", "NUMBER", "Just", "symbolic", "with", "no", "_symbolic", "prefix", "NUMBER", "Some", "of", "the", "other", "things", "in", "this", "PR", "make", "sense", "but", "I", "wouldn", "t", "want", "to", "merge", "the", "part", "that", "turns", "exist", "symbolic", "attacks", "numeric", "NUMBER", "goodfeli", "that", "s", "fine", "I", "understand", "your", "concern", "NUMBER", "I", "would", "just", "say", "that", "if", "you", "be", "hoping", "to", "have", "a", "similar", "interface", "for", "every", "attack", "and", "you", "re", "planning", "to", "keep", "FGSM", "symbolic", "only", "you", "d", "need", "to", "somehow", "alter", "JSMA", "so", "that", "it", "returns", "a", "symbolic", "tensor", "NUMBER", "I", "authored", "a", "portion", "of", "the", "JSMA", "code", "and", "I", "m", "not", "sure", "I", "can", "see", "how", "that", "would", "be", "do", "at", "the", "moment", "while", "retaining", "computational", "efficiency", "NUMBER", "Yes", "I", "think", "we", "can", "close", "this", "PR", "and", "follow", "up", "on", "a", "and", "b", "separately", "NUMBER", "I", "read", "through", "Alex", "s", "message", "on", "the", "dev", "group", "including", "his", "linked", "Google", "doc", "and", "while", "he", "mentions", "that", "he", "would", "help", "rewrite", "JSMA", "I", "didn", "t", "see", "any", "details", "NUMBER", "But", "I", "await", "eagerly", "to", "see", "what", "he", "comes", "up", "with", "NUMBER", "Should", "we", "just", "say", "to", "use", "PEP", "NUMBER", "instead", "of", "make", "a", "cleverhans", "specific", "style", "guide", "Agreed", "that", "this", "be", "important", "NUMBER", "FGSM", "works", "for", "any", "input", "shape", "but", "JSMA", "be", "only", "for", "image", "data", "with", "shape", "n_samples", "NUMBER", "n_rows", "n_cols", "NUMBER", "This", "be", "not", "very", "well", "generalized", "because", "it", "only", "works", "for", "black", "and", "white", "images", "NUMBER", "We", "should", "update", "to", "work", "with", "color", "images", "and", "with", "flat", "vector", "data", "NUMBER", "I", "can", "help", "NUMBER", "We", "should", "do", "a", "new", "release", "with", "a", "major", "version", "increment", "because", "of", "NUMBER", "NUMBER", "Because", "the", "loss", "was", "use", "as", "part", "of", "the", "attacks", "this", "bug", "made", "the", "attacks", "appear", "too", "weak", "NUMBER", "Yes", "I", "think", "so", "NUMBER", "Also", "I", "find", "another", "bug", "in", "the", "evaluation", "metric", "NUMBER", "Sending", "a", "pull", "request", "in", "a", "few", "minutes", "NUMBER", "So", "we", "can", "bundle", "all", "of", "that", "into", "one", "update", "NUMBER", "It", "can", "compute", "one", "adversarial", "sample", "at", "a", "time", "NUMBER", "I", "ve", "also", "include", "a", "new", "script", "in", "tutorials", "showing", "how", "to", "use", "my", "code", "NUMBER", "Right", "now", "the", "algorithm", "be", "rather", "slow", "for", "computing", "adversarial", "samples", "but", "it", "seems", "to", "get", "the", "job", "do", "well", "NUMBER", "Not", "a", "big", "deal", "NUMBER", "But", "it", "looks", "much", "cleaner", "NUMBER", "I", "prefer", "the", "exist", "version", "because", "it", "s", "more", "explicit", "about", "what", "be", "going", "on", "and", "contains", "a", "comment", "explaining", "a", "possibly", "non", "intuitive", "behavior", "NUMBER", "so", "that", "the", "code", "blocks", "be", "properly", "highlight", "NUMBER", "Your", "be", "welcome", "Thanks", "for", "merge", "NUMBER", "Ge", "On", "Friday", "October", "NUMBER", "NUMBER", "Nicolas", "Papernot", "notifications", "github", "NUMBER", "com", "write", "LGTM", "thanks", "for", "the", "edits", "You", "be", "receiving", "this", "because", "you", "authored", "the", "thread", "NUMBER", "Reply", "to", "this", "email", "directly", "view", "it", "on", "GitHub", "LINK", "issuecomment", "NUMBER", "or", "mute", "the", "thread", "LINK", "auth", "AAme", "NUMBER", "mbt", "NUMBER", "mNw", "NUMBER", "XvxH", "NUMBER", "AUyde", "NUMBER", "hzUiks", "NUMBER", "qz", "YogaJpZM", "NUMBER", "KVOIZ", "NUMBER", "Does", "MILA", "labs", "fuel", "already", "provide", "something", "like", "this", "dwf", "Does", "keras", "provide", "anything", "similar", "For", "tensorflow", "implementations", "we", "probably", "want", "a", "queue", "op", "not", "a", "python", "iterator", "NUMBER", "For", "now", "I", "guess", "we", "have", "to", "run", "each", "of", "them", "manually", "We", "should", "either", "copy", "the", "docker", "setup", "from", "OpenAI", "Gym", "or", "the", "nose", "setup", "from", "Pylearn", "NUMBER", "vim", "be", "showing", "me", "red", "marks", "on", "indentations", "in", "test_mnist_accuracy", "NUMBER", "py", "NUMBER", "We", "should", "set", "up", "a", "standard", "way", "to", "configure", "our", "editors", "NUMBER", "The", "whitespace", "and", "a", "few", "uses", "of", "xrange", "have", "be", "what", "it", "took", "to", "make", "the", "tutorials", "work", "with", "python", "NUMBER", "If", "you", "be", "inclined", "to", "fix", "these", "I", "would", "prepare", "a", "pull", "request", "NUMBER", "This", "seems", "harmless", "but", "it", "be", "annoying", "NUMBER", "Not", "sure", "if", "we", "can", "fix", "it", "since", "it", "may", "be", "a", "bug", "in", "TensorFlow", "itself", "NUMBER", "At", "the", "end", "of", "the", "MNIST", "tutorial", "I", "get", "this", "error", "message", "Exception", "AttributeError", "AttributeError", "NoneType", "object", "has", "no", "attribute", "raise_exception_on_not_ok_status", "in", "TAG", "ignored", "I", "still", "get", "it", "consistently", "Completed", "model", "training", "NUMBER", "Exception", "ignored", "in", "TAG", "Traceback", "most", "recent", "call", "last", "File", "opt", "anaconda", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "__del__", "File", "opt", "anaconda", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "close", "File", "opt", "anaconda", "NUMBER", "lib", "python", "NUMBER", "contextlib", "NUMBER", "py", "line", "NUMBER", "in", "helper", "TypeError", "NoneType", "object", "be", "not", "callable", "Looks", "fix", "now", "maybe", "by", "update", "tensorflow", "to", "NUMBER", "It", "still", "happens", "it", "be", "just", "flaky", "NUMBER", "Out", "of", "three", "runs", "I", "had", "this", "happen", "once", "Completed", "model", "training", "NUMBER", "Exception", "ignored", "in", "TAG", "Traceback", "most", "recent", "call", "last", "File", "home", "ian", "NUMBER", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "__del__", "UnboundLocalError", "local", "variable", "status", "referenced", "before", "assignment", "I", "get", "the", "following", "message", "which", "be", "somehow", "relate", "Exception", "ignored", "in", "TAG", "Traceback", "most", "recent", "call", "last", "File", "data", "dgueraco", "tensorflow", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "__del__", "AttributeError", "NoneType", "object", "has", "no", "attribute", "TF_DeleteStatus", "Adding", "sess", "NUMBER", "close", "at", "the", "end", "of", "the", "tutorial", "seems", "to", "fix", "it", "NUMBER", "I", "don", "t", "get", "this", "error", "message", "anymore", "NUMBER", "Can", "re", "open", "if", "someone", "else", "do", "NUMBER", "I", "be", "get", "this", "error", "AttributeError", "NoneType", "object", "has", "no", "attribute", "TF_DeleteStatus", "when", "I", "run", "keras", "code", "Thanks", "for", "the", "report", "NUMBER", "Re", "open", "the", "issue", "NUMBER", "I", "be", "also", "periodically", "get", "a", "similar", "error", "at", "the", "end", "of", "my", "program", "when", "use", "Keras", "Exception", "ignored", "in", "TAG", "Traceback", "most", "recent", "call", "last", "File", "NUMBER", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "__del__", "TypeError", "NoneType", "object", "be", "not", "callable", "I", "m", "use", "Keras", "version", "NUMBER", "and", "Tensorflow", "version", "NUMBER", "I", "can", "see", "the", "issue", "in", "Tensorflow", "NUMBER", "dev", "NUMBER", "A", "recent", "Travis", "build", "for", "NUMBER", "Python", "NUMBER", "TensorFlow", "NUMBER", "turns", "up", "a", "similar", "error", "Exception", "AttributeError", "NoneType", "object", "has", "no", "attribute", "TF_NewStatus", "in", "TAG", "ignored", "It", "looks", "like", "the", "issue", "be", "well", "know", "here", "LINK", "I", "be", "also", "get", "this", "error", "Exception", "ignored", "in", "TAG", "Traceback", "most", "recent", "call", "last", "File", "venv", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "__del__", "TypeError", "NoneType", "object", "be", "not", "callable", "And", "the", "issue", "happened", "in", "the", "following", "session", "NUMBER", "py", "block", "def", "__del__", "self", "cleanly", "ignore", "all", "exception", "try", "self", "NUMBER", "close", "except", "Exception", "pylint", "disable", "broad", "except", "pass", "if", "self", "NUMBER", "_session", "be", "not", "None", "We", "create", "status", "outside", "the", "try", "block", "because", "at", "shutdown", "tf_session", "may", "have", "be", "garbage", "collected", "and", "the", "creation", "of", "a", "status", "object", "may", "fail", "NUMBER", "In", "that", "case", "we", "prefer", "to", "ignore", "the", "failure", "and", "silently", "leak", "the", "session", "object", "since", "the", "program", "be", "about", "to", "terminate", "NUMBER", "status", "None", "try", "status", "tf_session", "NUMBER", "TF_NewStatus", "the", "problem", "occur", "here", "if", "self", "NUMBER", "_created_with_new_api", "tf_session", "NUMBER", "TF_DeleteSession", "self", "NUMBER", "_session", "status", "else", "tf_session", "NUMBER", "TF_DeleteDeprecatedSession", "self", "NUMBER", "_session", "status", "except", "AttributeError", "NoneType", "object", "has", "no", "attribute", "TF_NewStatus", "pass", "finally", "if", "status", "be", "not", "None", "tf_session", "NUMBER", "TF_DeleteStatus", "status", "self", "NUMBER", "_session", "None", "I", "have", "get", "the", "some", "problem", "with", "Tensorflow", "Keras", "NUMBER", "Tensorflow", "NUMBER", "Keras", "NUMBER", "CTraceback", "most", "recent", "call", "last", "File", "main", "NUMBER", "py", "line", "NUMBER", "in", "TAG", "main", "File", "main", "NUMBER", "py", "line", "NUMBER", "in", "xxx", "p", "model", "NUMBER", "predict", "i", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "keras", "models", "NUMBER", "py", "line", "NUMBER", "in", "predict", "return", "self", "NUMBER", "model", "NUMBER", "predict", "x", "batch_size", "batch_size", "verbose", "verbose", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "keras", "engine", "training", "NUMBER", "py", "line", "NUMBER", "in", "predict", "batch_size", "batch_size", "verbose", "verbose", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "keras", "engine", "training", "NUMBER", "py", "line", "NUMBER", "in", "_predict_loop", "batch_outs", "f", "ins_batch", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "keras", "backend", "tensorflow_backend", "NUMBER", "py", "line", "NUMBER", "in", "__call__", "self", "NUMBER", "session_kwargs", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "run", "run_metadata_ptr", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_run", "feed_dict_tensor", "options", "run_metadata", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_do_run", "options", "run_metadata", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_do_call", "return", "fn", "args", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "_run_fn", "status", "run_metadata", "I", "be", "still", "get", "the", "same", "error", "with", "Tf", "NUMBER", "and", "Keras", "NUMBER", "TF", "NUMBER", "and", "Keras", "NUMBER", "here", "Though", "it", "do", "not", "seem", "to", "have", "any", "negative", "consequences", "do", "it", "It", "doesn", "t", "seem", "to", "have", "negative", "consequences", "besides", "an", "annoying", "amount", "of", "text", "NUMBER", "We", "don", "t", "need", "more", "report", "that", "it", "s", "happening", "here", "in", "the", "CleverHans", "repository", "NUMBER", "Feel", "free", "to", "comment", "on", "the", "open", "issue", "for", "TensorFlow", "LINK", "All", "we", "can", "do", "in", "CleverHans", "be", "wait", "for", "the", "source", "of", "the", "issue", "to", "be", "fix", "NUMBER", "goodfeli", "thanks", "for", "the", "response", "The", "only", "annoying", "issue", "be", "that", "I", "be", "trying", "to", "save", "the", "classification", "results", "in", "a", "csv", "file", "for", "some", "audio", "clips", "and", "it", "doesn", "t", "reach", "that", "line", "NUMBER", "However", "I", "get", "the", "results", "in", "the", "terminal", "NUMBER", "I", "figured", "I", "have", "to", "restart", "Atom", "in", "my", "case", "and", "open", "a", "new", "terminal", "to", "re", "run", "the", "code", "correctly", "If", "you", "re", "having", "trouble", "with", "code", "not", "executing", "open", "a", "new", "issue", "NUMBER", "This", "issue", "be", "just", "to", "track", "the", "weird", "error", "message", "which", "seems", "to", "originate", "external", "to", "CleverHans", "NUMBER", "get", "same", "kind", "of", "error", "with", "tensorflow", "NUMBER", "keras", "NUMBER", "Exception", "ignored", "in", "TAG", "Traceback", "most", "recent", "call", "last", "File", "usr", "local", "lib", "python", "NUMBER", "dist", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "__del__", "TypeError", "NoneType", "object", "be", "not", "callable", "Exception", "ignored", "in", "TAG", "Traceback", "most", "recent", "call", "last", "File", "home", "rps", "NUMBER", "local", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "__del__", "TypeError", "NoneType", "object", "be", "not", "callable", "Same", "error", "here", "NUMBER", "This", "happens", "to", "me", "ONLY", "when", "I", "run", "a", "script", "while", "the", "same", "script", "be", "already", "run", "NUMBER", "Keras", "NUMBER", "Tensorflow", "NUMBER", "I", "get", "the", "error", "once", "every", "three", "runs", "or", "so", "Tensorflow", "NUMBER", "Linux", "NUMBER", "This", "be", "the", "code", "a", "tf", "NUMBER", "get_variable", "a", "initializer", "NUMBER", "with", "tf", "NUMBER", "get_default_graph", "NUMBER", "gradient_override_map", "Round", "Identity", "x", "tf", "NUMBER", "round", "a", "g", "tf", "NUMBER", "gradients", "x", "a", "with", "tf", "NUMBER", "Session", "as", "sess", "sess", "NUMBER", "run", "tf", "NUMBER", "global_variables_initializer", "G", "sess", "NUMBER", "run", "g", "print", "G", "Sometimes", "error", "array", "NUMBER", "dtype", "float", "NUMBER", "Exception", "ignored", "in", "TAG", "Traceback", "most", "recent", "call", "last", "File", "user", "dlb", "virt_env_tf", "NUMBER", "_cpu", "lib", "python", "NUMBER", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "__del__", "TypeError", "NoneType", "object", "be", "not", "callable", "goodfeli", "shall", "we", "close", "this", "issue", "then", "Closing", "this", "issue", "because", "it", "be", "outside", "the", "domain", "of", "CleverHans", "NUMBER", "Here", "s", "the", "link", "to", "the", "open", "issue", "in", "Tensorflow", "LINK", "Exception", "ignored", "in", "TAG", "Traceback", "most", "recent", "call", "last", "File", "F", "DeepFaceLab", "_internal", "bin", "lib", "site", "package", "tensorflow", "python", "client", "session", "NUMBER", "py", "line", "NUMBER", "in", "__del__", "AttributeError", "NoneType", "object", "has", "no", "attribute", "raise_exception_on_not_ok_st", "atus", "same", "error", "NUMBER", "TF", "NUMBER", "keras", "NUMBER", "still", "not", "solve", "I", "think", "it", "would", "be", "best", "to", "raise", "an", "issue", "on", "the", "tensorflow", "tracker", "or", "to", "ping", "the", "exist", "issue", "LINK", "my", "last", "test", "show", "that", "be", "keras", "issue", "LINK", "team", "keras", "issue", "NUMBER", "with", "current", "model", "after", "NUMBER", "epochs", "of", "adversarial", "training", "clean", "accuracy", "should", "definitely", "be", "NUMBER", "or", "better", "adv", "accuracy", "should", "definitely", "be", "NUMBER", "or", "better", "NUMBER", "usually", "better", "than", "this", "but", "things", "aren", "t", "seeded", "so", "it", "fluctuates", "ideally", "we", "would", "only", "need", "keras", "for", "the", "tutorial", "so", "that", "people", "use", "other", "frameworks", "can", "run", "the", "benchmarks", "I", "think", "let", "s", "make", "sure", "people", "can", "import", "the", "attacks", "and", "run", "them", "without", "needing", "any", "particular", "framework", "NUMBER", "e", "NUMBER", "g", "NUMBER", "it", "should", "work", "if", "the", "user", "has", "only", "theano", "or", "if", "the", "user", "has", "only", "tensorflow", "NUMBER", "It", "s", "OK", "for", "the", "tutorial", "to", "use", "keras", "NUMBER", "should", "benchmark", "it", "and", "make", "sure", "the", "runtime", "be", "correct", "NUMBER", "without", "looking", "at", "the", "code", "I", "bet", "we", "re", "miss", "a", "stop_gradient", "somewhere", "NUMBER", "seconds", "per", "NUMBER", "batches", "for", "naive", "training", "NUMBER", "sec", "per", "NUMBER", "batches", "for", "adv", "training", "in", "pylearn", "NUMBER", "my", "result", "with", "adversarial", "training", "takes", "NUMBER", "sec", "per", "full", "epoch", "in", "pylearn", "NUMBER", "without", "adversarial", "training", "my", "code", "runs", "in", "NUMBER", "sec", "per", "full", "epoch", "naive", "training", "be", "forward", "back", "O", "NUMBER", "NUMBER", "adversarial", "training", "be", "forward", "back", "back", "with", "different", "target", "forward", "back", "so", "O", "NUMBER", "if", "no", "steps", "can", "be", "parallelized", "NUMBER", "So", "it", "should", "be", "roughly", "NUMBER", "X", "slower", "than", "naive", "training", "in", "theory", "NUMBER", "The", "pylearn", "NUMBER", "implementation", "be", "NUMBER", "X", "slower", "than", "naive", "training", "so", "apparently", "in", "practice", "we", "can", "expect", "some", "extra", "overhead", "NUMBER", "Doesn", "t", "explain", "why", "this", "be", "NUMBER", "X", "slower", "NUMBER", "whoa", "actually", "something", "be", "seriously", "weird", "NUMBER", "NUMBER", "NUMBER", "batches", "with", "adv", "training", "take", "NUMBER", "seconds", "NUMBER", "NUMBER", "batches", "take", "NUMBER", "seconds", "NUMBER", "NUMBER", "batches", "take", "NUMBER", "seconds", "I", "get", "something", "NUMBER", "Not", "sure", "why", "this", "would", "be", "I", "d", "expect", "something", "like", "NUMBER", "for", "such", "a", "large", "eps", "NUMBER", "oh", "maybe", "because", "it", "s", "a", "convolutional", "model", "NUMBER", "all", "my", "MNIST", "experiments", "in", "the", "past", "have", "be", "with", "fully", "connected", "models", "NUMBER", "OK", "this", "seems", "legit", "then", "NUMBER", "Interesting", "that", "convolution", "be", "so", "effective", "on", "MNIST", "NUMBER", "was", "i", "meant", "to", "need", "to", "set", "image", "order", "to", "th", "in", "NUMBER", "keras", "it", "s", "ok", "it", "just", "needs", "to", "be", "documented", "clearly", "maybe", "check", "it", "and", "raise", "a", "ValueError", "or", "something", "in", "the", "tutorial", "can", "the", "tutorial", "just", "override", "the", "keras", "settings", "to", "the", "ones", "that", "be", "needed", "for", "the", "tutorial"], "text_count": [0, 35768, 7565, 4129, 2425, 317, 3263, 19, 212, 3432, 4627, 12214, 4800, 2895, 3300, 1560, 0, 0, 0, 0, 10086, 3128, 1971, 895, 4638, 1588, 0, 0, 0, 0, 22901, 12272, 10837, 282, 6199, 1207, 0, 0, 0, 0, 31684, 144, 14567, 10633, 6629, 0, 0, 0, 0, 0, 8587, 2849, 5227, 1492, 2176, 1260, 2269, 0, 0, 0, 20945, 1464, 17157, 1302, 0, 0, 0, 0, 0, 0, 19474, 1904, 14541, 5143, 2592, 0, 0, 0, 0, 0, 35100, 17028, 2335, 14454, 1368, 1701, 0, 0, 0, 0, 1509, 6615, 735, 0, 0, 0, 0, 0, 0, 0, 28822, 3851, 18896, 6448, 0, 0, 0, 0, 0, 0, 59880, 107140, 1473, 3687, 2933, 1554, 0, 0, 0, 0, 141784, 264, 100564, 4512, 23197, 33361]}]